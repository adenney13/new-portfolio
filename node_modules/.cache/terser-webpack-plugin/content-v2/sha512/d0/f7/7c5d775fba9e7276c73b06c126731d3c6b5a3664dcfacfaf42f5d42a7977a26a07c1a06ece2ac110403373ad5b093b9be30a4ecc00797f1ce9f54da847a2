{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/aarondenney/work/work-portfolio-2/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/aarondenney/work/work-portfolio-2/node_modules/webpack/buildin/global.js\",\"/Users/aarondenney/work/work-portfolio-2/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/aarondenney/work/work-portfolio-2/node_modules/react-pdf/dist/pdf.worker.entry.js\",\"/Users/aarondenney/work/work-portfolio-2/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/aarondenney/work/work-portfolio-2/node_modules/pdfjs-dist/build/pdf.worker.js\",\"/Users/aarondenney/work/work-portfolio-2/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/aarondenney/work/work-portfolio-2/node_modules/buffer/index.js\",\"/Users/aarondenney/work/work-portfolio-2/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/aarondenney/work/work-portfolio-2/node_modules/base64-js/index.js\",\"/Users/aarondenney/work/work-portfolio-2/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/aarondenney/work/work-portfolio-2/node_modules/ieee754/index.js\",\"/Users/aarondenney/work/work-portfolio-2/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/aarondenney/work/work-portfolio-2/node_modules/isarray/index.js\",\"/Users/aarondenney/work/work-portfolio-2/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/aarondenney/work/work-portfolio-2/node_modules/process/browser.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"g\",\"this\",\"Function\",\"e\",\"window\",\"pdfjsWorker\",\"Buffer\",\"global\",\"process\",\"factory\",\"__w_pdfjs_require__\",\"pdfjsCoreWorker\",\"WorkerMessageHandler\",\"WorkerTask\",\"_regenerator\",\"_interopRequireDefault\",\"_util\",\"_pdf_manager\",\"_is_node\",\"_message_handler\",\"_primitives\",\"obj\",\"default\",\"_typeof\",\"iterator\",\"constructor\",\"_slicedToArray\",\"arr\",\"Array\",\"isArray\",\"_arrayWithHoles\",\"_arr\",\"_n\",\"_d\",\"_e\",\"undefined\",\"_s\",\"_i\",\"next\",\"done\",\"push\",\"length\",\"err\",\"_iterableToArrayLimit\",\"TypeError\",\"_nonIterableRest\",\"asyncGeneratorStep\",\"gen\",\"resolve\",\"reject\",\"_next\",\"_throw\",\"arg\",\"info\",\"error\",\"Promise\",\"then\",\"terminated\",\"_capability\",\"createPromiseCapability\",\"finished\",\"promise\",\"finish\",\"terminate\",\"ensureNotTerminated\",\"Error\",\"maybePort\",\"PDFWorkerStream\",\"msgHandler\",\"_msgHandler\",\"_contentLength\",\"_fullRequestReader\",\"_rangeRequestReaders\",\"PDFWorkerStreamReader\",\"_this\",\"_isRangeSupported\",\"_isStreamingSupported\",\"readableStream\",\"sendWithStream\",\"_reader\",\"getReader\",\"_headersReady\",\"sendWithPromise\",\"data\",\"isStreamingSupported\",\"isRangeSupported\",\"contentLength\",\"PDFWorkerStreamRangeReader\",\"begin\",\"end\",\"onProgress\",\"getFullReader\",\"assert\",\"getRangeReader\",\"reader\",\"cancelAllRequests\",\"reason\",\"cancel\",\"slice\",\"forEach\",\"headersReady\",\"read\",\"_ref\",\"buffer\",\"_ref2\",\"setup\",\"handler\",\"port\",\"testMessageProcessed\",\"on\",\"Uint8Array\",\"supportTransfers\",\"postMessageTransfers\",\"xhr\",\"XMLHttpRequest\",\"responseExists\",\"responseType\",\"send\",\"supportTypedArray\",\"setVerbosityLevel\",\"verbosity\",\"createDocumentHandler\",\"docParams\",\"pdfManager\",\"cancelXHRs\",\"WorkerTasks\",\"apiVersion\",\"concat\",\"docId\",\"docBaseUrl\",\"workerHandlerName\",\"MessageHandler\",\"startWorkerTask\",\"task\",\"finishWorkerTask\",\"indexOf\",\"splice\",\"loadDocument\",\"_x\",\"_loadDocument\",\"apply\",\"arguments\",\"fn\",\"mark\",\"_callee\",\"recoveryMode\",\"_ref6\",\"_ref7\",\"numPages\",\"fingerprint\",\"wrap\",\"_context\",\"prev\",\"ensureDoc\",\"all\",\"sent\",\"abrupt\",\"stop\",\"self\",\"args\",\"getPdfManager\",\"evaluatorOptions\",\"pdfManagerCapability\",\"source\",\"LocalPdfManager\",\"password\",\"ex\",\"pdfStream\",\"cachedChunks\",\"fullRequest\",\"disableAutoFetch\",\"NetworkPdfManager\",\"rangeChunkSize\",\"sendProgressiveData\",\"catch\",\"loaded\",\"readChunk\",\"chunk\",\"pdfFile\",\"arraysToBytes\",\"warn\",\"flushChunks\",\"arrayByteLength\",\"total\",\"Math\",\"max\",\"getPage\",\"pageIndex\",\"page\",\"ensure\",\"_ref3\",\"_ref4\",\"rotate\",\"ref\",\"userUnit\",\"view\",\"Ref\",\"num\",\"pdfDocument\",\"catalog\",\"getPageIndex\",\"ensureCatalog\",\"id\",\"requestLoadedStream\",\"onLoadedStream\",\"stream\",\"bytes\",\"xref\",\"stats\",\"_ref5\",\"intent\",\"getAnnotationsData\",\"pageNum\",\"start\",\"Date\",\"now\",\"getOperatorList\",\"renderInteractiveForms\",\"operatorList\",\"totalLength\",\"featureId\",\"UNSUPPORTED_FEATURES\",\"unknown\",\"wrappedException\",\"minimumStackMessage\",\"message\",\"stack\",\"toString\",\"sink\",\"onPull\",\"desiredSize\",\"onCancel\",\"extractTextContent\",\"normalizeWhitespace\",\"combineTextItems\",\"close\",\"fontFallback\",\"cleanup\",\"waitOn\",\"destroy\",\"onSuccess\",\"doc\",\"pdfInfo\",\"onFailure\",\"PasswordException\",\"code\",\"updatePassword\",\"pdfManagerReady\",\"boundException\",\"InvalidPDFException\",\"MissingPDFException\",\"UnexpectedResponseException\",\"UnknownErrorException\",\"XRefParseException\",\"forceDataSchema\",\"disableCreateObjectURL\",\"maxImageSize\",\"disableFontFace\",\"nativeImageDecoderSupport\",\"ignoreErrors\",\"isEvalSupported\",\"newPdfManager\",\"byteLength\",\"setupDoc\",\"initializeFromPort\",\"postMessage\",\"hadRuntime\",\"regeneratorRuntime\",\"getOwnPropertyNames\",\"oldRuntime\",\"Op\",\"hasOwn\",\"$Symbol\",\"iteratorSymbol\",\"asyncIteratorSymbol\",\"asyncIterator\",\"toStringTagSymbol\",\"inModule\",\"runtime\",\"GenStateSuspendedStart\",\"GenStateSuspendedYield\",\"GenStateExecuting\",\"GenStateCompleted\",\"ContinueSentinel\",\"IteratorPrototype\",\"getProto\",\"getPrototypeOf\",\"NativeIteratorPrototype\",\"values\",\"Gp\",\"GeneratorFunctionPrototype\",\"Generator\",\"GeneratorFunction\",\"displayName\",\"isGeneratorFunction\",\"genFun\",\"ctor\",\"setPrototypeOf\",\"__proto__\",\"awrap\",\"__await\",\"defineIteratorMethods\",\"AsyncIterator\",\"async\",\"innerFn\",\"outerFn\",\"tryLocsList\",\"iter\",\"result\",\"keys\",\"reverse\",\"pop\",\"Context\",\"reset\",\"skipTempReset\",\"_sent\",\"delegate\",\"method\",\"tryEntries\",\"resetTryEntry\",\"charAt\",\"isNaN\",\"rootRecord\",\"completion\",\"type\",\"rval\",\"dispatchException\",\"exception\",\"context\",\"handle\",\"loc\",\"caught\",\"record\",\"entry\",\"tryLoc\",\"hasCatch\",\"hasFinally\",\"catchLoc\",\"finallyLoc\",\"finallyEntry\",\"complete\",\"afterLoc\",\"thrown\",\"delegateYield\",\"iterable\",\"resultName\",\"nextLoc\",\"protoGenerator\",\"generator\",\"_invoke\",\"state\",\"doneResult\",\"delegateResult\",\"maybeInvokeDelegate\",\"tryCatch\",\"makeInvokeMethod\",\"previousPromise\",\"callInvokeWithMethodAndArg\",\"invoke\",\"unwrapped\",\"return\",\"pushTryEntry\",\"locs\",\"iteratorMethod\",\"webpackPolyfill\",\"deprecate\",\"paths\",\"children\",\"toRomanNumerals\",\"number\",\"lowerCase\",\"Number\",\"isInteger\",\"pos\",\"romanBuf\",\"ROMAN_NUMBER_MAP\",\"romanStr\",\"join\",\"toLowerCase\",\"item\",\"itemLength\",\"resultLength\",\"ii\",\"stringToBytes\",\"set\",\"bytesToString\",\"String\",\"fromCharCode\",\"strBuf\",\"chunkEnd\",\"min\",\"subarray\",\"capability\",\"isSettled\",\"deprecated\",\"details\",\"console\",\"log\",\"getInheritableProperty\",\"dict\",\"_ref$getArray\",\"getArray\",\"_ref$stopWhenFound\",\"stopWhenFound\",\"loopCount\",\"getLookupTableFactory\",\"initializer\",\"lookup\",\"getVerbosityLevel\",\"msg\",\"VerbosityLevel\",\"INFOS\",\"isArrayBuffer\",\"v\",\"isBool\",\"isEmptyObj\",\"isNum\",\"isString\",\"isSpace\",\"ch\",\"isSameOrigin\",\"baseUrl\",\"otherUrl\",\"base\",\"_url_polyfill\",\"URL\",\"origin\",\"other\",\"createValidAbsoluteUrl\",\"url\",\"absoluteUrl\",\"protocol\",\"_isValidProtocol\",\"isLittleEndian\",\"buffer8\",\"Uint32Array\",\"log2\",\"x\",\"ceil\",\"readInt8\",\"readUint16\",\"offset\",\"readUint32\",\"removeNullCharacters\",\"str\",\"replace\",\"NullCharactersRegExp\",\"level\",\"shadow\",\"prop\",\"configurable\",\"writable\",\"string32\",\"stringToPDFString\",\"charCodeAt\",\"PDFStringTranslateTable\",\"stringToUTF8String\",\"decodeURIComponent\",\"escape\",\"utf8StringToString\",\"unescape\",\"encodeURIComponent\",\"unreachable\",\"_streams_polyfill\",\"ReadableStream\",\"createObjectURL\",\"FormatError\",\"XRefEntryException\",\"Util\",\"TextRenderingMode\",\"StreamType\",\"PermissionFlag\",\"PasswordResponses\",\"NativeImageDecoding\",\"MissingDataException\",\"AbortException\",\"CMapCompressionType\",\"ImageKind\",\"FontType\",\"AnnotationType\",\"AnnotationFlag\",\"AnnotationFieldFlag\",\"AnnotationBorderStyleType\",\"OPS\",\"IDENTITY_MATRIX\",\"FONT_IDENTITY_MATRIX\",\"NONE\",\"DECODE\",\"DISPLAY\",\"PRINT\",\"MODIFY_CONTENTS\",\"COPY\",\"MODIFY_ANNOTATIONS\",\"FILL_INTERACTIVE_FORMS\",\"COPY_FOR_ACCESSIBILITY\",\"ASSEMBLE\",\"PRINT_HIGH_QUALITY\",\"FILL\",\"STROKE\",\"FILL_STROKE\",\"INVISIBLE\",\"FILL_ADD_TO_PATH\",\"STROKE_ADD_TO_PATH\",\"FILL_STROKE_ADD_TO_PATH\",\"ADD_TO_PATH\",\"FILL_STROKE_MASK\",\"ADD_TO_PATH_FLAG\",\"GRAYSCALE_1BPP\",\"RGB_24BPP\",\"RGBA_32BPP\",\"TEXT\",\"LINK\",\"FREETEXT\",\"LINE\",\"SQUARE\",\"CIRCLE\",\"POLYGON\",\"POLYLINE\",\"HIGHLIGHT\",\"UNDERLINE\",\"SQUIGGLY\",\"STRIKEOUT\",\"STAMP\",\"CARET\",\"INK\",\"POPUP\",\"FILEATTACHMENT\",\"SOUND\",\"MOVIE\",\"WIDGET\",\"SCREEN\",\"PRINTERMARK\",\"TRAPNET\",\"WATERMARK\",\"THREED\",\"REDACT\",\"HIDDEN\",\"NOZOOM\",\"NOROTATE\",\"NOVIEW\",\"READONLY\",\"LOCKED\",\"TOGGLENOVIEW\",\"LOCKEDCONTENTS\",\"REQUIRED\",\"NOEXPORT\",\"MULTILINE\",\"PASSWORD\",\"NOTOGGLETOOFF\",\"RADIO\",\"PUSHBUTTON\",\"COMBO\",\"EDIT\",\"SORT\",\"FILESELECT\",\"MULTISELECT\",\"DONOTSPELLCHECK\",\"DONOTSCROLL\",\"COMB\",\"RICHTEXT\",\"RADIOSINUNISON\",\"COMMITONSELCHANGE\",\"SOLID\",\"DASHED\",\"BEVELED\",\"INSET\",\"UNKNOWN\",\"FLATE\",\"LZW\",\"DCT\",\"JPX\",\"JBIG\",\"A85\",\"AHX\",\"CCF\",\"RL\",\"TYPE1\",\"TYPE1C\",\"CIDFONTTYPE0\",\"CIDFONTTYPE0C\",\"TRUETYPE\",\"CIDFONTTYPE2\",\"TYPE3\",\"OPENTYPE\",\"TYPE0\",\"MMTYPE1\",\"ERRORS\",\"WARNINGS\",\"BINARY\",\"STREAM\",\"dependency\",\"setLineWidth\",\"setLineCap\",\"setLineJoin\",\"setMiterLimit\",\"setDash\",\"setRenderingIntent\",\"setFlatness\",\"setGState\",\"save\",\"restore\",\"transform\",\"moveTo\",\"lineTo\",\"curveTo\",\"curveTo2\",\"curveTo3\",\"closePath\",\"rectangle\",\"stroke\",\"closeStroke\",\"fill\",\"eoFill\",\"fillStroke\",\"eoFillStroke\",\"closeFillStroke\",\"closeEOFillStroke\",\"endPath\",\"clip\",\"eoClip\",\"beginText\",\"endText\",\"setCharSpacing\",\"setWordSpacing\",\"setHScale\",\"setLeading\",\"setFont\",\"setTextRenderingMode\",\"setTextRise\",\"moveText\",\"setLeadingMoveText\",\"setTextMatrix\",\"nextLine\",\"showText\",\"showSpacedText\",\"nextLineShowText\",\"nextLineSetSpacingShowText\",\"setCharWidth\",\"setCharWidthAndBounds\",\"setStrokeColorSpace\",\"setFillColorSpace\",\"setStrokeColor\",\"setStrokeColorN\",\"setFillColor\",\"setFillColorN\",\"setStrokeGray\",\"setFillGray\",\"setStrokeRGBColor\",\"setFillRGBColor\",\"setStrokeCMYKColor\",\"setFillCMYKColor\",\"shadingFill\",\"beginInlineImage\",\"beginImageData\",\"endInlineImage\",\"paintXObject\",\"markPoint\",\"markPointProps\",\"beginMarkedContent\",\"beginMarkedContentProps\",\"endMarkedContent\",\"beginCompat\",\"endCompat\",\"paintFormXObjectBegin\",\"paintFormXObjectEnd\",\"beginGroup\",\"endGroup\",\"beginAnnotations\",\"endAnnotations\",\"beginAnnotation\",\"endAnnotation\",\"paintJpegXObject\",\"paintImageMaskXObject\",\"paintImageMaskXObjectGroup\",\"paintImageXObject\",\"paintInlineImageXObject\",\"paintInlineImageXObjectGroup\",\"paintImageXObjectRepeat\",\"paintImageMaskXObjectRepeat\",\"paintSolidColorImageMask\",\"constructPath\",\"forms\",\"javaScript\",\"smask\",\"shadingPattern\",\"font\",\"NEED_PASSWORD\",\"INCORRECT_PASSWORD\",\"cond\",\"status\",\"rgbBuf\",\"makeCssRgb\",\"b\",\"m1\",\"m2\",\"applyTransform\",\"applyInverseTransform\",\"getAxialAlignedBoundingBox\",\"p1\",\"p2\",\"p3\",\"p4\",\"inverseTransform\",\"apply3dTransform\",\"singularValueDecompose2dScale\",\"transpose\",\"a\",\"first\",\"second\",\"sqrt\",\"sx\",\"sy\",\"normalizeRect\",\"rect\",\"intersect\",\"rect1\",\"rect2\",\"compare\",\"orderedX\",\"sort\",\"orderedY\",\"digits\",\"contentType\",\"blob\",\"Blob\",\"b1\",\"b2\",\"b3\",\"globalScope\",\"_pdfjsCompatibilityChecked\",\"isNodeJS\",\"hasDOM\",\"document\",\"btoa\",\"chars\",\"from\",\"atob\",\"input\",\"Element\",\"remove\",\"parentNode\",\"removeChild\",\"div\",\"createElement\",\"classList\",\"add\",\"contains\",\"OriginalDOMTokenListAdd\",\"DOMTokenList\",\"OriginalDOMTokenListRemove\",\"_len\",\"tokens\",\"_key\",\"token\",\"_len2\",\"_key2\",\"_i2\",\"toggle\",\"force\",\"startsWith\",\"endsWith\",\"includes\",\"assign\",\"finally\",\"WeakMap\",\"WeakSet\",\"codePointAt\",\"fromCodePoint\",\"padStart\",\"padEnd\",\"versions\",\"$export\",\"toLength\",\"$startsWith\",\"P\",\"F\",\"searchString\",\"that\",\"index\",\"search\",\"core\",\"hide\",\"redefine\",\"ctx\",\"own\",\"out\",\"exp\",\"IS_FORCED\",\"IS_GLOBAL\",\"G\",\"IS_PROTO\",\"IS_BIND\",\"B\",\"target\",\"S\",\"expProto\",\"U\",\"W\",\"R\",\"__g\",\"version\",\"__e\",\"dP\",\"createDesc\",\"f\",\"anObject\",\"IE8_DOM_DEFINE\",\"toPrimitive\",\"O\",\"Attributes\",\"isObject\",\"it\",\"exec\",\"is\",\"val\",\"valueOf\",\"bitmap\",\"has\",\"SRC\",\"$toString\",\"TPL\",\"split\",\"inspectSource\",\"safe\",\"isFunction\",\"px\",\"random\",\"aFunction\",\"toInteger\",\"floor\",\"isRegExp\",\"defined\",\"NAME\",\"cof\",\"MATCH\",\"store\",\"uid\",\"_Symbol\",\"USE_SYMBOL\",\"copyright\",\"KEY\",\"re\",\"$endsWith\",\"endPosition\",\"len\",\"$includes\",\"el\",\"toIObject\",\"toAbsoluteIndex\",\"IS_INCLUDES\",\"$this\",\"fromIndex\",\"IObject\",\"propertyIsEnumerable\",\"UNSCOPABLES\",\"ArrayProto\",\"$at\",\"iterated\",\"_t\",\"point\",\"TO_STRING\",\"LIBRARY\",\"Iterators\",\"$iterCreate\",\"setToStringTag\",\"ITERATOR\",\"BUGGY\",\"returnThis\",\"Base\",\"Constructor\",\"DEFAULT\",\"IS_SET\",\"FORCED\",\"methods\",\"getMethod\",\"kind\",\"proto\",\"TAG\",\"DEF_VALUES\",\"VALUES_BUG\",\"$native\",\"$default\",\"$entries\",\"$anyNative\",\"entries\",\"descriptor\",\"dPs\",\"enumBugKeys\",\"IE_PROTO\",\"Empty\",\"_createDict\",\"iframeDocument\",\"iframe\",\"style\",\"display\",\"appendChild\",\"src\",\"contentWindow\",\"open\",\"write\",\"lt\",\"Properties\",\"getKeys\",\"defineProperties\",\"$keys\",\"arrayIndexOf\",\"names\",\"shared\",\"documentElement\",\"def\",\"tag\",\"stat\",\"toObject\",\"ObjectProto\",\"isArrayIter\",\"createProperty\",\"getIterFn\",\"arrayLike\",\"step\",\"C\",\"aLen\",\"mapfn\",\"mapping\",\"iterFn\",\"ret\",\"$defineProperty\",\"classof\",\"getIteratorMethod\",\"ARG\",\"T\",\"tryGet\",\"callee\",\"SAFE_CLOSING\",\"riter\",\"skipClosing\",\"gOPS\",\"pIE\",\"$assign\",\"A\",\"K\",\"k\",\"getSymbols\",\"isEnum\",\"j\",\"getOwnPropertySymbols\",\"LN2\",\"isFinite\",\"test\",\"$iterators\",\"wks\",\"TO_STRING_TAG\",\"ArrayValues\",\"DOMIterables\",\"CSSRuleList\",\"CSSStyleDeclaration\",\"CSSValueList\",\"ClientRectList\",\"DOMRectList\",\"DOMStringList\",\"DataTransferItemList\",\"FileList\",\"HTMLAllCollection\",\"HTMLCollection\",\"HTMLFormElement\",\"HTMLSelectElement\",\"MediaList\",\"MimeTypeArray\",\"NamedNodeMap\",\"NodeList\",\"PaintRequestList\",\"Plugin\",\"PluginArray\",\"SVGLengthList\",\"SVGNumberList\",\"SVGPathSegList\",\"SVGPointList\",\"SVGStringList\",\"SVGTransformList\",\"SourceBufferList\",\"StyleSheetList\",\"TextTrackCueList\",\"TextTrackList\",\"TouchList\",\"collections\",\"explicit\",\"Collection\",\"addToUnscopables\",\"_k\",\"Arguments\",\"Internal\",\"newGenericPromiseCapability\",\"OwnPromiseCapability\",\"Wrapper\",\"anInstance\",\"forOf\",\"speciesConstructor\",\"microtask\",\"newPromiseCapabilityModule\",\"perform\",\"userAgent\",\"promiseResolve\",\"v8\",\"$Promise\",\"isNode\",\"empty\",\"newPromiseCapability\",\"USE_NATIVE\",\"FakePromise\",\"PromiseRejectionEvent\",\"isThenable\",\"notify\",\"isReject\",\"chain\",\"_c\",\"_v\",\"ok\",\"run\",\"reaction\",\"exited\",\"fail\",\"domain\",\"_h\",\"onHandleUnhandled\",\"enter\",\"exit\",\"onUnhandled\",\"unhandled\",\"isUnhandled\",\"emit\",\"onunhandledrejection\",\"_a\",\"onrejectionhandled\",\"$reject\",\"_w\",\"$resolve\",\"wrapper\",\"executor\",\"onFulfilled\",\"onRejected\",\"$$reject\",\"remaining\",\"$index\",\"alreadyCalled\",\"race\",\"forbiddenField\",\"BREAK\",\"RETURN\",\"_exports\",\"SPECIES\",\"D\",\"defer\",\"channel\",\"html\",\"cel\",\"setTask\",\"setImmediate\",\"clearTask\",\"clearImmediate\",\"MessageChannel\",\"Dispatch\",\"counter\",\"queue\",\"listener\",\"event\",\"nextTick\",\"port2\",\"port1\",\"onmessage\",\"addEventListener\",\"importScripts\",\"setTimeout\",\"clear\",\"un\",\"macrotask\",\"Observer\",\"MutationObserver\",\"WebKitMutationObserver\",\"head\",\"last\",\"flush\",\"parent\",\"navigator\",\"standalone\",\"node\",\"createTextNode\",\"observe\",\"characterData\",\"PromiseCapability\",\"$$resolve\",\"promiseCapability\",\"DESCRIPTORS\",\"onFinally\",\"try\",\"callbackfn\",\"InternalMap\",\"each\",\"meta\",\"weak\",\"fails\",\"validate\",\"getWeak\",\"isExtensible\",\"uncaughtFrozenStore\",\"ufstore\",\"tmp\",\"$WeakMap\",\"freeze\",\"getConstructor\",\"NEED\",\"_f\",\"asc\",\"TYPE\",\"$create\",\"IS_MAP\",\"IS_FILTER\",\"IS_SOME\",\"IS_EVERY\",\"IS_FIND_INDEX\",\"NO_HOLES\",\"res\",\"original\",\"META\",\"setDesc\",\"FREEZE\",\"preventExtensions\",\"setMeta\",\"w\",\"fastKey\",\"onFreeze\",\"redefineAll\",\"createArrayMethod\",\"$has\",\"arrayFind\",\"arrayFindIndex\",\"_l\",\"UncaughtFrozenStore\",\"findUncaughtFrozen\",\"delete\",\"ADDER\",\"$iterDetect\",\"inheritIfRequired\",\"common\",\"IS_WEAK\",\"fixMethod\",\"instance\",\"HASNT_CHAINING\",\"THROWS_ON_PRIMITIVES\",\"ACCEPT_ITERABLES\",\"BUGGY_ZERO\",\"$instance\",\"setStrong\",\"check\",\"buggy\",\"gOPD\",\"getOwnPropertyDescriptor\",\"COLLECTION\",\"of\",\"cb\",\"mapFn\",\"nextItem\",\"$fromCodePoint\",\"RangeError\",\"$fails\",\"wksExt\",\"wksDefine\",\"enumKeys\",\"_create\",\"gOPNExt\",\"$GOPD\",\"$DP\",\"gOPN\",\"$JSON\",\"JSON\",\"_stringify\",\"stringify\",\"TO_PRIMITIVE\",\"SymbolRegistry\",\"AllSymbols\",\"OPSymbols\",\"QObject\",\"setter\",\"findChild\",\"setSymbolDesc\",\"protoDesc\",\"sym\",\"isSymbol\",\"$defineProperties\",\"$propertyIsEnumerable\",\"E\",\"$getOwnPropertyDescriptor\",\"$getOwnPropertyNames\",\"$getOwnPropertySymbols\",\"IS_OP\",\"$set\",\"es6Symbols\",\"wellKnownSymbols\",\"for\",\"keyFor\",\"useSetter\",\"useSimple\",\"replacer\",\"$replacer\",\"symbols\",\"windowNames\",\"getWindowNames\",\"hiddenKeys\",\"$pad\",\"maxLength\",\"repeat\",\"fillString\",\"left\",\"stringLength\",\"fillStr\",\"intMaxLength\",\"fillLen\",\"stringFiller\",\"count\",\"Infinity\",\"$values\",\"isEntries\",\"isReadableStreamSupported\",\"controller\",\"_typeof2\",\"IsPropertyKey\",\"argument\",\"Call\",\"V\",\"typeIsObject\",\"createDataProperty\",\"createArrayFromList\",\"elements\",\"ArrayBufferCopy\",\"dest\",\"destOffset\",\"srcOffset\",\"CreateIterResultObject\",\"IsFiniteNonNegativeNumber\",\"InvokeOrNoop\",\"PromiseInvokeOrNoop\",\"returnValueE\",\"PromiseInvokeOrPerformFallback\",\"argsF\",\"methodE\",\"TransferArrayBuffer\",\"ValidateAndNormalizeHighWaterMark\",\"highWaterMark\",\"ValidateAndNormalizeQueuingStrategy\",\"size\",\"AssertionError\",\"rethrowAssertionErrorRejection\",\"_createClass\",\"props\",\"protoProps\",\"staticProps\",\"_classCallCheck\",\"_require\",\"_require2\",\"_require3\",\"DequeueValue\",\"EnqueueValueWithSize\",\"PeekQueueValue\",\"ResetQueue\",\"WritableStream\",\"underlyingSink\",\"_ref$highWaterMark\",\"_state\",\"_storedError\",\"_writer\",\"_writableStreamController\",\"_writeRequests\",\"_inFlightWriteRequest\",\"_closeRequest\",\"_inFlightCloseRequest\",\"_pendingAbortRequest\",\"_backpressure\",\"WritableStreamDefaultController\",\"__startSteps\",\"IsWritableStream\",\"streamBrandCheckException\",\"IsWritableStreamLocked\",\"WritableStreamAbort\",\"AcquireWritableStreamDefaultWriter\",\"WritableStreamDefaultWriter\",\"wasAlreadyErroring\",\"_resolve\",\"_reject\",\"_reason\",\"_wasAlreadyErroring\",\"WritableStreamStartErroring\",\"WritableStreamDealWithRejection\",\"WritableStreamFinishErroring\",\"writer\",\"WritableStreamDefaultWriterEnsureReadyPromiseRejected\",\"WritableStreamHasOperationMarkedInFlight\",\"_started\",\"__errorSteps\",\"storedError\",\"abortRequest\",\"WritableStreamRejectCloseAndClosedPromiseIfNeeded\",\"__abortSteps\",\"WritableStreamFinishInFlightClose\",\"_closedPromise_resolve\",\"_closedPromise_reject\",\"_closedPromiseState\",\"defaultWriterClosedPromiseResolve\",\"WritableStreamCloseQueuedOrInFlight\",\"defaultWriterClosedPromiseReject\",\"_closedPromise\",\"WritableStreamUpdateBackpressure\",\"backpressure\",\"_readyPromise_resolve\",\"_readyPromise_reject\",\"_readyPromise\",\"_readyPromiseState\",\"defaultWriterReadyPromiseReset\",\"defaultWriterReadyPromiseResolve\",\"WritableStreamDefaultControllerError\",\"WritableStreamDefaultWriterCloseWithErrorPropagation\",\"_ownerWritableStream\",\"WritableStreamDefaultWriterClose\",\"WritableStreamDefaultWriterRelease\",\"WritableStreamDefaultWriterWrite\",\"defaultWriterReadyPromiseInitializeAsResolved\",\"defaultWriterClosedPromiseInitialize\",\"defaultWriterReadyPromiseInitializeAsRejected\",\"defaultWriterClosedPromiseInitializeAsResolved\",\"defaultWriterClosedPromiseInitializeAsRejected\",\"IsWritableStreamDefaultWriter\",\"defaultWriterBrandCheckException\",\"defaultWriterLockException\",\"WritableStreamDefaultWriterAbort\",\"WritableStreamDefaultControllerGetDesiredSize\",\"WritableStreamDefaultWriterGetDesiredSize\",\"closeRequest\",\"WritableStreamDefaultControllerAdvanceQueueIfNeeded\",\"WritableStreamDefaultWriterEnsureClosedPromiseRejected\",\"defaultWriterClosedPromiseResetToRejected\",\"defaultWriterReadyPromiseReject\",\"defaultWriterReadyPromiseResetToRejected\",\"releasedError\",\"chunkSize\",\"strategySize\",\"_strategySize\",\"chunkSizeE\",\"WritableStreamDefaultControllerErrorIfNeeded\",\"WritableStreamDefaultControllerGetChunkSize\",\"writeRequest\",\"WritableStreamAddWriteRequest\",\"writeRecord\",\"enqueueE\",\"_controlledWritableStream\",\"WritableStreamDefaultControllerGetBackpressure\",\"WritableStreamDefaultControllerWrite\",\"_underlyingSink\",\"_queue\",\"_queueTotalSize\",\"normalizedStrategy\",\"_strategyHWM\",\"IsWritableStreamDefaultController\",\"startResult\",\"WritableStreamMarkCloseRequestInFlight\",\"WritableStreamFinishInFlightCloseWithError\",\"WritableStreamDefaultControllerProcessClose\",\"shift\",\"WritableStreamMarkFirstWriteRequestInFlight\",\"WritableStreamFinishInFlightWrite\",\"WritableStreamFinishInFlightWriteWithError\",\"WritableStreamDefaultControllerProcessWrite\",\"container\",\"pair\",\"_require4\",\"_require5\",\"underlyingSource\",\"_disturbed\",\"_readableStreamController\",\"ReadableByteStreamController\",\"ReadableStreamDefaultController\",\"IsReadableStream\",\"IsReadableStreamLocked\",\"ReadableStreamCancel\",\"AcquireReadableStreamDefaultReader\",\"ReadableStreamBYOBReader\",\"options\",\"readable\",\"ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue\",\"pipeTo\",\"preventClose\",\"preventAbort\",\"preventCancel\",\"Boolean\",\"shuttingDown\",\"currentWrite\",\"action\",\"isOrBecomesErrored\",\"shutdownWithAction\",\"shutdown\",\"destClosed\",\"waitForWritesToFinish\",\"oldCurrentWrite\",\"originalIsError\",\"originalError\",\"doTheRest\",\"finalize\",\"newError\",\"isError\",\"ReadableStreamReaderGenericRelease\",\"pipeLoop\",\"ReadableStreamDefaultReaderRead\",\"branches\",\"ReadableStreamTee\",\"ReadableStreamDefaultReader\",\"cloneForBranch2\",\"teeState\",\"closedOrErrored\",\"canceled1\",\"canceled2\",\"reason1\",\"reason2\",\"pull\",\"branch1\",\"_branch1\",\"branch2\",\"_branch2\",\"_teeState\",\"ReadableStreamDefaultControllerClose\",\"value1\",\"value2\",\"ReadableStreamDefaultControllerEnqueue\",\"create_ReadableStreamTeePullFunction\",\"_cloneForBranch2\",\"cancel1\",\"_stream\",\"compositeReason\",\"cancelResult\",\"create_ReadableStreamTeeBranch1CancelFunction\",\"cancel2\",\"create_ReadableStreamTeeBranch2CancelFunction\",\"underlyingSource1\",\"branch1Stream\",\"underlyingSource2\",\"branch2Stream\",\"ReadableStreamDefaultControllerError\",\"ReadableStreamAddReadIntoRequest\",\"IsReadableStreamBYOBReader\",\"readIntoRequest\",\"_readIntoRequests\",\"ReadableStreamAddReadRequest\",\"IsReadableStreamDefaultReader\",\"readRequest\",\"_readRequests\",\"ReadableStreamClose\",\"__cancelSteps\",\"defaultReaderClosedPromiseResolve\",\"ReadableStreamError\",\"defaultReaderClosedPromiseReject\",\"ReadableStreamFulfillReadRequest\",\"ReadableStreamGetNumReadIntoRequests\",\"ReadableStreamGetNumReadRequests\",\"ReadableStreamHasBYOBReader\",\"ReadableStreamHasDefaultReader\",\"IsReadableStreamDisturbed\",\"ReadableStreamDefaultControllerGetDesiredSize\",\"ReadableStreamReaderGenericInitialize\",\"defaultReaderBrandCheckException\",\"_ownerReadableStream\",\"readerLockException\",\"ReadableStreamReaderGenericCancel\",\"IsReadableByteStreamController\",\"byobReaderBrandCheckException\",\"ArrayBuffer\",\"isView\",\"_controlledReadableStream\",\"elementSize\",\"DataView\",\"BYTES_PER_ELEMENT\",\"pullIntoDescriptor\",\"byteOffset\",\"bytesFilled\",\"readerType\",\"_pendingPullIntos\",\"emptyView\",\"ReadableByteStreamControllerFillPullIntoDescriptorFromQueue\",\"filledView\",\"ReadableByteStreamControllerConvertPullIntoDescriptor\",\"ReadableByteStreamControllerHandleQueueDrain\",\"_closeRequested\",\"ReadableByteStreamControllerError\",\"ReadableByteStreamControllerCallPullIfNeeded\",\"ReadableByteStreamControllerPullInto\",\"ReadableStreamBYOBReaderRead\",\"defaultReaderClosedPromiseInitialize\",\"defaultReaderClosedPromiseInitializeAsResolved\",\"defaultReaderClosedPromiseInitializeAsRejected\",\"defaultReaderClosedPromiseResetToRejected\",\"__pullSteps\",\"_underlyingSource\",\"_pullAgain\",\"_pulling\",\"ReadableStreamDefaultControllerCallPullIfNeeded\",\"ReadableStreamDefaultControllerErrorIfNeeded\",\"IsReadableStreamDefaultController\",\"defaultControllerBrandCheckException\",\"pendingPromise\",\"ReadableStreamDefaultControllerShouldCallPull\",\"ReadableStreamBYOBRequest\",\"_associatedReadableByteStreamController\",\"_view\",\"bytesWritten\",\"IsReadableStreamBYOBRequest\",\"byobRequestBrandCheckException\",\"ReadableByteStreamControllerRespondInternal\",\"ReadableByteStreamControllerRespond\",\"firstDescriptor\",\"ReadableByteStreamControllerRespondWithNewView\",\"underlyingByteSource\",\"_underlyingByteSource\",\"ReadableByteStreamControllerClearPendingPullIntos\",\"autoAllocateChunkSize\",\"_autoAllocateChunkSize\",\"byteStreamControllerBrandCheckException\",\"firstPendingPullInto\",\"ReadableByteStreamControllerClose\",\"transferredBuffer\",\"ReadableByteStreamControllerEnqueueChunkToQueue\",\"transferredView\",\"ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue\",\"ReadableByteStreamControllerEnqueue\",\"viewE\",\"bufferE\",\"_byobRequest\",\"ReadableByteStreamControllerGetDesiredSize\",\"ReadableByteStreamControllerShouldCallPull\",\"ReadableByteStreamControllerInvalidateBYOBRequest\",\"ReadableByteStreamControllerCommitPullIntoDescriptor\",\"ReadableStreamFulfillReadIntoRequest\",\"currentAlignedBytes\",\"maxBytesToCopy\",\"maxBytesFilled\",\"maxAlignedBytes\",\"totalBytesToCopyRemaining\",\"ready\",\"headOfQueue\",\"bytesToCopy\",\"destStart\",\"ReadableByteStreamControllerFillHeadPullIntoDescriptor\",\"ReadableByteStreamControllerShiftPendingPullInto\",\"ReadableByteStreamControllerRespondInClosedState\",\"remainderSize\",\"remainder\",\"ReadableByteStreamControllerRespondInReadableState\",\"transformStream\",\"writableStream\",\"TransformStream\",\"TransformStreamEnqueueToReadable\",\"_errored\",\"_readableClosed\",\"_readableController\",\"TransformStreamErrorIfNeeded\",\"TransformStreamSetBackpressure\",\"TransformStreamCloseReadableInternal\",\"TransformStreamErrorInternal\",\"_writableDone\",\"_writableController\",\"TransformStreamReadableReadyPromise\",\"_backpressureChangePromise\",\"_backpressureChangePromise_resolve\",\"resolution\",\"TransformStreamDefaultTransform\",\"transformStreamController\",\"_controlledTransformStream\",\"IsTransformStreamDefaultController\",\"IsTransformStream\",\"TransformStreamSink\",\"startPromise\",\"_transformStream\",\"_startPromise\",\"_transforming\",\"transformer\",\"_transformer\",\"_transformStreamController\",\"TransformStreamTransform\",\"TransformStreamSource\",\"TransformStreamDefaultController\",\"TransformStreamCloseReadable\",\"TransformStreamError\",\"readableController\",\"readableStrategy\",\"writableStrategy\",\"startPromise_resolve\",\"_readable\",\"_writable\",\"isURLSupported\",\"u\",\"pathname\",\"href\",\"PolyfillURL\",\"OriginalURL\",\"revokeObjectURL\",\"relative\",\"relativePathDotMapping\",\"isRelativeScheme\",\"scheme\",\"invalid\",\"_isInvalid\",\"IDNAToASCII\",\"h\",\"percentEscape\",\"unicode\",\"percentEscapeQuery\",\"EOF\",\"ALPHA\",\"ALPHANUMERIC\",\"parse\",\"stateOverride\",\"errors\",\"cursor\",\"seenAt\",\"seenBracket\",\"loop\",\"_scheme\",\"_isRelative\",\"_query\",\"_fragment\",\"_schemeData\",\"_host\",\"_port\",\"_path\",\"_username\",\"_password\",\"nextC\",\"nextNextC\",\"cp\",\"tempC\",\"temp\",\"parseInt\",\"JURL\",\"_url\",\"authority\",\"host\",\"hostname\",\"hash\",\"_\",\"_chunked_stream\",\"_document\",\"_possibleConstructorReturn\",\"_assertThisInitialized\",\"_getPrototypeOf\",\"_inherits\",\"subClass\",\"superClass\",\"_setPrototypeOf\",\"ReferenceError\",\"_asyncToGenerator\",\"_defineProperties\",\"BasePdfManager\",\"_ensure\",\"_x2\",\"_x3\",\"_docId\",\"_docBaseUrl\",\"_BasePdfManager\",\"Stream\",\"PDFDocument\",\"_loadedStreamPromise\",\"_ensure2\",\"_callee2\",\"_context2\",\"_x4\",\"_x5\",\"_x6\",\"_BasePdfManager2\",\"pdfNetworkStream\",\"_this2\",\"streamManager\",\"ChunkedStreamManager\",\"getStream\",\"_ensure3\",\"_callee3\",\"_context3\",\"t0\",\"requestRange\",\"_x7\",\"_x8\",\"_x9\",\"requestAllChunks\",\"onReceiveData\",\"abort\",\"ChunkedStream\",\"manager\",\"loadedChunks\",\"numChunksLoaded\",\"numChunks\",\"progressiveDataLength\",\"lastSuccessfulEnsureByteChunk\",\"chunks\",\"beginChunk\",\"endChunk\",\"curChunk\",\"position\",\"ensureByte\",\"b0\",\"getByte\",\"forceClamped\",\"strEnd\",\"ensureRange\",\"_subarray\",\"Uint8ClampedArray\",\"peekedByte\",\"getBytes\",\"ChunkedStreamSubstream\",\"getMissingChunks\",\"missingChunks\",\"subStream\",\"currRequestId\",\"chunksNeededByRequest\",\"requestsByChunk\",\"promisesByRequest\",\"aborted\",\"_loadedStreamCapability\",\"rangeReader\",\"chunkData\",\"_requestChunks\",\"requestId\",\"chunksNeeded\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_step\",\"_iterator\",\"_chunk\",\"hasChunk\",\"chunksToRequest\",\"groupedChunksToRequest\",\"groupChunks\",\"_iteratorNormalCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_step2\",\"_iterator2\",\"groupedChunk\",\"sendRequest\",\"getBeginChunk\",\"getEndChunk\",\"ranges\",\"_iteratorNormalCompletion3\",\"_didIteratorError3\",\"_iteratorError3\",\"_step3\",\"_iterator3\",\"range\",\"groupedChunks\",\"prevChunk\",\"isProgressive\",\"onReceiveProgressiveData\",\"allChunksLoaded\",\"loadedRequests\",\"_chunk2\",\"requestIds\",\"_iteratorNormalCompletion4\",\"_didIteratorError4\",\"_iteratorError4\",\"_step4\",\"_iterator4\",\"nextEmptyChunk\",\"lastChunk\",\"_requestId\",\"Page\",\"_obj\",\"_stream2\",\"_annotation\",\"_crypto\",\"_parser\",\"_operator_list\",\"_evaluator\",\"_function\",\"LETTER_SIZE_MEDIABOX\",\"isAnnotationRenderable\",\"annotation\",\"viewable\",\"printable\",\"pageDict\",\"fontCache\",\"builtInCMapCache\",\"pdfFunctionFactory\",\"resourcesPromise\",\"uniquePrefix\",\"idCounters\",\"idFactory\",\"createObjId\",\"isDict\",\"Dict\",\"merge\",\"content\",\"streams\",\"fetchIfRef\",\"StreamsSequenceStream\",\"isStream\",\"NullStream\",\"ObjectLoader\",\"resources\",\"load\",\"contentStreamPromise\",\"loadResources\",\"partialEvaluator\",\"PartialEvaluator\",\"pageListPromise\",\"contentStream\",\"opList\",\"OperatorList\",\"transparency\",\"hasBlendModes\",\"_parsedAnnotations\",\"pageOpList\",\"annotations\",\"opListPromises\",\"opLists\",\"addOp\",\"addOpList\",\"_this3\",\"_ref8\",\"getTextContent\",\"annotationsData\",\"_getInheritableProperty\",\"mediaBox\",\"cropBox\",\"intersection\",\"_this4\",\"parsedAnnotations\",\"annotationRefs\",\"annotationPromises\",\"AnnotationFactory\",\"filter\",\"find\",\"needle\",\"limit\",\"backwards\",\"lastIndexOf\",\"XRef\",\"PDFFunctionFactory\",\"_pagePromises\",\"catDict\",\"isName\",\"pdfFormatVersion\",\"acroForm\",\"xfa\",\"fields\",\"moveStart\",\"substring\",\"setStartXRef\",\"startXRef\",\"Catalog\",\"linearization\",\"pageFirst\",\"objectNumberFirst\",\"fetchAsync\",\"pageKidsCountCache\",\"put\",\"getPageDict\",\"_this5\",\"_getLinearizationPage\",\"_ref10\",\"_ref11\",\"_this6\",\"Linearization\",\"startXRefLength\",\"found\",\"skip\",\"infoDict\",\"DocumentInfoValidators\",\"Title\",\"Author\",\"Subject\",\"Keywords\",\"Creator\",\"Producer\",\"CreationDate\",\"ModDate\",\"Trapped\",\"docInfo\",\"PDFFormatVersion\",\"IsLinearized\",\"IsAcroFormPresent\",\"IsXFAPresent\",\"trailer\",\"customValue\",\"idArray\",\"calculateMD5\",\"hex\",\"FileSpec\",\"_colorspace\",\"fetchDestination\",\"getCatalogObj\",\"RefSetCache\",\"Map\",\"getRaw\",\"isRef\",\"root\",\"items\",\"processed\",\"RefSet\",\"blackColor\",\"outlineDict\",\"parseDestDictionary\",\"destDict\",\"resultObj\",\"title\",\"flags\",\"color\",\"rgbColor\",\"ColorSpace\",\"singletons\",\"rgb\",\"getRgb\",\"outlineItem\",\"unsafeUrl\",\"newWindow\",\"bold\",\"italic\",\"encrypt\",\"pow\",\"permissions\",\"destinationId\",\"_readDests\",\"NameTree\",\"pageLabels\",\"prefix\",\"nums\",\"NumberTree\",\"getAll\",\"currentLabel\",\"currentIndex\",\"labelDict\",\"st\",\"baseCharCode\",\"letterIndex\",\"character\",\"charBuf\",\"jj\",\"promises\",\"translatedFonts\",\"translatedFont\",\"loadedName\",\"fallback\",\"translated\",\"nodesToVisit\",\"currentPageIndex\",\"_loop\",\"currentNode\",\"objId\",\"kids\",\"_ret\",\"pageRef\",\"kidRef\",\"parentRef\",\"isRefsEqual\",\"getAsync\",\"kidPromises\",\"kid\",\"pagesBeforeRef\",\"_args\",\"streamRef\",\"metadata\",\"suppressEncryption\",\"encryptMetadata\",\"fetch\",\"subtype\",\"pagesObj\",\"_readDocumentOutline\",\"_readPermissions\",\"toplevelPagesDict\",\"dests\",\"_readPageLabels\",\"pageMode\",\"openActionDest\",\"attachments\",\"fs\",\"serializable\",\"appendIfJavaScriptDict\",\"jsDict\",\"js\",\"openActionDict\",\"actionType\",\"params\",\"actionName\",\"addDefaultProtocolToUrl\",\"urlDict\",\"remoteDest\",\"namedAction\",\"jsAction\",\"jsUrl\",\"RegExp\",\"tryConvertUrlEncoding\",\"xrefstms\",\"cache\",\"streamTypes\",\"fontTypes\",\"startXRefQueue\",\"trailerDict\",\"indexObjects\",\"readXRef\",\"assignXref\",\"ids\",\"fileId\",\"CipherTransformFactory\",\"processXRefTable\",\"parser\",\"tableState\",\"entryNum\",\"streamPos\",\"lexer\",\"parserBuf1\",\"buf1\",\"parserBuf2\",\"buf2\",\"readXRefTable\",\"isCmd\",\"getObj\",\"firstEntryNum\",\"entryCount\",\"free\",\"uncompressed\",\"processXRefStream\",\"streamParameters\",\"byteWidths\",\"streamState\",\"entryRanges\",\"readXRefStream\",\"typeFieldWidth\",\"offsetFieldWidth\",\"generationFieldWidth\",\"generation\",\"LF\",\"CR\",\"LT\",\"readToken\",\"skipUntil\",\"what\",\"dataLength\",\"skipped\",\"objRegExp\",\"endobjRegExp\",\"nestedObjRegExp\",\"trailerBytes\",\"startxrefBytes\",\"objBytes\",\"xrefBytes\",\"trailers\",\"xrefStms\",\"startPos\",\"endPos\",\"checkPos\",\"tokenStr\",\"objToken\",\"xrefTagOffset\",\"Parser\",\"Lexer\",\"rootDict\",\"startXRefParsedCache\",\"topDict\",\"getEntry\",\"xrefEntry\",\"cacheEntry\",\"fetchUncompressed\",\"fetchCompressed\",\"makeSubStream\",\"obj1\",\"obj2\",\"obj3\",\"cmd\",\"createCipherTransform\",\"tableOffset\",\"allowStreams\",\"fetchIfRefAsync\",\"_fetchIfRefAsync\",\"_fetchAsync\",\"NameOrNumberTree\",\"_type\",\"_ii\",\"kidsOrEntries\",\"limits\",\"_r\",\"_m\",\"currentKey\",\"_m2\",\"mm\",\"_NameOrNumberTree\",\"_NameOrNumberTree2\",\"description\",\"contentAvailable\",\"pickPlatformItem\",\"filename\",\"_filename\",\"contentRef\",\"fileObj\",\"mayHaveChildren\",\"addChildren\",\"dictKeys\",\"rawValue\",\"_i3\",\"_ii2\",\"refSet\",\"_walk\",\"nodesToRevisit\",\"pendingRequests\",\"getBaseStreams\",\"baseStreams\",\"foundMissingData\",\"requestRanges\",\"_i4\",\"_ii3\",\"isEOF\",\"Cmd\",\"v1\",\"v2\",\"Name\",\"nameCache\",\"nameValue\",\"cmdCache\",\"cmdValue\",\"nonSerializable\",\"_map\",\"__nonSerializable__\",\"newXref\",\"key1\",\"key2\",\"key3\",\"callback\",\"dictArray\",\"mergedDict\",\"keyName\",\"putAlias\",\"aliasRef\",\"thisArg\",\"_ccitt_stream\",\"_jbig2_stream\",\"_jpeg_stream\",\"_jpx_stream\",\"computeAdler32\",\"bytesLength\",\"imageCache\",\"refill\",\"tryShift\",\"cipherTransform\",\"makeInlineImage\",\"array\",\"makeStream\",\"decryptString\",\"findDefaultInlineStreamEnd\",\"maybeEIPos\",\"followingBytes\",\"peekBytes\",\"endOffset\",\"peekByte\",\"findDCTDecodeInlineStreamEnd\",\"markerLength\",\"foundEOI\",\"getUint16\",\"inlineStreamSkipEI\",\"findASCII85DecodeInlineStreamEnd\",\"findASCIIHexDecodeInlineStreamEnd\",\"dictLength\",\"beginInlineImagePos\",\"filterName\",\"filterZero\",\"cacheKey\",\"imageStream\",\"imageBytes\",\"initialStreamPos\",\"dictBytes\",\"createStream\",\"_findStreamLength\",\"signature\",\"signatureLength\",\"scanBytes\",\"scanLength\",\"skipToNextLine\",\"nextChar\",\"ENDSTREAM_SIGNATURE\",\"actualLength\",\"TRUNCATED_SIGNATURE\",\"maybeLength\",\"lastByte\",\"makeFilter\",\"filterArray\",\"paramsArray\",\"xrefStreamStats\",\"PredictorStream\",\"FlateStream\",\"earlyChange\",\"LZWStream\",\"JpegStream\",\"JpxStream\",\"Ascii85Stream\",\"AsciiHexStream\",\"CCITTFaxStream\",\"RunLengthStream\",\"Jbig2Stream\",\"knownCommands\",\"specialChars\",\"toHexDigit\",\"currentChar\",\"peekChar\",\"getNumber\",\"eNotation\",\"divideBy\",\"sign\",\"baseValue\",\"powerValue\",\"powerValueSign\",\"currentDigit\",\"getString\",\"numParen\",\"charBuffered\",\"getName\",\"previousCh\",\"x2\",\"getHexString\",\"firstDigit\",\"secondDigit\",\"isFirstHex\",\"comment\",\"knownCommandFound\",\"possibleCommand\",\"getInt\",\"allowZeroValue\",\"linDict\",\"hints\",\"hintsLength\",\"getHints\",\"endFirst\",\"mainXRefEntriesOffset\",\"StringStream\",\"DecodeStream\",\"DecryptStream\",\"_toConsumableArray\",\"arr2\",\"_arrayWithoutHoles\",\"_iterableToArray\",\"_nonIterableSpread\",\"arrayBuffer\",\"isEmpty\",\"getInt32\",\"emptyBuffer\",\"maybeMinBufferLength\",\"_rawMinBufferLength\",\"bufferLength\",\"eof\",\"minBufferLength\",\"readBlock\",\"ensureBuffer\",\"requested\",\"buffer2\",\"bufEnd\",\"newLength\",\"codeLenCodeMap\",\"Int32Array\",\"lengthDecode\",\"distDecode\",\"fixedLitCodeTab\",\"fixedDistCodeTab\",\"cmf\",\"flg\",\"codeSize\",\"codeBuf\",\"getBits\",\"bits\",\"getCode\",\"table\",\"codes\",\"maxLen\",\"codeLen\",\"codeVal\",\"generateHuffmanTable\",\"lengths\",\"code2\",\"hdr\",\"litCodeTable\",\"distCodeTable\",\"numLitCodes\",\"numDistCodes\",\"numCodeLenCodes\",\"codeLenCodeLengths\",\"codeLenCodeTab\",\"bitsLength\",\"bitsOffset\",\"codeLengths\",\"repeatLength\",\"code1\",\"dist\",\"blockLen\",\"predictor\",\"readBlockTiff\",\"readBlockPng\",\"colors\",\"columns\",\"pixBytes\",\"rowBytes\",\"rawBytes\",\"inbuf\",\"outbuf\",\"inbits\",\"outbits\",\"bytesPerPixel\",\"sum\",\"compArray\",\"bitMask\",\"kk\",\"prevRow\",\"up\",\"upLeft\",\"pa\",\"pb\",\"pc\",\"decrypt\",\"nextChunk\",\"initialized\",\"hasMoreData\",\"maxDecodeLength\",\"digit\",\"repeatHeader\",\"cachedData\",\"bitsCached\",\"lzwState\",\"codeLength\",\"nextCode\",\"dictionaryValues\",\"dictionaryLengths\",\"Uint16Array\",\"dictionaryPrevCodes\",\"currentSequence\",\"currentSequenceLength\",\"readBits\",\"lastCode\",\"q\",\"estimatedDecodedSize\",\"blockSize\",\"prevCode\",\"decodedLength\",\"currentBufferLength\",\"hasPrev\",\"_ccitt\",\"ccittFaxDecoder\",\"CCITTFaxDecoder\",\"EndOfLine\",\"EncodedByteAlign\",\"Columns\",\"Rows\",\"EndOfBlock\",\"BlackIs1\",\"readNextChar\",\"twoDimTable\",\"whiteTable1\",\"whiteTable2\",\"blackTable1\",\"blackTable2\",\"blackTable3\",\"encoding\",\"eoline\",\"byteAlign\",\"rows\",\"eoblock\",\"black\",\"codingLine\",\"refLine\",\"codingPos\",\"row\",\"nextLine2D\",\"inputBits\",\"inputBuf\",\"outputBits\",\"rowsDone\",\"_lookBits\",\"_eatBits\",\"refPos\",\"blackPixels\",\"code3\",\"_getTwoDimCode\",\"_addPixels\",\"_getBlackCode\",\"_getWhiteCode\",\"_addPixelsNeg\",\"gotEOL\",\"a1\",\"_findTableCode\",\"limitValue\",\"_jbig\",\"jbig2Image\",\"Jbig2Image\",\"globalsStream\",\"globals\",\"parseChunks\",\"_arithmetic_decoder\",\"Jbig2Error\",\"ContextCache\",\"DecodingContext\",\"decodeInteger\",\"contextCache\",\"procedure\",\"decoder\",\"contexts\",\"getContexts\",\"bit\",\"readBit\",\"decodeIAID\",\"Int8Array\",\"ArithmeticDecoder\",\"SegmentTypes\",\"CodingTemplates\",\"y\",\"RefinementTemplates\",\"coding\",\"reference\",\"ReusedContexts\",\"RefinementReusedContexts\",\"decodeBitmap\",\"mmr\",\"width\",\"height\",\"templateIndex\",\"prediction\",\"at\",\"decodingContext\",\"decodeMMRBitmap\",\"Reader\",\"contextLabel\",\"pixel\",\"row1\",\"row2\",\"decodeBitmapTemplate0\",\"useskip\",\"template\",\"templateLength\",\"templateX\",\"templateY\",\"changingTemplateEntries\",\"reuseMask\",\"minX\",\"maxX\",\"minY\",\"changingEntriesLength\",\"changingTemplateX\",\"changingTemplateY\",\"changingTemplateBit\",\"i0\",\"j0\",\"sbb_left\",\"sbb_top\",\"sbb_right\",\"pseudoPixelContext\",\"ltp\",\"decodeRefinement\",\"referenceBitmap\",\"offsetX\",\"offsetY\",\"codingTemplate\",\"codingTemplateLength\",\"codingTemplateX\",\"codingTemplateY\",\"referenceTemplate\",\"referenceTemplateLength\",\"referenceTemplateX\",\"referenceTemplateY\",\"referenceWidth\",\"referenceHeight\",\"decodeTextRegion\",\"huffman\",\"refinement\",\"defaultPixelValue\",\"numberOfSymbolInstances\",\"stripSize\",\"inputSymbols\",\"symbolCodeLength\",\"transposed\",\"dsOffset\",\"referenceCorner\",\"combinationOperator\",\"huffmanTables\",\"refinementTemplateIndex\",\"refinementAt\",\"logStripSize\",\"huffmanInput\",\"stripT\",\"tableDeltaT\",\"decode\",\"firstS\",\"currentS\",\"tableFirstS\",\"currentT\",\"symbolId\",\"symbolIDTable\",\"applyRefinement\",\"symbolBitmap\",\"symbolWidth\",\"symbolHeight\",\"rdw\",\"rdh\",\"s2\",\"t2\",\"symbolRow\",\"offsetT\",\"offsetS\",\"maxWidth\",\"deltaS\",\"tableDeltaS\",\"readSegmentHeader\",\"segmentHeader\",\"segmentType\",\"typeName\",\"deferredNonRetain\",\"pageAssociationFieldSize\",\"referredFlags\",\"referredToCount\",\"retainBits\",\"referredToSegmentNumberSize\",\"referredTo\",\"pageAssociation\",\"genericRegionInfo\",\"readRegionSegmentInformation\",\"genericRegionMmr\",\"RegionSegmentInformationFieldLength\",\"searchPattern\",\"headerEnd\",\"readSegments\",\"header\",\"segments\",\"segment\",\"randomAccess\",\"processSegment\",\"visitor\",\"atLength\",\"dictionary\",\"dictionaryFlags\",\"huffmanDHSelector\",\"huffmanDWSelector\",\"bitmapSizeSelector\",\"aggregationInstancesSelector\",\"bitmapCodingContextUsed\",\"bitmapCodingContextRetained\",\"refinementTemplate\",\"numberOfExportedSymbols\",\"numberOfNewSymbols\",\"textRegion\",\"textRegionSegmentFlags\",\"textRegionHuffmanFlags\",\"huffmanFS\",\"huffmanDS\",\"huffmanDT\",\"huffmanRefinementDW\",\"huffmanRefinementDH\",\"huffmanRefinementDX\",\"huffmanRefinementDY\",\"huffmanRefinementSizeSelector\",\"patternDictionary\",\"patternDictionaryFlags\",\"patternWidth\",\"patternHeight\",\"maxPatternIndex\",\"halftoneRegion\",\"halftoneRegionFlags\",\"enableSkip\",\"gridWidth\",\"gridHeight\",\"gridOffsetX\",\"gridOffsetY\",\"gridVectorX\",\"gridVectorY\",\"genericRegion\",\"genericRegionSegmentFlags\",\"pageInfo\",\"resolutionX\",\"resolutionY\",\"pageSegmentFlags\",\"lossless\",\"requiresBuffer\",\"combinationOperatorOverride\",\"callbackName\",\"processSegments\",\"SimpleSegmentVisitor\",\"HuffmanLine\",\"lineData\",\"isOOB\",\"rangeLow\",\"prefixLength\",\"rangeLength\",\"prefixCode\",\"isLowerRange\",\"HuffmanTreeNode\",\"line\",\"isLeaf\",\"HuffmanTable\",\"lines\",\"prefixCodesDone\",\"assignPrefixCodes\",\"rootNode\",\"buildTree\",\"onPageInformation\",\"currentPageInfo\",\"rowSize\",\"drawBitmap\",\"regionInfo\",\"mask\",\"mask0\",\"offset0\",\"onImmediateGenericRegion\",\"region\",\"onImmediateLosslessGenericRegion\",\"onSymbolDictionary\",\"currentSegment\",\"referredSegments\",\"customTables\",\"tableDeltaHeight\",\"tableDeltaWidth\",\"tableBitmapSize\",\"tableAggregateInstances\",\"customIndex\",\"getStandardTable\",\"getCustomHuffmanTable\",\"getSymbolDictionaryHuffmanTables\",\"referredSymbols\",\"tableB1\",\"symbolWidths\",\"newSymbols\",\"currentHeight\",\"currentWidth\",\"totalWidth\",\"firstSymbol\",\"deltaWidth\",\"numberOfInstances\",\"rdx\",\"rdy\",\"bitmapSize\",\"collectiveBitmap\",\"readUncompressedBitmap\",\"originalEnd\",\"bitmapEnd\",\"numberOfSymbolsDecoded\",\"xMin\",\"xMax\",\"exportedSymbols\",\"currentFlag\",\"totalSymbolsLength\",\"runLength\",\"decodeSymbolDictionary\",\"onImmediateTextRegion\",\"numberOfSymbols\",\"runCodesTable\",\"repeatedLength\",\"numberOfRepeats\",\"getTextRegionHuffmanTables\",\"onImmediateLosslessTextRegion\",\"onPatternDictionary\",\"patterns\",\"patternBitmap\",\"decodePatternDictionary\",\"onImmediateHalftoneRegion\",\"regionWidth\",\"regionHeight\",\"regionBitmap\",\"numberOfPatterns\",\"pattern0\",\"bitsPerValue\",\"mmrInput\",\"mg\",\"ng\",\"patternIndex\",\"patternRow\",\"regionRow\",\"grayScaleBitPlanes\",\"regionX\",\"regionY\",\"decodeHalftoneRegion\",\"onImmediateLosslessHalftoneRegion\",\"onTables\",\"lowestValue\",\"highestValue\",\"prefixSizeBits\",\"rangeSizeBits\",\"currentRangeLow\",\"decodeTablesSegment\",\"decodeNode\",\"htOffset\",\"linesLength\",\"prefixLengthMax\",\"histogram\",\"currentCode\",\"currentTemp\",\"currentLength\",\"firstCode\",\"standardTablesCache\",\"currentByte\",\"endOfBlock\",\"numBits\",\"parseJbig2Chunks\",\"_parseJbig\",\"numberOfPages\",\"_visitor$currentPageI\",\"bitPacked\",\"imgData\",\"parseJbig2\",\"QeTable\",\"qe\",\"nmps\",\"nlps\",\"switchFlag\",\"bp\",\"dataEnd\",\"chigh\",\"clow\",\"byteIn\",\"ct\",\"cx_index\",\"cx_mps\",\"qeTableIcx\",\"qeIcx\",\"_jpg\",\"jpegOptions\",\"decodeTransform\",\"colorTransform\",\"decodeArr\",\"forceRGB\",\"bitsPerComponent\",\"decodeArrLength\",\"transformNeeded\",\"maxValue\",\"jpegImage\",\"JpegImage\",\"getData\",\"drawWidth\",\"drawHeight\",\"isSourcePDF\",\"getIR\",\"JpegError\",\"DNLMarkerError\",\"scanLines\",\"EOIMarkerError\",\"dctZigZag\",\"dctCos1\",\"dctSin1\",\"dctCos3\",\"dctSin3\",\"dctCos6\",\"dctSin6\",\"dctSqrt2\",\"dctSqrt1d2\",\"_ref$decodeTransform\",\"_ref$colorTransform\",\"_decodeTransform\",\"_colorTransform\",\"buildHuffmanTable\",\"getBlockBufferOffset\",\"component\",\"col\",\"blocksPerLine\",\"decodeScan\",\"frame\",\"components\",\"resetInterval\",\"spectralStart\",\"spectralEnd\",\"successivePrev\",\"successive\",\"parseDNLMarker\",\"mcusPerLine\",\"progressive\",\"startOffset\",\"bitsData\",\"bitsCount\",\"nextByte\",\"decodeHuffman\",\"tree\",\"receive\",\"receiveAndExtend\",\"eobrun\",\"successiveACNextValue\",\"successiveACState\",\"decodeMcu\",\"mcu\",\"mcuCol\",\"decodeBlock\",\"decodeFn\",\"componentsLength\",\"huffmanTableDC\",\"diff\",\"blockData\",\"pred\",\"rs\",\"huffmanTableAC\",\"z\",\"offsetZ\",\"fileMarker\",\"mcuExpected\",\"blocksPerColumn\",\"mcusPerColumn\",\"mcuToRead\",\"findNextFileMarker\",\"marker\",\"quantizeAndInverse\",\"blockBufferOffset\",\"v0\",\"v3\",\"v4\",\"v5\",\"v6\",\"v7\",\"p0\",\"p5\",\"p6\",\"p7\",\"qt\",\"quantizationTable\",\"buildComponentData\",\"computationBuffer\",\"Int16Array\",\"blockRow\",\"blockCol\",\"currentPos\",\"peekUint16\",\"maxPos\",\"newPos\",\"currentMarker\",\"newMarker\",\"_ref2$dnlScanLines\",\"dnlScanLines\",\"readDataBlock\",\"prepareComponents\",\"samplesPerLine\",\"maxH\",\"maxV\",\"blocksPerLineForMcu\",\"blocksBufferSize\",\"jfif\",\"adobe\",\"numSOSMarkers\",\"quantizationTables\",\"huffmanTablesAC\",\"huffmanTablesDC\",\"markerLoop\",\"appData\",\"major\",\"minor\",\"densityUnits\",\"xDensity\",\"yDensity\",\"thumbWidth\",\"thumbHeight\",\"thumbData\",\"flags0\",\"flags1\",\"transformCode\",\"quantizationTablesEnd\",\"quantizationTableSpec\",\"tableData\",\"extended\",\"precision\",\"sofScanLines\",\"componentIds\",\"componentId\",\"componentsCount\",\"qId\",\"quantizationId\",\"huffmanLength\",\"huffmanTableSpec\",\"codeLengthSum\",\"huffmanValues\",\"selectorsCount\",\"componentIndex\",\"tableSpec\",\"successiveApproximation\",\"nextFileMarker\",\"output\",\"scaleX\",\"scaleY\",\"numComponents\",\"_getLinearizedBlockData\",\"componentScaleX\",\"componentScaleY\",\"blocksPerScanline\",\"xScaleBlockOffset\",\"_isColorConversionNeeded\",\"_convertYccToRgb\",\"Y\",\"Cb\",\"Cr\",\"_convertYcckToRgb\",\"_convertYcckToCmyk\",\"_convertCmykToRgb\",\"_ref3$forceRGB\",\"_ref3$isSourcePDF\",\"rgbData\",\"grayColor\",\"_jpx\",\"jpxImage\",\"JpxImage\",\"tileCount\",\"tiles\",\"tileComponents\",\"tileWidth\",\"tileHeight\",\"tileLeft\",\"tileTop\",\"top\",\"srcPosition\",\"dataPosition\",\"imgRowSize\",\"tileRowSize\",\"JpxError\",\"SubbandsGainLog2\",\"LL\",\"LH\",\"HL\",\"HH\",\"failOnCorruptedImage\",\"calculateComponentDimensions\",\"siz\",\"x0\",\"XOsiz\",\"XRsiz\",\"x1\",\"Xsiz\",\"y0\",\"YOsiz\",\"YRsiz\",\"y1\",\"Ysiz\",\"calculateTileGrids\",\"tile\",\"SIZ\",\"numXtiles\",\"XTOsiz\",\"XTsiz\",\"numYtiles\",\"YTOsiz\",\"YTsiz\",\"tx0\",\"ty0\",\"tx1\",\"ty1\",\"Csiz\",\"tileComponent\",\"tcx0\",\"tcy0\",\"tcx1\",\"tcy1\",\"getBlocksDimensions\",\"codOrCoc\",\"codingStyleParameters\",\"entropyCoderWithCustomPrecincts\",\"PPx\",\"precinctsSizes\",\"PPy\",\"xcb_\",\"xcb\",\"ycb_\",\"ycb\",\"buildPrecincts\",\"dimensions\",\"precinctWidth\",\"precinctHeight\",\"isZeroRes\",\"resLevel\",\"precinctWidthInSubband\",\"precinctHeightInSubband\",\"numprecinctswide\",\"trx1\",\"trx0\",\"numprecinctshigh\",\"try1\",\"try0\",\"numprecincts\",\"precinctParameters\",\"buildCodeblocks\",\"subband\",\"codeblock\",\"precinctNumber\",\"codeblockWidth\",\"codeblockHeight\",\"cbx0\",\"tbx0\",\"cby0\",\"tby0\",\"cbx1\",\"tbx1\",\"cby1\",\"tby1\",\"codeblocks\",\"precincts\",\"cbx\",\"cby\",\"tbx0_\",\"tby0_\",\"tbx1_\",\"tby1_\",\"subbandType\",\"Lblock\",\"precinct\",\"cbxMin\",\"cbxMax\",\"cbyMin\",\"cbyMax\",\"codeblockParameters\",\"numcodeblockwide\",\"numcodeblockhigh\",\"createPacket\",\"layerNumber\",\"precinctCodeblocks\",\"subbands\",\"LayerResolutionComponentPositionIterator\",\"tileIndex\",\"currentTile\",\"layersCount\",\"codingStyleDefaultParameters\",\"maxDecompositionLevelsCount\",\"decompositionLevelsCount\",\"nextPacket\",\"resolutions\",\"packet\",\"ResolutionLayerComponentPositionIterator\",\"ResolutionPositionComponentLayerIterator\",\"maxNumPrecinctsInLevel\",\"maxNumPrecincts\",\"PositionComponentResolutionLayerIterator\",\"getPrecinctSizesInImageScale\",\"precinctsIterationSizes\",\"py\",\"maxNumHigh\",\"maxNumWide\",\"sizeInImageScale\",\"getPrecinctIndexIfExist\",\"ComponentPositionResolutionLayerIterator\",\"pxIndex\",\"pyIndex\",\"precinctIterationSizes\",\"posX\",\"minWidth\",\"posY\",\"minHeight\",\"startPrecinctRowIndex\",\"MAX_VALUE\",\"sizePerComponent\",\"sizePerResolution\",\"minWidthCurrentComponent\",\"minHeightCurrentComponent\",\"maxNumWideCurrentComponent\",\"maxNumHighCurrentComponent\",\"scale\",\"widthCurrentResolution\",\"heightCurrentResolution\",\"buildPackets\",\"blocksDimensions\",\"bscale\",\"resolutionSubbands\",\"progressionOrder\",\"packetsIterator\",\"parseTilePackets\",\"bufferSize\",\"skipNextBit\",\"skipMarkerIfEqual\",\"skipBytes\",\"alignToByte\",\"readCodingpasses\",\"sopMarkerUsed\",\"COD\",\"ephMarkerUsed\",\"codeblockColumn\",\"codeblockRow\",\"codeblockIncluded\",\"firstTimeInclusion\",\"inclusionTree\",\"zeroBitPlanesTree\",\"InclusionTree\",\"TagTree\",\"incrementValue\",\"nextLevel\",\"included\",\"zeroBitPlanes\",\"codingpasses\",\"codingpassesLog2\",\"codedDataLength\",\"packetItem\",\"copyCoefficients\",\"coefficients\",\"levelWidth\",\"levelHeight\",\"delta\",\"mb\",\"reversible\",\"segmentationSymbolUsed\",\"right\",\"bottom\",\"blockWidth\",\"blockHeight\",\"bitModel\",\"currentCodingpassType\",\"BitModel\",\"dataItem\",\"encodedData\",\"setDecoder\",\"runSignificancePropagationPass\",\"runMagnitudeRefinementPass\",\"runCleanupPass\",\"checkSegmentationSymbol\",\"nb\",\"coefficentsSign\",\"magnitude\",\"coefficentsMagnitude\",\"bitsDecoded\",\"magnitudeCorrection\",\"interleave\",\"levelOffset\",\"transformTile\",\"quantizationParameters\",\"spqcds\",\"SPqcds\",\"scalarExpounded\",\"guardBits\",\"reversibleTransformation\",\"ReversibleTransform\",\"IrreversibleTransform\",\"subbandCoefficients\",\"Float32Array\",\"mu\",\"epsilon\",\"gainLog2\",\"calculate\",\"initializeTile\",\"qcdOrQcc\",\"QCC\",\"QCD\",\"COC\",\"headerSize\",\"lbox\",\"tbox\",\"jumpDataLength\",\"colorspace\",\"parseCodestream\",\"headerType\",\"parseImageProperties\",\"newByte\",\"doNotRecover\",\"sqcd\",\"spqcdSize\",\"mainHeader\",\"isSigned\",\"qcd\",\"noQuantization\",\"spqcd\",\"cqcc\",\"qcc\",\"cod\",\"scod\",\"multipleComponentTransform\",\"blockStyle\",\"selectiveArithmeticCodingBypass\",\"resetContextProbabilities\",\"terminationOnEachCodingPass\",\"verticallyStripe\",\"predictableTermination\",\"precinctsSize\",\"unsupported\",\"partIndex\",\"partsCount\",\"resultImages\",\"transformedTiles\",\"y2\",\"tile0\",\"fourComponents\",\"y0items\",\"y1items\",\"y2items\",\"y3items\",\"component0\",\"alpha01\",\"transformComponents\",\"levelsLength\",\"levels\",\"currentLevel\",\"defaultValue\",\"stopValue\",\"propagateValues\",\"levelIndex\",\"currentValue\",\"LLAndLHContextsLabel\",\"HLContextLabel\",\"HHContextLabel\",\"contextLabelTable\",\"coefficientCount\",\"neighborsSignificance\",\"processingFlags\",\"setNeighborsSignificance\",\"column\",\"labels\",\"i1\",\"decodeSignBit\",\"contribution\",\"sign0\",\"sign1\",\"significance1\",\"decoded\",\"horizontalContribution\",\"indexNext\",\"width4\",\"index0\",\"iNext\",\"oneRowDown\",\"twoRowsDown\",\"threeRowsDown\",\"indexBase\",\"checkAllEmpty\",\"i2\",\"Transform\",\"u0\",\"ll\",\"iterate\",\"extend\",\"j1\",\"j2\",\"hl_lh_hh\",\"llWidth\",\"llHeight\",\"llItems\",\"rowBuffer\",\"numBuffers\",\"colBuffers\",\"currentBuffer\",\"current\",\"alpha\",\"beta\",\"gamma\",\"calculateSHA512\",\"calculateSHA384\",\"calculateSHA256\",\"PDF20\",\"PDF17\",\"ARCFourCipher\",\"AES256Cipher\",\"AES128Cipher\",\"keyLength\",\"encryptBlock\",\"tmp2\",\"decryptBlock\",\"h0\",\"h1\",\"h2\",\"h3\",\"paddedLength\",\"padded\",\"rotateArg\",\"Word64\",\"highInteger\",\"lowInteger\",\"high\",\"low\",\"and\",\"word\",\"xor\",\"or\",\"shiftRight\",\"places\",\"shiftLeft\",\"rotateRight\",\"not\",\"lowAdd\",\"highAdd\",\"copyTo\",\"rotr\",\"maj\",\"sigma\",\"sigmaPrime\",\"littleSigma\",\"h4\",\"h5\",\"h6\",\"h7\",\"t1\",\"littleSigmaPrime\",\"mode384\",\"tmp3\",\"tmp1\",\"NullCipher\",\"AESBaseCipher\",\"_inv_s\",\"_mix\",\"_mixCol\",\"bufferPosition\",\"cipherKey\",\"_keySize\",\"_cyclesOfRepetition\",\"_j\",\"_j2\",\"_j3\",\"s0\",\"s1\",\"s3\",\"_j4\",\"_j5\",\"_j6\",\"_j7\",\"_j8\",\"_j9\",\"_k2\",\"sourceLength\",\"iv\",\"plain\",\"_decrypt\",\"outputLength\",\"lastBlock\",\"psLen\",\"_j10\",\"_decryptBlock2\",\"cipher\",\"_encrypt\",\"_j11\",\"_AESBaseCipher\",\"_rcon\",\"_expandKey\",\"rcon\",\"t3\",\"t4\",\"_AESBaseCipher2\",\"compareByteArrays\",\"array1\",\"array2\",\"checkOwnerPassword\",\"ownerValidationSalt\",\"userBytes\",\"ownerPassword\",\"hashData\",\"checkUserPassword\",\"userValidationSalt\",\"userPassword\",\"getOwnerKey\",\"ownerKeySalt\",\"ownerEncryption\",\"getUserKey\",\"userKeySalt\",\"userEncryption\",\"concatArrays\",\"calculatePDF20Hash\",\"arrayLength\",\"k1\",\"concatBytes\",\"CipherTransform\",\"stringCipherConstructor\",\"streamCipherConstructor\",\"StringCipherConstructor\",\"StreamCipherConstructor\",\"defaultPasswordBytes\",\"prepareKeyData\",\"revision\",\"hashDataSize\",\"keyLengthInBytes\",\"checkData\",\"encryptionKey\",\"derivedKey\",\"identityName\",\"algorithm\",\"cfDict\",\"streamCryptoName\",\"handlerDict\",\"passwordBytes\",\"fileIdBytes\",\"uBytes\",\"perms\",\"passwordLength\",\"pdfAlgorithm\",\"createEncryptionKey20\",\"decodeUserPassword\",\"cf\",\"stmf\",\"strf\",\"eff\",\"buildObjectKey\",\"isAes\",\"buildCipherConstructor\",\"cfm\",\"cryptFilter\",\"cipherConstructor\",\"numComps\",\"getRgbItem\",\"inputLength\",\"decodeMap\",\"bpc\",\"isDefaultDecode\",\"originalWidth\",\"originalHeight\",\"actualHeight\",\"comps\",\"numComponentColors\",\"needsResizing\",\"isPassthrough\",\"allColors\",\"colorMap\",\"getRgbBuffer\",\"rgbPos\",\"destPos\",\"w1\",\"w2\",\"oldIndex\",\"xRatio\",\"yRatio\",\"newIndex\",\"xScaled\",\"w1Scanline\",\"resizeRgbImage\",\"_destPos\",\"_rgbPos\",\"cs\",\"IR\",\"parseToIR\",\"fromIR\",\"whitePoint\",\"blackPoint\",\"gray\",\"cmyk\",\"CalGrayCS\",\"matrix\",\"CalRGBCS\",\"basePatternCS\",\"PatternCS\",\"baseIndexedCS\",\"hiVal\",\"IndexedCS\",\"alt\",\"tintFn\",\"AlternateCS\",\"LabCS\",\"colorSpaces\",\"resCS\",\"altIR\",\"DeviceGrayCS\",\"DeviceRgbCS\",\"DeviceCmykCS\",\"_ColorSpace\",\"tmpBuf\",\"baseNumComps\",\"usesZeroToOneRange\",\"baseBuf\",\"scaled\",\"tinted\",\"getOutputLength\",\"_ColorSpace2\",\"baseCS\",\"_ColorSpace3\",\"highVal\",\"outputDelta\",\"lookupPos\",\"_ColorSpace4\",\"_ColorSpace5\",\"convertToRgb\",\"srcScale\",\"_ColorSpace6\",\"AG\",\"L\",\"YW\",\"_ColorSpace7\",\"XW\",\"ZW\",\"XB\",\"YB\",\"ZB\",\"BRADFORD_SCALE_MATRIX\",\"BRADFORD_SCALE_INVERSE_MATRIX\",\"SRGB_D65_XYZ_TO_RGB_MATRIX\",\"FLAT_WHITEPOINT_MATRIX\",\"tempNormalizeMatrix\",\"tempConvertMatrix1\",\"tempConvertMatrix2\",\"DECODE_L_CONSTANT\",\"matrixProduct\",\"sRGBTransferFunction\",\"adjustToRange\",\"decodeL\",\"AGR\",\"GR\",\"BGG\",\"GG\",\"CGB\",\"GB\",\"X\",\"MXA\",\"MXB\",\"MXC\",\"MYA\",\"MYB\",\"MYC\",\"Z\",\"MZA\",\"MZB\",\"MZC\",\"XYZ\",\"XYZ_Flat\",\"sourceWhitePoint\",\"XYZ_In\",\"LMS\",\"LMS_Flat\",\"convertToFlat\",\"normalizeWhitePointToFlat\",\"XYZ_Black\",\"sourceBlackPoint\",\"zeroDecodeL\",\"X_Scale\",\"X_Offset\",\"Y_Scale\",\"Y_Offset\",\"Z_Scale\",\"Z_Offset\",\"compensateBlackPoint\",\"XYZ_D65\",\"LMS_D65\",\"convertToD65\",\"normalizeWhitePointToD65\",\"SRGB\",\"_ColorSpace8\",\"fn_g\",\"high1\",\"low2\",\"high2\",\"maxVal\",\"Ls\",\"as\",\"bs\",\"amin\",\"amax\",\"bmin\",\"bmax\",\"M\",\"N\",\"_ColorSpace9\",\"AnnotationBorderStyle\",\"Annotation\",\"_get\",\"receiver\",\"Reflect\",\"_superPropBase\",\"desc\",\"parameters\",\"LinkAnnotation\",\"TextAnnotation\",\"fieldType\",\"TextWidgetAnnotation\",\"ButtonWidgetAnnotation\",\"ChoiceWidgetAnnotation\",\"WidgetAnnotation\",\"PopupAnnotation\",\"LineAnnotation\",\"SquareAnnotation\",\"CircleAnnotation\",\"PolylineAnnotation\",\"PolygonAnnotation\",\"InkAnnotation\",\"HighlightAnnotation\",\"UnderlineAnnotation\",\"SquigglyAnnotation\",\"StrikeOutAnnotation\",\"StampAnnotation\",\"FileAttachmentAnnotation\",\"setFlags\",\"setRectangle\",\"setColor\",\"setBorderStyle\",\"setAppearance\",\"annotationFlags\",\"borderStyle\",\"hasAppearance\",\"appearance\",\"flag\",\"_hasFlag\",\"dictType\",\"setWidth\",\"setStyle\",\"setDashArray\",\"setHorizontalCornerRadius\",\"setVerticalCornerRadius\",\"appearanceStates\",\"normalAppearanceState\",\"hasPopup\",\"contents\",\"evaluator\",\"renderForms\",\"appearanceDict\",\"bbox\",\"bounds\",\"maxY\",\"getTransformMatrix\",\"_isViewable\",\"_isPrintable\",\"dashArray\",\"horizontalCornerRadius\",\"verticalCornerRadius\",\"isValid\",\"allZeros\",\"element\",\"radius\",\"_Annotation\",\"annotationType\",\"fieldName\",\"_constructFieldName\",\"fieldValue\",\"alternativeText\",\"defaultAppearance\",\"fieldResources\",\"fieldFlags\",\"readOnly\",\"hasFieldFlag\",\"unshift\",\"loopDict\",\"_WidgetAnnotation\",\"alignment\",\"textAlignment\",\"maximumLength\",\"multiLine\",\"comb\",\"_WidgetAnnotation2\",\"checkBox\",\"radioButton\",\"pushButton\",\"_processCheckBox\",\"_processRadioButton\",\"_processPushButton\",\"customAppearance\",\"exportValueOptionsDict\",\"exportValues\",\"exportValue\",\"buttonValue\",\"fieldParent\",\"fieldParentValue\",\"_WidgetAnnotation3\",\"option\",\"isOptionArray\",\"displayValue\",\"combo\",\"multiSelect\",\"_Annotation2\",\"_preparePopup\",\"_Annotation3\",\"_this7\",\"_Annotation4\",\"_this8\",\"parentItem\",\"parentSubtype\",\"parentType\",\"parentId\",\"parentFlags\",\"_Annotation5\",\"_this9\",\"lineCoordinates\",\"_Annotation6\",\"_this10\",\"_Annotation7\",\"_this11\",\"_Annotation8\",\"_this12\",\"rawVertices\",\"vertices\",\"_PolylineAnnotation\",\"_this13\",\"_Annotation9\",\"_this14\",\"originalInkLists\",\"inkLists\",\"_Annotation10\",\"_this15\",\"_Annotation11\",\"_this16\",\"_Annotation12\",\"_this17\",\"_Annotation13\",\"_this18\",\"_Annotation14\",\"_this19\",\"_Annotation15\",\"_this20\",\"file\",\"QueueOptimizer\",\"addState\",\"parentState\",\"pattern\",\"checkFn\",\"iterateFn\",\"processFn\",\"InitialState\",\"iCurr\",\"fnArray\",\"argsArray\",\"match\",\"lastProcessed\",\"curr\",\"iFirstSave\",\"iFirstTransform\",\"iFirstPIIXO\",\"map\",\"maxLineHeight\",\"currentX\",\"currentY\",\"img\",\"imgWidth\",\"imgHeight\",\"dataOffset\",\"iFirstPIMXO\",\"imageMask\",\"handlePaintSolidColorImageMask\",\"iTransform\",\"transformArgs\",\"isSameImage\",\"firstPIMXOArg0\",\"firstTransformArg0\",\"firstTransformArg3\",\"iPIMXO\",\"positions\",\"images\",\"maskParams\",\"firstPIXOArg0\",\"iFirstSetFont\",\"firstSetFontArg0\",\"firstSetFontArg1\",\"iFirstBeginText\",\"iFirstSetTextMatrix\",\"iFirstShowText\",\"iFirstEndText\",\"iFirst\",\"iEndText\",\"_optimize\",\"NullOptimizer\",\"messageHandler\",\"optimizer\",\"dependencies\",\"_totalLength\",\"weight\",\"CHUNK_SIZE\",\"addDependency\",\"addDependencies\",\"transfers\",\"cached\",\"getTransfers\",\"_cmap\",\"_fonts\",\"_encodings\",\"_unicode\",\"_standard_fonts\",\"_pattern\",\"_bidi\",\"_glyphlist\",\"_metrics\",\"_murmurhash\",\"_image\",\"DefaultPartialEvaluatorOptions\",\"NativeImageDecoder\",\"_ref$forceDataSchema\",\"_ref3$options\",\"fetchBuiltInCMap\",\"compressionType\",\"canDecode\",\"image\",\"isDecodable\",\"colorSpace\",\"isSupported\",\"TimeSlotManager\",\"normalizeBlendMode\",\"checked\",\"endTime\",\"deferred\",\"clone\",\"newOptions\",\"newEvaluator\",\"nodes\",\"graphicStates\",\"graphicStatesKeys\",\"bm\",\"xObjects\",\"xObjectsKeys\",\"xObject\",\"xResources\",\"buildFormXObject\",\"xobj\",\"initialState\",\"group\",\"groupOptions\",\"isolated\",\"knockout\",\"groupSubtype\",\"backdrop\",\"buildPaintImageXObject\",\"_ref5$isInline\",\"isInline\",\"_ref5$forceDisableNat\",\"forceDisableNativeImageDecoder\",\"bitStrideLength\",\"imgArray\",\"PDFImage\",\"createMask\",\"imageIsFromDecodeStream\",\"inverseDecode\",\"softMask\",\"createImageData\",\"nativeImageDecoder\",\"buildImage\",\"nativeDecoder\",\"imageObj\",\"handleSMask\",\"stateManager\",\"smaskContent\",\"smaskOptions\",\"transferObj\",\"isPDFFunction\",\"transferFn\",\"transferMap\",\"handleTilingType\",\"patternDict\",\"tilingOpList\",\"resourcesArray\",\"patternResources\",\"getTilingPatternIR\",\"tilingPatternIR\",\"handleSetFont\",\"fontArgs\",\"fontRef\",\"fontName\",\"loadFont\",\"isType3Font\",\"loadType3Data\",\"TranslatedFont\",\"ErrorFont\",\"handleText\",\"glyphs\",\"charsToGlyphs\",\"textRenderingMode\",\"fillColorSpace\",\"buildFontPaths\",\"gState\",\"gStateObj\",\"gStateKeys\",\"errorFont\",\"fontRes\",\"fontID\",\"translatedPromise\",\"fontCapability\",\"preEvaluatedFont\",\"preEvaluateFont\",\"fontRefIsRef\",\"fontAliases\",\"aliasFontRef\",\"Font\",\"getFontID\",\"translateFont\",\"fontType\",\"fontFile3\",\"getFontType\",\"buildPath\",\"lastIndex\",\"opArgs\",\"handleColorN\",\"patternName\",\"typeNum\",\"shading\",\"Pattern\",\"parseShading\",\"_ref6$initialState\",\"EvalState\",\"xobjs\",\"StateManager\",\"preprocessor\",\"EvaluatorPreprocessor\",\"timeSlotManager\",\"closePendingRestoreOPS\",\"savedStatesDepth\",\"promiseBody\",\"operation\",\"resolveXObject\",\"rejectXObject\",\"fontSize\",\"combinedGlyphs\",\"arrLength\",\"arrItem\",\"strokeColorSpace\",\"shadingRes\",\"patternIR\",\"dictName\",\"extGState\",\"_ref7$stateManager\",\"_ref7$normalizeWhites\",\"_ref7$combineTextItem\",\"_ref7$seenStyles\",\"seenStyles\",\"TextState\",\"textState\",\"WhitespaceRegexp\",\"textContent\",\"styles\",\"textContentItem\",\"vertical\",\"lastAdvanceWidth\",\"lastAdvanceHeight\",\"textAdvanceScale\",\"spaceWidth\",\"fakeSpaceMin\",\"fakeMultiSpaceMin\",\"fakeMultiSpaceMax\",\"textRunBreakAllowed\",\"SPACE_FACTOR\",\"MULTI_SPACE_FACTOR\",\"MULTI_SPACE_FACTOR_MAX\",\"skipEmptyXObjs\",\"ensureTextContentItem\",\"fontFamily\",\"fallbackName\",\"ascent\",\"descent\",\"tsm\",\"textHScale\",\"textRise\",\"fontMatrix\",\"glyphHeight\",\"trm\",\"ctm\",\"textMatrix\",\"textLineMatrix\",\"scaleLineX\",\"scaleCtmX\",\"isMonospace\",\"replaceWhitespace\",\"buildTextContentItem\",\"textChunk\",\"glyph\",\"glyphWidth\",\"vmetric\",\"glyphUnicode\",\"NormalizedUnicodes\",\"getNormalizedUnicodes\",\"reverseIfRtl\",\"charSpacing\",\"wordSpacing\",\"addFakeSpaces\",\"tx\",\"ty\",\"translateTextMatrix\",\"abs\",\"fakeSpaces\",\"round\",\"flushTextContentItem\",\"bidiResult\",\"bidi\",\"dir\",\"runBidiTransform\",\"enqueueChunk\",\"enqueue\",\"advance\",\"fontNameArg\",\"fontSizeArg\",\"leading\",\"isSameTextLine\",\"translateTextLineMatrix\",\"carriageReturn\",\"calcTextLineMatrixAdvance\",\"setTextLineMatrix\",\"breakTextRun\",\"currentState\",\"xObjStateManager\",\"sinkWrapper\",\"enqueueInvoked\",\"gStateFont\",\"extractDataStructures\",\"baseDict\",\"properties\",\"toUnicode\",\"toUnicodePromise\",\"readToUnicode\",\"composite\",\"cidSystemInfo\",\"registry\",\"ordering\",\"supplement\",\"cidToGidMap\",\"readCidToGidMap\",\"differences\",\"baseEncodingName\",\"diffEncoding\",\"defaultEncoding\",\"getEncoding\",\"isSymbolicFont\",\"FontFlags\",\"Symbolic\",\"isNonsymbolicFont\",\"Nonsymbolic\",\"StandardEncoding\",\"WinAnsiEncoding\",\"MacRomanEncoding\",\"SymbolSetEncoding\",\"ZapfDingbatsEncoding\",\"hasEncoding\",\"buildToUnicode\",\"_buildSimpleFontToUnicode\",\"charcode\",\"glyphName\",\"glyphsUnicodeMap\",\"getGlyphsUnicode\",\"getUnicodeForGlyph\",\"baseEncoding\",\"ToUnicodeMap\",\"hasIncludedToUnicodeMap\",\"fallbackToUnicode\",\"cMap\",\"builtInCMap\",\"IdentityCMap\",\"ucs2CMapName\",\"CMapFactory\",\"useCMap\",\"ucs2CMap\",\"cid\",\"ucs2\",\"IdentityToUnicodeMap\",\"firstChar\",\"lastChar\",\"cmapObj\",\"cmap\",\"getMap\",\"charCode\",\"cidToGidStream\",\"glyphsData\",\"glyphID\",\"extractWidths\",\"defaultVMetrics\",\"widths\",\"glyphsWidths\",\"defaultWidth\",\"glyphsVMetrics\",\"vmetrics\",\"parseFloat\",\"baseFontName\",\"metrics\",\"getBaseFontMetrics\",\"buildCharCodeToWidth\",\"firstWidth\",\"FixedPitch\",\"isSerifFont\",\"fontNameWoStyle\",\"getSerifFonts\",\"monospace\",\"lookupName\",\"getStdFontMap\",\"Metrics\",\"getMetrics\",\"glyphWidths\",\"widthsByGlyphName\",\"uint8array\",\"df\",\"MurmurHash3_64\",\"update\",\"diffLength\",\"diffBuf\",\"diffEntry\",\"hexdigest\",\"maxCharIndex\",\"Serif\",\"getSymbolsFonts\",\"baseFont\",\"fontNameStr\",\"baseFontStr\",\"cMapPromise\",\"fontFile\",\"length1\",\"length2\",\"length3\",\"wideChars\",\"fixedPitch\",\"xHeight\",\"capHeight\",\"italicAngle\",\"cidEncoding\",\"fontChar\",\"renderer\",\"hasBuiltPath\",\"getPathJs\",\"accent\",\"type3Loaded\",\"exportData\",\"glyphCacheValues\",\"parentOperatorList\",\"type3Options\",\"type3Evaluator\",\"loadCharProcsPromise\",\"charProcs\",\"fontResources\",\"charProcKeys\",\"charProcOperatorList\",\"_loop2\",\"glyphStream\",\"stateStack\",\"old\",\"txDiff\",\"tyDiff\",\"denominator\",\"calcRenderMatrix\",\"getOPMap\",\"numArgs\",\"variableArgs\",\"opMap\",\"nonProcessedArgs\",\"_numInvalidPathOPS\",\"opSpec\",\"argsLength\",\"partialMsg\",\"preprocessCommand\",\"CMap\",\"BUILT_IN_CMAPS\",\"codespaceRanges\",\"numCodespaceRanges\",\"dstLow\",\"dst\",\"nn\",\"codespaceRange\",\"_CMap\",\"addCodespaceRange\",\"BinaryCMapReader\",\"hexToInt\",\"hexToStr\",\"addHex\",\"incHex\",\"MAX_NUM_SIZE\",\"MAX_ENCODED_NUM_SIZE\",\"BinaryCMapStream\",\"readByte\",\"readNumber\",\"readSigned\",\"readHex\",\"readHexNumber\",\"sp\",\"readHexSigned\",\"readString\",\"char\",\"sequence\",\"dataSize\",\"subitemsCount\",\"mapOne\",\"mapCidRange\",\"mapBfRange\",\"strToInt\",\"expectString\",\"expectInt\",\"parseBfChar\",\"parseBfRange\",\"mapBfRangeToArray\",\"parseCidChar\",\"parseCidRange\",\"parseCodespaceRange\",\"parseWMode\",\"parseCMapName\",\"parseCMap\",\"previous\",\"embeddedUseCMap\",\"objLoop\",\"extendCMap\",\"createBuiltInCMap\",\"newCMap\",\"useCodespaceRanges\",\"cMapData\",\"parsedCMap\",\"isIdentityCMap\",\"SEAC_ANALYSIS_ENABLED\",\"_cff_parser\",\"_font_renderer\",\"_type1_parser\",\"PRIVATE_USE_AREAS\",\"PDF_GLYPH_SPACE_UNITS\",\"Script\",\"Italic\",\"AllCap\",\"SmallCap\",\"ForceBold\",\"MacStandardGlyphOrdering\",\"adjustWidths\",\"recoverGlyphName\",\"Glyph\",\"operatorListId\",\"isInFont\",\"matchesForCache\",\"charCodeOf\",\"amend\",\"OpenTypeFileBuilder\",\"writeInt16\",\"writeInt32\",\"writeData\",\"sfnt\",\"tables\",\"getSearchParams\",\"entriesCount\",\"entrySize\",\"maxPower2\",\"searchRange\",\"rangeShift\",\"toArray\",\"tablesNames\",\"tableName\",\"numTables\",\"tableOffsets\",\"searchParams\",\"checksum\",\"addTable\",\"sizes\",\"missingFile\",\"glyphCache\",\"toFontChar\",\"fallbackToSystemFont\",\"_getFontFileType2\",\"fileType\",\"fileSubtype\",\"isTrueTypeFile\",\"isTrueTypeCollectionFile\",\"isOpenTypeFile\",\"isType1File\",\"isCFFFile\",\"getFontFileType\",\"mimetype\",\"cff\",\"CFFFont\",\"Type1Font\",\"convert\",\"checkAndRepair\",\"isOpenType\",\"seacMap\",\"int16\",\"signedInt16\",\"string16\",\"safeString16\",\"buildToFontChar\",\"adjustMapping\",\"charCodeToGlyphId\",\"hasGlyph\",\"newGlyphZeroId\",\"newMap\",\"privateUseAreaIndex\",\"nextAvailableFontCharCode\",\"privateUseOffetEnd\",\"originalCharCode\",\"glyphId\",\"fontCharCode\",\"createCmapTable\",\"numGlyphs\",\"codeIndices\",\"getRanges\",\"bmpLength\",\"trailingRangesCount\",\"segCount\",\"startCount\",\"endCount\",\"idDeltas\",\"idRangeOffsets\",\"glyphsIds\",\"bias\",\"contiguous\",\"format314\",\"format31012\",\"header31012\",\"createOS2Table\",\"charstrings\",\"override\",\"unitsPerEm\",\"yMax\",\"yMin\",\"ulUnicodeRange1\",\"ulUnicodeRange2\",\"ulUnicodeRange3\",\"ulUnicodeRange4\",\"firstCharIndex\",\"lastCharIndex\",\"getUnicodeRangeFor\",\"ascentScaled\",\"typoAscent\",\"typoDescent\",\"winAscent\",\"winDescent\",\"createPostTable\",\"angle\",\"createNameTable\",\"strings\",\"stringsUnicode\",\"strBufUnicode\",\"platforms\",\"encodings\",\"languages\",\"namesRecordCount\",\"nameTable\",\"strOffset\",\"strs\",\"ID\",\"FontRendererFactory\",\"stdFontMap\",\"nonStdFontMap\",\"getNonStdFontMap\",\"isStandardFont\",\"remeasure\",\"GlyphMapForStandardFonts\",\"getGlyphMapForStandardFonts\",\"SupplementalGlyphMapForArialBlack\",\"getSupplementalGlyphMapForArialBlack\",\"SupplementalGlyphMapForCalibri\",\"getSupplementalGlyphMapForCalibri\",\"unicodeCharCode\",\"getDingbatsGlyphsUnicode\",\"VALID_TABLES\",\"readTables\",\"readTableEntry\",\"previousPosition\",\"readOpenTypeHeader\",\"ttf\",\"entrySelector\",\"sanitizeGlyph\",\"sourceStart\",\"sourceEnd\",\"hintsValid\",\"glyphProfile\",\"sizeOfInstructions\",\"glyf\",\"contoursCount\",\"flagsCount\",\"instructionsStart\",\"instructionsLength\",\"instructionsEnd\",\"coordinatesLength\",\"xyLength\",\"glyphDataLength\",\"readNameTable\",\"numRecords\",\"stringsStart\",\"records\",\"platform\",\"language\",\"nameIndex\",\"cffFile\",\"TTOpsStackDeltas\",\"sanitizeTTProgram\",\"ttContext\",\"funcId\",\"lastEndf\",\"lastDeff\",\"callstack\",\"functionsCalled\",\"tooComplexToFollowFunctions\",\"inFDEF\",\"ifLevel\",\"inELSE\",\"op\",\"functionsStackDeltas\",\"stackTop\",\"functionsDefined\",\"functionsUsed\",\"newStackLength\",\"stackDelta\",\"NaN\",\"foldTTTable\",\"ttcData\",\"ttc\",\"_readTrueTypeCollecti\",\"ttcTag\",\"majorVersion\",\"minorVersion\",\"numFonts\",\"offsetTable\",\"dsigTag\",\"dsigLength\",\"dsigOffset\",\"readTrueTypeCollectionHeader\",\"potentialHeader\",\"potentialTables\",\"nameEntry\",\"readTrueTypeCollectionData\",\"isTrueType\",\"isComposite\",\"numGlyphsOut\",\"dupFirstEntry\",\"maxFunctionDefs\",\"maxSizeOfInstructions\",\"fpgm\",\"prep\",\"cvt\",\"checkInvalidFunctions\",\"cvtData\",\"sanitizeTTPrograms\",\"numOfMetrics\",\"numMissing\",\"sanitizeMetrics\",\"locaLength\",\"indexToLocFormat\",\"numGlyphsPlusOne\",\"sanitizeHead\",\"missingGlyphs\",\"isGlyphLocationsLong\",\"glyphsInfo\",\"loca\",\"itemSize\",\"itemDecode\",\"itemEncode\",\"locaData\",\"locaDataSize\",\"oldGlyfData\",\"oldGlyfDataLength\",\"newGlyfData\",\"writeOffset\",\"simpleGlyph\",\"firstEntryLength\",\"sanitizeGlyphLocations\",\"metricsOverride\",\"post\",\"maxpNumGlyphs\",\"glyphNames\",\"valid\",\"glyphNameIndexes\",\"customNames\",\"readPostScriptTable\",\"isCidToGidMapEmpty\",\"cmapTable\",\"platformId\",\"encodingId\",\"mappings\",\"hasShortCmap\",\"potentialTable\",\"canBreak\",\"useTable\",\"format\",\"segIndex\",\"offsetsCount\",\"rangeOffset\",\"offsetIndex\",\"offsets\",\"readCmapTable\",\"cmapPlatformId\",\"cmapEncodingId\",\"cmapMappings\",\"cmapMappingsLength\",\"standardGlyphName\",\"unicodeOrCharCode\",\"glyphZeroId\",\"newMapping\",\"os2\",\"selection\",\"validateOS2Table\",\"CFFParser\",\"duplicateFirstGlyph\",\"compiler\",\"CFFCompiler\",\"compile\",\"namePrototype\",\"builder\",\"tableTag\",\"builtInEncoding\",\"adjustToUnicode\",\"getGlyphMapping\",\"hasGlyphId\",\"getCharCodes\",\"charCodes\",\"createCharCode\",\"seacs\",\"charset\",\"getCharset\",\"seac\",\"baseGlyphName\",\"accentGlyphName\",\"baseGlyphId\",\"accentGlyphId\",\"accentOffset\",\"baseFontCharCode\",\"accentFontCharCode\",\"tan\",\"cffWidths\",\"hmtx\",\"charstring\",\"_shadowWidth\",\"possibleSpaceReplacements\",\"charToGlyph\",\"widthCode\",\"mapSpecialUnicodeValues\",\"charsCache\",\"charsCacheKey\",\"readCharCode\",\"type1FontGlyphMapping\",\"findBlock\",\"streamBytes\",\"startIndex\",\"streamBytesLength\",\"headerBlockLength\",\"pfbHeader\",\"pfbHeaderPresent\",\"headerBlock\",\"suggestedLength\",\"headerBytes\",\"headerBytesLength\",\"block\",\"EEXEC_SIGNATURE\",\"streamStartPos\",\"getHeaderBlock\",\"Type1Parser\",\"extractFontHeader\",\"eexecBlock\",\"eexecBytes\",\"getEexecBlock\",\"extractFontProgram\",\"type2Charstrings\",\"getType2Charstrings\",\"subrs\",\"getType2Subrs\",\"getSeacs\",\"type1Charstrings\",\"type1Subrs\",\"type2Subrs\",\"CFF\",\"CFFHeader\",\"CFFTopDict\",\"setByName\",\"CFFStrings\",\"globalSubrIndex\",\"CFFIndex\",\"charsetArray\",\"CFFStandardStrings\",\"CFFCharset\",\"charStringsIndex\",\"charStrings\",\"privateDict\",\"CFFPrivateDict\",\"field\",\"privateData\",\"subrIndex\",\"subrsIndex\",\"charsets\",\"isCIDFont\",\"CFFFDSelect\",\"_charsets\",\"CharstringValidationData\",\"stackClearing\",\"stem\",\"resetStack\",\"undefStack\",\"CharstringValidationData12\",\"stackFn\",\"seacAnalysisEnabled\",\"parseHeader\",\"parseIndex\",\"topDictIndex\",\"stringIndex\",\"topDictParsed\",\"parseDict\",\"createDict\",\"parseNameIndex\",\"parseStringIndex\",\"parsePrivateDict\",\"hasName\",\"charStringOffset\",\"getByName\",\"charStringIndex\",\"fontBBox\",\"fdArrayIndex\",\"dictRaw\",\"fontDict\",\"fdArray\",\"parseCharsets\",\"fdSelect\",\"parseFDSelect\",\"parseEncoding\",\"charStringsAndSeacs\",\"parseCharStrings\",\"localSubrIndex\",\"hdrSize\",\"offSize\",\"parseOperand\",\"parseFloatOperand\",\"operands\",\"cffIndex\",\"offsetSize\",\"offsetStart\",\"offsetEnd\",\"Type\",\"cffDict\",\"setByKey\",\"parseCharString\",\"callDepth\",\"stackSize\",\"validationCommand\",\"subrNumber\",\"hasVStems\",\"firstStackClearing\",\"localSubrToUse\",\"privateDictToUse\",\"fdIndex\",\"getFDIndex\",\"nominalWidth\",\"emptyPrivateDictionary\",\"parentDict\",\"privateOffset\",\"privateDictEnd\",\"dictData\",\"subrsOffset\",\"relativeOffset\",\"removeByName\",\"CFFCharsetPredefinedTypes\",\"ISO_ADOBE\",\"ISOAdobeCharset\",\"EXPERT\",\"ExpertCharset\",\"EXPERT_SUBSET\",\"ExpertSubsetCharset\",\"raw\",\"predefined\",\"ExpertEncoding\",\"dataStart\",\"glyphsCount\",\"rangesCount\",\"gid\",\"supplementsCount\",\"sid\",\"readSupplement\",\"CFFEncoding\",\"glyphZero\",\"objects\",\"CFFDict\",\"keyToNameMap\",\"nameToKeyMap\",\"defaults\",\"types\",\"opcodes\",\"order\",\"valueLength\",\"createTables\",\"layout\",\"glyphIndex\",\"CFFOffsetTracker\",\"isTracking\",\"track\",\"location\",\"setEntryLocation\",\"offset1\",\"offset2\",\"offset3\",\"offset4\",\"compileHeader\",\"compileNameIndex\",\"subDict\",\"compiled\",\"compileTopDicts\",\"topDictTracker\",\"trackers\",\"compileStringIndex\",\"compileIndex\",\"compileEncoding\",\"compileCharset\",\"compileCharStrings\",\"compileFDSelect\",\"fontDictTrackers\",\"compilePrivateDicts\",\"encodeNumber\",\"encodeFloat\",\"encodeInteger\",\"nibbles\",\"sanitizedName\",\"dicts\",\"removeCidKeys\",\"fontDictTracker\",\"fontDictData\",\"compileDict\",\"privateDictTracker\",\"privateDictData\",\"offsetTracker\",\"compileGlobalSubrIndex\",\"writeByteArray\",\"compileTypedArray\",\"lastFD\",\"currentFD\",\"numRanges\",\"lastOffset\",\"encodingName\",\"MacExpertEncoding\",\"getSpecialPUASymbols\",\"UnicodeRanges\",\"charsLength\",\"isRTLRangeFor\",\"hexStr\",\"nameLen\",\"toUpperCase\",\"getLong\",\"getUshort\",\"parseCmap\",\"idDelta\",\"idOffset\",\"groups\",\"parseCff\",\"gsubrs\",\"isCFFCIDFont\",\"lookupCmap\",\"NOOP\",\"CompiledFont\",\"compiledGlyphs\",\"compiledCharCodeToGlyphId\",\"compileGlyph\",\"cmds\",\"compileGlyphImpl\",\"TrueTypeCompiled\",\"_CompiledFont\",\"compileGlyf\",\"quadraticCurveTo\",\"xa\",\"ya\",\"numberOfContours\",\"arg1\",\"arg2\",\"scale01\",\"scale10\",\"subglyph\",\"endPtsOfContours\",\"numberOfPoints\",\"points\",\"startPoint\",\"endPoint\",\"contour\",\"Type2Compiled\",\"_CompiledFont2\",\"cffInfo\",\"glyphNameMap\",\"gsubrsBias\",\"subrsBias\",\"compileCharString\",\"stems\",\"bezierCurveTo\",\"xb\",\"yb\",\"subrCode\",\"stackClean\",\"numSubrs\",\"achar\",\"bchar\",\"parseGlyfTable\",\"Type1CharString\",\"COMMAND_MAP\",\"lsb\",\"flexing\",\"encoded\",\"wx\",\"sbx\",\"dy\",\"executeCommand\",\"sby\",\"num2\",\"num1\",\"flexArgs\",\"howManyArgs\",\"command\",\"keepStack\",\"stackLength\",\"EEXEC_ENCRYPT_KEY\",\"isHexDigit\",\"discardNumber\",\"decrypted\",\"isSpecial\",\"encrypted\",\"isBinary\",\"digit1\",\"digit2\",\"decryptAscii\",\"readNumberArray\",\"getToken\",\"readInt\",\"readBoolean\",\"readCharStrings\",\"lenIV\",\"program\",\"blueArray\",\"charString\",\"encodingArg\",\"xstep\",\"ystep\",\"paintType\",\"tilingType\",\"ShadingType\",\"FUNCTION_BASED\",\"AXIAL\",\"RADIAL\",\"FREE_FORM_MESH\",\"LATTICE_FORM_MESH\",\"COONS_PATCH_MESH\",\"TENSOR_PATCH_MESH\",\"getPattern\",\"Shadings\",\"RadialAxial\",\"Mesh\",\"Dummy\",\"SMALL_NUMBER\",\"coordsArr\",\"shadingType\",\"domainArr\",\"extendStart\",\"extendEnd\",\"extendArr\",\"r1\",\"r2\",\"distance\",\"fnObj\",\"createFromArray\",\"colorStops\",\"ratio\",\"cssColor\",\"background\",\"r0\",\"MeshStreamReader\",\"tmpCompsBuf\",\"csNumComps\",\"tmpCsCompsBuf\",\"colorFn\",\"hasData\",\"align\",\"readFlag\",\"bitsPerFlag\",\"readCoordinate\",\"bitsPerCoordinate\",\"xi\",\"yi\",\"readComponents\",\"ci\",\"MIN_SPLIT_PATCH_CHUNKS_AMOUNT\",\"MAX_SPLIT_PATCH_CHUNKS_AMOUNT\",\"TRIANGLE_DENSITY\",\"getB\",\"lut\",\"t_\",\"buildB\",\"buildFigureFromPatch\",\"mesh\",\"figure\",\"figures\",\"coords\",\"pi\",\"figureMinX\",\"figureMinY\",\"figureMaxX\",\"figureMaxY\",\"splitXBy\",\"splitYBy\",\"verticesPerRow\",\"figureCoords\",\"figureColors\",\"cl\",\"cr\",\"c0\",\"c1\",\"c2\",\"c3\",\"bRow\",\"bCol\",\"newColor\",\"updateBounds\",\"patchMesh\",\"operators\",\"ps\",\"verticesLeft\",\"coord\",\"decodeType4Shading\",\"decodeType5Shading\",\"tmp4\",\"decodeType6Shading\",\"decodeType7Shading\",\"coordsPacked\",\"xy\",\"colorsPacked\",\"packData\",\"startLevel\",\"isLTR\",\"strLength\",\"createBidiText\",\"numBidi\",\"charType\",\"baseTypes\",\"arabicTypes\",\"isOdd\",\"sor\",\"eor\",\"lastType\",\"findUnequal\",\"before\",\"after\",\"setValues\",\"isEven\",\"highestLevel\",\"lowestOddLevel\",\"reverseValues\",\"fnDict\",\"PostScriptCompiler\",\"PostScriptEvaluator\",\"_ps_parser\",\"IsEvalSupportedCached\",\"_ref$isEvalSupported\",\"PDFFunction\",\"parseArray\",\"toNumberArray\",\"getSampleArray\",\"outputSize\",\"bps\",\"sampleMul\",\"strBytes\",\"strIdx\",\"typeFn\",\"constructSampled\",\"constructInterpolated\",\"constructStiched\",\"constructPostScript\",\"constructSampledFromIR\",\"constructInterpolatedFromIR\",\"constructStichedFromIR\",\"constructPostScriptFromIR\",\"toMultiArray\",\"inputSize\",\"encode\",\"interpolate\",\"xmin\",\"xmax\",\"ymin\",\"ymax\",\"samples\",\"cubeVertices\",\"cubeN\",\"Float64Array\",\"cubeVertex\",\"domain_2i\",\"domain_2i_1\",\"size_i\",\"e0\",\"n0\",\"n1\",\"rj\",\"_ref9\",\"fnRefs\",\"fns\",\"dmin\",\"dmax\",\"rmin\",\"rmax\",\"_ref12\",\"PostScriptLexer\",\"PostScriptParser\",\"_ref13\",\"numOutputs\",\"numInputs\",\"cache_available\",\"cachedValue\",\"execute\",\"stackIndex\",\"bound\",\"PostScriptStack\",\"initialStack\",\"copy\",\"roll\",\"operator\",\"atan\",\"cos\",\"LN10\",\"sin\",\"AstNode\",\"AstArgument\",\"AstLiteral\",\"AstBinaryOperation\",\"AstMin\",\"AstVariable\",\"AstVariableDefinition\",\"variable\",\"ExpressionBuilderVisitor\",\"parts\",\"buildAddOperation\",\"buildMulOperation\",\"buildSubOperation\",\"buildMinOperation\",\"visit\",\"visitArgument\",\"visitLiteral\",\"visitBinaryOperation\",\"visitMin\",\"visitVariable\",\"visitVariableDefinition\",\"literal\",\"definition\",\"ast1\",\"ast2\",\"tmpVar\",\"instructions\",\"lastRegister\",\"instruction\",\"statementBuilder\",\"expr\",\"nextToken\",\"accept\",\"expect\",\"PostScriptTokenTypes\",\"LBRACE\",\"parseBlock\",\"RBRACE\",\"NUMBER\",\"OPERATOR\",\"parseCondition\",\"conditionLocation\",\"IF\",\"jumpLocation\",\"endOfTrue\",\"IFELSE\",\"PostScriptToken\",\"opCache\",\"opValue\",\"getOperator\",\"seed\",\"blockCounts\",\"tailLength\",\"dataUint32\",\"k2\",\"C1\",\"C2\",\"handleImageData\",\"decodeAndClamp\",\"addend\",\"coefficient\",\"resizeImageMask\",\"_ref$isInline\",\"_ref$smask\",\"_ref$mask\",\"_ref$isMask\",\"isMask\",\"matte\",\"needsDecode\",\"decodeCoefficients\",\"decodeAddends\",\"isIndexed\",\"smaskPromise\",\"maskPromise\",\"_ref2$isInline\",\"_ref2$nativeDecoder\",\"imagePromise\",\"imageData\",\"smaskData\",\"maskData\",\"computedLength\",\"decodeBuffer\",\"getComponents\",\"buf\",\"bufferPos\",\"rowComps\",\"loop1End\",\"loop2End\",\"remainingBits\",\"fillOpacity\",\"rgbaBuf\",\"alphaBuf\",\"sw\",\"sh\",\"fillGrayBuffer\",\"opacity\",\"imageOffset\",\"maskOffset\",\"undoPreblend\",\"matteRgb\",\"matteR\",\"matteG\",\"matteB\",\"forceRGBA\",\"getImageBytes\",\"newArray\",\"imageLength\",\"maybeUndoPreblend\",\"fillRgb\",\"resolveCall\",\"_resolveCall\",\"wrapReason\",\"makeReasonSerializable\",\"resolveOrReject\",\"success\",\"sourceName\",\"targetName\",\"comObj\",\"callbackId\",\"streamId\",\"streamSinks\",\"streamControllers\",\"callbacksCapabilities\",\"ah\",\"actionHandler\",\"_onComObjOnMessage\",\"_processStreamMessage\",\"isReply\",\"_sourceName\",\"_targetName\",\"_createStreamSink\",\"scope\",\"queueingStrategy\",\"startCapability\",\"startCall\",\"isClosed\",\"pullCapability\",\"pullCall\",\"cancelCapability\",\"cancelCall\",\"sendStreamRequest\",\"streamSink\",\"isCancelled\",\"lastDesiredSize\",\"sinkCapability\",\"sendStreamResponse\",\"deleteStreamController\",\"removeEventListener\",\"base64\",\"ieee754\",\"kMaxLength\",\"TYPED_ARRAY_SUPPORT\",\"createBuffer\",\"encodingOrOffset\",\"allocUnsafe\",\"fromArrayLike\",\"fromArrayBuffer\",\"string\",\"isEncoding\",\"actual\",\"fromString\",\"isBuffer\",\"fromObject\",\"assertSize\",\"loweredCase\",\"utf8ToBytes\",\"base64ToBytes\",\"swap\",\"bidirectionalIndexOf\",\"indexSize\",\"valLength\",\"readUInt16BE\",\"foundIndex\",\"hexWrite\",\"strLen\",\"parsed\",\"substr\",\"utf8Write\",\"blitBuffer\",\"asciiWrite\",\"byteArray\",\"asciiToBytes\",\"latin1Write\",\"base64Write\",\"ucs2Write\",\"units\",\"hi\",\"lo\",\"utf16leToBytes\",\"base64Slice\",\"fromByteArray\",\"utf8Slice\",\"secondByte\",\"thirdByte\",\"fourthByte\",\"tempCodePoint\",\"firstByte\",\"codePoint\",\"bytesPerSequence\",\"codePoints\",\"MAX_ARGUMENTS_LENGTH\",\"decodeCodePointsArray\",\"SlowBuffer\",\"alloc\",\"INSPECT_MAX_BYTES\",\"foo\",\"typedArraySupport\",\"poolSize\",\"_augment\",\"species\",\"allocUnsafeSlow\",\"_isBuffer\",\"list\",\"swap16\",\"swap32\",\"swap64\",\"hexSlice\",\"asciiSlice\",\"latin1Slice\",\"utf16leSlice\",\"equals\",\"inspect\",\"thisStart\",\"thisEnd\",\"thisCopy\",\"targetCopy\",\"toJSON\",\"toHex\",\"checkOffset\",\"ext\",\"checkInt\",\"objectWriteUInt16\",\"littleEndian\",\"objectWriteUInt32\",\"checkIEEE754\",\"writeFloat\",\"noAssert\",\"writeDouble\",\"newBuf\",\"sliceLen\",\"readUIntLE\",\"mul\",\"readUIntBE\",\"readUInt8\",\"readUInt16LE\",\"readUInt32LE\",\"readUInt32BE\",\"readIntLE\",\"readIntBE\",\"readInt16LE\",\"readInt16BE\",\"readInt32LE\",\"readInt32BE\",\"readFloatLE\",\"readFloatBE\",\"readDoubleLE\",\"readDoubleBE\",\"writeUIntLE\",\"writeUIntBE\",\"writeUInt8\",\"writeUInt16LE\",\"writeUInt16BE\",\"writeUInt32LE\",\"writeUInt32BE\",\"writeIntLE\",\"sub\",\"writeIntBE\",\"writeInt8\",\"writeInt16LE\",\"writeInt16BE\",\"writeInt32LE\",\"writeInt32BE\",\"writeFloatLE\",\"writeFloatBE\",\"writeDoubleLE\",\"writeDoubleBE\",\"targetStart\",\"INVALID_BASE64_RE\",\"leadSurrogate\",\"toByteArray\",\"trim\",\"stringtrim\",\"base64clean\",\"b64\",\"lens\",\"getLens\",\"validLen\",\"placeHoldersLen\",\"Arr\",\"_byteLength\",\"curByte\",\"revLookup\",\"uint8\",\"extraBytes\",\"len2\",\"encodeChunk\",\"isLE\",\"mLen\",\"nBytes\",\"eLen\",\"eMax\",\"eBias\",\"nBits\",\"rt\",\"cachedSetTimeout\",\"cachedClearTimeout\",\"defaultSetTimout\",\"defaultClearTimeout\",\"runTimeout\",\"fun\",\"clearTimeout\",\"currentQueue\",\"draining\",\"queueIndex\",\"cleanUpNextTick\",\"drainQueue\",\"timeout\",\"runClearTimeout\",\"Item\",\"noop\",\"browser\",\"env\",\"argv\",\"addListener\",\"once\",\"off\",\"removeListener\",\"removeAllListeners\",\"prependListener\",\"prependOnceListener\",\"listeners\",\"binding\",\"cwd\",\"chdir\",\"umask\"],\"mappings\":\"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OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,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APA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,GAOA,CAAA,EAPA,IAQAC,EAAA,CAAA,EAAA,GAAA,GAAA,CAAA,IAZA,GAYA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA,GAAA,OACAC,EAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IACAC,EAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,IAdA,GAcA,CAAA,IAdA,GAcb,EAAAnoE,GACA,IAAAmsC,EAAAztC,UAAApG,OAAA,QAAAN,IAAA0G,UAAA,GAAAA,UAAA,GAAA,GAEA,IAAAsB,GAAA,oBAAAA,EAAA7H,KACA,MAAA,IAAA2B,MAAA,iDAGAhE,KAAAkK,OAAAA,EACAlK,KAAAqsE,KAAA,EACArsE,KAAAmzE,SAAA98B,EAAA,GAAA,EACAr2C,KAAAozE,OAAA/8B,EAAA,YAAA,EACAr2C,KAAAqzE,UAAAh9B,EAAA,mBAAA,EACAr2C,KAAAqvE,QAAAh5B,EAAA,SAAA,KACAr2C,KAAAszE,KAAAj9B,EAAA,MAAA,EACA,IAkBAy4B,EAlBAyE,EAAAl9B,EAAA,WAoBA,IAlBA,OAAAk9B,QAAArxE,IAAAqxE,IACAA,GAAA,GAGAvzE,KAAAuzE,QAAAA,EACAvzE,KAAAwzE,MAAAn9B,EAAA,WAAA,EACAr2C,KAAAyzE,WAAA,IAAAv4D,YAAAlb,KAAAqvE,QAAA,GACArvE,KAAA0zE,QAAA,IAAAx4D,YAAAlb,KAAAqvE,QAAA,GACArvE,KAAAyzE,WAAA,GAAAzzE,KAAAqvE,QACArvE,KAAA2zE,UAAA,EACA3zE,KAAA4zE,IAAA,EACA5zE,KAAA6zE,WAAA7zE,KAAAmzE,SAAA,EACAnzE,KAAA8zE,UAAA,EACA9zE,KAAA+zE,SAAA,EACA/zE,KAAAg0E,WAAA,EACAh0E,KAAAi0E,UAAA,EAGA,KAAAnF,EAAA9uE,KAAAk0E,UAAA,MACAl0E,KAAAm0E,SAAA,GAGA,IAAArF,GACA9uE,KAAAm0E,SAAA,IAGAn0E,KAAAmzE,SAAA,IACAnzE,KAAA6zE,YAAA7zE,KAAAk0E,UAAA,GAEAl0E,KAAAm0E,SAAA,IAumBA,OAnmBA9B,EAAA1yE,UAAA,CACAizE,aAAA,WACA,GAAA5yE,KAAAqsE,IACA,OAAA,EAGA,IAGA+H,EAAAC,EAAA7G,EAAAzvE,EA6UAK,EAhVAs1E,EAAA1zE,KAAA0zE,QACAD,EAAAzzE,KAAAyzE,WACApE,EAAArvE,KAAAqvE,QAGA,GAAA,IAAArvE,KAAAg0E,WAAA,CAKA,GAJAh0E,KAAAi0E,WACAj0E,KAAAqsE,KAAA,GAGArsE,KAAAqsE,IACA,OAAA,EAIA,IAAAyC,EAAAb,EAAAqG,EAEA,GAHAt0E,KAAAyC,KAAA,EAGAzC,KAAA6zE,WAAA,CACA,IAAA91E,EAAA,EAA2B01E,EAAA11E,GAAAsxE,IAAyBtxE,EACpD21E,EAAA31E,GAAA01E,EAAA11E,GAUA,IAPA21E,EAAA31E,KAAAsxE,EACAqE,EAAA31E,GAAAsxE,EACAoE,EAAA,GAAA,EACAzzE,KAAA2zE,UAAA,EACAS,EAAA,EACAC,EAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,GAGA,OAFAP,EAAA9uE,KAAAu0E,kBAGA,KAxGA,EAyGAv0E,KAAAw0E,WAAAd,EAAAU,EAAA,GAAAC,GAEAX,EAAAU,EAAA,GAAA/E,IACA+E,GAAA,GAGA,MAEA,KAhHA,EAmHA,GAFAtF,EAAAb,EAAA,EAEAoG,EAAA,CACA,GACAvF,GAAAwF,EAAAt0E,KAAAy0E,sBACyBH,GAAA,IAEzB,GACArG,GAAAqG,EAAAt0E,KAAA00E,sBACyBJ,GAAA,QACF,CACvB,GACAxF,GAAAwF,EAAAt0E,KAAA00E,sBACyBJ,GAAA,IAEzB,GACArG,GAAAqG,EAAAt0E,KAAAy0E,sBACyBH,GAAA,IASzB,IANAt0E,KAAAw0E,WAAAf,EAAAzzE,KAAA2zE,WAAA7E,EAAAuF,GAEAZ,EAAAzzE,KAAA2zE,WAAAtE,GACArvE,KAAAw0E,WAAAf,EAAAzzE,KAAA2zE,WAAA1F,EAAA,EAAAoG,GAGAX,EAAAU,IAAAX,EAAAzzE,KAAA2zE,YAAAD,EAAAU,GAAA/E,GACA+E,GAAA,EAGA,MAEA,KA3IA,EAgJA,GAJAp0E,KAAAw0E,WAAAd,EAAAU,GAAA,EAAAC,GAEAA,GAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,EAGA,MAFA+E,EAEAV,EAAAU,IAAAX,EAAAzzE,KAAA2zE,YAAAD,EAAAU,GAAA/E,GACA+E,GAAA,EAIA,MAEA,KA5JA,EAiKA,GAJAp0E,KAAAw0E,WAAAd,EAAAU,GAAA,EAAAC,GAEAA,GAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,EAGA,MAFA+E,EAEAV,EAAAU,IAAAX,EAAAzzE,KAAA2zE,YAAAD,EAAAU,GAAA/E,GACA+E,GAAA,EAIA,MAEA,KA7KA,EAkLA,GAJAp0E,KAAAw0E,WAAAd,EAAAU,GAAA,EAAAC,GAEAA,GAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,EAGA,MAFA+E,EAEAV,EAAAU,IAAAX,EAAAzzE,KAAA2zE,YAAAD,EAAAU,GAAA/E,GACA+E,GAAA,EAIA,MAEA,KA7LA,EAkMA,GAJAp0E,KAAAw0E,WAAAd,EAAAU,GAAAC,GAEAA,GAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,EAGA,MAFA+E,EAEAV,EAAAU,IAAAX,EAAAzzE,KAAA2zE,YAAAD,EAAAU,GAAA/E,GACA+E,GAAA,EAIA,MAEA,KAtMA,EA2MA,GAJAp0E,KAAA20E,cAAAjB,EAAAU,GAAA,EAAAC,GAEAA,GAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,EAOA,IANA+E,EAAA,IACAA,IAEAA,EAGAV,EAAAU,IAAAX,EAAAzzE,KAAA2zE,YAAAD,EAAAU,GAAA/E,GACA+E,GAAA,EAIA,MAEA,KA3NA,EAgOA,GAJAp0E,KAAA20E,cAAAjB,EAAAU,GAAA,EAAAC,GAEAA,GAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,EAOA,IANA+E,EAAA,IACAA,IAEAA,EAGAV,EAAAU,IAAAX,EAAAzzE,KAAA2zE,YAAAD,EAAAU,GAAA/E,GACA+E,GAAA,EAIA,MAEA,KAhPA,EAqPA,GAJAp0E,KAAA20E,cAAAjB,EAAAU,GAAA,EAAAC,GAEAA,GAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,EAOA,IANA+E,EAAA,IACAA,IAEAA,EAGAV,EAAAU,IAAAX,EAAAzzE,KAAA2zE,YAAAD,EAAAU,GAAA/E,GACA+E,GAAA,EAIA,MAEA,KAxQA,EAyQAp0E,KAAAw0E,WAAAnF,EAAA,GAEArvE,KAAAqsE,KAAA,EACA,MAEA,SACA,EAAAtrE,EAAAqC,MAAA,eAEApD,KAAAw0E,WAAAnF,EAAA,GAEArvE,KAAAyC,KAAA,QAQA,IAJAgxE,EAAA,GAAA,EACAzzE,KAAA2zE,UAAA,EACAU,EAAA,EAEAZ,EAAAzzE,KAAA2zE,WAAAtE,GAAA,CAGA,GAFAP,EAAA,EAEAuF,EACA,GACAvF,GAAAwF,EAAAt0E,KAAAy0E,sBACqBH,GAAA,SAErB,GACAxF,GAAAwF,EAAAt0E,KAAA00E,sBACqBJ,GAAA,IAGrBt0E,KAAAw0E,WAAAf,EAAAzzE,KAAA2zE,WAAA7E,EAAAuF,GAEAA,GAAA,EAIA,IAAAO,GAAA,EAMA,GAJA50E,KAAAqzE,YACArzE,KAAA8zE,YAAA,GAGA9zE,KAAAuzE,SAAAvzE,KAAA4zE,MAAA5zE,KAAAszE,KAAA,EAEe,CAGf,GAFAxE,EAAA9uE,KAAAk0E,UAAA,IAEAl0E,KAAAozE,OACA,MA1TA,IA0TAtE,GAAA,IAAAA,GACA9uE,KAAAm0E,SAAA,GAEArF,EAAA9uE,KAAAk0E,UAAA,SAGA,KAAA,IAAApF,GACA9uE,KAAAm0E,SAAA,GAEArF,EAAA9uE,KAAAk0E,UAAA,IAIA,IAAApF,GACA9uE,KAAAm0E,SAAA,IAEAS,GAAA,IA1UA,IA2UiB9F,IACjB9uE,KAAAqsE,KAAA,QAvBArsE,KAAAi0E,UAAA,EAiCA,IANAj0E,KAAAqsE,KAAArsE,KAAAmzE,SAAA,IAAAnzE,KAAAi0E,WACAj0E,KAAA6zE,YAAA7zE,KAAAk0E,UAAA,GAEAl0E,KAAAm0E,SAAA,IAGAn0E,KAAAuzE,SAAAqB,GAAA50E,KAAAqzE,WAGA,GAAA,KAFAvE,EAAA9uE,KAAAk0E,UAAA,KAEA,CASA,GARAl0E,KAAAm0E,SAAA,IAEAn0E,KAAAmzE,SAAA,IACAnzE,KAAAk0E,UAAA,GAEAl0E,KAAAm0E,SAAA,IAGAn0E,KAAAmzE,UAAA,EACA,IAAAp1E,EAAA,EAA+BA,EAAA,IAAOA,EAGtC,KAFA+wE,EAAA9uE,KAAAk0E,UAAA,OAGA,EAAAnzE,EAAAqC,MAAA,iBAAA0rE,GAGA9uE,KAAAm0E,SAAA,IAEAn0E,KAAAmzE,SAAA,IACAnzE,KAAAk0E,UAAA,GAEAl0E,KAAAm0E,SAAA,IAKAn0E,KAAAqsE,KAAA,QAEe,GAAArsE,KAAAyC,KAAAzC,KAAAozE,OAAA,CACf,OAAA,CAGA,IA1XA,KAwXAtE,EAAA9uE,KAAAk0E,UAAA,KAIA,OADAl0E,KAAAqsE,KAAA,GACA,EAGA,GAAAyC,GAAA,IAAA,EACA,MAGA9uE,KAAAm0E,SAAA,GAGAn0E,KAAAm0E,SAAA,IAEAn0E,KAAAmzE,SAAA,IACAnzE,KAAAm0E,SAAA,GAEAn0E,KAAA6zE,aAAA,EAAA/E,IAIA2E,EAAA,GAAA,EACAzzE,KAAAg0E,WAAAP,EAAAzzE,KAAA2zE,UAAA,GAEA3zE,KAAAg0E,WAAAP,EAAAzzE,KAAA2zE,UAAA,GAGA3zE,KAAA4zE,MAKA,GAAA5zE,KAAAg0E,YAAA,EACA51E,EAAA,EAAA4B,KAAA2zE,UAAA,EAAA,IACA3zE,KAAAg0E,YAAA,EAEA,IAAAh0E,KAAAg0E,YAAAP,EAAAzzE,KAAA2zE,WAAAtE,IACArvE,KAAA2zE,YACA3zE,KAAAg0E,WAAAP,EAAAzzE,KAAA2zE,WAAAF,EAAAzzE,KAAA2zE,UAAA,QAEa,CACbnG,EAAA,EACApvE,EAAA,EAEA,GACA4B,KAAAg0E,WAAAxG,GACApvE,IAAAovE,EAEA,EAAAxtE,KAAA2zE,YACAv1E,GAAA,KAAA,EAAAovE,GAGAxtE,KAAAg0E,YAAAxG,EACAA,EAAA,IAEApvE,IAAA4B,KAAAg0E,WAEA,EAAAh0E,KAAA2zE,YACAv1E,GAAA,KAAA,EAAA4B,KAAAg0E,YAGAxG,GAAAxtE,KAAAg0E,WACAh0E,KAAAg0E,WAAA,EAEAP,EAAAzzE,KAAA2zE,WAAAtE,GACArvE,KAAA2zE,YACA3zE,KAAAg0E,WAAAP,EAAAzzE,KAAA2zE,WAAAF,EAAAzzE,KAAA2zE,UAAA,IACmBnG,EAAA,IACnBpvE,IAAAovE,EACAA,EAAA,UAGeA,GAOf,OAJAxtE,KAAAwzE,QACAp1E,GAAA,KAGAA,GAEAo2E,WAAA,SAAAK,EAAAR,GACA,IAAAZ,EAAAzzE,KAAAyzE,WACAE,EAAA3zE,KAAA2zE,UAEAkB,EAAApB,EAAAE,KACAkB,EAAA70E,KAAAqvE,WACA,EAAAtuE,EAAAqC,MAAA,uBACApD,KAAAyC,KAAA,EACAoyE,EAAA70E,KAAAqvE,SAGA,EAAAsE,EAAAU,KACAV,EAGAF,EAAAE,GAAAkB,GAGA70E,KAAA2zE,UAAAA,GAEAgB,cAAA,SAAAE,EAAAR,GACA,IAAAZ,EAAAzzE,KAAAyzE,WACAE,EAAA3zE,KAAA2zE,UAEA,GAAAkB,EAAApB,EAAAE,GACAkB,EAAA70E,KAAAqvE,WACA,EAAAtuE,EAAAqC,MAAA,uBACApD,KAAAyC,KAAA,EACAoyE,EAAA70E,KAAAqvE,SAGA,EAAAsE,EAAAU,KACAV,EAGAF,EAAAE,GAAAkB,OACa,GAAAA,EAAApB,EAAAE,GAAA,CAOb,IANAkB,EAAA,KACA,EAAA9zE,EAAAqC,MAAA,gBACApD,KAAAyC,KAAA,EACAoyE,EAAA,GAGAlB,EAAA,GAAAkB,EAAApB,EAAAE,EAAA,MACAA,EAGAF,EAAAE,GAAAkB,EAGA70E,KAAA2zE,UAAAA,GAEAmB,eAAA,SAAA1nE,EAAA5H,EAAAkoE,EAAAjb,GAGA,IAFA,IAAAsiB,EAAAtiB,GAAA,EAEA10D,EAAAqP,EAA+BrP,GAAAyH,IAAUzH,EAAA,CACzC,IAAAqR,EAAApP,KAAAk0E,UAAAn2E,GAEA,IArgBA,IAqgBAqR,EACA,MAAA,EAAA,EAAA,GAAA,GAOA,GAJArR,EAAAyH,IACA4J,IAAA5J,EAAAzH,IAGAg3E,GAAA3lE,GAAA2lE,EAAA,CACA,IAAAl1E,EAAA6tE,EAAAt+D,EAAA2lE,GAEA,GAAAl1E,EAAA,KAAA9B,EAGA,OAFAiC,KAAAm0E,SAAAp2E,GAEA,EAAA,EAAA8B,EAAA,IAAA,IAKA,MAAA,EAAA,EAAA,GAAA,IAEA00E,eAAA,WACA,IACA10E,EADAuP,EAAA,EAGA,GAAApP,KAAAuzE,SAIA,GAHAnkE,EAAApP,KAAAk0E,UAAA,IACAr0E,EAAAgzE,EAAAzjE,KAEAvP,EAAA,GAAA,EAGA,OAFAG,KAAAm0E,SAAAt0E,EAAA,IAEAA,EAAA,OAEa,CACb,IAAAsT,EAAAnT,KAAA80E,eAAA,EAAA,EAAAjC,GAEA,GAAA1/D,EAAA,IAAAA,EAAA,GACA,OAAAA,EAAA,GAKA,OADA,EAAApS,EAAAqC,MAAA,qBA/iBA,GAkjBAsxE,cAAA,WACA,IACA70E,EADAuP,EAAA,EAGA,GAAApP,KAAAuzE,QAAA,CAGA,IAzjBA,KAujBAnkE,EAAApP,KAAAk0E,UAAA,KAGA,OAAA,EASA,IALAr0E,EADAuP,GAAA,IAAA,EACA0jE,EAAA1jE,GAEA2jE,EAAA3jE,GAAA,IAGA,GAAA,EAGA,OAFApP,KAAAm0E,SAAAt0E,EAAA,IAEAA,EAAA,OAEa,CACb,IAAAsT,EAAAnT,KAAA80E,eAAA,EAAA,EAAA/B,GAEA,GAAA5/D,EAAA,GACA,OAAAA,EAAA,GAKA,IAFAA,EAAAnT,KAAA80E,eAAA,GAAA,GAAAhC,IAEA,GACA,OAAA3/D,EAAA,GAQA,OAJA,EAAApS,EAAAqC,MAAA,kBAEApD,KAAAm0E,SAAA,GAEA,GAEAM,cAAA,WACA,IAAArlE,EAAAvP,EAEA,GAAAG,KAAAuzE,QAAA,CAGA,IAlmBA,KAgmBAnkE,EAAApP,KAAAk0E,UAAA,KAGA,OAAA,EAWA,IAPAr0E,EADAuP,GAAA,IAAA,EACA4jE,EAAA5jE,GACeA,GAAA,IAAA,GAAAA,GAAA,IAAA,EACf6jE,GAAA7jE,GAAA,GAAA,IAEA8jE,EAAA9jE,GAAA,IAGA,GAAA,EAGA,OAFApP,KAAAm0E,SAAAt0E,EAAA,IAEAA,EAAA,OAEa,CACb,IAAAsT,EAAAnT,KAAA80E,eAAA,EAAA,EAAA5B,GAEA,GAAA//D,EAAA,GACA,OAAAA,EAAA,GAKA,IAFAA,EAAAnT,KAAA80E,eAAA,EAAA,GAAA7B,EAAA,KAEA,GACA,OAAA9/D,EAAA,GAKA,IAFAA,EAAAnT,KAAA80E,eAAA,GAAA,GAAA9B,IAEA,GACA,OAAA7/D,EAAA,GAQA,OAJA,EAAApS,EAAAqC,MAAA,kBAEApD,KAAAm0E,SAAA,GAEA,GAEAD,UAAA,SAAA10E,GAGA,IAFA,IAAApB,EAEA4B,KAAA8zE,UAAAt0E,GAAA,CACA,IAAA,KAAApB,EAAA4B,KAAAkK,OAAA7H,QACA,OAAA,IAAArC,KAAA8zE,WAlpBA,EAspBA9zE,KAAA+zE,UAAAv0E,EAAAQ,KAAA8zE,UAAA,OAAA,GAAAt0E,EAGAQ,KAAA+zE,SAAA/zE,KAAA+zE,UAAA,EAAA31E,EACA4B,KAAA8zE,WAAA,EAGA,OAAA9zE,KAAA+zE,UAAA/zE,KAAA8zE,UAAAt0E,EAAA,OAAA,GAAAA,GAEA20E,SAAA,SAAA30E,IACAQ,KAAA8zE,WAAAt0E,GAAA,IACAQ,KAAA8zE,UAAA,KAIAzB,EAvqBA,GA0qBAx0E,EAAAw0E,gBAAAA,GAMA,SAAAv0E,EAAAD,EAAA4C,GACA,aAEAhC,OAAAC,eAAAb,EAAA,aAAA,CACAmB,OAAA,IAEAnB,EAAAsrE,iBAAA,EAEA,IAAAhoE,EAAAV,EAAA,KAEA64C,EAAA74C,EAAA,KAEAu0E,EAAAv0E,EAAA,KAEAM,EAAAN,EAAA,GAEA0oE,EAAA,WACA,SAAAA,EAAAv8D,EAAAu7D,EAAArvD,EAAA+iD,GACA77D,KAAA4M,OAAAA,EACA5M,KAAAmoE,YAAAA,EACAnoE,KAAA8Y,KAAAA,EACA9Y,KAAA67D,OAAAA,EAEAviB,EAAAiyB,aAAArtE,KAAA8B,KAAAmoE,GAmDA,OAhDAgB,EAAAxpE,UAAAlB,OAAAY,OAAAi6C,EAAAiyB,aAAA5rE,WACAlB,OAAAC,eAAAyqE,EAAAxpE,UAAA,QAAA,CACAf,IAAA,WACA,OAAA,EAAAmC,EAAAgb,QAAA/b,KAAA,QAAAA,KAAA4M,OAAA+9C,SAAA3qD,KAAAmoE,eAEAlsD,cAAA,IAGAktD,EAAAxpE,UAAA6sE,aAAA,SAAAC,KAEAtD,EAAAxpE,UAAA4sE,UAAA,WACA,IAAAvsE,KAAAqsE,IAAA,CAIA,IAAA4I,EAAA,IAAAD,EAAAE,WACArrB,EAAA,GAEA,IAAA,EAAA1oD,EAAAyuD,QAAA5vD,KAAA67D,QAAA,CACA,IAAAsZ,EAAAn1E,KAAA67D,OAAAj9D,IAAA,gBAEA,IAAA,EAAAuC,EAAAgvD,UAAAglB,GAAA,CACA,IAAAC,EAAAD,EAAAxqB,WACAd,EAAAtnD,KAAA,CACA2C,KAAAkwE,EACAhoE,MAAA,EACA5H,IAAA4vE,EAAA5yE,UAKAqnD,EAAAtnD,KAAA,CACA2C,KAAAlF,KAAA6M,MACAO,MAAA,EACA5H,IAAAxF,KAAA6M,MAAArK,SAKA,IAHA,IAAA0C,EAAA+vE,EAAAI,YAAAxrB,GACAuV,EAAAl6D,EAAA1C,OAEAzE,EAAA,EAAyBA,EAAAqhE,EAAgBrhE,IACzCmH,EAAAnH,IAAA,IAGAiC,KAAAsG,OAAApB,EACAlF,KAAAosE,aAAAhN,EACAp/D,KAAAqsE,KAAA,IAGAlD,EA1DA,GA6DAtrE,EAAAsrE,YAAAA,GAMA,SAAArrE,EAAAD,EAAA4C,GACA,aAEAhC,OAAAC,eAAAb,EAAA,aAAA,CACAmB,OAAA,IAEAnB,EAAAq3E,gBAAA,EAEA,IAAAn0E,EAAAN,EAAA,GAEA60E,EAAA70E,EAAA,KAEA0xE,EAAA1xE,EAAA,KAEA80E,EAAA,WACA,SAAAA,EAAA/7D,GACAxZ,KAAAgO,QAAA,gBAAAwL,EAMA,OAHA+7D,EAAA51E,UAAA,IAAAqE,MACAuxE,EAAA51E,UAAArB,KAAA,aACAi3E,EAAA/zE,YAAA+zE,EACAA,EARA,GAWAL,EAAA,WACA,SAAAM,KAYA,SAAAC,EAAAvwE,EAAAkI,EAAA5H,GACAxF,KAAAkF,KAAAA,EACAlF,KAAAoN,MAAAA,EACApN,KAAAwF,IAAAA,EAgBA,SAAAkwE,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAAI,YAAAH,GACArsE,EAAA,EAEA,SAAAmoE,EAAAlvE,GAGA,IAFA,IAAAoX,EAAA,EAEA7b,EAAA,EAA2BA,EAAAyE,EAAYzE,IAAA,CACvC,IAAAi4E,EAAAH,EAAAI,QAAAH,EAAAvsE,GACAA,EAAAA,EAAA,IAAAA,GAAA,EAAAysE,EAAA,KAAAzsE,GAAA,EAAAysE,GAAA,IACAp8D,EAAAA,GAAA,EAAAo8D,EAGA,OAAAp8D,IAAA,EAGA,IAAAgwD,EAAA8H,EAAA,GACA1yE,EAAA0yE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAA,KAAAA,EAAA,IAAA,IAAAA,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,GAAA,EAAAA,EAAA,GACA,OAAA,IAAA9H,EAAA5qE,EAAAA,EAAA,GAAAA,EAAA,KAGA,SAAAk3E,EAAAP,EAAAE,EAAA3E,GAIA,IAHA,IAAA4E,EAAAH,EAAAI,YAAA,QACAxsE,EAAA,EAEAxL,EAAA,EAAyBA,EAAAmzE,EAAgBnzE,IAAA,CAEzCwL,EAAAA,GAAA,EADAssE,EAAAI,QAAAH,EAAAvsE,GAIA,OAAA2nE,EAAA,GACA3nE,GAAA,GAAA2nE,GAAA,EAGA,WAAA3nE,EA/DAisE,EAAA71E,UAAA,CACAo2E,YAAA,SAAAtpE,GACA,OAAAA,KAAAzM,KACAA,KAAAyM,GAGAzM,KAAAyM,GAAA,IAAA0pE,UAAA,SAUAV,EAAA91E,UAAA,CACAk2E,cACA,IAAAA,EAAA,IAAAP,EAAAc,kBAAAp2E,KAAAkF,KAAAlF,KAAAoN,MAAApN,KAAAwF,KACA,OAAA,EAAAzE,EAAAgb,QAAA/b,KAAA,UAAA61E,IAGAF,mBACA,IAAAnZ,EAAA,IAAAgZ,EACA,OAAA,EAAAz0E,EAAAgb,QAAA/b,KAAA,eAAAw8D,KA0CA,IAAA6Z,EAAA,CAAA,mBAAA,KAAA,KAAA,KAAA,yBAAA,KAAA,sBAAA,8BAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,oBAAA,KAAA,KAAA,KAAA,6BAAA,KAAA,0BAAA,kCAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,4BAAA,KAAA,yBAAA,iCAAA,sCAAA,KAAA,mCAAA,2CAAA,KAAA,KAAA,KAAA,KAAA,kBAAA,YAAA,cAAA,YAAA,WAAA,SAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,aACAC,EAAA,CAAA,CAAA,CACAl7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,IACS,CAAA,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,IACS,CAAA,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,IACS,CAAA,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,EAAA,EACAm7D,GAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,GACS,CACTn7D,GAAA,EACAm7D,EAAA,KAEAC,EAAA,CAAA,CACAC,OAAA,CAAA,CACAr7D,EAAA,EACAm7D,GAAA,GACW,CACXn7D,EAAA,EACAm7D,GAAA,GACW,CACXn7D,GAAA,EACAm7D,EAAA,IAEAG,UAAA,CAAA,CACAt7D,EAAA,EACAm7D,GAAA,GACW,CACXn7D,EAAA,EACAm7D,GAAA,GACW,CACXn7D,GAAA,EACAm7D,EAAA,GACW,CACXn7D,EAAA,EACAm7D,EAAA,GACW,CACXn7D,EAAA,EACAm7D,EAAA,GACW,CACXn7D,GAAA,EACAm7D,EAAA,GACW,CACXn7D,EAAA,EACAm7D,EAAA,GACW,CACXn7D,EAAA,EACAm7D,EAAA,KAES,CACTE,OAAA,CAAA,CACAr7D,GAAA,EACAm7D,GAAA,GACW,CACXn7D,EAAA,EACAm7D,GAAA,GACW,CACXn7D,EAAA,EACAm7D,GAAA,GACW,CACXn7D,GAAA,EACAm7D,EAAA,IAEAG,UAAA,CAAA,CACAt7D,EAAA,EACAm7D,GAAA,GACW,CACXn7D,GAAA,EACAm7D,EAAA,GACW,CACXn7D,EAAA,EACAm7D,EAAA,GACW,CACXn7D,EAAA,EACAm7D,EAAA,GACW,CACXn7D,EAAA,EACAm7D,EAAA,GACW,CACXn7D,EAAA,EACAm7D,EAAA,MAGAI,EAAA,CAAA,MAAA,KAAA,IAAA,KACAC,EAAA,CAAA,GAAA,GA8BA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAziB,EAAA0iB,EAAAC,GACA,GAAAN,EAEA,OAAAO,EADA,IAAAC,EAAAF,EAAAlyE,KAAAkyE,EAAAhqE,MAAAgqE,EAAA5xE,KACAuxE,EAAAC,GAAA,GAGA,GAAA,IAAAC,IAAAxiB,IAAAyiB,GAAA,IAAAC,EAAA30E,QAAA,IAAA20E,EAAA,GAAA/7D,IAAA,IAAA+7D,EAAA,GAAAZ,IAAA,IAAAY,EAAA,GAAA/7D,IAAA,IAAA+7D,EAAA,GAAAZ,GAAA,IAAAY,EAAA,GAAA/7D,IAAA,IAAA+7D,EAAA,GAAAZ,IAAA,IAAAY,EAAA,GAAA/7D,IAAA,IAAA+7D,EAAA,GAAAZ,EACA,OAnCA,SAAAQ,EAAAC,EAAAI,GACA,IAEAG,EACAx5E,EACA+8B,EACA08C,EACA5D,EACA6D,EACAC,EARA7B,EAAAuB,EAAAvB,QACAC,EAAAsB,EAAAzB,aAAAI,YAAA,MAQAhjD,EAAA,GAGA,IAAAh1B,EAAA,EAAqBA,EAAAi5E,EAAYj5E,IAMjC,IALA61E,EAAA7gD,EAAAh1B,GAAA,IAAA8I,WAAAkwE,GACAU,EAAA15E,EAAA,EAAA61E,EAAA7gD,EAAAh1B,EAAA,GAEAw5E,GADAG,EAAA35E,EAAA,EAAA61E,EAAA7gD,EAAAh1B,EAAA,IACA,IAAA,GAAA25E,EAAA,IAAA,GAAAA,EAAA,IAAA,GAAAD,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAAAA,EAAA,IAAA,EAEA38C,EAAA,EAAuBA,EAAAi8C,EAAWj8C,IAClC84C,EAAA94C,GAAA08C,EAAA3B,EAAAI,QAAAH,EAAAyB,GACAA,GAVA,MAUAA,IAAA,GAAAz8C,EAAA,EAAAi8C,EAAAW,EAAA58C,EAAA,IAAA,GAAA,IAAAA,EAAA,EAAAi8C,EAAAU,EAAA38C,EAAA,IAAA,EAAA,GAAA08C,EAIA,OAAAzkD,EAUA4kD,CAAAZ,EAAAC,EAAAI,GAGA,IAAAQ,IAAAnjB,EACAojB,EAAAvB,EAAAW,GAAAnvE,OAAAqvE,GACAU,EAAA/qD,KAAA,SAAAb,EAAAd,GACA,OAAAc,EAAAsqD,EAAAprD,EAAAorD,GAAAtqD,EAAA7Q,EAAA+P,EAAA/P,IAEA,IAQAhd,EAAAu8B,EARAm9C,EAAAD,EAAAr1E,OACAu1E,EAAA,IAAA5B,UAAA2B,GACAE,EAAA,IAAA7B,UAAA2B,GACAG,EAAA,GACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAGA,IAAA19C,EAAA,EAAqBA,EAAAm9C,EAAoBn9C,IACzCo9C,EAAAp9C,GAAAk9C,EAAAl9C,GAAAvf,EACA48D,EAAAr9C,GAAAk9C,EAAAl9C,GAAA47C,EACA4B,EAAA5sE,KAAA8M,IAAA8/D,EAAAN,EAAAl9C,GAAAvf,GACAg9D,EAAA7sE,KAAAC,IAAA4sE,EAAAP,EAAAl9C,GAAAvf,GACAi9D,EAAA9sE,KAAA8M,IAAAggE,EAAAR,EAAAl9C,GAAA47C,GAEA57C,EAAAm9C,EAAA,GAAAD,EAAAl9C,GAAA47C,IAAAsB,EAAAl9C,EAAA,GAAA47C,GAAAsB,EAAAl9C,GAAAvf,IAAAy8D,EAAAl9C,EAAA,GAAAvf,EAAA,EACA88D,GAAA,GAAAJ,EAAA,EAAAn9C,EAEAs9C,EAAA11E,KAAAo4B,GAIA,IAAA29C,EAAAL,EAAAz1E,OACA+1E,EAAA,IAAApC,UAAAmC,GACAE,EAAA,IAAArC,UAAAmC,GACAG,EAAA,IAAAnH,YAAAgH,GAEA,IAAAl6E,EAAA,EAAqBA,EAAAk6E,EAA2Bl6E,IAChDu8B,EAAAs9C,EAAA75E,GACAm6E,EAAAn6E,GAAAy5E,EAAAl9C,GAAAvf,EACAo9D,EAAAp6E,GAAAy5E,EAAAl9C,GAAA47C,EACAkC,EAAAr6E,GAAA,GAAA05E,EAAA,EAAAn9C,EAmBA,IAhBA,IASAG,EACA49C,EACAC,EAEA3C,EACA9gC,EAdA0jC,GAAAT,EACAU,GAAAR,EACAS,EAAA/B,EAAAqB,EACAW,EAAApC,EAAAM,GACArD,EAAA,IAAA/sE,WAAAkwE,GACAhkD,EAAA,GACA8iD,EAAAuB,EAAAvB,QACAC,EAAAsB,EAAAzB,aAAAI,YAAA,MACAiD,EAAA,EAIAzB,EAAA,EAIAx5E,EAAA,EAAyBA,EAAAi5E,EAAYj5E,IAAA,CACrC,GAAAm5E,EAIA,GAFA8B,GADAnD,EAAAI,QAAAH,EAAAiD,GAGA,CACAhmD,EAAAxwB,KAAAqxE,GACA,SAOA,IAHAA,EAAA,IAAA/sE,WAAA+sE,GACA7gD,EAAAxwB,KAAAqxE,GAEA94C,EAAA,EAAuBA,EAAAi8C,EAAWj8C,IAClC,GAAA88C,GAAAnjB,EAAA12D,GAAA+8B,GACA84C,EAAA94C,GAAA,MADA,CAKA,GAAAA,GAAA89C,GAAA99C,EAAAg+C,GAAA/6E,GAAA86E,EAGA,IAFAtB,EAAAA,GAAA,EAAAW,EAEAv9C,EAAA,EAA2BA,EAAA29C,EAA2B39C,IACtD+9C,EAAA36E,EAAAy6E,EAAA79C,GACAg+C,EAAA79C,EAAAy9C,EAAA59C,IACAq7C,EAAAjjD,EAAA2lD,GAAAC,MAIApB,GADAvB,EAAAyC,EAAA99C,SAQA,IAHA48C,EAAA,EACAriC,EAAA4iC,EAAA,EAEAn9C,EAAA,EAA2BA,EAAAm9C,EAAoBn9C,IAAAua,KAC/CyjC,EAAA79C,EAAAi9C,EAAAp9C,KAEA,GAAAg+C,EAAA5B,IACA2B,EAAA36E,EAAAi6E,EAAAr9C,KAEA,IACAq7C,EAAAjjD,EAAA2lD,GAAAC,MAGApB,GAAAvB,GAAA9gC,GAOA,IAAAsiC,EAAA3B,EAAAI,QAAAH,EAAAyB,GACA3D,EAAA94C,GAAA08C,GAIA,OAAAzkD,EAGA,SAAAkmD,EAAAlC,EAAAC,EAAAC,EAAAiC,EAAAC,EAAAC,EAAAlC,EAAAC,EAAAC,GACA,IAAAiC,EAAA7C,EAAAS,GAAAR,OAEA,IAAAQ,IACAoC,EAAAA,EAAAvxE,OAAA,CAAAqvE,EAAA,MAGA,IAGAx8C,EAHA2+C,EAAAD,EAAA72E,OACA+2E,EAAA,IAAAzM,WAAAwM,GACAE,EAAA,IAAA1M,WAAAwM,GAGA,IAAA3+C,EAAA,EAAqBA,EAAA2+C,EAA0B3+C,IAC/C4+C,EAAA5+C,GAAA0+C,EAAA1+C,GAAAvf,EACAo+D,EAAA7+C,GAAA0+C,EAAA1+C,GAAA47C,EAGA,IAAAkD,EAAAjD,EAAAS,GAAAP,UAEA,IAAAO,IACAwC,EAAAA,EAAA3xE,OAAA,CAAAqvE,EAAA,MAGA,IAAAuC,EAAAD,EAAAj3E,OACAm3E,EAAA,IAAA7M,WAAA4M,GACAE,EAAA,IAAA9M,WAAA4M,GAEA,IAAA/+C,EAAA,EAAqBA,EAAA++C,EAA6B/+C,IAClDg/C,EAAAh/C,GAAA8+C,EAAA9+C,GAAAvf,EACAw+D,EAAAj/C,GAAA8+C,EAAA9+C,GAAA47C,EAWA,IARA,IAAAsD,EAAAX,EAAA,GAAA12E,OACAs3E,EAAAZ,EAAA12E,OACAu2E,EAAAnC,EAAAK,GACAlkD,EAAA,GACA8iD,EAAAuB,EAAAvB,QACAC,EAAAsB,EAAAzB,aAAAI,YAAA,MACAiD,EAAA,EAEAj7E,EAAA,EAAyBA,EAAAi5E,EAAYj5E,IAAA,CACrC,GAAAm5E,EAIA,GAFA8B,GADAnD,EAAAI,QAAAH,EAAAiD,GAIA,MAAA,IAAAxD,EAAA,+BAIA,IAAA3B,EAAA,IAAA/sE,WAAAkwE,GACAhkD,EAAAxwB,KAAAqxE,GAEA,IAAA,IAAA94C,EAAA,EAA2BA,EAAAi8C,EAAWj8C,IAAA,CACtC,IAAA49C,EAAAC,EACApB,EAAA,EAEA,IAAA58C,EAAA,EAAyBA,EAAA2+C,EAA0B3+C,IACnD+9C,EAAA36E,EAAAy7E,EAAA7+C,GACAg+C,EAAA79C,EAAAy+C,EAAA5+C,GAEA+9C,EAAA,GAAAC,EAAA,GAAAA,GAAA5B,EACAQ,IAAA,EAEAA,EAAAA,GAAA,EAAAxkD,EAAA2lD,GAAAC,GAIA,IAAAh+C,EAAA,EAAyBA,EAAA++C,EAA6B/+C,IACtD+9C,EAAA36E,EAAA67E,EAAAj/C,GAAAy+C,EACAT,EAAA79C,EAAA6+C,EAAAh/C,GAAAw+C,EAEAT,EAAA,GAAAA,GAAAoB,GAAAnB,EAAA,GAAAA,GAAAkB,EACAtC,IAAA,EAEAA,EAAAA,GAAA,EAAA2B,EAAAR,GAAAC,GAIA,IAAAnB,EAAA3B,EAAAI,QAAAH,EAAAyB,GACA3D,EAAA94C,GAAA08C,GAIA,OAAAzkD,EAuIA,SAAAgnD,EAAAC,EAAAC,EAAAlD,EAAAC,EAAAkD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzD,EAAA0D,EAAAC,GACA,GAAAf,GAAAC,EACA,MAAA,IAAA1E,EAAA,4CAGA,IACAx3E,EAAA61E,EADA7gD,EAAA,GAGA,IAAAh1B,EAAA,EAAqBA,EAAAi5E,EAAYj5E,IAAA,CAGjC,GAFA61E,EAAA,IAAA/sE,WAAAkwE,GAEAmD,EACA,IAAA,IAAAp/C,EAAA,EAA6BA,EAAAi8C,EAAWj8C,IACxC84C,EAAA94C,GAAAo/C,EAIAnnD,EAAAxwB,KAAAqxE,GAGA,IAAAiC,EAAAuB,EAAAvB,QACAF,EAAAyB,EAAAzB,aACAqF,EAAAhB,GAAAW,EAAAM,YAAAC,OAAAH,IAAArF,EAAAC,EAAA,OAAAE,GACAsF,EAAA,EAGA,IAFAp9E,EAAA,EAEAA,EAAAo8E,GAAA,CAEAa,GADAhB,EAAAW,EAAAM,YAAAC,OAAAH,GAAArF,EAAAC,EAAA,OAAAE,GAMA,IAFA,IAAAuF,EADAD,GADAnB,EAAAW,EAAAU,YAAAH,OAAAH,GAAArF,EAAAC,EAAA,OAAAE,KAIA,CACA,IAAAyF,EAAA,EAEAlB,EAAA,IACAkB,EAAAtB,EAAAe,EAAArJ,SAAAoJ,GAAApF,EAAAC,EAAA,OAAAE,IAGA,IAAA52E,EAAAm7E,EAAAY,EAAAM,EACAC,EAAAvB,EAAAW,EAAAa,cAAAN,OAAAH,GAAA7E,EAAAP,EAAAE,EAAAyE,GACAmB,EAAAxB,IAAAD,EAAAe,EAAA9E,UAAAP,EAAAC,EAAA,OAAAE,IACA6F,EAAArB,EAAAkB,GACAI,EAAAD,EAAA,GAAAl5E,OACAo5E,EAAAF,EAAAl5E,OAEA,GAAAi5E,EAAA,CACA,IAAAI,EAAAnG,EAAAC,EAAA,QAAAE,GACAiG,EAAApG,EAAAC,EAAA,QAAAE,GAKA6F,EAAAzC,EAFA0C,GAAAE,EACAD,GAAAE,EACAlB,EAAAc,GAAAG,GAAA,GAJAnG,EAAAC,EAAA,QAAAE,IAIAiG,GAAA,GAHApG,EAAAC,EAAA,QAAAE,IAGA,EAAAgF,EAAAzD,GAGA,IAEA2E,EAAAC,EAAAC,EAFAC,EAAAj9E,GAAA,EAAAw7E,EAAA,EAAAmB,EAAA,GACAO,EAAAf,GAAA,EAAAX,EAAAkB,EAAA,EAAA,GAGA,GAAApB,EAAA,CACA,IAAAwB,EAAA,EAA4BA,EAAAH,EAAmBG,IAG/C,GAFAnI,EAAA7gD,EAAAopD,EAAAJ,GAEA,CAIAE,EAAAP,EAAAK,GACA,IAAAK,EAAA7wE,KAAA8M,IAAA0+D,EAAAmF,EAAAP,GAEA,OAAAjB,GACA,KAAA,EACA,IAAAsB,EAAA,EAAkCA,EAAAI,EAAeJ,IACjDpI,EAAAsI,EAAAF,IAAAC,EAAAD,GAGA,MAEA,KAAA,EACA,IAAAA,EAAA,EAAkCA,EAAAI,EAAeJ,IACjDpI,EAAAsI,EAAAF,IAAAC,EAAAD,GAGA,MAEA,QACA,MAAA,IAAAzG,EAAA,YAAAztE,OAAA4yE,EAAA,uBAIAU,GAAAQ,EAAA,MACe,CACf,IAAAI,EAAA,EAA4BA,EAAAJ,EAAmBI,IAG/C,GAFApI,EAAA7gD,EAAAmpD,EAAAF,GAQA,OAFAC,EAAAP,EAAAM,GAEAtB,GACA,KAAA,EACA,IAAAqB,EAAA,EAAkCA,EAAAJ,EAAkBI,IACpDnI,EAAAuI,EAAAJ,IAAAE,EAAAF,GAGA,MAEA,KAAA,EACA,IAAAA,EAAA,EAAkCA,EAAAJ,EAAkBI,IACpDnI,EAAAuI,EAAAJ,IAAAE,EAAAF,GAGA,MAEA,QACA,MAAA,IAAAxG,EAAA,YAAAztE,OAAA4yE,EAAA,sBAIAU,GAAAO,EAAA,EAGA59E,IACA,IAAAs+E,EAAArC,EAAAW,EAAA2B,YAAApB,OAAAH,GAAArF,EAAAC,EAAA,OAAAE,GAEA,GAAA,OAAAwG,EACA,MAGAjB,GAAAiB,EAAA7B,GAIA,OAAAznD,EAoLA,SAAAwpD,EAAAr3E,EAAAkI,GACA,IAAAovE,EAAA,GACAA,EAAAxlE,QAAA,EAAAjW,EAAA0a,YAAAvW,EAAAkI,GACA,IAAA6pD,EAAA/xD,EAAAkI,EAAA,GACAqvE,EAAA,GAAAxlB,EAEA,IAAAof,EAAAoG,GACA,MAAA,IAAAlH,EAAA,yBAAAkH,GAGAD,EAAAroE,KAAAsoE,EACAD,EAAAE,SAAArG,EAAAoG,GACAD,EAAAG,qBAAA,IAAA1lB,GACA,IAAA2lB,KAAA,GAAA3lB,GACA4lB,EAAA33E,EAAAkI,EAAA,GACA0vE,EAAAD,GAAA,EAAA,EACAE,EAAA,CAAA,GAAAF,GACA5yB,EAAA78C,EAAA,EAEA,GAAA,IAAAyvE,EAAA,CACAC,EAAA,WAAA,EAAA/7E,EAAA0a,YAAAvW,EAAA+kD,EAAA,GACAA,GAAA,EACA,IAAAp9C,EAAAiwE,EAAA,GAAA,EAGA,IAFAC,EAAA,GAAA73E,EAAA+kD,OAEAp9C,EAAA,GACAkwE,EAAAx6E,KAAA2C,EAAA+kD,WAEW,GAAA,IAAA4yB,GAAA,IAAAA,EACX,MAAA,IAAAtH,EAAA,6BAGAiH,EAAAO,WAAAA,EACA,IAEAh/E,EAAA8Z,EAFAmlE,EAAAR,EAAAxlE,QAAA,IAAA,EAAAwlE,EAAAxlE,QAAA,MAAA,EAAA,EACAimE,EAAA,GAGA,IAAAl/E,EAAA,EAAqBA,EAAA++E,EAAqB/+E,IAAA,CAC1C,IAAAiZ,EAAA,IAAAgmE,EAAA93E,EAAA+kD,GAAA,IAAA+yB,GAAA,EAAAj8E,EAAAwa,YAAArW,EAAA+kD,IAAA,EAAAlpD,EAAA0a,YAAAvW,EAAA+kD,GACAgzB,EAAA16E,KAAAyU,GACAizC,GAAA+yB,EAeA,GAZAR,EAAAS,WAAAA,EAEAL,GAGAJ,EAAAU,iBAAA,EAAAn8E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,GAHAuyB,EAAAU,gBAAAh4E,EAAA+kD,KAMAuyB,EAAAh6E,QAAA,EAAAzB,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EAEA,aAAAuyB,EAAAh6E,OAAA,CACA,GAAA,KAAAi6E,EAkCA,MAAA,IAAAlH,EAAA,kCAjCA,IAAA4H,EAAAC,EAAAl4E,EAAA+kD,GAEAozB,KAAA,EADAn4E,EAAA+kD,EAAAqzB,IAGAC,EAAA,IAAA12E,WADA,GAaA,IAVAw2E,IACAE,EAAA,GAAA,IACAA,EAAA,GAAA,KAGAA,EAAA,GAAAJ,EAAAnG,SAAA,GAAA,IACAuG,EAAA,GAAAJ,EAAAnG,QAAA,GAAA,IACAuG,EAAA,GAAAJ,EAAAnG,QAAA,EAAA,IACAuG,EAAA,GAAA,IAAAJ,EAAAnG,OAEAj5E,EAAAksD,EAAApyC,EAAA3S,EAAA1C,OAAkDzE,EAAA8Z,EAAQ9Z,IAAA,CAG1D,IAFA,IAAA+8B,EAAA,EAEAA,EAhBA,GAgBAyiD,EAAAziD,KAAA51B,EAAAnH,EAAA+8B,IACAA,IAGA,GApBA,IAoBAA,EAAA,CACA0hD,EAAAh6E,OAAAzE,EArBA,EAsBA,OAIA,GAAA,aAAAy+E,EAAAh6E,OACA,MAAA,IAAA+yE,EAAA,6BAQA,OADAiH,EAAAgB,UAAAvzB,EACAuyB,EAGA,SAAAiB,EAAAC,EAAAx4E,EAAAkI,EAAA5H,GAIA,IAHA,IAAAm4E,EAAA,GACA1zB,EAAA78C,EAEA68C,EAAAzkD,GAAA,CACA,IAAAg3E,EAAAD,EAAAr3E,EAAA+kD,GACAA,EAAAuyB,EAAAgB,UACA,IAAAI,EAAA,CACAF,OAAAlB,EACAt3E,KAAAA,GAWA,GARAw4E,EAAAG,eACAD,EAAAxwE,MAAA68C,EACAA,GAAAuyB,EAAAh6E,OACAo7E,EAAAp4E,IAAAykD,GAGA0zB,EAAAp7E,KAAAq7E,GAEA,KAAApB,EAAAroE,KACA,MAIA,GAAAupE,EAAAG,aACA,IAAA,IAAA9/E,EAAA,EAAA8Z,EAAA8lE,EAAAn7E,OAAiDzE,EAAA8Z,EAAQ9Z,IACzD4/E,EAAA5/E,GAAAqP,MAAA68C,EACAA,GAAA0zB,EAAA5/E,GAAA2/E,OAAAl7E,OACAm7E,EAAA5/E,GAAAyH,IAAAykD,EAIA,OAAA0zB,EAGA,SAAAP,EAAAl4E,EAAAkI,GACA,MAAA,CACA2pE,OAAA,EAAAh2E,EAAA0a,YAAAvW,EAAAkI,GACA4pE,QAAA,EAAAj2E,EAAA0a,YAAAvW,EAAAkI,EAAA,GACAgO,GAAA,EAAAra,EAAA0a,YAAAvW,EAAAkI,EAAA,GACAmpE,GAAA,EAAAx1E,EAAA0a,YAAAvW,EAAAkI,EAAA,IACAstE,oBAAA,EAAAx1E,EAAAkI,EAAA,KAIA,IAAAkwE,EAAA,GAEA,SAAAQ,EAAAF,EAAAG,GACA,IAIAj0E,EAAAqtE,EAAAp5E,EAAAigF,EAJAN,EAAAE,EAAAF,OACAx4E,EAAA04E,EAAA14E,KACA+kD,EAAA2zB,EAAAxwE,MACA5H,EAAAo4E,EAAAp4E,IAGA,OAAAk4E,EAAAvpE,MACA,KAAA,EACA,IAAA8pE,EAAA,GACAC,GAAA,EAAAn9E,EAAAwa,YAAArW,EAAA+kD,GAaA,GAZAg0B,EAAAjE,WAAA,EAAAkE,GACAD,EAAAhE,cAAA,EAAAiE,GACAD,EAAAE,kBAAAD,GAAA,EAAA,EACAD,EAAAG,kBAAAF,GAAA,EAAA,EACAD,EAAAI,mBAAAH,GAAA,EAAA,EACAD,EAAAK,6BAAAJ,GAAA,EAAA,EACAD,EAAAM,2BAAA,IAAAL,GACAD,EAAAO,+BAAA,IAAAN,GACAD,EAAApG,SAAAqG,GAAA,GAAA,EACAD,EAAAQ,mBAAAP,GAAA,GAAA,EACAj0B,GAAA,GAEAg0B,EAAAjE,QAAA,CAIA,IAHAgE,EAAA,IAAAC,EAAApG,SAAA,EAAA,EACAV,EAAA,GAEAp5E,EAAA,EAA2BA,EAAAigF,EAAcjgF,IACzCo5E,EAAA50E,KAAA,CACA6Y,GAAA,EAAAra,EAAAua,UAAApW,EAAA+kD,GACAssB,GAAA,EAAAx1E,EAAAua,UAAApW,EAAA+kD,EAAA,KAEAA,GAAA,EAGAg0B,EAAA9G,GAAAA,EAGA,GAAA8G,EAAAhE,aAAAgE,EAAAQ,mBAAA,CAGA,IAFAtH,EAAA,GAEAp5E,EAAA,EAA2BA,EAAA,EAAOA,IAClCo5E,EAAA50E,KAAA,CACA6Y,GAAA,EAAAra,EAAAua,UAAApW,EAAA+kD,GACAssB,GAAA,EAAAx1E,EAAAua,UAAApW,EAAA+kD,EAAA,KAEAA,GAAA,EAGAg0B,EAAApD,aAAA1D,EAGA8G,EAAAS,yBAAA,EAAA39E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EACAg0B,EAAAU,oBAAA,EAAA59E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EACAngD,EAAA,CAAAm0E,EAAAP,EAAA1mE,OAAA0mE,EAAAT,WAAA/3E,EAAA+kD,EAAAzkD,GACA,MAEA,KAAA,EACA,KAAA,EACA,IAAAo5E,EAAA,GACAA,EAAAx7E,KAAAg6E,EAAAl4E,EAAA+kD,GACAA,GAAAqzB,EACA,IAAAuB,GAAA,EAAA99E,EAAAwa,YAAArW,EAAA+kD,GAaA,GAZAA,GAAA,EACA20B,EAAA5E,WAAA,EAAA6E,GACAD,EAAA3E,cAAA,EAAA4E,GACAD,EAAA9D,aAAA+D,GAAA,EAAA,EACAD,EAAAxE,UAAA,GAAAwE,EAAA9D,aACA8D,EAAAnE,gBAAAoE,GAAA,EAAA,EACAD,EAAArE,cAAA,GAAAsE,GACAD,EAAAlE,oBAAAmE,GAAA,EAAA,EACAD,EAAA1E,kBAAA2E,GAAA,EAAA,EACAD,EAAApE,SAAAqE,GAAA,IAAA,GACAD,EAAAH,mBAAAI,GAAA,GAAA,EAEAD,EAAA5E,QAAA,CACA,IAAA8E,GAAA,EAAA/9E,EAAAwa,YAAArW,EAAA+kD,GACAA,GAAA,EACA20B,EAAAG,UAAA,EAAAD,EACAF,EAAAI,UAAAF,GAAA,EAAA,EACAF,EAAAK,UAAAH,GAAA,EAAA,EACAF,EAAAM,oBAAAJ,GAAA,EAAA,EACAF,EAAAO,oBAAAL,GAAA,EAAA,EACAF,EAAAQ,oBAAAN,GAAA,GAAA,EACAF,EAAAS,oBAAAP,GAAA,GAAA,EACAF,EAAAU,iCAAA,MAAAR,GAGA,GAAAF,EAAA3E,aAAA2E,EAAAH,mBAAA,CAGA,IAFAtH,EAAA,GAEAp5E,EAAA,EAA2BA,EAAA,EAAOA,IAClCo5E,EAAA50E,KAAA,CACA6Y,GAAA,EAAAra,EAAAua,UAAApW,EAAA+kD,GACAssB,GAAA,EAAAx1E,EAAAua,UAAApW,EAAA+kD,EAAA,KAEAA,GAAA,EAGA20B,EAAA/D,aAAA1D,EAGAyH,EAAAzE,yBAAA,EAAAp5E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EACAngD,EAAA,CAAA80E,EAAAlB,EAAAT,WAAA/3E,EAAA+kD,EAAAzkD,GACA,MAEA,KAAA,GACA,IAAA+5E,EAAA,GACAC,EAAAt6E,EAAA+kD,KACAs1B,EAAAzI,OAAA,EAAA0I,GACAD,EAAA1H,SAAA2H,GAAA,EAAA,EACAD,EAAAE,aAAAv6E,EAAA+kD,KACAs1B,EAAAG,cAAAx6E,EAAA+kD,KACAs1B,EAAAI,iBAAA,EAAA5+E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EACAngD,EAAA,CAAAy1E,EAAA7B,EAAA1mE,OAAA9R,EAAA+kD,EAAAzkD,GACA,MAEA,KAAA,GACA,KAAA,GACA,IAAAo6E,EAAA,GACAA,EAAAx8E,KAAAg6E,EAAAl4E,EAAA+kD,GACAA,GAAAqzB,EACA,IAAAuC,EAAA36E,EAAA+kD,KACA21B,EAAA9I,OAAA,EAAA+I,GACAD,EAAA/H,SAAAgI,GAAA,EAAA,EACAD,EAAAE,cAAA,EAAAD,GACAD,EAAAlF,oBAAAmF,GAAA,EAAA,EACAD,EAAA1F,kBAAA2F,GAAA,EAAA,EACAD,EAAAG,WAAA,EAAAh/E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EACA21B,EAAAI,YAAA,EAAAj/E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EACA21B,EAAAK,YAAA,YAAA,EAAAl/E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EACA21B,EAAAM,YAAA,YAAA,EAAAn/E,EAAA0a,YAAAvW,EAAA+kD,GACAA,GAAA,EACA21B,EAAAO,aAAA,EAAAp/E,EAAAwa,YAAArW,EAAA+kD,GACAA,GAAA,EACA21B,EAAAQ,aAAA,EAAAr/E,EAAAwa,YAAArW,EAAA+kD,GACAA,GAAA,EACAngD,EAAA,CAAA81E,EAAAlC,EAAAT,WAAA/3E,EAAA+kD,EAAAzkD,GACA,MAEA,KAAA,GACA,KAAA,GACA,IAAA66E,EAAA,GACAA,EAAAj9E,KAAAg6E,EAAAl4E,EAAA+kD,GACAA,GAAAqzB,EACA,IAAAgD,EAAAp7E,EAAA+kD,KAKA,GAJAo2B,EAAAvJ,OAAA,EAAAwJ,GACAD,EAAAxI,SAAAyI,GAAA,EAAA,EACAD,EAAAnJ,cAAA,EAAAoJ,IAEAD,EAAAvJ,IAAA,CAIA,IAHAkH,EAAA,IAAAqC,EAAAxI,SAAA,EAAA,EACAV,EAAA,GAEAp5E,EAAA,EAA2BA,EAAAigF,EAAcjgF,IACzCo5E,EAAA50E,KAAA,CACA6Y,GAAA,EAAAra,EAAAua,UAAApW,EAAA+kD,GACAssB,GAAA,EAAAx1E,EAAAua,UAAApW,EAAA+kD,EAAA,KAEAA,GAAA,EAGAo2B,EAAAlJ,GAAAA,EAGArtE,EAAA,CAAAu2E,EAAAn7E,EAAA+kD,EAAAzkD,GACA,MAEA,KAAA,GACA,IAAA+6E,EAAA,CACAxJ,OAAA,EAAAh2E,EAAA0a,YAAAvW,EAAA+kD,GACA+sB,QAAA,EAAAj2E,EAAA0a,YAAAvW,EAAA+kD,EAAA,GACAu2B,aAAA,EAAAz/E,EAAA0a,YAAAvW,EAAA+kD,EAAA,GACAw2B,aAAA,EAAA1/E,EAAA0a,YAAAvW,EAAA+kD,EAAA,KAGA,aAAAs2B,EAAAvJ,eACAuJ,EAAAvJ,OAGA,IAAA0J,EAAAx7E,EAAA+kD,EAAA,KACA,EAAAlpD,EAAAwa,YAAArW,EAAA+kD,EAAA,IACAs2B,EAAAI,YAAA,EAAAD,GACAH,EAAAtG,cAAA,EAAAyG,GACAH,EAAArG,kBAAAwG,GAAA,EAAA,EACAH,EAAA7F,oBAAAgG,GAAA,EAAA,EACAH,EAAAK,kBAAA,GAAAF,GACAH,EAAAM,+BAAA,GAAAH,GACA52E,EAAA,CAAAy2E,GACA,MAEA,KAAA,GAGA,KAAA,GAGA,KAAA,GACA,MAEA,KAAA,GACAz2E,EAAA,CAAA4zE,EAAA1mE,OAAA9R,EAAA+kD,EAAAzkD,GACA,MAEA,KAAA,GACA,MAEA,QACA,MAAA,IAAA+vE,EAAA,gBAAAztE,OAAA41E,EAAAhB,SAAA,KAAA50E,OAAA41E,EAAAvpE,KAAA,KAAA,uBAGA,IAAA2sE,EAAA,KAAApD,EAAAhB,SAEAoE,KAAA/C,GACAA,EAAA+C,GAAAn4E,MAAAo1E,EAAAj0E,GAIA,SAAAi3E,EAAApD,EAAAI,GACA,IAAA,IAAAhgF,EAAA,EAAA8Z,EAAA8lE,EAAAn7E,OAA+CzE,EAAA8Z,EAAQ9Z,IACvD+/E,EAAAH,EAAA5/E,GAAAggF,GAmEA,SAAAiD,KA6KA,SAAAC,EAAAC,GACA,IAAAA,EAAA1+E,QACAxC,KAAAmhF,OAAA,EACAnhF,KAAAohF,SAAA,EACAphF,KAAAqhF,aAAAH,EAAA,GACAlhF,KAAAshF,YAAA,EACAthF,KAAAuhF,WAAAL,EAAA,GACAlhF,KAAAwhF,cAAA,IAEAxhF,KAAAmhF,OAAA,EACAnhF,KAAAohF,SAAAF,EAAA,GACAlhF,KAAAqhF,aAAAH,EAAA,GACAlhF,KAAAshF,YAAAJ,EAAA,GACAlhF,KAAAuhF,WAAAL,EAAA,GACAlhF,KAAAwhF,aAAA,UAAAN,EAAA,IAIA,SAAAO,EAAAC,GACA1hF,KAAA8W,SAAA,GAEA4qE,GACA1hF,KAAA2hF,QAAA,EACA3hF,KAAAshF,YAAAI,EAAAJ,YACAthF,KAAAohF,SAAAM,EAAAN,SACAphF,KAAAwhF,aAAAE,EAAAF,aACAxhF,KAAAmhF,MAAAO,EAAAP,OAEAnhF,KAAA2hF,QAAA,EAwCA,SAAAC,EAAAC,EAAAC,GACAA,GACA9hF,KAAA+hF,kBAAAF,GAGA7hF,KAAAgiF,SAAA,IAAAP,EAAA,MACA,IAAA1jF,EAEA2jF,EADA7pE,EAAAgqE,EAAAr/E,OAGA,IAAAzE,EAAA,EAAqBA,EAAA8Z,EAAQ9Z,KAC7B2jF,EAAAG,EAAA9jF,IAEAsjF,aAAA,GACArhF,KAAAgiF,SAAAC,UAAAP,EAAAA,EAAAL,aAAA,GA7PAL,EAAArhF,UAAA,CACAuiF,kBAAA,SAAA9+E,GACApD,KAAAmiF,gBAAA/+E,EACA,IAAAg/E,EAAAh/E,EAAA2zE,MAAA,GAAA,EACAzwE,EAAA,IAAAmkD,kBAAA23B,EAAAh/E,EAAA4zE,QAEA,GAAA5zE,EAAA82E,kBACA,IAAA,IAAAn8E,EAAA,EAAA8Z,EAAAvR,EAAA9D,OAAiDzE,EAAA8Z,EAAQ9Z,IACzDuI,EAAAvI,GAAA,IAIAiC,KAAAsG,OAAAA,GAEA+7E,WAAA,SAAAC,EAAAvvD,GACA,IAQAh1B,EAAA+8B,EAAAynD,EAAA/mE,EARA+kE,EAAAvgF,KAAAmiF,gBACApL,EAAAuL,EAAAvL,MACAC,EAAAsL,EAAAtL,OACAoL,EAAA7B,EAAAxJ,MAAA,GAAA,EACA2D,EAAA6F,EAAAM,4BAAAyB,EAAA5H,oBAAA6F,EAAA7F,oBACAp0E,EAAAtG,KAAAsG,OACAk8E,EAAA,MAAA,EAAAF,EAAAlnE,GACAqnE,EAAAH,EAAA/L,EAAA6L,GAAAE,EAAAlnE,GAAA,GAGA,OAAAs/D,GACA,KAAA,EACA,IAAA38E,EAAA,EAA2BA,EAAAi5E,EAAYj5E,IAAA,CAIvC,IAHAwkF,EAAAC,EACAhnE,EAAAinE,EAEA3nD,EAAA,EAA6BA,EAAAi8C,EAAWj8C,IACxC/H,EAAAh1B,GAAA+8B,KACAx0B,EAAAkV,IAAA+mE,IAGAA,IAAA,KAGAA,EAAA,IACA/mE,KAIAinE,GAAAL,EAGA,MAEA,KAAA,EACA,IAAArkF,EAAA,EAA2BA,EAAAi5E,EAAYj5E,IAAA,CAIvC,IAHAwkF,EAAAC,EACAhnE,EAAAinE,EAEA3nD,EAAA,EAA6BA,EAAAi8C,EAAWj8C,IACxC/H,EAAAh1B,GAAA+8B,KACAx0B,EAAAkV,IAAA+mE,IAGAA,IAAA,KAGAA,EAAA,IACA/mE,KAIAinE,GAAAL,EAGA,MAEA,QACA,MAAA,IAAA7M,EAAA,YAAAztE,OAAA4yE,EAAA,wBAGAgI,yBAAA,SAAAC,EAAAz9E,EAAAkI,EAAA5H,GACA,IAAA88E,EAAAK,EAAAv/E,KACAg0E,EAAA,IAAA3B,EAAAvwE,EAAAkI,EAAA5H,GACAutB,EAAA8jD,EAAA8L,EAAA7L,IAAAwL,EAAAvL,MAAAuL,EAAAtL,OAAA2L,EAAA9K,SAAA8K,EAAAzL,WAAA,KAAAyL,EAAAxL,GAAAC,GACAp3E,KAAAqiF,WAAAC,EAAAvvD,IAEA6vD,iCAAA,WACA5iF,KAAA0iF,yBAAA/5E,MAAA3I,KAAA4I,YAEAi6E,mBAAA,SAAA5E,EAAA6E,EAAAC,EAAA79E,EAAAkI,EAAA5H,GACA,IAAAm1E,EAAAI,EAEAkD,EAAAjE,UACAW,EA4gBA,SAAAsD,EAAAhB,EAAA+F,GACA,IACAC,EACAC,EAgCAC,EAAAC,EAlCAC,EAAA,EAIA,OAAApF,EAAAE,mBACA,KAAA,EACA,KAAA,EACA8E,EAAAK,EAAArF,EAAAE,kBAAA,GACA,MAEA,KAAA,EACA8E,EAAAM,EAAAF,EAAApG,EAAA+F,GACAK,IACA,MAEA,QACA,MAAA,IAAA9N,EAAA,+BAGA,OAAA0I,EAAAG,mBACA,KAAA,EACA,KAAA,EACA8E,EAAAI,EAAArF,EAAAG,kBAAA,GACA,MAEA,KAAA,EACA8E,EAAAK,EAAAF,EAAApG,EAAA+F,GACAK,IACA,MAEA,QACA,MAAA,IAAA9N,EAAA,+BAKA0I,EAAAI,oBACA8E,EAAAI,EAAAF,EAAApG,EAAA+F,GACAK,KAEAF,EAAAG,EAAA,GAIAF,EADAnF,EAAAK,6BACAiF,EAAAF,EAAApG,EAAA+F,GAEAM,EAAA,GAGA,MAAA,CACAL,iBAAAA,EACAC,gBAAAA,EACAC,gBAAAA,EACAC,wBAAAA,GAlkBAI,CAAAvF,EAAA8E,EAAA/iF,KAAAgjF,cACAjI,EAAA,IAAAzD,EAAApyE,EAAAkI,EAAA5H,IAGA,IAAAylC,EAAAjrC,KAAAirC,QAEAA,IACAjrC,KAAAirC,QAAAA,EAAA,IAKA,IAFA,IAAAovC,EAAA,GAEAt8E,EAAA,EAAA8Z,EAAAkrE,EAAAvgF,OAAyDzE,EAAA8Z,EAAQ9Z,IAAA,CACjE,IAAA0lF,EAAAx4C,EAAA83C,EAAAhlF,IAEA0lF,IACApJ,EAAAA,EAAAvyE,OAAA27E,IAIA,IAAArM,EAAA,IAAA3B,EAAAvwE,EAAAkI,EAAA5H,GACAylC,EAAA63C,GAz+BA,SAAA9I,EAAAC,EAAAhvC,EAAA0zC,EAAAD,EAAA/D,EAAA1D,EAAAE,EAAAyD,EAAAC,EAAAzD,EAAA2D,GACA,GAAAf,GAAAC,EACA,MAAA,IAAA1E,EAAA,mDAGA,IAKAmO,EAAAC,EALAC,EAAA,GACAC,EAAA,EACAvJ,GAAA,EAAAv5E,EAAAoa,MAAA8vB,EAAAzoC,OAAAm8E,GACA9I,EAAAuB,EAAAvB,QACAF,EAAAyB,EAAAzB,aASA,IANAqE,IACA0J,EAAAJ,EAAA,GACAK,EAAA,GACArJ,EAAA/uE,KAAAC,IAAA8uE,EAAA,IAGAsJ,EAAAphF,OAAAm8E,GAAA,CAEAkF,GADA7J,EAAAW,EAAAsI,iBAAA/H,OAAAH,GAAArF,EAAAC,EAAA,OAAAE,GAMA,IAJA,IAAAiO,EAAA,EACAC,EAAA,EACAC,EAAAhK,EAAA2J,EAAAnhF,OAAA,IAEA,CACA,IAQAuwB,EARAkxD,EAAAjK,EAAAW,EAAAuI,gBAAAhI,OAAAH,GAAArF,EAAAC,EAAA,OAAAE,GAEA,GAAA,OAAAoO,EACA,MAOA,GAHAF,GADAD,GAAAG,EAIAhK,EAAA,CACA,IAAAiK,EAAAxO,EAAAC,EAAA,OAAAE,GAEA,GAAAqO,EAAA,EACAnxD,EAAAgnD,EAAAC,EAAAC,EAAA6J,EAAAD,EAAA,EAAAK,EAAA,EAAAj5C,EAAAnjC,OAAA87E,GAAAtJ,EAAA,EAAA,EAAA,EAAA,EAAAK,EAAAC,EAAAC,EAAAzD,EAAA,EAAA2D,OACiB,CACjB,IAAAQ,EAAArF,EAAAP,EAAAE,EAAAyE,GACA6J,EAAAzO,EAAAC,EAAA,QAAAE,GACAuO,EAAA1O,EAAAC,EAAA,QAAAE,GAEA9iD,EAAAkmD,EAAA6K,EAAAD,EAAAjJ,EADAW,EAAAtwC,EAAAzoC,OAAAyoC,EAAAswC,GAAAqI,EAAArI,EAAAtwC,EAAAzoC,QACA2hF,EAAAC,GAAA,EAAAvJ,EAAAzD,GAGAwM,EAAArhF,KAAAwwB,QACeinD,EACf2J,EAAAphF,KAAAuhF,IAEA/wD,EAAA8jD,GAAA,EAAAiN,EAAAD,EAAA5M,GAAA,EAAA,KAAAE,EAAAC,GACAwM,EAAArhF,KAAAwwB,IAIA,GAAAinD,IAAAC,EAAA,CACA,IAAAoK,EAAA1J,EAAAwI,gBAAAjI,OAAAH,GACAA,EAAA1H,YACA,IAAAiR,OAAA,EAEA,GAAA,IAAAD,EACAC,EAAAC,EAAAxJ,EAAAgJ,EAAAF,OACe,CACf,IAAAW,EAAAzJ,EAAAv1E,IACAi/E,EAAA1J,EAAA9wB,SAAAo6B,EACAtJ,EAAAv1E,IAAAi/E,EACAH,EAAAjN,EAAA0D,EAAAgJ,EAAAF,GAAA,GACA9I,EAAAv1E,IAAAg/E,EACAzJ,EAAA9wB,SAAAw6B,EAGA,IAAAC,EAAAf,EAAAnhF,OAEA,GAAAwhF,IAAAU,EAAA,EACAd,EAAArhF,KAAA+hF,OACe,CACf,IAAAliF,OAAA,EACAm0E,OAAA,EACAoO,EAAA,EACAC,OAAA,EAEAlJ,OAAA,EAEA,IAAAt5E,EAAA4hF,EAAsC5hF,EAAAsiF,EAA6BtiF,IAAA,CAKnE,IAHAwiF,EAAAD,EADAhB,EAAAvhF,GAEAs5E,EAAA,GAEAnF,EAAA,EAA6BA,EAAAsN,EAAmBtN,IAChDmF,EAAAn5E,KAAA+hF,EAAA/N,GAAAj+D,SAAAqsE,EAAAC,IAGAhB,EAAArhF,KAAAm5E,GACAiJ,EAAAC,KAWA,IALA,IAAAC,EAAA,GACA5tB,EAAA,GACA6tB,GAAA,EACAC,EAAA95C,EAAAzoC,OAAAm8E,EAEA1nB,EAAAz0D,OAAAuiF,GAAA,CAGA,IAFA,IAAAC,EAAAhL,EAAA0J,EAAAxI,OAAAH,GAAArF,EAAAC,EAAA,OAAAE,GAEAmP,KACA/tB,EAAA10D,KAAAuiF,GAGAA,GAAAA,EAGA,IAAA,IAAA/mF,EAAA,EAAA8Z,GAAAozB,EAAAzoC,OAA8CzE,EAAA8Z,GAAQ9Z,IACtDk5D,EAAAl5D,IACA8mF,EAAAtiF,KAAA0oC,EAAAltC,IAIA,IAAA,IAAA+8B,GAAA,EAAyBA,GAAA6jD,EAAwB5gF,IAAA+8B,KACjDm8B,EAAAl5D,IACA8mF,EAAAtiF,KAAAqhF,EAAA9oD,KAIA,OAAA+pD,EAw2BAI,CAAAhH,EAAAjE,QAAAiE,EAAAhE,WAAAI,EAAA4D,EAAAU,mBAAAV,EAAAS,wBAAA/D,EAAAsD,EAAApG,SAAAoG,EAAA9G,GAAA8G,EAAAQ,mBAAAR,EAAApD,aAAAzD,EAAA2D,IAEAmK,sBAAA,SAAAvC,EAAAI,EAAA79E,EAAAkI,EAAA5H,GAMA,IALA,IACAm1E,EAAAI,EADAuH,EAAAK,EAAAv/E,KAEA6nC,EAAAjrC,KAAAirC,QACAovC,EAAA,GAEAt8E,EAAA,EAAA8Z,EAAAkrE,EAAAvgF,OAAyDzE,EAAA8Z,EAAQ9Z,IAAA,CACjE,IAAA0lF,EAAAx4C,EAAA83C,EAAAhlF,IAEA0lF,IACApJ,EAAAA,EAAAvyE,OAAA27E,IAIA,IAAAnJ,GAAA,EAAAv5E,EAAAoa,MAAAk/D,EAAA73E,QAEAmgF,EAAA3I,UACAe,EAAA,IAAAzD,EAAApyE,EAAAkI,EAAA5H,GACAm1E,EA0WA,SAAAiE,EAAA3B,EAAA+F,EAAAmC,EAAAt/E,GACA,IACA9H,EACAmzE,EAFAvD,EAAA,GAIA,IAAA5vE,EAAA,EAAqBA,GAAA,GAASA,IAC9BmzE,EAAArrE,EAAA6rE,SAAA,GACA/D,EAAAprE,KAAA,IAAA0+E,EAAA,CAAAljF,EAAAmzE,EAAA,EAAA,KAGA,IAAAkU,EAAA,IAAAxD,EAAAjU,GAAA,GAGA,IAFAA,EAAAnrE,OAAA,EAEAzE,EAAA,EAAqBA,EAAAonF,GAGrB,IAFAjU,EAAAkU,EAAAlK,OAAAr1E,KAEA,GAAA,CACA,IAAAw/E,OAAA,EACAC,OAAA,EACAxqD,OAAA,EAEA,OAAAo2C,GACA,KAAA,GACA,GAAA,IAAAnzE,EACA,MAAA,IAAAw3E,EAAA,wCAGA+P,EAAAz/E,EAAA6rE,SAAA,GAAA,EACA2T,EAAA1X,EAAA5vE,EAAA,GAAAsjF,aACA,MAEA,KAAA,GACAiE,EAAAz/E,EAAA6rE,SAAA,GAAA,EACA2T,EAAA,EACA,MAEA,KAAA,GACAC,EAAAz/E,EAAA6rE,SAAA,GAAA,GACA2T,EAAA,EACA,MAEA,QACA,MAAA,IAAA9P,EAAA,0CAGA,IAAAz6C,EAAA,EAAyBA,EAAAwqD,EAAqBxqD,IAC9C6yC,EAAAprE,KAAA,IAAA0+E,EAAA,CAAAljF,EAAAsnF,EAAA,EAAA,KACAtnF,SAGA4vE,EAAAprE,KAAA,IAAA0+E,EAAA,CAAAljF,EAAAmzE,EAAA,EAAA,KACAnzE,IAIA8H,EAAAwtE,YACA,IAEAgI,EACAiB,EACArB,EAJAO,EAAA,IAAAoG,EAAAjU,GAAA,GACA0V,EAAA,EAKA,OAAAzE,EAAAG,WACA,KAAA,EACA,KAAA,EACA1D,EAAAiI,EAAA1E,EAAAG,UAAA,GACA,MAEA,KAAA,EACA1D,EAAAkI,EAAAF,EAAApG,EAAA+F,GACAK,IACA,MAEA,QACA,MAAA,IAAA9N,EAAA,+BAGA,OAAAqJ,EAAAI,WACA,KAAA,EACA,KAAA,EACA,KAAA,EACA1C,EAAAgH,EAAA1E,EAAAI,UAAA,GACA,MAEA,KAAA,EACA1C,EAAAiH,EAAAF,EAAApG,EAAA+F,GACAK,IACA,MAEA,QACA,MAAA,IAAA9N,EAAA,+BAGA,OAAAqJ,EAAAK,WACA,KAAA,EACA,KAAA,EACA,KAAA,EACAhE,EAAAqI,EAAA1E,EAAAK,UAAA,IACA,MAEA,KAAA,EACAhE,EAAAsI,EAAAF,EAAApG,EAAA+F,GACAK,IACA,MAEA,QACA,MAAA,IAAA9N,EAAA,+BAGA,GAAAqJ,EAAA3E,WACA,MAAA,IAAA1E,EAAA,4CAGA,MAAA,CACAiG,cAAAA,EACAH,YAAAA,EACAiB,YAAAA,EACArB,YAAAA,GA/dAsK,CAAA5C,EAAAI,EAAA/iF,KAAAgjF,aAAA3I,EAAA73E,OAAAu4E,IAGA,IAAA3D,EAAA,IAAA3B,EAAAvwE,EAAAkI,EAAA5H,GACAutB,EAAAgnD,EAAA4I,EAAA3I,QAAA2I,EAAA1I,WAAAqI,EAAAvL,MAAAuL,EAAAtL,OAAA2L,EAAAzI,kBAAAyI,EAAAxI,wBAAAwI,EAAAvI,UAAAC,EAAAC,EAAAqI,EAAApI,WAAAoI,EAAAnI,SAAAmI,EAAAlI,gBAAAkI,EAAAjI,oBAAAC,EAAAgI,EAAAlE,mBAAAkE,EAAA9H,aAAAzD,EAAAuL,EAAA7H,aAAAC,GACA/6E,KAAAqiF,WAAAC,EAAAvvD,IAEAyyD,8BAAA,WACAxlF,KAAAklF,sBAAAv8E,MAAA3I,KAAA4I,YAEA68E,oBAAA,SAAAxH,EAAA6E,EAAA59E,EAAAkI,EAAA5H,GACA,IAAAkgF,EAAA1lF,KAAA0lF,SAEAA,IACA1lF,KAAA0lF,SAAAA,EAAA,IAGA,IAAAtO,EAAA,IAAA3B,EAAAvwE,EAAAkI,EAAA5H,GACAkgF,EAAA5C,GA/vBA,SAAAhM,EAAA2I,EAAAC,EAAAC,EAAA9H,EAAAT,GACA,IAAAD,EAAA,GAEAL,IACAK,EAAA50E,KAAA,CACA6Y,GAAAqkE,EACAlJ,EAAA,IAGA,IAAAsB,IACAV,EAAA50E,KAAA,CACA6Y,GAAA,EACAm7D,GAAA,IAEAY,EAAA50E,KAAA,CACA6Y,EAAA,EACAm7D,GAAA,IAEAY,EAAA50E,KAAA,CACA6Y,GAAA,EACAm7D,GAAA,MAcA,IATA,IAIAoP,EACAhB,EACAC,EACArO,EANA+N,EAAAzN,EAAAC,GADA6I,EAAA,GAAAF,EACAC,EAAA7H,GAAA,EAAA,KAAAV,EAAAC,GACAsO,EAAA,GACA3nF,EAAA,EAMAA,GAAA4hF,GAAA,CAKA,IAJAgG,EAAA,GAEAf,GADAD,EAAAlF,EAAA1hF,GACA0hF,EAEAlJ,EAAA,EAAuBA,EAAAmJ,EAAmBnJ,IAC1CoP,EAAApjF,KAAA+hF,EAAA/N,GAAAj+D,SAAAqsE,EAAAC,IAGAc,EAAAnjF,KAAAojF,GACA5nF,IAGA,OAAA2nF,EAgtBAE,CAAA3H,EAAAnH,IAAAmH,EAAAwB,aAAAxB,EAAAyB,cAAAzB,EAAA0B,gBAAA1B,EAAApG,SAAAT,IAEAyO,0BAAA,SAAAlD,EAAAI,EAAA79E,EAAAkI,EAAA5H,GACA,IAAAkgF,EAAA1lF,KAAA0lF,SAAA3C,EAAA,IACAT,EAAAK,EAAAv/E,KACAg0E,EAAA,IAAA3B,EAAAvwE,EAAAkI,EAAA5H,GACAutB,EAntBA,SAAA+jD,EAAA4O,EAAA7N,EAAAiO,EAAAC,EAAA7L,EAAA4F,EAAApF,EAAAqF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhJ,GAGA,GAAA0I,EACA,MAAA,IAAAvK,EAAA,yBAGA,GAAA,IAAAmF,EACA,MAAA,IAAAnF,EAAA,YAAAmF,EAAA,wCAGA,IACA38E,EAAA+8B,EAAA84C,EADAoS,EAAA,GAGA,IAAAjoF,EAAA,EAAqBA,EAAAgoF,EAAkBhoF,IAAA,CAGvC,GAFA61E,EAAA,IAAA/sE,WAAAi/E,GAEA5L,EACA,IAAAp/C,EAAA,EAAyBA,EAAAgrD,EAAiBhrD,IAC1C84C,EAAA94C,GAAAo/C,EAIA8L,EAAAzjF,KAAAqxE,GAGA,IAAAqS,EAAAP,EAAAljF,OACA0jF,EAAAR,EAAA,GACAjG,EAAAyG,EAAA,GAAA1jF,OACAk9E,EAAAwG,EAAA1jF,OACA2jF,GAAA,EAAAplF,EAAAoa,MAAA8qE,GACA9O,EAAA,GAEAL,IACAK,EAAA50E,KAAA,CACA6Y,EAAAy8D,GAAA,EAAA,EAAA,EACAtB,GAAA,IAGA,IAAAsB,IACAV,EAAA50E,KAAA,CACA6Y,GAAA,EACAm7D,GAAA,IAEAY,EAAA50E,KAAA,CACA6Y,EAAA,EACAm7D,GAAA,IAEAY,EAAA50E,KAAA,CACA6Y,GAAA,EACAm7D,GAAA,MAKA,IACA6P,EACArzD,EAgBAszD,EAAAC,EAAAtQ,EAAAuQ,EAAAZ,EAAAvqE,EAAAm7D,EAAAiQ,EAAAC,EAlBAC,EAAA,GAQA,IAJA5P,IACAsP,EAAA,IAAA9O,EAAAF,EAAAlyE,KAAAkyE,EAAAhqE,MAAAgqE,EAAA5xE,MAGAzH,EAAAooF,EAAA,EAAoCpoF,GAAA,EAAQA,IAE5Cg1B,EADA+jD,EACAO,EAAA+O,EAAArG,EAAAC,GAAA,GAEAnJ,GAAA,EAAAkJ,EAAAC,EAAAnI,GAAA,EAlEA,KAkEAV,EAAAC,GAGAsP,EAAA3oF,GAAAg1B,EAKA,IAAAszD,EAAA,EAAsBA,EAAArG,EAAiBqG,IACvC,IAAAC,EAAA,EAAwBA,EAAAvG,EAAgBuG,IAAA,CAIxC,IAHAtQ,EAAA,EACAuQ,EAAA,EAEAzrD,EAAAqrD,EAAA,EAAwCrrD,GAAA,EAAQA,IAEhDyrD,IADAvQ,EAAA0Q,EAAA5rD,GAAAurD,GAAAC,GAAAtQ,IACAl7C,EAOA,GAJA6qD,EAAAD,EAAAa,GAEAhQ,EAAA2J,EAAAmG,EAAAlG,EAAAmG,EAAAlG,GAAA,GADAhlE,EAAA6kE,EAAAoG,EAAAjG,EAAAkG,EAAAnG,GAAA,IAGA,GAAA/kE,EAAAqkE,GAAAqG,GAAAvP,GAAA,GAAAA,EAAAmJ,GAAAqG,EACA,IAAAhoF,EAAA,EAA2BA,EAAA2hF,EAAmB3hF,IAI9C,IAHA0oF,EAAAT,EAAAzP,EAAAx4E,GACAyoF,EAAAb,EAAA5nF,GAEA+8B,EAAA,EAA6BA,EAAA2kD,EAAkB3kD,IAC/C2rD,EAAArrE,EAAA0f,IAAA0rD,EAAA1rD,OAGe,CACf,IAAA6rD,OAAA,EACAC,OAAA,EAEA,IAAA7oF,EAAA,EAA2BA,EAAA2hF,EAAmB3hF,IAG9C,MAFA6oF,EAAArQ,EAAAx4E,GAEA,GAAA6oF,GAAAb,GAOA,IAHAU,EAAAT,EAAAY,GACAJ,EAAAb,EAAA5nF,GAEA+8B,EAAA,EAA6BA,EAAA2kD,EAAkB3kD,KAC/C6rD,EAAAvrE,EAAA0f,IAEA,GAAA6rD,EAAAb,IACAW,EAAAE,IAAAH,EAAA1rD,KAQA,OAAAkrD,EAulBAa,CAAAlE,EAAA7L,IAAA4O,EAAA/C,EAAA9K,SAAAyK,EAAAvL,MAAAuL,EAAAtL,OAAA2L,EAAAzI,kBAAAyI,EAAA7C,WAAA6C,EAAAjI,oBAAAiI,EAAA5C,UAAA4C,EAAA3C,WAAA2C,EAAA1C,YAAA0C,EAAAzC,YAAAyC,EAAAxC,YAAAwC,EAAAvC,YAAAhJ,GACAp3E,KAAAqiF,WAAAC,EAAAvvD,IAEA+zD,kCAAA,WACA9mF,KAAA6lF,0BAAAl9E,MAAA3I,KAAA4I,YAEAm+E,SAAA,SAAAjE,EAAA59E,EAAAkI,EAAA5H,GACA,IAAAw9E,EAAAhjF,KAAAgjF,aAEAA,IACAhjF,KAAAgjF,aAAAA,EAAA,IAGAA,EAAAF,GA0IA,SAAA59E,EAAAkI,EAAA5H,GACA,IAOA67E,EACAC,EARArqB,EAAA/xD,EAAAkI,GACA45E,EAAA,YAAA,EAAAjmF,EAAA0a,YAAAvW,EAAAkI,EAAA,GACA65E,EAAA,YAAA,EAAAlmF,EAAA0a,YAAAvW,EAAAkI,EAAA,GACAvH,EAAA,IAAAyxE,EAAApyE,EAAAkI,EAAA,EAAA5H,GACA0hF,EAAA,GAAAjwB,GAAA,EAAA,GACAkwB,EAAA,GAAAlwB,GAAA,EAAA,GACA4qB,EAAA,GAGAuF,EAAAJ,EAEA,GACA3F,EAAAx7E,EAAA6rE,SAAAwV,GACA5F,EAAAz7E,EAAA6rE,SAAAyV,GACAtF,EAAAt/E,KAAA,IAAA0+E,EAAA,CAAAmG,EAAA/F,EAAAC,EAAA,KACA8F,GAAA,GAAA9F,QACW8F,EAAAH,GAEX5F,EAAAx7E,EAAA6rE,SAAAwV,GACArF,EAAAt/E,KAAA,IAAA0+E,EAAA,CAAA+F,EAAA,EAAA3F,EAAA,GAAA,EAAA,WACAA,EAAAx7E,EAAA6rE,SAAAwV,GACArF,EAAAt/E,KAAA,IAAA0+E,EAAA,CAAAgG,EAAA5F,EAAA,GAAA,KAEA,EAAApqB,IACAoqB,EAAAx7E,EAAA6rE,SAAAwV,GACArF,EAAAt/E,KAAA,IAAA0+E,EAAA,CAAAI,EAAA,MAGA,OAAA,IAAAO,EAAAC,GAAA,GAvKAwF,CAAAniF,EAAAkI,EAAA5H,KAoCAi8E,EAAA9hF,UAAA,CACAsiF,UAAA,SAAAP,EAAAxsC,GACA,IAAA8gC,EAAA0L,EAAAH,YAAArsC,EAAA,EAEA,GAAAA,GAAA,EACAl1C,KAAA8W,SAAAk/D,GAAA,IAAAyL,EAAAC,OACa,CACb,IAAAh+C,EAAA1jC,KAAA8W,SAAAk/D,GAEAtyC,IACA1jC,KAAA8W,SAAAk/D,GAAAtyC,EAAA,IAAA+9C,EAAA,OAGA/9C,EAAAu+C,UAAAP,EAAAxsC,EAAA,KAGAoyC,WAAA,SAAAzhF,GACA,GAAA7F,KAAA2hF,OAAA,CACA,GAAA3hF,KAAAmhF,MACA,OAAA,KAGA,IAAAoG,EAAA1hF,EAAA6rE,SAAA1xE,KAAAshF,aACA,OAAAthF,KAAAohF,UAAAphF,KAAAwhF,cAAA+F,EAAAA,GAGA,IAAA7jD,EAAA1jC,KAAA8W,SAAAjR,EAAAowE,WAEA,IAAAvyC,EACA,MAAA,IAAA6xC,EAAA,wBAGA,OAAA7xC,EAAA4jD,WAAAzhF,KAuBA+7E,EAAAjiF,UAAA,CACAu7E,OAAA,SAAAr1E,GACA,OAAA7F,KAAAgiF,SAAAsF,WAAAzhF,IAEAk8E,kBAAA,SAAAF,GACA,IAEA9jF,EAFAypF,EAAA3F,EAAAr/E,OACAilF,EAAA,EAGA,IAAA1pF,EAAA,EAAuBA,EAAAypF,EAAiBzpF,IACxC0pF,EAAAl8E,KAAAC,IAAAi8E,EAAA5F,EAAA9jF,GAAAsjF,cAGA,IAAAqG,EAAA,IAAAxsE,YAAAusE,EAAA,GAEA,IAAA1pF,EAAA,EAAuBA,EAAAypF,EAAiBzpF,IACxC2pF,EAAA7F,EAAA9jF,GAAAsjF,gBAGA,IAEAsG,EACAC,EACAlG,EAJAmG,EAAA,EACAC,EAAA,EAMA,IAFAJ,EAAA,GAAA,EAEAG,GAAAJ,GAAA,CAKA,IAHAE,EADAG,EAAAA,EAAAJ,EAAAG,EAAA,IAAA,EAEAD,EAAA,EAEAA,EAAAJ,IACA9F,EAAAG,EAAA+F,IAEAvG,eAAAwG,IACAnG,EAAAH,WAAAoG,EACAA,KAGAC,IAGAC,OAqCA,IAAAE,EAAA,GAEA,SAAAzE,EAAAtsE,GACA,IAMA6qE,EANAnU,EAAAqa,EAAA/wE,GAEA,GAAA02D,EACA,OAAAA,EAKA,OAAA12D,GACA,KAAA,EACA6qE,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,IACA,MAEA,KAAA,EACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,KACA,MAEA,KAAA,EACAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,IAAA,SAAA,CAAA,GAAA,EAAA,GAAA,KAAA,CAAA,EAAA,KACA,MAEA,KAAA,EACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,GAAA,KACA,MAEA,KAAA,EACAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,IAAA,SAAA,CAAA,GAAA,EAAA,GAAA,KACA,MAEA,KAAA,EACAA,EAAA,CAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,GAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KACA,MAEA,KAAA,EACAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,KAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,GAAA,GAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KACA,MAEA,KAAA,EACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KAAA,CAAA,EAAA,IACA,MAEA,KAAA,EACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,KAAA,CAAA,KAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KAAA,CAAA,EAAA,IACA,MAEA,KAAA,GACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,GAAA,IAAA,CAAA,KAAA,EAAA,GAAA,KAAA,EAAA,GAAA,EAAA,GAAA,IAAA,SAAA,CAAA,KAAA,EAAA,GAAA,KAAA,CAAA,EAAA,IACA,MAEA,KAAA,GACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,MACA,MAEA,KAAA,GACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,GAAA,EAAA,GAAA,MACA,MAEA,KAAA,GACAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,GAAA,EAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,MACA,MAEA,KAAA,GACAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IACA,MAEA,KAAA,GACAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA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WAAA,GACO,CACPH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACO,CACPH,GAAA,IAC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,IAAA,IAAA,IAAA,GAAA,EAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,EAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,EAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA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A,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,KACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,MACAA,EAAA,KAAA,KACAA,EAAA,KAAA,KACA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OAAA,KACAA,EAAA,OAAA,KACAA,EAAA,OAAA,OAkDA,IAAA2kJ,EAAA,CAAA,CACAr+I,MAAA,EACAC,IAAA,KACO,CACPD,MAAA,IACAC,IAAA,KACO,CACPD,MAAA,IACAC,IAAA,KACO,CACPD,MAAA,IACAC,IAAA,KACO,CACPD,MAAA,IACAC,IAAA,KACO,CACPD,MAAA,IACAC,IAAA,KACO,CACPD,MAAA,IACAC,IAAA,KACO,CACPD,MAAA,IACAC,IAAA,MACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,OACAC,IAAA,QACO,CACPD,MAAA,OACAC,IAAA,QACO,CACPD,MAAA,QACAC,IAAA,SACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,OACAC,IAAA,QACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,OACAC,IAAA,QACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,OACAC,IAAA,QACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,KACAC,IAAA,MACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,KACAC,IAAA,OACO,CACPD,MAAA,MACAC,IAAA,OACO,CACPD,MAAA,OACAC,IAAA,SA+BA,IAAA8vH,EAAAl8G,EAAA,SAAAna,GACAA,EAAA,QAAA,UACAA,EAAA,QAAA,UACAA,EAAA,QAAA,UACAA,EAAA,QAAA,SACAA,EAAA,QAAA,UACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,QACAA,EAAA,UAAA,QACAA,EAAA,UAAA,UACAA,EAAA,UAAA,IACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,UACAA,EAAA,UAAA,IACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,eACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,eACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,KACAA,EAAA,UAAA,UACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,2BACAA,EAAA,UAAA,IACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,QACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,SACAA,EAAA,UAAA,QACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,MACAA,EAAA,UAAA,IACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,KACAA,EAAA,UAAA,IACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,OACAA,EAAA,UAAA,KACAA,EAAA,UAAA,IACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,KACAA,EAAA,UAAA,IACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,OACAA,EAAA,UAAA,KACAA,EAAA,UAAA,IACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,IACAA,EAAA,UAAA,eACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,eACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,OACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,MACAA,EAAA,UAAA,2BACAA,EAAA,UAAA,MACAA,EAAA,UAAA,KACAA,EAAA,UAAA,MACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,UACAA,EAAA,UAAA,UACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,WACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,iBACAA,EAAA,UAAA,meACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eeACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,SACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,gBACAA,EAAA,UAAA,gBACAA,EAAA,UAAA,gBACAA,EAAA,UAAA,gBACAA,EAAA,UAAA,gBACAA,EAAA,UAAA,gBACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,eACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACAA,EAAA,UAAA,qBACA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EAAA,GAAA,IACAA,EAAA,GAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,IAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,KACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,EAAA,KAAA,IACAA,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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"/\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 1);\\n\",\"var g; // This works in non-strict mode\\n\\ng = function () {\\n  return this;\\n}();\\n\\ntry {\\n  // This works if eval is allowed (see CSP)\\n  g = g || new Function(\\\"return this\\\")();\\n} catch (e) {\\n  // This works if the window reference is available\\n  if (typeof window === \\\"object\\\") g = window;\\n} // g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it's\\n// easier to handle this case. if(!global) { ...}\\n\\n\\nmodule.exports = g;\",\"\\\"use strict\\\";\\n/**\\n * PDF.js Worker entry file.\\n *\\n * This file is identical to Mozilla's pdf.worker.entry.js, with one exception being placed inside\\n * this bundle, not theirs. This file can be safely removed and replaced with Mozilla's after the\\n * issue mentioned below has been resolved on Parcel's side.\\n * See: https://github.com/parcel-bundler/parcel/issues/670\\n */\\n\\n(typeof window !== 'undefined' ? window : {}).pdfjsWorker = require('pdfjs-dist/build/pdf.worker.js');\",\"/**\\n * @licstart The following is the entire license notice for the\\n * Javascript code in this page\\n *\\n * Copyright 2018 Mozilla Foundation\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @licend The above is the entire license notice for the\\n * Javascript code in this page\\n */\\n(function webpackUniversalModuleDefinition(root, factory) {\\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\\\"pdfjs-dist/build/pdf.worker\\\", [], factory);else if (typeof exports === 'object') exports[\\\"pdfjs-dist/build/pdf.worker\\\"] = factory();else root[\\\"pdfjs-dist/build/pdf.worker\\\"] = root.pdfjsWorker = factory();\\n})(this, function () {\\n  return (\\n    /******/\\n    function (modules) {\\n      // webpackBootstrap\\n\\n      /******/\\n      // The module cache\\n\\n      /******/\\n      var installedModules = {};\\n      /******/\\n\\n      /******/\\n      // The require function\\n\\n      /******/\\n\\n      function __w_pdfjs_require__(moduleId) {\\n        /******/\\n\\n        /******/\\n        // Check if module is in cache\\n\\n        /******/\\n        if (installedModules[moduleId]) {\\n          /******/\\n          return installedModules[moduleId].exports;\\n          /******/\\n        }\\n        /******/\\n        // Create a new module (and put it into the cache)\\n\\n        /******/\\n\\n\\n        var module = installedModules[moduleId] = {\\n          /******/\\n          i: moduleId,\\n\\n          /******/\\n          l: false,\\n\\n          /******/\\n          exports: {}\\n          /******/\\n\\n        };\\n        /******/\\n\\n        /******/\\n        // Execute the module function\\n\\n        /******/\\n\\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\\n        /******/\\n\\n        /******/\\n        // Flag the module as loaded\\n\\n        /******/\\n\\n        module.l = true;\\n        /******/\\n\\n        /******/\\n        // Return the exports of the module\\n\\n        /******/\\n\\n        return module.exports;\\n        /******/\\n      }\\n      /******/\\n\\n      /******/\\n\\n      /******/\\n      // expose the modules object (__webpack_modules__)\\n\\n      /******/\\n\\n\\n      __w_pdfjs_require__.m = modules;\\n      /******/\\n\\n      /******/\\n      // expose the module cache\\n\\n      /******/\\n\\n      __w_pdfjs_require__.c = installedModules;\\n      /******/\\n\\n      /******/\\n      // define getter function for harmony exports\\n\\n      /******/\\n\\n      __w_pdfjs_require__.d = function (exports, name, getter) {\\n        /******/\\n        if (!__w_pdfjs_require__.o(exports, name)) {\\n          /******/\\n          Object.defineProperty(exports, name, {\\n            enumerable: true,\\n            get: getter\\n          });\\n          /******/\\n        }\\n        /******/\\n\\n      };\\n      /******/\\n\\n      /******/\\n      // define __esModule on exports\\n\\n      /******/\\n\\n\\n      __w_pdfjs_require__.r = function (exports) {\\n        /******/\\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n          /******/\\n          Object.defineProperty(exports, Symbol.toStringTag, {\\n            value: 'Module'\\n          });\\n          /******/\\n        }\\n        /******/\\n\\n\\n        Object.defineProperty(exports, '__esModule', {\\n          value: true\\n        });\\n        /******/\\n      };\\n      /******/\\n\\n      /******/\\n      // create a fake namespace object\\n\\n      /******/\\n      // mode & 1: value is a module id, require it\\n\\n      /******/\\n      // mode & 2: merge all properties of value into the ns\\n\\n      /******/\\n      // mode & 4: return value when already ns object\\n\\n      /******/\\n      // mode & 8|1: behave like require\\n\\n      /******/\\n\\n\\n      __w_pdfjs_require__.t = function (value, mode) {\\n        /******/\\n        if (mode & 1) value = __w_pdfjs_require__(value);\\n        /******/\\n\\n        if (mode & 8) return value;\\n        /******/\\n\\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\\n        /******/\\n\\n        var ns = Object.create(null);\\n        /******/\\n\\n        __w_pdfjs_require__.r(ns);\\n        /******/\\n\\n\\n        Object.defineProperty(ns, 'default', {\\n          enumerable: true,\\n          value: value\\n        });\\n        /******/\\n\\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\\n          __w_pdfjs_require__.d(ns, key, function (key) {\\n            return value[key];\\n          }.bind(null, key));\\n        }\\n        /******/\\n\\n        return ns;\\n        /******/\\n      };\\n      /******/\\n\\n      /******/\\n      // getDefaultExport function for compatibility with non-harmony modules\\n\\n      /******/\\n\\n\\n      __w_pdfjs_require__.n = function (module) {\\n        /******/\\n        var getter = module && module.__esModule ?\\n        /******/\\n        function getDefault() {\\n          return module['default'];\\n        } :\\n        /******/\\n        function getModuleExports() {\\n          return module;\\n        };\\n        /******/\\n\\n        __w_pdfjs_require__.d(getter, 'a', getter);\\n        /******/\\n\\n\\n        return getter;\\n        /******/\\n      };\\n      /******/\\n\\n      /******/\\n      // Object.prototype.hasOwnProperty.call\\n\\n      /******/\\n\\n\\n      __w_pdfjs_require__.o = function (object, property) {\\n        return Object.prototype.hasOwnProperty.call(object, property);\\n      };\\n      /******/\\n\\n      /******/\\n      // __webpack_public_path__\\n\\n      /******/\\n\\n\\n      __w_pdfjs_require__.p = \\\"\\\";\\n      /******/\\n\\n      /******/\\n\\n      /******/\\n      // Load entry module and return exports\\n\\n      /******/\\n\\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\\n      /******/\\n    }(\\n    /************************************************************************/\\n\\n    /******/\\n    [\\n    /* 0 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var pdfjsVersion = '2.1.266';\\n      var pdfjsBuild = '81f5835c';\\n\\n      var pdfjsCoreWorker = __w_pdfjs_require__(1);\\n\\n      exports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\\n      /***/\\n    },\\n    /* 1 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.WorkerMessageHandler = exports.WorkerTask = void 0;\\n\\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _pdf_manager = __w_pdfjs_require__(151);\\n\\n      var _is_node = _interopRequireDefault(__w_pdfjs_require__(9));\\n\\n      var _message_handler = __w_pdfjs_require__(189);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      function _interopRequireDefault(obj) {\\n        return obj && obj.__esModule ? obj : {\\n          default: obj\\n        };\\n      }\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _slicedToArray(arr, i) {\\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\\n      }\\n\\n      function _nonIterableRest() {\\n        throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\");\\n      }\\n\\n      function _iterableToArrayLimit(arr, i) {\\n        var _arr = [];\\n        var _n = true;\\n        var _d = false;\\n        var _e = undefined;\\n\\n        try {\\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n            _arr.push(_s.value);\\n\\n            if (i && _arr.length === i) break;\\n          }\\n        } catch (err) {\\n          _d = true;\\n          _e = err;\\n        } finally {\\n          try {\\n            if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"]();\\n          } finally {\\n            if (_d) throw _e;\\n          }\\n        }\\n\\n        return _arr;\\n      }\\n\\n      function _arrayWithHoles(arr) {\\n        if (Array.isArray(arr)) return arr;\\n      }\\n\\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\\n        try {\\n          var info = gen[key](arg);\\n          var value = info.value;\\n        } catch (error) {\\n          reject(error);\\n          return;\\n        }\\n\\n        if (info.done) {\\n          resolve(value);\\n        } else {\\n          Promise.resolve(value).then(_next, _throw);\\n        }\\n      }\\n\\n      function _asyncToGenerator(fn) {\\n        return function () {\\n          var self = this,\\n              args = arguments;\\n          return new Promise(function (resolve, reject) {\\n            var gen = fn.apply(self, args);\\n\\n            function _next(value) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"next\\\", value);\\n            }\\n\\n            function _throw(err) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"throw\\\", err);\\n            }\\n\\n            _next(undefined);\\n          });\\n        };\\n      }\\n\\n      var WorkerTask = function WorkerTaskClosure() {\\n        function WorkerTask(name) {\\n          this.name = name;\\n          this.terminated = false;\\n          this._capability = (0, _util.createPromiseCapability)();\\n        }\\n\\n        WorkerTask.prototype = {\\n          get finished() {\\n            return this._capability.promise;\\n          },\\n\\n          finish: function finish() {\\n            this._capability.resolve();\\n          },\\n          terminate: function terminate() {\\n            this.terminated = true;\\n          },\\n          ensureNotTerminated: function ensureNotTerminated() {\\n            if (this.terminated) {\\n              throw new Error('Worker task was terminated');\\n            }\\n          }\\n        };\\n        return WorkerTask;\\n      }();\\n\\n      exports.WorkerTask = WorkerTask;\\n\\n      var PDFWorkerStream = function PDFWorkerStreamClosure() {\\n        function PDFWorkerStream(msgHandler) {\\n          this._msgHandler = msgHandler;\\n          this._contentLength = null;\\n          this._fullRequestReader = null;\\n          this._rangeRequestReaders = [];\\n        }\\n\\n        PDFWorkerStream.prototype = {\\n          getFullReader: function getFullReader() {\\n            (0, _util.assert)(!this._fullRequestReader);\\n            this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\\n            return this._fullRequestReader;\\n          },\\n          getRangeReader: function getRangeReader(begin, end) {\\n            var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\\n\\n            this._rangeRequestReaders.push(reader);\\n\\n            return reader;\\n          },\\n          cancelAllRequests: function cancelAllRequests(reason) {\\n            if (this._fullRequestReader) {\\n              this._fullRequestReader.cancel(reason);\\n            }\\n\\n            var readers = this._rangeRequestReaders.slice(0);\\n\\n            readers.forEach(function (reader) {\\n              reader.cancel(reason);\\n            });\\n          }\\n        };\\n\\n        function PDFWorkerStreamReader(msgHandler) {\\n          var _this = this;\\n\\n          this._msgHandler = msgHandler;\\n          this._contentLength = null;\\n          this._isRangeSupported = false;\\n          this._isStreamingSupported = false;\\n\\n          var readableStream = this._msgHandler.sendWithStream('GetReader');\\n\\n          this._reader = readableStream.getReader();\\n          this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\\n            _this._isStreamingSupported = data.isStreamingSupported;\\n            _this._isRangeSupported = data.isRangeSupported;\\n            _this._contentLength = data.contentLength;\\n          });\\n        }\\n\\n        PDFWorkerStreamReader.prototype = {\\n          get headersReady() {\\n            return this._headersReady;\\n          },\\n\\n          get contentLength() {\\n            return this._contentLength;\\n          },\\n\\n          get isStreamingSupported() {\\n            return this._isStreamingSupported;\\n          },\\n\\n          get isRangeSupported() {\\n            return this._isRangeSupported;\\n          },\\n\\n          read: function read() {\\n            return this._reader.read().then(function (_ref) {\\n              var value = _ref.value,\\n                  done = _ref.done;\\n\\n              if (done) {\\n                return {\\n                  value: undefined,\\n                  done: true\\n                };\\n              }\\n\\n              return {\\n                value: value.buffer,\\n                done: false\\n              };\\n            });\\n          },\\n          cancel: function cancel(reason) {\\n            this._reader.cancel(reason);\\n          }\\n        };\\n\\n        function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\\n          this._msgHandler = msgHandler;\\n          this.onProgress = null;\\n\\n          var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\\n            begin: begin,\\n            end: end\\n          });\\n\\n          this._reader = readableStream.getReader();\\n        }\\n\\n        PDFWorkerStreamRangeReader.prototype = {\\n          get isStreamingSupported() {\\n            return false;\\n          },\\n\\n          read: function read() {\\n            return this._reader.read().then(function (_ref2) {\\n              var value = _ref2.value,\\n                  done = _ref2.done;\\n\\n              if (done) {\\n                return {\\n                  value: undefined,\\n                  done: true\\n                };\\n              }\\n\\n              return {\\n                value: value.buffer,\\n                done: false\\n              };\\n            });\\n          },\\n          cancel: function cancel(reason) {\\n            this._reader.cancel(reason);\\n          }\\n        };\\n        return PDFWorkerStream;\\n      }();\\n\\n      var WorkerMessageHandler = {\\n        setup: function setup(handler, port) {\\n          var testMessageProcessed = false;\\n          handler.on('test', function wphSetupTest(data) {\\n            if (testMessageProcessed) {\\n              return;\\n            }\\n\\n            testMessageProcessed = true;\\n\\n            if (!(data instanceof Uint8Array)) {\\n              handler.send('test', false);\\n              return;\\n            }\\n\\n            var supportTransfers = data[0] === 255;\\n            handler.postMessageTransfers = supportTransfers;\\n            var xhr = new XMLHttpRequest();\\n            var responseExists = 'response' in xhr;\\n\\n            try {\\n              xhr.responseType;\\n            } catch (e) {\\n              responseExists = false;\\n            }\\n\\n            if (!responseExists) {\\n              handler.send('test', false);\\n              return;\\n            }\\n\\n            handler.send('test', {\\n              supportTypedArray: true,\\n              supportTransfers: supportTransfers\\n            });\\n          });\\n          handler.on('configure', function wphConfigure(data) {\\n            (0, _util.setVerbosityLevel)(data.verbosity);\\n          });\\n          handler.on('GetDocRequest', function wphSetupDoc(data) {\\n            return WorkerMessageHandler.createDocumentHandler(data, port);\\n          });\\n        },\\n        createDocumentHandler: function createDocumentHandler(docParams, port) {\\n          var pdfManager;\\n          var terminated = false;\\n          var cancelXHRs = null;\\n          var WorkerTasks = [];\\n          var apiVersion = docParams.apiVersion;\\n          var workerVersion = '2.1.266';\\n\\n          if (apiVersion !== workerVersion) {\\n            throw new Error(\\\"The API version \\\\\\\"\\\".concat(apiVersion, \\\"\\\\\\\" does not match \\\") + \\\"the Worker version \\\\\\\"\\\".concat(workerVersion, \\\"\\\\\\\".\\\"));\\n          }\\n\\n          var docId = docParams.docId;\\n          var docBaseUrl = docParams.docBaseUrl;\\n          var workerHandlerName = docParams.docId + '_worker';\\n          var handler = new _message_handler.MessageHandler(workerHandlerName, docId, port);\\n          handler.postMessageTransfers = docParams.postMessageTransfers;\\n\\n          function ensureNotTerminated() {\\n            if (terminated) {\\n              throw new Error('Worker was terminated');\\n            }\\n          }\\n\\n          function startWorkerTask(task) {\\n            WorkerTasks.push(task);\\n          }\\n\\n          function finishWorkerTask(task) {\\n            task.finish();\\n            var i = WorkerTasks.indexOf(task);\\n            WorkerTasks.splice(i, 1);\\n          }\\n\\n          function loadDocument(_x) {\\n            return _loadDocument.apply(this, arguments);\\n          }\\n\\n          function _loadDocument() {\\n            _loadDocument = _asyncToGenerator(\\n            /*#__PURE__*/\\n            _regenerator.default.mark(function _callee(recoveryMode) {\\n              var _ref6, _ref7, numPages, fingerprint;\\n\\n              return _regenerator.default.wrap(function _callee$(_context) {\\n                while (1) {\\n                  switch (_context.prev = _context.next) {\\n                    case 0:\\n                      _context.next = 2;\\n                      return pdfManager.ensureDoc('checkHeader');\\n\\n                    case 2:\\n                      _context.next = 4;\\n                      return pdfManager.ensureDoc('parseStartXRef');\\n\\n                    case 4:\\n                      _context.next = 6;\\n                      return pdfManager.ensureDoc('parse', [recoveryMode]);\\n\\n                    case 6:\\n                      if (recoveryMode) {\\n                        _context.next = 9;\\n                        break;\\n                      }\\n\\n                      _context.next = 9;\\n                      return pdfManager.ensureDoc('checkFirstPage');\\n\\n                    case 9:\\n                      _context.next = 11;\\n                      return Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]);\\n\\n                    case 11:\\n                      _ref6 = _context.sent;\\n                      _ref7 = _slicedToArray(_ref6, 2);\\n                      numPages = _ref7[0];\\n                      fingerprint = _ref7[1];\\n                      return _context.abrupt(\\\"return\\\", {\\n                        numPages: numPages,\\n                        fingerprint: fingerprint\\n                      });\\n\\n                    case 16:\\n                    case \\\"end\\\":\\n                      return _context.stop();\\n                  }\\n                }\\n              }, _callee, this);\\n            }));\\n            return _loadDocument.apply(this, arguments);\\n          }\\n\\n          function getPdfManager(data, evaluatorOptions) {\\n            var pdfManagerCapability = (0, _util.createPromiseCapability)();\\n            var pdfManager;\\n            var source = data.source;\\n\\n            if (source.data) {\\n              try {\\n                pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\\n                pdfManagerCapability.resolve(pdfManager);\\n              } catch (ex) {\\n                pdfManagerCapability.reject(ex);\\n              }\\n\\n              return pdfManagerCapability.promise;\\n            }\\n\\n            var pdfStream,\\n                cachedChunks = [];\\n\\n            try {\\n              pdfStream = new PDFWorkerStream(handler);\\n            } catch (ex) {\\n              pdfManagerCapability.reject(ex);\\n              return pdfManagerCapability.promise;\\n            }\\n\\n            var fullRequest = pdfStream.getFullReader();\\n            fullRequest.headersReady.then(function () {\\n              if (!fullRequest.isRangeSupported) {\\n                return;\\n              }\\n\\n              var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\\n              pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\\n                msgHandler: handler,\\n                password: source.password,\\n                length: fullRequest.contentLength,\\n                disableAutoFetch: disableAutoFetch,\\n                rangeChunkSize: source.rangeChunkSize\\n              }, evaluatorOptions, docBaseUrl);\\n\\n              for (var i = 0; i < cachedChunks.length; i++) {\\n                pdfManager.sendProgressiveData(cachedChunks[i]);\\n              }\\n\\n              cachedChunks = [];\\n              pdfManagerCapability.resolve(pdfManager);\\n              cancelXHRs = null;\\n            }).catch(function (reason) {\\n              pdfManagerCapability.reject(reason);\\n              cancelXHRs = null;\\n            });\\n            var loaded = 0;\\n\\n            var flushChunks = function flushChunks() {\\n              var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\\n\\n              if (source.length && pdfFile.length !== source.length) {\\n                (0, _util.warn)('reported HTTP length is different from actual');\\n              }\\n\\n              try {\\n                pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\\n                pdfManagerCapability.resolve(pdfManager);\\n              } catch (ex) {\\n                pdfManagerCapability.reject(ex);\\n              }\\n\\n              cachedChunks = [];\\n            };\\n\\n            var readPromise = new Promise(function (resolve, reject) {\\n              var readChunk = function readChunk(chunk) {\\n                try {\\n                  ensureNotTerminated();\\n\\n                  if (chunk.done) {\\n                    if (!pdfManager) {\\n                      flushChunks();\\n                    }\\n\\n                    cancelXHRs = null;\\n                    return;\\n                  }\\n\\n                  var data = chunk.value;\\n                  loaded += (0, _util.arrayByteLength)(data);\\n\\n                  if (!fullRequest.isStreamingSupported) {\\n                    handler.send('DocProgress', {\\n                      loaded: loaded,\\n                      total: Math.max(loaded, fullRequest.contentLength || 0)\\n                    });\\n                  }\\n\\n                  if (pdfManager) {\\n                    pdfManager.sendProgressiveData(data);\\n                  } else {\\n                    cachedChunks.push(data);\\n                  }\\n\\n                  fullRequest.read().then(readChunk, reject);\\n                } catch (e) {\\n                  reject(e);\\n                }\\n              };\\n\\n              fullRequest.read().then(readChunk, reject);\\n            });\\n            readPromise.catch(function (e) {\\n              pdfManagerCapability.reject(e);\\n              cancelXHRs = null;\\n            });\\n\\n            cancelXHRs = function cancelXHRs() {\\n              pdfStream.cancelAllRequests('abort');\\n            };\\n\\n            return pdfManagerCapability.promise;\\n          }\\n\\n          function setupDoc(data) {\\n            function onSuccess(doc) {\\n              ensureNotTerminated();\\n              handler.send('GetDoc', {\\n                pdfInfo: doc\\n              });\\n            }\\n\\n            function onFailure(e) {\\n              ensureNotTerminated();\\n\\n              if (e instanceof _util.PasswordException) {\\n                var task = new WorkerTask('PasswordException: response ' + e.code);\\n                startWorkerTask(task);\\n                handler.sendWithPromise('PasswordRequest', e).then(function (data) {\\n                  finishWorkerTask(task);\\n                  pdfManager.updatePassword(data.password);\\n                  pdfManagerReady();\\n                }).catch(function (boundException) {\\n                  finishWorkerTask(task);\\n                  handler.send('PasswordException', boundException);\\n                }.bind(null, e));\\n              } else if (e instanceof _util.InvalidPDFException) {\\n                handler.send('InvalidPDF', e);\\n              } else if (e instanceof _util.MissingPDFException) {\\n                handler.send('MissingPDF', e);\\n              } else if (e instanceof _util.UnexpectedResponseException) {\\n                handler.send('UnexpectedResponse', e);\\n              } else {\\n                handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\\n              }\\n            }\\n\\n            function pdfManagerReady() {\\n              ensureNotTerminated();\\n              loadDocument(false).then(onSuccess, function loadFailure(ex) {\\n                ensureNotTerminated();\\n\\n                if (!(ex instanceof _util.XRefParseException)) {\\n                  onFailure(ex);\\n                  return;\\n                }\\n\\n                pdfManager.requestLoadedStream();\\n                pdfManager.onLoadedStream().then(function () {\\n                  ensureNotTerminated();\\n                  loadDocument(true).then(onSuccess, onFailure);\\n                });\\n              }, onFailure);\\n            }\\n\\n            ensureNotTerminated();\\n            var evaluatorOptions = {\\n              forceDataSchema: data.disableCreateObjectURL,\\n              maxImageSize: data.maxImageSize,\\n              disableFontFace: data.disableFontFace,\\n              nativeImageDecoderSupport: data.nativeImageDecoderSupport,\\n              ignoreErrors: data.ignoreErrors,\\n              isEvalSupported: data.isEvalSupported\\n            };\\n            getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\\n              if (terminated) {\\n                newPdfManager.terminate();\\n                throw new Error('Worker was terminated');\\n              }\\n\\n              pdfManager = newPdfManager;\\n              pdfManager.onLoadedStream().then(function (stream) {\\n                handler.send('DataLoaded', {\\n                  length: stream.bytes.byteLength\\n                });\\n              });\\n            }).then(pdfManagerReady, onFailure);\\n          }\\n\\n          handler.on('GetPage', function wphSetupGetPage(data) {\\n            return pdfManager.getPage(data.pageIndex).then(function (page) {\\n              return Promise.all([pdfManager.ensure(page, 'rotate'), pdfManager.ensure(page, 'ref'), pdfManager.ensure(page, 'userUnit'), pdfManager.ensure(page, 'view')]).then(function (_ref3) {\\n                var _ref4 = _slicedToArray(_ref3, 4),\\n                    rotate = _ref4[0],\\n                    ref = _ref4[1],\\n                    userUnit = _ref4[2],\\n                    view = _ref4[3];\\n\\n                return {\\n                  rotate: rotate,\\n                  ref: ref,\\n                  userUnit: userUnit,\\n                  view: view\\n                };\\n              });\\n            });\\n          });\\n          handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\\n            var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\\n            var catalog = pdfManager.pdfDocument.catalog;\\n            return catalog.getPageIndex(ref);\\n          });\\n          handler.on('GetDestinations', function wphSetupGetDestinations(data) {\\n            return pdfManager.ensureCatalog('destinations');\\n          });\\n          handler.on('GetDestination', function wphSetupGetDestination(data) {\\n            return pdfManager.ensureCatalog('getDestination', [data.id]);\\n          });\\n          handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\\n            return pdfManager.ensureCatalog('pageLabels');\\n          });\\n          handler.on('GetPageMode', function wphSetupGetPageMode(data) {\\n            return pdfManager.ensureCatalog('pageMode');\\n          });\\n          handler.on('getOpenActionDestination', function (data) {\\n            return pdfManager.ensureCatalog('openActionDestination');\\n          });\\n          handler.on('GetAttachments', function wphSetupGetAttachments(data) {\\n            return pdfManager.ensureCatalog('attachments');\\n          });\\n          handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\\n            return pdfManager.ensureCatalog('javaScript');\\n          });\\n          handler.on('GetOutline', function wphSetupGetOutline(data) {\\n            return pdfManager.ensureCatalog('documentOutline');\\n          });\\n          handler.on('GetPermissions', function (data) {\\n            return pdfManager.ensureCatalog('permissions');\\n          });\\n          handler.on('GetMetadata', function wphSetupGetMetadata(data) {\\n            return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\\n          });\\n          handler.on('GetData', function wphSetupGetData(data) {\\n            pdfManager.requestLoadedStream();\\n            return pdfManager.onLoadedStream().then(function (stream) {\\n              return stream.bytes;\\n            });\\n          });\\n          handler.on('GetStats', function wphSetupGetStats(data) {\\n            return pdfManager.pdfDocument.xref.stats;\\n          });\\n          handler.on('GetAnnotations', function (_ref5) {\\n            var pageIndex = _ref5.pageIndex,\\n                intent = _ref5.intent;\\n            return pdfManager.getPage(pageIndex).then(function (page) {\\n              return page.getAnnotationsData(intent);\\n            });\\n          });\\n          handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\\n            var pageIndex = data.pageIndex;\\n            pdfManager.getPage(pageIndex).then(function (page) {\\n              var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\\n              startWorkerTask(task);\\n              var pageNum = pageIndex + 1;\\n              var start = Date.now();\\n              page.getOperatorList({\\n                handler: handler,\\n                task: task,\\n                intent: data.intent,\\n                renderInteractiveForms: data.renderInteractiveForms\\n              }).then(function (operatorList) {\\n                finishWorkerTask(task);\\n                (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\\n              }, function (e) {\\n                finishWorkerTask(task);\\n\\n                if (task.terminated) {\\n                  return;\\n                }\\n\\n                handler.send('UnsupportedFeature', {\\n                  featureId: _util.UNSUPPORTED_FEATURES.unknown\\n                });\\n                var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\\n                var wrappedException;\\n\\n                if (typeof e === 'string') {\\n                  wrappedException = {\\n                    message: e,\\n                    stack: minimumStackMessage\\n                  };\\n                } else if (_typeof(e) === 'object') {\\n                  wrappedException = {\\n                    message: e.message || e.toString(),\\n                    stack: e.stack || minimumStackMessage\\n                  };\\n                } else {\\n                  wrappedException = {\\n                    message: 'Unknown exception type: ' + _typeof(e),\\n                    stack: minimumStackMessage\\n                  };\\n                }\\n\\n                handler.send('PageError', {\\n                  pageNum: pageNum,\\n                  error: wrappedException,\\n                  intent: data.intent\\n                });\\n              });\\n            });\\n          }, this);\\n          handler.on('GetTextContent', function wphExtractText(data, sink) {\\n            var pageIndex = data.pageIndex;\\n\\n            sink.onPull = function (desiredSize) {};\\n\\n            sink.onCancel = function (reason) {};\\n\\n            pdfManager.getPage(pageIndex).then(function (page) {\\n              var task = new WorkerTask('GetTextContent: page ' + pageIndex);\\n              startWorkerTask(task);\\n              var pageNum = pageIndex + 1;\\n              var start = Date.now();\\n              page.extractTextContent({\\n                handler: handler,\\n                task: task,\\n                sink: sink,\\n                normalizeWhitespace: data.normalizeWhitespace,\\n                combineTextItems: data.combineTextItems\\n              }).then(function () {\\n                finishWorkerTask(task);\\n                (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\\n                sink.close();\\n              }, function (reason) {\\n                finishWorkerTask(task);\\n\\n                if (task.terminated) {\\n                  return;\\n                }\\n\\n                sink.error(reason);\\n                throw reason;\\n              });\\n            });\\n          });\\n          handler.on('FontFallback', function (data) {\\n            return pdfManager.fontFallback(data.id, handler);\\n          });\\n          handler.on('Cleanup', function wphCleanup(data) {\\n            return pdfManager.cleanup();\\n          });\\n          handler.on('Terminate', function wphTerminate(data) {\\n            terminated = true;\\n\\n            if (pdfManager) {\\n              pdfManager.terminate();\\n              pdfManager = null;\\n            }\\n\\n            if (cancelXHRs) {\\n              cancelXHRs();\\n            }\\n\\n            var waitOn = [];\\n            WorkerTasks.forEach(function (task) {\\n              waitOn.push(task.finished);\\n              task.terminate();\\n            });\\n            return Promise.all(waitOn).then(function () {\\n              handler.destroy();\\n              handler = null;\\n            });\\n          });\\n          handler.on('Ready', function wphReady(data) {\\n            setupDoc(docParams);\\n            docParams = null;\\n          });\\n          return workerHandlerName;\\n        },\\n        initializeFromPort: function initializeFromPort(port) {\\n          var handler = new _message_handler.MessageHandler('worker', 'main', port);\\n          WorkerMessageHandler.setup(handler, port);\\n          handler.send('ready', null);\\n        }\\n      };\\n      exports.WorkerMessageHandler = WorkerMessageHandler;\\n\\n      function isMessagePort(maybePort) {\\n        return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\\n      }\\n\\n      if (typeof window === 'undefined' && !(0, _is_node.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\\n        WorkerMessageHandler.initializeFromPort(self);\\n      }\\n      /***/\\n\\n    },\\n    /* 2 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = __w_pdfjs_require__(3);\\n      /***/\\n    },\\n    /* 3 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      var g = function () {\\n        return this || (typeof self === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(self)) === \\\"object\\\" && self;\\n      }() || Function(\\\"return this\\\")();\\n\\n      var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\\\"regeneratorRuntime\\\") >= 0;\\n      var oldRuntime = hadRuntime && g.regeneratorRuntime;\\n      g.regeneratorRuntime = undefined;\\n      module.exports = __w_pdfjs_require__(4);\\n\\n      if (hadRuntime) {\\n        g.regeneratorRuntime = oldRuntime;\\n      } else {\\n        try {\\n          delete g.regeneratorRuntime;\\n        } catch (e) {\\n          g.regeneratorRuntime = undefined;\\n        }\\n      }\\n      /***/\\n\\n    },\\n    /* 4 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n      /* WEBPACK VAR INJECTION */\\n\\n      (function (module) {\\n        function _typeof(obj) {\\n          if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n            _typeof = function _typeof(obj) {\\n              return typeof obj;\\n            };\\n          } else {\\n            _typeof = function _typeof(obj) {\\n              return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n            };\\n          }\\n\\n          return _typeof(obj);\\n        }\\n\\n        !function (global) {\\n          \\\"use strict\\\";\\n\\n          var Op = Object.prototype;\\n          var hasOwn = Op.hasOwnProperty;\\n          var undefined;\\n          var $Symbol = typeof Symbol === \\\"function\\\" ? Symbol : {};\\n          var iteratorSymbol = $Symbol.iterator || \\\"@@iterator\\\";\\n          var asyncIteratorSymbol = $Symbol.asyncIterator || \\\"@@asyncIterator\\\";\\n          var toStringTagSymbol = $Symbol.toStringTag || \\\"@@toStringTag\\\";\\n          var inModule = (false ? undefined : _typeof(module)) === \\\"object\\\";\\n          var runtime = global.regeneratorRuntime;\\n\\n          if (runtime) {\\n            if (inModule) {\\n              module.exports = runtime;\\n            }\\n\\n            return;\\n          }\\n\\n          runtime = global.regeneratorRuntime = inModule ? module.exports : {};\\n\\n          function wrap(innerFn, outerFn, self, tryLocsList) {\\n            var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\\n            var generator = Object.create(protoGenerator.prototype);\\n            var context = new Context(tryLocsList || []);\\n            generator._invoke = makeInvokeMethod(innerFn, self, context);\\n            return generator;\\n          }\\n\\n          runtime.wrap = wrap;\\n\\n          function tryCatch(fn, obj, arg) {\\n            try {\\n              return {\\n                type: \\\"normal\\\",\\n                arg: fn.call(obj, arg)\\n              };\\n            } catch (err) {\\n              return {\\n                type: \\\"throw\\\",\\n                arg: err\\n              };\\n            }\\n          }\\n\\n          var GenStateSuspendedStart = \\\"suspendedStart\\\";\\n          var GenStateSuspendedYield = \\\"suspendedYield\\\";\\n          var GenStateExecuting = \\\"executing\\\";\\n          var GenStateCompleted = \\\"completed\\\";\\n          var ContinueSentinel = {};\\n\\n          function Generator() {}\\n\\n          function GeneratorFunction() {}\\n\\n          function GeneratorFunctionPrototype() {}\\n\\n          var IteratorPrototype = {};\\n\\n          IteratorPrototype[iteratorSymbol] = function () {\\n            return this;\\n          };\\n\\n          var getProto = Object.getPrototypeOf;\\n          var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\\n\\n          if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\\n            IteratorPrototype = NativeIteratorPrototype;\\n          }\\n\\n          var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\\n          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\\n          GeneratorFunctionPrototype.constructor = GeneratorFunction;\\n          GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \\\"GeneratorFunction\\\";\\n\\n          function defineIteratorMethods(prototype) {\\n            [\\\"next\\\", \\\"throw\\\", \\\"return\\\"].forEach(function (method) {\\n              prototype[method] = function (arg) {\\n                return this._invoke(method, arg);\\n              };\\n            });\\n          }\\n\\n          runtime.isGeneratorFunction = function (genFun) {\\n            var ctor = typeof genFun === \\\"function\\\" && genFun.constructor;\\n            return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === \\\"GeneratorFunction\\\" : false;\\n          };\\n\\n          runtime.mark = function (genFun) {\\n            if (Object.setPrototypeOf) {\\n              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\\n            } else {\\n              genFun.__proto__ = GeneratorFunctionPrototype;\\n\\n              if (!(toStringTagSymbol in genFun)) {\\n                genFun[toStringTagSymbol] = \\\"GeneratorFunction\\\";\\n              }\\n            }\\n\\n            genFun.prototype = Object.create(Gp);\\n            return genFun;\\n          };\\n\\n          runtime.awrap = function (arg) {\\n            return {\\n              __await: arg\\n            };\\n          };\\n\\n          function AsyncIterator(generator) {\\n            function invoke(method, arg, resolve, reject) {\\n              var record = tryCatch(generator[method], generator, arg);\\n\\n              if (record.type === \\\"throw\\\") {\\n                reject(record.arg);\\n              } else {\\n                var result = record.arg;\\n                var value = result.value;\\n\\n                if (value && _typeof(value) === \\\"object\\\" && hasOwn.call(value, \\\"__await\\\")) {\\n                  return Promise.resolve(value.__await).then(function (value) {\\n                    invoke(\\\"next\\\", value, resolve, reject);\\n                  }, function (err) {\\n                    invoke(\\\"throw\\\", err, resolve, reject);\\n                  });\\n                }\\n\\n                return Promise.resolve(value).then(function (unwrapped) {\\n                  result.value = unwrapped;\\n                  resolve(result);\\n                }, function (error) {\\n                  return invoke(\\\"throw\\\", error, resolve, reject);\\n                });\\n              }\\n            }\\n\\n            var previousPromise;\\n\\n            function enqueue(method, arg) {\\n              function callInvokeWithMethodAndArg() {\\n                return new Promise(function (resolve, reject) {\\n                  invoke(method, arg, resolve, reject);\\n                });\\n              }\\n\\n              return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\\n            }\\n\\n            this._invoke = enqueue;\\n          }\\n\\n          defineIteratorMethods(AsyncIterator.prototype);\\n\\n          AsyncIterator.prototype[asyncIteratorSymbol] = function () {\\n            return this;\\n          };\\n\\n          runtime.AsyncIterator = AsyncIterator;\\n\\n          runtime.async = function (innerFn, outerFn, self, tryLocsList) {\\n            var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\\n            return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\\n              return result.done ? result.value : iter.next();\\n            });\\n          };\\n\\n          function makeInvokeMethod(innerFn, self, context) {\\n            var state = GenStateSuspendedStart;\\n            return function invoke(method, arg) {\\n              if (state === GenStateExecuting) {\\n                throw new Error(\\\"Generator is already running\\\");\\n              }\\n\\n              if (state === GenStateCompleted) {\\n                if (method === \\\"throw\\\") {\\n                  throw arg;\\n                }\\n\\n                return doneResult();\\n              }\\n\\n              context.method = method;\\n              context.arg = arg;\\n\\n              while (true) {\\n                var delegate = context.delegate;\\n\\n                if (delegate) {\\n                  var delegateResult = maybeInvokeDelegate(delegate, context);\\n\\n                  if (delegateResult) {\\n                    if (delegateResult === ContinueSentinel) continue;\\n                    return delegateResult;\\n                  }\\n                }\\n\\n                if (context.method === \\\"next\\\") {\\n                  context.sent = context._sent = context.arg;\\n                } else if (context.method === \\\"throw\\\") {\\n                  if (state === GenStateSuspendedStart) {\\n                    state = GenStateCompleted;\\n                    throw context.arg;\\n                  }\\n\\n                  context.dispatchException(context.arg);\\n                } else if (context.method === \\\"return\\\") {\\n                  context.abrupt(\\\"return\\\", context.arg);\\n                }\\n\\n                state = GenStateExecuting;\\n                var record = tryCatch(innerFn, self, context);\\n\\n                if (record.type === \\\"normal\\\") {\\n                  state = context.done ? GenStateCompleted : GenStateSuspendedYield;\\n\\n                  if (record.arg === ContinueSentinel) {\\n                    continue;\\n                  }\\n\\n                  return {\\n                    value: record.arg,\\n                    done: context.done\\n                  };\\n                } else if (record.type === \\\"throw\\\") {\\n                  state = GenStateCompleted;\\n                  context.method = \\\"throw\\\";\\n                  context.arg = record.arg;\\n                }\\n              }\\n            };\\n          }\\n\\n          function maybeInvokeDelegate(delegate, context) {\\n            var method = delegate.iterator[context.method];\\n\\n            if (method === undefined) {\\n              context.delegate = null;\\n\\n              if (context.method === \\\"throw\\\") {\\n                if (delegate.iterator.return) {\\n                  context.method = \\\"return\\\";\\n                  context.arg = undefined;\\n                  maybeInvokeDelegate(delegate, context);\\n\\n                  if (context.method === \\\"throw\\\") {\\n                    return ContinueSentinel;\\n                  }\\n                }\\n\\n                context.method = \\\"throw\\\";\\n                context.arg = new TypeError(\\\"The iterator does not provide a 'throw' method\\\");\\n              }\\n\\n              return ContinueSentinel;\\n            }\\n\\n            var record = tryCatch(method, delegate.iterator, context.arg);\\n\\n            if (record.type === \\\"throw\\\") {\\n              context.method = \\\"throw\\\";\\n              context.arg = record.arg;\\n              context.delegate = null;\\n              return ContinueSentinel;\\n            }\\n\\n            var info = record.arg;\\n\\n            if (!info) {\\n              context.method = \\\"throw\\\";\\n              context.arg = new TypeError(\\\"iterator result is not an object\\\");\\n              context.delegate = null;\\n              return ContinueSentinel;\\n            }\\n\\n            if (info.done) {\\n              context[delegate.resultName] = info.value;\\n              context.next = delegate.nextLoc;\\n\\n              if (context.method !== \\\"return\\\") {\\n                context.method = \\\"next\\\";\\n                context.arg = undefined;\\n              }\\n            } else {\\n              return info;\\n            }\\n\\n            context.delegate = null;\\n            return ContinueSentinel;\\n          }\\n\\n          defineIteratorMethods(Gp);\\n          Gp[toStringTagSymbol] = \\\"Generator\\\";\\n\\n          Gp[iteratorSymbol] = function () {\\n            return this;\\n          };\\n\\n          Gp.toString = function () {\\n            return \\\"[object Generator]\\\";\\n          };\\n\\n          function pushTryEntry(locs) {\\n            var entry = {\\n              tryLoc: locs[0]\\n            };\\n\\n            if (1 in locs) {\\n              entry.catchLoc = locs[1];\\n            }\\n\\n            if (2 in locs) {\\n              entry.finallyLoc = locs[2];\\n              entry.afterLoc = locs[3];\\n            }\\n\\n            this.tryEntries.push(entry);\\n          }\\n\\n          function resetTryEntry(entry) {\\n            var record = entry.completion || {};\\n            record.type = \\\"normal\\\";\\n            delete record.arg;\\n            entry.completion = record;\\n          }\\n\\n          function Context(tryLocsList) {\\n            this.tryEntries = [{\\n              tryLoc: \\\"root\\\"\\n            }];\\n            tryLocsList.forEach(pushTryEntry, this);\\n            this.reset(true);\\n          }\\n\\n          runtime.keys = function (object) {\\n            var keys = [];\\n\\n            for (var key in object) {\\n              keys.push(key);\\n            }\\n\\n            keys.reverse();\\n            return function next() {\\n              while (keys.length) {\\n                var key = keys.pop();\\n\\n                if (key in object) {\\n                  next.value = key;\\n                  next.done = false;\\n                  return next;\\n                }\\n              }\\n\\n              next.done = true;\\n              return next;\\n            };\\n          };\\n\\n          function values(iterable) {\\n            if (iterable) {\\n              var iteratorMethod = iterable[iteratorSymbol];\\n\\n              if (iteratorMethod) {\\n                return iteratorMethod.call(iterable);\\n              }\\n\\n              if (typeof iterable.next === \\\"function\\\") {\\n                return iterable;\\n              }\\n\\n              if (!isNaN(iterable.length)) {\\n                var i = -1,\\n                    next = function next() {\\n                  while (++i < iterable.length) {\\n                    if (hasOwn.call(iterable, i)) {\\n                      next.value = iterable[i];\\n                      next.done = false;\\n                      return next;\\n                    }\\n                  }\\n\\n                  next.value = undefined;\\n                  next.done = true;\\n                  return next;\\n                };\\n\\n                return next.next = next;\\n              }\\n            }\\n\\n            return {\\n              next: doneResult\\n            };\\n          }\\n\\n          runtime.values = values;\\n\\n          function doneResult() {\\n            return {\\n              value: undefined,\\n              done: true\\n            };\\n          }\\n\\n          Context.prototype = {\\n            constructor: Context,\\n            reset: function reset(skipTempReset) {\\n              this.prev = 0;\\n              this.next = 0;\\n              this.sent = this._sent = undefined;\\n              this.done = false;\\n              this.delegate = null;\\n              this.method = \\\"next\\\";\\n              this.arg = undefined;\\n              this.tryEntries.forEach(resetTryEntry);\\n\\n              if (!skipTempReset) {\\n                for (var name in this) {\\n                  if (name.charAt(0) === \\\"t\\\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\\n                    this[name] = undefined;\\n                  }\\n                }\\n              }\\n            },\\n            stop: function stop() {\\n              this.done = true;\\n              var rootEntry = this.tryEntries[0];\\n              var rootRecord = rootEntry.completion;\\n\\n              if (rootRecord.type === \\\"throw\\\") {\\n                throw rootRecord.arg;\\n              }\\n\\n              return this.rval;\\n            },\\n            dispatchException: function dispatchException(exception) {\\n              if (this.done) {\\n                throw exception;\\n              }\\n\\n              var context = this;\\n\\n              function handle(loc, caught) {\\n                record.type = \\\"throw\\\";\\n                record.arg = exception;\\n                context.next = loc;\\n\\n                if (caught) {\\n                  context.method = \\\"next\\\";\\n                  context.arg = undefined;\\n                }\\n\\n                return !!caught;\\n              }\\n\\n              for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n                var entry = this.tryEntries[i];\\n                var record = entry.completion;\\n\\n                if (entry.tryLoc === \\\"root\\\") {\\n                  return handle(\\\"end\\\");\\n                }\\n\\n                if (entry.tryLoc <= this.prev) {\\n                  var hasCatch = hasOwn.call(entry, \\\"catchLoc\\\");\\n                  var hasFinally = hasOwn.call(entry, \\\"finallyLoc\\\");\\n\\n                  if (hasCatch && hasFinally) {\\n                    if (this.prev < entry.catchLoc) {\\n                      return handle(entry.catchLoc, true);\\n                    } else if (this.prev < entry.finallyLoc) {\\n                      return handle(entry.finallyLoc);\\n                    }\\n                  } else if (hasCatch) {\\n                    if (this.prev < entry.catchLoc) {\\n                      return handle(entry.catchLoc, true);\\n                    }\\n                  } else if (hasFinally) {\\n                    if (this.prev < entry.finallyLoc) {\\n                      return handle(entry.finallyLoc);\\n                    }\\n                  } else {\\n                    throw new Error(\\\"try statement without catch or finally\\\");\\n                  }\\n                }\\n              }\\n            },\\n            abrupt: function abrupt(type, arg) {\\n              for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n                var entry = this.tryEntries[i];\\n\\n                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \\\"finallyLoc\\\") && this.prev < entry.finallyLoc) {\\n                  var finallyEntry = entry;\\n                  break;\\n                }\\n              }\\n\\n              if (finallyEntry && (type === \\\"break\\\" || type === \\\"continue\\\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\\n                finallyEntry = null;\\n              }\\n\\n              var record = finallyEntry ? finallyEntry.completion : {};\\n              record.type = type;\\n              record.arg = arg;\\n\\n              if (finallyEntry) {\\n                this.method = \\\"next\\\";\\n                this.next = finallyEntry.finallyLoc;\\n                return ContinueSentinel;\\n              }\\n\\n              return this.complete(record);\\n            },\\n            complete: function complete(record, afterLoc) {\\n              if (record.type === \\\"throw\\\") {\\n                throw record.arg;\\n              }\\n\\n              if (record.type === \\\"break\\\" || record.type === \\\"continue\\\") {\\n                this.next = record.arg;\\n              } else if (record.type === \\\"return\\\") {\\n                this.rval = this.arg = record.arg;\\n                this.method = \\\"return\\\";\\n                this.next = \\\"end\\\";\\n              } else if (record.type === \\\"normal\\\" && afterLoc) {\\n                this.next = afterLoc;\\n              }\\n\\n              return ContinueSentinel;\\n            },\\n            finish: function finish(finallyLoc) {\\n              for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n                var entry = this.tryEntries[i];\\n\\n                if (entry.finallyLoc === finallyLoc) {\\n                  this.complete(entry.completion, entry.afterLoc);\\n                  resetTryEntry(entry);\\n                  return ContinueSentinel;\\n                }\\n              }\\n            },\\n            \\\"catch\\\": function _catch(tryLoc) {\\n              for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n                var entry = this.tryEntries[i];\\n\\n                if (entry.tryLoc === tryLoc) {\\n                  var record = entry.completion;\\n\\n                  if (record.type === \\\"throw\\\") {\\n                    var thrown = record.arg;\\n                    resetTryEntry(entry);\\n                  }\\n\\n                  return thrown;\\n                }\\n              }\\n\\n              throw new Error(\\\"illegal catch attempt\\\");\\n            },\\n            delegateYield: function delegateYield(iterable, resultName, nextLoc) {\\n              this.delegate = {\\n                iterator: values(iterable),\\n                resultName: resultName,\\n                nextLoc: nextLoc\\n              };\\n\\n              if (this.method === \\\"next\\\") {\\n                this.arg = undefined;\\n              }\\n\\n              return ContinueSentinel;\\n            }\\n          };\\n        }(function () {\\n          return this || (typeof self === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(self)) === \\\"object\\\" && self;\\n        }() || Function(\\\"return this\\\")());\\n        /* WEBPACK VAR INJECTION */\\n      }).call(this, __w_pdfjs_require__(5)(module));\\n      /***/\\n    },\\n    /* 5 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (module) {\\n        if (!module.webpackPolyfill) {\\n          module.deprecate = function () {};\\n\\n          module.paths = [];\\n          if (!module.children) module.children = [];\\n          Object.defineProperty(module, \\\"loaded\\\", {\\n            enumerable: true,\\n            get: function get() {\\n              return module.l;\\n            }\\n          });\\n          Object.defineProperty(module, \\\"id\\\", {\\n            enumerable: true,\\n            get: function get() {\\n              return module.i;\\n            }\\n          });\\n          module.webpackPolyfill = 1;\\n        }\\n\\n        return module;\\n      };\\n      /***/\\n\\n    },\\n    /* 6 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.toRomanNumerals = toRomanNumerals;\\n      exports.arrayByteLength = arrayByteLength;\\n      exports.arraysToBytes = arraysToBytes;\\n      exports.assert = assert;\\n      exports.bytesToString = bytesToString;\\n      exports.createPromiseCapability = createPromiseCapability;\\n      exports.deprecated = deprecated;\\n      exports.getInheritableProperty = getInheritableProperty;\\n      exports.getLookupTableFactory = getLookupTableFactory;\\n      exports.getVerbosityLevel = getVerbosityLevel;\\n      exports.info = info;\\n      exports.isArrayBuffer = isArrayBuffer;\\n      exports.isBool = isBool;\\n      exports.isEmptyObj = isEmptyObj;\\n      exports.isNum = isNum;\\n      exports.isString = isString;\\n      exports.isSpace = isSpace;\\n      exports.isSameOrigin = isSameOrigin;\\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\\n      exports.isLittleEndian = isLittleEndian;\\n      exports.isEvalSupported = isEvalSupported;\\n      exports.log2 = log2;\\n      exports.readInt8 = readInt8;\\n      exports.readUint16 = readUint16;\\n      exports.readUint32 = readUint32;\\n      exports.removeNullCharacters = removeNullCharacters;\\n      exports.setVerbosityLevel = setVerbosityLevel;\\n      exports.shadow = shadow;\\n      exports.string32 = string32;\\n      exports.stringToBytes = stringToBytes;\\n      exports.stringToPDFString = stringToPDFString;\\n      exports.stringToUTF8String = stringToUTF8String;\\n      exports.utf8StringToString = utf8StringToString;\\n      exports.warn = warn;\\n      exports.unreachable = unreachable;\\n      Object.defineProperty(exports, \\\"ReadableStream\\\", {\\n        enumerable: true,\\n        get: function get() {\\n          return _streams_polyfill.ReadableStream;\\n        }\\n      });\\n      Object.defineProperty(exports, \\\"URL\\\", {\\n        enumerable: true,\\n        get: function get() {\\n          return _url_polyfill.URL;\\n        }\\n      });\\n      exports.createObjectURL = exports.FormatError = exports.XRefParseException = exports.XRefEntryException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = void 0;\\n\\n      __w_pdfjs_require__(7);\\n\\n      var _streams_polyfill = __w_pdfjs_require__(147);\\n\\n      var _url_polyfill = __w_pdfjs_require__(149);\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\\n      var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\\n      var NativeImageDecoding = {\\n        NONE: 'none',\\n        DECODE: 'decode',\\n        DISPLAY: 'display'\\n      };\\n      exports.NativeImageDecoding = NativeImageDecoding;\\n      var PermissionFlag = {\\n        PRINT: 0x04,\\n        MODIFY_CONTENTS: 0x08,\\n        COPY: 0x10,\\n        MODIFY_ANNOTATIONS: 0x20,\\n        FILL_INTERACTIVE_FORMS: 0x100,\\n        COPY_FOR_ACCESSIBILITY: 0x200,\\n        ASSEMBLE: 0x400,\\n        PRINT_HIGH_QUALITY: 0x800\\n      };\\n      exports.PermissionFlag = PermissionFlag;\\n      var TextRenderingMode = {\\n        FILL: 0,\\n        STROKE: 1,\\n        FILL_STROKE: 2,\\n        INVISIBLE: 3,\\n        FILL_ADD_TO_PATH: 4,\\n        STROKE_ADD_TO_PATH: 5,\\n        FILL_STROKE_ADD_TO_PATH: 6,\\n        ADD_TO_PATH: 7,\\n        FILL_STROKE_MASK: 3,\\n        ADD_TO_PATH_FLAG: 4\\n      };\\n      exports.TextRenderingMode = TextRenderingMode;\\n      var ImageKind = {\\n        GRAYSCALE_1BPP: 1,\\n        RGB_24BPP: 2,\\n        RGBA_32BPP: 3\\n      };\\n      exports.ImageKind = ImageKind;\\n      var AnnotationType = {\\n        TEXT: 1,\\n        LINK: 2,\\n        FREETEXT: 3,\\n        LINE: 4,\\n        SQUARE: 5,\\n        CIRCLE: 6,\\n        POLYGON: 7,\\n        POLYLINE: 8,\\n        HIGHLIGHT: 9,\\n        UNDERLINE: 10,\\n        SQUIGGLY: 11,\\n        STRIKEOUT: 12,\\n        STAMP: 13,\\n        CARET: 14,\\n        INK: 15,\\n        POPUP: 16,\\n        FILEATTACHMENT: 17,\\n        SOUND: 18,\\n        MOVIE: 19,\\n        WIDGET: 20,\\n        SCREEN: 21,\\n        PRINTERMARK: 22,\\n        TRAPNET: 23,\\n        WATERMARK: 24,\\n        THREED: 25,\\n        REDACT: 26\\n      };\\n      exports.AnnotationType = AnnotationType;\\n      var AnnotationFlag = {\\n        INVISIBLE: 0x01,\\n        HIDDEN: 0x02,\\n        PRINT: 0x04,\\n        NOZOOM: 0x08,\\n        NOROTATE: 0x10,\\n        NOVIEW: 0x20,\\n        READONLY: 0x40,\\n        LOCKED: 0x80,\\n        TOGGLENOVIEW: 0x100,\\n        LOCKEDCONTENTS: 0x200\\n      };\\n      exports.AnnotationFlag = AnnotationFlag;\\n      var AnnotationFieldFlag = {\\n        READONLY: 0x0000001,\\n        REQUIRED: 0x0000002,\\n        NOEXPORT: 0x0000004,\\n        MULTILINE: 0x0001000,\\n        PASSWORD: 0x0002000,\\n        NOTOGGLETOOFF: 0x0004000,\\n        RADIO: 0x0008000,\\n        PUSHBUTTON: 0x0010000,\\n        COMBO: 0x0020000,\\n        EDIT: 0x0040000,\\n        SORT: 0x0080000,\\n        FILESELECT: 0x0100000,\\n        MULTISELECT: 0x0200000,\\n        DONOTSPELLCHECK: 0x0400000,\\n        DONOTSCROLL: 0x0800000,\\n        COMB: 0x1000000,\\n        RICHTEXT: 0x2000000,\\n        RADIOSINUNISON: 0x2000000,\\n        COMMITONSELCHANGE: 0x4000000\\n      };\\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\\n      var AnnotationBorderStyleType = {\\n        SOLID: 1,\\n        DASHED: 2,\\n        BEVELED: 3,\\n        INSET: 4,\\n        UNDERLINE: 5\\n      };\\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\\n      var StreamType = {\\n        UNKNOWN: 0,\\n        FLATE: 1,\\n        LZW: 2,\\n        DCT: 3,\\n        JPX: 4,\\n        JBIG: 5,\\n        A85: 6,\\n        AHX: 7,\\n        CCF: 8,\\n        RL: 9\\n      };\\n      exports.StreamType = StreamType;\\n      var FontType = {\\n        UNKNOWN: 0,\\n        TYPE1: 1,\\n        TYPE1C: 2,\\n        CIDFONTTYPE0: 3,\\n        CIDFONTTYPE0C: 4,\\n        TRUETYPE: 5,\\n        CIDFONTTYPE2: 6,\\n        TYPE3: 7,\\n        OPENTYPE: 8,\\n        TYPE0: 9,\\n        MMTYPE1: 10\\n      };\\n      exports.FontType = FontType;\\n      var VerbosityLevel = {\\n        ERRORS: 0,\\n        WARNINGS: 1,\\n        INFOS: 5\\n      };\\n      exports.VerbosityLevel = VerbosityLevel;\\n      var CMapCompressionType = {\\n        NONE: 0,\\n        BINARY: 1,\\n        STREAM: 2\\n      };\\n      exports.CMapCompressionType = CMapCompressionType;\\n      var OPS = {\\n        dependency: 1,\\n        setLineWidth: 2,\\n        setLineCap: 3,\\n        setLineJoin: 4,\\n        setMiterLimit: 5,\\n        setDash: 6,\\n        setRenderingIntent: 7,\\n        setFlatness: 8,\\n        setGState: 9,\\n        save: 10,\\n        restore: 11,\\n        transform: 12,\\n        moveTo: 13,\\n        lineTo: 14,\\n        curveTo: 15,\\n        curveTo2: 16,\\n        curveTo3: 17,\\n        closePath: 18,\\n        rectangle: 19,\\n        stroke: 20,\\n        closeStroke: 21,\\n        fill: 22,\\n        eoFill: 23,\\n        fillStroke: 24,\\n        eoFillStroke: 25,\\n        closeFillStroke: 26,\\n        closeEOFillStroke: 27,\\n        endPath: 28,\\n        clip: 29,\\n        eoClip: 30,\\n        beginText: 31,\\n        endText: 32,\\n        setCharSpacing: 33,\\n        setWordSpacing: 34,\\n        setHScale: 35,\\n        setLeading: 36,\\n        setFont: 37,\\n        setTextRenderingMode: 38,\\n        setTextRise: 39,\\n        moveText: 40,\\n        setLeadingMoveText: 41,\\n        setTextMatrix: 42,\\n        nextLine: 43,\\n        showText: 44,\\n        showSpacedText: 45,\\n        nextLineShowText: 46,\\n        nextLineSetSpacingShowText: 47,\\n        setCharWidth: 48,\\n        setCharWidthAndBounds: 49,\\n        setStrokeColorSpace: 50,\\n        setFillColorSpace: 51,\\n        setStrokeColor: 52,\\n        setStrokeColorN: 53,\\n        setFillColor: 54,\\n        setFillColorN: 55,\\n        setStrokeGray: 56,\\n        setFillGray: 57,\\n        setStrokeRGBColor: 58,\\n        setFillRGBColor: 59,\\n        setStrokeCMYKColor: 60,\\n        setFillCMYKColor: 61,\\n        shadingFill: 62,\\n        beginInlineImage: 63,\\n        beginImageData: 64,\\n        endInlineImage: 65,\\n        paintXObject: 66,\\n        markPoint: 67,\\n        markPointProps: 68,\\n        beginMarkedContent: 69,\\n        beginMarkedContentProps: 70,\\n        endMarkedContent: 71,\\n        beginCompat: 72,\\n        endCompat: 73,\\n        paintFormXObjectBegin: 74,\\n        paintFormXObjectEnd: 75,\\n        beginGroup: 76,\\n        endGroup: 77,\\n        beginAnnotations: 78,\\n        endAnnotations: 79,\\n        beginAnnotation: 80,\\n        endAnnotation: 81,\\n        paintJpegXObject: 82,\\n        paintImageMaskXObject: 83,\\n        paintImageMaskXObjectGroup: 84,\\n        paintImageXObject: 85,\\n        paintInlineImageXObject: 86,\\n        paintInlineImageXObjectGroup: 87,\\n        paintImageXObjectRepeat: 88,\\n        paintImageMaskXObjectRepeat: 89,\\n        paintSolidColorImageMask: 90,\\n        constructPath: 91\\n      };\\n      exports.OPS = OPS;\\n      var UNSUPPORTED_FEATURES = {\\n        unknown: 'unknown',\\n        forms: 'forms',\\n        javaScript: 'javaScript',\\n        smask: 'smask',\\n        shadingPattern: 'shadingPattern',\\n        font: 'font'\\n      };\\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\\n      var PasswordResponses = {\\n        NEED_PASSWORD: 1,\\n        INCORRECT_PASSWORD: 2\\n      };\\n      exports.PasswordResponses = PasswordResponses;\\n      var verbosity = VerbosityLevel.WARNINGS;\\n\\n      function setVerbosityLevel(level) {\\n        if (Number.isInteger(level)) {\\n          verbosity = level;\\n        }\\n      }\\n\\n      function getVerbosityLevel() {\\n        return verbosity;\\n      }\\n\\n      function info(msg) {\\n        if (verbosity >= VerbosityLevel.INFOS) {\\n          console.log('Info: ' + msg);\\n        }\\n      }\\n\\n      function warn(msg) {\\n        if (verbosity >= VerbosityLevel.WARNINGS) {\\n          console.log('Warning: ' + msg);\\n        }\\n      }\\n\\n      function deprecated(details) {\\n        console.log('Deprecated API usage: ' + details);\\n      }\\n\\n      function unreachable(msg) {\\n        throw new Error(msg);\\n      }\\n\\n      function assert(cond, msg) {\\n        if (!cond) {\\n          unreachable(msg);\\n        }\\n      }\\n\\n      function isSameOrigin(baseUrl, otherUrl) {\\n        try {\\n          var base = new _url_polyfill.URL(baseUrl);\\n\\n          if (!base.origin || base.origin === 'null') {\\n            return false;\\n          }\\n        } catch (e) {\\n          return false;\\n        }\\n\\n        var other = new _url_polyfill.URL(otherUrl, base);\\n        return base.origin === other.origin;\\n      }\\n\\n      function _isValidProtocol(url) {\\n        if (!url) {\\n          return false;\\n        }\\n\\n        switch (url.protocol) {\\n          case 'http:':\\n          case 'https:':\\n          case 'ftp:':\\n          case 'mailto:':\\n          case 'tel:':\\n            return true;\\n\\n          default:\\n            return false;\\n        }\\n      }\\n\\n      function createValidAbsoluteUrl(url, baseUrl) {\\n        if (!url) {\\n          return null;\\n        }\\n\\n        try {\\n          var absoluteUrl = baseUrl ? new _url_polyfill.URL(url, baseUrl) : new _url_polyfill.URL(url);\\n\\n          if (_isValidProtocol(absoluteUrl)) {\\n            return absoluteUrl;\\n          }\\n        } catch (ex) {}\\n\\n        return null;\\n      }\\n\\n      function shadow(obj, prop, value) {\\n        Object.defineProperty(obj, prop, {\\n          value: value,\\n          enumerable: true,\\n          configurable: true,\\n          writable: false\\n        });\\n        return value;\\n      }\\n\\n      function getLookupTableFactory(initializer) {\\n        var lookup;\\n        return function () {\\n          if (initializer) {\\n            lookup = Object.create(null);\\n            initializer(lookup);\\n            initializer = null;\\n          }\\n\\n          return lookup;\\n        };\\n      }\\n\\n      var PasswordException = function PasswordExceptionClosure() {\\n        function PasswordException(msg, code) {\\n          this.name = 'PasswordException';\\n          this.message = msg;\\n          this.code = code;\\n        }\\n\\n        PasswordException.prototype = new Error();\\n        PasswordException.constructor = PasswordException;\\n        return PasswordException;\\n      }();\\n\\n      exports.PasswordException = PasswordException;\\n\\n      var UnknownErrorException = function UnknownErrorExceptionClosure() {\\n        function UnknownErrorException(msg, details) {\\n          this.name = 'UnknownErrorException';\\n          this.message = msg;\\n          this.details = details;\\n        }\\n\\n        UnknownErrorException.prototype = new Error();\\n        UnknownErrorException.constructor = UnknownErrorException;\\n        return UnknownErrorException;\\n      }();\\n\\n      exports.UnknownErrorException = UnknownErrorException;\\n\\n      var InvalidPDFException = function InvalidPDFExceptionClosure() {\\n        function InvalidPDFException(msg) {\\n          this.name = 'InvalidPDFException';\\n          this.message = msg;\\n        }\\n\\n        InvalidPDFException.prototype = new Error();\\n        InvalidPDFException.constructor = InvalidPDFException;\\n        return InvalidPDFException;\\n      }();\\n\\n      exports.InvalidPDFException = InvalidPDFException;\\n\\n      var MissingPDFException = function MissingPDFExceptionClosure() {\\n        function MissingPDFException(msg) {\\n          this.name = 'MissingPDFException';\\n          this.message = msg;\\n        }\\n\\n        MissingPDFException.prototype = new Error();\\n        MissingPDFException.constructor = MissingPDFException;\\n        return MissingPDFException;\\n      }();\\n\\n      exports.MissingPDFException = MissingPDFException;\\n\\n      var UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\\n        function UnexpectedResponseException(msg, status) {\\n          this.name = 'UnexpectedResponseException';\\n          this.message = msg;\\n          this.status = status;\\n        }\\n\\n        UnexpectedResponseException.prototype = new Error();\\n        UnexpectedResponseException.constructor = UnexpectedResponseException;\\n        return UnexpectedResponseException;\\n      }();\\n\\n      exports.UnexpectedResponseException = UnexpectedResponseException;\\n\\n      var MissingDataException = function MissingDataExceptionClosure() {\\n        function MissingDataException(begin, end) {\\n          this.begin = begin;\\n          this.end = end;\\n          this.message = 'Missing data [' + begin + ', ' + end + ')';\\n        }\\n\\n        MissingDataException.prototype = new Error();\\n        MissingDataException.prototype.name = 'MissingDataException';\\n        MissingDataException.constructor = MissingDataException;\\n        return MissingDataException;\\n      }();\\n\\n      exports.MissingDataException = MissingDataException;\\n\\n      var XRefEntryException = function XRefEntryExceptionClosure() {\\n        function XRefEntryException(msg) {\\n          this.message = msg;\\n        }\\n\\n        XRefEntryException.prototype = new Error();\\n        XRefEntryException.prototype.name = 'XRefEntryException';\\n        XRefEntryException.constructor = XRefEntryException;\\n        return XRefEntryException;\\n      }();\\n\\n      exports.XRefEntryException = XRefEntryException;\\n\\n      var XRefParseException = function XRefParseExceptionClosure() {\\n        function XRefParseException(msg) {\\n          this.message = msg;\\n        }\\n\\n        XRefParseException.prototype = new Error();\\n        XRefParseException.prototype.name = 'XRefParseException';\\n        XRefParseException.constructor = XRefParseException;\\n        return XRefParseException;\\n      }();\\n\\n      exports.XRefParseException = XRefParseException;\\n\\n      var FormatError = function FormatErrorClosure() {\\n        function FormatError(msg) {\\n          this.message = msg;\\n        }\\n\\n        FormatError.prototype = new Error();\\n        FormatError.prototype.name = 'FormatError';\\n        FormatError.constructor = FormatError;\\n        return FormatError;\\n      }();\\n\\n      exports.FormatError = FormatError;\\n\\n      var AbortException = function AbortExceptionClosure() {\\n        function AbortException(msg) {\\n          this.name = 'AbortException';\\n          this.message = msg;\\n        }\\n\\n        AbortException.prototype = new Error();\\n        AbortException.constructor = AbortException;\\n        return AbortException;\\n      }();\\n\\n      exports.AbortException = AbortException;\\n      var NullCharactersRegExp = /\\\\x00/g;\\n\\n      function removeNullCharacters(str) {\\n        if (typeof str !== 'string') {\\n          warn('The argument for removeNullCharacters must be a string.');\\n          return str;\\n        }\\n\\n        return str.replace(NullCharactersRegExp, '');\\n      }\\n\\n      function bytesToString(bytes) {\\n        assert(bytes !== null && _typeof(bytes) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\\n        var length = bytes.length;\\n        var MAX_ARGUMENT_COUNT = 8192;\\n\\n        if (length < MAX_ARGUMENT_COUNT) {\\n          return String.fromCharCode.apply(null, bytes);\\n        }\\n\\n        var strBuf = [];\\n\\n        for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\\n          var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\\n          var chunk = bytes.subarray(i, chunkEnd);\\n          strBuf.push(String.fromCharCode.apply(null, chunk));\\n        }\\n\\n        return strBuf.join('');\\n      }\\n\\n      function stringToBytes(str) {\\n        assert(typeof str === 'string', 'Invalid argument for stringToBytes');\\n        var length = str.length;\\n        var bytes = new Uint8Array(length);\\n\\n        for (var i = 0; i < length; ++i) {\\n          bytes[i] = str.charCodeAt(i) & 0xFF;\\n        }\\n\\n        return bytes;\\n      }\\n\\n      function arrayByteLength(arr) {\\n        if (arr.length !== undefined) {\\n          return arr.length;\\n        }\\n\\n        assert(arr.byteLength !== undefined);\\n        return arr.byteLength;\\n      }\\n\\n      function arraysToBytes(arr) {\\n        if (arr.length === 1 && arr[0] instanceof Uint8Array) {\\n          return arr[0];\\n        }\\n\\n        var resultLength = 0;\\n        var i,\\n            ii = arr.length;\\n        var item, itemLength;\\n\\n        for (i = 0; i < ii; i++) {\\n          item = arr[i];\\n          itemLength = arrayByteLength(item);\\n          resultLength += itemLength;\\n        }\\n\\n        var pos = 0;\\n        var data = new Uint8Array(resultLength);\\n\\n        for (i = 0; i < ii; i++) {\\n          item = arr[i];\\n\\n          if (!(item instanceof Uint8Array)) {\\n            if (typeof item === 'string') {\\n              item = stringToBytes(item);\\n            } else {\\n              item = new Uint8Array(item);\\n            }\\n          }\\n\\n          itemLength = item.byteLength;\\n          data.set(item, pos);\\n          pos += itemLength;\\n        }\\n\\n        return data;\\n      }\\n\\n      function string32(value) {\\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\\n      }\\n\\n      function log2(x) {\\n        if (x <= 0) {\\n          return 0;\\n        }\\n\\n        return Math.ceil(Math.log2(x));\\n      }\\n\\n      function readInt8(data, start) {\\n        return data[start] << 24 >> 24;\\n      }\\n\\n      function readUint16(data, offset) {\\n        return data[offset] << 8 | data[offset + 1];\\n      }\\n\\n      function readUint32(data, offset) {\\n        return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\\n      }\\n\\n      function isLittleEndian() {\\n        var buffer8 = new Uint8Array(4);\\n        buffer8[0] = 1;\\n        var view32 = new Uint32Array(buffer8.buffer, 0, 1);\\n        return view32[0] === 1;\\n      }\\n\\n      function isEvalSupported() {\\n        try {\\n          new Function('');\\n          return true;\\n        } catch (e) {\\n          return false;\\n        }\\n      }\\n\\n      function getInheritableProperty(_ref) {\\n        var dict = _ref.dict,\\n            key = _ref.key,\\n            _ref$getArray = _ref.getArray,\\n            getArray = _ref$getArray === void 0 ? false : _ref$getArray,\\n            _ref$stopWhenFound = _ref.stopWhenFound,\\n            stopWhenFound = _ref$stopWhenFound === void 0 ? true : _ref$stopWhenFound;\\n        var LOOP_LIMIT = 100;\\n        var loopCount = 0;\\n        var values;\\n\\n        while (dict) {\\n          var value = getArray ? dict.getArray(key) : dict.get(key);\\n\\n          if (value !== undefined) {\\n            if (stopWhenFound) {\\n              return value;\\n            }\\n\\n            if (!values) {\\n              values = [];\\n            }\\n\\n            values.push(value);\\n          }\\n\\n          if (++loopCount > LOOP_LIMIT) {\\n            warn(\\\"getInheritableProperty: maximum loop count exceeded for \\\\\\\"\\\".concat(key, \\\"\\\\\\\"\\\"));\\n            break;\\n          }\\n\\n          dict = dict.get('Parent');\\n        }\\n\\n        return values;\\n      }\\n\\n      var Util = function UtilClosure() {\\n        function Util() {}\\n\\n        var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\\n\\n        Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\\n          rgbBuf[1] = r;\\n          rgbBuf[3] = g;\\n          rgbBuf[5] = b;\\n          return rgbBuf.join('');\\n        };\\n\\n        Util.transform = function Util_transform(m1, m2) {\\n          return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\\n        };\\n\\n        Util.applyTransform = function Util_applyTransform(p, m) {\\n          var xt = p[0] * m[0] + p[1] * m[2] + m[4];\\n          var yt = p[0] * m[1] + p[1] * m[3] + m[5];\\n          return [xt, yt];\\n        };\\n\\n        Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\\n          var d = m[0] * m[3] - m[1] * m[2];\\n          var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\\n          var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\\n          return [xt, yt];\\n        };\\n\\n        Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\\n          var p1 = Util.applyTransform(r, m);\\n          var p2 = Util.applyTransform(r.slice(2, 4), m);\\n          var p3 = Util.applyTransform([r[0], r[3]], m);\\n          var p4 = Util.applyTransform([r[2], r[1]], m);\\n          return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\\n        };\\n\\n        Util.inverseTransform = function Util_inverseTransform(m) {\\n          var d = m[0] * m[3] - m[1] * m[2];\\n          return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\\n        };\\n\\n        Util.apply3dTransform = function Util_apply3dTransform(m, v) {\\n          return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\\n        };\\n\\n        Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\\n          var transpose = [m[0], m[2], m[1], m[3]];\\n          var a = m[0] * transpose[0] + m[1] * transpose[2];\\n          var b = m[0] * transpose[1] + m[1] * transpose[3];\\n          var c = m[2] * transpose[0] + m[3] * transpose[2];\\n          var d = m[2] * transpose[1] + m[3] * transpose[3];\\n          var first = (a + d) / 2;\\n          var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\\n          var sx = first + second || 1;\\n          var sy = first - second || 1;\\n          return [Math.sqrt(sx), Math.sqrt(sy)];\\n        };\\n\\n        Util.normalizeRect = function Util_normalizeRect(rect) {\\n          var r = rect.slice(0);\\n\\n          if (rect[0] > rect[2]) {\\n            r[0] = rect[2];\\n            r[2] = rect[0];\\n          }\\n\\n          if (rect[1] > rect[3]) {\\n            r[1] = rect[3];\\n            r[3] = rect[1];\\n          }\\n\\n          return r;\\n        };\\n\\n        Util.intersect = function Util_intersect(rect1, rect2) {\\n          function compare(a, b) {\\n            return a - b;\\n          }\\n\\n          var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\\n              orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\\n              result = [];\\n          rect1 = Util.normalizeRect(rect1);\\n          rect2 = Util.normalizeRect(rect2);\\n\\n          if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\\n            result[0] = orderedX[1];\\n            result[2] = orderedX[2];\\n          } else {\\n            return false;\\n          }\\n\\n          if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\\n            result[1] = orderedY[1];\\n            result[3] = orderedY[2];\\n          } else {\\n            return false;\\n          }\\n\\n          return result;\\n        };\\n\\n        return Util;\\n      }();\\n\\n      exports.Util = Util;\\n      var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\\n\\n      function toRomanNumerals(number) {\\n        var lowerCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n        assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\\n        var pos,\\n            romanBuf = [];\\n\\n        while (number >= 1000) {\\n          number -= 1000;\\n          romanBuf.push('M');\\n        }\\n\\n        pos = number / 100 | 0;\\n        number %= 100;\\n        romanBuf.push(ROMAN_NUMBER_MAP[pos]);\\n        pos = number / 10 | 0;\\n        number %= 10;\\n        romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\\n        romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\\n        var romanStr = romanBuf.join('');\\n        return lowerCase ? romanStr.toLowerCase() : romanStr;\\n      }\\n\\n      var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\\n\\n      function stringToPDFString(str) {\\n        var i,\\n            n = str.length,\\n            strBuf = [];\\n\\n        if (str[0] === '\\\\xFE' && str[1] === '\\\\xFF') {\\n          for (i = 2; i < n; i += 2) {\\n            strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\\n          }\\n        } else {\\n          for (i = 0; i < n; ++i) {\\n            var code = PDFStringTranslateTable[str.charCodeAt(i)];\\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\\n          }\\n        }\\n\\n        return strBuf.join('');\\n      }\\n\\n      function stringToUTF8String(str) {\\n        return decodeURIComponent(escape(str));\\n      }\\n\\n      function utf8StringToString(str) {\\n        return unescape(encodeURIComponent(str));\\n      }\\n\\n      function isEmptyObj(obj) {\\n        for (var key in obj) {\\n          return false;\\n        }\\n\\n        return true;\\n      }\\n\\n      function isBool(v) {\\n        return typeof v === 'boolean';\\n      }\\n\\n      function isNum(v) {\\n        return typeof v === 'number';\\n      }\\n\\n      function isString(v) {\\n        return typeof v === 'string';\\n      }\\n\\n      function isArrayBuffer(v) {\\n        return _typeof(v) === 'object' && v !== null && v.byteLength !== undefined;\\n      }\\n\\n      function isSpace(ch) {\\n        return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\\n      }\\n\\n      function createPromiseCapability() {\\n        var capability = Object.create(null);\\n        var isSettled = false;\\n        Object.defineProperty(capability, 'settled', {\\n          get: function get() {\\n            return isSettled;\\n          }\\n        });\\n        capability.promise = new Promise(function (resolve, reject) {\\n          capability.resolve = function (data) {\\n            isSettled = true;\\n            resolve(data);\\n          };\\n\\n          capability.reject = function (reason) {\\n            isSettled = true;\\n            reject(reason);\\n          };\\n        });\\n        return capability;\\n      }\\n\\n      var createObjectURL = function createObjectURLClosure() {\\n        var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\\n        return function createObjectURL(data, contentType) {\\n          var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n\\n          if (!forceDataSchema && _url_polyfill.URL.createObjectURL) {\\n            var blob = new Blob([data], {\\n              type: contentType\\n            });\\n            return _url_polyfill.URL.createObjectURL(blob);\\n          }\\n\\n          var buffer = 'data:' + contentType + ';base64,';\\n\\n          for (var i = 0, ii = data.length; i < ii; i += 3) {\\n            var b1 = data[i] & 0xFF;\\n            var b2 = data[i + 1] & 0xFF;\\n            var b3 = data[i + 2] & 0xFF;\\n            var d1 = b1 >> 2,\\n                d2 = (b1 & 3) << 4 | b2 >> 4;\\n            var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\\n            var d4 = i + 2 < ii ? b3 & 0x3F : 64;\\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\\n          }\\n\\n          return buffer;\\n        };\\n      }();\\n\\n      exports.createObjectURL = createObjectURL;\\n      /***/\\n    },\\n    /* 7 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      var globalScope = __w_pdfjs_require__(8);\\n\\n      if (!globalScope._pdfjsCompatibilityChecked) {\\n        globalScope._pdfjsCompatibilityChecked = true;\\n\\n        var isNodeJS = __w_pdfjs_require__(9);\\n\\n        var hasDOM = (typeof window === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(window)) === 'object' && (typeof document === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(document)) === 'object';\\n\\n        (function checkNodeBtoa() {\\n          if (globalScope.btoa || !isNodeJS()) {\\n            return;\\n          }\\n\\n          globalScope.btoa = function (chars) {\\n            return Buffer.from(chars, 'binary').toString('base64');\\n          };\\n        })();\\n\\n        (function checkNodeAtob() {\\n          if (globalScope.atob || !isNodeJS()) {\\n            return;\\n          }\\n\\n          globalScope.atob = function (input) {\\n            return Buffer.from(input, 'base64').toString('binary');\\n          };\\n        })();\\n\\n        (function checkChildNodeRemove() {\\n          if (!hasDOM) {\\n            return;\\n          }\\n\\n          if (typeof Element.prototype.remove !== 'undefined') {\\n            return;\\n          }\\n\\n          Element.prototype.remove = function () {\\n            if (this.parentNode) {\\n              this.parentNode.removeChild(this);\\n            }\\n          };\\n        })();\\n\\n        (function checkDOMTokenListAddRemove() {\\n          if (!hasDOM || isNodeJS()) {\\n            return;\\n          }\\n\\n          var div = document.createElement('div');\\n          div.classList.add('testOne', 'testTwo');\\n\\n          if (div.classList.contains('testOne') === true && div.classList.contains('testTwo') === true) {\\n            return;\\n          }\\n\\n          var OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\\n          var OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\\n\\n          DOMTokenList.prototype.add = function () {\\n            for (var _len = arguments.length, tokens = new Array(_len), _key = 0; _key < _len; _key++) {\\n              tokens[_key] = arguments[_key];\\n            }\\n\\n            for (var _i = 0; _i < tokens.length; _i++) {\\n              var token = tokens[_i];\\n              OriginalDOMTokenListAdd.call(this, token);\\n            }\\n          };\\n\\n          DOMTokenList.prototype.remove = function () {\\n            for (var _len2 = arguments.length, tokens = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n              tokens[_key2] = arguments[_key2];\\n            }\\n\\n            for (var _i2 = 0; _i2 < tokens.length; _i2++) {\\n              var token = tokens[_i2];\\n              OriginalDOMTokenListRemove.call(this, token);\\n            }\\n          };\\n        })();\\n\\n        (function checkDOMTokenListToggle() {\\n          if (!hasDOM || isNodeJS()) {\\n            return;\\n          }\\n\\n          var div = document.createElement('div');\\n\\n          if (div.classList.toggle('test', 0) === false) {\\n            return;\\n          }\\n\\n          DOMTokenList.prototype.toggle = function (token) {\\n            var force = arguments.length > 1 ? !!arguments[1] : !this.contains(token);\\n            return this[force ? 'add' : 'remove'](token), force;\\n          };\\n        })();\\n\\n        (function checkStringStartsWith() {\\n          if (String.prototype.startsWith) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(10);\\n        })();\\n\\n        (function checkStringEndsWith() {\\n          if (String.prototype.endsWith) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(40);\\n        })();\\n\\n        (function checkStringIncludes() {\\n          if (String.prototype.includes) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(42);\\n        })();\\n\\n        (function checkArrayIncludes() {\\n          if (Array.prototype.includes) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(44);\\n        })();\\n\\n        (function checkArrayFrom() {\\n          if (Array.from) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(51);\\n        })();\\n\\n        (function checkObjectAssign() {\\n          if (Object.assign) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(74);\\n        })();\\n\\n        (function checkMathLog2() {\\n          if (Math.log2) {\\n            return;\\n          }\\n\\n          Math.log2 = __w_pdfjs_require__(79);\\n        })();\\n\\n        (function checkNumberIsNaN() {\\n          if (Number.isNaN) {\\n            return;\\n          }\\n\\n          Number.isNaN = __w_pdfjs_require__(81);\\n        })();\\n\\n        (function checkNumberIsInteger() {\\n          if (Number.isInteger) {\\n            return;\\n          }\\n\\n          Number.isInteger = __w_pdfjs_require__(83);\\n        })();\\n\\n        (function checkPromise() {\\n          if (globalScope.Promise && globalScope.Promise.prototype && globalScope.Promise.prototype.finally) {\\n            return;\\n          }\\n\\n          globalScope.Promise = __w_pdfjs_require__(86);\\n        })();\\n\\n        (function checkWeakMap() {\\n          if (globalScope.WeakMap) {\\n            return;\\n          }\\n\\n          globalScope.WeakMap = __w_pdfjs_require__(106);\\n        })();\\n\\n        (function checkWeakSet() {\\n          if (globalScope.WeakSet) {\\n            return;\\n          }\\n\\n          globalScope.WeakSet = __w_pdfjs_require__(123);\\n        })();\\n\\n        (function checkStringCodePointAt() {\\n          if (String.codePointAt) {\\n            return;\\n          }\\n\\n          String.codePointAt = __w_pdfjs_require__(127);\\n        })();\\n\\n        (function checkStringFromCodePoint() {\\n          if (String.fromCodePoint) {\\n            return;\\n          }\\n\\n          String.fromCodePoint = __w_pdfjs_require__(129);\\n        })();\\n\\n        (function checkSymbol() {\\n          if (globalScope.Symbol) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(131);\\n        })();\\n\\n        (function checkStringPadStart() {\\n          if (String.prototype.padStart) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(138);\\n        })();\\n\\n        (function checkStringPadEnd() {\\n          if (String.prototype.padEnd) {\\n            return;\\n          }\\n\\n          __w_pdfjs_require__(142);\\n        })();\\n\\n        (function checkObjectValues() {\\n          if (Object.values) {\\n            return;\\n          }\\n\\n          Object.values = __w_pdfjs_require__(144);\\n        })();\\n      }\\n      /***/\\n\\n    },\\n    /* 8 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\\n      /***/\\n    },\\n    /* 9 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      module.exports = function isNodeJS() {\\n        return (typeof process === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(process)) === 'object' && process + '' === '[object process]' && !process.versions['nw'];\\n      };\\n      /***/\\n\\n    },\\n    /* 10 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(11);\\n\\n      module.exports = __w_pdfjs_require__(14).String.startsWith;\\n      /***/\\n    },\\n    /* 11 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var toLength = __w_pdfjs_require__(30);\\n\\n      var context = __w_pdfjs_require__(32);\\n\\n      var STARTS_WITH = 'startsWith';\\n      var $startsWith = ''[STARTS_WITH];\\n      $export($export.P + $export.F * __w_pdfjs_require__(39)(STARTS_WITH), 'String', {\\n        startsWith: function startsWith(searchString) {\\n          var that = context(this, searchString, STARTS_WITH);\\n          var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\\n          var search = String(searchString);\\n          return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;\\n        }\\n      });\\n      /***/\\n    },\\n    /* 12 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var core = __w_pdfjs_require__(14);\\n\\n      var hide = __w_pdfjs_require__(15);\\n\\n      var redefine = __w_pdfjs_require__(25);\\n\\n      var ctx = __w_pdfjs_require__(28);\\n\\n      var PROTOTYPE = 'prototype';\\n\\n      var $export = function $export(type, name, source) {\\n        var IS_FORCED = type & $export.F;\\n        var IS_GLOBAL = type & $export.G;\\n        var IS_STATIC = type & $export.S;\\n        var IS_PROTO = type & $export.P;\\n        var IS_BIND = type & $export.B;\\n        var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\\n        var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\\n        var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\\n        var key, own, out, exp;\\n        if (IS_GLOBAL) source = name;\\n\\n        for (key in source) {\\n          own = !IS_FORCED && target && target[key] !== undefined;\\n          out = (own ? target : source)[key];\\n          exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\\n          if (target) redefine(target, key, out, type & $export.U);\\n          if (exports[key] != out) hide(exports, key, exp);\\n          if (IS_PROTO && expProto[key] != out) expProto[key] = out;\\n        }\\n      };\\n\\n      global.core = core;\\n      $export.F = 1;\\n      $export.G = 2;\\n      $export.S = 4;\\n      $export.P = 8;\\n      $export.B = 16;\\n      $export.W = 32;\\n      $export.U = 64;\\n      $export.R = 128;\\n      module.exports = $export;\\n      /***/\\n    },\\n    /* 13 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\\n      if (typeof __g == 'number') __g = global;\\n      /***/\\n    },\\n    /* 14 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var core = module.exports = {\\n        version: '2.6.2'\\n      };\\n      if (typeof __e == 'number') __e = core;\\n      /***/\\n    },\\n    /* 15 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var dP = __w_pdfjs_require__(16);\\n\\n      var createDesc = __w_pdfjs_require__(24);\\n\\n      module.exports = __w_pdfjs_require__(20) ? function (object, key, value) {\\n        return dP.f(object, key, createDesc(1, value));\\n      } : function (object, key, value) {\\n        object[key] = value;\\n        return object;\\n      };\\n      /***/\\n    },\\n    /* 16 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var IE8_DOM_DEFINE = __w_pdfjs_require__(19);\\n\\n      var toPrimitive = __w_pdfjs_require__(23);\\n\\n      var dP = Object.defineProperty;\\n      exports.f = __w_pdfjs_require__(20) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\\n        anObject(O);\\n        P = toPrimitive(P, true);\\n        anObject(Attributes);\\n        if (IE8_DOM_DEFINE) try {\\n          return dP(O, P, Attributes);\\n        } catch (e) {}\\n        if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\\n        if ('value' in Attributes) O[P] = Attributes.value;\\n        return O;\\n      };\\n      /***/\\n    },\\n    /* 17 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      module.exports = function (it) {\\n        if (!isObject(it)) throw TypeError(it + ' is not an object!');\\n        return it;\\n      };\\n      /***/\\n\\n    },\\n    /* 18 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      module.exports = function (it) {\\n        return _typeof(it) === 'object' ? it !== null : typeof it === 'function';\\n      };\\n      /***/\\n\\n    },\\n    /* 19 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = !__w_pdfjs_require__(20) && !__w_pdfjs_require__(21)(function () {\\n        return Object.defineProperty(__w_pdfjs_require__(22)('div'), 'a', {\\n          get: function get() {\\n            return 7;\\n          }\\n        }).a != 7;\\n      });\\n      /***/\\n    },\\n    /* 20 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = !__w_pdfjs_require__(21)(function () {\\n        return Object.defineProperty({}, 'a', {\\n          get: function get() {\\n            return 7;\\n          }\\n        }).a != 7;\\n      });\\n      /***/\\n    },\\n    /* 21 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (exec) {\\n        try {\\n          return !!exec();\\n        } catch (e) {\\n          return true;\\n        }\\n      };\\n      /***/\\n\\n    },\\n    /* 22 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var document = __w_pdfjs_require__(13).document;\\n\\n      var is = isObject(document) && isObject(document.createElement);\\n\\n      module.exports = function (it) {\\n        return is ? document.createElement(it) : {};\\n      };\\n      /***/\\n\\n    },\\n    /* 23 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      module.exports = function (it, S) {\\n        if (!isObject(it)) return it;\\n        var fn, val;\\n        if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\\n        if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\\n        if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\\n        throw TypeError(\\\"Can't convert object to primitive value\\\");\\n      };\\n      /***/\\n\\n    },\\n    /* 24 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (bitmap, value) {\\n        return {\\n          enumerable: !(bitmap & 1),\\n          configurable: !(bitmap & 2),\\n          writable: !(bitmap & 4),\\n          value: value\\n        };\\n      };\\n      /***/\\n\\n    },\\n    /* 25 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var hide = __w_pdfjs_require__(15);\\n\\n      var has = __w_pdfjs_require__(26);\\n\\n      var SRC = __w_pdfjs_require__(27)('src');\\n\\n      var TO_STRING = 'toString';\\n      var $toString = Function[TO_STRING];\\n      var TPL = ('' + $toString).split(TO_STRING);\\n\\n      __w_pdfjs_require__(14).inspectSource = function (it) {\\n        return $toString.call(it);\\n      };\\n\\n      (module.exports = function (O, key, val, safe) {\\n        var isFunction = typeof val == 'function';\\n        if (isFunction) has(val, 'name') || hide(val, 'name', key);\\n        if (O[key] === val) return;\\n        if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\\n\\n        if (O === global) {\\n          O[key] = val;\\n        } else if (!safe) {\\n          delete O[key];\\n          hide(O, key, val);\\n        } else if (O[key]) {\\n          O[key] = val;\\n        } else {\\n          hide(O, key, val);\\n        }\\n      })(Function.prototype, TO_STRING, function toString() {\\n        return typeof this == 'function' && this[SRC] || $toString.call(this);\\n      });\\n      /***/\\n    },\\n    /* 26 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var hasOwnProperty = {}.hasOwnProperty;\\n\\n      module.exports = function (it, key) {\\n        return hasOwnProperty.call(it, key);\\n      };\\n      /***/\\n\\n    },\\n    /* 27 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var id = 0;\\n      var px = Math.random();\\n\\n      module.exports = function (key) {\\n        return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\\n      };\\n      /***/\\n\\n    },\\n    /* 28 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var aFunction = __w_pdfjs_require__(29);\\n\\n      module.exports = function (fn, that, length) {\\n        aFunction(fn);\\n        if (that === undefined) return fn;\\n\\n        switch (length) {\\n          case 1:\\n            return function (a) {\\n              return fn.call(that, a);\\n            };\\n\\n          case 2:\\n            return function (a, b) {\\n              return fn.call(that, a, b);\\n            };\\n\\n          case 3:\\n            return function (a, b, c) {\\n              return fn.call(that, a, b, c);\\n            };\\n        }\\n\\n        return function () {\\n          return fn.apply(that, arguments);\\n        };\\n      };\\n      /***/\\n\\n    },\\n    /* 29 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (it) {\\n        if (typeof it != 'function') throw TypeError(it + ' is not a function!');\\n        return it;\\n      };\\n      /***/\\n\\n    },\\n    /* 30 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var toInteger = __w_pdfjs_require__(31);\\n\\n      var min = Math.min;\\n\\n      module.exports = function (it) {\\n        return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\\n      };\\n      /***/\\n\\n    },\\n    /* 31 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var ceil = Math.ceil;\\n      var floor = Math.floor;\\n\\n      module.exports = function (it) {\\n        return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\\n      };\\n      /***/\\n\\n    },\\n    /* 32 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isRegExp = __w_pdfjs_require__(33);\\n\\n      var defined = __w_pdfjs_require__(38);\\n\\n      module.exports = function (that, searchString, NAME) {\\n        if (isRegExp(searchString)) throw TypeError('String#' + NAME + \\\" doesn't accept regex!\\\");\\n        return String(defined(that));\\n      };\\n      /***/\\n\\n    },\\n    /* 33 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var cof = __w_pdfjs_require__(34);\\n\\n      var MATCH = __w_pdfjs_require__(35)('match');\\n\\n      module.exports = function (it) {\\n        var isRegExp;\\n        return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\\n      };\\n      /***/\\n\\n    },\\n    /* 34 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var toString = {}.toString;\\n\\n      module.exports = function (it) {\\n        return toString.call(it).slice(8, -1);\\n      };\\n      /***/\\n\\n    },\\n    /* 35 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var store = __w_pdfjs_require__(36)('wks');\\n\\n      var uid = __w_pdfjs_require__(27);\\n\\n      var _Symbol = __w_pdfjs_require__(13).Symbol;\\n\\n      var USE_SYMBOL = typeof _Symbol == 'function';\\n\\n      var $exports = module.exports = function (name) {\\n        return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\\n      };\\n\\n      $exports.store = store;\\n      /***/\\n    },\\n    /* 36 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var core = __w_pdfjs_require__(14);\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var SHARED = '__core-js_shared__';\\n      var store = global[SHARED] || (global[SHARED] = {});\\n      (module.exports = function (key, value) {\\n        return store[key] || (store[key] = value !== undefined ? value : {});\\n      })('versions', []).push({\\n        version: core.version,\\n        mode: __w_pdfjs_require__(37) ? 'pure' : 'global',\\n        copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\\n      });\\n      /***/\\n    },\\n    /* 37 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = false;\\n      /***/\\n    },\\n    /* 38 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (it) {\\n        if (it == undefined) throw TypeError(\\\"Can't call method on  \\\" + it);\\n        return it;\\n      };\\n      /***/\\n\\n    },\\n    /* 39 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var MATCH = __w_pdfjs_require__(35)('match');\\n\\n      module.exports = function (KEY) {\\n        var re = /./;\\n\\n        try {\\n          '/./'[KEY](re);\\n        } catch (e) {\\n          try {\\n            re[MATCH] = false;\\n            return !'/./'[KEY](re);\\n          } catch (f) {}\\n        }\\n\\n        return true;\\n      };\\n      /***/\\n\\n    },\\n    /* 40 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(41);\\n\\n      module.exports = __w_pdfjs_require__(14).String.endsWith;\\n      /***/\\n    },\\n    /* 41 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var toLength = __w_pdfjs_require__(30);\\n\\n      var context = __w_pdfjs_require__(32);\\n\\n      var ENDS_WITH = 'endsWith';\\n      var $endsWith = ''[ENDS_WITH];\\n      $export($export.P + $export.F * __w_pdfjs_require__(39)(ENDS_WITH), 'String', {\\n        endsWith: function endsWith(searchString) {\\n          var that = context(this, searchString, ENDS_WITH);\\n          var endPosition = arguments.length > 1 ? arguments[1] : undefined;\\n          var len = toLength(that.length);\\n          var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\\n          var search = String(searchString);\\n          return $endsWith ? $endsWith.call(that, search, end) : that.slice(end - search.length, end) === search;\\n        }\\n      });\\n      /***/\\n    },\\n    /* 42 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(43);\\n\\n      module.exports = __w_pdfjs_require__(14).String.includes;\\n      /***/\\n    },\\n    /* 43 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var context = __w_pdfjs_require__(32);\\n\\n      var INCLUDES = 'includes';\\n      $export($export.P + $export.F * __w_pdfjs_require__(39)(INCLUDES), 'String', {\\n        includes: function includes(searchString) {\\n          return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\\n        }\\n      });\\n      /***/\\n    },\\n    /* 44 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(45);\\n\\n      module.exports = __w_pdfjs_require__(14).Array.includes;\\n      /***/\\n    },\\n    /* 45 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var $includes = __w_pdfjs_require__(46)(true);\\n\\n      $export($export.P, 'Array', {\\n        includes: function includes(el) {\\n          return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\\n        }\\n      });\\n\\n      __w_pdfjs_require__(50)('includes');\\n      /***/\\n\\n    },\\n    /* 46 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var toIObject = __w_pdfjs_require__(47);\\n\\n      var toLength = __w_pdfjs_require__(30);\\n\\n      var toAbsoluteIndex = __w_pdfjs_require__(49);\\n\\n      module.exports = function (IS_INCLUDES) {\\n        return function ($this, el, fromIndex) {\\n          var O = toIObject($this);\\n          var length = toLength(O.length);\\n          var index = toAbsoluteIndex(fromIndex, length);\\n          var value;\\n          if (IS_INCLUDES && el != el) while (length > index) {\\n            value = O[index++];\\n            if (value != value) return true;\\n          } else for (; length > index; index++) {\\n            if (IS_INCLUDES || index in O) {\\n              if (O[index] === el) return IS_INCLUDES || index || 0;\\n            }\\n          }\\n          return !IS_INCLUDES && -1;\\n        };\\n      };\\n      /***/\\n\\n    },\\n    /* 47 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var IObject = __w_pdfjs_require__(48);\\n\\n      var defined = __w_pdfjs_require__(38);\\n\\n      module.exports = function (it) {\\n        return IObject(defined(it));\\n      };\\n      /***/\\n\\n    },\\n    /* 48 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var cof = __w_pdfjs_require__(34);\\n\\n      module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\\n        return cof(it) == 'String' ? it.split('') : Object(it);\\n      };\\n      /***/\\n    },\\n    /* 49 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var toInteger = __w_pdfjs_require__(31);\\n\\n      var max = Math.max;\\n      var min = Math.min;\\n\\n      module.exports = function (index, length) {\\n        index = toInteger(index);\\n        return index < 0 ? max(index + length, 0) : min(index, length);\\n      };\\n      /***/\\n\\n    },\\n    /* 50 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var UNSCOPABLES = __w_pdfjs_require__(35)('unscopables');\\n\\n      var ArrayProto = Array.prototype;\\n      if (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(15)(ArrayProto, UNSCOPABLES, {});\\n\\n      module.exports = function (key) {\\n        ArrayProto[UNSCOPABLES][key] = true;\\n      };\\n      /***/\\n\\n    },\\n    /* 51 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(52);\\n\\n      __w_pdfjs_require__(67);\\n\\n      module.exports = __w_pdfjs_require__(14).Array.from;\\n      /***/\\n    },\\n    /* 52 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $at = __w_pdfjs_require__(53)(true);\\n\\n      __w_pdfjs_require__(54)(String, 'String', function (iterated) {\\n        this._t = String(iterated);\\n        this._i = 0;\\n      }, function () {\\n        var O = this._t;\\n        var index = this._i;\\n        var point;\\n        if (index >= O.length) return {\\n          value: undefined,\\n          done: true\\n        };\\n        point = $at(O, index);\\n        this._i += point.length;\\n        return {\\n          value: point,\\n          done: false\\n        };\\n      });\\n      /***/\\n\\n    },\\n    /* 53 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var toInteger = __w_pdfjs_require__(31);\\n\\n      var defined = __w_pdfjs_require__(38);\\n\\n      module.exports = function (TO_STRING) {\\n        return function (that, pos) {\\n          var s = String(defined(that));\\n          var i = toInteger(pos);\\n          var l = s.length;\\n          var a, b;\\n          if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\\n          a = s.charCodeAt(i);\\n          return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\\n        };\\n      };\\n      /***/\\n\\n    },\\n    /* 54 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var LIBRARY = __w_pdfjs_require__(37);\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var redefine = __w_pdfjs_require__(25);\\n\\n      var hide = __w_pdfjs_require__(15);\\n\\n      var Iterators = __w_pdfjs_require__(55);\\n\\n      var $iterCreate = __w_pdfjs_require__(56);\\n\\n      var setToStringTag = __w_pdfjs_require__(64);\\n\\n      var getPrototypeOf = __w_pdfjs_require__(65);\\n\\n      var ITERATOR = __w_pdfjs_require__(35)('iterator');\\n\\n      var BUGGY = !([].keys && 'next' in [].keys());\\n      var FF_ITERATOR = '@@iterator';\\n      var KEYS = 'keys';\\n      var VALUES = 'values';\\n\\n      var returnThis = function returnThis() {\\n        return this;\\n      };\\n\\n      module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\\n        $iterCreate(Constructor, NAME, next);\\n\\n        var getMethod = function getMethod(kind) {\\n          if (!BUGGY && kind in proto) return proto[kind];\\n\\n          switch (kind) {\\n            case KEYS:\\n              return function keys() {\\n                return new Constructor(this, kind);\\n              };\\n\\n            case VALUES:\\n              return function values() {\\n                return new Constructor(this, kind);\\n              };\\n          }\\n\\n          return function entries() {\\n            return new Constructor(this, kind);\\n          };\\n        };\\n\\n        var TAG = NAME + ' Iterator';\\n        var DEF_VALUES = DEFAULT == VALUES;\\n        var VALUES_BUG = false;\\n        var proto = Base.prototype;\\n        var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\\n        var $default = $native || getMethod(DEFAULT);\\n        var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\\n        var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\\n        var methods, key, IteratorPrototype;\\n\\n        if ($anyNative) {\\n          IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\\n\\n          if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\\n            setToStringTag(IteratorPrototype, TAG, true);\\n            if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\\n          }\\n        }\\n\\n        if (DEF_VALUES && $native && $native.name !== VALUES) {\\n          VALUES_BUG = true;\\n\\n          $default = function values() {\\n            return $native.call(this);\\n          };\\n        }\\n\\n        if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\\n          hide(proto, ITERATOR, $default);\\n        }\\n\\n        Iterators[NAME] = $default;\\n        Iterators[TAG] = returnThis;\\n\\n        if (DEFAULT) {\\n          methods = {\\n            values: DEF_VALUES ? $default : getMethod(VALUES),\\n            keys: IS_SET ? $default : getMethod(KEYS),\\n            entries: $entries\\n          };\\n          if (FORCED) for (key in methods) {\\n            if (!(key in proto)) redefine(proto, key, methods[key]);\\n          } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\\n        }\\n\\n        return methods;\\n      };\\n      /***/\\n\\n    },\\n    /* 55 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = {};\\n      /***/\\n    },\\n    /* 56 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var create = __w_pdfjs_require__(57);\\n\\n      var descriptor = __w_pdfjs_require__(24);\\n\\n      var setToStringTag = __w_pdfjs_require__(64);\\n\\n      var IteratorPrototype = {};\\n\\n      __w_pdfjs_require__(15)(IteratorPrototype, __w_pdfjs_require__(35)('iterator'), function () {\\n        return this;\\n      });\\n\\n      module.exports = function (Constructor, NAME, next) {\\n        Constructor.prototype = create(IteratorPrototype, {\\n          next: descriptor(1, next)\\n        });\\n        setToStringTag(Constructor, NAME + ' Iterator');\\n      };\\n      /***/\\n\\n    },\\n    /* 57 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var dPs = __w_pdfjs_require__(58);\\n\\n      var enumBugKeys = __w_pdfjs_require__(62);\\n\\n      var IE_PROTO = __w_pdfjs_require__(61)('IE_PROTO');\\n\\n      var Empty = function Empty() {};\\n\\n      var PROTOTYPE = 'prototype';\\n\\n      var _createDict = function createDict() {\\n        var iframe = __w_pdfjs_require__(22)('iframe');\\n\\n        var i = enumBugKeys.length;\\n        var lt = '<';\\n        var gt = '>';\\n        var iframeDocument;\\n        iframe.style.display = 'none';\\n\\n        __w_pdfjs_require__(63).appendChild(iframe);\\n\\n        iframe.src = 'javascript:';\\n        iframeDocument = iframe.contentWindow.document;\\n        iframeDocument.open();\\n        iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\\n        iframeDocument.close();\\n        _createDict = iframeDocument.F;\\n\\n        while (i--) {\\n          delete _createDict[PROTOTYPE][enumBugKeys[i]];\\n        }\\n\\n        return _createDict();\\n      };\\n\\n      module.exports = Object.create || function create(O, Properties) {\\n        var result;\\n\\n        if (O !== null) {\\n          Empty[PROTOTYPE] = anObject(O);\\n          result = new Empty();\\n          Empty[PROTOTYPE] = null;\\n          result[IE_PROTO] = O;\\n        } else result = _createDict();\\n\\n        return Properties === undefined ? result : dPs(result, Properties);\\n      };\\n      /***/\\n\\n    },\\n    /* 58 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var dP = __w_pdfjs_require__(16);\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var getKeys = __w_pdfjs_require__(59);\\n\\n      module.exports = __w_pdfjs_require__(20) ? Object.defineProperties : function defineProperties(O, Properties) {\\n        anObject(O);\\n        var keys = getKeys(Properties);\\n        var length = keys.length;\\n        var i = 0;\\n        var P;\\n\\n        while (length > i) {\\n          dP.f(O, P = keys[i++], Properties[P]);\\n        }\\n\\n        return O;\\n      };\\n      /***/\\n    },\\n    /* 59 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $keys = __w_pdfjs_require__(60);\\n\\n      var enumBugKeys = __w_pdfjs_require__(62);\\n\\n      module.exports = Object.keys || function keys(O) {\\n        return $keys(O, enumBugKeys);\\n      };\\n      /***/\\n\\n    },\\n    /* 60 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var has = __w_pdfjs_require__(26);\\n\\n      var toIObject = __w_pdfjs_require__(47);\\n\\n      var arrayIndexOf = __w_pdfjs_require__(46)(false);\\n\\n      var IE_PROTO = __w_pdfjs_require__(61)('IE_PROTO');\\n\\n      module.exports = function (object, names) {\\n        var O = toIObject(object);\\n        var i = 0;\\n        var result = [];\\n        var key;\\n\\n        for (key in O) {\\n          if (key != IE_PROTO) has(O, key) && result.push(key);\\n        }\\n\\n        while (names.length > i) {\\n          if (has(O, key = names[i++])) {\\n            ~arrayIndexOf(result, key) || result.push(key);\\n          }\\n        }\\n\\n        return result;\\n      };\\n      /***/\\n\\n    },\\n    /* 61 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var shared = __w_pdfjs_require__(36)('keys');\\n\\n      var uid = __w_pdfjs_require__(27);\\n\\n      module.exports = function (key) {\\n        return shared[key] || (shared[key] = uid(key));\\n      };\\n      /***/\\n\\n    },\\n    /* 62 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\\n      /***/\\n    },\\n    /* 63 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var document = __w_pdfjs_require__(13).document;\\n\\n      module.exports = document && document.documentElement;\\n      /***/\\n    },\\n    /* 64 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var def = __w_pdfjs_require__(16).f;\\n\\n      var has = __w_pdfjs_require__(26);\\n\\n      var TAG = __w_pdfjs_require__(35)('toStringTag');\\n\\n      module.exports = function (it, tag, stat) {\\n        if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\\n          configurable: true,\\n          value: tag\\n        });\\n      };\\n      /***/\\n\\n    },\\n    /* 65 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var has = __w_pdfjs_require__(26);\\n\\n      var toObject = __w_pdfjs_require__(66);\\n\\n      var IE_PROTO = __w_pdfjs_require__(61)('IE_PROTO');\\n\\n      var ObjectProto = Object.prototype;\\n\\n      module.exports = Object.getPrototypeOf || function (O) {\\n        O = toObject(O);\\n        if (has(O, IE_PROTO)) return O[IE_PROTO];\\n\\n        if (typeof O.constructor == 'function' && O instanceof O.constructor) {\\n          return O.constructor.prototype;\\n        }\\n\\n        return O instanceof Object ? ObjectProto : null;\\n      };\\n      /***/\\n\\n    },\\n    /* 66 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var defined = __w_pdfjs_require__(38);\\n\\n      module.exports = function (it) {\\n        return Object(defined(it));\\n      };\\n      /***/\\n\\n    },\\n    /* 67 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var ctx = __w_pdfjs_require__(28);\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var toObject = __w_pdfjs_require__(66);\\n\\n      var call = __w_pdfjs_require__(68);\\n\\n      var isArrayIter = __w_pdfjs_require__(69);\\n\\n      var toLength = __w_pdfjs_require__(30);\\n\\n      var createProperty = __w_pdfjs_require__(70);\\n\\n      var getIterFn = __w_pdfjs_require__(71);\\n\\n      $export($export.S + $export.F * !__w_pdfjs_require__(73)(function (iter) {\\n        Array.from(iter);\\n      }), 'Array', {\\n        from: function from(arrayLike) {\\n          var O = toObject(arrayLike);\\n          var C = typeof this == 'function' ? this : Array;\\n          var aLen = arguments.length;\\n          var mapfn = aLen > 1 ? arguments[1] : undefined;\\n          var mapping = mapfn !== undefined;\\n          var index = 0;\\n          var iterFn = getIterFn(O);\\n          var length, result, step, iterator;\\n          if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\\n\\n          if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\\n            for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\\n              createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\\n            }\\n          } else {\\n            length = toLength(O.length);\\n\\n            for (result = new C(length); length > index; index++) {\\n              createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\\n            }\\n          }\\n\\n          result.length = index;\\n          return result;\\n        }\\n      });\\n      /***/\\n    },\\n    /* 68 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      module.exports = function (iterator, fn, value, entries) {\\n        try {\\n          return entries ? fn(anObject(value)[0], value[1]) : fn(value);\\n        } catch (e) {\\n          var ret = iterator['return'];\\n          if (ret !== undefined) anObject(ret.call(iterator));\\n          throw e;\\n        }\\n      };\\n      /***/\\n\\n    },\\n    /* 69 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var Iterators = __w_pdfjs_require__(55);\\n\\n      var ITERATOR = __w_pdfjs_require__(35)('iterator');\\n\\n      var ArrayProto = Array.prototype;\\n\\n      module.exports = function (it) {\\n        return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\\n      };\\n      /***/\\n\\n    },\\n    /* 70 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $defineProperty = __w_pdfjs_require__(16);\\n\\n      var createDesc = __w_pdfjs_require__(24);\\n\\n      module.exports = function (object, index, value) {\\n        if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;\\n      };\\n      /***/\\n\\n    },\\n    /* 71 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var classof = __w_pdfjs_require__(72);\\n\\n      var ITERATOR = __w_pdfjs_require__(35)('iterator');\\n\\n      var Iterators = __w_pdfjs_require__(55);\\n\\n      module.exports = __w_pdfjs_require__(14).getIteratorMethod = function (it) {\\n        if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\\n      };\\n      /***/\\n\\n    },\\n    /* 72 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var cof = __w_pdfjs_require__(34);\\n\\n      var TAG = __w_pdfjs_require__(35)('toStringTag');\\n\\n      var ARG = cof(function () {\\n        return arguments;\\n      }()) == 'Arguments';\\n\\n      var tryGet = function tryGet(it, key) {\\n        try {\\n          return it[key];\\n        } catch (e) {}\\n      };\\n\\n      module.exports = function (it) {\\n        var O, T, B;\\n        return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\\n      };\\n      /***/\\n\\n    },\\n    /* 73 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var ITERATOR = __w_pdfjs_require__(35)('iterator');\\n\\n      var SAFE_CLOSING = false;\\n\\n      try {\\n        var riter = [7][ITERATOR]();\\n\\n        riter['return'] = function () {\\n          SAFE_CLOSING = true;\\n        };\\n\\n        Array.from(riter, function () {\\n          throw 2;\\n        });\\n      } catch (e) {}\\n\\n      module.exports = function (exec, skipClosing) {\\n        if (!skipClosing && !SAFE_CLOSING) return false;\\n        var safe = false;\\n\\n        try {\\n          var arr = [7];\\n          var iter = arr[ITERATOR]();\\n\\n          iter.next = function () {\\n            return {\\n              done: safe = true\\n            };\\n          };\\n\\n          arr[ITERATOR] = function () {\\n            return iter;\\n          };\\n\\n          exec(arr);\\n        } catch (e) {}\\n\\n        return safe;\\n      };\\n      /***/\\n\\n    },\\n    /* 74 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(75);\\n\\n      module.exports = __w_pdfjs_require__(14).Object.assign;\\n      /***/\\n    },\\n    /* 75 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      $export($export.S + $export.F, 'Object', {\\n        assign: __w_pdfjs_require__(76)\\n      });\\n      /***/\\n    },\\n    /* 76 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var getKeys = __w_pdfjs_require__(59);\\n\\n      var gOPS = __w_pdfjs_require__(77);\\n\\n      var pIE = __w_pdfjs_require__(78);\\n\\n      var toObject = __w_pdfjs_require__(66);\\n\\n      var IObject = __w_pdfjs_require__(48);\\n\\n      var $assign = Object.assign;\\n      module.exports = !$assign || __w_pdfjs_require__(21)(function () {\\n        var A = {};\\n        var B = {};\\n        var S = Symbol();\\n        var K = 'abcdefghijklmnopqrst';\\n        A[S] = 7;\\n        K.split('').forEach(function (k) {\\n          B[k] = k;\\n        });\\n        return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\\n      }) ? function assign(target, source) {\\n        var T = toObject(target);\\n        var aLen = arguments.length;\\n        var index = 1;\\n        var getSymbols = gOPS.f;\\n        var isEnum = pIE.f;\\n\\n        while (aLen > index) {\\n          var S = IObject(arguments[index++]);\\n          var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\\n          var length = keys.length;\\n          var j = 0;\\n          var key;\\n\\n          while (length > j) {\\n            if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\\n          }\\n        }\\n\\n        return T;\\n      } : $assign;\\n      /***/\\n    },\\n    /* 77 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      exports.f = Object.getOwnPropertySymbols;\\n      /***/\\n    },\\n    /* 78 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      exports.f = {}.propertyIsEnumerable;\\n      /***/\\n    },\\n    /* 79 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(80);\\n\\n      module.exports = __w_pdfjs_require__(14).Math.log2;\\n      /***/\\n    },\\n    /* 80 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      $export($export.S, 'Math', {\\n        log2: function log2(x) {\\n          return Math.log(x) / Math.LN2;\\n        }\\n      });\\n      /***/\\n    },\\n    /* 81 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(82);\\n\\n      module.exports = __w_pdfjs_require__(14).Number.isNaN;\\n      /***/\\n    },\\n    /* 82 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      $export($export.S, 'Number', {\\n        isNaN: function isNaN(number) {\\n          return number != number;\\n        }\\n      });\\n      /***/\\n    },\\n    /* 83 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(84);\\n\\n      module.exports = __w_pdfjs_require__(14).Number.isInteger;\\n      /***/\\n    },\\n    /* 84 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      $export($export.S, 'Number', {\\n        isInteger: __w_pdfjs_require__(85)\\n      });\\n      /***/\\n    },\\n    /* 85 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var floor = Math.floor;\\n\\n      module.exports = function isInteger(it) {\\n        return !isObject(it) && isFinite(it) && floor(it) === it;\\n      };\\n      /***/\\n\\n    },\\n    /* 86 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(87);\\n\\n      __w_pdfjs_require__(52);\\n\\n      __w_pdfjs_require__(88);\\n\\n      __w_pdfjs_require__(91);\\n\\n      __w_pdfjs_require__(104);\\n\\n      __w_pdfjs_require__(105);\\n\\n      module.exports = __w_pdfjs_require__(14).Promise;\\n      /***/\\n    },\\n    /* 87 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var classof = __w_pdfjs_require__(72);\\n\\n      var test = {};\\n      test[__w_pdfjs_require__(35)('toStringTag')] = 'z';\\n\\n      if (test + '' != '[object z]') {\\n        __w_pdfjs_require__(25)(Object.prototype, 'toString', function toString() {\\n          return '[object ' + classof(this) + ']';\\n        }, true);\\n      }\\n      /***/\\n\\n    },\\n    /* 88 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $iterators = __w_pdfjs_require__(89);\\n\\n      var getKeys = __w_pdfjs_require__(59);\\n\\n      var redefine = __w_pdfjs_require__(25);\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var hide = __w_pdfjs_require__(15);\\n\\n      var Iterators = __w_pdfjs_require__(55);\\n\\n      var wks = __w_pdfjs_require__(35);\\n\\n      var ITERATOR = wks('iterator');\\n      var TO_STRING_TAG = wks('toStringTag');\\n      var ArrayValues = Iterators.Array;\\n      var DOMIterables = {\\n        CSSRuleList: true,\\n        CSSStyleDeclaration: false,\\n        CSSValueList: false,\\n        ClientRectList: false,\\n        DOMRectList: false,\\n        DOMStringList: false,\\n        DOMTokenList: true,\\n        DataTransferItemList: false,\\n        FileList: false,\\n        HTMLAllCollection: false,\\n        HTMLCollection: false,\\n        HTMLFormElement: false,\\n        HTMLSelectElement: false,\\n        MediaList: true,\\n        MimeTypeArray: false,\\n        NamedNodeMap: false,\\n        NodeList: true,\\n        PaintRequestList: false,\\n        Plugin: false,\\n        PluginArray: false,\\n        SVGLengthList: false,\\n        SVGNumberList: false,\\n        SVGPathSegList: false,\\n        SVGPointList: false,\\n        SVGStringList: false,\\n        SVGTransformList: false,\\n        SourceBufferList: false,\\n        StyleSheetList: true,\\n        TextTrackCueList: false,\\n        TextTrackList: false,\\n        TouchList: false\\n      };\\n\\n      for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\\n        var NAME = collections[i];\\n        var explicit = DOMIterables[NAME];\\n        var Collection = global[NAME];\\n        var proto = Collection && Collection.prototype;\\n        var key;\\n\\n        if (proto) {\\n          if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\\n          if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\\n          Iterators[NAME] = ArrayValues;\\n          if (explicit) for (key in $iterators) {\\n            if (!proto[key]) redefine(proto, key, $iterators[key], true);\\n          }\\n        }\\n      }\\n      /***/\\n\\n    },\\n    /* 89 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var addToUnscopables = __w_pdfjs_require__(50);\\n\\n      var step = __w_pdfjs_require__(90);\\n\\n      var Iterators = __w_pdfjs_require__(55);\\n\\n      var toIObject = __w_pdfjs_require__(47);\\n\\n      module.exports = __w_pdfjs_require__(54)(Array, 'Array', function (iterated, kind) {\\n        this._t = toIObject(iterated);\\n        this._i = 0;\\n        this._k = kind;\\n      }, function () {\\n        var O = this._t;\\n        var kind = this._k;\\n        var index = this._i++;\\n\\n        if (!O || index >= O.length) {\\n          this._t = undefined;\\n          return step(1);\\n        }\\n\\n        if (kind == 'keys') return step(0, index);\\n        if (kind == 'values') return step(0, O[index]);\\n        return step(0, [index, O[index]]);\\n      }, 'values');\\n      Iterators.Arguments = Iterators.Array;\\n      addToUnscopables('keys');\\n      addToUnscopables('values');\\n      addToUnscopables('entries');\\n      /***/\\n    },\\n    /* 90 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (done, value) {\\n        return {\\n          value: value,\\n          done: !!done\\n        };\\n      };\\n      /***/\\n\\n    },\\n    /* 91 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var LIBRARY = __w_pdfjs_require__(37);\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var ctx = __w_pdfjs_require__(28);\\n\\n      var classof = __w_pdfjs_require__(72);\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var aFunction = __w_pdfjs_require__(29);\\n\\n      var anInstance = __w_pdfjs_require__(92);\\n\\n      var forOf = __w_pdfjs_require__(93);\\n\\n      var speciesConstructor = __w_pdfjs_require__(94);\\n\\n      var task = __w_pdfjs_require__(95).set;\\n\\n      var microtask = __w_pdfjs_require__(97)();\\n\\n      var newPromiseCapabilityModule = __w_pdfjs_require__(98);\\n\\n      var perform = __w_pdfjs_require__(99);\\n\\n      var userAgent = __w_pdfjs_require__(100);\\n\\n      var promiseResolve = __w_pdfjs_require__(101);\\n\\n      var PROMISE = 'Promise';\\n      var TypeError = global.TypeError;\\n      var process = global.process;\\n      var versions = process && process.versions;\\n      var v8 = versions && versions.v8 || '';\\n      var $Promise = global[PROMISE];\\n      var isNode = classof(process) == 'process';\\n\\n      var empty = function empty() {};\\n\\n      var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\\n      var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\\n      var USE_NATIVE = !!function () {\\n        try {\\n          var promise = $Promise.resolve(1);\\n\\n          var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(35)('species')] = function (exec) {\\n            exec(empty, empty);\\n          };\\n\\n          return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;\\n        } catch (e) {}\\n      }();\\n\\n      var isThenable = function isThenable(it) {\\n        var then;\\n        return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\\n      };\\n\\n      var notify = function notify(promise, isReject) {\\n        if (promise._n) return;\\n        promise._n = true;\\n        var chain = promise._c;\\n        microtask(function () {\\n          var value = promise._v;\\n          var ok = promise._s == 1;\\n          var i = 0;\\n\\n          var run = function run(reaction) {\\n            var handler = ok ? reaction.ok : reaction.fail;\\n            var resolve = reaction.resolve;\\n            var reject = reaction.reject;\\n            var domain = reaction.domain;\\n            var result, then, exited;\\n\\n            try {\\n              if (handler) {\\n                if (!ok) {\\n                  if (promise._h == 2) onHandleUnhandled(promise);\\n                  promise._h = 1;\\n                }\\n\\n                if (handler === true) result = value;else {\\n                  if (domain) domain.enter();\\n                  result = handler(value);\\n\\n                  if (domain) {\\n                    domain.exit();\\n                    exited = true;\\n                  }\\n                }\\n\\n                if (result === reaction.promise) {\\n                  reject(TypeError('Promise-chain cycle'));\\n                } else if (then = isThenable(result)) {\\n                  then.call(result, resolve, reject);\\n                } else resolve(result);\\n              } else reject(value);\\n            } catch (e) {\\n              if (domain && !exited) domain.exit();\\n              reject(e);\\n            }\\n          };\\n\\n          while (chain.length > i) {\\n            run(chain[i++]);\\n          }\\n\\n          promise._c = [];\\n          promise._n = false;\\n          if (isReject && !promise._h) onUnhandled(promise);\\n        });\\n      };\\n\\n      var onUnhandled = function onUnhandled(promise) {\\n        task.call(global, function () {\\n          var value = promise._v;\\n          var unhandled = isUnhandled(promise);\\n          var result, handler, console;\\n\\n          if (unhandled) {\\n            result = perform(function () {\\n              if (isNode) {\\n                process.emit('unhandledRejection', value, promise);\\n              } else if (handler = global.onunhandledrejection) {\\n                handler({\\n                  promise: promise,\\n                  reason: value\\n                });\\n              } else if ((console = global.console) && console.error) {\\n                console.error('Unhandled promise rejection', value);\\n              }\\n            });\\n            promise._h = isNode || isUnhandled(promise) ? 2 : 1;\\n          }\\n\\n          promise._a = undefined;\\n          if (unhandled && result.e) throw result.v;\\n        });\\n      };\\n\\n      var isUnhandled = function isUnhandled(promise) {\\n        return promise._h !== 1 && (promise._a || promise._c).length === 0;\\n      };\\n\\n      var onHandleUnhandled = function onHandleUnhandled(promise) {\\n        task.call(global, function () {\\n          var handler;\\n\\n          if (isNode) {\\n            process.emit('rejectionHandled', promise);\\n          } else if (handler = global.onrejectionhandled) {\\n            handler({\\n              promise: promise,\\n              reason: promise._v\\n            });\\n          }\\n        });\\n      };\\n\\n      var $reject = function $reject(value) {\\n        var promise = this;\\n        if (promise._d) return;\\n        promise._d = true;\\n        promise = promise._w || promise;\\n        promise._v = value;\\n        promise._s = 2;\\n        if (!promise._a) promise._a = promise._c.slice();\\n        notify(promise, true);\\n      };\\n\\n      var $resolve = function $resolve(value) {\\n        var promise = this;\\n        var then;\\n        if (promise._d) return;\\n        promise._d = true;\\n        promise = promise._w || promise;\\n\\n        try {\\n          if (promise === value) throw TypeError(\\\"Promise can't be resolved itself\\\");\\n\\n          if (then = isThenable(value)) {\\n            microtask(function () {\\n              var wrapper = {\\n                _w: promise,\\n                _d: false\\n              };\\n\\n              try {\\n                then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\\n              } catch (e) {\\n                $reject.call(wrapper, e);\\n              }\\n            });\\n          } else {\\n            promise._v = value;\\n            promise._s = 1;\\n            notify(promise, false);\\n          }\\n        } catch (e) {\\n          $reject.call({\\n            _w: promise,\\n            _d: false\\n          }, e);\\n        }\\n      };\\n\\n      if (!USE_NATIVE) {\\n        $Promise = function Promise(executor) {\\n          anInstance(this, $Promise, PROMISE, '_h');\\n          aFunction(executor);\\n          Internal.call(this);\\n\\n          try {\\n            executor(ctx($resolve, this, 1), ctx($reject, this, 1));\\n          } catch (err) {\\n            $reject.call(this, err);\\n          }\\n        };\\n\\n        Internal = function Promise(executor) {\\n          this._c = [];\\n          this._a = undefined;\\n          this._s = 0;\\n          this._d = false;\\n          this._v = undefined;\\n          this._h = 0;\\n          this._n = false;\\n        };\\n\\n        Internal.prototype = __w_pdfjs_require__(102)($Promise.prototype, {\\n          then: function then(onFulfilled, onRejected) {\\n            var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\\n            reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\\n            reaction.fail = typeof onRejected == 'function' && onRejected;\\n            reaction.domain = isNode ? process.domain : undefined;\\n\\n            this._c.push(reaction);\\n\\n            if (this._a) this._a.push(reaction);\\n            if (this._s) notify(this, false);\\n            return reaction.promise;\\n          },\\n          'catch': function _catch(onRejected) {\\n            return this.then(undefined, onRejected);\\n          }\\n        });\\n\\n        OwnPromiseCapability = function OwnPromiseCapability() {\\n          var promise = new Internal();\\n          this.promise = promise;\\n          this.resolve = ctx($resolve, promise, 1);\\n          this.reject = ctx($reject, promise, 1);\\n        };\\n\\n        newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\\n          return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\\n        };\\n      }\\n\\n      $export($export.G + $export.W + $export.F * !USE_NATIVE, {\\n        Promise: $Promise\\n      });\\n\\n      __w_pdfjs_require__(64)($Promise, PROMISE);\\n\\n      __w_pdfjs_require__(103)(PROMISE);\\n\\n      Wrapper = __w_pdfjs_require__(14)[PROMISE];\\n      $export($export.S + $export.F * !USE_NATIVE, PROMISE, {\\n        reject: function reject(r) {\\n          var capability = newPromiseCapability(this);\\n          var $$reject = capability.reject;\\n          $$reject(r);\\n          return capability.promise;\\n        }\\n      });\\n      $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\\n        resolve: function resolve(x) {\\n          return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\\n        }\\n      });\\n      $export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(73)(function (iter) {\\n        $Promise.all(iter)['catch'](empty);\\n      })), PROMISE, {\\n        all: function all(iterable) {\\n          var C = this;\\n          var capability = newPromiseCapability(C);\\n          var resolve = capability.resolve;\\n          var reject = capability.reject;\\n          var result = perform(function () {\\n            var values = [];\\n            var index = 0;\\n            var remaining = 1;\\n            forOf(iterable, false, function (promise) {\\n              var $index = index++;\\n              var alreadyCalled = false;\\n              values.push(undefined);\\n              remaining++;\\n              C.resolve(promise).then(function (value) {\\n                if (alreadyCalled) return;\\n                alreadyCalled = true;\\n                values[$index] = value;\\n                --remaining || resolve(values);\\n              }, reject);\\n            });\\n            --remaining || resolve(values);\\n          });\\n          if (result.e) reject(result.v);\\n          return capability.promise;\\n        },\\n        race: function race(iterable) {\\n          var C = this;\\n          var capability = newPromiseCapability(C);\\n          var reject = capability.reject;\\n          var result = perform(function () {\\n            forOf(iterable, false, function (promise) {\\n              C.resolve(promise).then(capability.resolve, reject);\\n            });\\n          });\\n          if (result.e) reject(result.v);\\n          return capability.promise;\\n        }\\n      });\\n      /***/\\n    },\\n    /* 92 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (it, Constructor, name, forbiddenField) {\\n        if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\\n          throw TypeError(name + ': incorrect invocation!');\\n        }\\n\\n        return it;\\n      };\\n      /***/\\n\\n    },\\n    /* 93 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var ctx = __w_pdfjs_require__(28);\\n\\n      var call = __w_pdfjs_require__(68);\\n\\n      var isArrayIter = __w_pdfjs_require__(69);\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var toLength = __w_pdfjs_require__(30);\\n\\n      var getIterFn = __w_pdfjs_require__(71);\\n\\n      var BREAK = {};\\n      var RETURN = {};\\n\\n      var _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\\n        var iterFn = ITERATOR ? function () {\\n          return iterable;\\n        } : getIterFn(iterable);\\n        var f = ctx(fn, that, entries ? 2 : 1);\\n        var index = 0;\\n        var length, step, iterator, result;\\n        if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\\n        if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\\n          result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\\n          if (result === BREAK || result === RETURN) return result;\\n        } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\\n          result = call(iterator, f, step.value, entries);\\n          if (result === BREAK || result === RETURN) return result;\\n        }\\n      };\\n\\n      _exports.BREAK = BREAK;\\n      _exports.RETURN = RETURN;\\n      /***/\\n    },\\n    /* 94 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var aFunction = __w_pdfjs_require__(29);\\n\\n      var SPECIES = __w_pdfjs_require__(35)('species');\\n\\n      module.exports = function (O, D) {\\n        var C = anObject(O).constructor;\\n        var S;\\n        return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\\n      };\\n      /***/\\n\\n    },\\n    /* 95 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var ctx = __w_pdfjs_require__(28);\\n\\n      var invoke = __w_pdfjs_require__(96);\\n\\n      var html = __w_pdfjs_require__(63);\\n\\n      var cel = __w_pdfjs_require__(22);\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var process = global.process;\\n      var setTask = global.setImmediate;\\n      var clearTask = global.clearImmediate;\\n      var MessageChannel = global.MessageChannel;\\n      var Dispatch = global.Dispatch;\\n      var counter = 0;\\n      var queue = {};\\n      var ONREADYSTATECHANGE = 'onreadystatechange';\\n      var defer, channel, port;\\n\\n      var run = function run() {\\n        var id = +this;\\n\\n        if (queue.hasOwnProperty(id)) {\\n          var fn = queue[id];\\n          delete queue[id];\\n          fn();\\n        }\\n      };\\n\\n      var listener = function listener(event) {\\n        run.call(event.data);\\n      };\\n\\n      if (!setTask || !clearTask) {\\n        setTask = function setImmediate(fn) {\\n          var args = [];\\n          var i = 1;\\n\\n          while (arguments.length > i) {\\n            args.push(arguments[i++]);\\n          }\\n\\n          queue[++counter] = function () {\\n            invoke(typeof fn == 'function' ? fn : Function(fn), args);\\n          };\\n\\n          defer(counter);\\n          return counter;\\n        };\\n\\n        clearTask = function clearImmediate(id) {\\n          delete queue[id];\\n        };\\n\\n        if (__w_pdfjs_require__(34)(process) == 'process') {\\n          defer = function defer(id) {\\n            process.nextTick(ctx(run, id, 1));\\n          };\\n        } else if (Dispatch && Dispatch.now) {\\n          defer = function defer(id) {\\n            Dispatch.now(ctx(run, id, 1));\\n          };\\n        } else if (MessageChannel) {\\n          channel = new MessageChannel();\\n          port = channel.port2;\\n          channel.port1.onmessage = listener;\\n          defer = ctx(port.postMessage, port, 1);\\n        } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\\n          defer = function defer(id) {\\n            global.postMessage(id + '', '*');\\n          };\\n\\n          global.addEventListener('message', listener, false);\\n        } else if (ONREADYSTATECHANGE in cel('script')) {\\n          defer = function defer(id) {\\n            html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\\n              html.removeChild(this);\\n              run.call(id);\\n            };\\n          };\\n        } else {\\n          defer = function defer(id) {\\n            setTimeout(ctx(run, id, 1), 0);\\n          };\\n        }\\n      }\\n\\n      module.exports = {\\n        set: setTask,\\n        clear: clearTask\\n      };\\n      /***/\\n    },\\n    /* 96 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (fn, args, that) {\\n        var un = that === undefined;\\n\\n        switch (args.length) {\\n          case 0:\\n            return un ? fn() : fn.call(that);\\n\\n          case 1:\\n            return un ? fn(args[0]) : fn.call(that, args[0]);\\n\\n          case 2:\\n            return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\\n\\n          case 3:\\n            return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\\n\\n          case 4:\\n            return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\\n        }\\n\\n        return fn.apply(that, args);\\n      };\\n      /***/\\n\\n    },\\n    /* 97 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var macrotask = __w_pdfjs_require__(95).set;\\n\\n      var Observer = global.MutationObserver || global.WebKitMutationObserver;\\n      var process = global.process;\\n      var Promise = global.Promise;\\n      var isNode = __w_pdfjs_require__(34)(process) == 'process';\\n\\n      module.exports = function () {\\n        var head, last, notify;\\n\\n        var flush = function flush() {\\n          var parent, fn;\\n          if (isNode && (parent = process.domain)) parent.exit();\\n\\n          while (head) {\\n            fn = head.fn;\\n            head = head.next;\\n\\n            try {\\n              fn();\\n            } catch (e) {\\n              if (head) notify();else last = undefined;\\n              throw e;\\n            }\\n          }\\n\\n          last = undefined;\\n          if (parent) parent.enter();\\n        };\\n\\n        if (isNode) {\\n          notify = function notify() {\\n            process.nextTick(flush);\\n          };\\n        } else if (Observer && !(global.navigator && global.navigator.standalone)) {\\n          var toggle = true;\\n          var node = document.createTextNode('');\\n          new Observer(flush).observe(node, {\\n            characterData: true\\n          });\\n\\n          notify = function notify() {\\n            node.data = toggle = !toggle;\\n          };\\n        } else if (Promise && Promise.resolve) {\\n          var promise = Promise.resolve(undefined);\\n\\n          notify = function notify() {\\n            promise.then(flush);\\n          };\\n        } else {\\n          notify = function notify() {\\n            macrotask.call(global, flush);\\n          };\\n        }\\n\\n        return function (fn) {\\n          var task = {\\n            fn: fn,\\n            next: undefined\\n          };\\n          if (last) last.next = task;\\n\\n          if (!head) {\\n            head = task;\\n            notify();\\n          }\\n\\n          last = task;\\n        };\\n      };\\n      /***/\\n\\n    },\\n    /* 98 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var aFunction = __w_pdfjs_require__(29);\\n\\n      function PromiseCapability(C) {\\n        var resolve, reject;\\n        this.promise = new C(function ($$resolve, $$reject) {\\n          if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\\n          resolve = $$resolve;\\n          reject = $$reject;\\n        });\\n        this.resolve = aFunction(resolve);\\n        this.reject = aFunction(reject);\\n      }\\n\\n      module.exports.f = function (C) {\\n        return new PromiseCapability(C);\\n      };\\n      /***/\\n\\n    },\\n    /* 99 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      module.exports = function (exec) {\\n        try {\\n          return {\\n            e: false,\\n            v: exec()\\n          };\\n        } catch (e) {\\n          return {\\n            e: true,\\n            v: e\\n          };\\n        }\\n      };\\n      /***/\\n\\n    },\\n    /* 100 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var navigator = global.navigator;\\n      module.exports = navigator && navigator.userAgent || '';\\n      /***/\\n    },\\n    /* 101 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var newPromiseCapability = __w_pdfjs_require__(98);\\n\\n      module.exports = function (C, x) {\\n        anObject(C);\\n        if (isObject(x) && x.constructor === C) return x;\\n        var promiseCapability = newPromiseCapability.f(C);\\n        var resolve = promiseCapability.resolve;\\n        resolve(x);\\n        return promiseCapability.promise;\\n      };\\n      /***/\\n\\n    },\\n    /* 102 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var redefine = __w_pdfjs_require__(25);\\n\\n      module.exports = function (target, src, safe) {\\n        for (var key in src) {\\n          redefine(target, key, src[key], safe);\\n        }\\n\\n        return target;\\n      };\\n      /***/\\n\\n    },\\n    /* 103 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var dP = __w_pdfjs_require__(16);\\n\\n      var DESCRIPTORS = __w_pdfjs_require__(20);\\n\\n      var SPECIES = __w_pdfjs_require__(35)('species');\\n\\n      module.exports = function (KEY) {\\n        var C = global[KEY];\\n        if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\\n          configurable: true,\\n          get: function get() {\\n            return this;\\n          }\\n        });\\n      };\\n      /***/\\n\\n    },\\n    /* 104 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var core = __w_pdfjs_require__(14);\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var speciesConstructor = __w_pdfjs_require__(94);\\n\\n      var promiseResolve = __w_pdfjs_require__(101);\\n\\n      $export($export.P + $export.R, 'Promise', {\\n        'finally': function _finally(onFinally) {\\n          var C = speciesConstructor(this, core.Promise || global.Promise);\\n          var isFunction = typeof onFinally == 'function';\\n          return this.then(isFunction ? function (x) {\\n            return promiseResolve(C, onFinally()).then(function () {\\n              return x;\\n            });\\n          } : onFinally, isFunction ? function (e) {\\n            return promiseResolve(C, onFinally()).then(function () {\\n              throw e;\\n            });\\n          } : onFinally);\\n        }\\n      });\\n      /***/\\n    },\\n    /* 105 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var newPromiseCapability = __w_pdfjs_require__(98);\\n\\n      var perform = __w_pdfjs_require__(99);\\n\\n      $export($export.S, 'Promise', {\\n        'try': function _try(callbackfn) {\\n          var promiseCapability = newPromiseCapability.f(this);\\n          var result = perform(callbackfn);\\n          (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\\n          return promiseCapability.promise;\\n        }\\n      });\\n      /***/\\n    },\\n    /* 106 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(87);\\n\\n      __w_pdfjs_require__(88);\\n\\n      __w_pdfjs_require__(107);\\n\\n      __w_pdfjs_require__(119);\\n\\n      __w_pdfjs_require__(121);\\n\\n      module.exports = __w_pdfjs_require__(14).WeakMap;\\n      /***/\\n    },\\n    /* 107 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var each = __w_pdfjs_require__(108)(0);\\n\\n      var redefine = __w_pdfjs_require__(25);\\n\\n      var meta = __w_pdfjs_require__(112);\\n\\n      var assign = __w_pdfjs_require__(76);\\n\\n      var weak = __w_pdfjs_require__(113);\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var fails = __w_pdfjs_require__(21);\\n\\n      var validate = __w_pdfjs_require__(114);\\n\\n      var WEAK_MAP = 'WeakMap';\\n      var getWeak = meta.getWeak;\\n      var isExtensible = Object.isExtensible;\\n      var uncaughtFrozenStore = weak.ufstore;\\n      var tmp = {};\\n      var InternalMap;\\n\\n      var wrapper = function wrapper(get) {\\n        return function WeakMap() {\\n          return get(this, arguments.length > 0 ? arguments[0] : undefined);\\n        };\\n      };\\n\\n      var methods = {\\n        get: function get(key) {\\n          if (isObject(key)) {\\n            var data = getWeak(key);\\n            if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\\n            return data ? data[this._i] : undefined;\\n          }\\n        },\\n        set: function set(key, value) {\\n          return weak.def(validate(this, WEAK_MAP), key, value);\\n        }\\n      };\\n\\n      var $WeakMap = module.exports = __w_pdfjs_require__(115)(WEAK_MAP, wrapper, methods, weak, true, true);\\n\\n      if (fails(function () {\\n        return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\\n      })) {\\n        InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\\n        assign(InternalMap.prototype, methods);\\n        meta.NEED = true;\\n        each(['delete', 'has', 'get', 'set'], function (key) {\\n          var proto = $WeakMap.prototype;\\n          var method = proto[key];\\n          redefine(proto, key, function (a, b) {\\n            if (isObject(a) && !isExtensible(a)) {\\n              if (!this._f) this._f = new InternalMap();\\n\\n              var result = this._f[key](a, b);\\n\\n              return key == 'set' ? this : result;\\n            }\\n\\n            return method.call(this, a, b);\\n          });\\n        });\\n      }\\n      /***/\\n\\n    },\\n    /* 108 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var ctx = __w_pdfjs_require__(28);\\n\\n      var IObject = __w_pdfjs_require__(48);\\n\\n      var toObject = __w_pdfjs_require__(66);\\n\\n      var toLength = __w_pdfjs_require__(30);\\n\\n      var asc = __w_pdfjs_require__(109);\\n\\n      module.exports = function (TYPE, $create) {\\n        var IS_MAP = TYPE == 1;\\n        var IS_FILTER = TYPE == 2;\\n        var IS_SOME = TYPE == 3;\\n        var IS_EVERY = TYPE == 4;\\n        var IS_FIND_INDEX = TYPE == 6;\\n        var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\\n        var create = $create || asc;\\n        return function ($this, callbackfn, that) {\\n          var O = toObject($this);\\n          var self = IObject(O);\\n          var f = ctx(callbackfn, that, 3);\\n          var length = toLength(self.length);\\n          var index = 0;\\n          var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\\n          var val, res;\\n\\n          for (; length > index; index++) {\\n            if (NO_HOLES || index in self) {\\n              val = self[index];\\n              res = f(val, index, O);\\n\\n              if (TYPE) {\\n                if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\\n                  case 3:\\n                    return true;\\n\\n                  case 5:\\n                    return val;\\n\\n                  case 6:\\n                    return index;\\n\\n                  case 2:\\n                    result.push(val);\\n                } else if (IS_EVERY) return false;\\n              }\\n            }\\n          }\\n\\n          return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\\n        };\\n      };\\n      /***/\\n\\n    },\\n    /* 109 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var speciesConstructor = __w_pdfjs_require__(110);\\n\\n      module.exports = function (original, length) {\\n        return new (speciesConstructor(original))(length);\\n      };\\n      /***/\\n\\n    },\\n    /* 110 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var isArray = __w_pdfjs_require__(111);\\n\\n      var SPECIES = __w_pdfjs_require__(35)('species');\\n\\n      module.exports = function (original) {\\n        var C;\\n\\n        if (isArray(original)) {\\n          C = original.constructor;\\n          if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\\n\\n          if (isObject(C)) {\\n            C = C[SPECIES];\\n            if (C === null) C = undefined;\\n          }\\n        }\\n\\n        return C === undefined ? Array : C;\\n      };\\n      /***/\\n\\n    },\\n    /* 111 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var cof = __w_pdfjs_require__(34);\\n\\n      module.exports = Array.isArray || function isArray(arg) {\\n        return cof(arg) == 'Array';\\n      };\\n      /***/\\n\\n    },\\n    /* 112 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      var META = __w_pdfjs_require__(27)('meta');\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var has = __w_pdfjs_require__(26);\\n\\n      var setDesc = __w_pdfjs_require__(16).f;\\n\\n      var id = 0;\\n\\n      var isExtensible = Object.isExtensible || function () {\\n        return true;\\n      };\\n\\n      var FREEZE = !__w_pdfjs_require__(21)(function () {\\n        return isExtensible(Object.preventExtensions({}));\\n      });\\n\\n      var setMeta = function setMeta(it) {\\n        setDesc(it, META, {\\n          value: {\\n            i: 'O' + ++id,\\n            w: {}\\n          }\\n        });\\n      };\\n\\n      var fastKey = function fastKey(it, create) {\\n        if (!isObject(it)) return _typeof(it) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\\n\\n        if (!has(it, META)) {\\n          if (!isExtensible(it)) return 'F';\\n          if (!create) return 'E';\\n          setMeta(it);\\n        }\\n\\n        return it[META].i;\\n      };\\n\\n      var getWeak = function getWeak(it, create) {\\n        if (!has(it, META)) {\\n          if (!isExtensible(it)) return true;\\n          if (!create) return false;\\n          setMeta(it);\\n        }\\n\\n        return it[META].w;\\n      };\\n\\n      var onFreeze = function onFreeze(it) {\\n        if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\\n        return it;\\n      };\\n\\n      var meta = module.exports = {\\n        KEY: META,\\n        NEED: false,\\n        fastKey: fastKey,\\n        getWeak: getWeak,\\n        onFreeze: onFreeze\\n      };\\n      /***/\\n    },\\n    /* 113 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var redefineAll = __w_pdfjs_require__(102);\\n\\n      var getWeak = __w_pdfjs_require__(112).getWeak;\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var anInstance = __w_pdfjs_require__(92);\\n\\n      var forOf = __w_pdfjs_require__(93);\\n\\n      var createArrayMethod = __w_pdfjs_require__(108);\\n\\n      var $has = __w_pdfjs_require__(26);\\n\\n      var validate = __w_pdfjs_require__(114);\\n\\n      var arrayFind = createArrayMethod(5);\\n      var arrayFindIndex = createArrayMethod(6);\\n      var id = 0;\\n\\n      var uncaughtFrozenStore = function uncaughtFrozenStore(that) {\\n        return that._l || (that._l = new UncaughtFrozenStore());\\n      };\\n\\n      var UncaughtFrozenStore = function UncaughtFrozenStore() {\\n        this.a = [];\\n      };\\n\\n      var findUncaughtFrozen = function findUncaughtFrozen(store, key) {\\n        return arrayFind(store.a, function (it) {\\n          return it[0] === key;\\n        });\\n      };\\n\\n      UncaughtFrozenStore.prototype = {\\n        get: function get(key) {\\n          var entry = findUncaughtFrozen(this, key);\\n          if (entry) return entry[1];\\n        },\\n        has: function has(key) {\\n          return !!findUncaughtFrozen(this, key);\\n        },\\n        set: function set(key, value) {\\n          var entry = findUncaughtFrozen(this, key);\\n          if (entry) entry[1] = value;else this.a.push([key, value]);\\n        },\\n        'delete': function _delete(key) {\\n          var index = arrayFindIndex(this.a, function (it) {\\n            return it[0] === key;\\n          });\\n          if (~index) this.a.splice(index, 1);\\n          return !!~index;\\n        }\\n      };\\n      module.exports = {\\n        getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\\n          var C = wrapper(function (that, iterable) {\\n            anInstance(that, C, NAME, '_i');\\n            that._t = NAME;\\n            that._i = id++;\\n            that._l = undefined;\\n            if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\\n          });\\n          redefineAll(C.prototype, {\\n            'delete': function _delete(key) {\\n              if (!isObject(key)) return false;\\n              var data = getWeak(key);\\n              if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\\n              return data && $has(data, this._i) && delete data[this._i];\\n            },\\n            has: function has(key) {\\n              if (!isObject(key)) return false;\\n              var data = getWeak(key);\\n              if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\\n              return data && $has(data, this._i);\\n            }\\n          });\\n          return C;\\n        },\\n        def: function def(that, key, value) {\\n          var data = getWeak(anObject(key), true);\\n          if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\\n          return that;\\n        },\\n        ufstore: uncaughtFrozenStore\\n      };\\n      /***/\\n    },\\n    /* 114 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      module.exports = function (it, TYPE) {\\n        if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\\n        return it;\\n      };\\n      /***/\\n\\n    },\\n    /* 115 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var redefine = __w_pdfjs_require__(25);\\n\\n      var redefineAll = __w_pdfjs_require__(102);\\n\\n      var meta = __w_pdfjs_require__(112);\\n\\n      var forOf = __w_pdfjs_require__(93);\\n\\n      var anInstance = __w_pdfjs_require__(92);\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var fails = __w_pdfjs_require__(21);\\n\\n      var $iterDetect = __w_pdfjs_require__(73);\\n\\n      var setToStringTag = __w_pdfjs_require__(64);\\n\\n      var inheritIfRequired = __w_pdfjs_require__(116);\\n\\n      module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\\n        var Base = global[NAME];\\n        var C = Base;\\n        var ADDER = IS_MAP ? 'set' : 'add';\\n        var proto = C && C.prototype;\\n        var O = {};\\n\\n        var fixMethod = function fixMethod(KEY) {\\n          var fn = proto[KEY];\\n          redefine(proto, KEY, KEY == 'delete' ? function (a) {\\n            return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\\n          } : KEY == 'has' ? function has(a) {\\n            return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\\n          } : KEY == 'get' ? function get(a) {\\n            return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\\n          } : KEY == 'add' ? function add(a) {\\n            fn.call(this, a === 0 ? 0 : a);\\n            return this;\\n          } : function set(a, b) {\\n            fn.call(this, a === 0 ? 0 : a, b);\\n            return this;\\n          });\\n        };\\n\\n        if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\\n          new C().entries().next();\\n        }))) {\\n          C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\\n          redefineAll(C.prototype, methods);\\n          meta.NEED = true;\\n        } else {\\n          var instance = new C();\\n          var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\\n          var THROWS_ON_PRIMITIVES = fails(function () {\\n            instance.has(1);\\n          });\\n          var ACCEPT_ITERABLES = $iterDetect(function (iter) {\\n            new C(iter);\\n          });\\n          var BUGGY_ZERO = !IS_WEAK && fails(function () {\\n            var $instance = new C();\\n            var index = 5;\\n\\n            while (index--) {\\n              $instance[ADDER](index, index);\\n            }\\n\\n            return !$instance.has(-0);\\n          });\\n\\n          if (!ACCEPT_ITERABLES) {\\n            C = wrapper(function (target, iterable) {\\n              anInstance(target, C, NAME);\\n              var that = inheritIfRequired(new Base(), target, C);\\n              if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\\n              return that;\\n            });\\n            C.prototype = proto;\\n            proto.constructor = C;\\n          }\\n\\n          if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\\n            fixMethod('delete');\\n            fixMethod('has');\\n            IS_MAP && fixMethod('get');\\n          }\\n\\n          if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\\n          if (IS_WEAK && proto.clear) delete proto.clear;\\n        }\\n\\n        setToStringTag(C, NAME);\\n        O[NAME] = C;\\n        $export($export.G + $export.W + $export.F * (C != Base), O);\\n        if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\\n        return C;\\n      };\\n      /***/\\n\\n    },\\n    /* 116 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var setPrototypeOf = __w_pdfjs_require__(117).set;\\n\\n      module.exports = function (that, target, C) {\\n        var S = target.constructor;\\n        var P;\\n\\n        if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\\n          setPrototypeOf(that, P);\\n        }\\n\\n        return that;\\n      };\\n      /***/\\n\\n    },\\n    /* 117 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var check = function check(O, proto) {\\n        anObject(O);\\n        if (!isObject(proto) && proto !== null) throw TypeError(proto + \\\": can't set as prototype!\\\");\\n      };\\n\\n      module.exports = {\\n        set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\\n          try {\\n            set = __w_pdfjs_require__(28)(Function.call, __w_pdfjs_require__(118).f(Object.prototype, '__proto__').set, 2);\\n            set(test, []);\\n            buggy = !(test instanceof Array);\\n          } catch (e) {\\n            buggy = true;\\n          }\\n\\n          return function setPrototypeOf(O, proto) {\\n            check(O, proto);\\n            if (buggy) O.__proto__ = proto;else set(O, proto);\\n            return O;\\n          };\\n        }({}, false) : undefined),\\n        check: check\\n      };\\n      /***/\\n    },\\n    /* 118 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var pIE = __w_pdfjs_require__(78);\\n\\n      var createDesc = __w_pdfjs_require__(24);\\n\\n      var toIObject = __w_pdfjs_require__(47);\\n\\n      var toPrimitive = __w_pdfjs_require__(23);\\n\\n      var has = __w_pdfjs_require__(26);\\n\\n      var IE8_DOM_DEFINE = __w_pdfjs_require__(19);\\n\\n      var gOPD = Object.getOwnPropertyDescriptor;\\n      exports.f = __w_pdfjs_require__(20) ? gOPD : function getOwnPropertyDescriptor(O, P) {\\n        O = toIObject(O);\\n        P = toPrimitive(P, true);\\n        if (IE8_DOM_DEFINE) try {\\n          return gOPD(O, P);\\n        } catch (e) {}\\n        if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\\n      };\\n      /***/\\n    },\\n    /* 119 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(120)('WeakMap');\\n      /***/\\n\\n    },\\n    /* 120 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      module.exports = function (COLLECTION) {\\n        $export($export.S, COLLECTION, {\\n          of: function of() {\\n            var length = arguments.length;\\n            var A = new Array(length);\\n\\n            while (length--) {\\n              A[length] = arguments[length];\\n            }\\n\\n            return new this(A);\\n          }\\n        });\\n      };\\n      /***/\\n\\n    },\\n    /* 121 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(122)('WeakMap');\\n      /***/\\n\\n    },\\n    /* 122 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var aFunction = __w_pdfjs_require__(29);\\n\\n      var ctx = __w_pdfjs_require__(28);\\n\\n      var forOf = __w_pdfjs_require__(93);\\n\\n      module.exports = function (COLLECTION) {\\n        $export($export.S, COLLECTION, {\\n          from: function from(source) {\\n            var mapFn = arguments[1];\\n            var mapping, A, n, cb;\\n            aFunction(this);\\n            mapping = mapFn !== undefined;\\n            if (mapping) aFunction(mapFn);\\n            if (source == undefined) return new this();\\n            A = [];\\n\\n            if (mapping) {\\n              n = 0;\\n              cb = ctx(mapFn, arguments[2], 2);\\n              forOf(source, false, function (nextItem) {\\n                A.push(cb(nextItem, n++));\\n              });\\n            } else {\\n              forOf(source, false, A.push, A);\\n            }\\n\\n            return new this(A);\\n          }\\n        });\\n      };\\n      /***/\\n\\n    },\\n    /* 123 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(87);\\n\\n      __w_pdfjs_require__(88);\\n\\n      __w_pdfjs_require__(124);\\n\\n      __w_pdfjs_require__(125);\\n\\n      __w_pdfjs_require__(126);\\n\\n      module.exports = __w_pdfjs_require__(14).WeakSet;\\n      /***/\\n    },\\n    /* 124 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var weak = __w_pdfjs_require__(113);\\n\\n      var validate = __w_pdfjs_require__(114);\\n\\n      var WEAK_SET = 'WeakSet';\\n\\n      __w_pdfjs_require__(115)(WEAK_SET, function (get) {\\n        return function WeakSet() {\\n          return get(this, arguments.length > 0 ? arguments[0] : undefined);\\n        };\\n      }, {\\n        add: function add(value) {\\n          return weak.def(validate(this, WEAK_SET), value, true);\\n        }\\n      }, weak, false, true);\\n      /***/\\n\\n    },\\n    /* 125 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(120)('WeakSet');\\n      /***/\\n\\n    },\\n    /* 126 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(122)('WeakSet');\\n      /***/\\n\\n    },\\n    /* 127 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(128);\\n\\n      module.exports = __w_pdfjs_require__(14).String.codePointAt;\\n      /***/\\n    },\\n    /* 128 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var $at = __w_pdfjs_require__(53)(false);\\n\\n      $export($export.P, 'String', {\\n        codePointAt: function codePointAt(pos) {\\n          return $at(this, pos);\\n        }\\n      });\\n      /***/\\n    },\\n    /* 129 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(130);\\n\\n      module.exports = __w_pdfjs_require__(14).String.fromCodePoint;\\n      /***/\\n    },\\n    /* 130 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var toAbsoluteIndex = __w_pdfjs_require__(49);\\n\\n      var fromCharCode = String.fromCharCode;\\n      var $fromCodePoint = String.fromCodePoint;\\n      $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\\n        fromCodePoint: function fromCodePoint(x) {\\n          var res = [];\\n          var aLen = arguments.length;\\n          var i = 0;\\n          var code;\\n\\n          while (aLen > i) {\\n            code = +arguments[i++];\\n            if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\\n            res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));\\n          }\\n\\n          return res.join('');\\n        }\\n      });\\n      /***/\\n    },\\n    /* 131 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(132);\\n\\n      __w_pdfjs_require__(87);\\n\\n      module.exports = __w_pdfjs_require__(14).Symbol;\\n      /***/\\n    },\\n    /* 132 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var has = __w_pdfjs_require__(26);\\n\\n      var DESCRIPTORS = __w_pdfjs_require__(20);\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var redefine = __w_pdfjs_require__(25);\\n\\n      var META = __w_pdfjs_require__(112).KEY;\\n\\n      var $fails = __w_pdfjs_require__(21);\\n\\n      var shared = __w_pdfjs_require__(36);\\n\\n      var setToStringTag = __w_pdfjs_require__(64);\\n\\n      var uid = __w_pdfjs_require__(27);\\n\\n      var wks = __w_pdfjs_require__(35);\\n\\n      var wksExt = __w_pdfjs_require__(133);\\n\\n      var wksDefine = __w_pdfjs_require__(134);\\n\\n      var enumKeys = __w_pdfjs_require__(135);\\n\\n      var isArray = __w_pdfjs_require__(111);\\n\\n      var anObject = __w_pdfjs_require__(17);\\n\\n      var isObject = __w_pdfjs_require__(18);\\n\\n      var toIObject = __w_pdfjs_require__(47);\\n\\n      var toPrimitive = __w_pdfjs_require__(23);\\n\\n      var createDesc = __w_pdfjs_require__(24);\\n\\n      var _create = __w_pdfjs_require__(57);\\n\\n      var gOPNExt = __w_pdfjs_require__(136);\\n\\n      var $GOPD = __w_pdfjs_require__(118);\\n\\n      var $DP = __w_pdfjs_require__(16);\\n\\n      var $keys = __w_pdfjs_require__(59);\\n\\n      var gOPD = $GOPD.f;\\n      var dP = $DP.f;\\n      var gOPN = gOPNExt.f;\\n      var $Symbol = global.Symbol;\\n      var $JSON = global.JSON;\\n\\n      var _stringify = $JSON && $JSON.stringify;\\n\\n      var PROTOTYPE = 'prototype';\\n      var HIDDEN = wks('_hidden');\\n      var TO_PRIMITIVE = wks('toPrimitive');\\n      var isEnum = {}.propertyIsEnumerable;\\n      var SymbolRegistry = shared('symbol-registry');\\n      var AllSymbols = shared('symbols');\\n      var OPSymbols = shared('op-symbols');\\n      var ObjectProto = Object[PROTOTYPE];\\n      var USE_NATIVE = typeof $Symbol == 'function';\\n      var QObject = global.QObject;\\n      var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\\n      var setSymbolDesc = DESCRIPTORS && $fails(function () {\\n        return _create(dP({}, 'a', {\\n          get: function get() {\\n            return dP(this, 'a', {\\n              value: 7\\n            }).a;\\n          }\\n        })).a != 7;\\n      }) ? function (it, key, D) {\\n        var protoDesc = gOPD(ObjectProto, key);\\n        if (protoDesc) delete ObjectProto[key];\\n        dP(it, key, D);\\n        if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\\n      } : dP;\\n\\n      var wrap = function wrap(tag) {\\n        var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\\n\\n        sym._k = tag;\\n        return sym;\\n      };\\n\\n      var isSymbol = USE_NATIVE && _typeof($Symbol.iterator) == 'symbol' ? function (it) {\\n        return _typeof(it) == 'symbol';\\n      } : function (it) {\\n        return it instanceof $Symbol;\\n      };\\n\\n      var $defineProperty = function defineProperty(it, key, D) {\\n        if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\\n        anObject(it);\\n        key = toPrimitive(key, true);\\n        anObject(D);\\n\\n        if (has(AllSymbols, key)) {\\n          if (!D.enumerable) {\\n            if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\\n            it[HIDDEN][key] = true;\\n          } else {\\n            if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\\n            D = _create(D, {\\n              enumerable: createDesc(0, false)\\n            });\\n          }\\n\\n          return setSymbolDesc(it, key, D);\\n        }\\n\\n        return dP(it, key, D);\\n      };\\n\\n      var $defineProperties = function defineProperties(it, P) {\\n        anObject(it);\\n        var keys = enumKeys(P = toIObject(P));\\n        var i = 0;\\n        var l = keys.length;\\n        var key;\\n\\n        while (l > i) {\\n          $defineProperty(it, key = keys[i++], P[key]);\\n        }\\n\\n        return it;\\n      };\\n\\n      var $create = function create(it, P) {\\n        return P === undefined ? _create(it) : $defineProperties(_create(it), P);\\n      };\\n\\n      var $propertyIsEnumerable = function propertyIsEnumerable(key) {\\n        var E = isEnum.call(this, key = toPrimitive(key, true));\\n        if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\\n        return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\\n      };\\n\\n      var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\\n        it = toIObject(it);\\n        key = toPrimitive(key, true);\\n        if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\\n        var D = gOPD(it, key);\\n        if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\\n        return D;\\n      };\\n\\n      var $getOwnPropertyNames = function getOwnPropertyNames(it) {\\n        var names = gOPN(toIObject(it));\\n        var result = [];\\n        var i = 0;\\n        var key;\\n\\n        while (names.length > i) {\\n          if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\\n        }\\n\\n        return result;\\n      };\\n\\n      var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\\n        var IS_OP = it === ObjectProto;\\n        var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\\n        var result = [];\\n        var i = 0;\\n        var key;\\n\\n        while (names.length > i) {\\n          if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\\n        }\\n\\n        return result;\\n      };\\n\\n      if (!USE_NATIVE) {\\n        $Symbol = function _Symbol() {\\n          if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\\n          var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\\n\\n          var $set = function $set(value) {\\n            if (this === ObjectProto) $set.call(OPSymbols, value);\\n            if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\\n            setSymbolDesc(this, tag, createDesc(1, value));\\n          };\\n\\n          if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, {\\n            configurable: true,\\n            set: $set\\n          });\\n          return wrap(tag);\\n        };\\n\\n        redefine($Symbol[PROTOTYPE], 'toString', function toString() {\\n          return this._k;\\n        });\\n        $GOPD.f = $getOwnPropertyDescriptor;\\n        $DP.f = $defineProperty;\\n        __w_pdfjs_require__(137).f = gOPNExt.f = $getOwnPropertyNames;\\n        __w_pdfjs_require__(78).f = $propertyIsEnumerable;\\n        __w_pdfjs_require__(77).f = $getOwnPropertySymbols;\\n\\n        if (DESCRIPTORS && !__w_pdfjs_require__(37)) {\\n          redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\\n        }\\n\\n        wksExt.f = function (name) {\\n          return wrap(wks(name));\\n        };\\n      }\\n\\n      $export($export.G + $export.W + $export.F * !USE_NATIVE, {\\n        Symbol: $Symbol\\n      });\\n\\n      for (var es6Symbols = 'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) {\\n        wks(es6Symbols[j++]);\\n      }\\n\\n      for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) {\\n        wksDefine(wellKnownSymbols[k++]);\\n      }\\n\\n      $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\\n        'for': function _for(key) {\\n          return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);\\n        },\\n        keyFor: function keyFor(sym) {\\n          if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\\n\\n          for (var key in SymbolRegistry) {\\n            if (SymbolRegistry[key] === sym) return key;\\n          }\\n        },\\n        useSetter: function useSetter() {\\n          setter = true;\\n        },\\n        useSimple: function useSimple() {\\n          setter = false;\\n        }\\n      });\\n      $export($export.S + $export.F * !USE_NATIVE, 'Object', {\\n        create: $create,\\n        defineProperty: $defineProperty,\\n        defineProperties: $defineProperties,\\n        getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\\n        getOwnPropertyNames: $getOwnPropertyNames,\\n        getOwnPropertySymbols: $getOwnPropertySymbols\\n      });\\n      $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\\n        var S = $Symbol();\\n        return _stringify([S]) != '[null]' || _stringify({\\n          a: S\\n        }) != '{}' || _stringify(Object(S)) != '{}';\\n      })), 'JSON', {\\n        stringify: function stringify(it) {\\n          var args = [it];\\n          var i = 1;\\n          var replacer, $replacer;\\n\\n          while (arguments.length > i) {\\n            args.push(arguments[i++]);\\n          }\\n\\n          $replacer = replacer = args[1];\\n          if (!isObject(replacer) && it === undefined || isSymbol(it)) return;\\n          if (!isArray(replacer)) replacer = function replacer(key, value) {\\n            if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\\n            if (!isSymbol(value)) return value;\\n          };\\n          args[1] = replacer;\\n          return _stringify.apply($JSON, args);\\n        }\\n      });\\n      $Symbol[PROTOTYPE][TO_PRIMITIVE] || __w_pdfjs_require__(15)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\\n      setToStringTag($Symbol, 'Symbol');\\n      setToStringTag(Math, 'Math', true);\\n      setToStringTag(global.JSON, 'JSON', true);\\n      /***/\\n    },\\n    /* 133 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      exports.f = __w_pdfjs_require__(35);\\n      /***/\\n    },\\n    /* 134 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var global = __w_pdfjs_require__(13);\\n\\n      var core = __w_pdfjs_require__(14);\\n\\n      var LIBRARY = __w_pdfjs_require__(37);\\n\\n      var wksExt = __w_pdfjs_require__(133);\\n\\n      var defineProperty = __w_pdfjs_require__(16).f;\\n\\n      module.exports = function (name) {\\n        var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\\n        if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, {\\n          value: wksExt.f(name)\\n        });\\n      };\\n      /***/\\n\\n    },\\n    /* 135 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var getKeys = __w_pdfjs_require__(59);\\n\\n      var gOPS = __w_pdfjs_require__(77);\\n\\n      var pIE = __w_pdfjs_require__(78);\\n\\n      module.exports = function (it) {\\n        var result = getKeys(it);\\n        var getSymbols = gOPS.f;\\n\\n        if (getSymbols) {\\n          var symbols = getSymbols(it);\\n          var isEnum = pIE.f;\\n          var i = 0;\\n          var key;\\n\\n          while (symbols.length > i) {\\n            if (isEnum.call(it, key = symbols[i++])) result.push(key);\\n          }\\n        }\\n\\n        return result;\\n      };\\n      /***/\\n\\n    },\\n    /* 136 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      var toIObject = __w_pdfjs_require__(47);\\n\\n      var gOPN = __w_pdfjs_require__(137).f;\\n\\n      var toString = {}.toString;\\n      var windowNames = (typeof window === \\\"undefined\\\" ? \\\"undefined\\\" : _typeof(window)) == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];\\n\\n      var getWindowNames = function getWindowNames(it) {\\n        try {\\n          return gOPN(it);\\n        } catch (e) {\\n          return windowNames.slice();\\n        }\\n      };\\n\\n      module.exports.f = function getOwnPropertyNames(it) {\\n        return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\\n      };\\n      /***/\\n\\n    },\\n    /* 137 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $keys = __w_pdfjs_require__(60);\\n\\n      var hiddenKeys = __w_pdfjs_require__(62).concat('length', 'prototype');\\n\\n      exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\\n        return $keys(O, hiddenKeys);\\n      };\\n      /***/\\n\\n    },\\n    /* 138 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(139);\\n\\n      module.exports = __w_pdfjs_require__(14).String.padStart;\\n      /***/\\n    },\\n    /* 139 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var $pad = __w_pdfjs_require__(140);\\n\\n      var userAgent = __w_pdfjs_require__(100);\\n\\n      $export($export.P + $export.F * /Version\\\\/10\\\\.\\\\d+(\\\\.\\\\d+)? Safari\\\\//.test(userAgent), 'String', {\\n        padStart: function padStart(maxLength) {\\n          return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\\n        }\\n      });\\n      /***/\\n    },\\n    /* 140 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var toLength = __w_pdfjs_require__(30);\\n\\n      var repeat = __w_pdfjs_require__(141);\\n\\n      var defined = __w_pdfjs_require__(38);\\n\\n      module.exports = function (that, maxLength, fillString, left) {\\n        var S = String(defined(that));\\n        var stringLength = S.length;\\n        var fillStr = fillString === undefined ? ' ' : String(fillString);\\n        var intMaxLength = toLength(maxLength);\\n        if (intMaxLength <= stringLength || fillStr == '') return S;\\n        var fillLen = intMaxLength - stringLength;\\n        var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\\n        if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\\n        return left ? stringFiller + S : S + stringFiller;\\n      };\\n      /***/\\n\\n    },\\n    /* 141 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var toInteger = __w_pdfjs_require__(31);\\n\\n      var defined = __w_pdfjs_require__(38);\\n\\n      module.exports = function repeat(count) {\\n        var str = String(defined(this));\\n        var res = '';\\n        var n = toInteger(count);\\n        if (n < 0 || n == Infinity) throw RangeError(\\\"Count can't be negative\\\");\\n\\n        for (; n > 0; (n >>>= 1) && (str += str)) {\\n          if (n & 1) res += str;\\n        }\\n\\n        return res;\\n      };\\n      /***/\\n\\n    },\\n    /* 142 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(143);\\n\\n      module.exports = __w_pdfjs_require__(14).String.padEnd;\\n      /***/\\n    },\\n    /* 143 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var $pad = __w_pdfjs_require__(140);\\n\\n      var userAgent = __w_pdfjs_require__(100);\\n\\n      $export($export.P + $export.F * /Version\\\\/10\\\\.\\\\d+(\\\\.\\\\d+)? Safari\\\\//.test(userAgent), 'String', {\\n        padEnd: function padEnd(maxLength) {\\n          return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\\n        }\\n      });\\n      /***/\\n    },\\n    /* 144 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      __w_pdfjs_require__(145);\\n\\n      module.exports = __w_pdfjs_require__(14).Object.values;\\n      /***/\\n    },\\n    /* 145 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var $export = __w_pdfjs_require__(12);\\n\\n      var $values = __w_pdfjs_require__(146)(false);\\n\\n      $export($export.S, 'Object', {\\n        values: function values(it) {\\n          return $values(it);\\n        }\\n      });\\n      /***/\\n    },\\n    /* 146 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      var getKeys = __w_pdfjs_require__(59);\\n\\n      var toIObject = __w_pdfjs_require__(47);\\n\\n      var isEnum = __w_pdfjs_require__(78).f;\\n\\n      module.exports = function (isEntries) {\\n        return function (it) {\\n          var O = toIObject(it);\\n          var keys = getKeys(O);\\n          var length = keys.length;\\n          var i = 0;\\n          var result = [];\\n          var key;\\n\\n          while (length > i) {\\n            if (isEnum.call(O, key = keys[i++])) {\\n              result.push(isEntries ? [key, O[key]] : O[key]);\\n            }\\n          }\\n\\n          return result;\\n        };\\n      };\\n      /***/\\n\\n    },\\n    /* 147 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      {\\n        var isReadableStreamSupported = false;\\n\\n        if (typeof ReadableStream !== 'undefined') {\\n          try {\\n            new ReadableStream({\\n              start: function start(controller) {\\n                controller.close();\\n              }\\n            });\\n            isReadableStreamSupported = true;\\n          } catch (e) {}\\n        }\\n\\n        if (isReadableStreamSupported) {\\n          exports.ReadableStream = ReadableStream;\\n        } else {\\n          exports.ReadableStream = __w_pdfjs_require__(148).ReadableStream;\\n        }\\n      }\\n      /***/\\n    },\\n    /* 148 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof2(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof2 = function _typeof2(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof2 = function _typeof2(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof2(obj);\\n      }\\n\\n      (function (e, a) {\\n        for (var i in a) {\\n          e[i] = a[i];\\n        }\\n      })(exports, function (modules) {\\n        var installedModules = {};\\n\\n        function __w_pdfjs_require__(moduleId) {\\n          if (installedModules[moduleId]) return installedModules[moduleId].exports;\\n          var module = installedModules[moduleId] = {\\n            i: moduleId,\\n            l: false,\\n            exports: {}\\n          };\\n          modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\\n          module.l = true;\\n          return module.exports;\\n        }\\n\\n        __w_pdfjs_require__.m = modules;\\n        __w_pdfjs_require__.c = installedModules;\\n\\n        __w_pdfjs_require__.i = function (value) {\\n          return value;\\n        };\\n\\n        __w_pdfjs_require__.d = function (exports, name, getter) {\\n          if (!__w_pdfjs_require__.o(exports, name)) {\\n            Object.defineProperty(exports, name, {\\n              configurable: false,\\n              enumerable: true,\\n              get: getter\\n            });\\n          }\\n        };\\n\\n        __w_pdfjs_require__.n = function (module) {\\n          var getter = module && module.__esModule ? function getDefault() {\\n            return module['default'];\\n          } : function getModuleExports() {\\n            return module;\\n          };\\n\\n          __w_pdfjs_require__.d(getter, 'a', getter);\\n\\n          return getter;\\n        };\\n\\n        __w_pdfjs_require__.o = function (object, property) {\\n          return Object.prototype.hasOwnProperty.call(object, property);\\n        };\\n\\n        __w_pdfjs_require__.p = \\\"\\\";\\n        return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\\n      }([function (module, exports, __w_pdfjs_require__) {\\n        \\\"use strict\\\";\\n\\n        var _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\n          return _typeof2(obj);\\n        } : function (obj) {\\n          return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : _typeof2(obj);\\n        };\\n\\n        var _require = __w_pdfjs_require__(1),\\n            assert = _require.assert;\\n\\n        function IsPropertyKey(argument) {\\n          return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\\n        }\\n\\n        exports.typeIsObject = function (x) {\\n          return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\\n        };\\n\\n        exports.createDataProperty = function (o, p, v) {\\n          assert(exports.typeIsObject(o));\\n          Object.defineProperty(o, p, {\\n            value: v,\\n            writable: true,\\n            enumerable: true,\\n            configurable: true\\n          });\\n        };\\n\\n        exports.createArrayFromList = function (elements) {\\n          return elements.slice();\\n        };\\n\\n        exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\\n          new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\\n        };\\n\\n        exports.CreateIterResultObject = function (value, done) {\\n          assert(typeof done === 'boolean');\\n          var obj = {};\\n          Object.defineProperty(obj, 'value', {\\n            value: value,\\n            enumerable: true,\\n            writable: true,\\n            configurable: true\\n          });\\n          Object.defineProperty(obj, 'done', {\\n            value: done,\\n            enumerable: true,\\n            writable: true,\\n            configurable: true\\n          });\\n          return obj;\\n        };\\n\\n        exports.IsFiniteNonNegativeNumber = function (v) {\\n          if (Number.isNaN(v)) {\\n            return false;\\n          }\\n\\n          if (v === Infinity) {\\n            return false;\\n          }\\n\\n          if (v < 0) {\\n            return false;\\n          }\\n\\n          return true;\\n        };\\n\\n        function Call(F, V, args) {\\n          if (typeof F !== 'function') {\\n            throw new TypeError('Argument is not a function');\\n          }\\n\\n          return Function.prototype.apply.call(F, V, args);\\n        }\\n\\n        exports.InvokeOrNoop = function (O, P, args) {\\n          assert(O !== undefined);\\n          assert(IsPropertyKey(P));\\n          assert(Array.isArray(args));\\n          var method = O[P];\\n\\n          if (method === undefined) {\\n            return undefined;\\n          }\\n\\n          return Call(method, O, args);\\n        };\\n\\n        exports.PromiseInvokeOrNoop = function (O, P, args) {\\n          assert(O !== undefined);\\n          assert(IsPropertyKey(P));\\n          assert(Array.isArray(args));\\n\\n          try {\\n            return Promise.resolve(exports.InvokeOrNoop(O, P, args));\\n          } catch (returnValueE) {\\n            return Promise.reject(returnValueE);\\n          }\\n        };\\n\\n        exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\\n          assert(O !== undefined);\\n          assert(IsPropertyKey(P));\\n          assert(Array.isArray(args));\\n          assert(Array.isArray(argsF));\\n          var method = void 0;\\n\\n          try {\\n            method = O[P];\\n          } catch (methodE) {\\n            return Promise.reject(methodE);\\n          }\\n\\n          if (method === undefined) {\\n            return F.apply(null, argsF);\\n          }\\n\\n          try {\\n            return Promise.resolve(Call(method, O, args));\\n          } catch (e) {\\n            return Promise.reject(e);\\n          }\\n        };\\n\\n        exports.TransferArrayBuffer = function (O) {\\n          return O.slice();\\n        };\\n\\n        exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\\n          highWaterMark = Number(highWaterMark);\\n\\n          if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\\n            throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\\n          }\\n\\n          return highWaterMark;\\n        };\\n\\n        exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\\n          if (size !== undefined && typeof size !== 'function') {\\n            throw new TypeError('size property of a queuing strategy must be a function');\\n          }\\n\\n          highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\\n          return {\\n            size: size,\\n            highWaterMark: highWaterMark\\n          };\\n        };\\n      }, function (module, exports, __w_pdfjs_require__) {\\n        \\\"use strict\\\";\\n\\n        function rethrowAssertionErrorRejection(e) {\\n          if (e && e.constructor === AssertionError) {\\n            setTimeout(function () {\\n              throw e;\\n            }, 0);\\n          }\\n        }\\n\\n        function AssertionError(message) {\\n          this.name = 'AssertionError';\\n          this.message = message || '';\\n          this.stack = new Error().stack;\\n        }\\n\\n        AssertionError.prototype = Object.create(Error.prototype);\\n        AssertionError.prototype.constructor = AssertionError;\\n\\n        function assert(value, message) {\\n          if (!value) {\\n            throw new AssertionError(message);\\n          }\\n        }\\n\\n        module.exports = {\\n          rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\\n          AssertionError: AssertionError,\\n          assert: assert\\n        };\\n      }, function (module, exports, __w_pdfjs_require__) {\\n        \\\"use strict\\\";\\n\\n        var _createClass = function () {\\n          function defineProperties(target, props) {\\n            for (var i = 0; i < props.length; i++) {\\n              var descriptor = props[i];\\n              descriptor.enumerable = descriptor.enumerable || false;\\n              descriptor.configurable = true;\\n              if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n              Object.defineProperty(target, descriptor.key, descriptor);\\n            }\\n          }\\n\\n          return function (Constructor, protoProps, staticProps) {\\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n            if (staticProps) defineProperties(Constructor, staticProps);\\n            return Constructor;\\n          };\\n        }();\\n\\n        function _classCallCheck(instance, Constructor) {\\n          if (!(instance instanceof Constructor)) {\\n            throw new TypeError(\\\"Cannot call a class as a function\\\");\\n          }\\n        }\\n\\n        var _require = __w_pdfjs_require__(0),\\n            InvokeOrNoop = _require.InvokeOrNoop,\\n            PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\\n            ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\\n            typeIsObject = _require.typeIsObject;\\n\\n        var _require2 = __w_pdfjs_require__(1),\\n            assert = _require2.assert,\\n            rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\\n\\n        var _require3 = __w_pdfjs_require__(3),\\n            DequeueValue = _require3.DequeueValue,\\n            EnqueueValueWithSize = _require3.EnqueueValueWithSize,\\n            PeekQueueValue = _require3.PeekQueueValue,\\n            ResetQueue = _require3.ResetQueue;\\n\\n        var WritableStream = function () {\\n          function WritableStream() {\\n            var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n            var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\n                size = _ref.size,\\n                _ref$highWaterMark = _ref.highWaterMark,\\n                highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\\n\\n            _classCallCheck(this, WritableStream);\\n\\n            this._state = 'writable';\\n            this._storedError = undefined;\\n            this._writer = undefined;\\n            this._writableStreamController = undefined;\\n            this._writeRequests = [];\\n            this._inFlightWriteRequest = undefined;\\n            this._closeRequest = undefined;\\n            this._inFlightCloseRequest = undefined;\\n            this._pendingAbortRequest = undefined;\\n            this._backpressure = false;\\n            var type = underlyingSink.type;\\n\\n            if (type !== undefined) {\\n              throw new RangeError('Invalid type is specified');\\n            }\\n\\n            this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\\n\\n            this._writableStreamController.__startSteps();\\n          }\\n\\n          _createClass(WritableStream, [{\\n            key: 'abort',\\n            value: function abort(reason) {\\n              if (IsWritableStream(this) === false) {\\n                return Promise.reject(streamBrandCheckException('abort'));\\n              }\\n\\n              if (IsWritableStreamLocked(this) === true) {\\n                return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\\n              }\\n\\n              return WritableStreamAbort(this, reason);\\n            }\\n          }, {\\n            key: 'getWriter',\\n            value: function getWriter() {\\n              if (IsWritableStream(this) === false) {\\n                throw streamBrandCheckException('getWriter');\\n              }\\n\\n              return AcquireWritableStreamDefaultWriter(this);\\n            }\\n          }, {\\n            key: 'locked',\\n            get: function get() {\\n              if (IsWritableStream(this) === false) {\\n                throw streamBrandCheckException('locked');\\n              }\\n\\n              return IsWritableStreamLocked(this);\\n            }\\n          }]);\\n\\n          return WritableStream;\\n        }();\\n\\n        module.exports = {\\n          AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\\n          IsWritableStream: IsWritableStream,\\n          IsWritableStreamLocked: IsWritableStreamLocked,\\n          WritableStream: WritableStream,\\n          WritableStreamAbort: WritableStreamAbort,\\n          WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\\n          WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\\n          WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\\n          WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\\n          WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\\n        };\\n\\n        function AcquireWritableStreamDefaultWriter(stream) {\\n          return new WritableStreamDefaultWriter(stream);\\n        }\\n\\n        function IsWritableStream(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function IsWritableStreamLocked(stream) {\\n          assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\\n\\n          if (stream._writer === undefined) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function WritableStreamAbort(stream, reason) {\\n          var state = stream._state;\\n\\n          if (state === 'closed') {\\n            return Promise.resolve(undefined);\\n          }\\n\\n          if (state === 'errored') {\\n            return Promise.reject(stream._storedError);\\n          }\\n\\n          var error = new TypeError('Requested to abort');\\n\\n          if (stream._pendingAbortRequest !== undefined) {\\n            return Promise.reject(error);\\n          }\\n\\n          assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\\n          var wasAlreadyErroring = false;\\n\\n          if (state === 'erroring') {\\n            wasAlreadyErroring = true;\\n            reason = undefined;\\n          }\\n\\n          var promise = new Promise(function (resolve, reject) {\\n            stream._pendingAbortRequest = {\\n              _resolve: resolve,\\n              _reject: reject,\\n              _reason: reason,\\n              _wasAlreadyErroring: wasAlreadyErroring\\n            };\\n          });\\n\\n          if (wasAlreadyErroring === false) {\\n            WritableStreamStartErroring(stream, error);\\n          }\\n\\n          return promise;\\n        }\\n\\n        function WritableStreamAddWriteRequest(stream) {\\n          assert(IsWritableStreamLocked(stream) === true);\\n          assert(stream._state === 'writable');\\n          var promise = new Promise(function (resolve, reject) {\\n            var writeRequest = {\\n              _resolve: resolve,\\n              _reject: reject\\n            };\\n\\n            stream._writeRequests.push(writeRequest);\\n          });\\n          return promise;\\n        }\\n\\n        function WritableStreamDealWithRejection(stream, error) {\\n          var state = stream._state;\\n\\n          if (state === 'writable') {\\n            WritableStreamStartErroring(stream, error);\\n            return;\\n          }\\n\\n          assert(state === 'erroring');\\n          WritableStreamFinishErroring(stream);\\n        }\\n\\n        function WritableStreamStartErroring(stream, reason) {\\n          assert(stream._storedError === undefined, 'stream._storedError === undefined');\\n          assert(stream._state === 'writable', 'state must be writable');\\n          var controller = stream._writableStreamController;\\n          assert(controller !== undefined, 'controller must not be undefined');\\n          stream._state = 'erroring';\\n          stream._storedError = reason;\\n          var writer = stream._writer;\\n\\n          if (writer !== undefined) {\\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\\n          }\\n\\n          if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\\n            WritableStreamFinishErroring(stream);\\n          }\\n        }\\n\\n        function WritableStreamFinishErroring(stream) {\\n          assert(stream._state === 'erroring', 'stream._state === erroring');\\n          assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\\n          stream._state = 'errored';\\n\\n          stream._writableStreamController.__errorSteps();\\n\\n          var storedError = stream._storedError;\\n\\n          for (var i = 0; i < stream._writeRequests.length; i++) {\\n            var writeRequest = stream._writeRequests[i];\\n\\n            writeRequest._reject(storedError);\\n          }\\n\\n          stream._writeRequests = [];\\n\\n          if (stream._pendingAbortRequest === undefined) {\\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\n            return;\\n          }\\n\\n          var abortRequest = stream._pendingAbortRequest;\\n          stream._pendingAbortRequest = undefined;\\n\\n          if (abortRequest._wasAlreadyErroring === true) {\\n            abortRequest._reject(storedError);\\n\\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\n            return;\\n          }\\n\\n          var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\\n\\n          promise.then(function () {\\n            abortRequest._resolve();\\n\\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\n          }, function (reason) {\\n            abortRequest._reject(reason);\\n\\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\n          });\\n        }\\n\\n        function WritableStreamFinishInFlightWrite(stream) {\\n          assert(stream._inFlightWriteRequest !== undefined);\\n\\n          stream._inFlightWriteRequest._resolve(undefined);\\n\\n          stream._inFlightWriteRequest = undefined;\\n        }\\n\\n        function WritableStreamFinishInFlightWriteWithError(stream, error) {\\n          assert(stream._inFlightWriteRequest !== undefined);\\n\\n          stream._inFlightWriteRequest._reject(error);\\n\\n          stream._inFlightWriteRequest = undefined;\\n          assert(stream._state === 'writable' || stream._state === 'erroring');\\n          WritableStreamDealWithRejection(stream, error);\\n        }\\n\\n        function WritableStreamFinishInFlightClose(stream) {\\n          assert(stream._inFlightCloseRequest !== undefined);\\n\\n          stream._inFlightCloseRequest._resolve(undefined);\\n\\n          stream._inFlightCloseRequest = undefined;\\n          var state = stream._state;\\n          assert(state === 'writable' || state === 'erroring');\\n\\n          if (state === 'erroring') {\\n            stream._storedError = undefined;\\n\\n            if (stream._pendingAbortRequest !== undefined) {\\n              stream._pendingAbortRequest._resolve();\\n\\n              stream._pendingAbortRequest = undefined;\\n            }\\n          }\\n\\n          stream._state = 'closed';\\n          var writer = stream._writer;\\n\\n          if (writer !== undefined) {\\n            defaultWriterClosedPromiseResolve(writer);\\n          }\\n\\n          assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\\n          assert(stream._storedError === undefined, 'stream._storedError === undefined');\\n        }\\n\\n        function WritableStreamFinishInFlightCloseWithError(stream, error) {\\n          assert(stream._inFlightCloseRequest !== undefined);\\n\\n          stream._inFlightCloseRequest._reject(error);\\n\\n          stream._inFlightCloseRequest = undefined;\\n          assert(stream._state === 'writable' || stream._state === 'erroring');\\n\\n          if (stream._pendingAbortRequest !== undefined) {\\n            stream._pendingAbortRequest._reject(error);\\n\\n            stream._pendingAbortRequest = undefined;\\n          }\\n\\n          WritableStreamDealWithRejection(stream, error);\\n        }\\n\\n        function WritableStreamCloseQueuedOrInFlight(stream) {\\n          if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function WritableStreamHasOperationMarkedInFlight(stream) {\\n          if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function WritableStreamMarkCloseRequestInFlight(stream) {\\n          assert(stream._inFlightCloseRequest === undefined);\\n          assert(stream._closeRequest !== undefined);\\n          stream._inFlightCloseRequest = stream._closeRequest;\\n          stream._closeRequest = undefined;\\n        }\\n\\n        function WritableStreamMarkFirstWriteRequestInFlight(stream) {\\n          assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\\n          assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\\n          stream._inFlightWriteRequest = stream._writeRequests.shift();\\n        }\\n\\n        function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\\n          assert(stream._state === 'errored', '_stream_.[[state]] is `\\\"errored\\\"`');\\n\\n          if (stream._closeRequest !== undefined) {\\n            assert(stream._inFlightCloseRequest === undefined);\\n\\n            stream._closeRequest._reject(stream._storedError);\\n\\n            stream._closeRequest = undefined;\\n          }\\n\\n          var writer = stream._writer;\\n\\n          if (writer !== undefined) {\\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\\n\\n            writer._closedPromise.catch(function () {});\\n          }\\n        }\\n\\n        function WritableStreamUpdateBackpressure(stream, backpressure) {\\n          assert(stream._state === 'writable');\\n          assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\\n          var writer = stream._writer;\\n\\n          if (writer !== undefined && backpressure !== stream._backpressure) {\\n            if (backpressure === true) {\\n              defaultWriterReadyPromiseReset(writer);\\n            } else {\\n              assert(backpressure === false);\\n              defaultWriterReadyPromiseResolve(writer);\\n            }\\n          }\\n\\n          stream._backpressure = backpressure;\\n        }\\n\\n        var WritableStreamDefaultWriter = function () {\\n          function WritableStreamDefaultWriter(stream) {\\n            _classCallCheck(this, WritableStreamDefaultWriter);\\n\\n            if (IsWritableStream(stream) === false) {\\n              throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\\n            }\\n\\n            if (IsWritableStreamLocked(stream) === true) {\\n              throw new TypeError('This stream has already been locked for exclusive writing by another writer');\\n            }\\n\\n            this._ownerWritableStream = stream;\\n            stream._writer = this;\\n            var state = stream._state;\\n\\n            if (state === 'writable') {\\n              if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\\n                defaultWriterReadyPromiseInitialize(this);\\n              } else {\\n                defaultWriterReadyPromiseInitializeAsResolved(this);\\n              }\\n\\n              defaultWriterClosedPromiseInitialize(this);\\n            } else if (state === 'erroring') {\\n              defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\\n\\n              this._readyPromise.catch(function () {});\\n\\n              defaultWriterClosedPromiseInitialize(this);\\n            } else if (state === 'closed') {\\n              defaultWriterReadyPromiseInitializeAsResolved(this);\\n              defaultWriterClosedPromiseInitializeAsResolved(this);\\n            } else {\\n              assert(state === 'errored', 'state must be errored');\\n              var storedError = stream._storedError;\\n              defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\\n\\n              this._readyPromise.catch(function () {});\\n\\n              defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\\n\\n              this._closedPromise.catch(function () {});\\n            }\\n          }\\n\\n          _createClass(WritableStreamDefaultWriter, [{\\n            key: 'abort',\\n            value: function abort(reason) {\\n              if (IsWritableStreamDefaultWriter(this) === false) {\\n                return Promise.reject(defaultWriterBrandCheckException('abort'));\\n              }\\n\\n              if (this._ownerWritableStream === undefined) {\\n                return Promise.reject(defaultWriterLockException('abort'));\\n              }\\n\\n              return WritableStreamDefaultWriterAbort(this, reason);\\n            }\\n          }, {\\n            key: 'close',\\n            value: function close() {\\n              if (IsWritableStreamDefaultWriter(this) === false) {\\n                return Promise.reject(defaultWriterBrandCheckException('close'));\\n              }\\n\\n              var stream = this._ownerWritableStream;\\n\\n              if (stream === undefined) {\\n                return Promise.reject(defaultWriterLockException('close'));\\n              }\\n\\n              if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\\n                return Promise.reject(new TypeError('cannot close an already-closing stream'));\\n              }\\n\\n              return WritableStreamDefaultWriterClose(this);\\n            }\\n          }, {\\n            key: 'releaseLock',\\n            value: function releaseLock() {\\n              if (IsWritableStreamDefaultWriter(this) === false) {\\n                throw defaultWriterBrandCheckException('releaseLock');\\n              }\\n\\n              var stream = this._ownerWritableStream;\\n\\n              if (stream === undefined) {\\n                return;\\n              }\\n\\n              assert(stream._writer !== undefined);\\n              WritableStreamDefaultWriterRelease(this);\\n            }\\n          }, {\\n            key: 'write',\\n            value: function write(chunk) {\\n              if (IsWritableStreamDefaultWriter(this) === false) {\\n                return Promise.reject(defaultWriterBrandCheckException('write'));\\n              }\\n\\n              if (this._ownerWritableStream === undefined) {\\n                return Promise.reject(defaultWriterLockException('write to'));\\n              }\\n\\n              return WritableStreamDefaultWriterWrite(this, chunk);\\n            }\\n          }, {\\n            key: 'closed',\\n            get: function get() {\\n              if (IsWritableStreamDefaultWriter(this) === false) {\\n                return Promise.reject(defaultWriterBrandCheckException('closed'));\\n              }\\n\\n              return this._closedPromise;\\n            }\\n          }, {\\n            key: 'desiredSize',\\n            get: function get() {\\n              if (IsWritableStreamDefaultWriter(this) === false) {\\n                throw defaultWriterBrandCheckException('desiredSize');\\n              }\\n\\n              if (this._ownerWritableStream === undefined) {\\n                throw defaultWriterLockException('desiredSize');\\n              }\\n\\n              return WritableStreamDefaultWriterGetDesiredSize(this);\\n            }\\n          }, {\\n            key: 'ready',\\n            get: function get() {\\n              if (IsWritableStreamDefaultWriter(this) === false) {\\n                return Promise.reject(defaultWriterBrandCheckException('ready'));\\n              }\\n\\n              return this._readyPromise;\\n            }\\n          }]);\\n\\n          return WritableStreamDefaultWriter;\\n        }();\\n\\n        function IsWritableStreamDefaultWriter(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function WritableStreamDefaultWriterAbort(writer, reason) {\\n          var stream = writer._ownerWritableStream;\\n          assert(stream !== undefined);\\n          return WritableStreamAbort(stream, reason);\\n        }\\n\\n        function WritableStreamDefaultWriterClose(writer) {\\n          var stream = writer._ownerWritableStream;\\n          assert(stream !== undefined);\\n          var state = stream._state;\\n\\n          if (state === 'closed' || state === 'errored') {\\n            return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\\n          }\\n\\n          assert(state === 'writable' || state === 'erroring');\\n          assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\\n          var promise = new Promise(function (resolve, reject) {\\n            var closeRequest = {\\n              _resolve: resolve,\\n              _reject: reject\\n            };\\n            stream._closeRequest = closeRequest;\\n          });\\n\\n          if (stream._backpressure === true && state === 'writable') {\\n            defaultWriterReadyPromiseResolve(writer);\\n          }\\n\\n          WritableStreamDefaultControllerClose(stream._writableStreamController);\\n          return promise;\\n        }\\n\\n        function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\\n          var stream = writer._ownerWritableStream;\\n          assert(stream !== undefined);\\n          var state = stream._state;\\n\\n          if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\\n            return Promise.resolve();\\n          }\\n\\n          if (state === 'errored') {\\n            return Promise.reject(stream._storedError);\\n          }\\n\\n          assert(state === 'writable' || state === 'erroring');\\n          return WritableStreamDefaultWriterClose(writer);\\n        }\\n\\n        function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\\n          if (writer._closedPromiseState === 'pending') {\\n            defaultWriterClosedPromiseReject(writer, error);\\n          } else {\\n            defaultWriterClosedPromiseResetToRejected(writer, error);\\n          }\\n\\n          writer._closedPromise.catch(function () {});\\n        }\\n\\n        function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\\n          if (writer._readyPromiseState === 'pending') {\\n            defaultWriterReadyPromiseReject(writer, error);\\n          } else {\\n            defaultWriterReadyPromiseResetToRejected(writer, error);\\n          }\\n\\n          writer._readyPromise.catch(function () {});\\n        }\\n\\n        function WritableStreamDefaultWriterGetDesiredSize(writer) {\\n          var stream = writer._ownerWritableStream;\\n          var state = stream._state;\\n\\n          if (state === 'errored' || state === 'erroring') {\\n            return null;\\n          }\\n\\n          if (state === 'closed') {\\n            return 0;\\n          }\\n\\n          return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\\n        }\\n\\n        function WritableStreamDefaultWriterRelease(writer) {\\n          var stream = writer._ownerWritableStream;\\n          assert(stream !== undefined);\\n          assert(stream._writer === writer);\\n          var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\\\'s closedness');\\n          WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\\n          WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\\n          stream._writer = undefined;\\n          writer._ownerWritableStream = undefined;\\n        }\\n\\n        function WritableStreamDefaultWriterWrite(writer, chunk) {\\n          var stream = writer._ownerWritableStream;\\n          assert(stream !== undefined);\\n          var controller = stream._writableStreamController;\\n          var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\\n\\n          if (stream !== writer._ownerWritableStream) {\\n            return Promise.reject(defaultWriterLockException('write to'));\\n          }\\n\\n          var state = stream._state;\\n\\n          if (state === 'errored') {\\n            return Promise.reject(stream._storedError);\\n          }\\n\\n          if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\\n            return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\\n          }\\n\\n          if (state === 'erroring') {\\n            return Promise.reject(stream._storedError);\\n          }\\n\\n          assert(state === 'writable');\\n          var promise = WritableStreamAddWriteRequest(stream);\\n          WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\\n          return promise;\\n        }\\n\\n        var WritableStreamDefaultController = function () {\\n          function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\\n            _classCallCheck(this, WritableStreamDefaultController);\\n\\n            if (IsWritableStream(stream) === false) {\\n              throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\\n            }\\n\\n            if (stream._writableStreamController !== undefined) {\\n              throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\\n            }\\n\\n            this._controlledWritableStream = stream;\\n            this._underlyingSink = underlyingSink;\\n            this._queue = undefined;\\n            this._queueTotalSize = undefined;\\n            ResetQueue(this);\\n            this._started = false;\\n            var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\\n            this._strategySize = normalizedStrategy.size;\\n            this._strategyHWM = normalizedStrategy.highWaterMark;\\n            var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\\n            WritableStreamUpdateBackpressure(stream, backpressure);\\n          }\\n\\n          _createClass(WritableStreamDefaultController, [{\\n            key: 'error',\\n            value: function error(e) {\\n              if (IsWritableStreamDefaultController(this) === false) {\\n                throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\\n              }\\n\\n              var state = this._controlledWritableStream._state;\\n\\n              if (state !== 'writable') {\\n                return;\\n              }\\n\\n              WritableStreamDefaultControllerError(this, e);\\n            }\\n          }, {\\n            key: '__abortSteps',\\n            value: function __abortSteps(reason) {\\n              return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\\n            }\\n          }, {\\n            key: '__errorSteps',\\n            value: function __errorSteps() {\\n              ResetQueue(this);\\n            }\\n          }, {\\n            key: '__startSteps',\\n            value: function __startSteps() {\\n              var _this = this;\\n\\n              var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\\n              var stream = this._controlledWritableStream;\\n              Promise.resolve(startResult).then(function () {\\n                assert(stream._state === 'writable' || stream._state === 'erroring');\\n                _this._started = true;\\n                WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\\n              }, function (r) {\\n                assert(stream._state === 'writable' || stream._state === 'erroring');\\n                _this._started = true;\\n                WritableStreamDealWithRejection(stream, r);\\n              }).catch(rethrowAssertionErrorRejection);\\n            }\\n          }]);\\n\\n          return WritableStreamDefaultController;\\n        }();\\n\\n        function WritableStreamDefaultControllerClose(controller) {\\n          EnqueueValueWithSize(controller, 'close', 0);\\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\n        }\\n\\n        function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\\n          var strategySize = controller._strategySize;\\n\\n          if (strategySize === undefined) {\\n            return 1;\\n          }\\n\\n          try {\\n            return strategySize(chunk);\\n          } catch (chunkSizeE) {\\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\\n            return 1;\\n          }\\n        }\\n\\n        function WritableStreamDefaultControllerGetDesiredSize(controller) {\\n          return controller._strategyHWM - controller._queueTotalSize;\\n        }\\n\\n        function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\\n          var writeRecord = {\\n            chunk: chunk\\n          };\\n\\n          try {\\n            EnqueueValueWithSize(controller, writeRecord, chunkSize);\\n          } catch (enqueueE) {\\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\\n            return;\\n          }\\n\\n          var stream = controller._controlledWritableStream;\\n\\n          if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\\n            var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\\n            WritableStreamUpdateBackpressure(stream, backpressure);\\n          }\\n\\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\n        }\\n\\n        function IsWritableStreamDefaultController(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\\n          var stream = controller._controlledWritableStream;\\n\\n          if (controller._started === false) {\\n            return;\\n          }\\n\\n          if (stream._inFlightWriteRequest !== undefined) {\\n            return;\\n          }\\n\\n          var state = stream._state;\\n\\n          if (state === 'closed' || state === 'errored') {\\n            return;\\n          }\\n\\n          if (state === 'erroring') {\\n            WritableStreamFinishErroring(stream);\\n            return;\\n          }\\n\\n          if (controller._queue.length === 0) {\\n            return;\\n          }\\n\\n          var writeRecord = PeekQueueValue(controller);\\n\\n          if (writeRecord === 'close') {\\n            WritableStreamDefaultControllerProcessClose(controller);\\n          } else {\\n            WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\\n          }\\n        }\\n\\n        function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\\n          if (controller._controlledWritableStream._state === 'writable') {\\n            WritableStreamDefaultControllerError(controller, error);\\n          }\\n        }\\n\\n        function WritableStreamDefaultControllerProcessClose(controller) {\\n          var stream = controller._controlledWritableStream;\\n          WritableStreamMarkCloseRequestInFlight(stream);\\n          DequeueValue(controller);\\n          assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\\n          var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\\n          sinkClosePromise.then(function () {\\n            WritableStreamFinishInFlightClose(stream);\\n          }, function (reason) {\\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\\n          }).catch(rethrowAssertionErrorRejection);\\n        }\\n\\n        function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\\n          var stream = controller._controlledWritableStream;\\n          WritableStreamMarkFirstWriteRequestInFlight(stream);\\n          var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\\n          sinkWritePromise.then(function () {\\n            WritableStreamFinishInFlightWrite(stream);\\n            var state = stream._state;\\n            assert(state === 'writable' || state === 'erroring');\\n            DequeueValue(controller);\\n\\n            if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\\n              var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\\n              WritableStreamUpdateBackpressure(stream, backpressure);\\n            }\\n\\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\n          }, function (reason) {\\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\\n          }).catch(rethrowAssertionErrorRejection);\\n        }\\n\\n        function WritableStreamDefaultControllerGetBackpressure(controller) {\\n          var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\\n          return desiredSize <= 0;\\n        }\\n\\n        function WritableStreamDefaultControllerError(controller, error) {\\n          var stream = controller._controlledWritableStream;\\n          assert(stream._state === 'writable');\\n          WritableStreamStartErroring(stream, error);\\n        }\\n\\n        function streamBrandCheckException(name) {\\n          return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\\n        }\\n\\n        function defaultWriterBrandCheckException(name) {\\n          return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\\n        }\\n\\n        function defaultWriterLockException(name) {\\n          return new TypeError('Cannot ' + name + ' a stream using a released writer');\\n        }\\n\\n        function defaultWriterClosedPromiseInitialize(writer) {\\n          writer._closedPromise = new Promise(function (resolve, reject) {\\n            writer._closedPromise_resolve = resolve;\\n            writer._closedPromise_reject = reject;\\n            writer._closedPromiseState = 'pending';\\n          });\\n        }\\n\\n        function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\\n          writer._closedPromise = Promise.reject(reason);\\n          writer._closedPromise_resolve = undefined;\\n          writer._closedPromise_reject = undefined;\\n          writer._closedPromiseState = 'rejected';\\n        }\\n\\n        function defaultWriterClosedPromiseInitializeAsResolved(writer) {\\n          writer._closedPromise = Promise.resolve(undefined);\\n          writer._closedPromise_resolve = undefined;\\n          writer._closedPromise_reject = undefined;\\n          writer._closedPromiseState = 'resolved';\\n        }\\n\\n        function defaultWriterClosedPromiseReject(writer, reason) {\\n          assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\\n          assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\\n          assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\\n\\n          writer._closedPromise_reject(reason);\\n\\n          writer._closedPromise_resolve = undefined;\\n          writer._closedPromise_reject = undefined;\\n          writer._closedPromiseState = 'rejected';\\n        }\\n\\n        function defaultWriterClosedPromiseResetToRejected(writer, reason) {\\n          assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\\n          assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\\n          assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\\n          writer._closedPromise = Promise.reject(reason);\\n          writer._closedPromiseState = 'rejected';\\n        }\\n\\n        function defaultWriterClosedPromiseResolve(writer) {\\n          assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\\n          assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\\n          assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\\n\\n          writer._closedPromise_resolve(undefined);\\n\\n          writer._closedPromise_resolve = undefined;\\n          writer._closedPromise_reject = undefined;\\n          writer._closedPromiseState = 'resolved';\\n        }\\n\\n        function defaultWriterReadyPromiseInitialize(writer) {\\n          writer._readyPromise = new Promise(function (resolve, reject) {\\n            writer._readyPromise_resolve = resolve;\\n            writer._readyPromise_reject = reject;\\n          });\\n          writer._readyPromiseState = 'pending';\\n        }\\n\\n        function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\\n          writer._readyPromise = Promise.reject(reason);\\n          writer._readyPromise_resolve = undefined;\\n          writer._readyPromise_reject = undefined;\\n          writer._readyPromiseState = 'rejected';\\n        }\\n\\n        function defaultWriterReadyPromiseInitializeAsResolved(writer) {\\n          writer._readyPromise = Promise.resolve(undefined);\\n          writer._readyPromise_resolve = undefined;\\n          writer._readyPromise_reject = undefined;\\n          writer._readyPromiseState = 'fulfilled';\\n        }\\n\\n        function defaultWriterReadyPromiseReject(writer, reason) {\\n          assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\\n          assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\\n\\n          writer._readyPromise_reject(reason);\\n\\n          writer._readyPromise_resolve = undefined;\\n          writer._readyPromise_reject = undefined;\\n          writer._readyPromiseState = 'rejected';\\n        }\\n\\n        function defaultWriterReadyPromiseReset(writer) {\\n          assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\\n          assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\\n          writer._readyPromise = new Promise(function (resolve, reject) {\\n            writer._readyPromise_resolve = resolve;\\n            writer._readyPromise_reject = reject;\\n          });\\n          writer._readyPromiseState = 'pending';\\n        }\\n\\n        function defaultWriterReadyPromiseResetToRejected(writer, reason) {\\n          assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\\n          assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\\n          writer._readyPromise = Promise.reject(reason);\\n          writer._readyPromiseState = 'rejected';\\n        }\\n\\n        function defaultWriterReadyPromiseResolve(writer) {\\n          assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\\n          assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\\n\\n          writer._readyPromise_resolve(undefined);\\n\\n          writer._readyPromise_resolve = undefined;\\n          writer._readyPromise_reject = undefined;\\n          writer._readyPromiseState = 'fulfilled';\\n        }\\n      }, function (module, exports, __w_pdfjs_require__) {\\n        \\\"use strict\\\";\\n\\n        var _require = __w_pdfjs_require__(0),\\n            IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\\n\\n        var _require2 = __w_pdfjs_require__(1),\\n            assert = _require2.assert;\\n\\n        exports.DequeueValue = function (container) {\\n          assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\n          assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\\n\\n          var pair = container._queue.shift();\\n\\n          container._queueTotalSize -= pair.size;\\n\\n          if (container._queueTotalSize < 0) {\\n            container._queueTotalSize = 0;\\n          }\\n\\n          return pair.value;\\n        };\\n\\n        exports.EnqueueValueWithSize = function (container, value, size) {\\n          assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\\n          size = Number(size);\\n\\n          if (!IsFiniteNonNegativeNumber(size)) {\\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\\n          }\\n\\n          container._queue.push({\\n            value: value,\\n            size: size\\n          });\\n\\n          container._queueTotalSize += size;\\n        };\\n\\n        exports.PeekQueueValue = function (container) {\\n          assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\n          assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\\n          var pair = container._queue[0];\\n          return pair.value;\\n        };\\n\\n        exports.ResetQueue = function (container) {\\n          assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\n          container._queue = [];\\n          container._queueTotalSize = 0;\\n        };\\n      }, function (module, exports, __w_pdfjs_require__) {\\n        \\\"use strict\\\";\\n\\n        var _createClass = function () {\\n          function defineProperties(target, props) {\\n            for (var i = 0; i < props.length; i++) {\\n              var descriptor = props[i];\\n              descriptor.enumerable = descriptor.enumerable || false;\\n              descriptor.configurable = true;\\n              if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n              Object.defineProperty(target, descriptor.key, descriptor);\\n            }\\n          }\\n\\n          return function (Constructor, protoProps, staticProps) {\\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n            if (staticProps) defineProperties(Constructor, staticProps);\\n            return Constructor;\\n          };\\n        }();\\n\\n        function _classCallCheck(instance, Constructor) {\\n          if (!(instance instanceof Constructor)) {\\n            throw new TypeError(\\\"Cannot call a class as a function\\\");\\n          }\\n        }\\n\\n        var _require = __w_pdfjs_require__(0),\\n            ArrayBufferCopy = _require.ArrayBufferCopy,\\n            CreateIterResultObject = _require.CreateIterResultObject,\\n            IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\\n            InvokeOrNoop = _require.InvokeOrNoop,\\n            PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\\n            TransferArrayBuffer = _require.TransferArrayBuffer,\\n            ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\\n            ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\\n\\n        var _require2 = __w_pdfjs_require__(0),\\n            createArrayFromList = _require2.createArrayFromList,\\n            createDataProperty = _require2.createDataProperty,\\n            typeIsObject = _require2.typeIsObject;\\n\\n        var _require3 = __w_pdfjs_require__(1),\\n            assert = _require3.assert,\\n            rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\\n\\n        var _require4 = __w_pdfjs_require__(3),\\n            DequeueValue = _require4.DequeueValue,\\n            EnqueueValueWithSize = _require4.EnqueueValueWithSize,\\n            ResetQueue = _require4.ResetQueue;\\n\\n        var _require5 = __w_pdfjs_require__(2),\\n            AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\\n            IsWritableStream = _require5.IsWritableStream,\\n            IsWritableStreamLocked = _require5.IsWritableStreamLocked,\\n            WritableStreamAbort = _require5.WritableStreamAbort,\\n            WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\\n            WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\\n            WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\\n            WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\\n\\n        var ReadableStream = function () {\\n          function ReadableStream() {\\n            var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n            var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\n                size = _ref.size,\\n                highWaterMark = _ref.highWaterMark;\\n\\n            _classCallCheck(this, ReadableStream);\\n\\n            this._state = 'readable';\\n            this._reader = undefined;\\n            this._storedError = undefined;\\n            this._disturbed = false;\\n            this._readableStreamController = undefined;\\n            var type = underlyingSource.type;\\n            var typeString = String(type);\\n\\n            if (typeString === 'bytes') {\\n              if (highWaterMark === undefined) {\\n                highWaterMark = 0;\\n              }\\n\\n              this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\\n            } else if (type === undefined) {\\n              if (highWaterMark === undefined) {\\n                highWaterMark = 1;\\n              }\\n\\n              this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\\n            } else {\\n              throw new RangeError('Invalid type is specified');\\n            }\\n          }\\n\\n          _createClass(ReadableStream, [{\\n            key: 'cancel',\\n            value: function cancel(reason) {\\n              if (IsReadableStream(this) === false) {\\n                return Promise.reject(streamBrandCheckException('cancel'));\\n              }\\n\\n              if (IsReadableStreamLocked(this) === true) {\\n                return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\\n              }\\n\\n              return ReadableStreamCancel(this, reason);\\n            }\\n          }, {\\n            key: 'getReader',\\n            value: function getReader() {\\n              var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n                  mode = _ref2.mode;\\n\\n              if (IsReadableStream(this) === false) {\\n                throw streamBrandCheckException('getReader');\\n              }\\n\\n              if (mode === undefined) {\\n                return AcquireReadableStreamDefaultReader(this);\\n              }\\n\\n              mode = String(mode);\\n\\n              if (mode === 'byob') {\\n                return AcquireReadableStreamBYOBReader(this);\\n              }\\n\\n              throw new RangeError('Invalid mode is specified');\\n            }\\n          }, {\\n            key: 'pipeThrough',\\n            value: function pipeThrough(_ref3, options) {\\n              var writable = _ref3.writable,\\n                  readable = _ref3.readable;\\n              var promise = this.pipeTo(writable, options);\\n              ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\\n              return readable;\\n            }\\n          }, {\\n            key: 'pipeTo',\\n            value: function pipeTo(dest) {\\n              var _this = this;\\n\\n              var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\n                  preventClose = _ref4.preventClose,\\n                  preventAbort = _ref4.preventAbort,\\n                  preventCancel = _ref4.preventCancel;\\n\\n              if (IsReadableStream(this) === false) {\\n                return Promise.reject(streamBrandCheckException('pipeTo'));\\n              }\\n\\n              if (IsWritableStream(dest) === false) {\\n                return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\\\'s first argument must be a WritableStream'));\\n              }\\n\\n              preventClose = Boolean(preventClose);\\n              preventAbort = Boolean(preventAbort);\\n              preventCancel = Boolean(preventCancel);\\n\\n              if (IsReadableStreamLocked(this) === true) {\\n                return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\\n              }\\n\\n              if (IsWritableStreamLocked(dest) === true) {\\n                return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\\n              }\\n\\n              var reader = AcquireReadableStreamDefaultReader(this);\\n              var writer = AcquireWritableStreamDefaultWriter(dest);\\n              var shuttingDown = false;\\n              var currentWrite = Promise.resolve();\\n              return new Promise(function (resolve, reject) {\\n                function pipeLoop() {\\n                  currentWrite = Promise.resolve();\\n\\n                  if (shuttingDown === true) {\\n                    return Promise.resolve();\\n                  }\\n\\n                  return writer._readyPromise.then(function () {\\n                    return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\\n                      var value = _ref5.value,\\n                          done = _ref5.done;\\n\\n                      if (done === true) {\\n                        return;\\n                      }\\n\\n                      currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\\n                    });\\n                  }).then(pipeLoop);\\n                }\\n\\n                isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\\n                  if (preventAbort === false) {\\n                    shutdownWithAction(function () {\\n                      return WritableStreamAbort(dest, storedError);\\n                    }, true, storedError);\\n                  } else {\\n                    shutdown(true, storedError);\\n                  }\\n                });\\n                isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\\n                  if (preventCancel === false) {\\n                    shutdownWithAction(function () {\\n                      return ReadableStreamCancel(_this, storedError);\\n                    }, true, storedError);\\n                  } else {\\n                    shutdown(true, storedError);\\n                  }\\n                });\\n                isOrBecomesClosed(_this, reader._closedPromise, function () {\\n                  if (preventClose === false) {\\n                    shutdownWithAction(function () {\\n                      return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\\n                    });\\n                  } else {\\n                    shutdown();\\n                  }\\n                });\\n\\n                if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\\n                  var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\\n\\n                  if (preventCancel === false) {\\n                    shutdownWithAction(function () {\\n                      return ReadableStreamCancel(_this, destClosed);\\n                    }, true, destClosed);\\n                  } else {\\n                    shutdown(true, destClosed);\\n                  }\\n                }\\n\\n                pipeLoop().catch(function (err) {\\n                  currentWrite = Promise.resolve();\\n                  rethrowAssertionErrorRejection(err);\\n                });\\n\\n                function waitForWritesToFinish() {\\n                  var oldCurrentWrite = currentWrite;\\n                  return currentWrite.then(function () {\\n                    return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\\n                  });\\n                }\\n\\n                function isOrBecomesErrored(stream, promise, action) {\\n                  if (stream._state === 'errored') {\\n                    action(stream._storedError);\\n                  } else {\\n                    promise.catch(action).catch(rethrowAssertionErrorRejection);\\n                  }\\n                }\\n\\n                function isOrBecomesClosed(stream, promise, action) {\\n                  if (stream._state === 'closed') {\\n                    action();\\n                  } else {\\n                    promise.then(action).catch(rethrowAssertionErrorRejection);\\n                  }\\n                }\\n\\n                function shutdownWithAction(action, originalIsError, originalError) {\\n                  if (shuttingDown === true) {\\n                    return;\\n                  }\\n\\n                  shuttingDown = true;\\n\\n                  if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\\n                    waitForWritesToFinish().then(doTheRest);\\n                  } else {\\n                    doTheRest();\\n                  }\\n\\n                  function doTheRest() {\\n                    action().then(function () {\\n                      return finalize(originalIsError, originalError);\\n                    }, function (newError) {\\n                      return finalize(true, newError);\\n                    }).catch(rethrowAssertionErrorRejection);\\n                  }\\n                }\\n\\n                function shutdown(isError, error) {\\n                  if (shuttingDown === true) {\\n                    return;\\n                  }\\n\\n                  shuttingDown = true;\\n\\n                  if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\\n                    waitForWritesToFinish().then(function () {\\n                      return finalize(isError, error);\\n                    }).catch(rethrowAssertionErrorRejection);\\n                  } else {\\n                    finalize(isError, error);\\n                  }\\n                }\\n\\n                function finalize(isError, error) {\\n                  WritableStreamDefaultWriterRelease(writer);\\n                  ReadableStreamReaderGenericRelease(reader);\\n\\n                  if (isError) {\\n                    reject(error);\\n                  } else {\\n                    resolve(undefined);\\n                  }\\n                }\\n              });\\n            }\\n          }, {\\n            key: 'tee',\\n            value: function tee() {\\n              if (IsReadableStream(this) === false) {\\n                throw streamBrandCheckException('tee');\\n              }\\n\\n              var branches = ReadableStreamTee(this, false);\\n              return createArrayFromList(branches);\\n            }\\n          }, {\\n            key: 'locked',\\n            get: function get() {\\n              if (IsReadableStream(this) === false) {\\n                throw streamBrandCheckException('locked');\\n              }\\n\\n              return IsReadableStreamLocked(this);\\n            }\\n          }]);\\n\\n          return ReadableStream;\\n        }();\\n\\n        module.exports = {\\n          ReadableStream: ReadableStream,\\n          IsReadableStreamDisturbed: IsReadableStreamDisturbed,\\n          ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\\n          ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\\n          ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\\n          ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\\n        };\\n\\n        function AcquireReadableStreamBYOBReader(stream) {\\n          return new ReadableStreamBYOBReader(stream);\\n        }\\n\\n        function AcquireReadableStreamDefaultReader(stream) {\\n          return new ReadableStreamDefaultReader(stream);\\n        }\\n\\n        function IsReadableStream(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function IsReadableStreamDisturbed(stream) {\\n          assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\\n          return stream._disturbed;\\n        }\\n\\n        function IsReadableStreamLocked(stream) {\\n          assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\\n\\n          if (stream._reader === undefined) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function ReadableStreamTee(stream, cloneForBranch2) {\\n          assert(IsReadableStream(stream) === true);\\n          assert(typeof cloneForBranch2 === 'boolean');\\n          var reader = AcquireReadableStreamDefaultReader(stream);\\n          var teeState = {\\n            closedOrErrored: false,\\n            canceled1: false,\\n            canceled2: false,\\n            reason1: undefined,\\n            reason2: undefined\\n          };\\n          teeState.promise = new Promise(function (resolve) {\\n            teeState._resolve = resolve;\\n          });\\n          var pull = create_ReadableStreamTeePullFunction();\\n          pull._reader = reader;\\n          pull._teeState = teeState;\\n          pull._cloneForBranch2 = cloneForBranch2;\\n          var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\\n          cancel1._stream = stream;\\n          cancel1._teeState = teeState;\\n          var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\\n          cancel2._stream = stream;\\n          cancel2._teeState = teeState;\\n          var underlyingSource1 = Object.create(Object.prototype);\\n          createDataProperty(underlyingSource1, 'pull', pull);\\n          createDataProperty(underlyingSource1, 'cancel', cancel1);\\n          var branch1Stream = new ReadableStream(underlyingSource1);\\n          var underlyingSource2 = Object.create(Object.prototype);\\n          createDataProperty(underlyingSource2, 'pull', pull);\\n          createDataProperty(underlyingSource2, 'cancel', cancel2);\\n          var branch2Stream = new ReadableStream(underlyingSource2);\\n          pull._branch1 = branch1Stream._readableStreamController;\\n          pull._branch2 = branch2Stream._readableStreamController;\\n\\n          reader._closedPromise.catch(function (r) {\\n            if (teeState.closedOrErrored === true) {\\n              return;\\n            }\\n\\n            ReadableStreamDefaultControllerError(pull._branch1, r);\\n            ReadableStreamDefaultControllerError(pull._branch2, r);\\n            teeState.closedOrErrored = true;\\n          });\\n\\n          return [branch1Stream, branch2Stream];\\n        }\\n\\n        function create_ReadableStreamTeePullFunction() {\\n          function f() {\\n            var reader = f._reader,\\n                branch1 = f._branch1,\\n                branch2 = f._branch2,\\n                teeState = f._teeState;\\n            return ReadableStreamDefaultReaderRead(reader).then(function (result) {\\n              assert(typeIsObject(result));\\n              var value = result.value;\\n              var done = result.done;\\n              assert(typeof done === 'boolean');\\n\\n              if (done === true && teeState.closedOrErrored === false) {\\n                if (teeState.canceled1 === false) {\\n                  ReadableStreamDefaultControllerClose(branch1);\\n                }\\n\\n                if (teeState.canceled2 === false) {\\n                  ReadableStreamDefaultControllerClose(branch2);\\n                }\\n\\n                teeState.closedOrErrored = true;\\n              }\\n\\n              if (teeState.closedOrErrored === true) {\\n                return;\\n              }\\n\\n              var value1 = value;\\n              var value2 = value;\\n\\n              if (teeState.canceled1 === false) {\\n                ReadableStreamDefaultControllerEnqueue(branch1, value1);\\n              }\\n\\n              if (teeState.canceled2 === false) {\\n                ReadableStreamDefaultControllerEnqueue(branch2, value2);\\n              }\\n            });\\n          }\\n\\n          return f;\\n        }\\n\\n        function create_ReadableStreamTeeBranch1CancelFunction() {\\n          function f(reason) {\\n            var stream = f._stream,\\n                teeState = f._teeState;\\n            teeState.canceled1 = true;\\n            teeState.reason1 = reason;\\n\\n            if (teeState.canceled2 === true) {\\n              var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\\n              var cancelResult = ReadableStreamCancel(stream, compositeReason);\\n\\n              teeState._resolve(cancelResult);\\n            }\\n\\n            return teeState.promise;\\n          }\\n\\n          return f;\\n        }\\n\\n        function create_ReadableStreamTeeBranch2CancelFunction() {\\n          function f(reason) {\\n            var stream = f._stream,\\n                teeState = f._teeState;\\n            teeState.canceled2 = true;\\n            teeState.reason2 = reason;\\n\\n            if (teeState.canceled1 === true) {\\n              var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\\n              var cancelResult = ReadableStreamCancel(stream, compositeReason);\\n\\n              teeState._resolve(cancelResult);\\n            }\\n\\n            return teeState.promise;\\n          }\\n\\n          return f;\\n        }\\n\\n        function ReadableStreamAddReadIntoRequest(stream) {\\n          assert(IsReadableStreamBYOBReader(stream._reader) === true);\\n          assert(stream._state === 'readable' || stream._state === 'closed');\\n          var promise = new Promise(function (resolve, reject) {\\n            var readIntoRequest = {\\n              _resolve: resolve,\\n              _reject: reject\\n            };\\n\\n            stream._reader._readIntoRequests.push(readIntoRequest);\\n          });\\n          return promise;\\n        }\\n\\n        function ReadableStreamAddReadRequest(stream) {\\n          assert(IsReadableStreamDefaultReader(stream._reader) === true);\\n          assert(stream._state === 'readable');\\n          var promise = new Promise(function (resolve, reject) {\\n            var readRequest = {\\n              _resolve: resolve,\\n              _reject: reject\\n            };\\n\\n            stream._reader._readRequests.push(readRequest);\\n          });\\n          return promise;\\n        }\\n\\n        function ReadableStreamCancel(stream, reason) {\\n          stream._disturbed = true;\\n\\n          if (stream._state === 'closed') {\\n            return Promise.resolve(undefined);\\n          }\\n\\n          if (stream._state === 'errored') {\\n            return Promise.reject(stream._storedError);\\n          }\\n\\n          ReadableStreamClose(stream);\\n\\n          var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\\n\\n          return sourceCancelPromise.then(function () {\\n            return undefined;\\n          });\\n        }\\n\\n        function ReadableStreamClose(stream) {\\n          assert(stream._state === 'readable');\\n          stream._state = 'closed';\\n          var reader = stream._reader;\\n\\n          if (reader === undefined) {\\n            return undefined;\\n          }\\n\\n          if (IsReadableStreamDefaultReader(reader) === true) {\\n            for (var i = 0; i < reader._readRequests.length; i++) {\\n              var _resolve = reader._readRequests[i]._resolve;\\n\\n              _resolve(CreateIterResultObject(undefined, true));\\n            }\\n\\n            reader._readRequests = [];\\n          }\\n\\n          defaultReaderClosedPromiseResolve(reader);\\n          return undefined;\\n        }\\n\\n        function ReadableStreamError(stream, e) {\\n          assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\\n          assert(stream._state === 'readable', 'state must be readable');\\n          stream._state = 'errored';\\n          stream._storedError = e;\\n          var reader = stream._reader;\\n\\n          if (reader === undefined) {\\n            return undefined;\\n          }\\n\\n          if (IsReadableStreamDefaultReader(reader) === true) {\\n            for (var i = 0; i < reader._readRequests.length; i++) {\\n              var readRequest = reader._readRequests[i];\\n\\n              readRequest._reject(e);\\n            }\\n\\n            reader._readRequests = [];\\n          } else {\\n            assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\\n\\n            for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\\n              var readIntoRequest = reader._readIntoRequests[_i];\\n\\n              readIntoRequest._reject(e);\\n            }\\n\\n            reader._readIntoRequests = [];\\n          }\\n\\n          defaultReaderClosedPromiseReject(reader, e);\\n\\n          reader._closedPromise.catch(function () {});\\n        }\\n\\n        function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\\n          var reader = stream._reader;\\n          assert(reader._readIntoRequests.length > 0);\\n\\n          var readIntoRequest = reader._readIntoRequests.shift();\\n\\n          readIntoRequest._resolve(CreateIterResultObject(chunk, done));\\n        }\\n\\n        function ReadableStreamFulfillReadRequest(stream, chunk, done) {\\n          var reader = stream._reader;\\n          assert(reader._readRequests.length > 0);\\n\\n          var readRequest = reader._readRequests.shift();\\n\\n          readRequest._resolve(CreateIterResultObject(chunk, done));\\n        }\\n\\n        function ReadableStreamGetNumReadIntoRequests(stream) {\\n          return stream._reader._readIntoRequests.length;\\n        }\\n\\n        function ReadableStreamGetNumReadRequests(stream) {\\n          return stream._reader._readRequests.length;\\n        }\\n\\n        function ReadableStreamHasBYOBReader(stream) {\\n          var reader = stream._reader;\\n\\n          if (reader === undefined) {\\n            return false;\\n          }\\n\\n          if (IsReadableStreamBYOBReader(reader) === false) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function ReadableStreamHasDefaultReader(stream) {\\n          var reader = stream._reader;\\n\\n          if (reader === undefined) {\\n            return false;\\n          }\\n\\n          if (IsReadableStreamDefaultReader(reader) === false) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        var ReadableStreamDefaultReader = function () {\\n          function ReadableStreamDefaultReader(stream) {\\n            _classCallCheck(this, ReadableStreamDefaultReader);\\n\\n            if (IsReadableStream(stream) === false) {\\n              throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\\n            }\\n\\n            if (IsReadableStreamLocked(stream) === true) {\\n              throw new TypeError('This stream has already been locked for exclusive reading by another reader');\\n            }\\n\\n            ReadableStreamReaderGenericInitialize(this, stream);\\n            this._readRequests = [];\\n          }\\n\\n          _createClass(ReadableStreamDefaultReader, [{\\n            key: 'cancel',\\n            value: function cancel(reason) {\\n              if (IsReadableStreamDefaultReader(this) === false) {\\n                return Promise.reject(defaultReaderBrandCheckException('cancel'));\\n              }\\n\\n              if (this._ownerReadableStream === undefined) {\\n                return Promise.reject(readerLockException('cancel'));\\n              }\\n\\n              return ReadableStreamReaderGenericCancel(this, reason);\\n            }\\n          }, {\\n            key: 'read',\\n            value: function read() {\\n              if (IsReadableStreamDefaultReader(this) === false) {\\n                return Promise.reject(defaultReaderBrandCheckException('read'));\\n              }\\n\\n              if (this._ownerReadableStream === undefined) {\\n                return Promise.reject(readerLockException('read from'));\\n              }\\n\\n              return ReadableStreamDefaultReaderRead(this);\\n            }\\n          }, {\\n            key: 'releaseLock',\\n            value: function releaseLock() {\\n              if (IsReadableStreamDefaultReader(this) === false) {\\n                throw defaultReaderBrandCheckException('releaseLock');\\n              }\\n\\n              if (this._ownerReadableStream === undefined) {\\n                return;\\n              }\\n\\n              if (this._readRequests.length > 0) {\\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\\n              }\\n\\n              ReadableStreamReaderGenericRelease(this);\\n            }\\n          }, {\\n            key: 'closed',\\n            get: function get() {\\n              if (IsReadableStreamDefaultReader(this) === false) {\\n                return Promise.reject(defaultReaderBrandCheckException('closed'));\\n              }\\n\\n              return this._closedPromise;\\n            }\\n          }]);\\n\\n          return ReadableStreamDefaultReader;\\n        }();\\n\\n        var ReadableStreamBYOBReader = function () {\\n          function ReadableStreamBYOBReader(stream) {\\n            _classCallCheck(this, ReadableStreamBYOBReader);\\n\\n            if (!IsReadableStream(stream)) {\\n              throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\\n            }\\n\\n            if (IsReadableByteStreamController(stream._readableStreamController) === false) {\\n              throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\\n            }\\n\\n            if (IsReadableStreamLocked(stream)) {\\n              throw new TypeError('This stream has already been locked for exclusive reading by another reader');\\n            }\\n\\n            ReadableStreamReaderGenericInitialize(this, stream);\\n            this._readIntoRequests = [];\\n          }\\n\\n          _createClass(ReadableStreamBYOBReader, [{\\n            key: 'cancel',\\n            value: function cancel(reason) {\\n              if (!IsReadableStreamBYOBReader(this)) {\\n                return Promise.reject(byobReaderBrandCheckException('cancel'));\\n              }\\n\\n              if (this._ownerReadableStream === undefined) {\\n                return Promise.reject(readerLockException('cancel'));\\n              }\\n\\n              return ReadableStreamReaderGenericCancel(this, reason);\\n            }\\n          }, {\\n            key: 'read',\\n            value: function read(view) {\\n              if (!IsReadableStreamBYOBReader(this)) {\\n                return Promise.reject(byobReaderBrandCheckException('read'));\\n              }\\n\\n              if (this._ownerReadableStream === undefined) {\\n                return Promise.reject(readerLockException('read from'));\\n              }\\n\\n              if (!ArrayBuffer.isView(view)) {\\n                return Promise.reject(new TypeError('view must be an array buffer view'));\\n              }\\n\\n              if (view.byteLength === 0) {\\n                return Promise.reject(new TypeError('view must have non-zero byteLength'));\\n              }\\n\\n              return ReadableStreamBYOBReaderRead(this, view);\\n            }\\n          }, {\\n            key: 'releaseLock',\\n            value: function releaseLock() {\\n              if (!IsReadableStreamBYOBReader(this)) {\\n                throw byobReaderBrandCheckException('releaseLock');\\n              }\\n\\n              if (this._ownerReadableStream === undefined) {\\n                return;\\n              }\\n\\n              if (this._readIntoRequests.length > 0) {\\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\\n              }\\n\\n              ReadableStreamReaderGenericRelease(this);\\n            }\\n          }, {\\n            key: 'closed',\\n            get: function get() {\\n              if (!IsReadableStreamBYOBReader(this)) {\\n                return Promise.reject(byobReaderBrandCheckException('closed'));\\n              }\\n\\n              return this._closedPromise;\\n            }\\n          }]);\\n\\n          return ReadableStreamBYOBReader;\\n        }();\\n\\n        function IsReadableStreamBYOBReader(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function IsReadableStreamDefaultReader(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function ReadableStreamReaderGenericInitialize(reader, stream) {\\n          reader._ownerReadableStream = stream;\\n          stream._reader = reader;\\n\\n          if (stream._state === 'readable') {\\n            defaultReaderClosedPromiseInitialize(reader);\\n          } else if (stream._state === 'closed') {\\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\\n          } else {\\n            assert(stream._state === 'errored', 'state must be errored');\\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\\n\\n            reader._closedPromise.catch(function () {});\\n          }\\n        }\\n\\n        function ReadableStreamReaderGenericCancel(reader, reason) {\\n          var stream = reader._ownerReadableStream;\\n          assert(stream !== undefined);\\n          return ReadableStreamCancel(stream, reason);\\n        }\\n\\n        function ReadableStreamReaderGenericRelease(reader) {\\n          assert(reader._ownerReadableStream !== undefined);\\n          assert(reader._ownerReadableStream._reader === reader);\\n\\n          if (reader._ownerReadableStream._state === 'readable') {\\n            defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\\\'s closedness'));\\n          } else {\\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\\\'s closedness'));\\n          }\\n\\n          reader._closedPromise.catch(function () {});\\n\\n          reader._ownerReadableStream._reader = undefined;\\n          reader._ownerReadableStream = undefined;\\n        }\\n\\n        function ReadableStreamBYOBReaderRead(reader, view) {\\n          var stream = reader._ownerReadableStream;\\n          assert(stream !== undefined);\\n          stream._disturbed = true;\\n\\n          if (stream._state === 'errored') {\\n            return Promise.reject(stream._storedError);\\n          }\\n\\n          return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\\n        }\\n\\n        function ReadableStreamDefaultReaderRead(reader) {\\n          var stream = reader._ownerReadableStream;\\n          assert(stream !== undefined);\\n          stream._disturbed = true;\\n\\n          if (stream._state === 'closed') {\\n            return Promise.resolve(CreateIterResultObject(undefined, true));\\n          }\\n\\n          if (stream._state === 'errored') {\\n            return Promise.reject(stream._storedError);\\n          }\\n\\n          assert(stream._state === 'readable');\\n          return stream._readableStreamController.__pullSteps();\\n        }\\n\\n        var ReadableStreamDefaultController = function () {\\n          function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\\n            _classCallCheck(this, ReadableStreamDefaultController);\\n\\n            if (IsReadableStream(stream) === false) {\\n              throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\\n            }\\n\\n            if (stream._readableStreamController !== undefined) {\\n              throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\\n            }\\n\\n            this._controlledReadableStream = stream;\\n            this._underlyingSource = underlyingSource;\\n            this._queue = undefined;\\n            this._queueTotalSize = undefined;\\n            ResetQueue(this);\\n            this._started = false;\\n            this._closeRequested = false;\\n            this._pullAgain = false;\\n            this._pulling = false;\\n            var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\\n            this._strategySize = normalizedStrategy.size;\\n            this._strategyHWM = normalizedStrategy.highWaterMark;\\n            var controller = this;\\n            var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\\n            Promise.resolve(startResult).then(function () {\\n              controller._started = true;\\n              assert(controller._pulling === false);\\n              assert(controller._pullAgain === false);\\n              ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\n            }, function (r) {\\n              ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\\n            }).catch(rethrowAssertionErrorRejection);\\n          }\\n\\n          _createClass(ReadableStreamDefaultController, [{\\n            key: 'close',\\n            value: function close() {\\n              if (IsReadableStreamDefaultController(this) === false) {\\n                throw defaultControllerBrandCheckException('close');\\n              }\\n\\n              if (this._closeRequested === true) {\\n                throw new TypeError('The stream has already been closed; do not close it again!');\\n              }\\n\\n              var state = this._controlledReadableStream._state;\\n\\n              if (state !== 'readable') {\\n                throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\\n              }\\n\\n              ReadableStreamDefaultControllerClose(this);\\n            }\\n          }, {\\n            key: 'enqueue',\\n            value: function enqueue(chunk) {\\n              if (IsReadableStreamDefaultController(this) === false) {\\n                throw defaultControllerBrandCheckException('enqueue');\\n              }\\n\\n              if (this._closeRequested === true) {\\n                throw new TypeError('stream is closed or draining');\\n              }\\n\\n              var state = this._controlledReadableStream._state;\\n\\n              if (state !== 'readable') {\\n                throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\\n              }\\n\\n              return ReadableStreamDefaultControllerEnqueue(this, chunk);\\n            }\\n          }, {\\n            key: 'error',\\n            value: function error(e) {\\n              if (IsReadableStreamDefaultController(this) === false) {\\n                throw defaultControllerBrandCheckException('error');\\n              }\\n\\n              var stream = this._controlledReadableStream;\\n\\n              if (stream._state !== 'readable') {\\n                throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\\n              }\\n\\n              ReadableStreamDefaultControllerError(this, e);\\n            }\\n          }, {\\n            key: '__cancelSteps',\\n            value: function __cancelSteps(reason) {\\n              ResetQueue(this);\\n              return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\\n            }\\n          }, {\\n            key: '__pullSteps',\\n            value: function __pullSteps() {\\n              var stream = this._controlledReadableStream;\\n\\n              if (this._queue.length > 0) {\\n                var chunk = DequeueValue(this);\\n\\n                if (this._closeRequested === true && this._queue.length === 0) {\\n                  ReadableStreamClose(stream);\\n                } else {\\n                  ReadableStreamDefaultControllerCallPullIfNeeded(this);\\n                }\\n\\n                return Promise.resolve(CreateIterResultObject(chunk, false));\\n              }\\n\\n              var pendingPromise = ReadableStreamAddReadRequest(stream);\\n              ReadableStreamDefaultControllerCallPullIfNeeded(this);\\n              return pendingPromise;\\n            }\\n          }, {\\n            key: 'desiredSize',\\n            get: function get() {\\n              if (IsReadableStreamDefaultController(this) === false) {\\n                throw defaultControllerBrandCheckException('desiredSize');\\n              }\\n\\n              return ReadableStreamDefaultControllerGetDesiredSize(this);\\n            }\\n          }]);\\n\\n          return ReadableStreamDefaultController;\\n        }();\\n\\n        function IsReadableStreamDefaultController(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\\n          var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\\n\\n          if (shouldPull === false) {\\n            return undefined;\\n          }\\n\\n          if (controller._pulling === true) {\\n            controller._pullAgain = true;\\n            return undefined;\\n          }\\n\\n          assert(controller._pullAgain === false);\\n          controller._pulling = true;\\n          var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\\n          pullPromise.then(function () {\\n            controller._pulling = false;\\n\\n            if (controller._pullAgain === true) {\\n              controller._pullAgain = false;\\n              return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\n            }\\n\\n            return undefined;\\n          }, function (e) {\\n            ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\\n          }).catch(rethrowAssertionErrorRejection);\\n          return undefined;\\n        }\\n\\n        function ReadableStreamDefaultControllerShouldCallPull(controller) {\\n          var stream = controller._controlledReadableStream;\\n\\n          if (stream._state === 'closed' || stream._state === 'errored') {\\n            return false;\\n          }\\n\\n          if (controller._closeRequested === true) {\\n            return false;\\n          }\\n\\n          if (controller._started === false) {\\n            return false;\\n          }\\n\\n          if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\n            return true;\\n          }\\n\\n          var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\\n\\n          if (desiredSize > 0) {\\n            return true;\\n          }\\n\\n          return false;\\n        }\\n\\n        function ReadableStreamDefaultControllerClose(controller) {\\n          var stream = controller._controlledReadableStream;\\n          assert(controller._closeRequested === false);\\n          assert(stream._state === 'readable');\\n          controller._closeRequested = true;\\n\\n          if (controller._queue.length === 0) {\\n            ReadableStreamClose(stream);\\n          }\\n        }\\n\\n        function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\\n          var stream = controller._controlledReadableStream;\\n          assert(controller._closeRequested === false);\\n          assert(stream._state === 'readable');\\n\\n          if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\\n          } else {\\n            var chunkSize = 1;\\n\\n            if (controller._strategySize !== undefined) {\\n              var strategySize = controller._strategySize;\\n\\n              try {\\n                chunkSize = strategySize(chunk);\\n              } catch (chunkSizeE) {\\n                ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\\n                throw chunkSizeE;\\n              }\\n            }\\n\\n            try {\\n              EnqueueValueWithSize(controller, chunk, chunkSize);\\n            } catch (enqueueE) {\\n              ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\\n              throw enqueueE;\\n            }\\n          }\\n\\n          ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\n          return undefined;\\n        }\\n\\n        function ReadableStreamDefaultControllerError(controller, e) {\\n          var stream = controller._controlledReadableStream;\\n          assert(stream._state === 'readable');\\n          ResetQueue(controller);\\n          ReadableStreamError(stream, e);\\n        }\\n\\n        function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\\n          if (controller._controlledReadableStream._state === 'readable') {\\n            ReadableStreamDefaultControllerError(controller, e);\\n          }\\n        }\\n\\n        function ReadableStreamDefaultControllerGetDesiredSize(controller) {\\n          var stream = controller._controlledReadableStream;\\n          var state = stream._state;\\n\\n          if (state === 'errored') {\\n            return null;\\n          }\\n\\n          if (state === 'closed') {\\n            return 0;\\n          }\\n\\n          return controller._strategyHWM - controller._queueTotalSize;\\n        }\\n\\n        var ReadableStreamBYOBRequest = function () {\\n          function ReadableStreamBYOBRequest(controller, view) {\\n            _classCallCheck(this, ReadableStreamBYOBRequest);\\n\\n            this._associatedReadableByteStreamController = controller;\\n            this._view = view;\\n          }\\n\\n          _createClass(ReadableStreamBYOBRequest, [{\\n            key: 'respond',\\n            value: function respond(bytesWritten) {\\n              if (IsReadableStreamBYOBRequest(this) === false) {\\n                throw byobRequestBrandCheckException('respond');\\n              }\\n\\n              if (this._associatedReadableByteStreamController === undefined) {\\n                throw new TypeError('This BYOB request has been invalidated');\\n              }\\n\\n              ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\\n            }\\n          }, {\\n            key: 'respondWithNewView',\\n            value: function respondWithNewView(view) {\\n              if (IsReadableStreamBYOBRequest(this) === false) {\\n                throw byobRequestBrandCheckException('respond');\\n              }\\n\\n              if (this._associatedReadableByteStreamController === undefined) {\\n                throw new TypeError('This BYOB request has been invalidated');\\n              }\\n\\n              if (!ArrayBuffer.isView(view)) {\\n                throw new TypeError('You can only respond with array buffer views');\\n              }\\n\\n              ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\\n            }\\n          }, {\\n            key: 'view',\\n            get: function get() {\\n              return this._view;\\n            }\\n          }]);\\n\\n          return ReadableStreamBYOBRequest;\\n        }();\\n\\n        var ReadableByteStreamController = function () {\\n          function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\\n            _classCallCheck(this, ReadableByteStreamController);\\n\\n            if (IsReadableStream(stream) === false) {\\n              throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\\n            }\\n\\n            if (stream._readableStreamController !== undefined) {\\n              throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\\n            }\\n\\n            this._controlledReadableStream = stream;\\n            this._underlyingByteSource = underlyingByteSource;\\n            this._pullAgain = false;\\n            this._pulling = false;\\n            ReadableByteStreamControllerClearPendingPullIntos(this);\\n            this._queue = this._queueTotalSize = undefined;\\n            ResetQueue(this);\\n            this._closeRequested = false;\\n            this._started = false;\\n            this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\\n            var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\\n\\n            if (autoAllocateChunkSize !== undefined) {\\n              if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\\n                throw new RangeError('autoAllocateChunkSize must be a positive integer');\\n              }\\n            }\\n\\n            this._autoAllocateChunkSize = autoAllocateChunkSize;\\n            this._pendingPullIntos = [];\\n            var controller = this;\\n            var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\\n            Promise.resolve(startResult).then(function () {\\n              controller._started = true;\\n              assert(controller._pulling === false);\\n              assert(controller._pullAgain === false);\\n              ReadableByteStreamControllerCallPullIfNeeded(controller);\\n            }, function (r) {\\n              if (stream._state === 'readable') {\\n                ReadableByteStreamControllerError(controller, r);\\n              }\\n            }).catch(rethrowAssertionErrorRejection);\\n          }\\n\\n          _createClass(ReadableByteStreamController, [{\\n            key: 'close',\\n            value: function close() {\\n              if (IsReadableByteStreamController(this) === false) {\\n                throw byteStreamControllerBrandCheckException('close');\\n              }\\n\\n              if (this._closeRequested === true) {\\n                throw new TypeError('The stream has already been closed; do not close it again!');\\n              }\\n\\n              var state = this._controlledReadableStream._state;\\n\\n              if (state !== 'readable') {\\n                throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\\n              }\\n\\n              ReadableByteStreamControllerClose(this);\\n            }\\n          }, {\\n            key: 'enqueue',\\n            value: function enqueue(chunk) {\\n              if (IsReadableByteStreamController(this) === false) {\\n                throw byteStreamControllerBrandCheckException('enqueue');\\n              }\\n\\n              if (this._closeRequested === true) {\\n                throw new TypeError('stream is closed or draining');\\n              }\\n\\n              var state = this._controlledReadableStream._state;\\n\\n              if (state !== 'readable') {\\n                throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\\n              }\\n\\n              if (!ArrayBuffer.isView(chunk)) {\\n                throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\\n              }\\n\\n              ReadableByteStreamControllerEnqueue(this, chunk);\\n            }\\n          }, {\\n            key: 'error',\\n            value: function error(e) {\\n              if (IsReadableByteStreamController(this) === false) {\\n                throw byteStreamControllerBrandCheckException('error');\\n              }\\n\\n              var stream = this._controlledReadableStream;\\n\\n              if (stream._state !== 'readable') {\\n                throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\\n              }\\n\\n              ReadableByteStreamControllerError(this, e);\\n            }\\n          }, {\\n            key: '__cancelSteps',\\n            value: function __cancelSteps(reason) {\\n              if (this._pendingPullIntos.length > 0) {\\n                var firstDescriptor = this._pendingPullIntos[0];\\n                firstDescriptor.bytesFilled = 0;\\n              }\\n\\n              ResetQueue(this);\\n              return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\\n            }\\n          }, {\\n            key: '__pullSteps',\\n            value: function __pullSteps() {\\n              var stream = this._controlledReadableStream;\\n              assert(ReadableStreamHasDefaultReader(stream) === true);\\n\\n              if (this._queueTotalSize > 0) {\\n                assert(ReadableStreamGetNumReadRequests(stream) === 0);\\n\\n                var entry = this._queue.shift();\\n\\n                this._queueTotalSize -= entry.byteLength;\\n                ReadableByteStreamControllerHandleQueueDrain(this);\\n                var view = void 0;\\n\\n                try {\\n                  view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\\n                } catch (viewE) {\\n                  return Promise.reject(viewE);\\n                }\\n\\n                return Promise.resolve(CreateIterResultObject(view, false));\\n              }\\n\\n              var autoAllocateChunkSize = this._autoAllocateChunkSize;\\n\\n              if (autoAllocateChunkSize !== undefined) {\\n                var buffer = void 0;\\n\\n                try {\\n                  buffer = new ArrayBuffer(autoAllocateChunkSize);\\n                } catch (bufferE) {\\n                  return Promise.reject(bufferE);\\n                }\\n\\n                var pullIntoDescriptor = {\\n                  buffer: buffer,\\n                  byteOffset: 0,\\n                  byteLength: autoAllocateChunkSize,\\n                  bytesFilled: 0,\\n                  elementSize: 1,\\n                  ctor: Uint8Array,\\n                  readerType: 'default'\\n                };\\n\\n                this._pendingPullIntos.push(pullIntoDescriptor);\\n              }\\n\\n              var promise = ReadableStreamAddReadRequest(stream);\\n              ReadableByteStreamControllerCallPullIfNeeded(this);\\n              return promise;\\n            }\\n          }, {\\n            key: 'byobRequest',\\n            get: function get() {\\n              if (IsReadableByteStreamController(this) === false) {\\n                throw byteStreamControllerBrandCheckException('byobRequest');\\n              }\\n\\n              if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\\n                var firstDescriptor = this._pendingPullIntos[0];\\n                var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\\n                this._byobRequest = new ReadableStreamBYOBRequest(this, view);\\n              }\\n\\n              return this._byobRequest;\\n            }\\n          }, {\\n            key: 'desiredSize',\\n            get: function get() {\\n              if (IsReadableByteStreamController(this) === false) {\\n                throw byteStreamControllerBrandCheckException('desiredSize');\\n              }\\n\\n              return ReadableByteStreamControllerGetDesiredSize(this);\\n            }\\n          }]);\\n\\n          return ReadableByteStreamController;\\n        }();\\n\\n        function IsReadableByteStreamController(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function IsReadableStreamBYOBRequest(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function ReadableByteStreamControllerCallPullIfNeeded(controller) {\\n          var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\\n\\n          if (shouldPull === false) {\\n            return undefined;\\n          }\\n\\n          if (controller._pulling === true) {\\n            controller._pullAgain = true;\\n            return undefined;\\n          }\\n\\n          assert(controller._pullAgain === false);\\n          controller._pulling = true;\\n          var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\\n          pullPromise.then(function () {\\n            controller._pulling = false;\\n\\n            if (controller._pullAgain === true) {\\n              controller._pullAgain = false;\\n              ReadableByteStreamControllerCallPullIfNeeded(controller);\\n            }\\n          }, function (e) {\\n            if (controller._controlledReadableStream._state === 'readable') {\\n              ReadableByteStreamControllerError(controller, e);\\n            }\\n          }).catch(rethrowAssertionErrorRejection);\\n          return undefined;\\n        }\\n\\n        function ReadableByteStreamControllerClearPendingPullIntos(controller) {\\n          ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\n          controller._pendingPullIntos = [];\\n        }\\n\\n        function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\\n          assert(stream._state !== 'errored', 'state must not be errored');\\n          var done = false;\\n\\n          if (stream._state === 'closed') {\\n            assert(pullIntoDescriptor.bytesFilled === 0);\\n            done = true;\\n          }\\n\\n          var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\\n\\n          if (pullIntoDescriptor.readerType === 'default') {\\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\\n          } else {\\n            assert(pullIntoDescriptor.readerType === 'byob');\\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\\n          }\\n        }\\n\\n        function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\\n          var bytesFilled = pullIntoDescriptor.bytesFilled;\\n          var elementSize = pullIntoDescriptor.elementSize;\\n          assert(bytesFilled <= pullIntoDescriptor.byteLength);\\n          assert(bytesFilled % elementSize === 0);\\n          return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\\n        }\\n\\n        function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\\n          controller._queue.push({\\n            buffer: buffer,\\n            byteOffset: byteOffset,\\n            byteLength: byteLength\\n          });\\n\\n          controller._queueTotalSize += byteLength;\\n        }\\n\\n        function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\\n          var elementSize = pullIntoDescriptor.elementSize;\\n          var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\\n          var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\\n          var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\\n          var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\\n          var totalBytesToCopyRemaining = maxBytesToCopy;\\n          var ready = false;\\n\\n          if (maxAlignedBytes > currentAlignedBytes) {\\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\\n            ready = true;\\n          }\\n\\n          var queue = controller._queue;\\n\\n          while (totalBytesToCopyRemaining > 0) {\\n            var headOfQueue = queue[0];\\n            var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\\n            var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\\n            ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\\n\\n            if (headOfQueue.byteLength === bytesToCopy) {\\n              queue.shift();\\n            } else {\\n              headOfQueue.byteOffset += bytesToCopy;\\n              headOfQueue.byteLength -= bytesToCopy;\\n            }\\n\\n            controller._queueTotalSize -= bytesToCopy;\\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\\n            totalBytesToCopyRemaining -= bytesToCopy;\\n          }\\n\\n          if (ready === false) {\\n            assert(controller._queueTotalSize === 0, 'queue must be empty');\\n            assert(pullIntoDescriptor.bytesFilled > 0);\\n            assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\\n          }\\n\\n          return ready;\\n        }\\n\\n        function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\\n          assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\\n          ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\n          pullIntoDescriptor.bytesFilled += size;\\n        }\\n\\n        function ReadableByteStreamControllerHandleQueueDrain(controller) {\\n          assert(controller._controlledReadableStream._state === 'readable');\\n\\n          if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\\n            ReadableStreamClose(controller._controlledReadableStream);\\n          } else {\\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\\n          }\\n        }\\n\\n        function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\\n          if (controller._byobRequest === undefined) {\\n            return;\\n          }\\n\\n          controller._byobRequest._associatedReadableByteStreamController = undefined;\\n          controller._byobRequest._view = undefined;\\n          controller._byobRequest = undefined;\\n        }\\n\\n        function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\\n          assert(controller._closeRequested === false);\\n\\n          while (controller._pendingPullIntos.length > 0) {\\n            if (controller._queueTotalSize === 0) {\\n              return;\\n            }\\n\\n            var pullIntoDescriptor = controller._pendingPullIntos[0];\\n\\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\\n              ReadableByteStreamControllerShiftPendingPullInto(controller);\\n              ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\\n            }\\n          }\\n        }\\n\\n        function ReadableByteStreamControllerPullInto(controller, view) {\\n          var stream = controller._controlledReadableStream;\\n          var elementSize = 1;\\n\\n          if (view.constructor !== DataView) {\\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\\n          }\\n\\n          var ctor = view.constructor;\\n          var pullIntoDescriptor = {\\n            buffer: view.buffer,\\n            byteOffset: view.byteOffset,\\n            byteLength: view.byteLength,\\n            bytesFilled: 0,\\n            elementSize: elementSize,\\n            ctor: ctor,\\n            readerType: 'byob'\\n          };\\n\\n          if (controller._pendingPullIntos.length > 0) {\\n            pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\\n\\n            controller._pendingPullIntos.push(pullIntoDescriptor);\\n\\n            return ReadableStreamAddReadIntoRequest(stream);\\n          }\\n\\n          if (stream._state === 'closed') {\\n            var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\\n            return Promise.resolve(CreateIterResultObject(emptyView, true));\\n          }\\n\\n          if (controller._queueTotalSize > 0) {\\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\\n              var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\\n              ReadableByteStreamControllerHandleQueueDrain(controller);\\n              return Promise.resolve(CreateIterResultObject(filledView, false));\\n            }\\n\\n            if (controller._closeRequested === true) {\\n              var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\\n              ReadableByteStreamControllerError(controller, e);\\n              return Promise.reject(e);\\n            }\\n          }\\n\\n          pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\\n\\n          controller._pendingPullIntos.push(pullIntoDescriptor);\\n\\n          var promise = ReadableStreamAddReadIntoRequest(stream);\\n          ReadableByteStreamControllerCallPullIfNeeded(controller);\\n          return promise;\\n        }\\n\\n        function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\\n          firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\\n          assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\\n          var stream = controller._controlledReadableStream;\\n\\n          if (ReadableStreamHasBYOBReader(stream) === true) {\\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\\n              var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\\n              ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\\n            }\\n          }\\n        }\\n\\n        function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\\n          if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\\n            throw new RangeError('bytesWritten out of range');\\n          }\\n\\n          ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\\n\\n          if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\\n            return;\\n          }\\n\\n          ReadableByteStreamControllerShiftPendingPullInto(controller);\\n          var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\\n\\n          if (remainderSize > 0) {\\n            var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\\n            var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\\n          }\\n\\n          pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\\n          pullIntoDescriptor.bytesFilled -= remainderSize;\\n          ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\\n          ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\\n        }\\n\\n        function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\\n          var firstDescriptor = controller._pendingPullIntos[0];\\n          var stream = controller._controlledReadableStream;\\n\\n          if (stream._state === 'closed') {\\n            if (bytesWritten !== 0) {\\n              throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\\n            }\\n\\n            ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\\n          } else {\\n            assert(stream._state === 'readable');\\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\\n          }\\n        }\\n\\n        function ReadableByteStreamControllerShiftPendingPullInto(controller) {\\n          var descriptor = controller._pendingPullIntos.shift();\\n\\n          ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\n          return descriptor;\\n        }\\n\\n        function ReadableByteStreamControllerShouldCallPull(controller) {\\n          var stream = controller._controlledReadableStream;\\n\\n          if (stream._state !== 'readable') {\\n            return false;\\n          }\\n\\n          if (controller._closeRequested === true) {\\n            return false;\\n          }\\n\\n          if (controller._started === false) {\\n            return false;\\n          }\\n\\n          if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\n            return true;\\n          }\\n\\n          if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\\n            return true;\\n          }\\n\\n          if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\\n            return true;\\n          }\\n\\n          return false;\\n        }\\n\\n        function ReadableByteStreamControllerClose(controller) {\\n          var stream = controller._controlledReadableStream;\\n          assert(controller._closeRequested === false);\\n          assert(stream._state === 'readable');\\n\\n          if (controller._queueTotalSize > 0) {\\n            controller._closeRequested = true;\\n            return;\\n          }\\n\\n          if (controller._pendingPullIntos.length > 0) {\\n            var firstPendingPullInto = controller._pendingPullIntos[0];\\n\\n            if (firstPendingPullInto.bytesFilled > 0) {\\n              var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\\n              ReadableByteStreamControllerError(controller, e);\\n              throw e;\\n            }\\n          }\\n\\n          ReadableStreamClose(stream);\\n        }\\n\\n        function ReadableByteStreamControllerEnqueue(controller, chunk) {\\n          var stream = controller._controlledReadableStream;\\n          assert(controller._closeRequested === false);\\n          assert(stream._state === 'readable');\\n          var buffer = chunk.buffer;\\n          var byteOffset = chunk.byteOffset;\\n          var byteLength = chunk.byteLength;\\n          var transferredBuffer = TransferArrayBuffer(buffer);\\n\\n          if (ReadableStreamHasDefaultReader(stream) === true) {\\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\\n              ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\n            } else {\\n              assert(controller._queue.length === 0);\\n              var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\\n              ReadableStreamFulfillReadRequest(stream, transferredView, false);\\n            }\\n          } else if (ReadableStreamHasBYOBReader(stream) === true) {\\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\\n          } else {\\n            assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\n          }\\n        }\\n\\n        function ReadableByteStreamControllerError(controller, e) {\\n          var stream = controller._controlledReadableStream;\\n          assert(stream._state === 'readable');\\n          ReadableByteStreamControllerClearPendingPullIntos(controller);\\n          ResetQueue(controller);\\n          ReadableStreamError(stream, e);\\n        }\\n\\n        function ReadableByteStreamControllerGetDesiredSize(controller) {\\n          var stream = controller._controlledReadableStream;\\n          var state = stream._state;\\n\\n          if (state === 'errored') {\\n            return null;\\n          }\\n\\n          if (state === 'closed') {\\n            return 0;\\n          }\\n\\n          return controller._strategyHWM - controller._queueTotalSize;\\n        }\\n\\n        function ReadableByteStreamControllerRespond(controller, bytesWritten) {\\n          bytesWritten = Number(bytesWritten);\\n\\n          if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\\n            throw new RangeError('bytesWritten must be a finite');\\n          }\\n\\n          assert(controller._pendingPullIntos.length > 0);\\n          ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\\n        }\\n\\n        function ReadableByteStreamControllerRespondWithNewView(controller, view) {\\n          assert(controller._pendingPullIntos.length > 0);\\n          var firstDescriptor = controller._pendingPullIntos[0];\\n\\n          if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\\n            throw new RangeError('The region specified by view does not match byobRequest');\\n          }\\n\\n          if (firstDescriptor.byteLength !== view.byteLength) {\\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\\n          }\\n\\n          firstDescriptor.buffer = view.buffer;\\n          ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\\n        }\\n\\n        function streamBrandCheckException(name) {\\n          return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\\n        }\\n\\n        function readerLockException(name) {\\n          return new TypeError('Cannot ' + name + ' a stream using a released reader');\\n        }\\n\\n        function defaultReaderBrandCheckException(name) {\\n          return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\\n        }\\n\\n        function defaultReaderClosedPromiseInitialize(reader) {\\n          reader._closedPromise = new Promise(function (resolve, reject) {\\n            reader._closedPromise_resolve = resolve;\\n            reader._closedPromise_reject = reject;\\n          });\\n        }\\n\\n        function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\\n          reader._closedPromise = Promise.reject(reason);\\n          reader._closedPromise_resolve = undefined;\\n          reader._closedPromise_reject = undefined;\\n        }\\n\\n        function defaultReaderClosedPromiseInitializeAsResolved(reader) {\\n          reader._closedPromise = Promise.resolve(undefined);\\n          reader._closedPromise_resolve = undefined;\\n          reader._closedPromise_reject = undefined;\\n        }\\n\\n        function defaultReaderClosedPromiseReject(reader, reason) {\\n          assert(reader._closedPromise_resolve !== undefined);\\n          assert(reader._closedPromise_reject !== undefined);\\n\\n          reader._closedPromise_reject(reason);\\n\\n          reader._closedPromise_resolve = undefined;\\n          reader._closedPromise_reject = undefined;\\n        }\\n\\n        function defaultReaderClosedPromiseResetToRejected(reader, reason) {\\n          assert(reader._closedPromise_resolve === undefined);\\n          assert(reader._closedPromise_reject === undefined);\\n          reader._closedPromise = Promise.reject(reason);\\n        }\\n\\n        function defaultReaderClosedPromiseResolve(reader) {\\n          assert(reader._closedPromise_resolve !== undefined);\\n          assert(reader._closedPromise_reject !== undefined);\\n\\n          reader._closedPromise_resolve(undefined);\\n\\n          reader._closedPromise_resolve = undefined;\\n          reader._closedPromise_reject = undefined;\\n        }\\n\\n        function byobReaderBrandCheckException(name) {\\n          return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\\n        }\\n\\n        function defaultControllerBrandCheckException(name) {\\n          return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\\n        }\\n\\n        function byobRequestBrandCheckException(name) {\\n          return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\\n        }\\n\\n        function byteStreamControllerBrandCheckException(name) {\\n          return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\\n        }\\n\\n        function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\\n          try {\\n            Promise.prototype.then.call(promise, undefined, function () {});\\n          } catch (e) {}\\n        }\\n      }, function (module, exports, __w_pdfjs_require__) {\\n        \\\"use strict\\\";\\n\\n        var transformStream = __w_pdfjs_require__(6);\\n\\n        var readableStream = __w_pdfjs_require__(4);\\n\\n        var writableStream = __w_pdfjs_require__(2);\\n\\n        exports.TransformStream = transformStream.TransformStream;\\n        exports.ReadableStream = readableStream.ReadableStream;\\n        exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\\n        exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\\n        exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\\n        exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\\n        exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\\n        exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\\n        exports.IsWritableStream = writableStream.IsWritableStream;\\n        exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\\n        exports.WritableStream = writableStream.WritableStream;\\n        exports.WritableStreamAbort = writableStream.WritableStreamAbort;\\n        exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\\n        exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\\n        exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\\n        exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\\n      }, function (module, exports, __w_pdfjs_require__) {\\n        \\\"use strict\\\";\\n\\n        var _createClass = function () {\\n          function defineProperties(target, props) {\\n            for (var i = 0; i < props.length; i++) {\\n              var descriptor = props[i];\\n              descriptor.enumerable = descriptor.enumerable || false;\\n              descriptor.configurable = true;\\n              if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n              Object.defineProperty(target, descriptor.key, descriptor);\\n            }\\n          }\\n\\n          return function (Constructor, protoProps, staticProps) {\\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n            if (staticProps) defineProperties(Constructor, staticProps);\\n            return Constructor;\\n          };\\n        }();\\n\\n        function _classCallCheck(instance, Constructor) {\\n          if (!(instance instanceof Constructor)) {\\n            throw new TypeError(\\\"Cannot call a class as a function\\\");\\n          }\\n        }\\n\\n        var _require = __w_pdfjs_require__(1),\\n            assert = _require.assert;\\n\\n        var _require2 = __w_pdfjs_require__(0),\\n            InvokeOrNoop = _require2.InvokeOrNoop,\\n            PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\\n            PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\\n            typeIsObject = _require2.typeIsObject;\\n\\n        var _require3 = __w_pdfjs_require__(4),\\n            ReadableStream = _require3.ReadableStream,\\n            ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\\n            ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\\n            ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\\n            ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\\n\\n        var _require4 = __w_pdfjs_require__(2),\\n            WritableStream = _require4.WritableStream,\\n            WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\\n\\n        function TransformStreamCloseReadable(transformStream) {\\n          if (transformStream._errored === true) {\\n            throw new TypeError('TransformStream is already errored');\\n          }\\n\\n          if (transformStream._readableClosed === true) {\\n            throw new TypeError('Readable side is already closed');\\n          }\\n\\n          TransformStreamCloseReadableInternal(transformStream);\\n        }\\n\\n        function TransformStreamEnqueueToReadable(transformStream, chunk) {\\n          if (transformStream._errored === true) {\\n            throw new TypeError('TransformStream is already errored');\\n          }\\n\\n          if (transformStream._readableClosed === true) {\\n            throw new TypeError('Readable side is already closed');\\n          }\\n\\n          var controller = transformStream._readableController;\\n\\n          try {\\n            ReadableStreamDefaultControllerEnqueue(controller, chunk);\\n          } catch (e) {\\n            transformStream._readableClosed = true;\\n            TransformStreamErrorIfNeeded(transformStream, e);\\n            throw transformStream._storedError;\\n          }\\n\\n          var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\\n          var maybeBackpressure = desiredSize <= 0;\\n\\n          if (maybeBackpressure === true && transformStream._backpressure === false) {\\n            TransformStreamSetBackpressure(transformStream, true);\\n          }\\n        }\\n\\n        function TransformStreamError(transformStream, e) {\\n          if (transformStream._errored === true) {\\n            throw new TypeError('TransformStream is already errored');\\n          }\\n\\n          TransformStreamErrorInternal(transformStream, e);\\n        }\\n\\n        function TransformStreamCloseReadableInternal(transformStream) {\\n          assert(transformStream._errored === false);\\n          assert(transformStream._readableClosed === false);\\n\\n          try {\\n            ReadableStreamDefaultControllerClose(transformStream._readableController);\\n          } catch (e) {\\n            assert(false);\\n          }\\n\\n          transformStream._readableClosed = true;\\n        }\\n\\n        function TransformStreamErrorIfNeeded(transformStream, e) {\\n          if (transformStream._errored === false) {\\n            TransformStreamErrorInternal(transformStream, e);\\n          }\\n        }\\n\\n        function TransformStreamErrorInternal(transformStream, e) {\\n          assert(transformStream._errored === false);\\n          transformStream._errored = true;\\n          transformStream._storedError = e;\\n\\n          if (transformStream._writableDone === false) {\\n            WritableStreamDefaultControllerError(transformStream._writableController, e);\\n          }\\n\\n          if (transformStream._readableClosed === false) {\\n            ReadableStreamDefaultControllerError(transformStream._readableController, e);\\n          }\\n        }\\n\\n        function TransformStreamReadableReadyPromise(transformStream) {\\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\n\\n          if (transformStream._backpressure === false) {\\n            return Promise.resolve();\\n          }\\n\\n          assert(transformStream._backpressure === true, '_backpressure should have been initialized');\\n          return transformStream._backpressureChangePromise;\\n        }\\n\\n        function TransformStreamSetBackpressure(transformStream, backpressure) {\\n          assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\\n\\n          if (transformStream._backpressureChangePromise !== undefined) {\\n            transformStream._backpressureChangePromise_resolve(backpressure);\\n          }\\n\\n          transformStream._backpressureChangePromise = new Promise(function (resolve) {\\n            transformStream._backpressureChangePromise_resolve = resolve;\\n          });\\n\\n          transformStream._backpressureChangePromise.then(function (resolution) {\\n            assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\\n          });\\n\\n          transformStream._backpressure = backpressure;\\n        }\\n\\n        function TransformStreamDefaultTransform(chunk, transformStreamController) {\\n          var transformStream = transformStreamController._controlledTransformStream;\\n          TransformStreamEnqueueToReadable(transformStream, chunk);\\n          return Promise.resolve();\\n        }\\n\\n        function TransformStreamTransform(transformStream, chunk) {\\n          assert(transformStream._errored === false);\\n          assert(transformStream._transforming === false);\\n          assert(transformStream._backpressure === false);\\n          transformStream._transforming = true;\\n          var transformer = transformStream._transformer;\\n          var controller = transformStream._transformStreamController;\\n          var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\\n          return transformPromise.then(function () {\\n            transformStream._transforming = false;\\n            return TransformStreamReadableReadyPromise(transformStream);\\n          }, function (e) {\\n            TransformStreamErrorIfNeeded(transformStream, e);\\n            return Promise.reject(e);\\n          });\\n        }\\n\\n        function IsTransformStreamDefaultController(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        function IsTransformStream(x) {\\n          if (!typeIsObject(x)) {\\n            return false;\\n          }\\n\\n          if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\\n            return false;\\n          }\\n\\n          return true;\\n        }\\n\\n        var TransformStreamSink = function () {\\n          function TransformStreamSink(transformStream, startPromise) {\\n            _classCallCheck(this, TransformStreamSink);\\n\\n            this._transformStream = transformStream;\\n            this._startPromise = startPromise;\\n          }\\n\\n          _createClass(TransformStreamSink, [{\\n            key: 'start',\\n            value: function start(c) {\\n              var transformStream = this._transformStream;\\n              transformStream._writableController = c;\\n              return this._startPromise.then(function () {\\n                return TransformStreamReadableReadyPromise(transformStream);\\n              });\\n            }\\n          }, {\\n            key: 'write',\\n            value: function write(chunk) {\\n              var transformStream = this._transformStream;\\n              return TransformStreamTransform(transformStream, chunk);\\n            }\\n          }, {\\n            key: 'abort',\\n            value: function abort() {\\n              var transformStream = this._transformStream;\\n              transformStream._writableDone = true;\\n              TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\\n            }\\n          }, {\\n            key: 'close',\\n            value: function close() {\\n              var transformStream = this._transformStream;\\n              assert(transformStream._transforming === false);\\n              transformStream._writableDone = true;\\n              var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\\n              return flushPromise.then(function () {\\n                if (transformStream._errored === true) {\\n                  return Promise.reject(transformStream._storedError);\\n                }\\n\\n                if (transformStream._readableClosed === false) {\\n                  TransformStreamCloseReadableInternal(transformStream);\\n                }\\n\\n                return Promise.resolve();\\n              }).catch(function (r) {\\n                TransformStreamErrorIfNeeded(transformStream, r);\\n                return Promise.reject(transformStream._storedError);\\n              });\\n            }\\n          }]);\\n\\n          return TransformStreamSink;\\n        }();\\n\\n        var TransformStreamSource = function () {\\n          function TransformStreamSource(transformStream, startPromise) {\\n            _classCallCheck(this, TransformStreamSource);\\n\\n            this._transformStream = transformStream;\\n            this._startPromise = startPromise;\\n          }\\n\\n          _createClass(TransformStreamSource, [{\\n            key: 'start',\\n            value: function start(c) {\\n              var transformStream = this._transformStream;\\n              transformStream._readableController = c;\\n              return this._startPromise.then(function () {\\n                assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\n\\n                if (transformStream._backpressure === true) {\\n                  return Promise.resolve();\\n                }\\n\\n                assert(transformStream._backpressure === false, '_backpressure should have been initialized');\\n                return transformStream._backpressureChangePromise;\\n              });\\n            }\\n          }, {\\n            key: 'pull',\\n            value: function pull() {\\n              var transformStream = this._transformStream;\\n              assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\\n              assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\n              TransformStreamSetBackpressure(transformStream, false);\\n              return transformStream._backpressureChangePromise;\\n            }\\n          }, {\\n            key: 'cancel',\\n            value: function cancel() {\\n              var transformStream = this._transformStream;\\n              transformStream._readableClosed = true;\\n              TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\\n            }\\n          }]);\\n\\n          return TransformStreamSource;\\n        }();\\n\\n        var TransformStreamDefaultController = function () {\\n          function TransformStreamDefaultController(transformStream) {\\n            _classCallCheck(this, TransformStreamDefaultController);\\n\\n            if (IsTransformStream(transformStream) === false) {\\n              throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\\n            }\\n\\n            if (transformStream._transformStreamController !== undefined) {\\n              throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\\n            }\\n\\n            this._controlledTransformStream = transformStream;\\n          }\\n\\n          _createClass(TransformStreamDefaultController, [{\\n            key: 'enqueue',\\n            value: function enqueue(chunk) {\\n              if (IsTransformStreamDefaultController(this) === false) {\\n                throw defaultControllerBrandCheckException('enqueue');\\n              }\\n\\n              TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\\n            }\\n          }, {\\n            key: 'close',\\n            value: function close() {\\n              if (IsTransformStreamDefaultController(this) === false) {\\n                throw defaultControllerBrandCheckException('close');\\n              }\\n\\n              TransformStreamCloseReadable(this._controlledTransformStream);\\n            }\\n          }, {\\n            key: 'error',\\n            value: function error(reason) {\\n              if (IsTransformStreamDefaultController(this) === false) {\\n                throw defaultControllerBrandCheckException('error');\\n              }\\n\\n              TransformStreamError(this._controlledTransformStream, reason);\\n            }\\n          }, {\\n            key: 'desiredSize',\\n            get: function get() {\\n              if (IsTransformStreamDefaultController(this) === false) {\\n                throw defaultControllerBrandCheckException('desiredSize');\\n              }\\n\\n              var transformStream = this._controlledTransformStream;\\n              var readableController = transformStream._readableController;\\n              return ReadableStreamDefaultControllerGetDesiredSize(readableController);\\n            }\\n          }]);\\n\\n          return TransformStreamDefaultController;\\n        }();\\n\\n        var TransformStream = function () {\\n          function TransformStream() {\\n            var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n            _classCallCheck(this, TransformStream);\\n\\n            this._transformer = transformer;\\n            var readableStrategy = transformer.readableStrategy,\\n                writableStrategy = transformer.writableStrategy;\\n            this._transforming = false;\\n            this._errored = false;\\n            this._storedError = undefined;\\n            this._writableController = undefined;\\n            this._readableController = undefined;\\n            this._transformStreamController = undefined;\\n            this._writableDone = false;\\n            this._readableClosed = false;\\n            this._backpressure = undefined;\\n            this._backpressureChangePromise = undefined;\\n            this._backpressureChangePromise_resolve = undefined;\\n            this._transformStreamController = new TransformStreamDefaultController(this);\\n            var startPromise_resolve = void 0;\\n            var startPromise = new Promise(function (resolve) {\\n              startPromise_resolve = resolve;\\n            });\\n            var source = new TransformStreamSource(this, startPromise);\\n            this._readable = new ReadableStream(source, readableStrategy);\\n            var sink = new TransformStreamSink(this, startPromise);\\n            this._writable = new WritableStream(sink, writableStrategy);\\n            assert(this._writableController !== undefined);\\n            assert(this._readableController !== undefined);\\n            var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\\n            TransformStreamSetBackpressure(this, desiredSize <= 0);\\n            var transformStream = this;\\n            var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\\n            startPromise_resolve(startResult);\\n            startPromise.catch(function (e) {\\n              if (transformStream._errored === false) {\\n                transformStream._errored = true;\\n                transformStream._storedError = e;\\n              }\\n            });\\n          }\\n\\n          _createClass(TransformStream, [{\\n            key: 'readable',\\n            get: function get() {\\n              if (IsTransformStream(this) === false) {\\n                throw streamBrandCheckException('readable');\\n              }\\n\\n              return this._readable;\\n            }\\n          }, {\\n            key: 'writable',\\n            get: function get() {\\n              if (IsTransformStream(this) === false) {\\n                throw streamBrandCheckException('writable');\\n              }\\n\\n              return this._writable;\\n            }\\n          }]);\\n\\n          return TransformStream;\\n        }();\\n\\n        module.exports = {\\n          TransformStream: TransformStream\\n        };\\n\\n        function defaultControllerBrandCheckException(name) {\\n          return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\\n        }\\n\\n        function streamBrandCheckException(name) {\\n          return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\\n        }\\n      }, function (module, exports, __w_pdfjs_require__) {\\n        module.exports = __w_pdfjs_require__(5);\\n      }]));\\n      /***/\\n\\n    },\\n    /* 149 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      {\\n        var isURLSupported = false;\\n\\n        try {\\n          if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\\n            var u = new URL('b', 'http://a');\\n            u.pathname = 'c%20d';\\n            isURLSupported = u.href === 'http://a/c%20d';\\n          }\\n        } catch (ex) {}\\n\\n        if (isURLSupported) {\\n          exports.URL = URL;\\n        } else {\\n          var PolyfillURL = __w_pdfjs_require__(150).URL;\\n\\n          var OriginalURL = __w_pdfjs_require__(8).URL;\\n\\n          if (OriginalURL) {\\n            PolyfillURL.createObjectURL = function (blob) {\\n              return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\\n            };\\n\\n            PolyfillURL.revokeObjectURL = function (url) {\\n              OriginalURL.revokeObjectURL(url);\\n            };\\n          }\\n\\n          exports.URL = PolyfillURL;\\n        }\\n      }\\n      /***/\\n    },\\n    /* 150 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      (function URLConstructorClosure() {\\n        'use strict';\\n\\n        var relative = Object.create(null);\\n        relative['ftp'] = 21;\\n        relative['file'] = 0;\\n        relative['gopher'] = 70;\\n        relative['http'] = 80;\\n        relative['https'] = 443;\\n        relative['ws'] = 80;\\n        relative['wss'] = 443;\\n        var relativePathDotMapping = Object.create(null);\\n        relativePathDotMapping['%2e'] = '.';\\n        relativePathDotMapping['.%2e'] = '..';\\n        relativePathDotMapping['%2e.'] = '..';\\n        relativePathDotMapping['%2e%2e'] = '..';\\n\\n        function isRelativeScheme(scheme) {\\n          return relative[scheme] !== undefined;\\n        }\\n\\n        function invalid() {\\n          clear.call(this);\\n          this._isInvalid = true;\\n        }\\n\\n        function IDNAToASCII(h) {\\n          if (h === '') {\\n            invalid.call(this);\\n          }\\n\\n          return h.toLowerCase();\\n        }\\n\\n        function percentEscape(c) {\\n          var unicode = c.charCodeAt(0);\\n\\n          if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\\n            return c;\\n          }\\n\\n          return encodeURIComponent(c);\\n        }\\n\\n        function percentEscapeQuery(c) {\\n          var unicode = c.charCodeAt(0);\\n\\n          if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\\n            return c;\\n          }\\n\\n          return encodeURIComponent(c);\\n        }\\n\\n        var EOF,\\n            ALPHA = /[a-zA-Z]/,\\n            ALPHANUMERIC = /[a-zA-Z0-9\\\\+\\\\-\\\\.]/;\\n\\n        function parse(input, stateOverride, base) {\\n          function err(message) {\\n            errors.push(message);\\n          }\\n\\n          var state = stateOverride || 'scheme start',\\n              cursor = 0,\\n              buffer = '',\\n              seenAt = false,\\n              seenBracket = false,\\n              errors = [];\\n\\n          loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\\n            var c = input[cursor];\\n\\n            switch (state) {\\n              case 'scheme start':\\n                if (c && ALPHA.test(c)) {\\n                  buffer += c.toLowerCase();\\n                  state = 'scheme';\\n                } else if (!stateOverride) {\\n                  buffer = '';\\n                  state = 'no scheme';\\n                  continue;\\n                } else {\\n                  err('Invalid scheme.');\\n                  break loop;\\n                }\\n\\n                break;\\n\\n              case 'scheme':\\n                if (c && ALPHANUMERIC.test(c)) {\\n                  buffer += c.toLowerCase();\\n                } else if (c === ':') {\\n                  this._scheme = buffer;\\n                  buffer = '';\\n\\n                  if (stateOverride) {\\n                    break loop;\\n                  }\\n\\n                  if (isRelativeScheme(this._scheme)) {\\n                    this._isRelative = true;\\n                  }\\n\\n                  if (this._scheme === 'file') {\\n                    state = 'relative';\\n                  } else if (this._isRelative && base && base._scheme === this._scheme) {\\n                    state = 'relative or authority';\\n                  } else if (this._isRelative) {\\n                    state = 'authority first slash';\\n                  } else {\\n                    state = 'scheme data';\\n                  }\\n                } else if (!stateOverride) {\\n                  buffer = '';\\n                  cursor = 0;\\n                  state = 'no scheme';\\n                  continue;\\n                } else if (c === EOF) {\\n                  break loop;\\n                } else {\\n                  err('Code point not allowed in scheme: ' + c);\\n                  break loop;\\n                }\\n\\n                break;\\n\\n              case 'scheme data':\\n                if (c === '?') {\\n                  this._query = '?';\\n                  state = 'query';\\n                } else if (c === '#') {\\n                  this._fragment = '#';\\n                  state = 'fragment';\\n                } else {\\n                  if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n                    this._schemeData += percentEscape(c);\\n                  }\\n                }\\n\\n                break;\\n\\n              case 'no scheme':\\n                if (!base || !isRelativeScheme(base._scheme)) {\\n                  err('Missing scheme.');\\n                  invalid.call(this);\\n                } else {\\n                  state = 'relative';\\n                  continue;\\n                }\\n\\n                break;\\n\\n              case 'relative or authority':\\n                if (c === '/' && input[cursor + 1] === '/') {\\n                  state = 'authority ignore slashes';\\n                } else {\\n                  err('Expected /, got: ' + c);\\n                  state = 'relative';\\n                  continue;\\n                }\\n\\n                break;\\n\\n              case 'relative':\\n                this._isRelative = true;\\n\\n                if (this._scheme !== 'file') {\\n                  this._scheme = base._scheme;\\n                }\\n\\n                if (c === EOF) {\\n                  this._host = base._host;\\n                  this._port = base._port;\\n                  this._path = base._path.slice();\\n                  this._query = base._query;\\n                  this._username = base._username;\\n                  this._password = base._password;\\n                  break loop;\\n                } else if (c === '/' || c === '\\\\\\\\') {\\n                  if (c === '\\\\\\\\') {\\n                    err('\\\\\\\\ is an invalid code point.');\\n                  }\\n\\n                  state = 'relative slash';\\n                } else if (c === '?') {\\n                  this._host = base._host;\\n                  this._port = base._port;\\n                  this._path = base._path.slice();\\n                  this._query = '?';\\n                  this._username = base._username;\\n                  this._password = base._password;\\n                  state = 'query';\\n                } else if (c === '#') {\\n                  this._host = base._host;\\n                  this._port = base._port;\\n                  this._path = base._path.slice();\\n                  this._query = base._query;\\n                  this._fragment = '#';\\n                  this._username = base._username;\\n                  this._password = base._password;\\n                  state = 'fragment';\\n                } else {\\n                  var nextC = input[cursor + 1];\\n                  var nextNextC = input[cursor + 2];\\n\\n                  if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\\\\\' && nextNextC !== '?' && nextNextC !== '#') {\\n                    this._host = base._host;\\n                    this._port = base._port;\\n                    this._username = base._username;\\n                    this._password = base._password;\\n                    this._path = base._path.slice();\\n\\n                    this._path.pop();\\n                  }\\n\\n                  state = 'relative path';\\n                  continue;\\n                }\\n\\n                break;\\n\\n              case 'relative slash':\\n                if (c === '/' || c === '\\\\\\\\') {\\n                  if (c === '\\\\\\\\') {\\n                    err('\\\\\\\\ is an invalid code point.');\\n                  }\\n\\n                  if (this._scheme === 'file') {\\n                    state = 'file host';\\n                  } else {\\n                    state = 'authority ignore slashes';\\n                  }\\n                } else {\\n                  if (this._scheme !== 'file') {\\n                    this._host = base._host;\\n                    this._port = base._port;\\n                    this._username = base._username;\\n                    this._password = base._password;\\n                  }\\n\\n                  state = 'relative path';\\n                  continue;\\n                }\\n\\n                break;\\n\\n              case 'authority first slash':\\n                if (c === '/') {\\n                  state = 'authority second slash';\\n                } else {\\n                  err('Expected \\\\'/\\\\', got: ' + c);\\n                  state = 'authority ignore slashes';\\n                  continue;\\n                }\\n\\n                break;\\n\\n              case 'authority second slash':\\n                state = 'authority ignore slashes';\\n\\n                if (c !== '/') {\\n                  err('Expected \\\\'/\\\\', got: ' + c);\\n                  continue;\\n                }\\n\\n                break;\\n\\n              case 'authority ignore slashes':\\n                if (c !== '/' && c !== '\\\\\\\\') {\\n                  state = 'authority';\\n                  continue;\\n                } else {\\n                  err('Expected authority, got: ' + c);\\n                }\\n\\n                break;\\n\\n              case 'authority':\\n                if (c === '@') {\\n                  if (seenAt) {\\n                    err('@ already seen.');\\n                    buffer += '%40';\\n                  }\\n\\n                  seenAt = true;\\n\\n                  for (var i = 0; i < buffer.length; i++) {\\n                    var cp = buffer[i];\\n\\n                    if (cp === '\\\\t' || cp === '\\\\n' || cp === '\\\\r') {\\n                      err('Invalid whitespace in authority.');\\n                      continue;\\n                    }\\n\\n                    if (cp === ':' && this._password === null) {\\n                      this._password = '';\\n                      continue;\\n                    }\\n\\n                    var tempC = percentEscape(cp);\\n\\n                    if (this._password !== null) {\\n                      this._password += tempC;\\n                    } else {\\n                      this._username += tempC;\\n                    }\\n                  }\\n\\n                  buffer = '';\\n                } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\n                  cursor -= buffer.length;\\n                  buffer = '';\\n                  state = 'host';\\n                  continue;\\n                } else {\\n                  buffer += c;\\n                }\\n\\n                break;\\n\\n              case 'file host':\\n                if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\n                  if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\\n                    state = 'relative path';\\n                  } else if (buffer.length === 0) {\\n                    state = 'relative path start';\\n                  } else {\\n                    this._host = IDNAToASCII.call(this, buffer);\\n                    buffer = '';\\n                    state = 'relative path start';\\n                  }\\n\\n                  continue;\\n                } else if (c === '\\\\t' || c === '\\\\n' || c === '\\\\r') {\\n                  err('Invalid whitespace in file host.');\\n                } else {\\n                  buffer += c;\\n                }\\n\\n                break;\\n\\n              case 'host':\\n              case 'hostname':\\n                if (c === ':' && !seenBracket) {\\n                  this._host = IDNAToASCII.call(this, buffer);\\n                  buffer = '';\\n                  state = 'port';\\n\\n                  if (stateOverride === 'hostname') {\\n                    break loop;\\n                  }\\n                } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\n                  this._host = IDNAToASCII.call(this, buffer);\\n                  buffer = '';\\n                  state = 'relative path start';\\n\\n                  if (stateOverride) {\\n                    break loop;\\n                  }\\n\\n                  continue;\\n                } else if (c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n                  if (c === '[') {\\n                    seenBracket = true;\\n                  } else if (c === ']') {\\n                    seenBracket = false;\\n                  }\\n\\n                  buffer += c;\\n                } else {\\n                  err('Invalid code point in host/hostname: ' + c);\\n                }\\n\\n                break;\\n\\n              case 'port':\\n                if (/[0-9]/.test(c)) {\\n                  buffer += c;\\n                } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#' || stateOverride) {\\n                  if (buffer !== '') {\\n                    var temp = parseInt(buffer, 10);\\n\\n                    if (temp !== relative[this._scheme]) {\\n                      this._port = temp + '';\\n                    }\\n\\n                    buffer = '';\\n                  }\\n\\n                  if (stateOverride) {\\n                    break loop;\\n                  }\\n\\n                  state = 'relative path start';\\n                  continue;\\n                } else if (c === '\\\\t' || c === '\\\\n' || c === '\\\\r') {\\n                  err('Invalid code point in port: ' + c);\\n                } else {\\n                  invalid.call(this);\\n                }\\n\\n                break;\\n\\n              case 'relative path start':\\n                if (c === '\\\\\\\\') {\\n                  err('\\\\'\\\\\\\\\\\\' not allowed in path.');\\n                }\\n\\n                state = 'relative path';\\n\\n                if (c !== '/' && c !== '\\\\\\\\') {\\n                  continue;\\n                }\\n\\n                break;\\n\\n              case 'relative path':\\n                if (c === EOF || c === '/' || c === '\\\\\\\\' || !stateOverride && (c === '?' || c === '#')) {\\n                  if (c === '\\\\\\\\') {\\n                    err('\\\\\\\\ not allowed in relative path.');\\n                  }\\n\\n                  var tmp;\\n\\n                  if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\\n                    buffer = tmp;\\n                  }\\n\\n                  if (buffer === '..') {\\n                    this._path.pop();\\n\\n                    if (c !== '/' && c !== '\\\\\\\\') {\\n                      this._path.push('');\\n                    }\\n                  } else if (buffer === '.' && c !== '/' && c !== '\\\\\\\\') {\\n                    this._path.push('');\\n                  } else if (buffer !== '.') {\\n                    if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\\n                      buffer = buffer[0] + ':';\\n                    }\\n\\n                    this._path.push(buffer);\\n                  }\\n\\n                  buffer = '';\\n\\n                  if (c === '?') {\\n                    this._query = '?';\\n                    state = 'query';\\n                  } else if (c === '#') {\\n                    this._fragment = '#';\\n                    state = 'fragment';\\n                  }\\n                } else if (c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n                  buffer += percentEscape(c);\\n                }\\n\\n                break;\\n\\n              case 'query':\\n                if (!stateOverride && c === '#') {\\n                  this._fragment = '#';\\n                  state = 'fragment';\\n                } else if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n                  this._query += percentEscapeQuery(c);\\n                }\\n\\n                break;\\n\\n              case 'fragment':\\n                if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\n                  this._fragment += c;\\n                }\\n\\n                break;\\n            }\\n\\n            cursor++;\\n          }\\n        }\\n\\n        function clear() {\\n          this._scheme = '';\\n          this._schemeData = '';\\n          this._username = '';\\n          this._password = null;\\n          this._host = '';\\n          this._port = '';\\n          this._path = [];\\n          this._query = '';\\n          this._fragment = '';\\n          this._isInvalid = false;\\n          this._isRelative = false;\\n        }\\n\\n        function JURL(url, base) {\\n          if (base !== undefined && !(base instanceof JURL)) {\\n            base = new JURL(String(base));\\n          }\\n\\n          this._url = url;\\n          clear.call(this);\\n          var input = url.replace(/^[ \\\\t\\\\r\\\\n\\\\f]+|[ \\\\t\\\\r\\\\n\\\\f]+$/g, '');\\n          parse.call(this, input, null, base);\\n        }\\n\\n        JURL.prototype = {\\n          toString: function toString() {\\n            return this.href;\\n          },\\n\\n          get href() {\\n            if (this._isInvalid) {\\n              return this._url;\\n            }\\n\\n            var authority = '';\\n\\n            if (this._username !== '' || this._password !== null) {\\n              authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\\n            }\\n\\n            return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\\n          },\\n\\n          set href(value) {\\n            clear.call(this);\\n            parse.call(this, value);\\n          },\\n\\n          get protocol() {\\n            return this._scheme + ':';\\n          },\\n\\n          set protocol(value) {\\n            if (this._isInvalid) {\\n              return;\\n            }\\n\\n            parse.call(this, value + ':', 'scheme start');\\n          },\\n\\n          get host() {\\n            return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\\n          },\\n\\n          set host(value) {\\n            if (this._isInvalid || !this._isRelative) {\\n              return;\\n            }\\n\\n            parse.call(this, value, 'host');\\n          },\\n\\n          get hostname() {\\n            return this._host;\\n          },\\n\\n          set hostname(value) {\\n            if (this._isInvalid || !this._isRelative) {\\n              return;\\n            }\\n\\n            parse.call(this, value, 'hostname');\\n          },\\n\\n          get port() {\\n            return this._port;\\n          },\\n\\n          set port(value) {\\n            if (this._isInvalid || !this._isRelative) {\\n              return;\\n            }\\n\\n            parse.call(this, value, 'port');\\n          },\\n\\n          get pathname() {\\n            return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\\n          },\\n\\n          set pathname(value) {\\n            if (this._isInvalid || !this._isRelative) {\\n              return;\\n            }\\n\\n            this._path = [];\\n            parse.call(this, value, 'relative path start');\\n          },\\n\\n          get search() {\\n            return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\\n          },\\n\\n          set search(value) {\\n            if (this._isInvalid || !this._isRelative) {\\n              return;\\n            }\\n\\n            this._query = '?';\\n\\n            if (value[0] === '?') {\\n              value = value.slice(1);\\n            }\\n\\n            parse.call(this, value, 'query');\\n          },\\n\\n          get hash() {\\n            return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\\n          },\\n\\n          set hash(value) {\\n            if (this._isInvalid) {\\n              return;\\n            }\\n\\n            this._fragment = '#';\\n\\n            if (value[0] === '#') {\\n              value = value.slice(1);\\n            }\\n\\n            parse.call(this, value, 'fragment');\\n          },\\n\\n          get origin() {\\n            var host;\\n\\n            if (this._isInvalid || !this._scheme) {\\n              return '';\\n            }\\n\\n            switch (this._scheme) {\\n              case 'data':\\n              case 'file':\\n              case 'javascript':\\n              case 'mailto':\\n                return 'null';\\n\\n              case 'blob':\\n                try {\\n                  return new JURL(this._schemeData).origin || 'null';\\n                } catch (_) {}\\n\\n                return 'null';\\n            }\\n\\n            host = this.host;\\n\\n            if (!host) {\\n              return '';\\n            }\\n\\n            return this._scheme + '://' + host;\\n          }\\n\\n        };\\n        exports.URL = JURL;\\n      })();\\n      /***/\\n\\n    },\\n    /* 151 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.NetworkPdfManager = exports.LocalPdfManager = void 0;\\n\\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _chunked_stream = __w_pdfjs_require__(152);\\n\\n      var _document = __w_pdfjs_require__(153);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      function _interopRequireDefault(obj) {\\n        return obj && obj.__esModule ? obj : {\\n          default: obj\\n        };\\n      }\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _possibleConstructorReturn(self, call) {\\n        if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n          return call;\\n        }\\n\\n        return _assertThisInitialized(self);\\n      }\\n\\n      function _getPrototypeOf(o) {\\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n          return o.__proto__ || Object.getPrototypeOf(o);\\n        };\\n        return _getPrototypeOf(o);\\n      }\\n\\n      function _inherits(subClass, superClass) {\\n        if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n          throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n        }\\n\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n          constructor: {\\n            value: subClass,\\n            writable: true,\\n            configurable: true\\n          }\\n        });\\n        if (superClass) _setPrototypeOf(subClass, superClass);\\n      }\\n\\n      function _setPrototypeOf(o, p) {\\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n          o.__proto__ = p;\\n          return o;\\n        };\\n\\n        return _setPrototypeOf(o, p);\\n      }\\n\\n      function _assertThisInitialized(self) {\\n        if (self === void 0) {\\n          throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n        }\\n\\n        return self;\\n      }\\n\\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\\n        try {\\n          var info = gen[key](arg);\\n          var value = info.value;\\n        } catch (error) {\\n          reject(error);\\n          return;\\n        }\\n\\n        if (info.done) {\\n          resolve(value);\\n        } else {\\n          Promise.resolve(value).then(_next, _throw);\\n        }\\n      }\\n\\n      function _asyncToGenerator(fn) {\\n        return function () {\\n          var self = this,\\n              args = arguments;\\n          return new Promise(function (resolve, reject) {\\n            var gen = fn.apply(self, args);\\n\\n            function _next(value) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"next\\\", value);\\n            }\\n\\n            function _throw(err) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"throw\\\", err);\\n            }\\n\\n            _next(undefined);\\n          });\\n        };\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var BasePdfManager =\\n      /*#__PURE__*/\\n      function () {\\n        function BasePdfManager() {\\n          _classCallCheck(this, BasePdfManager);\\n\\n          if (this.constructor === BasePdfManager) {\\n            (0, _util.unreachable)('Cannot initialize BasePdfManager.');\\n          }\\n        }\\n\\n        _createClass(BasePdfManager, [{\\n          key: \\\"onLoadedStream\\\",\\n          value: function onLoadedStream() {\\n            (0, _util.unreachable)('Abstract method `onLoadedStream` called');\\n          }\\n        }, {\\n          key: \\\"ensureDoc\\\",\\n          value: function ensureDoc(prop, args) {\\n            return this.ensure(this.pdfDocument, prop, args);\\n          }\\n        }, {\\n          key: \\\"ensureXRef\\\",\\n          value: function ensureXRef(prop, args) {\\n            return this.ensure(this.pdfDocument.xref, prop, args);\\n          }\\n        }, {\\n          key: \\\"ensureCatalog\\\",\\n          value: function ensureCatalog(prop, args) {\\n            return this.ensure(this.pdfDocument.catalog, prop, args);\\n          }\\n        }, {\\n          key: \\\"getPage\\\",\\n          value: function getPage(pageIndex) {\\n            return this.pdfDocument.getPage(pageIndex);\\n          }\\n        }, {\\n          key: \\\"fontFallback\\\",\\n          value: function fontFallback(id, handler) {\\n            return this.pdfDocument.fontFallback(id, handler);\\n          }\\n        }, {\\n          key: \\\"cleanup\\\",\\n          value: function cleanup() {\\n            return this.pdfDocument.cleanup();\\n          }\\n        }, {\\n          key: \\\"ensure\\\",\\n          value: function () {\\n            var _ensure = _asyncToGenerator(\\n            /*#__PURE__*/\\n            _regenerator.default.mark(function _callee(obj, prop, args) {\\n              return _regenerator.default.wrap(function _callee$(_context) {\\n                while (1) {\\n                  switch (_context.prev = _context.next) {\\n                    case 0:\\n                      (0, _util.unreachable)('Abstract method `ensure` called');\\n\\n                    case 1:\\n                    case \\\"end\\\":\\n                      return _context.stop();\\n                  }\\n                }\\n              }, _callee, this);\\n            }));\\n\\n            function ensure(_x, _x2, _x3) {\\n              return _ensure.apply(this, arguments);\\n            }\\n\\n            return ensure;\\n          }()\\n        }, {\\n          key: \\\"requestRange\\\",\\n          value: function requestRange(begin, end) {\\n            (0, _util.unreachable)('Abstract method `requestRange` called');\\n          }\\n        }, {\\n          key: \\\"requestLoadedStream\\\",\\n          value: function requestLoadedStream() {\\n            (0, _util.unreachable)('Abstract method `requestLoadedStream` called');\\n          }\\n        }, {\\n          key: \\\"sendProgressiveData\\\",\\n          value: function sendProgressiveData(chunk) {\\n            (0, _util.unreachable)('Abstract method `sendProgressiveData` called');\\n          }\\n        }, {\\n          key: \\\"updatePassword\\\",\\n          value: function updatePassword(password) {\\n            this._password = password;\\n          }\\n        }, {\\n          key: \\\"terminate\\\",\\n          value: function terminate() {\\n            (0, _util.unreachable)('Abstract method `terminate` called');\\n          }\\n        }, {\\n          key: \\\"docId\\\",\\n          get: function get() {\\n            return this._docId;\\n          }\\n        }, {\\n          key: \\\"password\\\",\\n          get: function get() {\\n            return this._password;\\n          }\\n        }, {\\n          key: \\\"docBaseUrl\\\",\\n          get: function get() {\\n            var docBaseUrl = null;\\n\\n            if (this._docBaseUrl) {\\n              var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\\n\\n              if (absoluteUrl) {\\n                docBaseUrl = absoluteUrl.href;\\n              } else {\\n                (0, _util.warn)(\\\"Invalid absolute docBaseUrl: \\\\\\\"\\\".concat(this._docBaseUrl, \\\"\\\\\\\".\\\"));\\n              }\\n            }\\n\\n            return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\\n          }\\n        }]);\\n\\n        return BasePdfManager;\\n      }();\\n\\n      var LocalPdfManager =\\n      /*#__PURE__*/\\n      function (_BasePdfManager) {\\n        _inherits(LocalPdfManager, _BasePdfManager);\\n\\n        function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\\n          var _this;\\n\\n          _classCallCheck(this, LocalPdfManager);\\n\\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalPdfManager).call(this));\\n          _this._docId = docId;\\n          _this._password = password;\\n          _this._docBaseUrl = docBaseUrl;\\n          _this.evaluatorOptions = evaluatorOptions;\\n          var stream = new _stream.Stream(data);\\n          _this.pdfDocument = new _document.PDFDocument(_assertThisInitialized(_assertThisInitialized(_this)), stream);\\n          _this._loadedStreamPromise = Promise.resolve(stream);\\n          return _this;\\n        }\\n\\n        _createClass(LocalPdfManager, [{\\n          key: \\\"ensure\\\",\\n          value: function () {\\n            var _ensure2 = _asyncToGenerator(\\n            /*#__PURE__*/\\n            _regenerator.default.mark(function _callee2(obj, prop, args) {\\n              var value;\\n              return _regenerator.default.wrap(function _callee2$(_context2) {\\n                while (1) {\\n                  switch (_context2.prev = _context2.next) {\\n                    case 0:\\n                      value = obj[prop];\\n\\n                      if (!(typeof value === 'function')) {\\n                        _context2.next = 3;\\n                        break;\\n                      }\\n\\n                      return _context2.abrupt(\\\"return\\\", value.apply(obj, args));\\n\\n                    case 3:\\n                      return _context2.abrupt(\\\"return\\\", value);\\n\\n                    case 4:\\n                    case \\\"end\\\":\\n                      return _context2.stop();\\n                  }\\n                }\\n              }, _callee2, this);\\n            }));\\n\\n            function ensure(_x4, _x5, _x6) {\\n              return _ensure2.apply(this, arguments);\\n            }\\n\\n            return ensure;\\n          }()\\n        }, {\\n          key: \\\"requestRange\\\",\\n          value: function requestRange(begin, end) {\\n            return Promise.resolve();\\n          }\\n        }, {\\n          key: \\\"requestLoadedStream\\\",\\n          value: function requestLoadedStream() {}\\n        }, {\\n          key: \\\"onLoadedStream\\\",\\n          value: function onLoadedStream() {\\n            return this._loadedStreamPromise;\\n          }\\n        }, {\\n          key: \\\"terminate\\\",\\n          value: function terminate() {}\\n        }]);\\n\\n        return LocalPdfManager;\\n      }(BasePdfManager);\\n\\n      exports.LocalPdfManager = LocalPdfManager;\\n\\n      var NetworkPdfManager =\\n      /*#__PURE__*/\\n      function (_BasePdfManager2) {\\n        _inherits(NetworkPdfManager, _BasePdfManager2);\\n\\n        function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\\n          var _this2;\\n\\n          _classCallCheck(this, NetworkPdfManager);\\n\\n          _this2 = _possibleConstructorReturn(this, _getPrototypeOf(NetworkPdfManager).call(this));\\n          _this2._docId = docId;\\n          _this2._password = args.password;\\n          _this2._docBaseUrl = docBaseUrl;\\n          _this2.msgHandler = args.msgHandler;\\n          _this2.evaluatorOptions = evaluatorOptions;\\n          _this2.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, {\\n            msgHandler: args.msgHandler,\\n            length: args.length,\\n            disableAutoFetch: args.disableAutoFetch,\\n            rangeChunkSize: args.rangeChunkSize\\n          });\\n          _this2.pdfDocument = new _document.PDFDocument(_assertThisInitialized(_assertThisInitialized(_this2)), _this2.streamManager.getStream());\\n          return _this2;\\n        }\\n\\n        _createClass(NetworkPdfManager, [{\\n          key: \\\"ensure\\\",\\n          value: function () {\\n            var _ensure3 = _asyncToGenerator(\\n            /*#__PURE__*/\\n            _regenerator.default.mark(function _callee3(obj, prop, args) {\\n              var value;\\n              return _regenerator.default.wrap(function _callee3$(_context3) {\\n                while (1) {\\n                  switch (_context3.prev = _context3.next) {\\n                    case 0:\\n                      _context3.prev = 0;\\n                      value = obj[prop];\\n\\n                      if (!(typeof value === 'function')) {\\n                        _context3.next = 4;\\n                        break;\\n                      }\\n\\n                      return _context3.abrupt(\\\"return\\\", value.apply(obj, args));\\n\\n                    case 4:\\n                      return _context3.abrupt(\\\"return\\\", value);\\n\\n                    case 7:\\n                      _context3.prev = 7;\\n                      _context3.t0 = _context3[\\\"catch\\\"](0);\\n\\n                      if (_context3.t0 instanceof _util.MissingDataException) {\\n                        _context3.next = 11;\\n                        break;\\n                      }\\n\\n                      throw _context3.t0;\\n\\n                    case 11:\\n                      _context3.next = 13;\\n                      return this.requestRange(_context3.t0.begin, _context3.t0.end);\\n\\n                    case 13:\\n                      return _context3.abrupt(\\\"return\\\", this.ensure(obj, prop, args));\\n\\n                    case 14:\\n                    case \\\"end\\\":\\n                      return _context3.stop();\\n                  }\\n                }\\n              }, _callee3, this, [[0, 7]]);\\n            }));\\n\\n            function ensure(_x7, _x8, _x9) {\\n              return _ensure3.apply(this, arguments);\\n            }\\n\\n            return ensure;\\n          }()\\n        }, {\\n          key: \\\"requestRange\\\",\\n          value: function requestRange(begin, end) {\\n            return this.streamManager.requestRange(begin, end);\\n          }\\n        }, {\\n          key: \\\"requestLoadedStream\\\",\\n          value: function requestLoadedStream() {\\n            this.streamManager.requestAllChunks();\\n          }\\n        }, {\\n          key: \\\"sendProgressiveData\\\",\\n          value: function sendProgressiveData(chunk) {\\n            this.streamManager.onReceiveData({\\n              chunk: chunk\\n            });\\n          }\\n        }, {\\n          key: \\\"onLoadedStream\\\",\\n          value: function onLoadedStream() {\\n            return this.streamManager.onLoadedStream();\\n          }\\n        }, {\\n          key: \\\"terminate\\\",\\n          value: function terminate() {\\n            this.streamManager.abort();\\n          }\\n        }]);\\n\\n        return NetworkPdfManager;\\n      }(BasePdfManager);\\n\\n      exports.NetworkPdfManager = NetworkPdfManager;\\n      /***/\\n    },\\n    /* 152 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.ChunkedStreamManager = exports.ChunkedStream = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var ChunkedStream =\\n      /*#__PURE__*/\\n      function () {\\n        function ChunkedStream(length, chunkSize, manager) {\\n          _classCallCheck(this, ChunkedStream);\\n\\n          this.bytes = new Uint8Array(length);\\n          this.start = 0;\\n          this.pos = 0;\\n          this.end = length;\\n          this.chunkSize = chunkSize;\\n          this.loadedChunks = [];\\n          this.numChunksLoaded = 0;\\n          this.numChunks = Math.ceil(length / chunkSize);\\n          this.manager = manager;\\n          this.progressiveDataLength = 0;\\n          this.lastSuccessfulEnsureByteChunk = -1;\\n        }\\n\\n        _createClass(ChunkedStream, [{\\n          key: \\\"getMissingChunks\\\",\\n          value: function getMissingChunks() {\\n            var chunks = [];\\n\\n            for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\\n              if (!this.loadedChunks[chunk]) {\\n                chunks.push(chunk);\\n              }\\n            }\\n\\n            return chunks;\\n          }\\n        }, {\\n          key: \\\"getBaseStreams\\\",\\n          value: function getBaseStreams() {\\n            return [this];\\n          }\\n        }, {\\n          key: \\\"allChunksLoaded\\\",\\n          value: function allChunksLoaded() {\\n            return this.numChunksLoaded === this.numChunks;\\n          }\\n        }, {\\n          key: \\\"onReceiveData\\\",\\n          value: function onReceiveData(begin, chunk) {\\n            var chunkSize = this.chunkSize;\\n\\n            if (begin % chunkSize !== 0) {\\n              throw new Error(\\\"Bad begin offset: \\\".concat(begin));\\n            }\\n\\n            var end = begin + chunk.byteLength;\\n\\n            if (end % chunkSize !== 0 && end !== this.bytes.length) {\\n              throw new Error(\\\"Bad end offset: \\\".concat(end));\\n            }\\n\\n            this.bytes.set(new Uint8Array(chunk), begin);\\n            var beginChunk = Math.floor(begin / chunkSize);\\n            var endChunk = Math.floor((end - 1) / chunkSize) + 1;\\n\\n            for (var curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\\n              if (!this.loadedChunks[curChunk]) {\\n                this.loadedChunks[curChunk] = true;\\n                ++this.numChunksLoaded;\\n              }\\n            }\\n          }\\n        }, {\\n          key: \\\"onReceiveProgressiveData\\\",\\n          value: function onReceiveProgressiveData(data) {\\n            var position = this.progressiveDataLength;\\n            var beginChunk = Math.floor(position / this.chunkSize);\\n            this.bytes.set(new Uint8Array(data), position);\\n            position += data.byteLength;\\n            this.progressiveDataLength = position;\\n            var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\\n\\n            for (var curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\\n              if (!this.loadedChunks[curChunk]) {\\n                this.loadedChunks[curChunk] = true;\\n                ++this.numChunksLoaded;\\n              }\\n            }\\n          }\\n        }, {\\n          key: \\\"ensureByte\\\",\\n          value: function ensureByte(pos) {\\n            var chunk = Math.floor(pos / this.chunkSize);\\n\\n            if (chunk === this.lastSuccessfulEnsureByteChunk) {\\n              return;\\n            }\\n\\n            if (!this.loadedChunks[chunk]) {\\n              throw new _util.MissingDataException(pos, pos + 1);\\n            }\\n\\n            this.lastSuccessfulEnsureByteChunk = chunk;\\n          }\\n        }, {\\n          key: \\\"ensureRange\\\",\\n          value: function ensureRange(begin, end) {\\n            if (begin >= end) {\\n              return;\\n            }\\n\\n            if (end <= this.progressiveDataLength) {\\n              return;\\n            }\\n\\n            var chunkSize = this.chunkSize;\\n            var beginChunk = Math.floor(begin / chunkSize);\\n            var endChunk = Math.floor((end - 1) / chunkSize) + 1;\\n\\n            for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n              if (!this.loadedChunks[chunk]) {\\n                throw new _util.MissingDataException(begin, end);\\n              }\\n            }\\n          }\\n        }, {\\n          key: \\\"nextEmptyChunk\\\",\\n          value: function nextEmptyChunk(beginChunk) {\\n            var numChunks = this.numChunks;\\n\\n            for (var i = 0; i < numChunks; ++i) {\\n              var chunk = (beginChunk + i) % numChunks;\\n\\n              if (!this.loadedChunks[chunk]) {\\n                return chunk;\\n              }\\n            }\\n\\n            return null;\\n          }\\n        }, {\\n          key: \\\"hasChunk\\\",\\n          value: function hasChunk(chunk) {\\n            return !!this.loadedChunks[chunk];\\n          }\\n        }, {\\n          key: \\\"getByte\\\",\\n          value: function getByte() {\\n            var pos = this.pos;\\n\\n            if (pos >= this.end) {\\n              return -1;\\n            }\\n\\n            this.ensureByte(pos);\\n            return this.bytes[this.pos++];\\n          }\\n        }, {\\n          key: \\\"getUint16\\\",\\n          value: function getUint16() {\\n            var b0 = this.getByte();\\n            var b1 = this.getByte();\\n\\n            if (b0 === -1 || b1 === -1) {\\n              return -1;\\n            }\\n\\n            return (b0 << 8) + b1;\\n          }\\n        }, {\\n          key: \\\"getInt32\\\",\\n          value: function getInt32() {\\n            var b0 = this.getByte();\\n            var b1 = this.getByte();\\n            var b2 = this.getByte();\\n            var b3 = this.getByte();\\n            return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n          }\\n        }, {\\n          key: \\\"getBytes\\\",\\n          value: function getBytes(length) {\\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n            var bytes = this.bytes;\\n            var pos = this.pos;\\n            var strEnd = this.end;\\n\\n            if (!length) {\\n              this.ensureRange(pos, strEnd);\\n\\n              var _subarray = bytes.subarray(pos, strEnd);\\n\\n              return forceClamped ? new Uint8ClampedArray(_subarray) : _subarray;\\n            }\\n\\n            var end = pos + length;\\n\\n            if (end > strEnd) {\\n              end = strEnd;\\n            }\\n\\n            this.ensureRange(pos, end);\\n            this.pos = end;\\n            var subarray = bytes.subarray(pos, end);\\n            return forceClamped ? new Uint8ClampedArray(subarray) : subarray;\\n          }\\n        }, {\\n          key: \\\"peekByte\\\",\\n          value: function peekByte() {\\n            var peekedByte = this.getByte();\\n            this.pos--;\\n            return peekedByte;\\n          }\\n        }, {\\n          key: \\\"peekBytes\\\",\\n          value: function peekBytes(length) {\\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n            var bytes = this.getBytes(length, forceClamped);\\n            this.pos -= bytes.length;\\n            return bytes;\\n          }\\n        }, {\\n          key: \\\"getByteRange\\\",\\n          value: function getByteRange(begin, end) {\\n            this.ensureRange(begin, end);\\n            return this.bytes.subarray(begin, end);\\n          }\\n        }, {\\n          key: \\\"skip\\\",\\n          value: function skip(n) {\\n            if (!n) {\\n              n = 1;\\n            }\\n\\n            this.pos += n;\\n          }\\n        }, {\\n          key: \\\"reset\\\",\\n          value: function reset() {\\n            this.pos = this.start;\\n          }\\n        }, {\\n          key: \\\"moveStart\\\",\\n          value: function moveStart() {\\n            this.start = this.pos;\\n          }\\n        }, {\\n          key: \\\"makeSubStream\\\",\\n          value: function makeSubStream(start, length, dict) {\\n            this.ensureRange(start, start + length);\\n\\n            function ChunkedStreamSubstream() {}\\n\\n            ChunkedStreamSubstream.prototype = Object.create(this);\\n\\n            ChunkedStreamSubstream.prototype.getMissingChunks = function () {\\n              var chunkSize = this.chunkSize;\\n              var beginChunk = Math.floor(this.start / chunkSize);\\n              var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\\n              var missingChunks = [];\\n\\n              for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n                if (!this.loadedChunks[chunk]) {\\n                  missingChunks.push(chunk);\\n                }\\n              }\\n\\n              return missingChunks;\\n            };\\n\\n            var subStream = new ChunkedStreamSubstream();\\n            subStream.pos = subStream.start = start;\\n            subStream.end = start + length || this.end;\\n            subStream.dict = dict;\\n            return subStream;\\n          }\\n        }, {\\n          key: \\\"length\\\",\\n          get: function get() {\\n            return this.end - this.start;\\n          }\\n        }, {\\n          key: \\\"isEmpty\\\",\\n          get: function get() {\\n            return this.length === 0;\\n          }\\n        }]);\\n\\n        return ChunkedStream;\\n      }();\\n\\n      exports.ChunkedStream = ChunkedStream;\\n\\n      var ChunkedStreamManager =\\n      /*#__PURE__*/\\n      function () {\\n        function ChunkedStreamManager(pdfNetworkStream, args) {\\n          _classCallCheck(this, ChunkedStreamManager);\\n\\n          this.length = args.length;\\n          this.chunkSize = args.rangeChunkSize;\\n          this.stream = new ChunkedStream(this.length, this.chunkSize, this);\\n          this.pdfNetworkStream = pdfNetworkStream;\\n          this.disableAutoFetch = args.disableAutoFetch;\\n          this.msgHandler = args.msgHandler;\\n          this.currRequestId = 0;\\n          this.chunksNeededByRequest = Object.create(null);\\n          this.requestsByChunk = Object.create(null);\\n          this.promisesByRequest = Object.create(null);\\n          this.progressiveDataLength = 0;\\n          this.aborted = false;\\n          this._loadedStreamCapability = (0, _util.createPromiseCapability)();\\n        }\\n\\n        _createClass(ChunkedStreamManager, [{\\n          key: \\\"onLoadedStream\\\",\\n          value: function onLoadedStream() {\\n            return this._loadedStreamCapability.promise;\\n          }\\n        }, {\\n          key: \\\"sendRequest\\\",\\n          value: function sendRequest(begin, end) {\\n            var _this = this;\\n\\n            var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\\n\\n            if (!rangeReader.isStreamingSupported) {\\n              rangeReader.onProgress = this.onProgress.bind(this);\\n            }\\n\\n            var chunks = [],\\n                loaded = 0;\\n            var promise = new Promise(function (resolve, reject) {\\n              var readChunk = function readChunk(chunk) {\\n                try {\\n                  if (!chunk.done) {\\n                    var data = chunk.value;\\n                    chunks.push(data);\\n                    loaded += (0, _util.arrayByteLength)(data);\\n\\n                    if (rangeReader.isStreamingSupported) {\\n                      _this.onProgress({\\n                        loaded: loaded\\n                      });\\n                    }\\n\\n                    rangeReader.read().then(readChunk, reject);\\n                    return;\\n                  }\\n\\n                  var chunkData = (0, _util.arraysToBytes)(chunks);\\n                  chunks = null;\\n                  resolve(chunkData);\\n                } catch (e) {\\n                  reject(e);\\n                }\\n              };\\n\\n              rangeReader.read().then(readChunk, reject);\\n            });\\n            promise.then(function (data) {\\n              if (_this.aborted) {\\n                return;\\n              }\\n\\n              _this.onReceiveData({\\n                chunk: data,\\n                begin: begin\\n              });\\n            });\\n          }\\n        }, {\\n          key: \\\"requestAllChunks\\\",\\n          value: function requestAllChunks() {\\n            var missingChunks = this.stream.getMissingChunks();\\n\\n            this._requestChunks(missingChunks);\\n\\n            return this._loadedStreamCapability.promise;\\n          }\\n        }, {\\n          key: \\\"_requestChunks\\\",\\n          value: function _requestChunks(chunks) {\\n            var requestId = this.currRequestId++;\\n            var chunksNeeded = Object.create(null);\\n            this.chunksNeededByRequest[requestId] = chunksNeeded;\\n            var _iteratorNormalCompletion = true;\\n            var _didIteratorError = false;\\n            var _iteratorError = undefined;\\n\\n            try {\\n              for (var _iterator = chunks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n                var _chunk = _step.value;\\n\\n                if (!this.stream.hasChunk(_chunk)) {\\n                  chunksNeeded[_chunk] = true;\\n                }\\n              }\\n            } catch (err) {\\n              _didIteratorError = true;\\n              _iteratorError = err;\\n            } finally {\\n              try {\\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\\n                  _iterator.return();\\n                }\\n              } finally {\\n                if (_didIteratorError) {\\n                  throw _iteratorError;\\n                }\\n              }\\n            }\\n\\n            if ((0, _util.isEmptyObj)(chunksNeeded)) {\\n              return Promise.resolve();\\n            }\\n\\n            var capability = (0, _util.createPromiseCapability)();\\n            this.promisesByRequest[requestId] = capability;\\n            var chunksToRequest = [];\\n\\n            for (var chunk in chunksNeeded) {\\n              chunk = chunk | 0;\\n\\n              if (!(chunk in this.requestsByChunk)) {\\n                this.requestsByChunk[chunk] = [];\\n                chunksToRequest.push(chunk);\\n              }\\n\\n              this.requestsByChunk[chunk].push(requestId);\\n            }\\n\\n            if (!chunksToRequest.length) {\\n              return capability.promise;\\n            }\\n\\n            var groupedChunksToRequest = this.groupChunks(chunksToRequest);\\n            var _iteratorNormalCompletion2 = true;\\n            var _didIteratorError2 = false;\\n            var _iteratorError2 = undefined;\\n\\n            try {\\n              for (var _iterator2 = groupedChunksToRequest[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\\n                var groupedChunk = _step2.value;\\n                var begin = groupedChunk.beginChunk * this.chunkSize;\\n                var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\\n                this.sendRequest(begin, end);\\n              }\\n            } catch (err) {\\n              _didIteratorError2 = true;\\n              _iteratorError2 = err;\\n            } finally {\\n              try {\\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\\n                  _iterator2.return();\\n                }\\n              } finally {\\n                if (_didIteratorError2) {\\n                  throw _iteratorError2;\\n                }\\n              }\\n            }\\n\\n            return capability.promise;\\n          }\\n        }, {\\n          key: \\\"getStream\\\",\\n          value: function getStream() {\\n            return this.stream;\\n          }\\n        }, {\\n          key: \\\"requestRange\\\",\\n          value: function requestRange(begin, end) {\\n            end = Math.min(end, this.length);\\n            var beginChunk = this.getBeginChunk(begin);\\n            var endChunk = this.getEndChunk(end);\\n            var chunks = [];\\n\\n            for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n              chunks.push(chunk);\\n            }\\n\\n            return this._requestChunks(chunks);\\n          }\\n        }, {\\n          key: \\\"requestRanges\\\",\\n          value: function requestRanges() {\\n            var ranges = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n            var chunksToRequest = [];\\n            var _iteratorNormalCompletion3 = true;\\n            var _didIteratorError3 = false;\\n            var _iteratorError3 = undefined;\\n\\n            try {\\n              for (var _iterator3 = ranges[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\\n                var range = _step3.value;\\n                var beginChunk = this.getBeginChunk(range.begin);\\n                var endChunk = this.getEndChunk(range.end);\\n\\n                for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\n                  if (!chunksToRequest.includes(chunk)) {\\n                    chunksToRequest.push(chunk);\\n                  }\\n                }\\n              }\\n            } catch (err) {\\n              _didIteratorError3 = true;\\n              _iteratorError3 = err;\\n            } finally {\\n              try {\\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\\n                  _iterator3.return();\\n                }\\n              } finally {\\n                if (_didIteratorError3) {\\n                  throw _iteratorError3;\\n                }\\n              }\\n            }\\n\\n            chunksToRequest.sort(function (a, b) {\\n              return a - b;\\n            });\\n            return this._requestChunks(chunksToRequest);\\n          }\\n        }, {\\n          key: \\\"groupChunks\\\",\\n          value: function groupChunks(chunks) {\\n            var groupedChunks = [];\\n            var beginChunk = -1;\\n            var prevChunk = -1;\\n\\n            for (var i = 0, ii = chunks.length; i < ii; ++i) {\\n              var chunk = chunks[i];\\n\\n              if (beginChunk < 0) {\\n                beginChunk = chunk;\\n              }\\n\\n              if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\\n                groupedChunks.push({\\n                  beginChunk: beginChunk,\\n                  endChunk: prevChunk + 1\\n                });\\n                beginChunk = chunk;\\n              }\\n\\n              if (i + 1 === chunks.length) {\\n                groupedChunks.push({\\n                  beginChunk: beginChunk,\\n                  endChunk: chunk + 1\\n                });\\n              }\\n\\n              prevChunk = chunk;\\n            }\\n\\n            return groupedChunks;\\n          }\\n        }, {\\n          key: \\\"onProgress\\\",\\n          value: function onProgress(args) {\\n            this.msgHandler.send('DocProgress', {\\n              loaded: this.stream.numChunksLoaded * this.chunkSize + args.loaded,\\n              total: this.length\\n            });\\n          }\\n        }, {\\n          key: \\\"onReceiveData\\\",\\n          value: function onReceiveData(args) {\\n            var chunk = args.chunk;\\n            var isProgressive = args.begin === undefined;\\n            var begin = isProgressive ? this.progressiveDataLength : args.begin;\\n            var end = begin + chunk.byteLength;\\n            var beginChunk = Math.floor(begin / this.chunkSize);\\n            var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\\n\\n            if (isProgressive) {\\n              this.stream.onReceiveProgressiveData(chunk);\\n              this.progressiveDataLength = end;\\n            } else {\\n              this.stream.onReceiveData(begin, chunk);\\n            }\\n\\n            if (this.stream.allChunksLoaded()) {\\n              this._loadedStreamCapability.resolve(this.stream);\\n            }\\n\\n            var loadedRequests = [];\\n\\n            for (var _chunk2 = beginChunk; _chunk2 < endChunk; ++_chunk2) {\\n              var requestIds = this.requestsByChunk[_chunk2] || [];\\n              delete this.requestsByChunk[_chunk2];\\n              var _iteratorNormalCompletion4 = true;\\n              var _didIteratorError4 = false;\\n              var _iteratorError4 = undefined;\\n\\n              try {\\n                for (var _iterator4 = requestIds[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\\n                  var requestId = _step4.value;\\n                  var chunksNeeded = this.chunksNeededByRequest[requestId];\\n\\n                  if (_chunk2 in chunksNeeded) {\\n                    delete chunksNeeded[_chunk2];\\n                  }\\n\\n                  if (!(0, _util.isEmptyObj)(chunksNeeded)) {\\n                    continue;\\n                  }\\n\\n                  loadedRequests.push(requestId);\\n                }\\n              } catch (err) {\\n                _didIteratorError4 = true;\\n                _iteratorError4 = err;\\n              } finally {\\n                try {\\n                  if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\\n                    _iterator4.return();\\n                  }\\n                } finally {\\n                  if (_didIteratorError4) {\\n                    throw _iteratorError4;\\n                  }\\n                }\\n              }\\n            }\\n\\n            if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\\n              var nextEmptyChunk;\\n\\n              if (this.stream.numChunksLoaded === 1) {\\n                var lastChunk = this.stream.numChunks - 1;\\n\\n                if (!this.stream.hasChunk(lastChunk)) {\\n                  nextEmptyChunk = lastChunk;\\n                }\\n              } else {\\n                nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\\n              }\\n\\n              if (Number.isInteger(nextEmptyChunk)) {\\n                this._requestChunks([nextEmptyChunk]);\\n              }\\n            }\\n\\n            for (var _i = 0; _i < loadedRequests.length; _i++) {\\n              var _requestId = loadedRequests[_i];\\n              var capability = this.promisesByRequest[_requestId];\\n              delete this.promisesByRequest[_requestId];\\n              capability.resolve();\\n            }\\n\\n            this.msgHandler.send('DocProgress', {\\n              loaded: this.stream.numChunksLoaded * this.chunkSize,\\n              total: this.length\\n            });\\n          }\\n        }, {\\n          key: \\\"onError\\\",\\n          value: function onError(err) {\\n            this._loadedStreamCapability.reject(err);\\n          }\\n        }, {\\n          key: \\\"getBeginChunk\\\",\\n          value: function getBeginChunk(begin) {\\n            return Math.floor(begin / this.chunkSize);\\n          }\\n        }, {\\n          key: \\\"getEndChunk\\\",\\n          value: function getEndChunk(end) {\\n            return Math.floor((end - 1) / this.chunkSize) + 1;\\n          }\\n        }, {\\n          key: \\\"abort\\\",\\n          value: function abort() {\\n            this.aborted = true;\\n\\n            if (this.pdfNetworkStream) {\\n              this.pdfNetworkStream.cancelAllRequests('abort');\\n            }\\n\\n            for (var requestId in this.promisesByRequest) {\\n              this.promisesByRequest[requestId].reject(new Error('Request was aborted'));\\n            }\\n          }\\n        }]);\\n\\n        return ChunkedStreamManager;\\n      }();\\n\\n      exports.ChunkedStreamManager = ChunkedStreamManager;\\n      /***/\\n    },\\n    /* 153 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.PDFDocument = exports.Page = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _obj = __w_pdfjs_require__(154);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _stream2 = __w_pdfjs_require__(157);\\n\\n      var _annotation = __w_pdfjs_require__(169);\\n\\n      var _crypto = __w_pdfjs_require__(167);\\n\\n      var _parser = __w_pdfjs_require__(156);\\n\\n      var _operator_list = __w_pdfjs_require__(170);\\n\\n      var _evaluator = __w_pdfjs_require__(171);\\n\\n      var _function = __w_pdfjs_require__(185);\\n\\n      function _slicedToArray(arr, i) {\\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\\n      }\\n\\n      function _nonIterableRest() {\\n        throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\");\\n      }\\n\\n      function _iterableToArrayLimit(arr, i) {\\n        var _arr = [];\\n        var _n = true;\\n        var _d = false;\\n        var _e = undefined;\\n\\n        try {\\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n            _arr.push(_s.value);\\n\\n            if (i && _arr.length === i) break;\\n          }\\n        } catch (err) {\\n          _d = true;\\n          _e = err;\\n        } finally {\\n          try {\\n            if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"]();\\n          } finally {\\n            if (_d) throw _e;\\n          }\\n        }\\n\\n        return _arr;\\n      }\\n\\n      function _arrayWithHoles(arr) {\\n        if (Array.isArray(arr)) return arr;\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var DEFAULT_USER_UNIT = 1.0;\\n      var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\\n\\n      function isAnnotationRenderable(annotation, intent) {\\n        return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\\n      }\\n\\n      var Page =\\n      /*#__PURE__*/\\n      function () {\\n        function Page(_ref) {\\n          var pdfManager = _ref.pdfManager,\\n              xref = _ref.xref,\\n              pageIndex = _ref.pageIndex,\\n              pageDict = _ref.pageDict,\\n              ref = _ref.ref,\\n              fontCache = _ref.fontCache,\\n              builtInCMapCache = _ref.builtInCMapCache,\\n              pdfFunctionFactory = _ref.pdfFunctionFactory;\\n\\n          _classCallCheck(this, Page);\\n\\n          this.pdfManager = pdfManager;\\n          this.pageIndex = pageIndex;\\n          this.pageDict = pageDict;\\n          this.xref = xref;\\n          this.ref = ref;\\n          this.fontCache = fontCache;\\n          this.builtInCMapCache = builtInCMapCache;\\n          this.pdfFunctionFactory = pdfFunctionFactory;\\n          this.evaluatorOptions = pdfManager.evaluatorOptions;\\n          this.resourcesPromise = null;\\n          var uniquePrefix = \\\"p\\\".concat(this.pageIndex, \\\"_\\\");\\n          var idCounters = {\\n            obj: 0\\n          };\\n          this.idFactory = {\\n            createObjId: function createObjId() {\\n              return uniquePrefix + ++idCounters.obj;\\n            }\\n          };\\n        }\\n\\n        _createClass(Page, [{\\n          key: \\\"_getInheritableProperty\\\",\\n          value: function _getInheritableProperty(key) {\\n            var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n            var value = (0, _util.getInheritableProperty)({\\n              dict: this.pageDict,\\n              key: key,\\n              getArray: getArray,\\n              stopWhenFound: false\\n            });\\n\\n            if (!Array.isArray(value)) {\\n              return value;\\n            }\\n\\n            if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\\n              return value[0];\\n            }\\n\\n            return _primitives.Dict.merge(this.xref, value);\\n          }\\n        }, {\\n          key: \\\"getContentStream\\\",\\n          value: function getContentStream() {\\n            var content = this.content;\\n            var stream;\\n\\n            if (Array.isArray(content)) {\\n              var xref = this.xref;\\n              var streams = [];\\n              var _iteratorNormalCompletion = true;\\n              var _didIteratorError = false;\\n              var _iteratorError = undefined;\\n\\n              try {\\n                for (var _iterator = content[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n                  var _stream = _step.value;\\n                  streams.push(xref.fetchIfRef(_stream));\\n                }\\n              } catch (err) {\\n                _didIteratorError = true;\\n                _iteratorError = err;\\n              } finally {\\n                try {\\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\\n                    _iterator.return();\\n                  }\\n                } finally {\\n                  if (_didIteratorError) {\\n                    throw _iteratorError;\\n                  }\\n                }\\n              }\\n\\n              stream = new _stream2.StreamsSequenceStream(streams);\\n            } else if ((0, _primitives.isStream)(content)) {\\n              stream = content;\\n            } else {\\n              stream = new _stream2.NullStream();\\n            }\\n\\n            return stream;\\n          }\\n        }, {\\n          key: \\\"loadResources\\\",\\n          value: function loadResources(keys) {\\n            var _this = this;\\n\\n            if (!this.resourcesPromise) {\\n              this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\\n            }\\n\\n            return this.resourcesPromise.then(function () {\\n              var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\\n              return objectLoader.load();\\n            });\\n          }\\n        }, {\\n          key: \\\"getOperatorList\\\",\\n          value: function getOperatorList(_ref2) {\\n            var _this2 = this;\\n\\n            var handler = _ref2.handler,\\n                task = _ref2.task,\\n                intent = _ref2.intent,\\n                renderInteractiveForms = _ref2.renderInteractiveForms;\\n            var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\\n            var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\\n            var partialEvaluator = new _evaluator.PartialEvaluator({\\n              pdfManager: this.pdfManager,\\n              xref: this.xref,\\n              handler: handler,\\n              pageIndex: this.pageIndex,\\n              idFactory: this.idFactory,\\n              fontCache: this.fontCache,\\n              builtInCMapCache: this.builtInCMapCache,\\n              options: this.evaluatorOptions,\\n              pdfFunctionFactory: this.pdfFunctionFactory\\n            });\\n            var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\\n            var pageListPromise = dataPromises.then(function (_ref3) {\\n              var _ref4 = _slicedToArray(_ref3, 1),\\n                  contentStream = _ref4[0];\\n\\n              var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\\n              handler.send('StartRenderPage', {\\n                transparency: partialEvaluator.hasBlendModes(_this2.resources),\\n                pageIndex: _this2.pageIndex,\\n                intent: intent\\n              });\\n              return partialEvaluator.getOperatorList({\\n                stream: contentStream,\\n                task: task,\\n                resources: _this2.resources,\\n                operatorList: opList\\n              }).then(function () {\\n                return opList;\\n              });\\n            });\\n            return Promise.all([pageListPromise, this._parsedAnnotations]).then(function (_ref5) {\\n              var _ref6 = _slicedToArray(_ref5, 2),\\n                  pageOpList = _ref6[0],\\n                  annotations = _ref6[1];\\n\\n              if (annotations.length === 0) {\\n                pageOpList.flush(true);\\n                return pageOpList;\\n              }\\n\\n              var opListPromises = [];\\n              var _iteratorNormalCompletion2 = true;\\n              var _didIteratorError2 = false;\\n              var _iteratorError2 = undefined;\\n\\n              try {\\n                for (var _iterator2 = annotations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\\n                  var annotation = _step2.value;\\n\\n                  if (isAnnotationRenderable(annotation, intent)) {\\n                    opListPromises.push(annotation.getOperatorList(partialEvaluator, task, renderInteractiveForms));\\n                  }\\n                }\\n              } catch (err) {\\n                _didIteratorError2 = true;\\n                _iteratorError2 = err;\\n              } finally {\\n                try {\\n                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\\n                    _iterator2.return();\\n                  }\\n                } finally {\\n                  if (_didIteratorError2) {\\n                    throw _iteratorError2;\\n                  }\\n                }\\n              }\\n\\n              return Promise.all(opListPromises).then(function (opLists) {\\n                pageOpList.addOp(_util.OPS.beginAnnotations, []);\\n                var _iteratorNormalCompletion3 = true;\\n                var _didIteratorError3 = false;\\n                var _iteratorError3 = undefined;\\n\\n                try {\\n                  for (var _iterator3 = opLists[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\\n                    var opList = _step3.value;\\n                    pageOpList.addOpList(opList);\\n                  }\\n                } catch (err) {\\n                  _didIteratorError3 = true;\\n                  _iteratorError3 = err;\\n                } finally {\\n                  try {\\n                    if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\\n                      _iterator3.return();\\n                    }\\n                  } finally {\\n                    if (_didIteratorError3) {\\n                      throw _iteratorError3;\\n                    }\\n                  }\\n                }\\n\\n                pageOpList.addOp(_util.OPS.endAnnotations, []);\\n                pageOpList.flush(true);\\n                return pageOpList;\\n              });\\n            });\\n          }\\n        }, {\\n          key: \\\"extractTextContent\\\",\\n          value: function extractTextContent(_ref7) {\\n            var _this3 = this;\\n\\n            var handler = _ref7.handler,\\n                task = _ref7.task,\\n                normalizeWhitespace = _ref7.normalizeWhitespace,\\n                sink = _ref7.sink,\\n                combineTextItems = _ref7.combineTextItems;\\n            var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\\n            var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\\n            var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\\n            return dataPromises.then(function (_ref8) {\\n              var _ref9 = _slicedToArray(_ref8, 1),\\n                  contentStream = _ref9[0];\\n\\n              var partialEvaluator = new _evaluator.PartialEvaluator({\\n                pdfManager: _this3.pdfManager,\\n                xref: _this3.xref,\\n                handler: handler,\\n                pageIndex: _this3.pageIndex,\\n                idFactory: _this3.idFactory,\\n                fontCache: _this3.fontCache,\\n                builtInCMapCache: _this3.builtInCMapCache,\\n                options: _this3.evaluatorOptions,\\n                pdfFunctionFactory: _this3.pdfFunctionFactory\\n              });\\n              return partialEvaluator.getTextContent({\\n                stream: contentStream,\\n                task: task,\\n                resources: _this3.resources,\\n                normalizeWhitespace: normalizeWhitespace,\\n                combineTextItems: combineTextItems,\\n                sink: sink\\n              });\\n            });\\n          }\\n        }, {\\n          key: \\\"getAnnotationsData\\\",\\n          value: function getAnnotationsData(intent) {\\n            return this._parsedAnnotations.then(function (annotations) {\\n              var annotationsData = [];\\n\\n              for (var i = 0, ii = annotations.length; i < ii; i++) {\\n                if (!intent || isAnnotationRenderable(annotations[i], intent)) {\\n                  annotationsData.push(annotations[i].data);\\n                }\\n              }\\n\\n              return annotationsData;\\n            });\\n          }\\n        }, {\\n          key: \\\"content\\\",\\n          get: function get() {\\n            return this.pageDict.get('Contents');\\n          }\\n        }, {\\n          key: \\\"resources\\\",\\n          get: function get() {\\n            return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\\n          }\\n        }, {\\n          key: \\\"mediaBox\\\",\\n          get: function get() {\\n            var mediaBox = this._getInheritableProperty('MediaBox', true);\\n\\n            if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\\n              return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\\n            }\\n\\n            return (0, _util.shadow)(this, 'mediaBox', mediaBox);\\n          }\\n        }, {\\n          key: \\\"cropBox\\\",\\n          get: function get() {\\n            var cropBox = this._getInheritableProperty('CropBox', true);\\n\\n            if (!Array.isArray(cropBox) || cropBox.length !== 4) {\\n              return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\\n            }\\n\\n            return (0, _util.shadow)(this, 'cropBox', cropBox);\\n          }\\n        }, {\\n          key: \\\"userUnit\\\",\\n          get: function get() {\\n            var obj = this.pageDict.get('UserUnit');\\n\\n            if (!(0, _util.isNum)(obj) || obj <= 0) {\\n              obj = DEFAULT_USER_UNIT;\\n            }\\n\\n            return (0, _util.shadow)(this, 'userUnit', obj);\\n          }\\n        }, {\\n          key: \\\"view\\\",\\n          get: function get() {\\n            var mediaBox = this.mediaBox,\\n                cropBox = this.cropBox;\\n\\n            if (mediaBox === cropBox) {\\n              return (0, _util.shadow)(this, 'view', mediaBox);\\n            }\\n\\n            var intersection = _util.Util.intersect(cropBox, mediaBox);\\n\\n            return (0, _util.shadow)(this, 'view', intersection || mediaBox);\\n          }\\n        }, {\\n          key: \\\"rotate\\\",\\n          get: function get() {\\n            var rotate = this._getInheritableProperty('Rotate') || 0;\\n\\n            if (rotate % 90 !== 0) {\\n              rotate = 0;\\n            } else if (rotate >= 360) {\\n              rotate = rotate % 360;\\n            } else if (rotate < 0) {\\n              rotate = (rotate % 360 + 360) % 360;\\n            }\\n\\n            return (0, _util.shadow)(this, 'rotate', rotate);\\n          }\\n        }, {\\n          key: \\\"annotations\\\",\\n          get: function get() {\\n            return (0, _util.shadow)(this, 'annotations', this._getInheritableProperty('Annots') || []);\\n          }\\n        }, {\\n          key: \\\"_parsedAnnotations\\\",\\n          get: function get() {\\n            var _this4 = this;\\n\\n            var parsedAnnotations = this.pdfManager.ensure(this, 'annotations').then(function () {\\n              var annotationRefs = _this4.annotations;\\n              var annotationPromises = [];\\n\\n              for (var i = 0, ii = annotationRefs.length; i < ii; i++) {\\n                annotationPromises.push(_annotation.AnnotationFactory.create(_this4.xref, annotationRefs[i], _this4.pdfManager, _this4.idFactory));\\n              }\\n\\n              return Promise.all(annotationPromises).then(function (annotations) {\\n                return annotations.filter(function isDefined(annotation) {\\n                  return !!annotation;\\n                });\\n              }, function (reason) {\\n                (0, _util.warn)(\\\"_parsedAnnotations: \\\\\\\"\\\".concat(reason, \\\"\\\\\\\".\\\"));\\n                return [];\\n              });\\n            });\\n            return (0, _util.shadow)(this, '_parsedAnnotations', parsedAnnotations);\\n          }\\n        }]);\\n\\n        return Page;\\n      }();\\n\\n      exports.Page = Page;\\n      var FINGERPRINT_FIRST_BYTES = 1024;\\n      var EMPTY_FINGERPRINT = '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00';\\n\\n      function find(stream, needle, limit, backwards) {\\n        var pos = stream.pos;\\n        var end = stream.end;\\n\\n        if (pos + limit > end) {\\n          limit = end - pos;\\n        }\\n\\n        var strBuf = [];\\n\\n        for (var i = 0; i < limit; ++i) {\\n          strBuf.push(String.fromCharCode(stream.getByte()));\\n        }\\n\\n        var str = strBuf.join('');\\n        stream.pos = pos;\\n        var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\\n\\n        if (index === -1) {\\n          return false;\\n        }\\n\\n        stream.pos += index;\\n        return true;\\n      }\\n\\n      var PDFDocument =\\n      /*#__PURE__*/\\n      function () {\\n        function PDFDocument(pdfManager, arg) {\\n          _classCallCheck(this, PDFDocument);\\n\\n          var stream;\\n\\n          if ((0, _primitives.isStream)(arg)) {\\n            stream = arg;\\n          } else if ((0, _util.isArrayBuffer)(arg)) {\\n            stream = new _stream2.Stream(arg);\\n          } else {\\n            throw new Error('PDFDocument: Unknown argument type');\\n          }\\n\\n          if (stream.length <= 0) {\\n            throw new Error('PDFDocument: Stream must have data');\\n          }\\n\\n          this.pdfManager = pdfManager;\\n          this.stream = stream;\\n          this.xref = new _obj.XRef(stream, pdfManager);\\n          this.pdfFunctionFactory = new _function.PDFFunctionFactory({\\n            xref: this.xref,\\n            isEvalSupported: pdfManager.evaluatorOptions.isEvalSupported\\n          });\\n          this._pagePromises = [];\\n        }\\n\\n        _createClass(PDFDocument, [{\\n          key: \\\"parse\\\",\\n          value: function parse(recoveryMode) {\\n            this.setup(recoveryMode);\\n            var version = this.catalog.catDict.get('Version');\\n\\n            if ((0, _primitives.isName)(version)) {\\n              this.pdfFormatVersion = version.name;\\n            }\\n\\n            try {\\n              this.acroForm = this.catalog.catDict.get('AcroForm');\\n\\n              if (this.acroForm) {\\n                this.xfa = this.acroForm.get('XFA');\\n                var fields = this.acroForm.get('Fields');\\n\\n                if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\\n                  this.acroForm = null;\\n                }\\n              }\\n            } catch (ex) {\\n              if (ex instanceof _util.MissingDataException) {\\n                throw ex;\\n              }\\n\\n              (0, _util.info)('Cannot fetch AcroForm entry; assuming no AcroForms are present');\\n              this.acroForm = null;\\n            }\\n          }\\n        }, {\\n          key: \\\"checkHeader\\\",\\n          value: function checkHeader() {\\n            var stream = this.stream;\\n            stream.reset();\\n\\n            if (!find(stream, '%PDF-', 1024)) {\\n              return;\\n            }\\n\\n            stream.moveStart();\\n            var MAX_PDF_VERSION_LENGTH = 12;\\n            var version = '',\\n                ch;\\n\\n            while ((ch = stream.getByte()) > 0x20) {\\n              if (version.length >= MAX_PDF_VERSION_LENGTH) {\\n                break;\\n              }\\n\\n              version += String.fromCharCode(ch);\\n            }\\n\\n            if (!this.pdfFormatVersion) {\\n              this.pdfFormatVersion = version.substring(5);\\n            }\\n          }\\n        }, {\\n          key: \\\"parseStartXRef\\\",\\n          value: function parseStartXRef() {\\n            this.xref.setStartXRef(this.startXRef);\\n          }\\n        }, {\\n          key: \\\"setup\\\",\\n          value: function setup(recoveryMode) {\\n            this.xref.parse(recoveryMode);\\n            this.catalog = new _obj.Catalog(this.pdfManager, this.xref);\\n          }\\n        }, {\\n          key: \\\"_getLinearizationPage\\\",\\n          value: function _getLinearizationPage(pageIndex) {\\n            var catalog = this.catalog,\\n                linearization = this.linearization;\\n            (0, _util.assert)(linearization && linearization.pageFirst === pageIndex);\\n            var ref = new _primitives.Ref(linearization.objectNumberFirst, 0);\\n            return this.xref.fetchAsync(ref).then(function (obj) {\\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Type') && obj.has('Contents')) {\\n                if (ref && !catalog.pageKidsCountCache.has(ref)) {\\n                  catalog.pageKidsCountCache.put(ref, 1);\\n                }\\n\\n                return [obj, ref];\\n              }\\n\\n              throw new _util.FormatError('The Linearization dictionary doesn\\\\'t point ' + 'to a valid Page dictionary.');\\n            }).catch(function (reason) {\\n              (0, _util.info)(reason);\\n              return catalog.getPageDict(pageIndex);\\n            });\\n          }\\n        }, {\\n          key: \\\"getPage\\\",\\n          value: function getPage(pageIndex) {\\n            var _this5 = this;\\n\\n            if (this._pagePromises[pageIndex] !== undefined) {\\n              return this._pagePromises[pageIndex];\\n            }\\n\\n            var catalog = this.catalog,\\n                linearization = this.linearization;\\n            var promise = linearization && linearization.pageFirst === pageIndex ? this._getLinearizationPage(pageIndex) : catalog.getPageDict(pageIndex);\\n            return this._pagePromises[pageIndex] = promise.then(function (_ref10) {\\n              var _ref11 = _slicedToArray(_ref10, 2),\\n                  pageDict = _ref11[0],\\n                  ref = _ref11[1];\\n\\n              return new Page({\\n                pdfManager: _this5.pdfManager,\\n                xref: _this5.xref,\\n                pageIndex: pageIndex,\\n                pageDict: pageDict,\\n                ref: ref,\\n                fontCache: catalog.fontCache,\\n                builtInCMapCache: catalog.builtInCMapCache,\\n                pdfFunctionFactory: _this5.pdfFunctionFactory\\n              });\\n            });\\n          }\\n        }, {\\n          key: \\\"checkFirstPage\\\",\\n          value: function checkFirstPage() {\\n            var _this6 = this;\\n\\n            return this.getPage(0).catch(function (reason) {\\n              if (reason instanceof _util.XRefEntryException) {\\n                _this6._pagePromises.length = 0;\\n\\n                _this6.cleanup();\\n\\n                throw new _util.XRefParseException();\\n              }\\n            });\\n          }\\n        }, {\\n          key: \\\"fontFallback\\\",\\n          value: function fontFallback(id, handler) {\\n            return this.catalog.fontFallback(id, handler);\\n          }\\n        }, {\\n          key: \\\"cleanup\\\",\\n          value: function cleanup() {\\n            return this.catalog.cleanup();\\n          }\\n        }, {\\n          key: \\\"linearization\\\",\\n          get: function get() {\\n            var linearization = null;\\n\\n            try {\\n              linearization = _parser.Linearization.create(this.stream);\\n            } catch (err) {\\n              if (err instanceof _util.MissingDataException) {\\n                throw err;\\n              }\\n\\n              (0, _util.info)(err);\\n            }\\n\\n            return (0, _util.shadow)(this, 'linearization', linearization);\\n          }\\n        }, {\\n          key: \\\"startXRef\\\",\\n          get: function get() {\\n            var stream = this.stream;\\n            var startXRef = 0;\\n\\n            if (this.linearization) {\\n              stream.reset();\\n\\n              if (find(stream, 'endobj', 1024)) {\\n                startXRef = stream.pos + 6;\\n              }\\n            } else {\\n              var step = 1024;\\n              var startXRefLength = 'startxref'.length;\\n              var found = false,\\n                  pos = stream.end;\\n\\n              while (!found && pos > 0) {\\n                pos -= step - startXRefLength;\\n\\n                if (pos < 0) {\\n                  pos = 0;\\n                }\\n\\n                stream.pos = pos;\\n                found = find(stream, 'startxref', step, true);\\n              }\\n\\n              if (found) {\\n                stream.skip(9);\\n                var ch;\\n\\n                do {\\n                  ch = stream.getByte();\\n                } while ((0, _util.isSpace)(ch));\\n\\n                var str = '';\\n\\n                while (ch >= 0x20 && ch <= 0x39) {\\n                  str += String.fromCharCode(ch);\\n                  ch = stream.getByte();\\n                }\\n\\n                startXRef = parseInt(str, 10);\\n\\n                if (isNaN(startXRef)) {\\n                  startXRef = 0;\\n                }\\n              }\\n            }\\n\\n            return (0, _util.shadow)(this, 'startXRef', startXRef);\\n          }\\n        }, {\\n          key: \\\"numPages\\\",\\n          get: function get() {\\n            var linearization = this.linearization;\\n            var num = linearization ? linearization.numPages : this.catalog.numPages;\\n            return (0, _util.shadow)(this, 'numPages', num);\\n          }\\n        }, {\\n          key: \\\"documentInfo\\\",\\n          get: function get() {\\n            var DocumentInfoValidators = {\\n              Title: _util.isString,\\n              Author: _util.isString,\\n              Subject: _util.isString,\\n              Keywords: _util.isString,\\n              Creator: _util.isString,\\n              Producer: _util.isString,\\n              CreationDate: _util.isString,\\n              ModDate: _util.isString,\\n              Trapped: _primitives.isName\\n            };\\n            var docInfo = {\\n              PDFFormatVersion: this.pdfFormatVersion,\\n              IsLinearized: !!this.linearization,\\n              IsAcroFormPresent: !!this.acroForm,\\n              IsXFAPresent: !!this.xfa\\n            };\\n            var infoDict;\\n\\n            try {\\n              infoDict = this.xref.trailer.get('Info');\\n            } catch (err) {\\n              if (err instanceof _util.MissingDataException) {\\n                throw err;\\n              }\\n\\n              (0, _util.info)('The document information dictionary is invalid.');\\n            }\\n\\n            if ((0, _primitives.isDict)(infoDict)) {\\n              var _iteratorNormalCompletion4 = true;\\n              var _didIteratorError4 = false;\\n              var _iteratorError4 = undefined;\\n\\n              try {\\n                for (var _iterator4 = infoDict.getKeys()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\\n                  var key = _step4.value;\\n                  var value = infoDict.get(key);\\n\\n                  if (DocumentInfoValidators[key]) {\\n                    if (DocumentInfoValidators[key](value)) {\\n                      docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\\n                    } else {\\n                      (0, _util.info)(\\\"Bad value in document info for \\\\\\\"\\\".concat(key, \\\"\\\\\\\".\\\"));\\n                    }\\n                  } else if (typeof key === 'string') {\\n                    var customValue = void 0;\\n\\n                    if ((0, _util.isString)(value)) {\\n                      customValue = (0, _util.stringToPDFString)(value);\\n                    } else if ((0, _primitives.isName)(value) || (0, _util.isNum)(value) || (0, _util.isBool)(value)) {\\n                      customValue = value;\\n                    } else {\\n                      (0, _util.info)(\\\"Unsupported value in document info for (custom) \\\\\\\"\\\".concat(key, \\\"\\\\\\\".\\\"));\\n                      continue;\\n                    }\\n\\n                    if (!docInfo['Custom']) {\\n                      docInfo['Custom'] = Object.create(null);\\n                    }\\n\\n                    docInfo['Custom'][key] = customValue;\\n                  }\\n                }\\n              } catch (err) {\\n                _didIteratorError4 = true;\\n                _iteratorError4 = err;\\n              } finally {\\n                try {\\n                  if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\\n                    _iterator4.return();\\n                  }\\n                } finally {\\n                  if (_didIteratorError4) {\\n                    throw _iteratorError4;\\n                  }\\n                }\\n              }\\n            }\\n\\n            return (0, _util.shadow)(this, 'documentInfo', docInfo);\\n          }\\n        }, {\\n          key: \\\"fingerprint\\\",\\n          get: function get() {\\n            var hash;\\n            var idArray = this.xref.trailer.get('ID');\\n\\n            if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\\n              hash = (0, _util.stringToBytes)(idArray[0]);\\n            } else {\\n              if (this.stream.ensureRange) {\\n                this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\\n              }\\n\\n              hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\\n            }\\n\\n            var fingerprint = '';\\n\\n            for (var i = 0, ii = hash.length; i < ii; i++) {\\n              var hex = hash[i].toString(16);\\n              fingerprint += hex.length === 1 ? '0' + hex : hex;\\n            }\\n\\n            return (0, _util.shadow)(this, 'fingerprint', fingerprint);\\n          }\\n        }]);\\n\\n        return PDFDocument;\\n      }();\\n\\n      exports.PDFDocument = PDFDocument;\\n      /***/\\n    },\\n    /* 154 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = void 0;\\n\\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _parser = __w_pdfjs_require__(156);\\n\\n      var _chunked_stream = __w_pdfjs_require__(152);\\n\\n      var _crypto = __w_pdfjs_require__(167);\\n\\n      var _colorspace = __w_pdfjs_require__(168);\\n\\n      function _interopRequireDefault(obj) {\\n        return obj && obj.__esModule ? obj : {\\n          default: obj\\n        };\\n      }\\n\\n      function _possibleConstructorReturn(self, call) {\\n        if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n          return call;\\n        }\\n\\n        return _assertThisInitialized(self);\\n      }\\n\\n      function _assertThisInitialized(self) {\\n        if (self === void 0) {\\n          throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n        }\\n\\n        return self;\\n      }\\n\\n      function _getPrototypeOf(o) {\\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n          return o.__proto__ || Object.getPrototypeOf(o);\\n        };\\n        return _getPrototypeOf(o);\\n      }\\n\\n      function _inherits(subClass, superClass) {\\n        if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n          throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n        }\\n\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n          constructor: {\\n            value: subClass,\\n            writable: true,\\n            configurable: true\\n          }\\n        });\\n        if (superClass) _setPrototypeOf(subClass, superClass);\\n      }\\n\\n      function _setPrototypeOf(o, p) {\\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n          o.__proto__ = p;\\n          return o;\\n        };\\n\\n        return _setPrototypeOf(o, p);\\n      }\\n\\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\\n        try {\\n          var info = gen[key](arg);\\n          var value = info.value;\\n        } catch (error) {\\n          reject(error);\\n          return;\\n        }\\n\\n        if (info.done) {\\n          resolve(value);\\n        } else {\\n          Promise.resolve(value).then(_next, _throw);\\n        }\\n      }\\n\\n      function _asyncToGenerator(fn) {\\n        return function () {\\n          var self = this,\\n              args = arguments;\\n          return new Promise(function (resolve, reject) {\\n            var gen = fn.apply(self, args);\\n\\n            function _next(value) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"next\\\", value);\\n            }\\n\\n            function _throw(err) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"throw\\\", err);\\n            }\\n\\n            _next(undefined);\\n          });\\n        };\\n      }\\n\\n      function _slicedToArray(arr, i) {\\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\\n      }\\n\\n      function _nonIterableRest() {\\n        throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\");\\n      }\\n\\n      function _iterableToArrayLimit(arr, i) {\\n        var _arr = [];\\n        var _n = true;\\n        var _d = false;\\n        var _e = undefined;\\n\\n        try {\\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n            _arr.push(_s.value);\\n\\n            if (i && _arr.length === i) break;\\n          }\\n        } catch (err) {\\n          _d = true;\\n          _e = err;\\n        } finally {\\n          try {\\n            if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"]();\\n          } finally {\\n            if (_d) throw _e;\\n          }\\n        }\\n\\n        return _arr;\\n      }\\n\\n      function _arrayWithHoles(arr) {\\n        if (Array.isArray(arr)) return arr;\\n      }\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      function fetchDestination(dest) {\\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\\n      }\\n\\n      var Catalog =\\n      /*#__PURE__*/\\n      function () {\\n        function Catalog(pdfManager, xref) {\\n          _classCallCheck(this, Catalog);\\n\\n          this.pdfManager = pdfManager;\\n          this.xref = xref;\\n          this.catDict = xref.getCatalogObj();\\n\\n          if (!(0, _primitives.isDict)(this.catDict)) {\\n            throw new _util.FormatError('Catalog object is not a dictionary.');\\n          }\\n\\n          this.fontCache = new _primitives.RefSetCache();\\n          this.builtInCMapCache = new Map();\\n          this.pageKidsCountCache = new _primitives.RefSetCache();\\n        }\\n\\n        _createClass(Catalog, [{\\n          key: \\\"_readDocumentOutline\\\",\\n          value: function _readDocumentOutline() {\\n            var obj = this.catDict.get('Outlines');\\n\\n            if (!(0, _primitives.isDict)(obj)) {\\n              return null;\\n            }\\n\\n            obj = obj.getRaw('First');\\n\\n            if (!(0, _primitives.isRef)(obj)) {\\n              return null;\\n            }\\n\\n            var root = {\\n              items: []\\n            };\\n            var queue = [{\\n              obj: obj,\\n              parent: root\\n            }];\\n            var processed = new _primitives.RefSet();\\n            processed.put(obj);\\n            var xref = this.xref,\\n                blackColor = new Uint8ClampedArray(3);\\n\\n            while (queue.length > 0) {\\n              var i = queue.shift();\\n              var outlineDict = xref.fetchIfRef(i.obj);\\n\\n              if (outlineDict === null) {\\n                continue;\\n              }\\n\\n              if (!outlineDict.has('Title')) {\\n                throw new _util.FormatError('Invalid outline item encountered.');\\n              }\\n\\n              var data = {\\n                url: null,\\n                dest: null\\n              };\\n              Catalog.parseDestDictionary({\\n                destDict: outlineDict,\\n                resultObj: data,\\n                docBaseUrl: this.pdfManager.docBaseUrl\\n              });\\n              var title = outlineDict.get('Title');\\n              var flags = outlineDict.get('F') || 0;\\n              var color = outlineDict.getArray('C');\\n              var rgbColor = blackColor;\\n\\n              if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\\n                rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\\n              }\\n\\n              var outlineItem = {\\n                dest: data.dest,\\n                url: data.url,\\n                unsafeUrl: data.unsafeUrl,\\n                newWindow: data.newWindow,\\n                title: (0, _util.stringToPDFString)(title),\\n                color: rgbColor,\\n                count: outlineDict.get('Count'),\\n                bold: !!(flags & 2),\\n                italic: !!(flags & 1),\\n                items: []\\n              };\\n              i.parent.items.push(outlineItem);\\n              obj = outlineDict.getRaw('First');\\n\\n              if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\\n                queue.push({\\n                  obj: obj,\\n                  parent: outlineItem\\n                });\\n                processed.put(obj);\\n              }\\n\\n              obj = outlineDict.getRaw('Next');\\n\\n              if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\\n                queue.push({\\n                  obj: obj,\\n                  parent: i.parent\\n                });\\n                processed.put(obj);\\n              }\\n            }\\n\\n            return root.items.length > 0 ? root.items : null;\\n          }\\n        }, {\\n          key: \\\"_readPermissions\\\",\\n          value: function _readPermissions() {\\n            var encrypt = this.xref.trailer.get('Encrypt');\\n\\n            if (!(0, _primitives.isDict)(encrypt)) {\\n              return null;\\n            }\\n\\n            var flags = encrypt.get('P');\\n\\n            if (!(0, _util.isNum)(flags)) {\\n              return null;\\n            }\\n\\n            flags += Math.pow(2, 32);\\n            var permissions = [];\\n\\n            for (var key in _util.PermissionFlag) {\\n              var value = _util.PermissionFlag[key];\\n\\n              if (flags & value) {\\n                permissions.push(value);\\n              }\\n            }\\n\\n            return permissions;\\n          }\\n        }, {\\n          key: \\\"getDestination\\\",\\n          value: function getDestination(destinationId) {\\n            var obj = this._readDests();\\n\\n            if (obj instanceof NameTree || obj instanceof _primitives.Dict) {\\n              return fetchDestination(obj.get(destinationId) || null);\\n            }\\n\\n            return null;\\n          }\\n        }, {\\n          key: \\\"_readDests\\\",\\n          value: function _readDests() {\\n            var obj = this.catDict.get('Names');\\n\\n            if (obj && obj.has('Dests')) {\\n              return new NameTree(obj.getRaw('Dests'), this.xref);\\n            } else if (this.catDict.has('Dests')) {\\n              return this.catDict.get('Dests');\\n            }\\n          }\\n        }, {\\n          key: \\\"_readPageLabels\\\",\\n          value: function _readPageLabels() {\\n            var obj = this.catDict.getRaw('PageLabels');\\n\\n            if (!obj) {\\n              return null;\\n            }\\n\\n            var pageLabels = new Array(this.numPages);\\n            var style = null,\\n                prefix = '';\\n            var numberTree = new NumberTree(obj, this.xref);\\n            var nums = numberTree.getAll();\\n            var currentLabel = '',\\n                currentIndex = 1;\\n\\n            for (var i = 0, ii = this.numPages; i < ii; i++) {\\n              if (i in nums) {\\n                var labelDict = nums[i];\\n\\n                if (!(0, _primitives.isDict)(labelDict)) {\\n                  throw new _util.FormatError('PageLabel is not a dictionary.');\\n                }\\n\\n                if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\\n                  throw new _util.FormatError('Invalid type in PageLabel dictionary.');\\n                }\\n\\n                if (labelDict.has('S')) {\\n                  var s = labelDict.get('S');\\n\\n                  if (!(0, _primitives.isName)(s)) {\\n                    throw new _util.FormatError('Invalid style in PageLabel dictionary.');\\n                  }\\n\\n                  style = s.name;\\n                } else {\\n                  style = null;\\n                }\\n\\n                if (labelDict.has('P')) {\\n                  var p = labelDict.get('P');\\n\\n                  if (!(0, _util.isString)(p)) {\\n                    throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\\n                  }\\n\\n                  prefix = (0, _util.stringToPDFString)(p);\\n                } else {\\n                  prefix = '';\\n                }\\n\\n                if (labelDict.has('St')) {\\n                  var st = labelDict.get('St');\\n\\n                  if (!(Number.isInteger(st) && st >= 1)) {\\n                    throw new _util.FormatError('Invalid start in PageLabel dictionary.');\\n                  }\\n\\n                  currentIndex = st;\\n                } else {\\n                  currentIndex = 1;\\n                }\\n              }\\n\\n              switch (style) {\\n                case 'D':\\n                  currentLabel = currentIndex;\\n                  break;\\n\\n                case 'R':\\n                case 'r':\\n                  currentLabel = (0, _util.toRomanNumerals)(currentIndex, style === 'r');\\n                  break;\\n\\n                case 'A':\\n                case 'a':\\n                  var LIMIT = 26;\\n                  var A_UPPER_CASE = 0x41,\\n                      A_LOWER_CASE = 0x61;\\n                  var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\\n                  var letterIndex = currentIndex - 1;\\n                  var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\\n                  var charBuf = [];\\n\\n                  for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\\n                    charBuf.push(character);\\n                  }\\n\\n                  currentLabel = charBuf.join('');\\n                  break;\\n\\n                default:\\n                  if (style) {\\n                    throw new _util.FormatError(\\\"Invalid style \\\\\\\"\\\".concat(style, \\\"\\\\\\\" in PageLabel dictionary.\\\"));\\n                  }\\n\\n                  currentLabel = '';\\n              }\\n\\n              pageLabels[i] = prefix + currentLabel;\\n              currentIndex++;\\n            }\\n\\n            return pageLabels;\\n          }\\n        }, {\\n          key: \\\"fontFallback\\\",\\n          value: function fontFallback(id, handler) {\\n            var promises = [];\\n            this.fontCache.forEach(function (promise) {\\n              promises.push(promise);\\n            });\\n            return Promise.all(promises).then(function (translatedFonts) {\\n              var _iteratorNormalCompletion = true;\\n              var _didIteratorError = false;\\n              var _iteratorError = undefined;\\n\\n              try {\\n                for (var _iterator = translatedFonts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n                  var translatedFont = _step.value;\\n\\n                  if (translatedFont.loadedName === id) {\\n                    translatedFont.fallback(handler);\\n                    return;\\n                  }\\n                }\\n              } catch (err) {\\n                _didIteratorError = true;\\n                _iteratorError = err;\\n              } finally {\\n                try {\\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\\n                    _iterator.return();\\n                  }\\n                } finally {\\n                  if (_didIteratorError) {\\n                    throw _iteratorError;\\n                  }\\n                }\\n              }\\n            });\\n          }\\n        }, {\\n          key: \\\"cleanup\\\",\\n          value: function cleanup() {\\n            var _this = this;\\n\\n            this.pageKidsCountCache.clear();\\n            var promises = [];\\n            this.fontCache.forEach(function (promise) {\\n              promises.push(promise);\\n            });\\n            return Promise.all(promises).then(function (translatedFonts) {\\n              for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\\n                var font = translatedFonts[i].dict;\\n                delete font.translated;\\n              }\\n\\n              _this.fontCache.clear();\\n\\n              _this.builtInCMapCache.clear();\\n            });\\n          }\\n        }, {\\n          key: \\\"getPageDict\\\",\\n          value: function getPageDict(pageIndex) {\\n            var capability = (0, _util.createPromiseCapability)();\\n            var nodesToVisit = [this.catDict.getRaw('Pages')];\\n            var xref = this.xref,\\n                pageKidsCountCache = this.pageKidsCountCache;\\n            var count,\\n                currentPageIndex = 0;\\n\\n            function next() {\\n              var _loop = function _loop() {\\n                var currentNode = nodesToVisit.pop();\\n\\n                if ((0, _primitives.isRef)(currentNode)) {\\n                  count = pageKidsCountCache.get(currentNode);\\n\\n                  if (count > 0 && currentPageIndex + count < pageIndex) {\\n                    currentPageIndex += count;\\n                    return \\\"continue\\\";\\n                  }\\n\\n                  xref.fetchAsync(currentNode).then(function (obj) {\\n                    if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\\n                      if (pageIndex === currentPageIndex) {\\n                        if (currentNode && !pageKidsCountCache.has(currentNode)) {\\n                          pageKidsCountCache.put(currentNode, 1);\\n                        }\\n\\n                        capability.resolve([obj, currentNode]);\\n                      } else {\\n                        currentPageIndex++;\\n                        next();\\n                      }\\n\\n                      return;\\n                    }\\n\\n                    nodesToVisit.push(obj);\\n                    next();\\n                  }, capability.reject);\\n                  return {\\n                    v: void 0\\n                  };\\n                }\\n\\n                if (!(0, _primitives.isDict)(currentNode)) {\\n                  capability.reject(new _util.FormatError('Page dictionary kid reference points to wrong type of object.'));\\n                  return {\\n                    v: void 0\\n                  };\\n                }\\n\\n                count = currentNode.get('Count');\\n\\n                if (Number.isInteger(count) && count >= 0) {\\n                  var objId = currentNode.objId;\\n\\n                  if (objId && !pageKidsCountCache.has(objId)) {\\n                    pageKidsCountCache.put(objId, count);\\n                  }\\n\\n                  if (currentPageIndex + count <= pageIndex) {\\n                    currentPageIndex += count;\\n                    return \\\"continue\\\";\\n                  }\\n                }\\n\\n                var kids = currentNode.get('Kids');\\n\\n                if (!Array.isArray(kids)) {\\n                  if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\\n                    if (currentPageIndex === pageIndex) {\\n                      capability.resolve([currentNode, null]);\\n                      return {\\n                        v: void 0\\n                      };\\n                    }\\n\\n                    currentPageIndex++;\\n                    return \\\"continue\\\";\\n                  }\\n\\n                  capability.reject(new _util.FormatError('Page dictionary kids object is not an array.'));\\n                  return {\\n                    v: void 0\\n                  };\\n                }\\n\\n                for (var last = kids.length - 1; last >= 0; last--) {\\n                  nodesToVisit.push(kids[last]);\\n                }\\n              };\\n\\n              while (nodesToVisit.length) {\\n                var _ret = _loop();\\n\\n                switch (_ret) {\\n                  case \\\"continue\\\":\\n                    continue;\\n\\n                  default:\\n                    if (_typeof(_ret) === \\\"object\\\") return _ret.v;\\n                }\\n              }\\n\\n              capability.reject(new Error(\\\"Page index \\\".concat(pageIndex, \\\" not found.\\\")));\\n            }\\n\\n            next();\\n            return capability.promise;\\n          }\\n        }, {\\n          key: \\\"getPageIndex\\\",\\n          value: function getPageIndex(pageRef) {\\n            var xref = this.xref;\\n\\n            function pagesBeforeRef(kidRef) {\\n              var total = 0,\\n                  parentRef;\\n              return xref.fetchAsync(kidRef).then(function (node) {\\n                if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\\n                  throw new _util.FormatError('The reference does not point to a /Page dictionary.');\\n                }\\n\\n                if (!node) {\\n                  return null;\\n                }\\n\\n                if (!(0, _primitives.isDict)(node)) {\\n                  throw new _util.FormatError('Node must be a dictionary.');\\n                }\\n\\n                parentRef = node.getRaw('Parent');\\n                return node.getAsync('Parent');\\n              }).then(function (parent) {\\n                if (!parent) {\\n                  return null;\\n                }\\n\\n                if (!(0, _primitives.isDict)(parent)) {\\n                  throw new _util.FormatError('Parent must be a dictionary.');\\n                }\\n\\n                return parent.getAsync('Kids');\\n              }).then(function (kids) {\\n                if (!kids) {\\n                  return null;\\n                }\\n\\n                var kidPromises = [];\\n                var found = false;\\n\\n                for (var i = 0, ii = kids.length; i < ii; i++) {\\n                  var kid = kids[i];\\n\\n                  if (!(0, _primitives.isRef)(kid)) {\\n                    throw new _util.FormatError('Kid must be a reference.');\\n                  }\\n\\n                  if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\\n                    found = true;\\n                    break;\\n                  }\\n\\n                  kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\\n                    if (!(0, _primitives.isDict)(kid)) {\\n                      throw new _util.FormatError('Kid node must be a dictionary.');\\n                    }\\n\\n                    if (kid.has('Count')) {\\n                      total += kid.get('Count');\\n                    } else {\\n                      total++;\\n                    }\\n                  }));\\n                }\\n\\n                if (!found) {\\n                  throw new _util.FormatError('Kid reference not found in parent\\\\'s kids.');\\n                }\\n\\n                return Promise.all(kidPromises).then(function () {\\n                  return [total, parentRef];\\n                });\\n              });\\n            }\\n\\n            var total = 0;\\n\\n            function next(ref) {\\n              return pagesBeforeRef(ref).then(function (args) {\\n                if (!args) {\\n                  return total;\\n                }\\n\\n                var _args = _slicedToArray(args, 2),\\n                    count = _args[0],\\n                    parentRef = _args[1];\\n\\n                total += count;\\n                return next(parentRef);\\n              });\\n            }\\n\\n            return next(pageRef);\\n          }\\n        }, {\\n          key: \\\"metadata\\\",\\n          get: function get() {\\n            var streamRef = this.catDict.getRaw('Metadata');\\n\\n            if (!(0, _primitives.isRef)(streamRef)) {\\n              return (0, _util.shadow)(this, 'metadata', null);\\n            }\\n\\n            var suppressEncryption = !(this.xref.encrypt && this.xref.encrypt.encryptMetadata);\\n            var stream = this.xref.fetch(streamRef, suppressEncryption);\\n            var metadata;\\n\\n            if (stream && (0, _primitives.isDict)(stream.dict)) {\\n              var type = stream.dict.get('Type');\\n              var subtype = stream.dict.get('Subtype');\\n\\n              if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\\n                try {\\n                  metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\\n                } catch (e) {\\n                  if (e instanceof _util.MissingDataException) {\\n                    throw e;\\n                  }\\n\\n                  (0, _util.info)('Skipping invalid metadata.');\\n                }\\n              }\\n            }\\n\\n            return (0, _util.shadow)(this, 'metadata', metadata);\\n          }\\n        }, {\\n          key: \\\"toplevelPagesDict\\\",\\n          get: function get() {\\n            var pagesObj = this.catDict.get('Pages');\\n\\n            if (!(0, _primitives.isDict)(pagesObj)) {\\n              throw new _util.FormatError('Invalid top-level pages dictionary.');\\n            }\\n\\n            return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\\n          }\\n        }, {\\n          key: \\\"documentOutline\\\",\\n          get: function get() {\\n            var obj = null;\\n\\n            try {\\n              obj = this._readDocumentOutline();\\n            } catch (ex) {\\n              if (ex instanceof _util.MissingDataException) {\\n                throw ex;\\n              }\\n\\n              (0, _util.warn)('Unable to read document outline.');\\n            }\\n\\n            return (0, _util.shadow)(this, 'documentOutline', obj);\\n          }\\n        }, {\\n          key: \\\"permissions\\\",\\n          get: function get() {\\n            var permissions = null;\\n\\n            try {\\n              permissions = this._readPermissions();\\n            } catch (ex) {\\n              if (ex instanceof _util.MissingDataException) {\\n                throw ex;\\n              }\\n\\n              (0, _util.warn)('Unable to read permissions.');\\n            }\\n\\n            return (0, _util.shadow)(this, 'permissions', permissions);\\n          }\\n        }, {\\n          key: \\\"numPages\\\",\\n          get: function get() {\\n            var obj = this.toplevelPagesDict.get('Count');\\n\\n            if (!Number.isInteger(obj)) {\\n              throw new _util.FormatError('Page count in top-level pages dictionary is not an integer.');\\n            }\\n\\n            return (0, _util.shadow)(this, 'numPages', obj);\\n          }\\n        }, {\\n          key: \\\"destinations\\\",\\n          get: function get() {\\n            var obj = this._readDests(),\\n                dests = Object.create(null);\\n\\n            if (obj instanceof NameTree) {\\n              var names = obj.getAll();\\n\\n              for (var name in names) {\\n                dests[name] = fetchDestination(names[name]);\\n              }\\n            } else if (obj instanceof _primitives.Dict) {\\n              obj.forEach(function (key, value) {\\n                if (value) {\\n                  dests[key] = fetchDestination(value);\\n                }\\n              });\\n            }\\n\\n            return (0, _util.shadow)(this, 'destinations', dests);\\n          }\\n        }, {\\n          key: \\\"pageLabels\\\",\\n          get: function get() {\\n            var obj = null;\\n\\n            try {\\n              obj = this._readPageLabels();\\n            } catch (ex) {\\n              if (ex instanceof _util.MissingDataException) {\\n                throw ex;\\n              }\\n\\n              (0, _util.warn)('Unable to read page labels.');\\n            }\\n\\n            return (0, _util.shadow)(this, 'pageLabels', obj);\\n          }\\n        }, {\\n          key: \\\"pageMode\\\",\\n          get: function get() {\\n            var obj = this.catDict.get('PageMode');\\n            var pageMode = 'UseNone';\\n\\n            if ((0, _primitives.isName)(obj)) {\\n              switch (obj.name) {\\n                case 'UseNone':\\n                case 'UseOutlines':\\n                case 'UseThumbs':\\n                case 'FullScreen':\\n                case 'UseOC':\\n                case 'UseAttachments':\\n                  pageMode = obj.name;\\n              }\\n            }\\n\\n            return (0, _util.shadow)(this, 'pageMode', pageMode);\\n          }\\n        }, {\\n          key: \\\"openActionDestination\\\",\\n          get: function get() {\\n            var obj = this.catDict.get('OpenAction');\\n            var openActionDest = null;\\n\\n            if ((0, _primitives.isDict)(obj)) {\\n              var destDict = new _primitives.Dict(this.xref);\\n              destDict.set('A', obj);\\n              var resultObj = {\\n                url: null,\\n                dest: null\\n              };\\n              Catalog.parseDestDictionary({\\n                destDict: destDict,\\n                resultObj: resultObj\\n              });\\n\\n              if (Array.isArray(resultObj.dest)) {\\n                openActionDest = resultObj.dest;\\n              }\\n            } else if (Array.isArray(obj)) {\\n              openActionDest = obj;\\n            }\\n\\n            return (0, _util.shadow)(this, 'openActionDestination', openActionDest);\\n          }\\n        }, {\\n          key: \\\"attachments\\\",\\n          get: function get() {\\n            var obj = this.catDict.get('Names');\\n            var attachments = null;\\n\\n            if (obj && obj.has('EmbeddedFiles')) {\\n              var nameTree = new NameTree(obj.getRaw('EmbeddedFiles'), this.xref);\\n              var names = nameTree.getAll();\\n\\n              for (var name in names) {\\n                var fs = new FileSpec(names[name], this.xref);\\n\\n                if (!attachments) {\\n                  attachments = Object.create(null);\\n                }\\n\\n                attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\\n              }\\n            }\\n\\n            return (0, _util.shadow)(this, 'attachments', attachments);\\n          }\\n        }, {\\n          key: \\\"javaScript\\\",\\n          get: function get() {\\n            var obj = this.catDict.get('Names');\\n            var javaScript = null;\\n\\n            function appendIfJavaScriptDict(jsDict) {\\n              var type = jsDict.get('S');\\n\\n              if (!(0, _primitives.isName)(type, 'JavaScript')) {\\n                return;\\n              }\\n\\n              var js = jsDict.get('JS');\\n\\n              if ((0, _primitives.isStream)(js)) {\\n                js = (0, _util.bytesToString)(js.getBytes());\\n              } else if (!(0, _util.isString)(js)) {\\n                return;\\n              }\\n\\n              if (!javaScript) {\\n                javaScript = [];\\n              }\\n\\n              javaScript.push((0, _util.stringToPDFString)(js));\\n            }\\n\\n            if (obj && obj.has('JavaScript')) {\\n              var nameTree = new NameTree(obj.getRaw('JavaScript'), this.xref);\\n              var names = nameTree.getAll();\\n\\n              for (var name in names) {\\n                var jsDict = names[name];\\n\\n                if ((0, _primitives.isDict)(jsDict)) {\\n                  appendIfJavaScriptDict(jsDict);\\n                }\\n              }\\n            }\\n\\n            var openActionDict = this.catDict.get('OpenAction');\\n\\n            if ((0, _primitives.isDict)(openActionDict, 'Action')) {\\n              var actionType = openActionDict.get('S');\\n\\n              if ((0, _primitives.isName)(actionType, 'Named')) {\\n                var action = openActionDict.get('N');\\n\\n                if ((0, _primitives.isName)(action, 'Print')) {\\n                  if (!javaScript) {\\n                    javaScript = [];\\n                  }\\n\\n                  javaScript.push('print({});');\\n                }\\n              } else {\\n                appendIfJavaScriptDict(openActionDict);\\n              }\\n            }\\n\\n            return (0, _util.shadow)(this, 'javaScript', javaScript);\\n          }\\n        }], [{\\n          key: \\\"parseDestDictionary\\\",\\n          value: function parseDestDictionary(params) {\\n            function addDefaultProtocolToUrl(url) {\\n              return url.startsWith('www.') ? \\\"http://\\\".concat(url) : url;\\n            }\\n\\n            function tryConvertUrlEncoding(url) {\\n              try {\\n                return (0, _util.stringToUTF8String)(url);\\n              } catch (e) {\\n                return url;\\n              }\\n            }\\n\\n            var destDict = params.destDict;\\n\\n            if (!(0, _primitives.isDict)(destDict)) {\\n              (0, _util.warn)('parseDestDictionary: `destDict` must be a dictionary.');\\n              return;\\n            }\\n\\n            var resultObj = params.resultObj;\\n\\n            if (_typeof(resultObj) !== 'object') {\\n              (0, _util.warn)('parseDestDictionary: `resultObj` must be an object.');\\n              return;\\n            }\\n\\n            var docBaseUrl = params.docBaseUrl || null;\\n            var action = destDict.get('A'),\\n                url,\\n                dest;\\n\\n            if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\\n              action = destDict.get('Dest');\\n            }\\n\\n            if ((0, _primitives.isDict)(action)) {\\n              var actionType = action.get('S');\\n\\n              if (!(0, _primitives.isName)(actionType)) {\\n                (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\\n                return;\\n              }\\n\\n              var actionName = actionType.name;\\n\\n              switch (actionName) {\\n                case 'URI':\\n                  url = action.get('URI');\\n\\n                  if ((0, _primitives.isName)(url)) {\\n                    url = '/' + url.name;\\n                  } else if ((0, _util.isString)(url)) {\\n                    url = addDefaultProtocolToUrl(url);\\n                  }\\n\\n                  break;\\n\\n                case 'GoTo':\\n                  dest = action.get('D');\\n                  break;\\n\\n                case 'Launch':\\n                case 'GoToR':\\n                  var urlDict = action.get('F');\\n\\n                  if ((0, _primitives.isDict)(urlDict)) {\\n                    url = urlDict.get('F') || null;\\n                  } else if ((0, _util.isString)(urlDict)) {\\n                    url = urlDict;\\n                  }\\n\\n                  var remoteDest = action.get('D');\\n\\n                  if (remoteDest) {\\n                    if ((0, _primitives.isName)(remoteDest)) {\\n                      remoteDest = remoteDest.name;\\n                    }\\n\\n                    if ((0, _util.isString)(url)) {\\n                      var baseUrl = url.split('#')[0];\\n\\n                      if ((0, _util.isString)(remoteDest)) {\\n                        url = baseUrl + '#' + remoteDest;\\n                      } else if (Array.isArray(remoteDest)) {\\n                        url = baseUrl + '#' + JSON.stringify(remoteDest);\\n                      }\\n                    }\\n                  }\\n\\n                  var newWindow = action.get('NewWindow');\\n\\n                  if ((0, _util.isBool)(newWindow)) {\\n                    resultObj.newWindow = newWindow;\\n                  }\\n\\n                  break;\\n\\n                case 'Named':\\n                  var namedAction = action.get('N');\\n\\n                  if ((0, _primitives.isName)(namedAction)) {\\n                    resultObj.action = namedAction.name;\\n                  }\\n\\n                  break;\\n\\n                case 'JavaScript':\\n                  var jsAction = action.get('JS');\\n                  var js;\\n\\n                  if ((0, _primitives.isStream)(jsAction)) {\\n                    js = (0, _util.bytesToString)(jsAction.getBytes());\\n                  } else if ((0, _util.isString)(jsAction)) {\\n                    js = jsAction;\\n                  }\\n\\n                  if (js) {\\n                    var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\\n                    var regex = new RegExp('^\\\\\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\\\\\.') + ')\\\\\\\\((?:\\\\'|\\\\\\\")([^\\\\'\\\\\\\"]*)(?:\\\\'|\\\\\\\")(?:,\\\\\\\\s*(\\\\\\\\w+)\\\\\\\\)|\\\\\\\\))', 'i');\\n                    var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\\n\\n                    if (jsUrl && jsUrl[2]) {\\n                      url = jsUrl[2];\\n\\n                      if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\\n                        resultObj.newWindow = true;\\n                      }\\n\\n                      break;\\n                    }\\n                  }\\n\\n                default:\\n                  (0, _util.warn)(\\\"parseDestDictionary: unsupported action type \\\\\\\"\\\".concat(actionName, \\\"\\\\\\\".\\\"));\\n                  break;\\n              }\\n            } else if (destDict.has('Dest')) {\\n              dest = destDict.get('Dest');\\n            }\\n\\n            if ((0, _util.isString)(url)) {\\n              url = tryConvertUrlEncoding(url);\\n              var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\\n\\n              if (absoluteUrl) {\\n                resultObj.url = absoluteUrl.href;\\n              }\\n\\n              resultObj.unsafeUrl = url;\\n            }\\n\\n            if (dest) {\\n              if ((0, _primitives.isName)(dest)) {\\n                dest = dest.name;\\n              }\\n\\n              if ((0, _util.isString)(dest) || Array.isArray(dest)) {\\n                resultObj.dest = dest;\\n              }\\n            }\\n          }\\n        }]);\\n\\n        return Catalog;\\n      }();\\n\\n      exports.Catalog = Catalog;\\n\\n      var XRef = function XRefClosure() {\\n        function XRef(stream, pdfManager) {\\n          this.stream = stream;\\n          this.pdfManager = pdfManager;\\n          this.entries = [];\\n          this.xrefstms = Object.create(null);\\n          this.cache = [];\\n          this.stats = {\\n            streamTypes: [],\\n            fontTypes: []\\n          };\\n        }\\n\\n        XRef.prototype = {\\n          setStartXRef: function XRef_setStartXRef(startXRef) {\\n            this.startXRefQueue = [startXRef];\\n          },\\n          parse: function XRef_parse(recoveryMode) {\\n            var trailerDict;\\n\\n            if (!recoveryMode) {\\n              trailerDict = this.readXRef();\\n            } else {\\n              (0, _util.warn)('Indexing all PDF objects');\\n              trailerDict = this.indexObjects();\\n            }\\n\\n            trailerDict.assignXref(this);\\n            this.trailer = trailerDict;\\n            var encrypt;\\n\\n            try {\\n              encrypt = trailerDict.get('Encrypt');\\n            } catch (ex) {\\n              if (ex instanceof _util.MissingDataException) {\\n                throw ex;\\n              }\\n\\n              (0, _util.warn)(\\\"XRef.parse - Invalid \\\\\\\"Encrypt\\\\\\\" reference: \\\\\\\"\\\".concat(ex, \\\"\\\\\\\".\\\"));\\n            }\\n\\n            if ((0, _primitives.isDict)(encrypt)) {\\n              var ids = trailerDict.get('ID');\\n              var fileId = ids && ids.length ? ids[0] : '';\\n              encrypt.suppressEncryption = true;\\n              this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\\n            }\\n\\n            var root;\\n\\n            try {\\n              root = trailerDict.get('Root');\\n            } catch (ex) {\\n              if (ex instanceof _util.MissingDataException) {\\n                throw ex;\\n              }\\n\\n              (0, _util.warn)(\\\"XRef.parse - Invalid \\\\\\\"Root\\\\\\\" reference: \\\\\\\"\\\".concat(ex, \\\"\\\\\\\".\\\"));\\n            }\\n\\n            if ((0, _primitives.isDict)(root) && root.has('Pages')) {\\n              this.root = root;\\n            } else {\\n              if (!recoveryMode) {\\n                throw new _util.XRefParseException();\\n              }\\n\\n              throw new _util.FormatError('Invalid root reference');\\n            }\\n          },\\n          processXRefTable: function XRef_processXRefTable(parser) {\\n            if (!('tableState' in this)) {\\n              this.tableState = {\\n                entryNum: 0,\\n                streamPos: parser.lexer.stream.pos,\\n                parserBuf1: parser.buf1,\\n                parserBuf2: parser.buf2\\n              };\\n            }\\n\\n            var obj = this.readXRefTable(parser);\\n\\n            if (!(0, _primitives.isCmd)(obj, 'trailer')) {\\n              throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\\n            }\\n\\n            var dict = parser.getObj();\\n\\n            if (!(0, _primitives.isDict)(dict) && dict.dict) {\\n              dict = dict.dict;\\n            }\\n\\n            if (!(0, _primitives.isDict)(dict)) {\\n              throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\\n            }\\n\\n            delete this.tableState;\\n            return dict;\\n          },\\n          readXRefTable: function XRef_readXRefTable(parser) {\\n            var stream = parser.lexer.stream;\\n            var tableState = this.tableState;\\n            stream.pos = tableState.streamPos;\\n            parser.buf1 = tableState.parserBuf1;\\n            parser.buf2 = tableState.parserBuf2;\\n            var obj;\\n\\n            while (true) {\\n              if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\\n                if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\\n                  break;\\n                }\\n\\n                tableState.firstEntryNum = obj;\\n                tableState.entryCount = parser.getObj();\\n              }\\n\\n              var first = tableState.firstEntryNum;\\n              var count = tableState.entryCount;\\n\\n              if (!Number.isInteger(first) || !Number.isInteger(count)) {\\n                throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\\n              }\\n\\n              for (var i = tableState.entryNum; i < count; i++) {\\n                tableState.streamPos = stream.pos;\\n                tableState.entryNum = i;\\n                tableState.parserBuf1 = parser.buf1;\\n                tableState.parserBuf2 = parser.buf2;\\n                var entry = {};\\n                entry.offset = parser.getObj();\\n                entry.gen = parser.getObj();\\n                var type = parser.getObj();\\n\\n                if ((0, _primitives.isCmd)(type, 'f')) {\\n                  entry.free = true;\\n                } else if ((0, _primitives.isCmd)(type, 'n')) {\\n                  entry.uncompressed = true;\\n                }\\n\\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\\n                  throw new _util.FormatError(\\\"Invalid entry in XRef subsection: \\\".concat(first, \\\", \\\").concat(count));\\n                }\\n\\n                if (i === 0 && entry.free && first === 1) {\\n                  first = 0;\\n                }\\n\\n                if (!this.entries[i + first]) {\\n                  this.entries[i + first] = entry;\\n                }\\n              }\\n\\n              tableState.entryNum = 0;\\n              tableState.streamPos = stream.pos;\\n              tableState.parserBuf1 = parser.buf1;\\n              tableState.parserBuf2 = parser.buf2;\\n              delete tableState.firstEntryNum;\\n              delete tableState.entryCount;\\n            }\\n\\n            if (this.entries[0] && !this.entries[0].free) {\\n              throw new _util.FormatError('Invalid XRef table: unexpected first object');\\n            }\\n\\n            return obj;\\n          },\\n          processXRefStream: function XRef_processXRefStream(stream) {\\n            if (!('streamState' in this)) {\\n              var streamParameters = stream.dict;\\n              var byteWidths = streamParameters.get('W');\\n              var range = streamParameters.get('Index');\\n\\n              if (!range) {\\n                range = [0, streamParameters.get('Size')];\\n              }\\n\\n              this.streamState = {\\n                entryRanges: range,\\n                byteWidths: byteWidths,\\n                entryNum: 0,\\n                streamPos: stream.pos\\n              };\\n            }\\n\\n            this.readXRefStream(stream);\\n            delete this.streamState;\\n            return stream.dict;\\n          },\\n          readXRefStream: function XRef_readXRefStream(stream) {\\n            var i, j;\\n            var streamState = this.streamState;\\n            stream.pos = streamState.streamPos;\\n            var byteWidths = streamState.byteWidths;\\n            var typeFieldWidth = byteWidths[0];\\n            var offsetFieldWidth = byteWidths[1];\\n            var generationFieldWidth = byteWidths[2];\\n            var entryRanges = streamState.entryRanges;\\n\\n            while (entryRanges.length > 0) {\\n              var first = entryRanges[0];\\n              var n = entryRanges[1];\\n\\n              if (!Number.isInteger(first) || !Number.isInteger(n)) {\\n                throw new _util.FormatError(\\\"Invalid XRef range fields: \\\".concat(first, \\\", \\\").concat(n));\\n              }\\n\\n              if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\\n                throw new _util.FormatError(\\\"Invalid XRef entry fields length: \\\".concat(first, \\\", \\\").concat(n));\\n              }\\n\\n              for (i = streamState.entryNum; i < n; ++i) {\\n                streamState.entryNum = i;\\n                streamState.streamPos = stream.pos;\\n                var type = 0,\\n                    offset = 0,\\n                    generation = 0;\\n\\n                for (j = 0; j < typeFieldWidth; ++j) {\\n                  type = type << 8 | stream.getByte();\\n                }\\n\\n                if (typeFieldWidth === 0) {\\n                  type = 1;\\n                }\\n\\n                for (j = 0; j < offsetFieldWidth; ++j) {\\n                  offset = offset << 8 | stream.getByte();\\n                }\\n\\n                for (j = 0; j < generationFieldWidth; ++j) {\\n                  generation = generation << 8 | stream.getByte();\\n                }\\n\\n                var entry = {};\\n                entry.offset = offset;\\n                entry.gen = generation;\\n\\n                switch (type) {\\n                  case 0:\\n                    entry.free = true;\\n                    break;\\n\\n                  case 1:\\n                    entry.uncompressed = true;\\n                    break;\\n\\n                  case 2:\\n                    break;\\n\\n                  default:\\n                    throw new _util.FormatError(\\\"Invalid XRef entry type: \\\".concat(type));\\n                }\\n\\n                if (!this.entries[first + i]) {\\n                  this.entries[first + i] = entry;\\n                }\\n              }\\n\\n              streamState.entryNum = 0;\\n              streamState.streamPos = stream.pos;\\n              entryRanges.splice(0, 2);\\n            }\\n          },\\n          indexObjects: function XRef_indexObjects() {\\n            var TAB = 0x9,\\n                LF = 0xA,\\n                CR = 0xD,\\n                SPACE = 0x20;\\n            var PERCENT = 0x25,\\n                LT = 0x3C;\\n\\n            function readToken(data, offset) {\\n              var token = '',\\n                  ch = data[offset];\\n\\n              while (ch !== LF && ch !== CR && ch !== LT) {\\n                if (++offset >= data.length) {\\n                  break;\\n                }\\n\\n                token += String.fromCharCode(ch);\\n                ch = data[offset];\\n              }\\n\\n              return token;\\n            }\\n\\n            function skipUntil(data, offset, what) {\\n              var length = what.length,\\n                  dataLength = data.length;\\n              var skipped = 0;\\n\\n              while (offset < dataLength) {\\n                var i = 0;\\n\\n                while (i < length && data[offset + i] === what[i]) {\\n                  ++i;\\n                }\\n\\n                if (i >= length) {\\n                  break;\\n                }\\n\\n                offset++;\\n                skipped++;\\n              }\\n\\n              return skipped;\\n            }\\n\\n            var objRegExp = /^(\\\\d+)\\\\s+(\\\\d+)\\\\s+obj\\\\b/;\\n            var endobjRegExp = /\\\\bendobj[\\\\b\\\\s]$/;\\n            var nestedObjRegExp = /\\\\s+(\\\\d+\\\\s+\\\\d+\\\\s+obj[\\\\b\\\\s<])$/;\\n            var CHECK_CONTENT_LENGTH = 25;\\n            var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\\n            var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\\n            var objBytes = new Uint8Array([111, 98, 106]);\\n            var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\\n            this.entries.length = 0;\\n            var stream = this.stream;\\n            stream.pos = 0;\\n            var buffer = stream.getBytes();\\n            var position = stream.start,\\n                length = buffer.length;\\n            var trailers = [],\\n                xrefStms = [];\\n\\n            while (position < length) {\\n              var ch = buffer[position];\\n\\n              if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\\n                ++position;\\n                continue;\\n              }\\n\\n              if (ch === PERCENT) {\\n                do {\\n                  ++position;\\n\\n                  if (position >= length) {\\n                    break;\\n                  }\\n\\n                  ch = buffer[position];\\n                } while (ch !== LF && ch !== CR);\\n\\n                continue;\\n              }\\n\\n              var token = readToken(buffer, position);\\n              var m;\\n\\n              if (token.startsWith('xref') && (token.length === 4 || /\\\\s/.test(token[4]))) {\\n                position += skipUntil(buffer, position, trailerBytes);\\n                trailers.push(position);\\n                position += skipUntil(buffer, position, startxrefBytes);\\n              } else if (m = objRegExp.exec(token)) {\\n                var num = m[1] | 0,\\n                    gen = m[2] | 0;\\n\\n                if (typeof this.entries[num] === 'undefined') {\\n                  this.entries[num] = {\\n                    offset: position - stream.start,\\n                    gen: gen,\\n                    uncompressed: true\\n                  };\\n                }\\n\\n                var contentLength = void 0,\\n                    startPos = position + token.length;\\n\\n                while (startPos < buffer.length) {\\n                  var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\\n                  contentLength = endPos - position;\\n                  var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\\n                  var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\\n\\n                  if (endobjRegExp.test(tokenStr)) {\\n                    break;\\n                  } else {\\n                    var objToken = nestedObjRegExp.exec(tokenStr);\\n\\n                    if (objToken && objToken[1]) {\\n                      (0, _util.warn)('indexObjects: Found new \\\"obj\\\" inside of another \\\"obj\\\", ' + 'caused by missing \\\"endobj\\\" -- trying to recover.');\\n                      contentLength -= objToken[1].length;\\n                      break;\\n                    }\\n                  }\\n\\n                  startPos = endPos;\\n                }\\n\\n                var content = buffer.subarray(position, position + contentLength);\\n                var xrefTagOffset = skipUntil(content, 0, xrefBytes);\\n\\n                if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\\n                  xrefStms.push(position - stream.start);\\n                  this.xrefstms[position - stream.start] = 1;\\n                }\\n\\n                position += contentLength;\\n              } else if (token.startsWith('trailer') && (token.length === 7 || /\\\\s/.test(token[7]))) {\\n                trailers.push(position);\\n                position += skipUntil(buffer, position, startxrefBytes);\\n              } else {\\n                position += token.length + 1;\\n              }\\n            }\\n\\n            var i, ii;\\n\\n            for (i = 0, ii = xrefStms.length; i < ii; ++i) {\\n              this.startXRefQueue.push(xrefStms[i]);\\n              this.readXRef(true);\\n            }\\n\\n            var trailerDict;\\n\\n            for (i = 0, ii = trailers.length; i < ii; ++i) {\\n              stream.pos = trailers[i];\\n              var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\\n              var obj = parser.getObj();\\n\\n              if (!(0, _primitives.isCmd)(obj, 'trailer')) {\\n                continue;\\n              }\\n\\n              var dict = parser.getObj();\\n\\n              if (!(0, _primitives.isDict)(dict)) {\\n                continue;\\n              }\\n\\n              var rootDict = void 0;\\n\\n              try {\\n                rootDict = dict.get('Root');\\n              } catch (ex) {\\n                if (ex instanceof _util.MissingDataException) {\\n                  throw ex;\\n                }\\n\\n                continue;\\n              }\\n\\n              if (!(0, _primitives.isDict)(rootDict) || !rootDict.has('Pages')) {\\n                continue;\\n              }\\n\\n              if (dict.has('ID')) {\\n                return dict;\\n              }\\n\\n              trailerDict = dict;\\n            }\\n\\n            if (trailerDict) {\\n              return trailerDict;\\n            }\\n\\n            throw new _util.InvalidPDFException('Invalid PDF structure');\\n          },\\n          readXRef: function XRef_readXRef(recoveryMode) {\\n            var stream = this.stream;\\n            var startXRefParsedCache = Object.create(null);\\n\\n            try {\\n              while (this.startXRefQueue.length) {\\n                var startXRef = this.startXRefQueue[0];\\n\\n                if (startXRefParsedCache[startXRef]) {\\n                  (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\\n                  this.startXRefQueue.shift();\\n                  continue;\\n                }\\n\\n                startXRefParsedCache[startXRef] = true;\\n                stream.pos = startXRef + stream.start;\\n                var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\\n                var obj = parser.getObj();\\n                var dict;\\n\\n                if ((0, _primitives.isCmd)(obj, 'xref')) {\\n                  dict = this.processXRefTable(parser);\\n\\n                  if (!this.topDict) {\\n                    this.topDict = dict;\\n                  }\\n\\n                  obj = dict.get('XRefStm');\\n\\n                  if (Number.isInteger(obj)) {\\n                    var pos = obj;\\n\\n                    if (!(pos in this.xrefstms)) {\\n                      this.xrefstms[pos] = 1;\\n                      this.startXRefQueue.push(pos);\\n                    }\\n                  }\\n                } else if (Number.isInteger(obj)) {\\n                  if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\\n                    throw new _util.FormatError('Invalid XRef stream');\\n                  }\\n\\n                  dict = this.processXRefStream(obj);\\n\\n                  if (!this.topDict) {\\n                    this.topDict = dict;\\n                  }\\n\\n                  if (!dict) {\\n                    throw new _util.FormatError('Failed to read XRef stream');\\n                  }\\n                } else {\\n                  throw new _util.FormatError('Invalid XRef stream header');\\n                }\\n\\n                obj = dict.get('Prev');\\n\\n                if (Number.isInteger(obj)) {\\n                  this.startXRefQueue.push(obj);\\n                } else if ((0, _primitives.isRef)(obj)) {\\n                  this.startXRefQueue.push(obj.num);\\n                }\\n\\n                this.startXRefQueue.shift();\\n              }\\n\\n              return this.topDict;\\n            } catch (e) {\\n              if (e instanceof _util.MissingDataException) {\\n                throw e;\\n              }\\n\\n              (0, _util.info)('(while reading XRef): ' + e);\\n            }\\n\\n            if (recoveryMode) {\\n              return;\\n            }\\n\\n            throw new _util.XRefParseException();\\n          },\\n          getEntry: function XRef_getEntry(i) {\\n            var xrefEntry = this.entries[i];\\n\\n            if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\\n              return xrefEntry;\\n            }\\n\\n            return null;\\n          },\\n          fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\\n            if (!(0, _primitives.isRef)(obj)) {\\n              return obj;\\n            }\\n\\n            return this.fetch(obj, suppressEncryption);\\n          },\\n          fetch: function XRef_fetch(ref, suppressEncryption) {\\n            if (!(0, _primitives.isRef)(ref)) {\\n              throw new Error('ref object is not a reference');\\n            }\\n\\n            var num = ref.num;\\n\\n            if (num in this.cache) {\\n              var cacheEntry = this.cache[num];\\n\\n              if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\\n                cacheEntry.objId = ref.toString();\\n              }\\n\\n              return cacheEntry;\\n            }\\n\\n            var xrefEntry = this.getEntry(num);\\n\\n            if (xrefEntry === null) {\\n              return this.cache[num] = null;\\n            }\\n\\n            if (xrefEntry.uncompressed) {\\n              xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\\n            } else {\\n              xrefEntry = this.fetchCompressed(ref, xrefEntry, suppressEncryption);\\n            }\\n\\n            if ((0, _primitives.isDict)(xrefEntry)) {\\n              xrefEntry.objId = ref.toString();\\n            } else if ((0, _primitives.isStream)(xrefEntry)) {\\n              xrefEntry.dict.objId = ref.toString();\\n            }\\n\\n            return xrefEntry;\\n          },\\n          fetchUncompressed: function fetchUncompressed(ref, xrefEntry) {\\n            var suppressEncryption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n            var gen = ref.gen;\\n            var num = ref.num;\\n\\n            if (xrefEntry.gen !== gen) {\\n              throw new _util.XRefEntryException(\\\"Inconsistent generation in XRef: \\\".concat(ref));\\n            }\\n\\n            var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\\n            var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\\n            var obj1 = parser.getObj();\\n            var obj2 = parser.getObj();\\n            var obj3 = parser.getObj();\\n\\n            if (!Number.isInteger(obj1)) {\\n              obj1 = parseInt(obj1, 10);\\n            }\\n\\n            if (!Number.isInteger(obj2)) {\\n              obj2 = parseInt(obj2, 10);\\n            }\\n\\n            if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\\n              throw new _util.XRefEntryException(\\\"Bad (uncompressed) XRef entry: \\\".concat(ref));\\n            }\\n\\n            if (obj3.cmd !== 'obj') {\\n              if (obj3.cmd.startsWith('obj')) {\\n                num = parseInt(obj3.cmd.substring(3), 10);\\n\\n                if (!Number.isNaN(num)) {\\n                  return num;\\n                }\\n              }\\n\\n              throw new _util.XRefEntryException(\\\"Bad (uncompressed) XRef entry: \\\".concat(ref));\\n            }\\n\\n            if (this.encrypt && !suppressEncryption) {\\n              xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\\n            } else {\\n              xrefEntry = parser.getObj();\\n            }\\n\\n            if (!(0, _primitives.isStream)(xrefEntry)) {\\n              this.cache[num] = xrefEntry;\\n            }\\n\\n            return xrefEntry;\\n          },\\n          fetchCompressed: function fetchCompressed(ref, xrefEntry) {\\n            var suppressEncryption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n            var tableOffset = xrefEntry.offset;\\n            var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\\n\\n            if (!(0, _primitives.isStream)(stream)) {\\n              throw new _util.FormatError('bad ObjStm stream');\\n            }\\n\\n            var first = stream.dict.get('First');\\n            var n = stream.dict.get('N');\\n\\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\\n              throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\\n            }\\n\\n            var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\\n            parser.allowStreams = true;\\n            var i,\\n                entries = [],\\n                num,\\n                nums = [];\\n\\n            for (i = 0; i < n; ++i) {\\n              num = parser.getObj();\\n\\n              if (!Number.isInteger(num)) {\\n                throw new _util.FormatError(\\\"invalid object number in the ObjStm stream: \\\".concat(num));\\n              }\\n\\n              nums.push(num);\\n              var offset = parser.getObj();\\n\\n              if (!Number.isInteger(offset)) {\\n                throw new _util.FormatError(\\\"invalid object offset in the ObjStm stream: \\\".concat(offset));\\n              }\\n            }\\n\\n            for (i = 0; i < n; ++i) {\\n              entries.push(parser.getObj());\\n\\n              if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\\n                parser.shift();\\n              }\\n\\n              num = nums[i];\\n              var entry = this.entries[num];\\n\\n              if (entry && entry.offset === tableOffset && entry.gen === i) {\\n                this.cache[num] = entries[i];\\n              }\\n            }\\n\\n            xrefEntry = entries[xrefEntry.gen];\\n\\n            if (xrefEntry === undefined) {\\n              throw new _util.XRefEntryException(\\\"Bad (compressed) XRef entry: \\\".concat(ref));\\n            }\\n\\n            return xrefEntry;\\n          },\\n          fetchIfRefAsync: function () {\\n            var _fetchIfRefAsync = _asyncToGenerator(\\n            /*#__PURE__*/\\n            _regenerator.default.mark(function _callee(obj, suppressEncryption) {\\n              return _regenerator.default.wrap(function _callee$(_context) {\\n                while (1) {\\n                  switch (_context.prev = _context.next) {\\n                    case 0:\\n                      if ((0, _primitives.isRef)(obj)) {\\n                        _context.next = 2;\\n                        break;\\n                      }\\n\\n                      return _context.abrupt(\\\"return\\\", obj);\\n\\n                    case 2:\\n                      return _context.abrupt(\\\"return\\\", this.fetchAsync(obj, suppressEncryption));\\n\\n                    case 3:\\n                    case \\\"end\\\":\\n                      return _context.stop();\\n                  }\\n                }\\n              }, _callee, this);\\n            }));\\n\\n            function fetchIfRefAsync(_x, _x2) {\\n              return _fetchIfRefAsync.apply(this, arguments);\\n            }\\n\\n            return fetchIfRefAsync;\\n          }(),\\n          fetchAsync: function () {\\n            var _fetchAsync = _asyncToGenerator(\\n            /*#__PURE__*/\\n            _regenerator.default.mark(function _callee2(ref, suppressEncryption) {\\n              return _regenerator.default.wrap(function _callee2$(_context2) {\\n                while (1) {\\n                  switch (_context2.prev = _context2.next) {\\n                    case 0:\\n                      _context2.prev = 0;\\n                      return _context2.abrupt(\\\"return\\\", this.fetch(ref, suppressEncryption));\\n\\n                    case 4:\\n                      _context2.prev = 4;\\n                      _context2.t0 = _context2[\\\"catch\\\"](0);\\n\\n                      if (_context2.t0 instanceof _util.MissingDataException) {\\n                        _context2.next = 8;\\n                        break;\\n                      }\\n\\n                      throw _context2.t0;\\n\\n                    case 8:\\n                      _context2.next = 10;\\n                      return this.pdfManager.requestRange(_context2.t0.begin, _context2.t0.end);\\n\\n                    case 10:\\n                      return _context2.abrupt(\\\"return\\\", this.fetchAsync(ref, suppressEncryption));\\n\\n                    case 11:\\n                    case \\\"end\\\":\\n                      return _context2.stop();\\n                  }\\n                }\\n              }, _callee2, this, [[0, 4]]);\\n            }));\\n\\n            function fetchAsync(_x3, _x4) {\\n              return _fetchAsync.apply(this, arguments);\\n            }\\n\\n            return fetchAsync;\\n          }(),\\n          getCatalogObj: function XRef_getCatalogObj() {\\n            return this.root;\\n          }\\n        };\\n        return XRef;\\n      }();\\n\\n      exports.XRef = XRef;\\n\\n      var NameOrNumberTree =\\n      /*#__PURE__*/\\n      function () {\\n        function NameOrNumberTree(root, xref, type) {\\n          _classCallCheck(this, NameOrNumberTree);\\n\\n          if (this.constructor === NameOrNumberTree) {\\n            (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\\n          }\\n\\n          this.root = root;\\n          this.xref = xref;\\n          this._type = type;\\n        }\\n\\n        _createClass(NameOrNumberTree, [{\\n          key: \\\"getAll\\\",\\n          value: function getAll() {\\n            var dict = Object.create(null);\\n\\n            if (!this.root) {\\n              return dict;\\n            }\\n\\n            var xref = this.xref;\\n            var processed = new _primitives.RefSet();\\n            processed.put(this.root);\\n            var queue = [this.root];\\n\\n            while (queue.length > 0) {\\n              var obj = xref.fetchIfRef(queue.shift());\\n\\n              if (!(0, _primitives.isDict)(obj)) {\\n                continue;\\n              }\\n\\n              if (obj.has('Kids')) {\\n                var kids = obj.get('Kids');\\n\\n                for (var i = 0, ii = kids.length; i < ii; i++) {\\n                  var kid = kids[i];\\n\\n                  if (processed.has(kid)) {\\n                    throw new _util.FormatError(\\\"Duplicate entry in \\\\\\\"\\\".concat(this._type, \\\"\\\\\\\" tree.\\\"));\\n                  }\\n\\n                  queue.push(kid);\\n                  processed.put(kid);\\n                }\\n\\n                continue;\\n              }\\n\\n              var entries = obj.get(this._type);\\n\\n              if (Array.isArray(entries)) {\\n                for (var _i2 = 0, _ii = entries.length; _i2 < _ii; _i2 += 2) {\\n                  dict[xref.fetchIfRef(entries[_i2])] = xref.fetchIfRef(entries[_i2 + 1]);\\n                }\\n              }\\n            }\\n\\n            return dict;\\n          }\\n        }, {\\n          key: \\\"get\\\",\\n          value: function get(key) {\\n            if (!this.root) {\\n              return null;\\n            }\\n\\n            var xref = this.xref;\\n            var kidsOrEntries = xref.fetchIfRef(this.root);\\n            var loopCount = 0;\\n            var MAX_LEVELS = 10;\\n\\n            while (kidsOrEntries.has('Kids')) {\\n              if (++loopCount > MAX_LEVELS) {\\n                (0, _util.warn)(\\\"Search depth limit reached for \\\\\\\"\\\".concat(this._type, \\\"\\\\\\\" tree.\\\"));\\n                return null;\\n              }\\n\\n              var kids = kidsOrEntries.get('Kids');\\n\\n              if (!Array.isArray(kids)) {\\n                return null;\\n              }\\n\\n              var l = 0,\\n                  r = kids.length - 1;\\n\\n              while (l <= r) {\\n                var m = l + r >> 1;\\n                var kid = xref.fetchIfRef(kids[m]);\\n                var limits = kid.get('Limits');\\n\\n                if (key < xref.fetchIfRef(limits[0])) {\\n                  r = m - 1;\\n                } else if (key > xref.fetchIfRef(limits[1])) {\\n                  l = m + 1;\\n                } else {\\n                  kidsOrEntries = xref.fetchIfRef(kids[m]);\\n                  break;\\n                }\\n              }\\n\\n              if (l > r) {\\n                return null;\\n              }\\n            }\\n\\n            var entries = kidsOrEntries.get(this._type);\\n\\n            if (Array.isArray(entries)) {\\n              var _l = 0,\\n                  _r = entries.length - 2;\\n\\n              while (_l <= _r) {\\n                var tmp = _l + _r >> 1,\\n                    _m = tmp + (tmp & 1);\\n\\n                var currentKey = xref.fetchIfRef(entries[_m]);\\n\\n                if (key < currentKey) {\\n                  _r = _m - 2;\\n                } else if (key > currentKey) {\\n                  _l = _m + 2;\\n                } else {\\n                  return xref.fetchIfRef(entries[_m + 1]);\\n                }\\n              }\\n\\n              (0, _util.info)(\\\"Falling back to an exhaustive search, for key \\\\\\\"\\\".concat(key, \\\"\\\\\\\", \\\") + \\\"in \\\\\\\"\\\".concat(this._type, \\\"\\\\\\\" tree.\\\"));\\n\\n              for (var _m2 = 0, mm = entries.length; _m2 < mm; _m2 += 2) {\\n                var _currentKey = xref.fetchIfRef(entries[_m2]);\\n\\n                if (_currentKey === key) {\\n                  (0, _util.warn)(\\\"The \\\\\\\"\\\".concat(key, \\\"\\\\\\\" key was found at an incorrect, \\\") + \\\"i.e. out-of-order, position in \\\\\\\"\\\".concat(this._type, \\\"\\\\\\\" tree.\\\"));\\n                  return xref.fetchIfRef(entries[_m2 + 1]);\\n                }\\n              }\\n            }\\n\\n            return null;\\n          }\\n        }]);\\n\\n        return NameOrNumberTree;\\n      }();\\n\\n      var NameTree =\\n      /*#__PURE__*/\\n      function (_NameOrNumberTree) {\\n        _inherits(NameTree, _NameOrNumberTree);\\n\\n        function NameTree(root, xref) {\\n          _classCallCheck(this, NameTree);\\n\\n          return _possibleConstructorReturn(this, _getPrototypeOf(NameTree).call(this, root, xref, 'Names'));\\n        }\\n\\n        return NameTree;\\n      }(NameOrNumberTree);\\n\\n      var NumberTree =\\n      /*#__PURE__*/\\n      function (_NameOrNumberTree2) {\\n        _inherits(NumberTree, _NameOrNumberTree2);\\n\\n        function NumberTree(root, xref) {\\n          _classCallCheck(this, NumberTree);\\n\\n          return _possibleConstructorReturn(this, _getPrototypeOf(NumberTree).call(this, root, xref, 'Nums'));\\n        }\\n\\n        return NumberTree;\\n      }(NameOrNumberTree);\\n\\n      var FileSpec = function FileSpecClosure() {\\n        function FileSpec(root, xref) {\\n          if (!root || !(0, _primitives.isDict)(root)) {\\n            return;\\n          }\\n\\n          this.xref = xref;\\n          this.root = root;\\n\\n          if (root.has('FS')) {\\n            this.fs = root.get('FS');\\n          }\\n\\n          this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\\n\\n          if (root.has('RF')) {\\n            (0, _util.warn)('Related file specifications are not supported');\\n          }\\n\\n          this.contentAvailable = true;\\n\\n          if (!root.has('EF')) {\\n            this.contentAvailable = false;\\n            (0, _util.warn)('Non-embedded file specifications are not supported');\\n          }\\n        }\\n\\n        function pickPlatformItem(dict) {\\n          if (dict.has('UF')) {\\n            return dict.get('UF');\\n          } else if (dict.has('F')) {\\n            return dict.get('F');\\n          } else if (dict.has('Unix')) {\\n            return dict.get('Unix');\\n          } else if (dict.has('Mac')) {\\n            return dict.get('Mac');\\n          } else if (dict.has('DOS')) {\\n            return dict.get('DOS');\\n          }\\n\\n          return null;\\n        }\\n\\n        FileSpec.prototype = {\\n          get filename() {\\n            if (!this._filename && this.root) {\\n              var filename = pickPlatformItem(this.root) || 'unnamed';\\n              this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\\\\\\\\\/g, '\\\\\\\\').replace(/\\\\\\\\\\\\//g, '/').replace(/\\\\\\\\/g, '/');\\n            }\\n\\n            return this._filename;\\n          },\\n\\n          get content() {\\n            if (!this.contentAvailable) {\\n              return null;\\n            }\\n\\n            if (!this.contentRef && this.root) {\\n              this.contentRef = pickPlatformItem(this.root.get('EF'));\\n            }\\n\\n            var content = null;\\n\\n            if (this.contentRef) {\\n              var xref = this.xref;\\n              var fileObj = xref.fetchIfRef(this.contentRef);\\n\\n              if (fileObj && (0, _primitives.isStream)(fileObj)) {\\n                content = fileObj.getBytes();\\n              } else {\\n                (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\\n              }\\n            } else {\\n              (0, _util.warn)('Embedded file specification does not have a content');\\n            }\\n\\n            return content;\\n          },\\n\\n          get serializable() {\\n            return {\\n              filename: this.filename,\\n              content: this.content\\n            };\\n          }\\n\\n        };\\n        return FileSpec;\\n      }();\\n\\n      exports.FileSpec = FileSpec;\\n\\n      var ObjectLoader = function () {\\n        function mayHaveChildren(value) {\\n          return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\\n        }\\n\\n        function addChildren(node, nodesToVisit) {\\n          if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\\n            var dict = (0, _primitives.isDict)(node) ? node : node.dict;\\n            var dictKeys = dict.getKeys();\\n\\n            for (var i = 0, ii = dictKeys.length; i < ii; i++) {\\n              var rawValue = dict.getRaw(dictKeys[i]);\\n\\n              if (mayHaveChildren(rawValue)) {\\n                nodesToVisit.push(rawValue);\\n              }\\n            }\\n          } else if (Array.isArray(node)) {\\n            for (var _i3 = 0, _ii2 = node.length; _i3 < _ii2; _i3++) {\\n              var value = node[_i3];\\n\\n              if (mayHaveChildren(value)) {\\n                nodesToVisit.push(value);\\n              }\\n            }\\n          }\\n        }\\n\\n        function ObjectLoader(dict, keys, xref) {\\n          this.dict = dict;\\n          this.keys = keys;\\n          this.xref = xref;\\n          this.refSet = null;\\n          this.capability = null;\\n        }\\n\\n        ObjectLoader.prototype = {\\n          load: function load() {\\n            this.capability = (0, _util.createPromiseCapability)();\\n\\n            if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\\n              this.capability.resolve();\\n              return this.capability.promise;\\n            }\\n\\n            var keys = this.keys,\\n                dict = this.dict;\\n            this.refSet = new _primitives.RefSet();\\n            var nodesToVisit = [];\\n\\n            for (var i = 0, ii = keys.length; i < ii; i++) {\\n              var rawValue = dict.getRaw(keys[i]);\\n\\n              if (rawValue !== undefined) {\\n                nodesToVisit.push(rawValue);\\n              }\\n            }\\n\\n            this._walk(nodesToVisit);\\n\\n            return this.capability.promise;\\n          },\\n          _walk: function _walk(nodesToVisit) {\\n            var _this2 = this;\\n\\n            var nodesToRevisit = [];\\n            var pendingRequests = [];\\n\\n            while (nodesToVisit.length) {\\n              var currentNode = nodesToVisit.pop();\\n\\n              if ((0, _primitives.isRef)(currentNode)) {\\n                if (this.refSet.has(currentNode)) {\\n                  continue;\\n                }\\n\\n                try {\\n                  this.refSet.put(currentNode);\\n                  currentNode = this.xref.fetch(currentNode);\\n                } catch (ex) {\\n                  if (!(ex instanceof _util.MissingDataException)) {\\n                    throw ex;\\n                  }\\n\\n                  nodesToRevisit.push(currentNode);\\n                  pendingRequests.push({\\n                    begin: ex.begin,\\n                    end: ex.end\\n                  });\\n                }\\n              }\\n\\n              if (currentNode && currentNode.getBaseStreams) {\\n                var baseStreams = currentNode.getBaseStreams();\\n                var foundMissingData = false;\\n\\n                for (var i = 0, ii = baseStreams.length; i < ii; i++) {\\n                  var stream = baseStreams[i];\\n\\n                  if (stream.getMissingChunks && stream.getMissingChunks().length) {\\n                    foundMissingData = true;\\n                    pendingRequests.push({\\n                      begin: stream.start,\\n                      end: stream.end\\n                    });\\n                  }\\n                }\\n\\n                if (foundMissingData) {\\n                  nodesToRevisit.push(currentNode);\\n                }\\n              }\\n\\n              addChildren(currentNode, nodesToVisit);\\n            }\\n\\n            if (pendingRequests.length) {\\n              this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\\n                for (var _i4 = 0, _ii3 = nodesToRevisit.length; _i4 < _ii3; _i4++) {\\n                  var node = nodesToRevisit[_i4];\\n\\n                  if ((0, _primitives.isRef)(node)) {\\n                    _this2.refSet.remove(node);\\n                  }\\n                }\\n\\n                _this2._walk(nodesToRevisit);\\n              }, this.capability.reject);\\n              return;\\n            }\\n\\n            this.refSet = null;\\n            this.capability.resolve();\\n          }\\n        };\\n        return ObjectLoader;\\n      }();\\n\\n      exports.ObjectLoader = ObjectLoader;\\n      /***/\\n    },\\n    /* 155 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.isEOF = isEOF;\\n      exports.isCmd = isCmd;\\n      exports.isDict = isDict;\\n      exports.isName = isName;\\n      exports.isRef = isRef;\\n      exports.isRefsEqual = isRefsEqual;\\n      exports.isStream = isStream;\\n      exports.RefSetCache = exports.RefSet = exports.Ref = exports.Name = exports.Dict = exports.Cmd = exports.EOF = void 0;\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      var EOF = {};\\n      exports.EOF = EOF;\\n\\n      var Name = function NameClosure() {\\n        function Name(name) {\\n          this.name = name;\\n        }\\n\\n        Name.prototype = {};\\n        var nameCache = Object.create(null);\\n\\n        Name.get = function Name_get(name) {\\n          var nameValue = nameCache[name];\\n          return nameValue ? nameValue : nameCache[name] = new Name(name);\\n        };\\n\\n        return Name;\\n      }();\\n\\n      exports.Name = Name;\\n\\n      var Cmd = function CmdClosure() {\\n        function Cmd(cmd) {\\n          this.cmd = cmd;\\n        }\\n\\n        Cmd.prototype = {};\\n        var cmdCache = Object.create(null);\\n\\n        Cmd.get = function Cmd_get(cmd) {\\n          var cmdValue = cmdCache[cmd];\\n          return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\\n        };\\n\\n        return Cmd;\\n      }();\\n\\n      exports.Cmd = Cmd;\\n\\n      var Dict = function DictClosure() {\\n        var nonSerializable = function nonSerializableClosure() {\\n          return nonSerializable;\\n        };\\n\\n        function Dict(xref) {\\n          this._map = Object.create(null);\\n          this.xref = xref;\\n          this.objId = null;\\n          this.suppressEncryption = false;\\n          this.__nonSerializable__ = nonSerializable;\\n        }\\n\\n        Dict.prototype = {\\n          assignXref: function Dict_assignXref(newXref) {\\n            this.xref = newXref;\\n          },\\n          get: function Dict_get(key1, key2, key3) {\\n            var value;\\n            var xref = this.xref,\\n                suppressEncryption = this.suppressEncryption;\\n\\n            if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\\n              return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n            }\\n\\n            if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\\n              return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n            }\\n\\n            value = this._map[key3] || null;\\n            return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\n          },\\n          getAsync: function Dict_getAsync(key1, key2, key3) {\\n            var value;\\n            var xref = this.xref,\\n                suppressEncryption = this.suppressEncryption;\\n\\n            if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\\n              if (xref) {\\n                return xref.fetchIfRefAsync(value, suppressEncryption);\\n              }\\n\\n              return Promise.resolve(value);\\n            }\\n\\n            if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\\n              if (xref) {\\n                return xref.fetchIfRefAsync(value, suppressEncryption);\\n              }\\n\\n              return Promise.resolve(value);\\n            }\\n\\n            value = this._map[key3] || null;\\n\\n            if (xref) {\\n              return xref.fetchIfRefAsync(value, suppressEncryption);\\n            }\\n\\n            return Promise.resolve(value);\\n          },\\n          getArray: function Dict_getArray(key1, key2, key3) {\\n            var value = this.get(key1, key2, key3);\\n            var xref = this.xref,\\n                suppressEncryption = this.suppressEncryption;\\n\\n            if (!Array.isArray(value) || !xref) {\\n              return value;\\n            }\\n\\n            value = value.slice();\\n\\n            for (var i = 0, ii = value.length; i < ii; i++) {\\n              if (!isRef(value[i])) {\\n                continue;\\n              }\\n\\n              value[i] = xref.fetch(value[i], suppressEncryption);\\n            }\\n\\n            return value;\\n          },\\n          getRaw: function Dict_getRaw(key) {\\n            return this._map[key];\\n          },\\n          getKeys: function Dict_getKeys() {\\n            return Object.keys(this._map);\\n          },\\n          set: function Dict_set(key, value) {\\n            this._map[key] = value;\\n          },\\n          has: function Dict_has(key) {\\n            return key in this._map;\\n          },\\n          forEach: function Dict_forEach(callback) {\\n            for (var key in this._map) {\\n              callback(key, this.get(key));\\n            }\\n          }\\n        };\\n        Dict.empty = new Dict(null);\\n\\n        Dict.merge = function (xref, dictArray) {\\n          var mergedDict = new Dict(xref);\\n\\n          for (var i = 0, ii = dictArray.length; i < ii; i++) {\\n            var dict = dictArray[i];\\n\\n            if (!isDict(dict)) {\\n              continue;\\n            }\\n\\n            for (var keyName in dict._map) {\\n              if (mergedDict._map[keyName] !== undefined) {\\n                continue;\\n              }\\n\\n              mergedDict._map[keyName] = dict._map[keyName];\\n            }\\n          }\\n\\n          return mergedDict;\\n        };\\n\\n        return Dict;\\n      }();\\n\\n      exports.Dict = Dict;\\n\\n      var Ref = function RefClosure() {\\n        function Ref(num, gen) {\\n          this.num = num;\\n          this.gen = gen;\\n        }\\n\\n        Ref.prototype = {\\n          toString: function Ref_toString() {\\n            if (this.gen !== 0) {\\n              return \\\"\\\".concat(this.num, \\\"R\\\").concat(this.gen);\\n            }\\n\\n            return \\\"\\\".concat(this.num, \\\"R\\\");\\n          }\\n        };\\n        return Ref;\\n      }();\\n\\n      exports.Ref = Ref;\\n\\n      var RefSet = function RefSetClosure() {\\n        function RefSet() {\\n          this.dict = Object.create(null);\\n        }\\n\\n        RefSet.prototype = {\\n          has: function RefSet_has(ref) {\\n            return ref.toString() in this.dict;\\n          },\\n          put: function RefSet_put(ref) {\\n            this.dict[ref.toString()] = true;\\n          },\\n          remove: function RefSet_remove(ref) {\\n            delete this.dict[ref.toString()];\\n          }\\n        };\\n        return RefSet;\\n      }();\\n\\n      exports.RefSet = RefSet;\\n\\n      var RefSetCache = function RefSetCacheClosure() {\\n        function RefSetCache() {\\n          this.dict = Object.create(null);\\n        }\\n\\n        RefSetCache.prototype = {\\n          get: function RefSetCache_get(ref) {\\n            return this.dict[ref.toString()];\\n          },\\n          has: function RefSetCache_has(ref) {\\n            return ref.toString() in this.dict;\\n          },\\n          put: function RefSetCache_put(ref, obj) {\\n            this.dict[ref.toString()] = obj;\\n          },\\n          putAlias: function RefSetCache_putAlias(ref, aliasRef) {\\n            this.dict[ref.toString()] = this.get(aliasRef);\\n          },\\n          forEach: function RefSetCache_forEach(fn, thisArg) {\\n            for (var i in this.dict) {\\n              fn.call(thisArg, this.dict[i]);\\n            }\\n          },\\n          clear: function RefSetCache_clear() {\\n            this.dict = Object.create(null);\\n          }\\n        };\\n        return RefSetCache;\\n      }();\\n\\n      exports.RefSetCache = RefSetCache;\\n\\n      function isEOF(v) {\\n        return v === EOF;\\n      }\\n\\n      function isName(v, name) {\\n        return v instanceof Name && (name === undefined || v.name === name);\\n      }\\n\\n      function isCmd(v, cmd) {\\n        return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\\n      }\\n\\n      function isDict(v, type) {\\n        return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\\n      }\\n\\n      function isRef(v) {\\n        return v instanceof Ref;\\n      }\\n\\n      function isRefsEqual(v1, v2) {\\n        return v1.num === v2.num && v1.gen === v2.gen;\\n      }\\n\\n      function isStream(v) {\\n        return _typeof(v) === 'object' && v !== null && v.getBytes !== undefined;\\n      }\\n      /***/\\n\\n    },\\n    /* 156 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.Parser = exports.Linearization = exports.Lexer = void 0;\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _ccitt_stream = __w_pdfjs_require__(158);\\n\\n      var _jbig2_stream = __w_pdfjs_require__(160);\\n\\n      var _jpeg_stream = __w_pdfjs_require__(163);\\n\\n      var _jpx_stream = __w_pdfjs_require__(165);\\n\\n      var MAX_LENGTH_TO_CACHE = 1000;\\n      var MAX_ADLER32_LENGTH = 5552;\\n\\n      function computeAdler32(bytes) {\\n        var bytesLength = bytes.length;\\n        var a = 1,\\n            b = 0;\\n\\n        for (var i = 0; i < bytesLength; ++i) {\\n          a += bytes[i] & 0xFF;\\n          b += a;\\n        }\\n\\n        return b % 65521 << 16 | a % 65521;\\n      }\\n\\n      var Parser = function ParserClosure() {\\n        function Parser(lexer, allowStreams, xref, recoveryMode) {\\n          this.lexer = lexer;\\n          this.allowStreams = allowStreams;\\n          this.xref = xref;\\n          this.recoveryMode = recoveryMode || false;\\n          this.imageCache = Object.create(null);\\n          this.refill();\\n        }\\n\\n        Parser.prototype = {\\n          refill: function Parser_refill() {\\n            this.buf1 = this.lexer.getObj();\\n            this.buf2 = this.lexer.getObj();\\n          },\\n          shift: function Parser_shift() {\\n            if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\\n              this.buf1 = this.buf2;\\n              this.buf2 = null;\\n            } else {\\n              this.buf1 = this.buf2;\\n              this.buf2 = this.lexer.getObj();\\n            }\\n          },\\n          tryShift: function Parser_tryShift() {\\n            try {\\n              this.shift();\\n              return true;\\n            } catch (e) {\\n              if (e instanceof _util.MissingDataException) {\\n                throw e;\\n              }\\n\\n              return false;\\n            }\\n          },\\n          getObj: function Parser_getObj(cipherTransform) {\\n            var buf1 = this.buf1;\\n            this.shift();\\n\\n            if (buf1 instanceof _primitives.Cmd) {\\n              switch (buf1.cmd) {\\n                case 'BI':\\n                  return this.makeInlineImage(cipherTransform);\\n\\n                case '[':\\n                  var array = [];\\n\\n                  while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\\n                    array.push(this.getObj(cipherTransform));\\n                  }\\n\\n                  if ((0, _primitives.isEOF)(this.buf1)) {\\n                    if (!this.recoveryMode) {\\n                      throw new _util.FormatError('End of file inside array');\\n                    }\\n\\n                    return array;\\n                  }\\n\\n                  this.shift();\\n                  return array;\\n\\n                case '<<':\\n                  var dict = new _primitives.Dict(this.xref);\\n\\n                  while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\\n                    if (!(0, _primitives.isName)(this.buf1)) {\\n                      (0, _util.info)('Malformed dictionary: key must be a name object');\\n                      this.shift();\\n                      continue;\\n                    }\\n\\n                    var key = this.buf1.name;\\n                    this.shift();\\n\\n                    if ((0, _primitives.isEOF)(this.buf1)) {\\n                      break;\\n                    }\\n\\n                    dict.set(key, this.getObj(cipherTransform));\\n                  }\\n\\n                  if ((0, _primitives.isEOF)(this.buf1)) {\\n                    if (!this.recoveryMode) {\\n                      throw new _util.FormatError('End of file inside dictionary');\\n                    }\\n\\n                    return dict;\\n                  }\\n\\n                  if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\\n                    return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\\n                  }\\n\\n                  this.shift();\\n                  return dict;\\n\\n                default:\\n                  return buf1;\\n              }\\n            }\\n\\n            if (Number.isInteger(buf1)) {\\n              var num = buf1;\\n\\n              if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\\n                var ref = new _primitives.Ref(num, this.buf1);\\n                this.shift();\\n                this.shift();\\n                return ref;\\n              }\\n\\n              return num;\\n            }\\n\\n            if ((0, _util.isString)(buf1)) {\\n              var str = buf1;\\n\\n              if (cipherTransform) {\\n                str = cipherTransform.decryptString(str);\\n              }\\n\\n              return str;\\n            }\\n\\n            return buf1;\\n          },\\n          findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\\n            var E = 0x45,\\n                I = 0x49,\\n                SPACE = 0x20,\\n                LF = 0xA,\\n                CR = 0xD;\\n            var n = 10,\\n                NUL = 0x0;\\n            var startPos = stream.pos,\\n                state = 0,\\n                ch,\\n                maybeEIPos;\\n\\n            while ((ch = stream.getByte()) !== -1) {\\n              if (state === 0) {\\n                state = ch === E ? 1 : 0;\\n              } else if (state === 1) {\\n                state = ch === I ? 2 : 0;\\n              } else {\\n                (0, _util.assert)(state === 2);\\n\\n                if (ch === SPACE || ch === LF || ch === CR) {\\n                  maybeEIPos = stream.pos;\\n                  var followingBytes = stream.peekBytes(n);\\n\\n                  for (var i = 0, ii = followingBytes.length; i < ii; i++) {\\n                    ch = followingBytes[i];\\n\\n                    if (ch === NUL && followingBytes[i + 1] !== NUL) {\\n                      continue;\\n                    }\\n\\n                    if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\\n                      state = 0;\\n                      break;\\n                    }\\n                  }\\n\\n                  if (state === 2) {\\n                    break;\\n                  }\\n                } else {\\n                  state = 0;\\n                }\\n              }\\n            }\\n\\n            if (ch === -1) {\\n              (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\\n\\n              if (maybeEIPos) {\\n                (0, _util.warn)('... trying to recover by using the last \\\"EI\\\" occurrence.');\\n                stream.skip(-(stream.pos - maybeEIPos));\\n              }\\n            }\\n\\n            var endOffset = 4;\\n            stream.skip(-endOffset);\\n            ch = stream.peekByte();\\n            stream.skip(endOffset);\\n\\n            if (!(0, _util.isSpace)(ch)) {\\n              endOffset--;\\n            }\\n\\n            return stream.pos - endOffset - startPos;\\n          },\\n          findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\\n            var startPos = stream.pos,\\n                foundEOI = false,\\n                b,\\n                markerLength,\\n                length;\\n\\n            while ((b = stream.getByte()) !== -1) {\\n              if (b !== 0xFF) {\\n                continue;\\n              }\\n\\n              switch (stream.getByte()) {\\n                case 0x00:\\n                  break;\\n\\n                case 0xFF:\\n                  stream.skip(-1);\\n                  break;\\n\\n                case 0xD9:\\n                  foundEOI = true;\\n                  break;\\n\\n                case 0xC0:\\n                case 0xC1:\\n                case 0xC2:\\n                case 0xC3:\\n                case 0xC5:\\n                case 0xC6:\\n                case 0xC7:\\n                case 0xC9:\\n                case 0xCA:\\n                case 0xCB:\\n                case 0xCD:\\n                case 0xCE:\\n                case 0xCF:\\n                case 0xC4:\\n                case 0xCC:\\n                case 0xDA:\\n                case 0xDB:\\n                case 0xDC:\\n                case 0xDD:\\n                case 0xDE:\\n                case 0xDF:\\n                case 0xE0:\\n                case 0xE1:\\n                case 0xE2:\\n                case 0xE3:\\n                case 0xE4:\\n                case 0xE5:\\n                case 0xE6:\\n                case 0xE7:\\n                case 0xE8:\\n                case 0xE9:\\n                case 0xEA:\\n                case 0xEB:\\n                case 0xEC:\\n                case 0xED:\\n                case 0xEE:\\n                case 0xEF:\\n                case 0xFE:\\n                  markerLength = stream.getUint16();\\n\\n                  if (markerLength > 2) {\\n                    stream.skip(markerLength - 2);\\n                  } else {\\n                    stream.skip(-2);\\n                  }\\n\\n                  break;\\n              }\\n\\n              if (foundEOI) {\\n                break;\\n              }\\n            }\\n\\n            length = stream.pos - startPos;\\n\\n            if (b === -1) {\\n              (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\\n              stream.skip(-length);\\n              return this.findDefaultInlineStreamEnd(stream);\\n            }\\n\\n            this.inlineStreamSkipEI(stream);\\n            return length;\\n          },\\n          findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\\n            var TILDE = 0x7E,\\n                GT = 0x3E;\\n            var startPos = stream.pos,\\n                ch,\\n                length;\\n\\n            while ((ch = stream.getByte()) !== -1) {\\n              if (ch === TILDE && stream.peekByte() === GT) {\\n                stream.skip();\\n                break;\\n              }\\n            }\\n\\n            length = stream.pos - startPos;\\n\\n            if (ch === -1) {\\n              (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\\n              stream.skip(-length);\\n              return this.findDefaultInlineStreamEnd(stream);\\n            }\\n\\n            this.inlineStreamSkipEI(stream);\\n            return length;\\n          },\\n          findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\\n            var GT = 0x3E;\\n            var startPos = stream.pos,\\n                ch,\\n                length;\\n\\n            while ((ch = stream.getByte()) !== -1) {\\n              if (ch === GT) {\\n                break;\\n              }\\n            }\\n\\n            length = stream.pos - startPos;\\n\\n            if (ch === -1) {\\n              (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\\n              stream.skip(-length);\\n              return this.findDefaultInlineStreamEnd(stream);\\n            }\\n\\n            this.inlineStreamSkipEI(stream);\\n            return length;\\n          },\\n          inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\\n            var E = 0x45,\\n                I = 0x49;\\n            var state = 0,\\n                ch;\\n\\n            while ((ch = stream.getByte()) !== -1) {\\n              if (state === 0) {\\n                state = ch === E ? 1 : 0;\\n              } else if (state === 1) {\\n                state = ch === I ? 2 : 0;\\n              } else if (state === 2) {\\n                break;\\n              }\\n            }\\n          },\\n          makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\\n            var lexer = this.lexer;\\n            var stream = lexer.stream;\\n            var dict = new _primitives.Dict(this.xref),\\n                dictLength;\\n\\n            while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\\n              if (!(0, _primitives.isName)(this.buf1)) {\\n                throw new _util.FormatError('Dictionary key must be a name object');\\n              }\\n\\n              var key = this.buf1.name;\\n              this.shift();\\n\\n              if ((0, _primitives.isEOF)(this.buf1)) {\\n                break;\\n              }\\n\\n              dict.set(key, this.getObj(cipherTransform));\\n            }\\n\\n            if (lexer.beginInlineImagePos !== -1) {\\n              dictLength = stream.pos - lexer.beginInlineImagePos;\\n            }\\n\\n            var filter = dict.get('Filter', 'F'),\\n                filterName;\\n\\n            if ((0, _primitives.isName)(filter)) {\\n              filterName = filter.name;\\n            } else if (Array.isArray(filter)) {\\n              var filterZero = this.xref.fetchIfRef(filter[0]);\\n\\n              if ((0, _primitives.isName)(filterZero)) {\\n                filterName = filterZero.name;\\n              }\\n            }\\n\\n            var startPos = stream.pos,\\n                length;\\n\\n            if (filterName === 'DCTDecode' || filterName === 'DCT') {\\n              length = this.findDCTDecodeInlineStreamEnd(stream);\\n            } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\\n              length = this.findASCII85DecodeInlineStreamEnd(stream);\\n            } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\\n              length = this.findASCIIHexDecodeInlineStreamEnd(stream);\\n            } else {\\n              length = this.findDefaultInlineStreamEnd(stream);\\n            }\\n\\n            var imageStream = stream.makeSubStream(startPos, length, dict);\\n            var cacheKey;\\n\\n            if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\\n              var imageBytes = imageStream.getBytes();\\n              imageStream.reset();\\n              var initialStreamPos = stream.pos;\\n              stream.pos = lexer.beginInlineImagePos;\\n              var dictBytes = stream.getBytes(dictLength);\\n              stream.pos = initialStreamPos;\\n              cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\\n              var cacheEntry = this.imageCache[cacheKey];\\n\\n              if (cacheEntry !== undefined) {\\n                this.buf2 = _primitives.Cmd.get('EI');\\n                this.shift();\\n                cacheEntry.reset();\\n                return cacheEntry;\\n              }\\n            }\\n\\n            if (cipherTransform) {\\n              imageStream = cipherTransform.createStream(imageStream, length);\\n            }\\n\\n            imageStream = this.filter(imageStream, dict, length);\\n            imageStream.dict = dict;\\n\\n            if (cacheKey !== undefined) {\\n              imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\\n              this.imageCache[cacheKey] = imageStream;\\n            }\\n\\n            this.buf2 = _primitives.Cmd.get('EI');\\n            this.shift();\\n            return imageStream;\\n          },\\n          _findStreamLength: function _findStreamLength(startPos, signature) {\\n            var stream = this.lexer.stream;\\n            stream.pos = startPos;\\n            var SCAN_BLOCK_LENGTH = 2048;\\n            var signatureLength = signature.length;\\n\\n            while (stream.pos < stream.end) {\\n              var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\\n              var scanLength = scanBytes.length - signatureLength;\\n\\n              if (scanLength <= 0) {\\n                break;\\n              }\\n\\n              var pos = 0;\\n\\n              while (pos < scanLength) {\\n                var j = 0;\\n\\n                while (j < signatureLength && scanBytes[pos + j] === signature[j]) {\\n                  j++;\\n                }\\n\\n                if (j >= signatureLength) {\\n                  stream.pos += pos;\\n                  return stream.pos - startPos;\\n                }\\n\\n                pos++;\\n              }\\n\\n              stream.pos += scanLength;\\n            }\\n\\n            return -1;\\n          },\\n          makeStream: function Parser_makeStream(dict, cipherTransform) {\\n            var lexer = this.lexer;\\n            var stream = lexer.stream;\\n            lexer.skipToNextLine();\\n            var startPos = stream.pos - 1;\\n            var length = dict.get('Length');\\n\\n            if (!Number.isInteger(length)) {\\n              (0, _util.info)('Bad ' + length + ' attribute in stream');\\n              length = 0;\\n            }\\n\\n            stream.pos = startPos + length;\\n            lexer.nextChar();\\n\\n            if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\\n              this.shift();\\n            } else {\\n              var ENDSTREAM_SIGNATURE = new Uint8Array([0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D]);\\n\\n              var actualLength = this._findStreamLength(startPos, ENDSTREAM_SIGNATURE);\\n\\n              if (actualLength < 0) {\\n                var MAX_TRUNCATION = 1;\\n\\n                for (var i = 1; i <= MAX_TRUNCATION; i++) {\\n                  var end = ENDSTREAM_SIGNATURE.length - i;\\n                  var TRUNCATED_SIGNATURE = ENDSTREAM_SIGNATURE.slice(0, end);\\n\\n                  var maybeLength = this._findStreamLength(startPos, TRUNCATED_SIGNATURE);\\n\\n                  if (maybeLength >= 0) {\\n                    var lastByte = stream.peekBytes(end + 1)[end];\\n\\n                    if (!(0, _util.isSpace)(lastByte)) {\\n                      break;\\n                    }\\n\\n                    (0, _util.info)(\\\"Found \\\\\\\"\\\".concat((0, _util.bytesToString)(TRUNCATED_SIGNATURE), \\\"\\\\\\\" when \\\") + 'searching for endstream command.');\\n                    actualLength = maybeLength;\\n                    break;\\n                  }\\n                }\\n\\n                if (actualLength < 0) {\\n                  throw new _util.FormatError('Missing endstream command.');\\n                }\\n              }\\n\\n              length = actualLength;\\n              lexer.nextChar();\\n              this.shift();\\n              this.shift();\\n            }\\n\\n            this.shift();\\n            stream = stream.makeSubStream(startPos, length, dict);\\n\\n            if (cipherTransform) {\\n              stream = cipherTransform.createStream(stream, length);\\n            }\\n\\n            stream = this.filter(stream, dict, length);\\n            stream.dict = dict;\\n            return stream;\\n          },\\n          filter: function Parser_filter(stream, dict, length) {\\n            var filter = dict.get('Filter', 'F');\\n            var params = dict.get('DecodeParms', 'DP');\\n\\n            if ((0, _primitives.isName)(filter)) {\\n              if (Array.isArray(params)) {\\n                (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\\n              }\\n\\n              return this.makeFilter(stream, filter.name, length, params);\\n            }\\n\\n            var maybeLength = length;\\n\\n            if (Array.isArray(filter)) {\\n              var filterArray = filter;\\n              var paramsArray = params;\\n\\n              for (var i = 0, ii = filterArray.length; i < ii; ++i) {\\n                filter = this.xref.fetchIfRef(filterArray[i]);\\n\\n                if (!(0, _primitives.isName)(filter)) {\\n                  throw new _util.FormatError('Bad filter name: ' + filter);\\n                }\\n\\n                params = null;\\n\\n                if (Array.isArray(paramsArray) && i in paramsArray) {\\n                  params = this.xref.fetchIfRef(paramsArray[i]);\\n                }\\n\\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\\n                maybeLength = null;\\n              }\\n            }\\n\\n            return stream;\\n          },\\n          makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\\n            if (maybeLength === 0) {\\n              (0, _util.warn)('Empty \\\"' + name + '\\\" stream.');\\n              return new _stream.NullStream();\\n            }\\n\\n            try {\\n              var xrefStreamStats = this.xref.stats.streamTypes;\\n\\n              if (name === 'FlateDecode' || name === 'Fl') {\\n                xrefStreamStats[_util.StreamType.FLATE] = true;\\n\\n                if (params) {\\n                  return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\\n                }\\n\\n                return new _stream.FlateStream(stream, maybeLength);\\n              }\\n\\n              if (name === 'LZWDecode' || name === 'LZW') {\\n                xrefStreamStats[_util.StreamType.LZW] = true;\\n                var earlyChange = 1;\\n\\n                if (params) {\\n                  if (params.has('EarlyChange')) {\\n                    earlyChange = params.get('EarlyChange');\\n                  }\\n\\n                  return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\\n                }\\n\\n                return new _stream.LZWStream(stream, maybeLength, earlyChange);\\n              }\\n\\n              if (name === 'DCTDecode' || name === 'DCT') {\\n                xrefStreamStats[_util.StreamType.DCT] = true;\\n                return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\\n              }\\n\\n              if (name === 'JPXDecode' || name === 'JPX') {\\n                xrefStreamStats[_util.StreamType.JPX] = true;\\n                return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\\n              }\\n\\n              if (name === 'ASCII85Decode' || name === 'A85') {\\n                xrefStreamStats[_util.StreamType.A85] = true;\\n                return new _stream.Ascii85Stream(stream, maybeLength);\\n              }\\n\\n              if (name === 'ASCIIHexDecode' || name === 'AHx') {\\n                xrefStreamStats[_util.StreamType.AHX] = true;\\n                return new _stream.AsciiHexStream(stream, maybeLength);\\n              }\\n\\n              if (name === 'CCITTFaxDecode' || name === 'CCF') {\\n                xrefStreamStats[_util.StreamType.CCF] = true;\\n                return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\\n              }\\n\\n              if (name === 'RunLengthDecode' || name === 'RL') {\\n                xrefStreamStats[_util.StreamType.RL] = true;\\n                return new _stream.RunLengthStream(stream, maybeLength);\\n              }\\n\\n              if (name === 'JBIG2Decode') {\\n                xrefStreamStats[_util.StreamType.JBIG] = true;\\n                return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\\n              }\\n\\n              (0, _util.warn)('filter \\\"' + name + '\\\" not supported yet');\\n              return stream;\\n            } catch (ex) {\\n              if (ex instanceof _util.MissingDataException) {\\n                throw ex;\\n              }\\n\\n              (0, _util.warn)('Invalid stream: \\\\\\\"' + ex + '\\\\\\\"');\\n              return new _stream.NullStream();\\n            }\\n          }\\n        };\\n        return Parser;\\n      }();\\n\\n      exports.Parser = Parser;\\n\\n      var Lexer = function LexerClosure() {\\n        function Lexer(stream, knownCommands) {\\n          this.stream = stream;\\n          this.nextChar();\\n          this.strBuf = [];\\n          this.knownCommands = knownCommands;\\n          this.beginInlineImagePos = -1;\\n        }\\n\\n        var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n\\n        function toHexDigit(ch) {\\n          if (ch >= 0x30 && ch <= 0x39) {\\n            return ch & 0x0F;\\n          }\\n\\n          if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\\n            return (ch & 0x0F) + 9;\\n          }\\n\\n          return -1;\\n        }\\n\\n        Lexer.prototype = {\\n          nextChar: function Lexer_nextChar() {\\n            return this.currentChar = this.stream.getByte();\\n          },\\n          peekChar: function Lexer_peekChar() {\\n            return this.stream.peekByte();\\n          },\\n          getNumber: function Lexer_getNumber() {\\n            var ch = this.currentChar;\\n            var eNotation = false;\\n            var divideBy = 0;\\n            var sign = 0;\\n\\n            if (ch === 0x2D) {\\n              sign = -1;\\n              ch = this.nextChar();\\n\\n              if (ch === 0x2D) {\\n                ch = this.nextChar();\\n              }\\n            } else if (ch === 0x2B) {\\n              sign = 1;\\n              ch = this.nextChar();\\n            }\\n\\n            if (ch === 0x0A || ch === 0x0D) {\\n              do {\\n                ch = this.nextChar();\\n              } while (ch === 0x0A || ch === 0x0D);\\n            }\\n\\n            if (ch === 0x2E) {\\n              divideBy = 10;\\n              ch = this.nextChar();\\n            }\\n\\n            if (ch < 0x30 || ch > 0x39) {\\n              if (divideBy === 10 && sign === 0 && ((0, _util.isSpace)(ch) || ch === -1)) {\\n                (0, _util.warn)('Lexer.getNumber - treating a single decimal point as zero.');\\n                return 0;\\n              }\\n\\n              throw new _util.FormatError(\\\"Invalid number: \\\".concat(String.fromCharCode(ch), \\\" (charCode \\\").concat(ch, \\\")\\\"));\\n            }\\n\\n            sign = sign || 1;\\n            var baseValue = ch - 0x30;\\n            var powerValue = 0;\\n            var powerValueSign = 1;\\n\\n            while ((ch = this.nextChar()) >= 0) {\\n              if (0x30 <= ch && ch <= 0x39) {\\n                var currentDigit = ch - 0x30;\\n\\n                if (eNotation) {\\n                  powerValue = powerValue * 10 + currentDigit;\\n                } else {\\n                  if (divideBy !== 0) {\\n                    divideBy *= 10;\\n                  }\\n\\n                  baseValue = baseValue * 10 + currentDigit;\\n                }\\n              } else if (ch === 0x2E) {\\n                if (divideBy === 0) {\\n                  divideBy = 1;\\n                } else {\\n                  break;\\n                }\\n              } else if (ch === 0x2D) {\\n                (0, _util.warn)('Badly formatted number');\\n              } else if (ch === 0x45 || ch === 0x65) {\\n                ch = this.peekChar();\\n\\n                if (ch === 0x2B || ch === 0x2D) {\\n                  powerValueSign = ch === 0x2D ? -1 : 1;\\n                  this.nextChar();\\n                } else if (ch < 0x30 || ch > 0x39) {\\n                  break;\\n                }\\n\\n                eNotation = true;\\n              } else {\\n                break;\\n              }\\n            }\\n\\n            if (divideBy !== 0) {\\n              baseValue /= divideBy;\\n            }\\n\\n            if (eNotation) {\\n              baseValue *= Math.pow(10, powerValueSign * powerValue);\\n            }\\n\\n            return sign * baseValue;\\n          },\\n          getString: function Lexer_getString() {\\n            var numParen = 1;\\n            var done = false;\\n            var strBuf = this.strBuf;\\n            strBuf.length = 0;\\n            var ch = this.nextChar();\\n\\n            while (true) {\\n              var charBuffered = false;\\n\\n              switch (ch | 0) {\\n                case -1:\\n                  (0, _util.warn)('Unterminated string');\\n                  done = true;\\n                  break;\\n\\n                case 0x28:\\n                  ++numParen;\\n                  strBuf.push('(');\\n                  break;\\n\\n                case 0x29:\\n                  if (--numParen === 0) {\\n                    this.nextChar();\\n                    done = true;\\n                  } else {\\n                    strBuf.push(')');\\n                  }\\n\\n                  break;\\n\\n                case 0x5C:\\n                  ch = this.nextChar();\\n\\n                  switch (ch) {\\n                    case -1:\\n                      (0, _util.warn)('Unterminated string');\\n                      done = true;\\n                      break;\\n\\n                    case 0x6E:\\n                      strBuf.push('\\\\n');\\n                      break;\\n\\n                    case 0x72:\\n                      strBuf.push('\\\\r');\\n                      break;\\n\\n                    case 0x74:\\n                      strBuf.push('\\\\t');\\n                      break;\\n\\n                    case 0x62:\\n                      strBuf.push('\\\\b');\\n                      break;\\n\\n                    case 0x66:\\n                      strBuf.push('\\\\f');\\n                      break;\\n\\n                    case 0x5C:\\n                    case 0x28:\\n                    case 0x29:\\n                      strBuf.push(String.fromCharCode(ch));\\n                      break;\\n\\n                    case 0x30:\\n                    case 0x31:\\n                    case 0x32:\\n                    case 0x33:\\n                    case 0x34:\\n                    case 0x35:\\n                    case 0x36:\\n                    case 0x37:\\n                      var x = ch & 0x0F;\\n                      ch = this.nextChar();\\n                      charBuffered = true;\\n\\n                      if (ch >= 0x30 && ch <= 0x37) {\\n                        x = (x << 3) + (ch & 0x0F);\\n                        ch = this.nextChar();\\n\\n                        if (ch >= 0x30 && ch <= 0x37) {\\n                          charBuffered = false;\\n                          x = (x << 3) + (ch & 0x0F);\\n                        }\\n                      }\\n\\n                      strBuf.push(String.fromCharCode(x));\\n                      break;\\n\\n                    case 0x0D:\\n                      if (this.peekChar() === 0x0A) {\\n                        this.nextChar();\\n                      }\\n\\n                      break;\\n\\n                    case 0x0A:\\n                      break;\\n\\n                    default:\\n                      strBuf.push(String.fromCharCode(ch));\\n                      break;\\n                  }\\n\\n                  break;\\n\\n                default:\\n                  strBuf.push(String.fromCharCode(ch));\\n                  break;\\n              }\\n\\n              if (done) {\\n                break;\\n              }\\n\\n              if (!charBuffered) {\\n                ch = this.nextChar();\\n              }\\n            }\\n\\n            return strBuf.join('');\\n          },\\n          getName: function Lexer_getName() {\\n            var ch, previousCh;\\n            var strBuf = this.strBuf;\\n            strBuf.length = 0;\\n\\n            while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\\n              if (ch === 0x23) {\\n                ch = this.nextChar();\\n\\n                if (specialChars[ch]) {\\n                  (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\\n                  strBuf.push('#');\\n                  break;\\n                }\\n\\n                var x = toHexDigit(ch);\\n\\n                if (x !== -1) {\\n                  previousCh = ch;\\n                  ch = this.nextChar();\\n                  var x2 = toHexDigit(ch);\\n\\n                  if (x2 === -1) {\\n                    (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\\n                    strBuf.push('#', String.fromCharCode(previousCh));\\n\\n                    if (specialChars[ch]) {\\n                      break;\\n                    }\\n\\n                    strBuf.push(String.fromCharCode(ch));\\n                    continue;\\n                  }\\n\\n                  strBuf.push(String.fromCharCode(x << 4 | x2));\\n                } else {\\n                  strBuf.push('#', String.fromCharCode(ch));\\n                }\\n              } else {\\n                strBuf.push(String.fromCharCode(ch));\\n              }\\n            }\\n\\n            if (strBuf.length > 127) {\\n              (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\\n            }\\n\\n            return _primitives.Name.get(strBuf.join(''));\\n          },\\n          getHexString: function Lexer_getHexString() {\\n            var strBuf = this.strBuf;\\n            strBuf.length = 0;\\n            var ch = this.currentChar;\\n            var isFirstHex = true;\\n            var firstDigit;\\n            var secondDigit;\\n\\n            while (true) {\\n              if (ch < 0) {\\n                (0, _util.warn)('Unterminated hex string');\\n                break;\\n              } else if (ch === 0x3E) {\\n                this.nextChar();\\n                break;\\n              } else if (specialChars[ch] === 1) {\\n                ch = this.nextChar();\\n                continue;\\n              } else {\\n                if (isFirstHex) {\\n                  firstDigit = toHexDigit(ch);\\n\\n                  if (firstDigit === -1) {\\n                    (0, _util.warn)('Ignoring invalid character \\\"' + ch + '\\\" in hex string');\\n                    ch = this.nextChar();\\n                    continue;\\n                  }\\n                } else {\\n                  secondDigit = toHexDigit(ch);\\n\\n                  if (secondDigit === -1) {\\n                    (0, _util.warn)('Ignoring invalid character \\\"' + ch + '\\\" in hex string');\\n                    ch = this.nextChar();\\n                    continue;\\n                  }\\n\\n                  strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\\n                }\\n\\n                isFirstHex = !isFirstHex;\\n                ch = this.nextChar();\\n              }\\n            }\\n\\n            return strBuf.join('');\\n          },\\n          getObj: function Lexer_getObj() {\\n            var comment = false;\\n            var ch = this.currentChar;\\n\\n            while (true) {\\n              if (ch < 0) {\\n                return _primitives.EOF;\\n              }\\n\\n              if (comment) {\\n                if (ch === 0x0A || ch === 0x0D) {\\n                  comment = false;\\n                }\\n              } else if (ch === 0x25) {\\n                comment = true;\\n              } else if (specialChars[ch] !== 1) {\\n                break;\\n              }\\n\\n              ch = this.nextChar();\\n            }\\n\\n            switch (ch | 0) {\\n              case 0x30:\\n              case 0x31:\\n              case 0x32:\\n              case 0x33:\\n              case 0x34:\\n              case 0x35:\\n              case 0x36:\\n              case 0x37:\\n              case 0x38:\\n              case 0x39:\\n              case 0x2B:\\n              case 0x2D:\\n              case 0x2E:\\n                return this.getNumber();\\n\\n              case 0x28:\\n                return this.getString();\\n\\n              case 0x2F:\\n                return this.getName();\\n\\n              case 0x5B:\\n                this.nextChar();\\n                return _primitives.Cmd.get('[');\\n\\n              case 0x5D:\\n                this.nextChar();\\n                return _primitives.Cmd.get(']');\\n\\n              case 0x3C:\\n                ch = this.nextChar();\\n\\n                if (ch === 0x3C) {\\n                  this.nextChar();\\n                  return _primitives.Cmd.get('<<');\\n                }\\n\\n                return this.getHexString();\\n\\n              case 0x3E:\\n                ch = this.nextChar();\\n\\n                if (ch === 0x3E) {\\n                  this.nextChar();\\n                  return _primitives.Cmd.get('>>');\\n                }\\n\\n                return _primitives.Cmd.get('>');\\n\\n              case 0x7B:\\n                this.nextChar();\\n                return _primitives.Cmd.get('{');\\n\\n              case 0x7D:\\n                this.nextChar();\\n                return _primitives.Cmd.get('}');\\n\\n              case 0x29:\\n                this.nextChar();\\n                throw new _util.FormatError(\\\"Illegal character: \\\".concat(ch));\\n            }\\n\\n            var str = String.fromCharCode(ch);\\n            var knownCommands = this.knownCommands;\\n            var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\\n\\n            while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\\n              var possibleCommand = str + String.fromCharCode(ch);\\n\\n              if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\\n                break;\\n              }\\n\\n              if (str.length === 128) {\\n                throw new _util.FormatError(\\\"Command token too long: \\\".concat(str.length));\\n              }\\n\\n              str = possibleCommand;\\n              knownCommandFound = knownCommands && knownCommands[str] !== undefined;\\n            }\\n\\n            if (str === 'true') {\\n              return true;\\n            }\\n\\n            if (str === 'false') {\\n              return false;\\n            }\\n\\n            if (str === 'null') {\\n              return null;\\n            }\\n\\n            if (str === 'BI') {\\n              this.beginInlineImagePos = this.stream.pos;\\n            }\\n\\n            return _primitives.Cmd.get(str);\\n          },\\n          skipToNextLine: function Lexer_skipToNextLine() {\\n            var ch = this.currentChar;\\n\\n            while (ch >= 0) {\\n              if (ch === 0x0D) {\\n                ch = this.nextChar();\\n\\n                if (ch === 0x0A) {\\n                  this.nextChar();\\n                }\\n\\n                break;\\n              } else if (ch === 0x0A) {\\n                this.nextChar();\\n                break;\\n              }\\n\\n              ch = this.nextChar();\\n            }\\n          }\\n        };\\n        return Lexer;\\n      }();\\n\\n      exports.Lexer = Lexer;\\n      var Linearization = {\\n        create: function LinearizationCreate(stream) {\\n          function getInt(name, allowZeroValue) {\\n            var obj = linDict.get(name);\\n\\n            if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\\n              return obj;\\n            }\\n\\n            throw new Error('The \\\"' + name + '\\\" parameter in the linearization ' + 'dictionary is invalid.');\\n          }\\n\\n          function getHints() {\\n            var hints = linDict.get('H'),\\n                hintsLength,\\n                item;\\n\\n            if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\\n              for (var index = 0; index < hintsLength; index++) {\\n                if (!(Number.isInteger(item = hints[index]) && item > 0)) {\\n                  throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\\n                }\\n              }\\n\\n              return hints;\\n            }\\n\\n            throw new Error('Hint array in the linearization dictionary is invalid.');\\n          }\\n\\n          var parser = new Parser(new Lexer(stream), false, null);\\n          var obj1 = parser.getObj();\\n          var obj2 = parser.getObj();\\n          var obj3 = parser.getObj();\\n          var linDict = parser.getObj();\\n          var obj, length;\\n\\n          if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\\n            return null;\\n          } else if ((length = getInt('L')) !== stream.length) {\\n            throw new Error('The \\\"L\\\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\\n          }\\n\\n          return {\\n            length: length,\\n            hints: getHints(),\\n            objectNumberFirst: getInt('O'),\\n            endFirst: getInt('E'),\\n            numPages: getInt('N'),\\n            mainXRefEntriesOffset: getInt('T'),\\n            pageFirst: linDict.has('P') ? getInt('P', true) : 0\\n          };\\n        }\\n      };\\n      exports.Linearization = Linearization;\\n      /***/\\n    },\\n    /* 157 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      function _toConsumableArray(arr) {\\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\\n      }\\n\\n      function _nonIterableSpread() {\\n        throw new TypeError(\\\"Invalid attempt to spread non-iterable instance\\\");\\n      }\\n\\n      function _iterableToArray(iter) {\\n        if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \\\"[object Arguments]\\\") return Array.from(iter);\\n      }\\n\\n      function _arrayWithoutHoles(arr) {\\n        if (Array.isArray(arr)) {\\n          for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\\n            arr2[i] = arr[i];\\n          }\\n\\n          return arr2;\\n        }\\n      }\\n\\n      var Stream = function StreamClosure() {\\n        function Stream(arrayBuffer, start, length, dict) {\\n          this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\\n          this.start = start || 0;\\n          this.pos = this.start;\\n          this.end = start + length || this.bytes.length;\\n          this.dict = dict;\\n        }\\n\\n        Stream.prototype = {\\n          get length() {\\n            return this.end - this.start;\\n          },\\n\\n          get isEmpty() {\\n            return this.length === 0;\\n          },\\n\\n          getByte: function Stream_getByte() {\\n            if (this.pos >= this.end) {\\n              return -1;\\n            }\\n\\n            return this.bytes[this.pos++];\\n          },\\n          getUint16: function Stream_getUint16() {\\n            var b0 = this.getByte();\\n            var b1 = this.getByte();\\n\\n            if (b0 === -1 || b1 === -1) {\\n              return -1;\\n            }\\n\\n            return (b0 << 8) + b1;\\n          },\\n          getInt32: function Stream_getInt32() {\\n            var b0 = this.getByte();\\n            var b1 = this.getByte();\\n            var b2 = this.getByte();\\n            var b3 = this.getByte();\\n            return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n          },\\n          getBytes: function getBytes(length) {\\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n            var bytes = this.bytes;\\n            var pos = this.pos;\\n            var strEnd = this.end;\\n\\n            if (!length) {\\n              var _subarray = bytes.subarray(pos, strEnd);\\n\\n              return forceClamped ? new Uint8ClampedArray(_subarray) : _subarray;\\n            }\\n\\n            var end = pos + length;\\n\\n            if (end > strEnd) {\\n              end = strEnd;\\n            }\\n\\n            this.pos = end;\\n            var subarray = bytes.subarray(pos, end);\\n            return forceClamped ? new Uint8ClampedArray(subarray) : subarray;\\n          },\\n          peekByte: function Stream_peekByte() {\\n            var peekedByte = this.getByte();\\n            this.pos--;\\n            return peekedByte;\\n          },\\n          peekBytes: function peekBytes(length) {\\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n            var bytes = this.getBytes(length, forceClamped);\\n            this.pos -= bytes.length;\\n            return bytes;\\n          },\\n          skip: function Stream_skip(n) {\\n            if (!n) {\\n              n = 1;\\n            }\\n\\n            this.pos += n;\\n          },\\n          reset: function Stream_reset() {\\n            this.pos = this.start;\\n          },\\n          moveStart: function Stream_moveStart() {\\n            this.start = this.pos;\\n          },\\n          makeSubStream: function Stream_makeSubStream(start, length, dict) {\\n            return new Stream(this.bytes.buffer, start, length, dict);\\n          }\\n        };\\n        return Stream;\\n      }();\\n\\n      exports.Stream = Stream;\\n\\n      var StringStream = function StringStreamClosure() {\\n        function StringStream(str) {\\n          var bytes = (0, _util.stringToBytes)(str);\\n          Stream.call(this, bytes);\\n        }\\n\\n        StringStream.prototype = Stream.prototype;\\n        return StringStream;\\n      }();\\n\\n      exports.StringStream = StringStream;\\n\\n      var DecodeStream = function DecodeStreamClosure() {\\n        var emptyBuffer = new Uint8Array(0);\\n\\n        function DecodeStream(maybeMinBufferLength) {\\n          this._rawMinBufferLength = maybeMinBufferLength || 0;\\n          this.pos = 0;\\n          this.bufferLength = 0;\\n          this.eof = false;\\n          this.buffer = emptyBuffer;\\n          this.minBufferLength = 512;\\n\\n          if (maybeMinBufferLength) {\\n            while (this.minBufferLength < maybeMinBufferLength) {\\n              this.minBufferLength *= 2;\\n            }\\n          }\\n        }\\n\\n        DecodeStream.prototype = {\\n          get isEmpty() {\\n            while (!this.eof && this.bufferLength === 0) {\\n              this.readBlock();\\n            }\\n\\n            return this.bufferLength === 0;\\n          },\\n\\n          ensureBuffer: function DecodeStream_ensureBuffer(requested) {\\n            var buffer = this.buffer;\\n\\n            if (requested <= buffer.byteLength) {\\n              return buffer;\\n            }\\n\\n            var size = this.minBufferLength;\\n\\n            while (size < requested) {\\n              size *= 2;\\n            }\\n\\n            var buffer2 = new Uint8Array(size);\\n            buffer2.set(buffer);\\n            return this.buffer = buffer2;\\n          },\\n          getByte: function DecodeStream_getByte() {\\n            var pos = this.pos;\\n\\n            while (this.bufferLength <= pos) {\\n              if (this.eof) {\\n                return -1;\\n              }\\n\\n              this.readBlock();\\n            }\\n\\n            return this.buffer[this.pos++];\\n          },\\n          getUint16: function DecodeStream_getUint16() {\\n            var b0 = this.getByte();\\n            var b1 = this.getByte();\\n\\n            if (b0 === -1 || b1 === -1) {\\n              return -1;\\n            }\\n\\n            return (b0 << 8) + b1;\\n          },\\n          getInt32: function DecodeStream_getInt32() {\\n            var b0 = this.getByte();\\n            var b1 = this.getByte();\\n            var b2 = this.getByte();\\n            var b3 = this.getByte();\\n            return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n          },\\n          getBytes: function getBytes(length) {\\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n            var end,\\n                pos = this.pos;\\n\\n            if (length) {\\n              this.ensureBuffer(pos + length);\\n              end = pos + length;\\n\\n              while (!this.eof && this.bufferLength < end) {\\n                this.readBlock();\\n              }\\n\\n              var bufEnd = this.bufferLength;\\n\\n              if (end > bufEnd) {\\n                end = bufEnd;\\n              }\\n            } else {\\n              while (!this.eof) {\\n                this.readBlock();\\n              }\\n\\n              end = this.bufferLength;\\n            }\\n\\n            this.pos = end;\\n            var subarray = this.buffer.subarray(pos, end);\\n            return forceClamped && !(subarray instanceof Uint8ClampedArray) ? new Uint8ClampedArray(subarray) : subarray;\\n          },\\n          peekByte: function DecodeStream_peekByte() {\\n            var peekedByte = this.getByte();\\n            this.pos--;\\n            return peekedByte;\\n          },\\n          peekBytes: function peekBytes(length) {\\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n            var bytes = this.getBytes(length, forceClamped);\\n            this.pos -= bytes.length;\\n            return bytes;\\n          },\\n          makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\\n            var end = start + length;\\n\\n            while (this.bufferLength <= end && !this.eof) {\\n              this.readBlock();\\n            }\\n\\n            return new Stream(this.buffer, start, length, dict);\\n          },\\n          skip: function DecodeStream_skip(n) {\\n            if (!n) {\\n              n = 1;\\n            }\\n\\n            this.pos += n;\\n          },\\n          reset: function DecodeStream_reset() {\\n            this.pos = 0;\\n          },\\n          getBaseStreams: function DecodeStream_getBaseStreams() {\\n            if (this.str && this.str.getBaseStreams) {\\n              return this.str.getBaseStreams();\\n            }\\n\\n            return [];\\n          }\\n        };\\n        return DecodeStream;\\n      }();\\n\\n      exports.DecodeStream = DecodeStream;\\n\\n      var StreamsSequenceStream = function StreamsSequenceStreamClosure() {\\n        function StreamsSequenceStream(streams) {\\n          this.streams = streams;\\n          var maybeLength = 0;\\n\\n          for (var i = 0, ii = streams.length; i < ii; i++) {\\n            var stream = streams[i];\\n\\n            if (stream instanceof DecodeStream) {\\n              maybeLength += stream._rawMinBufferLength;\\n            } else {\\n              maybeLength += stream.length;\\n            }\\n          }\\n\\n          DecodeStream.call(this, maybeLength);\\n        }\\n\\n        StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\\n\\n        StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\\n          var streams = this.streams;\\n\\n          if (streams.length === 0) {\\n            this.eof = true;\\n            return;\\n          }\\n\\n          var stream = streams.shift();\\n          var chunk = stream.getBytes();\\n          var bufferLength = this.bufferLength;\\n          var newLength = bufferLength + chunk.length;\\n          var buffer = this.ensureBuffer(newLength);\\n          buffer.set(chunk, bufferLength);\\n          this.bufferLength = newLength;\\n        };\\n\\n        StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\\n          var baseStreams = [];\\n\\n          for (var i = 0, ii = this.streams.length; i < ii; i++) {\\n            var stream = this.streams[i];\\n\\n            if (stream.getBaseStreams) {\\n              baseStreams.push.apply(baseStreams, _toConsumableArray(stream.getBaseStreams()));\\n            }\\n          }\\n\\n          return baseStreams;\\n        };\\n\\n        return StreamsSequenceStream;\\n      }();\\n\\n      exports.StreamsSequenceStream = StreamsSequenceStream;\\n\\n      var FlateStream = function FlateStreamClosure() {\\n        var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\\n        var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\\n        var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\\n        var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\\n        var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\\n\\n        function FlateStream(str, maybeLength) {\\n          this.str = str;\\n          this.dict = str.dict;\\n          var cmf = str.getByte();\\n          var flg = str.getByte();\\n\\n          if (cmf === -1 || flg === -1) {\\n            throw new _util.FormatError(\\\"Invalid header in flate stream: \\\".concat(cmf, \\\", \\\").concat(flg));\\n          }\\n\\n          if ((cmf & 0x0f) !== 0x08) {\\n            throw new _util.FormatError(\\\"Unknown compression method in flate stream: \\\".concat(cmf, \\\", \\\").concat(flg));\\n          }\\n\\n          if (((cmf << 8) + flg) % 31 !== 0) {\\n            throw new _util.FormatError(\\\"Bad FCHECK in flate stream: \\\".concat(cmf, \\\", \\\").concat(flg));\\n          }\\n\\n          if (flg & 0x20) {\\n            throw new _util.FormatError(\\\"FDICT bit set in flate stream: \\\".concat(cmf, \\\", \\\").concat(flg));\\n          }\\n\\n          this.codeSize = 0;\\n          this.codeBuf = 0;\\n          DecodeStream.call(this, maybeLength);\\n        }\\n\\n        FlateStream.prototype = Object.create(DecodeStream.prototype);\\n\\n        FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\\n          var str = this.str;\\n          var codeSize = this.codeSize;\\n          var codeBuf = this.codeBuf;\\n          var b;\\n\\n          while (codeSize < bits) {\\n            if ((b = str.getByte()) === -1) {\\n              throw new _util.FormatError('Bad encoding in flate stream');\\n            }\\n\\n            codeBuf |= b << codeSize;\\n            codeSize += 8;\\n          }\\n\\n          b = codeBuf & (1 << bits) - 1;\\n          this.codeBuf = codeBuf >> bits;\\n          this.codeSize = codeSize -= bits;\\n          return b;\\n        };\\n\\n        FlateStream.prototype.getCode = function FlateStream_getCode(table) {\\n          var str = this.str;\\n          var codes = table[0];\\n          var maxLen = table[1];\\n          var codeSize = this.codeSize;\\n          var codeBuf = this.codeBuf;\\n          var b;\\n\\n          while (codeSize < maxLen) {\\n            if ((b = str.getByte()) === -1) {\\n              break;\\n            }\\n\\n            codeBuf |= b << codeSize;\\n            codeSize += 8;\\n          }\\n\\n          var code = codes[codeBuf & (1 << maxLen) - 1];\\n          var codeLen = code >> 16;\\n          var codeVal = code & 0xffff;\\n\\n          if (codeLen < 1 || codeSize < codeLen) {\\n            throw new _util.FormatError('Bad encoding in flate stream');\\n          }\\n\\n          this.codeBuf = codeBuf >> codeLen;\\n          this.codeSize = codeSize - codeLen;\\n          return codeVal;\\n        };\\n\\n        FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\\n          var n = lengths.length;\\n          var maxLen = 0;\\n          var i;\\n\\n          for (i = 0; i < n; ++i) {\\n            if (lengths[i] > maxLen) {\\n              maxLen = lengths[i];\\n            }\\n          }\\n\\n          var size = 1 << maxLen;\\n          var codes = new Int32Array(size);\\n\\n          for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\\n            for (var val = 0; val < n; ++val) {\\n              if (lengths[val] === len) {\\n                var code2 = 0;\\n                var t = code;\\n\\n                for (i = 0; i < len; ++i) {\\n                  code2 = code2 << 1 | t & 1;\\n                  t >>= 1;\\n                }\\n\\n                for (i = code2; i < size; i += skip) {\\n                  codes[i] = len << 16 | val;\\n                }\\n\\n                ++code;\\n              }\\n            }\\n          }\\n\\n          return [codes, maxLen];\\n        };\\n\\n        FlateStream.prototype.readBlock = function FlateStream_readBlock() {\\n          var buffer, len;\\n          var str = this.str;\\n          var hdr = this.getBits(3);\\n\\n          if (hdr & 1) {\\n            this.eof = true;\\n          }\\n\\n          hdr >>= 1;\\n\\n          if (hdr === 0) {\\n            var b;\\n\\n            if ((b = str.getByte()) === -1) {\\n              throw new _util.FormatError('Bad block header in flate stream');\\n            }\\n\\n            var blockLen = b;\\n\\n            if ((b = str.getByte()) === -1) {\\n              throw new _util.FormatError('Bad block header in flate stream');\\n            }\\n\\n            blockLen |= b << 8;\\n\\n            if ((b = str.getByte()) === -1) {\\n              throw new _util.FormatError('Bad block header in flate stream');\\n            }\\n\\n            var check = b;\\n\\n            if ((b = str.getByte()) === -1) {\\n              throw new _util.FormatError('Bad block header in flate stream');\\n            }\\n\\n            check |= b << 8;\\n\\n            if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\\n              throw new _util.FormatError('Bad uncompressed block length in flate stream');\\n            }\\n\\n            this.codeBuf = 0;\\n            this.codeSize = 0;\\n            var bufferLength = this.bufferLength;\\n            buffer = this.ensureBuffer(bufferLength + blockLen);\\n            var end = bufferLength + blockLen;\\n            this.bufferLength = end;\\n\\n            if (blockLen === 0) {\\n              if (str.peekByte() === -1) {\\n                this.eof = true;\\n              }\\n            } else {\\n              for (var n = bufferLength; n < end; ++n) {\\n                if ((b = str.getByte()) === -1) {\\n                  this.eof = true;\\n                  break;\\n                }\\n\\n                buffer[n] = b;\\n              }\\n            }\\n\\n            return;\\n          }\\n\\n          var litCodeTable;\\n          var distCodeTable;\\n\\n          if (hdr === 1) {\\n            litCodeTable = fixedLitCodeTab;\\n            distCodeTable = fixedDistCodeTab;\\n          } else if (hdr === 2) {\\n            var numLitCodes = this.getBits(5) + 257;\\n            var numDistCodes = this.getBits(5) + 1;\\n            var numCodeLenCodes = this.getBits(4) + 4;\\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\\n            var i;\\n\\n            for (i = 0; i < numCodeLenCodes; ++i) {\\n              codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\\n            }\\n\\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\\n            len = 0;\\n            i = 0;\\n            var codes = numLitCodes + numDistCodes;\\n            var codeLengths = new Uint8Array(codes);\\n            var bitsLength, bitsOffset, what;\\n\\n            while (i < codes) {\\n              var code = this.getCode(codeLenCodeTab);\\n\\n              if (code === 16) {\\n                bitsLength = 2;\\n                bitsOffset = 3;\\n                what = len;\\n              } else if (code === 17) {\\n                bitsLength = 3;\\n                bitsOffset = 3;\\n                what = len = 0;\\n              } else if (code === 18) {\\n                bitsLength = 7;\\n                bitsOffset = 11;\\n                what = len = 0;\\n              } else {\\n                codeLengths[i++] = len = code;\\n                continue;\\n              }\\n\\n              var repeatLength = this.getBits(bitsLength) + bitsOffset;\\n\\n              while (repeatLength-- > 0) {\\n                codeLengths[i++] = what;\\n              }\\n            }\\n\\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\\n          } else {\\n            throw new _util.FormatError('Unknown block type in flate stream');\\n          }\\n\\n          buffer = this.buffer;\\n          var limit = buffer ? buffer.length : 0;\\n          var pos = this.bufferLength;\\n\\n          while (true) {\\n            var code1 = this.getCode(litCodeTable);\\n\\n            if (code1 < 256) {\\n              if (pos + 1 >= limit) {\\n                buffer = this.ensureBuffer(pos + 1);\\n                limit = buffer.length;\\n              }\\n\\n              buffer[pos++] = code1;\\n              continue;\\n            }\\n\\n            if (code1 === 256) {\\n              this.bufferLength = pos;\\n              return;\\n            }\\n\\n            code1 -= 257;\\n            code1 = lengthDecode[code1];\\n            var code2 = code1 >> 16;\\n\\n            if (code2 > 0) {\\n              code2 = this.getBits(code2);\\n            }\\n\\n            len = (code1 & 0xffff) + code2;\\n            code1 = this.getCode(distCodeTable);\\n            code1 = distDecode[code1];\\n            code2 = code1 >> 16;\\n\\n            if (code2 > 0) {\\n              code2 = this.getBits(code2);\\n            }\\n\\n            var dist = (code1 & 0xffff) + code2;\\n\\n            if (pos + len >= limit) {\\n              buffer = this.ensureBuffer(pos + len);\\n              limit = buffer.length;\\n            }\\n\\n            for (var k = 0; k < len; ++k, ++pos) {\\n              buffer[pos] = buffer[pos - dist];\\n            }\\n          }\\n        };\\n\\n        return FlateStream;\\n      }();\\n\\n      exports.FlateStream = FlateStream;\\n\\n      var PredictorStream = function PredictorStreamClosure() {\\n        function PredictorStream(str, maybeLength, params) {\\n          if (!(0, _primitives.isDict)(params)) {\\n            return str;\\n          }\\n\\n          var predictor = this.predictor = params.get('Predictor') || 1;\\n\\n          if (predictor <= 1) {\\n            return str;\\n          }\\n\\n          if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\\n            throw new _util.FormatError(\\\"Unsupported predictor: \\\".concat(predictor));\\n          }\\n\\n          if (predictor === 2) {\\n            this.readBlock = this.readBlockTiff;\\n          } else {\\n            this.readBlock = this.readBlockPng;\\n          }\\n\\n          this.str = str;\\n          this.dict = str.dict;\\n          var colors = this.colors = params.get('Colors') || 1;\\n          var bits = this.bits = params.get('BitsPerComponent') || 8;\\n          var columns = this.columns = params.get('Columns') || 1;\\n          this.pixBytes = colors * bits + 7 >> 3;\\n          this.rowBytes = columns * colors * bits + 7 >> 3;\\n          DecodeStream.call(this, maybeLength);\\n          return this;\\n        }\\n\\n        PredictorStream.prototype = Object.create(DecodeStream.prototype);\\n\\n        PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\\n          var rowBytes = this.rowBytes;\\n          var bufferLength = this.bufferLength;\\n          var buffer = this.ensureBuffer(bufferLength + rowBytes);\\n          var bits = this.bits;\\n          var colors = this.colors;\\n          var rawBytes = this.str.getBytes(rowBytes);\\n          this.eof = !rawBytes.length;\\n\\n          if (this.eof) {\\n            return;\\n          }\\n\\n          var inbuf = 0,\\n              outbuf = 0;\\n          var inbits = 0,\\n              outbits = 0;\\n          var pos = bufferLength;\\n          var i;\\n\\n          if (bits === 1 && colors === 1) {\\n            for (i = 0; i < rowBytes; ++i) {\\n              var c = rawBytes[i] ^ inbuf;\\n              c ^= c >> 1;\\n              c ^= c >> 2;\\n              c ^= c >> 4;\\n              inbuf = (c & 1) << 7;\\n              buffer[pos++] = c;\\n            }\\n          } else if (bits === 8) {\\n            for (i = 0; i < colors; ++i) {\\n              buffer[pos++] = rawBytes[i];\\n            }\\n\\n            for (; i < rowBytes; ++i) {\\n              buffer[pos] = buffer[pos - colors] + rawBytes[i];\\n              pos++;\\n            }\\n          } else if (bits === 16) {\\n            var bytesPerPixel = colors * 2;\\n\\n            for (i = 0; i < bytesPerPixel; ++i) {\\n              buffer[pos++] = rawBytes[i];\\n            }\\n\\n            for (; i < rowBytes; i += 2) {\\n              var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\\n              buffer[pos++] = sum >> 8 & 0xFF;\\n              buffer[pos++] = sum & 0xFF;\\n            }\\n          } else {\\n            var compArray = new Uint8Array(colors + 1);\\n            var bitMask = (1 << bits) - 1;\\n            var j = 0,\\n                k = bufferLength;\\n            var columns = this.columns;\\n\\n            for (i = 0; i < columns; ++i) {\\n              for (var kk = 0; kk < colors; ++kk) {\\n                if (inbits < bits) {\\n                  inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\\n                  inbits += 8;\\n                }\\n\\n                compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\\n                inbits -= bits;\\n                outbuf = outbuf << bits | compArray[kk];\\n                outbits += bits;\\n\\n                if (outbits >= 8) {\\n                  buffer[k++] = outbuf >> outbits - 8 & 0xFF;\\n                  outbits -= 8;\\n                }\\n              }\\n            }\\n\\n            if (outbits > 0) {\\n              buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\\n            }\\n          }\\n\\n          this.bufferLength += rowBytes;\\n        };\\n\\n        PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\\n          var rowBytes = this.rowBytes;\\n          var pixBytes = this.pixBytes;\\n          var predictor = this.str.getByte();\\n          var rawBytes = this.str.getBytes(rowBytes);\\n          this.eof = !rawBytes.length;\\n\\n          if (this.eof) {\\n            return;\\n          }\\n\\n          var bufferLength = this.bufferLength;\\n          var buffer = this.ensureBuffer(bufferLength + rowBytes);\\n          var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\\n\\n          if (prevRow.length === 0) {\\n            prevRow = new Uint8Array(rowBytes);\\n          }\\n\\n          var i,\\n              j = bufferLength,\\n              up,\\n              c;\\n\\n          switch (predictor) {\\n            case 0:\\n              for (i = 0; i < rowBytes; ++i) {\\n                buffer[j++] = rawBytes[i];\\n              }\\n\\n              break;\\n\\n            case 1:\\n              for (i = 0; i < pixBytes; ++i) {\\n                buffer[j++] = rawBytes[i];\\n              }\\n\\n              for (; i < rowBytes; ++i) {\\n                buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\\n                j++;\\n              }\\n\\n              break;\\n\\n            case 2:\\n              for (i = 0; i < rowBytes; ++i) {\\n                buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\\n              }\\n\\n              break;\\n\\n            case 3:\\n              for (i = 0; i < pixBytes; ++i) {\\n                buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\\n              }\\n\\n              for (; i < rowBytes; ++i) {\\n                buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\\n                j++;\\n              }\\n\\n              break;\\n\\n            case 4:\\n              for (i = 0; i < pixBytes; ++i) {\\n                up = prevRow[i];\\n                c = rawBytes[i];\\n                buffer[j++] = up + c;\\n              }\\n\\n              for (; i < rowBytes; ++i) {\\n                up = prevRow[i];\\n                var upLeft = prevRow[i - pixBytes];\\n                var left = buffer[j - pixBytes];\\n                var p = left + up - upLeft;\\n                var pa = p - left;\\n\\n                if (pa < 0) {\\n                  pa = -pa;\\n                }\\n\\n                var pb = p - up;\\n\\n                if (pb < 0) {\\n                  pb = -pb;\\n                }\\n\\n                var pc = p - upLeft;\\n\\n                if (pc < 0) {\\n                  pc = -pc;\\n                }\\n\\n                c = rawBytes[i];\\n\\n                if (pa <= pb && pa <= pc) {\\n                  buffer[j++] = left + c;\\n                } else if (pb <= pc) {\\n                  buffer[j++] = up + c;\\n                } else {\\n                  buffer[j++] = upLeft + c;\\n                }\\n              }\\n\\n              break;\\n\\n            default:\\n              throw new _util.FormatError(\\\"Unsupported predictor: \\\".concat(predictor));\\n          }\\n\\n          this.bufferLength += rowBytes;\\n        };\\n\\n        return PredictorStream;\\n      }();\\n\\n      exports.PredictorStream = PredictorStream;\\n\\n      var DecryptStream = function DecryptStreamClosure() {\\n        function DecryptStream(str, maybeLength, decrypt) {\\n          this.str = str;\\n          this.dict = str.dict;\\n          this.decrypt = decrypt;\\n          this.nextChunk = null;\\n          this.initialized = false;\\n          DecodeStream.call(this, maybeLength);\\n        }\\n\\n        var chunkSize = 512;\\n        DecryptStream.prototype = Object.create(DecodeStream.prototype);\\n\\n        DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\\n          var chunk;\\n\\n          if (this.initialized) {\\n            chunk = this.nextChunk;\\n          } else {\\n            chunk = this.str.getBytes(chunkSize);\\n            this.initialized = true;\\n          }\\n\\n          if (!chunk || chunk.length === 0) {\\n            this.eof = true;\\n            return;\\n          }\\n\\n          this.nextChunk = this.str.getBytes(chunkSize);\\n          var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\\n          var decrypt = this.decrypt;\\n          chunk = decrypt(chunk, !hasMoreData);\\n          var bufferLength = this.bufferLength;\\n          var i,\\n              n = chunk.length;\\n          var buffer = this.ensureBuffer(bufferLength + n);\\n\\n          for (i = 0; i < n; i++) {\\n            buffer[bufferLength++] = chunk[i];\\n          }\\n\\n          this.bufferLength = bufferLength;\\n        };\\n\\n        return DecryptStream;\\n      }();\\n\\n      exports.DecryptStream = DecryptStream;\\n\\n      var Ascii85Stream = function Ascii85StreamClosure() {\\n        function Ascii85Stream(str, maybeLength) {\\n          this.str = str;\\n          this.dict = str.dict;\\n          this.input = new Uint8Array(5);\\n\\n          if (maybeLength) {\\n            maybeLength = 0.8 * maybeLength;\\n          }\\n\\n          DecodeStream.call(this, maybeLength);\\n        }\\n\\n        Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\\n\\n        Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\\n          var TILDA_CHAR = 0x7E;\\n          var Z_LOWER_CHAR = 0x7A;\\n          var EOF = -1;\\n          var str = this.str;\\n          var c = str.getByte();\\n\\n          while ((0, _util.isSpace)(c)) {\\n            c = str.getByte();\\n          }\\n\\n          if (c === EOF || c === TILDA_CHAR) {\\n            this.eof = true;\\n            return;\\n          }\\n\\n          var bufferLength = this.bufferLength,\\n              buffer;\\n          var i;\\n\\n          if (c === Z_LOWER_CHAR) {\\n            buffer = this.ensureBuffer(bufferLength + 4);\\n\\n            for (i = 0; i < 4; ++i) {\\n              buffer[bufferLength + i] = 0;\\n            }\\n\\n            this.bufferLength += 4;\\n          } else {\\n            var input = this.input;\\n            input[0] = c;\\n\\n            for (i = 1; i < 5; ++i) {\\n              c = str.getByte();\\n\\n              while ((0, _util.isSpace)(c)) {\\n                c = str.getByte();\\n              }\\n\\n              input[i] = c;\\n\\n              if (c === EOF || c === TILDA_CHAR) {\\n                break;\\n              }\\n            }\\n\\n            buffer = this.ensureBuffer(bufferLength + i - 1);\\n            this.bufferLength += i - 1;\\n\\n            if (i < 5) {\\n              for (; i < 5; ++i) {\\n                input[i] = 0x21 + 84;\\n              }\\n\\n              this.eof = true;\\n            }\\n\\n            var t = 0;\\n\\n            for (i = 0; i < 5; ++i) {\\n              t = t * 85 + (input[i] - 0x21);\\n            }\\n\\n            for (i = 3; i >= 0; --i) {\\n              buffer[bufferLength + i] = t & 0xFF;\\n              t >>= 8;\\n            }\\n          }\\n        };\\n\\n        return Ascii85Stream;\\n      }();\\n\\n      exports.Ascii85Stream = Ascii85Stream;\\n\\n      var AsciiHexStream = function AsciiHexStreamClosure() {\\n        function AsciiHexStream(str, maybeLength) {\\n          this.str = str;\\n          this.dict = str.dict;\\n          this.firstDigit = -1;\\n\\n          if (maybeLength) {\\n            maybeLength = 0.5 * maybeLength;\\n          }\\n\\n          DecodeStream.call(this, maybeLength);\\n        }\\n\\n        AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\\n\\n        AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\\n          var UPSTREAM_BLOCK_SIZE = 8000;\\n          var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\\n\\n          if (!bytes.length) {\\n            this.eof = true;\\n            return;\\n          }\\n\\n          var maxDecodeLength = bytes.length + 1 >> 1;\\n          var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\\n          var bufferLength = this.bufferLength;\\n          var firstDigit = this.firstDigit;\\n\\n          for (var i = 0, ii = bytes.length; i < ii; i++) {\\n            var ch = bytes[i],\\n                digit;\\n\\n            if (ch >= 0x30 && ch <= 0x39) {\\n              digit = ch & 0x0F;\\n            } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\\n              digit = (ch & 0x0F) + 9;\\n            } else if (ch === 0x3E) {\\n              this.eof = true;\\n              break;\\n            } else {\\n              continue;\\n            }\\n\\n            if (firstDigit < 0) {\\n              firstDigit = digit;\\n            } else {\\n              buffer[bufferLength++] = firstDigit << 4 | digit;\\n              firstDigit = -1;\\n            }\\n          }\\n\\n          if (firstDigit >= 0 && this.eof) {\\n            buffer[bufferLength++] = firstDigit << 4;\\n            firstDigit = -1;\\n          }\\n\\n          this.firstDigit = firstDigit;\\n          this.bufferLength = bufferLength;\\n        };\\n\\n        return AsciiHexStream;\\n      }();\\n\\n      exports.AsciiHexStream = AsciiHexStream;\\n\\n      var RunLengthStream = function RunLengthStreamClosure() {\\n        function RunLengthStream(str, maybeLength) {\\n          this.str = str;\\n          this.dict = str.dict;\\n          DecodeStream.call(this, maybeLength);\\n        }\\n\\n        RunLengthStream.prototype = Object.create(DecodeStream.prototype);\\n\\n        RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\\n          var repeatHeader = this.str.getBytes(2);\\n\\n          if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\\n            this.eof = true;\\n            return;\\n          }\\n\\n          var buffer;\\n          var bufferLength = this.bufferLength;\\n          var n = repeatHeader[0];\\n\\n          if (n < 128) {\\n            buffer = this.ensureBuffer(bufferLength + n + 1);\\n            buffer[bufferLength++] = repeatHeader[1];\\n\\n            if (n > 0) {\\n              var source = this.str.getBytes(n);\\n              buffer.set(source, bufferLength);\\n              bufferLength += n;\\n            }\\n          } else {\\n            n = 257 - n;\\n            var b = repeatHeader[1];\\n            buffer = this.ensureBuffer(bufferLength + n + 1);\\n\\n            for (var i = 0; i < n; i++) {\\n              buffer[bufferLength++] = b;\\n            }\\n          }\\n\\n          this.bufferLength = bufferLength;\\n        };\\n\\n        return RunLengthStream;\\n      }();\\n\\n      exports.RunLengthStream = RunLengthStream;\\n\\n      var LZWStream = function LZWStreamClosure() {\\n        function LZWStream(str, maybeLength, earlyChange) {\\n          this.str = str;\\n          this.dict = str.dict;\\n          this.cachedData = 0;\\n          this.bitsCached = 0;\\n          var maxLzwDictionarySize = 4096;\\n          var lzwState = {\\n            earlyChange: earlyChange,\\n            codeLength: 9,\\n            nextCode: 258,\\n            dictionaryValues: new Uint8Array(maxLzwDictionarySize),\\n            dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\\n            dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\\n            currentSequence: new Uint8Array(maxLzwDictionarySize),\\n            currentSequenceLength: 0\\n          };\\n\\n          for (var i = 0; i < 256; ++i) {\\n            lzwState.dictionaryValues[i] = i;\\n            lzwState.dictionaryLengths[i] = 1;\\n          }\\n\\n          this.lzwState = lzwState;\\n          DecodeStream.call(this, maybeLength);\\n        }\\n\\n        LZWStream.prototype = Object.create(DecodeStream.prototype);\\n\\n        LZWStream.prototype.readBits = function LZWStream_readBits(n) {\\n          var bitsCached = this.bitsCached;\\n          var cachedData = this.cachedData;\\n\\n          while (bitsCached < n) {\\n            var c = this.str.getByte();\\n\\n            if (c === -1) {\\n              this.eof = true;\\n              return null;\\n            }\\n\\n            cachedData = cachedData << 8 | c;\\n            bitsCached += 8;\\n          }\\n\\n          this.bitsCached = bitsCached -= n;\\n          this.cachedData = cachedData;\\n          this.lastCode = null;\\n          return cachedData >>> bitsCached & (1 << n) - 1;\\n        };\\n\\n        LZWStream.prototype.readBlock = function LZWStream_readBlock() {\\n          var blockSize = 512;\\n          var estimatedDecodedSize = blockSize * 2,\\n              decodedSizeDelta = blockSize;\\n          var i, j, q;\\n          var lzwState = this.lzwState;\\n\\n          if (!lzwState) {\\n            return;\\n          }\\n\\n          var earlyChange = lzwState.earlyChange;\\n          var nextCode = lzwState.nextCode;\\n          var dictionaryValues = lzwState.dictionaryValues;\\n          var dictionaryLengths = lzwState.dictionaryLengths;\\n          var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\\n          var codeLength = lzwState.codeLength;\\n          var prevCode = lzwState.prevCode;\\n          var currentSequence = lzwState.currentSequence;\\n          var currentSequenceLength = lzwState.currentSequenceLength;\\n          var decodedLength = 0;\\n          var currentBufferLength = this.bufferLength;\\n          var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\\n\\n          for (i = 0; i < blockSize; i++) {\\n            var code = this.readBits(codeLength);\\n            var hasPrev = currentSequenceLength > 0;\\n\\n            if (code < 256) {\\n              currentSequence[0] = code;\\n              currentSequenceLength = 1;\\n            } else if (code >= 258) {\\n              if (code < nextCode) {\\n                currentSequenceLength = dictionaryLengths[code];\\n\\n                for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\\n                  currentSequence[j] = dictionaryValues[q];\\n                  q = dictionaryPrevCodes[q];\\n                }\\n              } else {\\n                currentSequence[currentSequenceLength++] = currentSequence[0];\\n              }\\n            } else if (code === 256) {\\n              codeLength = 9;\\n              nextCode = 258;\\n              currentSequenceLength = 0;\\n              continue;\\n            } else {\\n              this.eof = true;\\n              delete this.lzwState;\\n              break;\\n            }\\n\\n            if (hasPrev) {\\n              dictionaryPrevCodes[nextCode] = prevCode;\\n              dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\\n              dictionaryValues[nextCode] = currentSequence[0];\\n              nextCode++;\\n              codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\\n            }\\n\\n            prevCode = code;\\n            decodedLength += currentSequenceLength;\\n\\n            if (estimatedDecodedSize < decodedLength) {\\n              do {\\n                estimatedDecodedSize += decodedSizeDelta;\\n              } while (estimatedDecodedSize < decodedLength);\\n\\n              buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\\n            }\\n\\n            for (j = 0; j < currentSequenceLength; j++) {\\n              buffer[currentBufferLength++] = currentSequence[j];\\n            }\\n          }\\n\\n          lzwState.nextCode = nextCode;\\n          lzwState.codeLength = codeLength;\\n          lzwState.prevCode = prevCode;\\n          lzwState.currentSequenceLength = currentSequenceLength;\\n          this.bufferLength = currentBufferLength;\\n        };\\n\\n        return LZWStream;\\n      }();\\n\\n      exports.LZWStream = LZWStream;\\n\\n      var NullStream = function NullStreamClosure() {\\n        function NullStream() {\\n          Stream.call(this, new Uint8Array(0));\\n        }\\n\\n        NullStream.prototype = Stream.prototype;\\n        return NullStream;\\n      }();\\n\\n      exports.NullStream = NullStream;\\n      /***/\\n    },\\n    /* 158 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.CCITTFaxStream = void 0;\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _ccitt = __w_pdfjs_require__(159);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var CCITTFaxStream = function CCITTFaxStreamClosure() {\\n        function CCITTFaxStream(str, maybeLength, params) {\\n          this.str = str;\\n          this.dict = str.dict;\\n\\n          if (!(0, _primitives.isDict)(params)) {\\n            params = _primitives.Dict.empty;\\n          }\\n\\n          var source = {\\n            next: function next() {\\n              return str.getByte();\\n            }\\n          };\\n          this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\\n            K: params.get('K'),\\n            EndOfLine: params.get('EndOfLine'),\\n            EncodedByteAlign: params.get('EncodedByteAlign'),\\n            Columns: params.get('Columns'),\\n            Rows: params.get('Rows'),\\n            EndOfBlock: params.get('EndOfBlock'),\\n            BlackIs1: params.get('BlackIs1')\\n          });\\n\\n          _stream.DecodeStream.call(this, maybeLength);\\n        }\\n\\n        CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n\\n        CCITTFaxStream.prototype.readBlock = function () {\\n          while (!this.eof) {\\n            var c = this.ccittFaxDecoder.readNextChar();\\n\\n            if (c === -1) {\\n              this.eof = true;\\n              return;\\n            }\\n\\n            this.ensureBuffer(this.bufferLength + 1);\\n            this.buffer[this.bufferLength++] = c;\\n          }\\n        };\\n\\n        return CCITTFaxStream;\\n      }();\\n\\n      exports.CCITTFaxStream = CCITTFaxStream;\\n      /***/\\n    },\\n    /* 159 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.CCITTFaxDecoder = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var CCITTFaxDecoder = function CCITTFaxDecoder() {\\n        var ccittEOL = -2;\\n        var ccittEOF = -1;\\n        var twoDimPass = 0;\\n        var twoDimHoriz = 1;\\n        var twoDimVert0 = 2;\\n        var twoDimVertR1 = 3;\\n        var twoDimVertL1 = 4;\\n        var twoDimVertR2 = 5;\\n        var twoDimVertL2 = 6;\\n        var twoDimVertR3 = 7;\\n        var twoDimVertL3 = 8;\\n        var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\\n        var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\\n        var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\\n        var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\\n        var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\\n        var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\\n\\n        function CCITTFaxDecoder(source) {\\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n\\n          if (!source || typeof source.next !== 'function') {\\n            throw new Error('CCITTFaxDecoder - invalid \\\"source\\\" parameter.');\\n          }\\n\\n          this.source = source;\\n          this.eof = false;\\n          this.encoding = options['K'] || 0;\\n          this.eoline = options['EndOfLine'] || false;\\n          this.byteAlign = options['EncodedByteAlign'] || false;\\n          this.columns = options['Columns'] || 1728;\\n          this.rows = options['Rows'] || 0;\\n          var eoblock = options['EndOfBlock'];\\n\\n          if (eoblock === null || eoblock === undefined) {\\n            eoblock = true;\\n          }\\n\\n          this.eoblock = eoblock;\\n          this.black = options['BlackIs1'] || false;\\n          this.codingLine = new Uint32Array(this.columns + 1);\\n          this.refLine = new Uint32Array(this.columns + 2);\\n          this.codingLine[0] = this.columns;\\n          this.codingPos = 0;\\n          this.row = 0;\\n          this.nextLine2D = this.encoding < 0;\\n          this.inputBits = 0;\\n          this.inputBuf = 0;\\n          this.outputBits = 0;\\n          this.rowsDone = false;\\n          var code1;\\n\\n          while ((code1 = this._lookBits(12)) === 0) {\\n            this._eatBits(1);\\n          }\\n\\n          if (code1 === 1) {\\n            this._eatBits(12);\\n          }\\n\\n          if (this.encoding > 0) {\\n            this.nextLine2D = !this._lookBits(1);\\n\\n            this._eatBits(1);\\n          }\\n        }\\n\\n        CCITTFaxDecoder.prototype = {\\n          readNextChar: function readNextChar() {\\n            if (this.eof) {\\n              return -1;\\n            }\\n\\n            var refLine = this.refLine;\\n            var codingLine = this.codingLine;\\n            var columns = this.columns;\\n            var refPos, blackPixels, bits, i;\\n\\n            if (this.outputBits === 0) {\\n              if (this.rowsDone) {\\n                this.eof = true;\\n              }\\n\\n              if (this.eof) {\\n                return -1;\\n              }\\n\\n              this.err = false;\\n              var code1, code2, code3;\\n\\n              if (this.nextLine2D) {\\n                for (i = 0; codingLine[i] < columns; ++i) {\\n                  refLine[i] = codingLine[i];\\n                }\\n\\n                refLine[i++] = columns;\\n                refLine[i] = columns;\\n                codingLine[0] = 0;\\n                this.codingPos = 0;\\n                refPos = 0;\\n                blackPixels = 0;\\n\\n                while (codingLine[this.codingPos] < columns) {\\n                  code1 = this._getTwoDimCode();\\n\\n                  switch (code1) {\\n                    case twoDimPass:\\n                      this._addPixels(refLine[refPos + 1], blackPixels);\\n\\n                      if (refLine[refPos + 1] < columns) {\\n                        refPos += 2;\\n                      }\\n\\n                      break;\\n\\n                    case twoDimHoriz:\\n                      code1 = code2 = 0;\\n\\n                      if (blackPixels) {\\n                        do {\\n                          code1 += code3 = this._getBlackCode();\\n                        } while (code3 >= 64);\\n\\n                        do {\\n                          code2 += code3 = this._getWhiteCode();\\n                        } while (code3 >= 64);\\n                      } else {\\n                        do {\\n                          code1 += code3 = this._getWhiteCode();\\n                        } while (code3 >= 64);\\n\\n                        do {\\n                          code2 += code3 = this._getBlackCode();\\n                        } while (code3 >= 64);\\n                      }\\n\\n                      this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\\n\\n                      if (codingLine[this.codingPos] < columns) {\\n                        this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\\n                      }\\n\\n                      while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                        refPos += 2;\\n                      }\\n\\n                      break;\\n\\n                    case twoDimVertR3:\\n                      this._addPixels(refLine[refPos] + 3, blackPixels);\\n\\n                      blackPixels ^= 1;\\n\\n                      if (codingLine[this.codingPos] < columns) {\\n                        ++refPos;\\n\\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                          refPos += 2;\\n                        }\\n                      }\\n\\n                      break;\\n\\n                    case twoDimVertR2:\\n                      this._addPixels(refLine[refPos] + 2, blackPixels);\\n\\n                      blackPixels ^= 1;\\n\\n                      if (codingLine[this.codingPos] < columns) {\\n                        ++refPos;\\n\\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                          refPos += 2;\\n                        }\\n                      }\\n\\n                      break;\\n\\n                    case twoDimVertR1:\\n                      this._addPixels(refLine[refPos] + 1, blackPixels);\\n\\n                      blackPixels ^= 1;\\n\\n                      if (codingLine[this.codingPos] < columns) {\\n                        ++refPos;\\n\\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                          refPos += 2;\\n                        }\\n                      }\\n\\n                      break;\\n\\n                    case twoDimVert0:\\n                      this._addPixels(refLine[refPos], blackPixels);\\n\\n                      blackPixels ^= 1;\\n\\n                      if (codingLine[this.codingPos] < columns) {\\n                        ++refPos;\\n\\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                          refPos += 2;\\n                        }\\n                      }\\n\\n                      break;\\n\\n                    case twoDimVertL3:\\n                      this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\\n\\n                      blackPixels ^= 1;\\n\\n                      if (codingLine[this.codingPos] < columns) {\\n                        if (refPos > 0) {\\n                          --refPos;\\n                        } else {\\n                          ++refPos;\\n                        }\\n\\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                          refPos += 2;\\n                        }\\n                      }\\n\\n                      break;\\n\\n                    case twoDimVertL2:\\n                      this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\\n\\n                      blackPixels ^= 1;\\n\\n                      if (codingLine[this.codingPos] < columns) {\\n                        if (refPos > 0) {\\n                          --refPos;\\n                        } else {\\n                          ++refPos;\\n                        }\\n\\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                          refPos += 2;\\n                        }\\n                      }\\n\\n                      break;\\n\\n                    case twoDimVertL1:\\n                      this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\\n\\n                      blackPixels ^= 1;\\n\\n                      if (codingLine[this.codingPos] < columns) {\\n                        if (refPos > 0) {\\n                          --refPos;\\n                        } else {\\n                          ++refPos;\\n                        }\\n\\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\n                          refPos += 2;\\n                        }\\n                      }\\n\\n                      break;\\n\\n                    case ccittEOF:\\n                      this._addPixels(columns, 0);\\n\\n                      this.eof = true;\\n                      break;\\n\\n                    default:\\n                      (0, _util.info)('bad 2d code');\\n\\n                      this._addPixels(columns, 0);\\n\\n                      this.err = true;\\n                  }\\n                }\\n              } else {\\n                codingLine[0] = 0;\\n                this.codingPos = 0;\\n                blackPixels = 0;\\n\\n                while (codingLine[this.codingPos] < columns) {\\n                  code1 = 0;\\n\\n                  if (blackPixels) {\\n                    do {\\n                      code1 += code3 = this._getBlackCode();\\n                    } while (code3 >= 64);\\n                  } else {\\n                    do {\\n                      code1 += code3 = this._getWhiteCode();\\n                    } while (code3 >= 64);\\n                  }\\n\\n                  this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\\n\\n                  blackPixels ^= 1;\\n                }\\n              }\\n\\n              var gotEOL = false;\\n\\n              if (this.byteAlign) {\\n                this.inputBits &= ~7;\\n              }\\n\\n              if (!this.eoblock && this.row === this.rows - 1) {\\n                this.rowsDone = true;\\n              } else {\\n                code1 = this._lookBits(12);\\n\\n                if (this.eoline) {\\n                  while (code1 !== ccittEOF && code1 !== 1) {\\n                    this._eatBits(1);\\n\\n                    code1 = this._lookBits(12);\\n                  }\\n                } else {\\n                  while (code1 === 0) {\\n                    this._eatBits(1);\\n\\n                    code1 = this._lookBits(12);\\n                  }\\n                }\\n\\n                if (code1 === 1) {\\n                  this._eatBits(12);\\n\\n                  gotEOL = true;\\n                } else if (code1 === ccittEOF) {\\n                  this.eof = true;\\n                }\\n              }\\n\\n              if (!this.eof && this.encoding > 0 && !this.rowsDone) {\\n                this.nextLine2D = !this._lookBits(1);\\n\\n                this._eatBits(1);\\n              }\\n\\n              if (this.eoblock && gotEOL && this.byteAlign) {\\n                code1 = this._lookBits(12);\\n\\n                if (code1 === 1) {\\n                  this._eatBits(12);\\n\\n                  if (this.encoding > 0) {\\n                    this._lookBits(1);\\n\\n                    this._eatBits(1);\\n                  }\\n\\n                  if (this.encoding >= 0) {\\n                    for (i = 0; i < 4; ++i) {\\n                      code1 = this._lookBits(12);\\n\\n                      if (code1 !== 1) {\\n                        (0, _util.info)('bad rtc code: ' + code1);\\n                      }\\n\\n                      this._eatBits(12);\\n\\n                      if (this.encoding > 0) {\\n                        this._lookBits(1);\\n\\n                        this._eatBits(1);\\n                      }\\n                    }\\n                  }\\n\\n                  this.eof = true;\\n                }\\n              } else if (this.err && this.eoline) {\\n                while (true) {\\n                  code1 = this._lookBits(13);\\n\\n                  if (code1 === ccittEOF) {\\n                    this.eof = true;\\n                    return -1;\\n                  }\\n\\n                  if (code1 >> 1 === 1) {\\n                    break;\\n                  }\\n\\n                  this._eatBits(1);\\n                }\\n\\n                this._eatBits(12);\\n\\n                if (this.encoding > 0) {\\n                  this._eatBits(1);\\n\\n                  this.nextLine2D = !(code1 & 1);\\n                }\\n              }\\n\\n              if (codingLine[0] > 0) {\\n                this.outputBits = codingLine[this.codingPos = 0];\\n              } else {\\n                this.outputBits = codingLine[this.codingPos = 1];\\n              }\\n\\n              this.row++;\\n            }\\n\\n            var c;\\n\\n            if (this.outputBits >= 8) {\\n              c = this.codingPos & 1 ? 0 : 0xFF;\\n              this.outputBits -= 8;\\n\\n              if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\\n                this.codingPos++;\\n                this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\\n              }\\n            } else {\\n              bits = 8;\\n              c = 0;\\n\\n              do {\\n                if (this.outputBits > bits) {\\n                  c <<= bits;\\n\\n                  if (!(this.codingPos & 1)) {\\n                    c |= 0xFF >> 8 - bits;\\n                  }\\n\\n                  this.outputBits -= bits;\\n                  bits = 0;\\n                } else {\\n                  c <<= this.outputBits;\\n\\n                  if (!(this.codingPos & 1)) {\\n                    c |= 0xFF >> 8 - this.outputBits;\\n                  }\\n\\n                  bits -= this.outputBits;\\n                  this.outputBits = 0;\\n\\n                  if (codingLine[this.codingPos] < columns) {\\n                    this.codingPos++;\\n                    this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\\n                  } else if (bits > 0) {\\n                    c <<= bits;\\n                    bits = 0;\\n                  }\\n                }\\n              } while (bits);\\n            }\\n\\n            if (this.black) {\\n              c ^= 0xFF;\\n            }\\n\\n            return c;\\n          },\\n          _addPixels: function _addPixels(a1, blackPixels) {\\n            var codingLine = this.codingLine;\\n            var codingPos = this.codingPos;\\n\\n            if (a1 > codingLine[codingPos]) {\\n              if (a1 > this.columns) {\\n                (0, _util.info)('row is wrong length');\\n                this.err = true;\\n                a1 = this.columns;\\n              }\\n\\n              if (codingPos & 1 ^ blackPixels) {\\n                ++codingPos;\\n              }\\n\\n              codingLine[codingPos] = a1;\\n            }\\n\\n            this.codingPos = codingPos;\\n          },\\n          _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\\n            var codingLine = this.codingLine;\\n            var codingPos = this.codingPos;\\n\\n            if (a1 > codingLine[codingPos]) {\\n              if (a1 > this.columns) {\\n                (0, _util.info)('row is wrong length');\\n                this.err = true;\\n                a1 = this.columns;\\n              }\\n\\n              if (codingPos & 1 ^ blackPixels) {\\n                ++codingPos;\\n              }\\n\\n              codingLine[codingPos] = a1;\\n            } else if (a1 < codingLine[codingPos]) {\\n              if (a1 < 0) {\\n                (0, _util.info)('invalid code');\\n                this.err = true;\\n                a1 = 0;\\n              }\\n\\n              while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\\n                --codingPos;\\n              }\\n\\n              codingLine[codingPos] = a1;\\n            }\\n\\n            this.codingPos = codingPos;\\n          },\\n          _findTableCode: function _findTableCode(start, end, table, limit) {\\n            var limitValue = limit || 0;\\n\\n            for (var i = start; i <= end; ++i) {\\n              var code = this._lookBits(i);\\n\\n              if (code === ccittEOF) {\\n                return [true, 1, false];\\n              }\\n\\n              if (i < end) {\\n                code <<= end - i;\\n              }\\n\\n              if (!limitValue || code >= limitValue) {\\n                var p = table[code - limitValue];\\n\\n                if (p[0] === i) {\\n                  this._eatBits(i);\\n\\n                  return [true, p[1], true];\\n                }\\n              }\\n            }\\n\\n            return [false, 0, false];\\n          },\\n          _getTwoDimCode: function _getTwoDimCode() {\\n            var code = 0;\\n            var p;\\n\\n            if (this.eoblock) {\\n              code = this._lookBits(7);\\n              p = twoDimTable[code];\\n\\n              if (p && p[0] > 0) {\\n                this._eatBits(p[0]);\\n\\n                return p[1];\\n              }\\n            } else {\\n              var result = this._findTableCode(1, 7, twoDimTable);\\n\\n              if (result[0] && result[2]) {\\n                return result[1];\\n              }\\n            }\\n\\n            (0, _util.info)('Bad two dim code');\\n            return ccittEOF;\\n          },\\n          _getWhiteCode: function _getWhiteCode() {\\n            var code = 0;\\n            var p;\\n\\n            if (this.eoblock) {\\n              code = this._lookBits(12);\\n\\n              if (code === ccittEOF) {\\n                return 1;\\n              }\\n\\n              if (code >> 5 === 0) {\\n                p = whiteTable1[code];\\n              } else {\\n                p = whiteTable2[code >> 3];\\n              }\\n\\n              if (p[0] > 0) {\\n                this._eatBits(p[0]);\\n\\n                return p[1];\\n              }\\n            } else {\\n              var result = this._findTableCode(1, 9, whiteTable2);\\n\\n              if (result[0]) {\\n                return result[1];\\n              }\\n\\n              result = this._findTableCode(11, 12, whiteTable1);\\n\\n              if (result[0]) {\\n                return result[1];\\n              }\\n            }\\n\\n            (0, _util.info)('bad white code');\\n\\n            this._eatBits(1);\\n\\n            return 1;\\n          },\\n          _getBlackCode: function _getBlackCode() {\\n            var code, p;\\n\\n            if (this.eoblock) {\\n              code = this._lookBits(13);\\n\\n              if (code === ccittEOF) {\\n                return 1;\\n              }\\n\\n              if (code >> 7 === 0) {\\n                p = blackTable1[code];\\n              } else if (code >> 9 === 0 && code >> 7 !== 0) {\\n                p = blackTable2[(code >> 1) - 64];\\n              } else {\\n                p = blackTable3[code >> 7];\\n              }\\n\\n              if (p[0] > 0) {\\n                this._eatBits(p[0]);\\n\\n                return p[1];\\n              }\\n            } else {\\n              var result = this._findTableCode(2, 6, blackTable3);\\n\\n              if (result[0]) {\\n                return result[1];\\n              }\\n\\n              result = this._findTableCode(7, 12, blackTable2, 64);\\n\\n              if (result[0]) {\\n                return result[1];\\n              }\\n\\n              result = this._findTableCode(10, 13, blackTable1);\\n\\n              if (result[0]) {\\n                return result[1];\\n              }\\n            }\\n\\n            (0, _util.info)('bad black code');\\n\\n            this._eatBits(1);\\n\\n            return 1;\\n          },\\n          _lookBits: function _lookBits(n) {\\n            var c;\\n\\n            while (this.inputBits < n) {\\n              if ((c = this.source.next()) === -1) {\\n                if (this.inputBits === 0) {\\n                  return ccittEOF;\\n                }\\n\\n                return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\\n              }\\n\\n              this.inputBuf = this.inputBuf << 8 | c;\\n              this.inputBits += 8;\\n            }\\n\\n            return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\\n          },\\n          _eatBits: function _eatBits(n) {\\n            if ((this.inputBits -= n) < 0) {\\n              this.inputBits = 0;\\n            }\\n          }\\n        };\\n        return CCITTFaxDecoder;\\n      }();\\n\\n      exports.CCITTFaxDecoder = CCITTFaxDecoder;\\n      /***/\\n    },\\n    /* 160 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.Jbig2Stream = void 0;\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var _jbig = __w_pdfjs_require__(161);\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var Jbig2Stream = function Jbig2StreamClosure() {\\n        function Jbig2Stream(stream, maybeLength, dict, params) {\\n          this.stream = stream;\\n          this.maybeLength = maybeLength;\\n          this.dict = dict;\\n          this.params = params;\\n\\n          _stream.DecodeStream.call(this, maybeLength);\\n        }\\n\\n        Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\\n        Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\\n          get: function get() {\\n            return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n          },\\n          configurable: true\\n        });\\n\\n        Jbig2Stream.prototype.ensureBuffer = function (requested) {};\\n\\n        Jbig2Stream.prototype.readBlock = function () {\\n          if (this.eof) {\\n            return;\\n          }\\n\\n          var jbig2Image = new _jbig.Jbig2Image();\\n          var chunks = [];\\n\\n          if ((0, _primitives.isDict)(this.params)) {\\n            var globalsStream = this.params.get('JBIG2Globals');\\n\\n            if ((0, _primitives.isStream)(globalsStream)) {\\n              var globals = globalsStream.getBytes();\\n              chunks.push({\\n                data: globals,\\n                start: 0,\\n                end: globals.length\\n              });\\n            }\\n          }\\n\\n          chunks.push({\\n            data: this.bytes,\\n            start: 0,\\n            end: this.bytes.length\\n          });\\n          var data = jbig2Image.parseChunks(chunks);\\n          var dataLength = data.length;\\n\\n          for (var i = 0; i < dataLength; i++) {\\n            data[i] ^= 0xFF;\\n          }\\n\\n          this.buffer = data;\\n          this.bufferLength = dataLength;\\n          this.eof = true;\\n        };\\n\\n        return Jbig2Stream;\\n      }();\\n\\n      exports.Jbig2Stream = Jbig2Stream;\\n      /***/\\n    },\\n    /* 161 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.Jbig2Image = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _arithmetic_decoder = __w_pdfjs_require__(162);\\n\\n      var _ccitt = __w_pdfjs_require__(159);\\n\\n      var Jbig2Error = function Jbig2ErrorClosure() {\\n        function Jbig2Error(msg) {\\n          this.message = 'JBIG2 error: ' + msg;\\n        }\\n\\n        Jbig2Error.prototype = new Error();\\n        Jbig2Error.prototype.name = 'Jbig2Error';\\n        Jbig2Error.constructor = Jbig2Error;\\n        return Jbig2Error;\\n      }();\\n\\n      var Jbig2Image = function Jbig2ImageClosure() {\\n        function ContextCache() {}\\n\\n        ContextCache.prototype = {\\n          getContexts: function getContexts(id) {\\n            if (id in this) {\\n              return this[id];\\n            }\\n\\n            return this[id] = new Int8Array(1 << 16);\\n          }\\n        };\\n\\n        function DecodingContext(data, start, end) {\\n          this.data = data;\\n          this.start = start;\\n          this.end = end;\\n        }\\n\\n        DecodingContext.prototype = {\\n          get decoder() {\\n            var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\\n            return (0, _util.shadow)(this, 'decoder', decoder);\\n          },\\n\\n          get contextCache() {\\n            var cache = new ContextCache();\\n            return (0, _util.shadow)(this, 'contextCache', cache);\\n          }\\n\\n        };\\n\\n        function decodeInteger(contextCache, procedure, decoder) {\\n          var contexts = contextCache.getContexts(procedure);\\n          var prev = 1;\\n\\n          function readBits(length) {\\n            var v = 0;\\n\\n            for (var i = 0; i < length; i++) {\\n              var bit = decoder.readBit(contexts, prev);\\n              prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\\n              v = v << 1 | bit;\\n            }\\n\\n            return v >>> 0;\\n          }\\n\\n          var sign = readBits(1);\\n          var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\\n          return sign === 0 ? value : value > 0 ? -value : null;\\n        }\\n\\n        function decodeIAID(contextCache, decoder, codeLength) {\\n          var contexts = contextCache.getContexts('IAID');\\n          var prev = 1;\\n\\n          for (var i = 0; i < codeLength; i++) {\\n            var bit = decoder.readBit(contexts, prev);\\n            prev = prev << 1 | bit;\\n          }\\n\\n          if (codeLength < 31) {\\n            return prev & (1 << codeLength) - 1;\\n          }\\n\\n          return prev & 0x7FFFFFFF;\\n        }\\n\\n        var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\\n        var CodingTemplates = [[{\\n          x: -1,\\n          y: -2\\n        }, {\\n          x: 0,\\n          y: -2\\n        }, {\\n          x: 1,\\n          y: -2\\n        }, {\\n          x: -2,\\n          y: -1\\n        }, {\\n          x: -1,\\n          y: -1\\n        }, {\\n          x: 0,\\n          y: -1\\n        }, {\\n          x: 1,\\n          y: -1\\n        }, {\\n          x: 2,\\n          y: -1\\n        }, {\\n          x: -4,\\n          y: 0\\n        }, {\\n          x: -3,\\n          y: 0\\n        }, {\\n          x: -2,\\n          y: 0\\n        }, {\\n          x: -1,\\n          y: 0\\n        }], [{\\n          x: -1,\\n          y: -2\\n        }, {\\n          x: 0,\\n          y: -2\\n        }, {\\n          x: 1,\\n          y: -2\\n        }, {\\n          x: 2,\\n          y: -2\\n        }, {\\n          x: -2,\\n          y: -1\\n        }, {\\n          x: -1,\\n          y: -1\\n        }, {\\n          x: 0,\\n          y: -1\\n        }, {\\n          x: 1,\\n          y: -1\\n        }, {\\n          x: 2,\\n          y: -1\\n        }, {\\n          x: -3,\\n          y: 0\\n        }, {\\n          x: -2,\\n          y: 0\\n        }, {\\n          x: -1,\\n          y: 0\\n        }], [{\\n          x: -1,\\n          y: -2\\n        }, {\\n          x: 0,\\n          y: -2\\n        }, {\\n          x: 1,\\n          y: -2\\n        }, {\\n          x: -2,\\n          y: -1\\n        }, {\\n          x: -1,\\n          y: -1\\n        }, {\\n          x: 0,\\n          y: -1\\n        }, {\\n          x: 1,\\n          y: -1\\n        }, {\\n          x: -2,\\n          y: 0\\n        }, {\\n          x: -1,\\n          y: 0\\n        }], [{\\n          x: -3,\\n          y: -1\\n        }, {\\n          x: -2,\\n          y: -1\\n        }, {\\n          x: -1,\\n          y: -1\\n        }, {\\n          x: 0,\\n          y: -1\\n        }, {\\n          x: 1,\\n          y: -1\\n        }, {\\n          x: -4,\\n          y: 0\\n        }, {\\n          x: -3,\\n          y: 0\\n        }, {\\n          x: -2,\\n          y: 0\\n        }, {\\n          x: -1,\\n          y: 0\\n        }]];\\n        var RefinementTemplates = [{\\n          coding: [{\\n            x: 0,\\n            y: -1\\n          }, {\\n            x: 1,\\n            y: -1\\n          }, {\\n            x: -1,\\n            y: 0\\n          }],\\n          reference: [{\\n            x: 0,\\n            y: -1\\n          }, {\\n            x: 1,\\n            y: -1\\n          }, {\\n            x: -1,\\n            y: 0\\n          }, {\\n            x: 0,\\n            y: 0\\n          }, {\\n            x: 1,\\n            y: 0\\n          }, {\\n            x: -1,\\n            y: 1\\n          }, {\\n            x: 0,\\n            y: 1\\n          }, {\\n            x: 1,\\n            y: 1\\n          }]\\n        }, {\\n          coding: [{\\n            x: -1,\\n            y: -1\\n          }, {\\n            x: 0,\\n            y: -1\\n          }, {\\n            x: 1,\\n            y: -1\\n          }, {\\n            x: -1,\\n            y: 0\\n          }],\\n          reference: [{\\n            x: 0,\\n            y: -1\\n          }, {\\n            x: -1,\\n            y: 0\\n          }, {\\n            x: 0,\\n            y: 0\\n          }, {\\n            x: 1,\\n            y: 0\\n          }, {\\n            x: 0,\\n            y: 1\\n          }, {\\n            x: 1,\\n            y: 1\\n          }]\\n        }];\\n        var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\\n        var RefinementReusedContexts = [0x0020, 0x0008];\\n\\n        function decodeBitmapTemplate0(width, height, decodingContext) {\\n          var decoder = decodingContext.decoder;\\n          var contexts = decodingContext.contextCache.getContexts('GB');\\n          var contextLabel,\\n              i,\\n              j,\\n              pixel,\\n              row,\\n              row1,\\n              row2,\\n              bitmap = [];\\n          var OLD_PIXEL_MASK = 0x7BF7;\\n\\n          for (i = 0; i < height; i++) {\\n            row = bitmap[i] = new Uint8Array(width);\\n            row1 = i < 1 ? row : bitmap[i - 1];\\n            row2 = i < 2 ? row : bitmap[i - 2];\\n            contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\\n\\n            for (j = 0; j < width; j++) {\\n              row[j] = pixel = decoder.readBit(contexts, contextLabel);\\n              contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\\n            }\\n          }\\n\\n          return bitmap;\\n        }\\n\\n        function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\\n          if (mmr) {\\n            var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\\n            return decodeMMRBitmap(input, width, height, false);\\n          }\\n\\n          if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\\n            return decodeBitmapTemplate0(width, height, decodingContext);\\n          }\\n\\n          var useskip = !!skip;\\n          var template = CodingTemplates[templateIndex].concat(at);\\n          template.sort(function (a, b) {\\n            return a.y - b.y || a.x - b.x;\\n          });\\n          var templateLength = template.length;\\n          var templateX = new Int8Array(templateLength);\\n          var templateY = new Int8Array(templateLength);\\n          var changingTemplateEntries = [];\\n          var reuseMask = 0,\\n              minX = 0,\\n              maxX = 0,\\n              minY = 0;\\n          var c, k;\\n\\n          for (k = 0; k < templateLength; k++) {\\n            templateX[k] = template[k].x;\\n            templateY[k] = template[k].y;\\n            minX = Math.min(minX, template[k].x);\\n            maxX = Math.max(maxX, template[k].x);\\n            minY = Math.min(minY, template[k].y);\\n\\n            if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\\n              reuseMask |= 1 << templateLength - 1 - k;\\n            } else {\\n              changingTemplateEntries.push(k);\\n            }\\n          }\\n\\n          var changingEntriesLength = changingTemplateEntries.length;\\n          var changingTemplateX = new Int8Array(changingEntriesLength);\\n          var changingTemplateY = new Int8Array(changingEntriesLength);\\n          var changingTemplateBit = new Uint16Array(changingEntriesLength);\\n\\n          for (c = 0; c < changingEntriesLength; c++) {\\n            k = changingTemplateEntries[c];\\n            changingTemplateX[c] = template[k].x;\\n            changingTemplateY[c] = template[k].y;\\n            changingTemplateBit[c] = 1 << templateLength - 1 - k;\\n          }\\n\\n          var sbb_left = -minX;\\n          var sbb_top = -minY;\\n          var sbb_right = width - maxX;\\n          var pseudoPixelContext = ReusedContexts[templateIndex];\\n          var row = new Uint8Array(width);\\n          var bitmap = [];\\n          var decoder = decodingContext.decoder;\\n          var contexts = decodingContext.contextCache.getContexts('GB');\\n          var ltp = 0,\\n              j,\\n              i0,\\n              j0,\\n              contextLabel = 0,\\n              bit,\\n              shift;\\n\\n          for (var i = 0; i < height; i++) {\\n            if (prediction) {\\n              var sltp = decoder.readBit(contexts, pseudoPixelContext);\\n              ltp ^= sltp;\\n\\n              if (ltp) {\\n                bitmap.push(row);\\n                continue;\\n              }\\n            }\\n\\n            row = new Uint8Array(row);\\n            bitmap.push(row);\\n\\n            for (j = 0; j < width; j++) {\\n              if (useskip && skip[i][j]) {\\n                row[j] = 0;\\n                continue;\\n              }\\n\\n              if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\\n                contextLabel = contextLabel << 1 & reuseMask;\\n\\n                for (k = 0; k < changingEntriesLength; k++) {\\n                  i0 = i + changingTemplateY[k];\\n                  j0 = j + changingTemplateX[k];\\n                  bit = bitmap[i0][j0];\\n\\n                  if (bit) {\\n                    bit = changingTemplateBit[k];\\n                    contextLabel |= bit;\\n                  }\\n                }\\n              } else {\\n                contextLabel = 0;\\n                shift = templateLength - 1;\\n\\n                for (k = 0; k < templateLength; k++, shift--) {\\n                  j0 = j + templateX[k];\\n\\n                  if (j0 >= 0 && j0 < width) {\\n                    i0 = i + templateY[k];\\n\\n                    if (i0 >= 0) {\\n                      bit = bitmap[i0][j0];\\n\\n                      if (bit) {\\n                        contextLabel |= bit << shift;\\n                      }\\n                    }\\n                  }\\n                }\\n              }\\n\\n              var pixel = decoder.readBit(contexts, contextLabel);\\n              row[j] = pixel;\\n            }\\n          }\\n\\n          return bitmap;\\n        }\\n\\n        function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\\n          var codingTemplate = RefinementTemplates[templateIndex].coding;\\n\\n          if (templateIndex === 0) {\\n            codingTemplate = codingTemplate.concat([at[0]]);\\n          }\\n\\n          var codingTemplateLength = codingTemplate.length;\\n          var codingTemplateX = new Int32Array(codingTemplateLength);\\n          var codingTemplateY = new Int32Array(codingTemplateLength);\\n          var k;\\n\\n          for (k = 0; k < codingTemplateLength; k++) {\\n            codingTemplateX[k] = codingTemplate[k].x;\\n            codingTemplateY[k] = codingTemplate[k].y;\\n          }\\n\\n          var referenceTemplate = RefinementTemplates[templateIndex].reference;\\n\\n          if (templateIndex === 0) {\\n            referenceTemplate = referenceTemplate.concat([at[1]]);\\n          }\\n\\n          var referenceTemplateLength = referenceTemplate.length;\\n          var referenceTemplateX = new Int32Array(referenceTemplateLength);\\n          var referenceTemplateY = new Int32Array(referenceTemplateLength);\\n\\n          for (k = 0; k < referenceTemplateLength; k++) {\\n            referenceTemplateX[k] = referenceTemplate[k].x;\\n            referenceTemplateY[k] = referenceTemplate[k].y;\\n          }\\n\\n          var referenceWidth = referenceBitmap[0].length;\\n          var referenceHeight = referenceBitmap.length;\\n          var pseudoPixelContext = RefinementReusedContexts[templateIndex];\\n          var bitmap = [];\\n          var decoder = decodingContext.decoder;\\n          var contexts = decodingContext.contextCache.getContexts('GR');\\n          var ltp = 0;\\n\\n          for (var i = 0; i < height; i++) {\\n            if (prediction) {\\n              var sltp = decoder.readBit(contexts, pseudoPixelContext);\\n              ltp ^= sltp;\\n\\n              if (ltp) {\\n                throw new Jbig2Error('prediction is not supported');\\n              }\\n            }\\n\\n            var row = new Uint8Array(width);\\n            bitmap.push(row);\\n\\n            for (var j = 0; j < width; j++) {\\n              var i0, j0;\\n              var contextLabel = 0;\\n\\n              for (k = 0; k < codingTemplateLength; k++) {\\n                i0 = i + codingTemplateY[k];\\n                j0 = j + codingTemplateX[k];\\n\\n                if (i0 < 0 || j0 < 0 || j0 >= width) {\\n                  contextLabel <<= 1;\\n                } else {\\n                  contextLabel = contextLabel << 1 | bitmap[i0][j0];\\n                }\\n              }\\n\\n              for (k = 0; k < referenceTemplateLength; k++) {\\n                i0 = i + referenceTemplateY[k] - offsetY;\\n                j0 = j + referenceTemplateX[k] - offsetX;\\n\\n                if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\\n                  contextLabel <<= 1;\\n                } else {\\n                  contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\\n                }\\n              }\\n\\n              var pixel = decoder.readBit(contexts, contextLabel);\\n              row[j] = pixel;\\n            }\\n          }\\n\\n          return bitmap;\\n        }\\n\\n        function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\\n          if (huffman && refinement) {\\n            throw new Jbig2Error('symbol refinement with Huffman is not supported');\\n          }\\n\\n          var newSymbols = [];\\n          var currentHeight = 0;\\n          var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\\n          var decoder = decodingContext.decoder;\\n          var contextCache = decodingContext.contextCache;\\n          var tableB1, symbolWidths;\\n\\n          if (huffman) {\\n            tableB1 = getStandardTable(1);\\n            symbolWidths = [];\\n            symbolCodeLength = Math.max(symbolCodeLength, 1);\\n          }\\n\\n          while (newSymbols.length < numberOfNewSymbols) {\\n            var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\\n            currentHeight += deltaHeight;\\n            var currentWidth = 0,\\n                totalWidth = 0;\\n            var firstSymbol = huffman ? symbolWidths.length : 0;\\n\\n            while (true) {\\n              var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\\n\\n              if (deltaWidth === null) {\\n                break;\\n              }\\n\\n              currentWidth += deltaWidth;\\n              totalWidth += currentWidth;\\n              var bitmap;\\n\\n              if (refinement) {\\n                var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\\n\\n                if (numberOfInstances > 1) {\\n                  bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\\n                } else {\\n                  var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\\n                  var rdx = decodeInteger(contextCache, 'IARDX', decoder);\\n                  var rdy = decodeInteger(contextCache, 'IARDY', decoder);\\n                  var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\\n                  bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\\n                }\\n\\n                newSymbols.push(bitmap);\\n              } else if (huffman) {\\n                symbolWidths.push(currentWidth);\\n              } else {\\n                bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\\n                newSymbols.push(bitmap);\\n              }\\n            }\\n\\n            if (huffman && !refinement) {\\n              var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\\n              huffmanInput.byteAlign();\\n              var collectiveBitmap = void 0;\\n\\n              if (bitmapSize === 0) {\\n                collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\\n              } else {\\n                var originalEnd = huffmanInput.end;\\n                var bitmapEnd = huffmanInput.position + bitmapSize;\\n                huffmanInput.end = bitmapEnd;\\n                collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\\n                huffmanInput.end = originalEnd;\\n                huffmanInput.position = bitmapEnd;\\n              }\\n\\n              var numberOfSymbolsDecoded = symbolWidths.length;\\n\\n              if (firstSymbol === numberOfSymbolsDecoded - 1) {\\n                newSymbols.push(collectiveBitmap);\\n              } else {\\n                var _i = void 0,\\n                    y = void 0,\\n                    xMin = 0,\\n                    xMax = void 0,\\n                    bitmapWidth = void 0,\\n                    symbolBitmap = void 0;\\n\\n                for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\\n                  bitmapWidth = symbolWidths[_i];\\n                  xMax = xMin + bitmapWidth;\\n                  symbolBitmap = [];\\n\\n                  for (y = 0; y < currentHeight; y++) {\\n                    symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\\n                  }\\n\\n                  newSymbols.push(symbolBitmap);\\n                  xMin = xMax;\\n                }\\n              }\\n            }\\n          }\\n\\n          var exportedSymbols = [];\\n          var flags = [],\\n              currentFlag = false;\\n          var totalSymbolsLength = symbols.length + numberOfNewSymbols;\\n\\n          while (flags.length < totalSymbolsLength) {\\n            var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\\n\\n            while (runLength--) {\\n              flags.push(currentFlag);\\n            }\\n\\n            currentFlag = !currentFlag;\\n          }\\n\\n          for (var i = 0, ii = symbols.length; i < ii; i++) {\\n            if (flags[i]) {\\n              exportedSymbols.push(symbols[i]);\\n            }\\n          }\\n\\n          for (var j = 0; j < numberOfNewSymbols; i++, j++) {\\n            if (flags[i]) {\\n              exportedSymbols.push(newSymbols[j]);\\n            }\\n          }\\n\\n          return exportedSymbols;\\n        }\\n\\n        function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\\n          if (huffman && refinement) {\\n            throw new Jbig2Error('refinement with Huffman is not supported');\\n          }\\n\\n          var bitmap = [];\\n          var i, row;\\n\\n          for (i = 0; i < height; i++) {\\n            row = new Uint8Array(width);\\n\\n            if (defaultPixelValue) {\\n              for (var j = 0; j < width; j++) {\\n                row[j] = defaultPixelValue;\\n              }\\n            }\\n\\n            bitmap.push(row);\\n          }\\n\\n          var decoder = decodingContext.decoder;\\n          var contextCache = decodingContext.contextCache;\\n          var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\\n          var firstS = 0;\\n          i = 0;\\n\\n          while (i < numberOfSymbolInstances) {\\n            var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\\n            stripT += deltaT;\\n            var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\\n            firstS += deltaFirstS;\\n            var currentS = firstS;\\n\\n            do {\\n              var currentT = 0;\\n\\n              if (stripSize > 1) {\\n                currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\\n              }\\n\\n              var t = stripSize * stripT + currentT;\\n              var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\\n              var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\\n              var symbolBitmap = inputSymbols[symbolId];\\n              var symbolWidth = symbolBitmap[0].length;\\n              var symbolHeight = symbolBitmap.length;\\n\\n              if (applyRefinement) {\\n                var rdw = decodeInteger(contextCache, 'IARDW', decoder);\\n                var rdh = decodeInteger(contextCache, 'IARDH', decoder);\\n                var rdx = decodeInteger(contextCache, 'IARDX', decoder);\\n                var rdy = decodeInteger(contextCache, 'IARDY', decoder);\\n                symbolWidth += rdw;\\n                symbolHeight += rdh;\\n                symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\\n              }\\n\\n              var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\\n              var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\\n              var s2, t2, symbolRow;\\n\\n              if (transposed) {\\n                for (s2 = 0; s2 < symbolHeight; s2++) {\\n                  row = bitmap[offsetS + s2];\\n\\n                  if (!row) {\\n                    continue;\\n                  }\\n\\n                  symbolRow = symbolBitmap[s2];\\n                  var maxWidth = Math.min(width - offsetT, symbolWidth);\\n\\n                  switch (combinationOperator) {\\n                    case 0:\\n                      for (t2 = 0; t2 < maxWidth; t2++) {\\n                        row[offsetT + t2] |= symbolRow[t2];\\n                      }\\n\\n                      break;\\n\\n                    case 2:\\n                      for (t2 = 0; t2 < maxWidth; t2++) {\\n                        row[offsetT + t2] ^= symbolRow[t2];\\n                      }\\n\\n                      break;\\n\\n                    default:\\n                      throw new Jbig2Error(\\\"operator \\\".concat(combinationOperator, \\\" is not supported\\\"));\\n                  }\\n                }\\n\\n                currentS += symbolHeight - 1;\\n              } else {\\n                for (t2 = 0; t2 < symbolHeight; t2++) {\\n                  row = bitmap[offsetT + t2];\\n\\n                  if (!row) {\\n                    continue;\\n                  }\\n\\n                  symbolRow = symbolBitmap[t2];\\n\\n                  switch (combinationOperator) {\\n                    case 0:\\n                      for (s2 = 0; s2 < symbolWidth; s2++) {\\n                        row[offsetS + s2] |= symbolRow[s2];\\n                      }\\n\\n                      break;\\n\\n                    case 2:\\n                      for (s2 = 0; s2 < symbolWidth; s2++) {\\n                        row[offsetS + s2] ^= symbolRow[s2];\\n                      }\\n\\n                      break;\\n\\n                    default:\\n                      throw new Jbig2Error(\\\"operator \\\".concat(combinationOperator, \\\" is not supported\\\"));\\n                  }\\n                }\\n\\n                currentS += symbolWidth - 1;\\n              }\\n\\n              i++;\\n              var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\\n\\n              if (deltaS === null) {\\n                break;\\n              }\\n\\n              currentS += deltaS + dsOffset;\\n            } while (true);\\n          }\\n\\n          return bitmap;\\n        }\\n\\n        function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\\n          var at = [];\\n\\n          if (!mmr) {\\n            at.push({\\n              x: -patternWidth,\\n              y: 0\\n            });\\n\\n            if (template === 0) {\\n              at.push({\\n                x: -3,\\n                y: -1\\n              });\\n              at.push({\\n                x: 2,\\n                y: -2\\n              });\\n              at.push({\\n                x: -2,\\n                y: -2\\n              });\\n            }\\n          }\\n\\n          var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\\n          var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\\n          var patterns = [],\\n              i = 0,\\n              patternBitmap,\\n              xMin,\\n              xMax,\\n              y;\\n\\n          while (i <= maxPatternIndex) {\\n            patternBitmap = [];\\n            xMin = patternWidth * i;\\n            xMax = xMin + patternWidth;\\n\\n            for (y = 0; y < patternHeight; y++) {\\n              patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\\n            }\\n\\n            patterns.push(patternBitmap);\\n            i++;\\n          }\\n\\n          return patterns;\\n        }\\n\\n        function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\\n          var skip = null;\\n\\n          if (enableSkip) {\\n            throw new Jbig2Error('skip is not supported');\\n          }\\n\\n          if (combinationOperator !== 0) {\\n            throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\\n          }\\n\\n          var regionBitmap = [];\\n          var i, j, row;\\n\\n          for (i = 0; i < regionHeight; i++) {\\n            row = new Uint8Array(regionWidth);\\n\\n            if (defaultPixelValue) {\\n              for (j = 0; j < regionWidth; j++) {\\n                row[j] = defaultPixelValue;\\n              }\\n            }\\n\\n            regionBitmap.push(row);\\n          }\\n\\n          var numberOfPatterns = patterns.length;\\n          var pattern0 = patterns[0];\\n          var patternWidth = pattern0[0].length,\\n              patternHeight = pattern0.length;\\n          var bitsPerValue = (0, _util.log2)(numberOfPatterns);\\n          var at = [];\\n\\n          if (!mmr) {\\n            at.push({\\n              x: template <= 1 ? 3 : 2,\\n              y: -1\\n            });\\n\\n            if (template === 0) {\\n              at.push({\\n                x: -3,\\n                y: -1\\n              });\\n              at.push({\\n                x: 2,\\n                y: -2\\n              });\\n              at.push({\\n                x: -2,\\n                y: -2\\n              });\\n            }\\n          }\\n\\n          var grayScaleBitPlanes = [],\\n              mmrInput,\\n              bitmap;\\n\\n          if (mmr) {\\n            mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\\n          }\\n\\n          for (i = bitsPerValue - 1; i >= 0; i--) {\\n            if (mmr) {\\n              bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\\n            } else {\\n              bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\\n            }\\n\\n            grayScaleBitPlanes[i] = bitmap;\\n          }\\n\\n          var mg, ng, bit, patternIndex, patternBitmap, x, y, patternRow, regionRow;\\n\\n          for (mg = 0; mg < gridHeight; mg++) {\\n            for (ng = 0; ng < gridWidth; ng++) {\\n              bit = 0;\\n              patternIndex = 0;\\n\\n              for (j = bitsPerValue - 1; j >= 0; j--) {\\n                bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\\n                patternIndex |= bit << j;\\n              }\\n\\n              patternBitmap = patterns[patternIndex];\\n              x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\\n              y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\\n\\n              if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\\n                for (i = 0; i < patternHeight; i++) {\\n                  regionRow = regionBitmap[y + i];\\n                  patternRow = patternBitmap[i];\\n\\n                  for (j = 0; j < patternWidth; j++) {\\n                    regionRow[x + j] |= patternRow[j];\\n                  }\\n                }\\n              } else {\\n                var regionX = void 0,\\n                    regionY = void 0;\\n\\n                for (i = 0; i < patternHeight; i++) {\\n                  regionY = y + i;\\n\\n                  if (regionY < 0 || regionY >= regionHeight) {\\n                    continue;\\n                  }\\n\\n                  regionRow = regionBitmap[regionY];\\n                  patternRow = patternBitmap[i];\\n\\n                  for (j = 0; j < patternWidth; j++) {\\n                    regionX = x + j;\\n\\n                    if (regionX >= 0 && regionX < regionWidth) {\\n                      regionRow[regionX] |= patternRow[j];\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          }\\n\\n          return regionBitmap;\\n        }\\n\\n        function readSegmentHeader(data, start) {\\n          var segmentHeader = {};\\n          segmentHeader.number = (0, _util.readUint32)(data, start);\\n          var flags = data[start + 4];\\n          var segmentType = flags & 0x3F;\\n\\n          if (!SegmentTypes[segmentType]) {\\n            throw new Jbig2Error('invalid segment type: ' + segmentType);\\n          }\\n\\n          segmentHeader.type = segmentType;\\n          segmentHeader.typeName = SegmentTypes[segmentType];\\n          segmentHeader.deferredNonRetain = !!(flags & 0x80);\\n          var pageAssociationFieldSize = !!(flags & 0x40);\\n          var referredFlags = data[start + 5];\\n          var referredToCount = referredFlags >> 5 & 7;\\n          var retainBits = [referredFlags & 31];\\n          var position = start + 6;\\n\\n          if (referredFlags === 7) {\\n            referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\\n            position += 3;\\n            var bytes = referredToCount + 7 >> 3;\\n            retainBits[0] = data[position++];\\n\\n            while (--bytes > 0) {\\n              retainBits.push(data[position++]);\\n            }\\n          } else if (referredFlags === 5 || referredFlags === 6) {\\n            throw new Jbig2Error('invalid referred-to flags');\\n          }\\n\\n          segmentHeader.retainBits = retainBits;\\n          var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\\n          var referredTo = [];\\n          var i, ii;\\n\\n          for (i = 0; i < referredToCount; i++) {\\n            var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\\n            referredTo.push(number);\\n            position += referredToSegmentNumberSize;\\n          }\\n\\n          segmentHeader.referredTo = referredTo;\\n\\n          if (!pageAssociationFieldSize) {\\n            segmentHeader.pageAssociation = data[position++];\\n          } else {\\n            segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\\n            position += 4;\\n          }\\n\\n          segmentHeader.length = (0, _util.readUint32)(data, position);\\n          position += 4;\\n\\n          if (segmentHeader.length === 0xFFFFFFFF) {\\n            if (segmentType === 38) {\\n              var genericRegionInfo = readRegionSegmentInformation(data, position);\\n              var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\\n              var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\\n              var searchPatternLength = 6;\\n              var searchPattern = new Uint8Array(searchPatternLength);\\n\\n              if (!genericRegionMmr) {\\n                searchPattern[0] = 0xFF;\\n                searchPattern[1] = 0xAC;\\n              }\\n\\n              searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\\n              searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\\n              searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\\n              searchPattern[5] = genericRegionInfo.height & 0xFF;\\n\\n              for (i = position, ii = data.length; i < ii; i++) {\\n                var j = 0;\\n\\n                while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\\n                  j++;\\n                }\\n\\n                if (j === searchPatternLength) {\\n                  segmentHeader.length = i + searchPatternLength;\\n                  break;\\n                }\\n              }\\n\\n              if (segmentHeader.length === 0xFFFFFFFF) {\\n                throw new Jbig2Error('segment end was not found');\\n              }\\n            } else {\\n              throw new Jbig2Error('invalid unknown segment length');\\n            }\\n          }\\n\\n          segmentHeader.headerEnd = position;\\n          return segmentHeader;\\n        }\\n\\n        function readSegments(header, data, start, end) {\\n          var segments = [];\\n          var position = start;\\n\\n          while (position < end) {\\n            var segmentHeader = readSegmentHeader(data, position);\\n            position = segmentHeader.headerEnd;\\n            var segment = {\\n              header: segmentHeader,\\n              data: data\\n            };\\n\\n            if (!header.randomAccess) {\\n              segment.start = position;\\n              position += segmentHeader.length;\\n              segment.end = position;\\n            }\\n\\n            segments.push(segment);\\n\\n            if (segmentHeader.type === 51) {\\n              break;\\n            }\\n          }\\n\\n          if (header.randomAccess) {\\n            for (var i = 0, ii = segments.length; i < ii; i++) {\\n              segments[i].start = position;\\n              position += segments[i].header.length;\\n              segments[i].end = position;\\n            }\\n          }\\n\\n          return segments;\\n        }\\n\\n        function readRegionSegmentInformation(data, start) {\\n          return {\\n            width: (0, _util.readUint32)(data, start),\\n            height: (0, _util.readUint32)(data, start + 4),\\n            x: (0, _util.readUint32)(data, start + 8),\\n            y: (0, _util.readUint32)(data, start + 12),\\n            combinationOperator: data[start + 16] & 7\\n          };\\n        }\\n\\n        var RegionSegmentInformationFieldLength = 17;\\n\\n        function processSegment(segment, visitor) {\\n          var header = segment.header;\\n          var data = segment.data,\\n              position = segment.start,\\n              end = segment.end;\\n          var args, at, i, atLength;\\n\\n          switch (header.type) {\\n            case 0:\\n              var dictionary = {};\\n              var dictionaryFlags = (0, _util.readUint16)(data, position);\\n              dictionary.huffman = !!(dictionaryFlags & 1);\\n              dictionary.refinement = !!(dictionaryFlags & 2);\\n              dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\\n              dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\\n              dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\\n              dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\\n              dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\\n              dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\\n              dictionary.template = dictionaryFlags >> 10 & 3;\\n              dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\\n              position += 2;\\n\\n              if (!dictionary.huffman) {\\n                atLength = dictionary.template === 0 ? 4 : 1;\\n                at = [];\\n\\n                for (i = 0; i < atLength; i++) {\\n                  at.push({\\n                    x: (0, _util.readInt8)(data, position),\\n                    y: (0, _util.readInt8)(data, position + 1)\\n                  });\\n                  position += 2;\\n                }\\n\\n                dictionary.at = at;\\n              }\\n\\n              if (dictionary.refinement && !dictionary.refinementTemplate) {\\n                at = [];\\n\\n                for (i = 0; i < 2; i++) {\\n                  at.push({\\n                    x: (0, _util.readInt8)(data, position),\\n                    y: (0, _util.readInt8)(data, position + 1)\\n                  });\\n                  position += 2;\\n                }\\n\\n                dictionary.refinementAt = at;\\n              }\\n\\n              dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\\n              position += 4;\\n              dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\\n              position += 4;\\n              args = [dictionary, header.number, header.referredTo, data, position, end];\\n              break;\\n\\n            case 6:\\n            case 7:\\n              var textRegion = {};\\n              textRegion.info = readRegionSegmentInformation(data, position);\\n              position += RegionSegmentInformationFieldLength;\\n              var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\\n              position += 2;\\n              textRegion.huffman = !!(textRegionSegmentFlags & 1);\\n              textRegion.refinement = !!(textRegionSegmentFlags & 2);\\n              textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\\n              textRegion.stripSize = 1 << textRegion.logStripSize;\\n              textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\\n              textRegion.transposed = !!(textRegionSegmentFlags & 64);\\n              textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\\n              textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\\n              textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\\n              textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\\n\\n              if (textRegion.huffman) {\\n                var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\\n                position += 2;\\n                textRegion.huffmanFS = textRegionHuffmanFlags & 3;\\n                textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\\n                textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\\n                textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\\n                textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\\n                textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\\n                textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\\n                textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\\n              }\\n\\n              if (textRegion.refinement && !textRegion.refinementTemplate) {\\n                at = [];\\n\\n                for (i = 0; i < 2; i++) {\\n                  at.push({\\n                    x: (0, _util.readInt8)(data, position),\\n                    y: (0, _util.readInt8)(data, position + 1)\\n                  });\\n                  position += 2;\\n                }\\n\\n                textRegion.refinementAt = at;\\n              }\\n\\n              textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\\n              position += 4;\\n              args = [textRegion, header.referredTo, data, position, end];\\n              break;\\n\\n            case 16:\\n              var patternDictionary = {};\\n              var patternDictionaryFlags = data[position++];\\n              patternDictionary.mmr = !!(patternDictionaryFlags & 1);\\n              patternDictionary.template = patternDictionaryFlags >> 1 & 3;\\n              patternDictionary.patternWidth = data[position++];\\n              patternDictionary.patternHeight = data[position++];\\n              patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\\n              position += 4;\\n              args = [patternDictionary, header.number, data, position, end];\\n              break;\\n\\n            case 22:\\n            case 23:\\n              var halftoneRegion = {};\\n              halftoneRegion.info = readRegionSegmentInformation(data, position);\\n              position += RegionSegmentInformationFieldLength;\\n              var halftoneRegionFlags = data[position++];\\n              halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\\n              halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\\n              halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\\n              halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\\n              halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\\n              halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\\n              position += 4;\\n              halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\\n              position += 4;\\n              halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\\n              position += 4;\\n              halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\\n              position += 4;\\n              halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\\n              position += 2;\\n              halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\\n              position += 2;\\n              args = [halftoneRegion, header.referredTo, data, position, end];\\n              break;\\n\\n            case 38:\\n            case 39:\\n              var genericRegion = {};\\n              genericRegion.info = readRegionSegmentInformation(data, position);\\n              position += RegionSegmentInformationFieldLength;\\n              var genericRegionSegmentFlags = data[position++];\\n              genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\\n              genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\\n              genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\\n\\n              if (!genericRegion.mmr) {\\n                atLength = genericRegion.template === 0 ? 4 : 1;\\n                at = [];\\n\\n                for (i = 0; i < atLength; i++) {\\n                  at.push({\\n                    x: (0, _util.readInt8)(data, position),\\n                    y: (0, _util.readInt8)(data, position + 1)\\n                  });\\n                  position += 2;\\n                }\\n\\n                genericRegion.at = at;\\n              }\\n\\n              args = [genericRegion, data, position, end];\\n              break;\\n\\n            case 48:\\n              var pageInfo = {\\n                width: (0, _util.readUint32)(data, position),\\n                height: (0, _util.readUint32)(data, position + 4),\\n                resolutionX: (0, _util.readUint32)(data, position + 8),\\n                resolutionY: (0, _util.readUint32)(data, position + 12)\\n              };\\n\\n              if (pageInfo.height === 0xFFFFFFFF) {\\n                delete pageInfo.height;\\n              }\\n\\n              var pageSegmentFlags = data[position + 16];\\n              (0, _util.readUint16)(data, position + 17);\\n              pageInfo.lossless = !!(pageSegmentFlags & 1);\\n              pageInfo.refinement = !!(pageSegmentFlags & 2);\\n              pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\\n              pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\\n              pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\\n              pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\\n              args = [pageInfo];\\n              break;\\n\\n            case 49:\\n              break;\\n\\n            case 50:\\n              break;\\n\\n            case 51:\\n              break;\\n\\n            case 53:\\n              args = [header.number, data, position, end];\\n              break;\\n\\n            case 62:\\n              break;\\n\\n            default:\\n              throw new Jbig2Error(\\\"segment type \\\".concat(header.typeName, \\\"(\\\").concat(header.type, \\\")\\\") + ' is not implemented');\\n          }\\n\\n          var callbackName = 'on' + header.typeName;\\n\\n          if (callbackName in visitor) {\\n            visitor[callbackName].apply(visitor, args);\\n          }\\n        }\\n\\n        function processSegments(segments, visitor) {\\n          for (var i = 0, ii = segments.length; i < ii; i++) {\\n            processSegment(segments[i], visitor);\\n          }\\n        }\\n\\n        function parseJbig2Chunks(chunks) {\\n          var visitor = new SimpleSegmentVisitor();\\n\\n          for (var i = 0, ii = chunks.length; i < ii; i++) {\\n            var chunk = chunks[i];\\n            var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\\n            processSegments(segments, visitor);\\n          }\\n\\n          return visitor.buffer;\\n        }\\n\\n        function parseJbig2(data) {\\n          var position = 0,\\n              end = data.length;\\n\\n          if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\\n            throw new Jbig2Error('parseJbig2 - invalid header.');\\n          }\\n\\n          var header = Object.create(null);\\n          position += 8;\\n          var flags = data[position++];\\n          header.randomAccess = !(flags & 1);\\n\\n          if (!(flags & 2)) {\\n            header.numberOfPages = (0, _util.readUint32)(data, position);\\n            position += 4;\\n          }\\n\\n          var segments = readSegments(header, data, position, end);\\n          var visitor = new SimpleSegmentVisitor();\\n          processSegments(segments, visitor);\\n          var _visitor$currentPageI = visitor.currentPageInfo,\\n              width = _visitor$currentPageI.width,\\n              height = _visitor$currentPageI.height;\\n          var bitPacked = visitor.buffer;\\n          var imgData = new Uint8ClampedArray(width * height);\\n          var q = 0,\\n              k = 0;\\n\\n          for (var i = 0; i < height; i++) {\\n            var mask = 0,\\n                buffer = void 0;\\n\\n            for (var j = 0; j < width; j++) {\\n              if (!mask) {\\n                mask = 128;\\n                buffer = bitPacked[k++];\\n              }\\n\\n              imgData[q++] = buffer & mask ? 0 : 255;\\n              mask >>= 1;\\n            }\\n          }\\n\\n          return {\\n            imgData: imgData,\\n            width: width,\\n            height: height\\n          };\\n        }\\n\\n        function SimpleSegmentVisitor() {}\\n\\n        SimpleSegmentVisitor.prototype = {\\n          onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\\n            this.currentPageInfo = info;\\n            var rowSize = info.width + 7 >> 3;\\n            var buffer = new Uint8ClampedArray(rowSize * info.height);\\n\\n            if (info.defaultPixelValue) {\\n              for (var i = 0, ii = buffer.length; i < ii; i++) {\\n                buffer[i] = 0xFF;\\n              }\\n            }\\n\\n            this.buffer = buffer;\\n          },\\n          drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\\n            var pageInfo = this.currentPageInfo;\\n            var width = regionInfo.width,\\n                height = regionInfo.height;\\n            var rowSize = pageInfo.width + 7 >> 3;\\n            var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\\n            var buffer = this.buffer;\\n            var mask0 = 128 >> (regionInfo.x & 7);\\n            var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\\n            var i, j, mask, offset;\\n\\n            switch (combinationOperator) {\\n              case 0:\\n                for (i = 0; i < height; i++) {\\n                  mask = mask0;\\n                  offset = offset0;\\n\\n                  for (j = 0; j < width; j++) {\\n                    if (bitmap[i][j]) {\\n                      buffer[offset] |= mask;\\n                    }\\n\\n                    mask >>= 1;\\n\\n                    if (!mask) {\\n                      mask = 128;\\n                      offset++;\\n                    }\\n                  }\\n\\n                  offset0 += rowSize;\\n                }\\n\\n                break;\\n\\n              case 2:\\n                for (i = 0; i < height; i++) {\\n                  mask = mask0;\\n                  offset = offset0;\\n\\n                  for (j = 0; j < width; j++) {\\n                    if (bitmap[i][j]) {\\n                      buffer[offset] ^= mask;\\n                    }\\n\\n                    mask >>= 1;\\n\\n                    if (!mask) {\\n                      mask = 128;\\n                      offset++;\\n                    }\\n                  }\\n\\n                  offset0 += rowSize;\\n                }\\n\\n                break;\\n\\n              default:\\n                throw new Jbig2Error(\\\"operator \\\".concat(combinationOperator, \\\" is not supported\\\"));\\n            }\\n          },\\n          onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\\n            var regionInfo = region.info;\\n            var decodingContext = new DecodingContext(data, start, end);\\n            var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\\n            this.drawBitmap(regionInfo, bitmap);\\n          },\\n          onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\\n            this.onImmediateGenericRegion.apply(this, arguments);\\n          },\\n          onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\\n            var huffmanTables, huffmanInput;\\n\\n            if (dictionary.huffman) {\\n              huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\\n              huffmanInput = new Reader(data, start, end);\\n            }\\n\\n            var symbols = this.symbols;\\n\\n            if (!symbols) {\\n              this.symbols = symbols = {};\\n            }\\n\\n            var inputSymbols = [];\\n\\n            for (var i = 0, ii = referredSegments.length; i < ii; i++) {\\n              var referredSymbols = symbols[referredSegments[i]];\\n\\n              if (referredSymbols) {\\n                inputSymbols = inputSymbols.concat(referredSymbols);\\n              }\\n            }\\n\\n            var decodingContext = new DecodingContext(data, start, end);\\n            symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\\n          },\\n          onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\\n            var regionInfo = region.info;\\n            var huffmanTables, huffmanInput;\\n            var symbols = this.symbols;\\n            var inputSymbols = [];\\n\\n            for (var i = 0, ii = referredSegments.length; i < ii; i++) {\\n              var referredSymbols = symbols[referredSegments[i]];\\n\\n              if (referredSymbols) {\\n                inputSymbols = inputSymbols.concat(referredSymbols);\\n              }\\n            }\\n\\n            var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\\n\\n            if (region.huffman) {\\n              huffmanInput = new Reader(data, start, end);\\n              huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\\n            }\\n\\n            var decodingContext = new DecodingContext(data, start, end);\\n            var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\\n            this.drawBitmap(regionInfo, bitmap);\\n          },\\n          onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\\n            this.onImmediateTextRegion.apply(this, arguments);\\n          },\\n          onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\\n            var patterns = this.patterns;\\n\\n            if (!patterns) {\\n              this.patterns = patterns = {};\\n            }\\n\\n            var decodingContext = new DecodingContext(data, start, end);\\n            patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\\n          },\\n          onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\\n            var patterns = this.patterns[referredSegments[0]];\\n            var regionInfo = region.info;\\n            var decodingContext = new DecodingContext(data, start, end);\\n            var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\\n            this.drawBitmap(regionInfo, bitmap);\\n          },\\n          onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\\n            this.onImmediateHalftoneRegion.apply(this, arguments);\\n          },\\n          onTables: function onTables(currentSegment, data, start, end) {\\n            var customTables = this.customTables;\\n\\n            if (!customTables) {\\n              this.customTables = customTables = {};\\n            }\\n\\n            customTables[currentSegment] = decodeTablesSegment(data, start, end);\\n          }\\n        };\\n\\n        function HuffmanLine(lineData) {\\n          if (lineData.length === 2) {\\n            this.isOOB = true;\\n            this.rangeLow = 0;\\n            this.prefixLength = lineData[0];\\n            this.rangeLength = 0;\\n            this.prefixCode = lineData[1];\\n            this.isLowerRange = false;\\n          } else {\\n            this.isOOB = false;\\n            this.rangeLow = lineData[0];\\n            this.prefixLength = lineData[1];\\n            this.rangeLength = lineData[2];\\n            this.prefixCode = lineData[3];\\n            this.isLowerRange = lineData[4] === 'lower';\\n          }\\n        }\\n\\n        function HuffmanTreeNode(line) {\\n          this.children = [];\\n\\n          if (line) {\\n            this.isLeaf = true;\\n            this.rangeLength = line.rangeLength;\\n            this.rangeLow = line.rangeLow;\\n            this.isLowerRange = line.isLowerRange;\\n            this.isOOB = line.isOOB;\\n          } else {\\n            this.isLeaf = false;\\n          }\\n        }\\n\\n        HuffmanTreeNode.prototype = {\\n          buildTree: function buildTree(line, shift) {\\n            var bit = line.prefixCode >> shift & 1;\\n\\n            if (shift <= 0) {\\n              this.children[bit] = new HuffmanTreeNode(line);\\n            } else {\\n              var node = this.children[bit];\\n\\n              if (!node) {\\n                this.children[bit] = node = new HuffmanTreeNode(null);\\n              }\\n\\n              node.buildTree(line, shift - 1);\\n            }\\n          },\\n          decodeNode: function decodeNode(reader) {\\n            if (this.isLeaf) {\\n              if (this.isOOB) {\\n                return null;\\n              }\\n\\n              var htOffset = reader.readBits(this.rangeLength);\\n              return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\\n            }\\n\\n            var node = this.children[reader.readBit()];\\n\\n            if (!node) {\\n              throw new Jbig2Error('invalid Huffman data');\\n            }\\n\\n            return node.decodeNode(reader);\\n          }\\n        };\\n\\n        function HuffmanTable(lines, prefixCodesDone) {\\n          if (!prefixCodesDone) {\\n            this.assignPrefixCodes(lines);\\n          }\\n\\n          this.rootNode = new HuffmanTreeNode(null);\\n          var i,\\n              ii = lines.length,\\n              line;\\n\\n          for (i = 0; i < ii; i++) {\\n            line = lines[i];\\n\\n            if (line.prefixLength > 0) {\\n              this.rootNode.buildTree(line, line.prefixLength - 1);\\n            }\\n          }\\n        }\\n\\n        HuffmanTable.prototype = {\\n          decode: function decode(reader) {\\n            return this.rootNode.decodeNode(reader);\\n          },\\n          assignPrefixCodes: function assignPrefixCodes(lines) {\\n            var linesLength = lines.length,\\n                prefixLengthMax = 0,\\n                i;\\n\\n            for (i = 0; i < linesLength; i++) {\\n              prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\\n            }\\n\\n            var histogram = new Uint32Array(prefixLengthMax + 1);\\n\\n            for (i = 0; i < linesLength; i++) {\\n              histogram[lines[i].prefixLength]++;\\n            }\\n\\n            var currentLength = 1,\\n                firstCode = 0,\\n                currentCode,\\n                currentTemp,\\n                line;\\n            histogram[0] = 0;\\n\\n            while (currentLength <= prefixLengthMax) {\\n              firstCode = firstCode + histogram[currentLength - 1] << 1;\\n              currentCode = firstCode;\\n              currentTemp = 0;\\n\\n              while (currentTemp < linesLength) {\\n                line = lines[currentTemp];\\n\\n                if (line.prefixLength === currentLength) {\\n                  line.prefixCode = currentCode;\\n                  currentCode++;\\n                }\\n\\n                currentTemp++;\\n              }\\n\\n              currentLength++;\\n            }\\n          }\\n        };\\n\\n        function decodeTablesSegment(data, start, end) {\\n          var flags = data[start];\\n          var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\\n          var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\\n          var reader = new Reader(data, start + 9, end);\\n          var prefixSizeBits = (flags >> 1 & 7) + 1;\\n          var rangeSizeBits = (flags >> 4 & 7) + 1;\\n          var lines = [];\\n          var prefixLength,\\n              rangeLength,\\n              currentRangeLow = lowestValue;\\n\\n          do {\\n            prefixLength = reader.readBits(prefixSizeBits);\\n            rangeLength = reader.readBits(rangeSizeBits);\\n            lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\\n            currentRangeLow += 1 << rangeLength;\\n          } while (currentRangeLow < highestValue);\\n\\n          prefixLength = reader.readBits(prefixSizeBits);\\n          lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\\n          prefixLength = reader.readBits(prefixSizeBits);\\n          lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\\n\\n          if (flags & 1) {\\n            prefixLength = reader.readBits(prefixSizeBits);\\n            lines.push(new HuffmanLine([prefixLength, 0]));\\n          }\\n\\n          return new HuffmanTable(lines, false);\\n        }\\n\\n        var standardTablesCache = {};\\n\\n        function getStandardTable(number) {\\n          var table = standardTablesCache[number];\\n\\n          if (table) {\\n            return table;\\n          }\\n\\n          var lines;\\n\\n          switch (number) {\\n            case 1:\\n              lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\\n              break;\\n\\n            case 2:\\n              lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\\n              break;\\n\\n            case 3:\\n              lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\\n              break;\\n\\n            case 4:\\n              lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\\n              break;\\n\\n            case 5:\\n              lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\\n              break;\\n\\n            case 6:\\n              lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\\n              break;\\n\\n            case 7:\\n              lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\\n              break;\\n\\n            case 8:\\n              lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\\n              break;\\n\\n            case 9:\\n              lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\\n              break;\\n\\n            case 10:\\n              lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\\n              break;\\n\\n            case 11:\\n              lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\\n              break;\\n\\n            case 12:\\n              lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\\n              break;\\n\\n            case 13:\\n              lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\\n              break;\\n\\n            case 14:\\n              lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\\n              break;\\n\\n            case 15:\\n              lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\\n              break;\\n\\n            default:\\n              throw new Jbig2Error(\\\"standard table B.\\\".concat(number, \\\" does not exist\\\"));\\n          }\\n\\n          var length = lines.length,\\n              i;\\n\\n          for (i = 0; i < length; i++) {\\n            lines[i] = new HuffmanLine(lines[i]);\\n          }\\n\\n          table = new HuffmanTable(lines, true);\\n          standardTablesCache[number] = table;\\n          return table;\\n        }\\n\\n        function Reader(data, start, end) {\\n          this.data = data;\\n          this.start = start;\\n          this.end = end;\\n          this.position = start;\\n          this.shift = -1;\\n          this.currentByte = 0;\\n        }\\n\\n        Reader.prototype = {\\n          readBit: function readBit() {\\n            if (this.shift < 0) {\\n              if (this.position >= this.end) {\\n                throw new Jbig2Error('end of data while reading bit');\\n              }\\n\\n              this.currentByte = this.data[this.position++];\\n              this.shift = 7;\\n            }\\n\\n            var bit = this.currentByte >> this.shift & 1;\\n            this.shift--;\\n            return bit;\\n          },\\n          readBits: function readBits(numBits) {\\n            var result = 0,\\n                i;\\n\\n            for (i = numBits - 1; i >= 0; i--) {\\n              result |= this.readBit() << i;\\n            }\\n\\n            return result;\\n          },\\n          byteAlign: function byteAlign() {\\n            this.shift = -1;\\n          },\\n          next: function next() {\\n            if (this.position >= this.end) {\\n              return -1;\\n            }\\n\\n            return this.data[this.position++];\\n          }\\n        };\\n\\n        function getCustomHuffmanTable(index, referredTo, customTables) {\\n          var currentIndex = 0,\\n              i,\\n              ii = referredTo.length,\\n              table;\\n\\n          for (i = 0; i < ii; i++) {\\n            table = customTables[referredTo[i]];\\n\\n            if (table) {\\n              if (index === currentIndex) {\\n                return table;\\n              }\\n\\n              currentIndex++;\\n            }\\n          }\\n\\n          throw new Jbig2Error('can\\\\'t find custom Huffman table');\\n        }\\n\\n        function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\\n          var codes = [],\\n              i,\\n              codeLength;\\n\\n          for (i = 0; i <= 34; i++) {\\n            codeLength = reader.readBits(4);\\n            codes.push(new HuffmanLine([i, codeLength, 0, 0]));\\n          }\\n\\n          var runCodesTable = new HuffmanTable(codes, false);\\n          codes.length = 0;\\n\\n          for (i = 0; i < numberOfSymbols;) {\\n            codeLength = runCodesTable.decode(reader);\\n\\n            if (codeLength >= 32) {\\n              var repeatedLength = void 0,\\n                  numberOfRepeats = void 0,\\n                  j = void 0;\\n\\n              switch (codeLength) {\\n                case 32:\\n                  if (i === 0) {\\n                    throw new Jbig2Error('no previous value in symbol ID table');\\n                  }\\n\\n                  numberOfRepeats = reader.readBits(2) + 3;\\n                  repeatedLength = codes[i - 1].prefixLength;\\n                  break;\\n\\n                case 33:\\n                  numberOfRepeats = reader.readBits(3) + 3;\\n                  repeatedLength = 0;\\n                  break;\\n\\n                case 34:\\n                  numberOfRepeats = reader.readBits(7) + 11;\\n                  repeatedLength = 0;\\n                  break;\\n\\n                default:\\n                  throw new Jbig2Error('invalid code length in symbol ID table');\\n              }\\n\\n              for (j = 0; j < numberOfRepeats; j++) {\\n                codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\\n                i++;\\n              }\\n            } else {\\n              codes.push(new HuffmanLine([i, codeLength, 0, 0]));\\n              i++;\\n            }\\n          }\\n\\n          reader.byteAlign();\\n          var symbolIDTable = new HuffmanTable(codes, false);\\n          var customIndex = 0,\\n              tableFirstS,\\n              tableDeltaS,\\n              tableDeltaT;\\n\\n          switch (textRegion.huffmanFS) {\\n            case 0:\\n            case 1:\\n              tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\\n              break;\\n\\n            case 3:\\n              tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n              customIndex++;\\n              break;\\n\\n            default:\\n              throw new Jbig2Error('invalid Huffman FS selector');\\n          }\\n\\n          switch (textRegion.huffmanDS) {\\n            case 0:\\n            case 1:\\n            case 2:\\n              tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\\n              break;\\n\\n            case 3:\\n              tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n              customIndex++;\\n              break;\\n\\n            default:\\n              throw new Jbig2Error('invalid Huffman DS selector');\\n          }\\n\\n          switch (textRegion.huffmanDT) {\\n            case 0:\\n            case 1:\\n            case 2:\\n              tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\\n              break;\\n\\n            case 3:\\n              tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n              customIndex++;\\n              break;\\n\\n            default:\\n              throw new Jbig2Error('invalid Huffman DT selector');\\n          }\\n\\n          if (textRegion.refinement) {\\n            throw new Jbig2Error('refinement with Huffman is not supported');\\n          }\\n\\n          return {\\n            symbolIDTable: symbolIDTable,\\n            tableFirstS: tableFirstS,\\n            tableDeltaS: tableDeltaS,\\n            tableDeltaT: tableDeltaT\\n          };\\n        }\\n\\n        function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\\n          var customIndex = 0,\\n              tableDeltaHeight,\\n              tableDeltaWidth;\\n\\n          switch (dictionary.huffmanDHSelector) {\\n            case 0:\\n            case 1:\\n              tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\\n              break;\\n\\n            case 3:\\n              tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n              customIndex++;\\n              break;\\n\\n            default:\\n              throw new Jbig2Error('invalid Huffman DH selector');\\n          }\\n\\n          switch (dictionary.huffmanDWSelector) {\\n            case 0:\\n            case 1:\\n              tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\\n              break;\\n\\n            case 3:\\n              tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n              customIndex++;\\n              break;\\n\\n            default:\\n              throw new Jbig2Error('invalid Huffman DW selector');\\n          }\\n\\n          var tableBitmapSize, tableAggregateInstances;\\n\\n          if (dictionary.bitmapSizeSelector) {\\n            tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n            customIndex++;\\n          } else {\\n            tableBitmapSize = getStandardTable(1);\\n          }\\n\\n          if (dictionary.aggregationInstancesSelector) {\\n            tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\\n          } else {\\n            tableAggregateInstances = getStandardTable(1);\\n          }\\n\\n          return {\\n            tableDeltaHeight: tableDeltaHeight,\\n            tableDeltaWidth: tableDeltaWidth,\\n            tableBitmapSize: tableBitmapSize,\\n            tableAggregateInstances: tableAggregateInstances\\n          };\\n        }\\n\\n        function readUncompressedBitmap(reader, width, height) {\\n          var bitmap = [],\\n              x,\\n              y,\\n              row;\\n\\n          for (y = 0; y < height; y++) {\\n            row = new Uint8Array(width);\\n            bitmap.push(row);\\n\\n            for (x = 0; x < width; x++) {\\n              row[x] = reader.readBit();\\n            }\\n\\n            reader.byteAlign();\\n          }\\n\\n          return bitmap;\\n        }\\n\\n        function decodeMMRBitmap(input, width, height, endOfBlock) {\\n          var params = {\\n            K: -1,\\n            Columns: width,\\n            Rows: height,\\n            BlackIs1: true,\\n            EndOfBlock: endOfBlock\\n          };\\n          var decoder = new _ccitt.CCITTFaxDecoder(input, params);\\n          var bitmap = [],\\n              x,\\n              y,\\n              row,\\n              currentByte,\\n              shift,\\n              eof = false;\\n\\n          for (y = 0; y < height; y++) {\\n            row = new Uint8Array(width);\\n            bitmap.push(row);\\n            shift = -1;\\n\\n            for (x = 0; x < width; x++) {\\n              if (shift < 0) {\\n                currentByte = decoder.readNextChar();\\n\\n                if (currentByte === -1) {\\n                  currentByte = 0;\\n                  eof = true;\\n                }\\n\\n                shift = 7;\\n              }\\n\\n              row[x] = currentByte >> shift & 1;\\n              shift--;\\n            }\\n          }\\n\\n          if (endOfBlock && !eof) {\\n            var lookForEOFLimit = 5;\\n\\n            for (var i = 0; i < lookForEOFLimit; i++) {\\n              if (decoder.readNextChar() === -1) {\\n                break;\\n              }\\n            }\\n          }\\n\\n          return bitmap;\\n        }\\n\\n        function Jbig2Image() {}\\n\\n        Jbig2Image.prototype = {\\n          parseChunks: function parseChunks(chunks) {\\n            return parseJbig2Chunks(chunks);\\n          },\\n          parse: function parse(data) {\\n            var _parseJbig = parseJbig2(data),\\n                imgData = _parseJbig.imgData,\\n                width = _parseJbig.width,\\n                height = _parseJbig.height;\\n\\n            this.width = width;\\n            this.height = height;\\n            return imgData;\\n          }\\n        };\\n        return Jbig2Image;\\n      }();\\n\\n      exports.Jbig2Image = Jbig2Image;\\n      /***/\\n    },\\n    /* 162 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.ArithmeticDecoder = void 0;\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var QeTable = [{\\n        qe: 0x5601,\\n        nmps: 1,\\n        nlps: 1,\\n        switchFlag: 1\\n      }, {\\n        qe: 0x3401,\\n        nmps: 2,\\n        nlps: 6,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1801,\\n        nmps: 3,\\n        nlps: 9,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0AC1,\\n        nmps: 4,\\n        nlps: 12,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0521,\\n        nmps: 5,\\n        nlps: 29,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0221,\\n        nmps: 38,\\n        nlps: 33,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x5601,\\n        nmps: 7,\\n        nlps: 6,\\n        switchFlag: 1\\n      }, {\\n        qe: 0x5401,\\n        nmps: 8,\\n        nlps: 14,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x4801,\\n        nmps: 9,\\n        nlps: 14,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x3801,\\n        nmps: 10,\\n        nlps: 14,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x3001,\\n        nmps: 11,\\n        nlps: 17,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x2401,\\n        nmps: 12,\\n        nlps: 18,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1C01,\\n        nmps: 13,\\n        nlps: 20,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1601,\\n        nmps: 29,\\n        nlps: 21,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x5601,\\n        nmps: 15,\\n        nlps: 14,\\n        switchFlag: 1\\n      }, {\\n        qe: 0x5401,\\n        nmps: 16,\\n        nlps: 14,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x5101,\\n        nmps: 17,\\n        nlps: 15,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x4801,\\n        nmps: 18,\\n        nlps: 16,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x3801,\\n        nmps: 19,\\n        nlps: 17,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x3401,\\n        nmps: 20,\\n        nlps: 18,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x3001,\\n        nmps: 21,\\n        nlps: 19,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x2801,\\n        nmps: 22,\\n        nlps: 19,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x2401,\\n        nmps: 23,\\n        nlps: 20,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x2201,\\n        nmps: 24,\\n        nlps: 21,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1C01,\\n        nmps: 25,\\n        nlps: 22,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1801,\\n        nmps: 26,\\n        nlps: 23,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1601,\\n        nmps: 27,\\n        nlps: 24,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1401,\\n        nmps: 28,\\n        nlps: 25,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1201,\\n        nmps: 29,\\n        nlps: 26,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x1101,\\n        nmps: 30,\\n        nlps: 27,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0AC1,\\n        nmps: 31,\\n        nlps: 28,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x09C1,\\n        nmps: 32,\\n        nlps: 29,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x08A1,\\n        nmps: 33,\\n        nlps: 30,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0521,\\n        nmps: 34,\\n        nlps: 31,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0441,\\n        nmps: 35,\\n        nlps: 32,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x02A1,\\n        nmps: 36,\\n        nlps: 33,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0221,\\n        nmps: 37,\\n        nlps: 34,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0141,\\n        nmps: 38,\\n        nlps: 35,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0111,\\n        nmps: 39,\\n        nlps: 36,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0085,\\n        nmps: 40,\\n        nlps: 37,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0049,\\n        nmps: 41,\\n        nlps: 38,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0025,\\n        nmps: 42,\\n        nlps: 39,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0015,\\n        nmps: 43,\\n        nlps: 40,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0009,\\n        nmps: 44,\\n        nlps: 41,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0005,\\n        nmps: 45,\\n        nlps: 42,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x0001,\\n        nmps: 45,\\n        nlps: 43,\\n        switchFlag: 0\\n      }, {\\n        qe: 0x5601,\\n        nmps: 46,\\n        nlps: 46,\\n        switchFlag: 0\\n      }];\\n\\n      var ArithmeticDecoder =\\n      /*#__PURE__*/\\n      function () {\\n        function ArithmeticDecoder(data, start, end) {\\n          _classCallCheck(this, ArithmeticDecoder);\\n\\n          this.data = data;\\n          this.bp = start;\\n          this.dataEnd = end;\\n          this.chigh = data[start];\\n          this.clow = 0;\\n          this.byteIn();\\n          this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\\n          this.clow = this.clow << 7 & 0xFFFF;\\n          this.ct -= 7;\\n          this.a = 0x8000;\\n        }\\n\\n        _createClass(ArithmeticDecoder, [{\\n          key: \\\"byteIn\\\",\\n          value: function byteIn() {\\n            var data = this.data;\\n            var bp = this.bp;\\n\\n            if (data[bp] === 0xFF) {\\n              if (data[bp + 1] > 0x8F) {\\n                this.clow += 0xFF00;\\n                this.ct = 8;\\n              } else {\\n                bp++;\\n                this.clow += data[bp] << 9;\\n                this.ct = 7;\\n                this.bp = bp;\\n              }\\n            } else {\\n              bp++;\\n              this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\\n              this.ct = 8;\\n              this.bp = bp;\\n            }\\n\\n            if (this.clow > 0xFFFF) {\\n              this.chigh += this.clow >> 16;\\n              this.clow &= 0xFFFF;\\n            }\\n          }\\n        }, {\\n          key: \\\"readBit\\\",\\n          value: function readBit(contexts, pos) {\\n            var cx_index = contexts[pos] >> 1,\\n                cx_mps = contexts[pos] & 1;\\n            var qeTableIcx = QeTable[cx_index];\\n            var qeIcx = qeTableIcx.qe;\\n            var d;\\n            var a = this.a - qeIcx;\\n\\n            if (this.chigh < qeIcx) {\\n              if (a < qeIcx) {\\n                a = qeIcx;\\n                d = cx_mps;\\n                cx_index = qeTableIcx.nmps;\\n              } else {\\n                a = qeIcx;\\n                d = 1 ^ cx_mps;\\n\\n                if (qeTableIcx.switchFlag === 1) {\\n                  cx_mps = d;\\n                }\\n\\n                cx_index = qeTableIcx.nlps;\\n              }\\n            } else {\\n              this.chigh -= qeIcx;\\n\\n              if ((a & 0x8000) !== 0) {\\n                this.a = a;\\n                return cx_mps;\\n              }\\n\\n              if (a < qeIcx) {\\n                d = 1 ^ cx_mps;\\n\\n                if (qeTableIcx.switchFlag === 1) {\\n                  cx_mps = d;\\n                }\\n\\n                cx_index = qeTableIcx.nlps;\\n              } else {\\n                d = cx_mps;\\n                cx_index = qeTableIcx.nmps;\\n              }\\n            }\\n\\n            do {\\n              if (this.ct === 0) {\\n                this.byteIn();\\n              }\\n\\n              a <<= 1;\\n              this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\\n              this.clow = this.clow << 1 & 0xFFFF;\\n              this.ct--;\\n            } while ((a & 0x8000) === 0);\\n\\n            this.a = a;\\n            contexts[pos] = cx_index << 1 | cx_mps;\\n            return d;\\n          }\\n        }]);\\n\\n        return ArithmeticDecoder;\\n      }();\\n\\n      exports.ArithmeticDecoder = ArithmeticDecoder;\\n      /***/\\n    },\\n    /* 163 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.JpegStream = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _jpg = __w_pdfjs_require__(164);\\n\\n      var JpegStream = function JpegStreamClosure() {\\n        function JpegStream(stream, maybeLength, dict, params) {\\n          var ch;\\n\\n          while ((ch = stream.getByte()) !== -1) {\\n            if (ch === 0xFF) {\\n              stream.skip(-1);\\n              break;\\n            }\\n          }\\n\\n          this.stream = stream;\\n          this.maybeLength = maybeLength;\\n          this.dict = dict;\\n          this.params = params;\\n\\n          _stream.DecodeStream.call(this, maybeLength);\\n        }\\n\\n        JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n        Object.defineProperty(JpegStream.prototype, 'bytes', {\\n          get: function JpegStream_bytes() {\\n            return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n          },\\n          configurable: true\\n        });\\n\\n        JpegStream.prototype.ensureBuffer = function (requested) {};\\n\\n        JpegStream.prototype.readBlock = function () {\\n          if (this.eof) {\\n            return;\\n          }\\n\\n          var jpegOptions = {\\n            decodeTransform: undefined,\\n            colorTransform: undefined\\n          };\\n          var decodeArr = this.dict.getArray('Decode', 'D');\\n\\n          if (this.forceRGB && Array.isArray(decodeArr)) {\\n            var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\\n            var decodeArrLength = decodeArr.length;\\n            var transform = new Int32Array(decodeArrLength);\\n            var transformNeeded = false;\\n            var maxValue = (1 << bitsPerComponent) - 1;\\n\\n            for (var i = 0; i < decodeArrLength; i += 2) {\\n              transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\\n              transform[i + 1] = decodeArr[i] * maxValue | 0;\\n\\n              if (transform[i] !== 256 || transform[i + 1] !== 0) {\\n                transformNeeded = true;\\n              }\\n            }\\n\\n            if (transformNeeded) {\\n              jpegOptions.decodeTransform = transform;\\n            }\\n          }\\n\\n          if ((0, _primitives.isDict)(this.params)) {\\n            var colorTransform = this.params.get('ColorTransform');\\n\\n            if (Number.isInteger(colorTransform)) {\\n              jpegOptions.colorTransform = colorTransform;\\n            }\\n          }\\n\\n          var jpegImage = new _jpg.JpegImage(jpegOptions);\\n          jpegImage.parse(this.bytes);\\n          var data = jpegImage.getData({\\n            width: this.drawWidth,\\n            height: this.drawHeight,\\n            forceRGB: this.forceRGB,\\n            isSourcePDF: true\\n          });\\n          this.buffer = data;\\n          this.bufferLength = data.length;\\n          this.eof = true;\\n        };\\n\\n        JpegStream.prototype.getIR = function () {\\n          var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n          return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\\n        };\\n\\n        return JpegStream;\\n      }();\\n\\n      exports.JpegStream = JpegStream;\\n      /***/\\n    },\\n    /* 164 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.JpegImage = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      var JpegError = function JpegErrorClosure() {\\n        function JpegError(msg) {\\n          this.message = 'JPEG error: ' + msg;\\n        }\\n\\n        JpegError.prototype = new Error();\\n        JpegError.prototype.name = 'JpegError';\\n        JpegError.constructor = JpegError;\\n        return JpegError;\\n      }();\\n\\n      var DNLMarkerError = function DNLMarkerErrorClosure() {\\n        function DNLMarkerError(message, scanLines) {\\n          this.message = message;\\n          this.scanLines = scanLines;\\n        }\\n\\n        DNLMarkerError.prototype = new Error();\\n        DNLMarkerError.prototype.name = 'DNLMarkerError';\\n        DNLMarkerError.constructor = DNLMarkerError;\\n        return DNLMarkerError;\\n      }();\\n\\n      var EOIMarkerError = function EOIMarkerErrorClosure() {\\n        function EOIMarkerError(message) {\\n          this.message = message;\\n        }\\n\\n        EOIMarkerError.prototype = new Error();\\n        EOIMarkerError.prototype.name = 'EOIMarkerError';\\n        EOIMarkerError.constructor = EOIMarkerError;\\n        return EOIMarkerError;\\n      }();\\n\\n      var JpegImage = function JpegImageClosure() {\\n        var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\\n        var dctCos1 = 4017;\\n        var dctSin1 = 799;\\n        var dctCos3 = 3406;\\n        var dctSin3 = 2276;\\n        var dctCos6 = 1567;\\n        var dctSin6 = 3784;\\n        var dctSqrt2 = 5793;\\n        var dctSqrt1d2 = 2896;\\n\\n        function JpegImage() {\\n          var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\n              _ref$decodeTransform = _ref.decodeTransform,\\n              decodeTransform = _ref$decodeTransform === void 0 ? null : _ref$decodeTransform,\\n              _ref$colorTransform = _ref.colorTransform,\\n              colorTransform = _ref$colorTransform === void 0 ? -1 : _ref$colorTransform;\\n\\n          this._decodeTransform = decodeTransform;\\n          this._colorTransform = colorTransform;\\n        }\\n\\n        function buildHuffmanTable(codeLengths, values) {\\n          var k = 0,\\n              code = [],\\n              i,\\n              j,\\n              length = 16;\\n\\n          while (length > 0 && !codeLengths[length - 1]) {\\n            length--;\\n          }\\n\\n          code.push({\\n            children: [],\\n            index: 0\\n          });\\n          var p = code[0],\\n              q;\\n\\n          for (i = 0; i < length; i++) {\\n            for (j = 0; j < codeLengths[i]; j++) {\\n              p = code.pop();\\n              p.children[p.index] = values[k];\\n\\n              while (p.index > 0) {\\n                p = code.pop();\\n              }\\n\\n              p.index++;\\n              code.push(p);\\n\\n              while (code.length <= i) {\\n                code.push(q = {\\n                  children: [],\\n                  index: 0\\n                });\\n                p.children[p.index] = q.children;\\n                p = q;\\n              }\\n\\n              k++;\\n            }\\n\\n            if (i + 1 < length) {\\n              code.push(q = {\\n                children: [],\\n                index: 0\\n              });\\n              p.children[p.index] = q.children;\\n              p = q;\\n            }\\n          }\\n\\n          return code[0].children;\\n        }\\n\\n        function getBlockBufferOffset(component, row, col) {\\n          return 64 * ((component.blocksPerLine + 1) * row + col);\\n        }\\n\\n        function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\\n          var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\\n          var mcusPerLine = frame.mcusPerLine;\\n          var progressive = frame.progressive;\\n          var startOffset = offset,\\n              bitsData = 0,\\n              bitsCount = 0;\\n\\n          function readBit() {\\n            if (bitsCount > 0) {\\n              bitsCount--;\\n              return bitsData >> bitsCount & 1;\\n            }\\n\\n            bitsData = data[offset++];\\n\\n            if (bitsData === 0xFF) {\\n              var nextByte = data[offset++];\\n\\n              if (nextByte) {\\n                if (nextByte === 0xDC && parseDNLMarker) {\\n                  offset += 2;\\n                  var scanLines = data[offset++] << 8 | data[offset++];\\n\\n                  if (scanLines > 0 && scanLines !== frame.scanLines) {\\n                    throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\\n                  }\\n                } else if (nextByte === 0xD9) {\\n                  throw new EOIMarkerError('Found EOI marker (0xFFD9) while parsing scan data');\\n                }\\n\\n                throw new JpegError(\\\"unexpected marker \\\".concat((bitsData << 8 | nextByte).toString(16)));\\n              }\\n            }\\n\\n            bitsCount = 7;\\n            return bitsData >>> 7;\\n          }\\n\\n          function decodeHuffman(tree) {\\n            var node = tree;\\n\\n            while (true) {\\n              node = node[readBit()];\\n\\n              if (typeof node === 'number') {\\n                return node;\\n              }\\n\\n              if (_typeof(node) !== 'object') {\\n                throw new JpegError('invalid huffman sequence');\\n              }\\n            }\\n          }\\n\\n          function receive(length) {\\n            var n = 0;\\n\\n            while (length > 0) {\\n              n = n << 1 | readBit();\\n              length--;\\n            }\\n\\n            return n;\\n          }\\n\\n          function receiveAndExtend(length) {\\n            if (length === 1) {\\n              return readBit() === 1 ? 1 : -1;\\n            }\\n\\n            var n = receive(length);\\n\\n            if (n >= 1 << length - 1) {\\n              return n;\\n            }\\n\\n            return n + (-1 << length) + 1;\\n          }\\n\\n          function decodeBaseline(component, offset) {\\n            var t = decodeHuffman(component.huffmanTableDC);\\n            var diff = t === 0 ? 0 : receiveAndExtend(t);\\n            component.blockData[offset] = component.pred += diff;\\n            var k = 1;\\n\\n            while (k < 64) {\\n              var rs = decodeHuffman(component.huffmanTableAC);\\n              var s = rs & 15,\\n                  r = rs >> 4;\\n\\n              if (s === 0) {\\n                if (r < 15) {\\n                  break;\\n                }\\n\\n                k += 16;\\n                continue;\\n              }\\n\\n              k += r;\\n              var z = dctZigZag[k];\\n              component.blockData[offset + z] = receiveAndExtend(s);\\n              k++;\\n            }\\n          }\\n\\n          function decodeDCFirst(component, offset) {\\n            var t = decodeHuffman(component.huffmanTableDC);\\n            var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\\n            component.blockData[offset] = component.pred += diff;\\n          }\\n\\n          function decodeDCSuccessive(component, offset) {\\n            component.blockData[offset] |= readBit() << successive;\\n          }\\n\\n          var eobrun = 0;\\n\\n          function decodeACFirst(component, offset) {\\n            if (eobrun > 0) {\\n              eobrun--;\\n              return;\\n            }\\n\\n            var k = spectralStart,\\n                e = spectralEnd;\\n\\n            while (k <= e) {\\n              var rs = decodeHuffman(component.huffmanTableAC);\\n              var s = rs & 15,\\n                  r = rs >> 4;\\n\\n              if (s === 0) {\\n                if (r < 15) {\\n                  eobrun = receive(r) + (1 << r) - 1;\\n                  break;\\n                }\\n\\n                k += 16;\\n                continue;\\n              }\\n\\n              k += r;\\n              var z = dctZigZag[k];\\n              component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\\n              k++;\\n            }\\n          }\\n\\n          var successiveACState = 0,\\n              successiveACNextValue;\\n\\n          function decodeACSuccessive(component, offset) {\\n            var k = spectralStart;\\n            var e = spectralEnd;\\n            var r = 0;\\n            var s;\\n            var rs;\\n\\n            while (k <= e) {\\n              var offsetZ = offset + dctZigZag[k];\\n              var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\\n\\n              switch (successiveACState) {\\n                case 0:\\n                  rs = decodeHuffman(component.huffmanTableAC);\\n                  s = rs & 15;\\n                  r = rs >> 4;\\n\\n                  if (s === 0) {\\n                    if (r < 15) {\\n                      eobrun = receive(r) + (1 << r);\\n                      successiveACState = 4;\\n                    } else {\\n                      r = 16;\\n                      successiveACState = 1;\\n                    }\\n                  } else {\\n                    if (s !== 1) {\\n                      throw new JpegError('invalid ACn encoding');\\n                    }\\n\\n                    successiveACNextValue = receiveAndExtend(s);\\n                    successiveACState = r ? 2 : 3;\\n                  }\\n\\n                  continue;\\n\\n                case 1:\\n                case 2:\\n                  if (component.blockData[offsetZ]) {\\n                    component.blockData[offsetZ] += sign * (readBit() << successive);\\n                  } else {\\n                    r--;\\n\\n                    if (r === 0) {\\n                      successiveACState = successiveACState === 2 ? 3 : 0;\\n                    }\\n                  }\\n\\n                  break;\\n\\n                case 3:\\n                  if (component.blockData[offsetZ]) {\\n                    component.blockData[offsetZ] += sign * (readBit() << successive);\\n                  } else {\\n                    component.blockData[offsetZ] = successiveACNextValue << successive;\\n                    successiveACState = 0;\\n                  }\\n\\n                  break;\\n\\n                case 4:\\n                  if (component.blockData[offsetZ]) {\\n                    component.blockData[offsetZ] += sign * (readBit() << successive);\\n                  }\\n\\n                  break;\\n              }\\n\\n              k++;\\n            }\\n\\n            if (successiveACState === 4) {\\n              eobrun--;\\n\\n              if (eobrun === 0) {\\n                successiveACState = 0;\\n              }\\n            }\\n          }\\n\\n          function decodeMcu(component, decode, mcu, row, col) {\\n            var mcuRow = mcu / mcusPerLine | 0;\\n            var mcuCol = mcu % mcusPerLine;\\n            var blockRow = mcuRow * component.v + row;\\n            var blockCol = mcuCol * component.h + col;\\n            var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n            decode(component, offset);\\n          }\\n\\n          function decodeBlock(component, decode, mcu) {\\n            var blockRow = mcu / component.blocksPerLine | 0;\\n            var blockCol = mcu % component.blocksPerLine;\\n            var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n            decode(component, offset);\\n          }\\n\\n          var componentsLength = components.length;\\n          var component, i, j, k, n;\\n          var decodeFn;\\n\\n          if (progressive) {\\n            if (spectralStart === 0) {\\n              decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\\n            } else {\\n              decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\\n            }\\n          } else {\\n            decodeFn = decodeBaseline;\\n          }\\n\\n          var mcu = 0,\\n              fileMarker;\\n          var mcuExpected;\\n\\n          if (componentsLength === 1) {\\n            mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\\n          } else {\\n            mcuExpected = mcusPerLine * frame.mcusPerColumn;\\n          }\\n\\n          var h, v;\\n\\n          while (mcu < mcuExpected) {\\n            var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\\n\\n            for (i = 0; i < componentsLength; i++) {\\n              components[i].pred = 0;\\n            }\\n\\n            eobrun = 0;\\n\\n            if (componentsLength === 1) {\\n              component = components[0];\\n\\n              for (n = 0; n < mcuToRead; n++) {\\n                decodeBlock(component, decodeFn, mcu);\\n                mcu++;\\n              }\\n            } else {\\n              for (n = 0; n < mcuToRead; n++) {\\n                for (i = 0; i < componentsLength; i++) {\\n                  component = components[i];\\n                  h = component.h;\\n                  v = component.v;\\n\\n                  for (j = 0; j < v; j++) {\\n                    for (k = 0; k < h; k++) {\\n                      decodeMcu(component, decodeFn, mcu, j, k);\\n                    }\\n                  }\\n                }\\n\\n                mcu++;\\n              }\\n            }\\n\\n            bitsCount = 0;\\n            fileMarker = findNextFileMarker(data, offset);\\n\\n            if (fileMarker && fileMarker.invalid) {\\n              (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\\n              offset = fileMarker.offset;\\n            }\\n\\n            var marker = fileMarker && fileMarker.marker;\\n\\n            if (!marker || marker <= 0xFF00) {\\n              throw new JpegError('marker was not found');\\n            }\\n\\n            if (marker >= 0xFFD0 && marker <= 0xFFD7) {\\n              offset += 2;\\n            } else {\\n              break;\\n            }\\n          }\\n\\n          fileMarker = findNextFileMarker(data, offset);\\n\\n          if (fileMarker && fileMarker.invalid) {\\n            (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\\n            offset = fileMarker.offset;\\n          }\\n\\n          return offset - startOffset;\\n        }\\n\\n        function quantizeAndInverse(component, blockBufferOffset, p) {\\n          var qt = component.quantizationTable,\\n              blockData = component.blockData;\\n          var v0, v1, v2, v3, v4, v5, v6, v7;\\n          var p0, p1, p2, p3, p4, p5, p6, p7;\\n          var t;\\n\\n          if (!qt) {\\n            throw new JpegError('missing required Quantization Table.');\\n          }\\n\\n          for (var row = 0; row < 64; row += 8) {\\n            p0 = blockData[blockBufferOffset + row];\\n            p1 = blockData[blockBufferOffset + row + 1];\\n            p2 = blockData[blockBufferOffset + row + 2];\\n            p3 = blockData[blockBufferOffset + row + 3];\\n            p4 = blockData[blockBufferOffset + row + 4];\\n            p5 = blockData[blockBufferOffset + row + 5];\\n            p6 = blockData[blockBufferOffset + row + 6];\\n            p7 = blockData[blockBufferOffset + row + 7];\\n            p0 *= qt[row];\\n\\n            if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\\n              t = dctSqrt2 * p0 + 512 >> 10;\\n              p[row] = t;\\n              p[row + 1] = t;\\n              p[row + 2] = t;\\n              p[row + 3] = t;\\n              p[row + 4] = t;\\n              p[row + 5] = t;\\n              p[row + 6] = t;\\n              p[row + 7] = t;\\n              continue;\\n            }\\n\\n            p1 *= qt[row + 1];\\n            p2 *= qt[row + 2];\\n            p3 *= qt[row + 3];\\n            p4 *= qt[row + 4];\\n            p5 *= qt[row + 5];\\n            p6 *= qt[row + 6];\\n            p7 *= qt[row + 7];\\n            v0 = dctSqrt2 * p0 + 128 >> 8;\\n            v1 = dctSqrt2 * p4 + 128 >> 8;\\n            v2 = p2;\\n            v3 = p6;\\n            v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\\n            v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\\n            v5 = p3 << 4;\\n            v6 = p5 << 4;\\n            v0 = v0 + v1 + 1 >> 1;\\n            v1 = v0 - v1;\\n            t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\\n            v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\\n            v3 = t;\\n            v4 = v4 + v6 + 1 >> 1;\\n            v6 = v4 - v6;\\n            v7 = v7 + v5 + 1 >> 1;\\n            v5 = v7 - v5;\\n            v0 = v0 + v3 + 1 >> 1;\\n            v3 = v0 - v3;\\n            v1 = v1 + v2 + 1 >> 1;\\n            v2 = v1 - v2;\\n            t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\\n            v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\\n            v7 = t;\\n            t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\\n            v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\\n            v6 = t;\\n            p[row] = v0 + v7;\\n            p[row + 7] = v0 - v7;\\n            p[row + 1] = v1 + v6;\\n            p[row + 6] = v1 - v6;\\n            p[row + 2] = v2 + v5;\\n            p[row + 5] = v2 - v5;\\n            p[row + 3] = v3 + v4;\\n            p[row + 4] = v3 - v4;\\n          }\\n\\n          for (var col = 0; col < 8; ++col) {\\n            p0 = p[col];\\n            p1 = p[col + 8];\\n            p2 = p[col + 16];\\n            p3 = p[col + 24];\\n            p4 = p[col + 32];\\n            p5 = p[col + 40];\\n            p6 = p[col + 48];\\n            p7 = p[col + 56];\\n\\n            if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\\n              t = dctSqrt2 * p0 + 8192 >> 14;\\n              t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\\n              blockData[blockBufferOffset + col] = t;\\n              blockData[blockBufferOffset + col + 8] = t;\\n              blockData[blockBufferOffset + col + 16] = t;\\n              blockData[blockBufferOffset + col + 24] = t;\\n              blockData[blockBufferOffset + col + 32] = t;\\n              blockData[blockBufferOffset + col + 40] = t;\\n              blockData[blockBufferOffset + col + 48] = t;\\n              blockData[blockBufferOffset + col + 56] = t;\\n              continue;\\n            }\\n\\n            v0 = dctSqrt2 * p0 + 2048 >> 12;\\n            v1 = dctSqrt2 * p4 + 2048 >> 12;\\n            v2 = p2;\\n            v3 = p6;\\n            v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\\n            v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\\n            v5 = p3;\\n            v6 = p5;\\n            v0 = (v0 + v1 + 1 >> 1) + 4112;\\n            v1 = v0 - v1;\\n            t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\\n            v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\\n            v3 = t;\\n            v4 = v4 + v6 + 1 >> 1;\\n            v6 = v4 - v6;\\n            v7 = v7 + v5 + 1 >> 1;\\n            v5 = v7 - v5;\\n            v0 = v0 + v3 + 1 >> 1;\\n            v3 = v0 - v3;\\n            v1 = v1 + v2 + 1 >> 1;\\n            v2 = v1 - v2;\\n            t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\\n            v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\\n            v7 = t;\\n            t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\\n            v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\\n            v6 = t;\\n            p0 = v0 + v7;\\n            p7 = v0 - v7;\\n            p1 = v1 + v6;\\n            p6 = v1 - v6;\\n            p2 = v2 + v5;\\n            p5 = v2 - v5;\\n            p3 = v3 + v4;\\n            p4 = v3 - v4;\\n            p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\\n            p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\\n            p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\\n            p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\\n            p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\\n            p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\\n            p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\\n            p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\\n            blockData[blockBufferOffset + col] = p0;\\n            blockData[blockBufferOffset + col + 8] = p1;\\n            blockData[blockBufferOffset + col + 16] = p2;\\n            blockData[blockBufferOffset + col + 24] = p3;\\n            blockData[blockBufferOffset + col + 32] = p4;\\n            blockData[blockBufferOffset + col + 40] = p5;\\n            blockData[blockBufferOffset + col + 48] = p6;\\n            blockData[blockBufferOffset + col + 56] = p7;\\n          }\\n        }\\n\\n        function buildComponentData(frame, component) {\\n          var blocksPerLine = component.blocksPerLine;\\n          var blocksPerColumn = component.blocksPerColumn;\\n          var computationBuffer = new Int16Array(64);\\n\\n          for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\\n            for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\\n              var offset = getBlockBufferOffset(component, blockRow, blockCol);\\n              quantizeAndInverse(component, offset, computationBuffer);\\n            }\\n          }\\n\\n          return component.blockData;\\n        }\\n\\n        function findNextFileMarker(data, currentPos) {\\n          var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\\n\\n          function peekUint16(pos) {\\n            return data[pos] << 8 | data[pos + 1];\\n          }\\n\\n          var maxPos = data.length - 1;\\n          var newPos = startPos < currentPos ? startPos : currentPos;\\n\\n          if (currentPos >= maxPos) {\\n            return null;\\n          }\\n\\n          var currentMarker = peekUint16(currentPos);\\n\\n          if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\\n            return {\\n              invalid: null,\\n              marker: currentMarker,\\n              offset: currentPos\\n            };\\n          }\\n\\n          var newMarker = peekUint16(newPos);\\n\\n          while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\\n            if (++newPos >= maxPos) {\\n              return null;\\n            }\\n\\n            newMarker = peekUint16(newPos);\\n          }\\n\\n          return {\\n            invalid: currentMarker.toString(16),\\n            marker: newMarker,\\n            offset: newPos\\n          };\\n        }\\n\\n        JpegImage.prototype = {\\n          parse: function parse(data) {\\n            var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\n                _ref2$dnlScanLines = _ref2.dnlScanLines,\\n                dnlScanLines = _ref2$dnlScanLines === void 0 ? null : _ref2$dnlScanLines;\\n\\n            function readUint16() {\\n              var value = data[offset] << 8 | data[offset + 1];\\n              offset += 2;\\n              return value;\\n            }\\n\\n            function readDataBlock() {\\n              var length = readUint16();\\n              var endOffset = offset + length - 2;\\n              var fileMarker = findNextFileMarker(data, endOffset, offset);\\n\\n              if (fileMarker && fileMarker.invalid) {\\n                (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\\n                endOffset = fileMarker.offset;\\n              }\\n\\n              var array = data.subarray(offset, endOffset);\\n              offset += array.length;\\n              return array;\\n            }\\n\\n            function prepareComponents(frame) {\\n              var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\\n              var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\\n\\n              for (var i = 0; i < frame.components.length; i++) {\\n                component = frame.components[i];\\n                var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\\n                var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\\n                var blocksPerLineForMcu = mcusPerLine * component.h;\\n                var blocksPerColumnForMcu = mcusPerColumn * component.v;\\n                var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\\n                component.blockData = new Int16Array(blocksBufferSize);\\n                component.blocksPerLine = blocksPerLine;\\n                component.blocksPerColumn = blocksPerColumn;\\n              }\\n\\n              frame.mcusPerLine = mcusPerLine;\\n              frame.mcusPerColumn = mcusPerColumn;\\n            }\\n\\n            var offset = 0;\\n            var jfif = null;\\n            var adobe = null;\\n            var frame, resetInterval;\\n            var numSOSMarkers = 0;\\n            var quantizationTables = [];\\n            var huffmanTablesAC = [],\\n                huffmanTablesDC = [];\\n            var fileMarker = readUint16();\\n\\n            if (fileMarker !== 0xFFD8) {\\n              throw new JpegError('SOI not found');\\n            }\\n\\n            fileMarker = readUint16();\\n\\n            markerLoop: while (fileMarker !== 0xFFD9) {\\n              var i, j, l;\\n\\n              switch (fileMarker) {\\n                case 0xFFE0:\\n                case 0xFFE1:\\n                case 0xFFE2:\\n                case 0xFFE3:\\n                case 0xFFE4:\\n                case 0xFFE5:\\n                case 0xFFE6:\\n                case 0xFFE7:\\n                case 0xFFE8:\\n                case 0xFFE9:\\n                case 0xFFEA:\\n                case 0xFFEB:\\n                case 0xFFEC:\\n                case 0xFFED:\\n                case 0xFFEE:\\n                case 0xFFEF:\\n                case 0xFFFE:\\n                  var appData = readDataBlock();\\n\\n                  if (fileMarker === 0xFFE0) {\\n                    if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\\n                      jfif = {\\n                        version: {\\n                          major: appData[5],\\n                          minor: appData[6]\\n                        },\\n                        densityUnits: appData[7],\\n                        xDensity: appData[8] << 8 | appData[9],\\n                        yDensity: appData[10] << 8 | appData[11],\\n                        thumbWidth: appData[12],\\n                        thumbHeight: appData[13],\\n                        thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\\n                      };\\n                    }\\n                  }\\n\\n                  if (fileMarker === 0xFFEE) {\\n                    if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\\n                      adobe = {\\n                        version: appData[5] << 8 | appData[6],\\n                        flags0: appData[7] << 8 | appData[8],\\n                        flags1: appData[9] << 8 | appData[10],\\n                        transformCode: appData[11]\\n                      };\\n                    }\\n                  }\\n\\n                  break;\\n\\n                case 0xFFDB:\\n                  var quantizationTablesLength = readUint16();\\n                  var quantizationTablesEnd = quantizationTablesLength + offset - 2;\\n                  var z;\\n\\n                  while (offset < quantizationTablesEnd) {\\n                    var quantizationTableSpec = data[offset++];\\n                    var tableData = new Uint16Array(64);\\n\\n                    if (quantizationTableSpec >> 4 === 0) {\\n                      for (j = 0; j < 64; j++) {\\n                        z = dctZigZag[j];\\n                        tableData[z] = data[offset++];\\n                      }\\n                    } else if (quantizationTableSpec >> 4 === 1) {\\n                      for (j = 0; j < 64; j++) {\\n                        z = dctZigZag[j];\\n                        tableData[z] = readUint16();\\n                      }\\n                    } else {\\n                      throw new JpegError('DQT - invalid table spec');\\n                    }\\n\\n                    quantizationTables[quantizationTableSpec & 15] = tableData;\\n                  }\\n\\n                  break;\\n\\n                case 0xFFC0:\\n                case 0xFFC1:\\n                case 0xFFC2:\\n                  if (frame) {\\n                    throw new JpegError('Only single frame JPEGs supported');\\n                  }\\n\\n                  readUint16();\\n                  frame = {};\\n                  frame.extended = fileMarker === 0xFFC1;\\n                  frame.progressive = fileMarker === 0xFFC2;\\n                  frame.precision = data[offset++];\\n                  var sofScanLines = readUint16();\\n                  frame.scanLines = dnlScanLines || sofScanLines;\\n                  frame.samplesPerLine = readUint16();\\n                  frame.components = [];\\n                  frame.componentIds = {};\\n                  var componentsCount = data[offset++],\\n                      componentId;\\n                  var maxH = 0,\\n                      maxV = 0;\\n\\n                  for (i = 0; i < componentsCount; i++) {\\n                    componentId = data[offset];\\n                    var h = data[offset + 1] >> 4;\\n                    var v = data[offset + 1] & 15;\\n\\n                    if (maxH < h) {\\n                      maxH = h;\\n                    }\\n\\n                    if (maxV < v) {\\n                      maxV = v;\\n                    }\\n\\n                    var qId = data[offset + 2];\\n                    l = frame.components.push({\\n                      h: h,\\n                      v: v,\\n                      quantizationId: qId,\\n                      quantizationTable: null\\n                    });\\n                    frame.componentIds[componentId] = l - 1;\\n                    offset += 3;\\n                  }\\n\\n                  frame.maxH = maxH;\\n                  frame.maxV = maxV;\\n                  prepareComponents(frame);\\n                  break;\\n\\n                case 0xFFC4:\\n                  var huffmanLength = readUint16();\\n\\n                  for (i = 2; i < huffmanLength;) {\\n                    var huffmanTableSpec = data[offset++];\\n                    var codeLengths = new Uint8Array(16);\\n                    var codeLengthSum = 0;\\n\\n                    for (j = 0; j < 16; j++, offset++) {\\n                      codeLengthSum += codeLengths[j] = data[offset];\\n                    }\\n\\n                    var huffmanValues = new Uint8Array(codeLengthSum);\\n\\n                    for (j = 0; j < codeLengthSum; j++, offset++) {\\n                      huffmanValues[j] = data[offset];\\n                    }\\n\\n                    i += 17 + codeLengthSum;\\n                    (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\\n                  }\\n\\n                  break;\\n\\n                case 0xFFDD:\\n                  readUint16();\\n                  resetInterval = readUint16();\\n                  break;\\n\\n                case 0xFFDA:\\n                  var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\\n                  readUint16();\\n                  var selectorsCount = data[offset++];\\n                  var components = [],\\n                      component;\\n\\n                  for (i = 0; i < selectorsCount; i++) {\\n                    var componentIndex = frame.componentIds[data[offset++]];\\n                    component = frame.components[componentIndex];\\n                    var tableSpec = data[offset++];\\n                    component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\\n                    component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\\n                    components.push(component);\\n                  }\\n\\n                  var spectralStart = data[offset++];\\n                  var spectralEnd = data[offset++];\\n                  var successiveApproximation = data[offset++];\\n\\n                  try {\\n                    var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\\n                    offset += processed;\\n                  } catch (ex) {\\n                    if (ex instanceof DNLMarkerError) {\\n                      (0, _util.warn)(\\\"\\\".concat(ex.message, \\\" -- attempting to re-parse the JPEG image.\\\"));\\n                      return this.parse(data, {\\n                        dnlScanLines: ex.scanLines\\n                      });\\n                    } else if (ex instanceof EOIMarkerError) {\\n                      (0, _util.warn)(\\\"\\\".concat(ex.message, \\\" -- ignoring the rest of the image data.\\\"));\\n                      break markerLoop;\\n                    }\\n\\n                    throw ex;\\n                  }\\n\\n                  break;\\n\\n                case 0xFFDC:\\n                  offset += 4;\\n                  break;\\n\\n                case 0xFFFF:\\n                  if (data[offset] !== 0xFF) {\\n                    offset--;\\n                  }\\n\\n                  break;\\n\\n                default:\\n                  if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\\n                    offset -= 3;\\n                    break;\\n                  }\\n\\n                  var nextFileMarker = findNextFileMarker(data, offset - 2);\\n\\n                  if (nextFileMarker && nextFileMarker.invalid) {\\n                    (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\\n                    offset = nextFileMarker.offset;\\n                    break;\\n                  }\\n\\n                  throw new JpegError('unknown marker ' + fileMarker.toString(16));\\n              }\\n\\n              fileMarker = readUint16();\\n            }\\n\\n            this.width = frame.samplesPerLine;\\n            this.height = frame.scanLines;\\n            this.jfif = jfif;\\n            this.adobe = adobe;\\n            this.components = [];\\n\\n            for (i = 0; i < frame.components.length; i++) {\\n              component = frame.components[i];\\n              var quantizationTable = quantizationTables[component.quantizationId];\\n\\n              if (quantizationTable) {\\n                component.quantizationTable = quantizationTable;\\n              }\\n\\n              this.components.push({\\n                output: buildComponentData(frame, component),\\n                scaleX: component.h / frame.maxH,\\n                scaleY: component.v / frame.maxV,\\n                blocksPerLine: component.blocksPerLine,\\n                blocksPerColumn: component.blocksPerColumn\\n              });\\n            }\\n\\n            this.numComponents = this.components.length;\\n          },\\n          _getLinearizedBlockData: function _getLinearizedBlockData(width, height) {\\n            var isSourcePDF = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n            var scaleX = this.width / width,\\n                scaleY = this.height / height;\\n            var component, componentScaleX, componentScaleY, blocksPerScanline;\\n            var x, y, i, j, k;\\n            var index;\\n            var offset = 0;\\n            var output;\\n            var numComponents = this.components.length;\\n            var dataLength = width * height * numComponents;\\n            var data = new Uint8ClampedArray(dataLength);\\n            var xScaleBlockOffset = new Uint32Array(width);\\n            var mask3LSB = 0xfffffff8;\\n\\n            for (i = 0; i < numComponents; i++) {\\n              component = this.components[i];\\n              componentScaleX = component.scaleX * scaleX;\\n              componentScaleY = component.scaleY * scaleY;\\n              offset = i;\\n              output = component.output;\\n              blocksPerScanline = component.blocksPerLine + 1 << 3;\\n\\n              for (x = 0; x < width; x++) {\\n                j = 0 | x * componentScaleX;\\n                xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\\n              }\\n\\n              for (y = 0; y < height; y++) {\\n                j = 0 | y * componentScaleY;\\n                index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\\n\\n                for (x = 0; x < width; x++) {\\n                  data[offset] = output[index + xScaleBlockOffset[x]];\\n                  offset += numComponents;\\n                }\\n              }\\n            }\\n\\n            var transform = this._decodeTransform;\\n\\n            if (!isSourcePDF && numComponents === 4 && !transform) {\\n              transform = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]);\\n            }\\n\\n            if (transform) {\\n              for (i = 0; i < dataLength;) {\\n                for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\\n                  data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\\n                }\\n              }\\n            }\\n\\n            return data;\\n          },\\n\\n          get _isColorConversionNeeded() {\\n            if (this.adobe) {\\n              return !!this.adobe.transformCode;\\n            }\\n\\n            if (this.numComponents === 3) {\\n              if (this._colorTransform === 0) {\\n                return false;\\n              }\\n\\n              return true;\\n            }\\n\\n            if (this._colorTransform === 1) {\\n              return true;\\n            }\\n\\n            return false;\\n          },\\n\\n          _convertYccToRgb: function convertYccToRgb(data) {\\n            var Y, Cb, Cr;\\n\\n            for (var i = 0, length = data.length; i < length; i += 3) {\\n              Y = data[i];\\n              Cb = data[i + 1];\\n              Cr = data[i + 2];\\n              data[i] = Y - 179.456 + 1.402 * Cr;\\n              data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\\n              data[i + 2] = Y - 226.816 + 1.772 * Cb;\\n            }\\n\\n            return data;\\n          },\\n          _convertYcckToRgb: function convertYcckToRgb(data) {\\n            var Y, Cb, Cr, k;\\n            var offset = 0;\\n\\n            for (var i = 0, length = data.length; i < length; i += 4) {\\n              Y = data[i];\\n              Cb = data[i + 1];\\n              Cr = data[i + 2];\\n              k = data[i + 3];\\n              data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\\n              data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\\n              data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\\n            }\\n\\n            return data.subarray(0, offset);\\n          },\\n          _convertYcckToCmyk: function convertYcckToCmyk(data) {\\n            var Y, Cb, Cr;\\n\\n            for (var i = 0, length = data.length; i < length; i += 4) {\\n              Y = data[i];\\n              Cb = data[i + 1];\\n              Cr = data[i + 2];\\n              data[i] = 434.456 - Y - 1.402 * Cr;\\n              data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\\n              data[i + 2] = 481.816 - Y - 1.772 * Cb;\\n            }\\n\\n            return data;\\n          },\\n          _convertCmykToRgb: function convertCmykToRgb(data) {\\n            var c, m, y, k;\\n            var offset = 0;\\n            var scale = 1 / 255;\\n\\n            for (var i = 0, length = data.length; i < length; i += 4) {\\n              c = data[i] * scale;\\n              m = data[i + 1] * scale;\\n              y = data[i + 2] * scale;\\n              k = data[i + 3] * scale;\\n              data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\\n              data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\\n              data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\\n            }\\n\\n            return data.subarray(0, offset);\\n          },\\n          getData: function getData(_ref3) {\\n            var width = _ref3.width,\\n                height = _ref3.height,\\n                _ref3$forceRGB = _ref3.forceRGB,\\n                forceRGB = _ref3$forceRGB === void 0 ? false : _ref3$forceRGB,\\n                _ref3$isSourcePDF = _ref3.isSourcePDF,\\n                isSourcePDF = _ref3$isSourcePDF === void 0 ? false : _ref3$isSourcePDF;\\n\\n            if (this.numComponents > 4) {\\n              throw new JpegError('Unsupported color mode');\\n            }\\n\\n            var data = this._getLinearizedBlockData(width, height, isSourcePDF);\\n\\n            if (this.numComponents === 1 && forceRGB) {\\n              var dataLength = data.length;\\n              var rgbData = new Uint8ClampedArray(dataLength * 3);\\n              var offset = 0;\\n\\n              for (var i = 0; i < dataLength; i++) {\\n                var grayColor = data[i];\\n                rgbData[offset++] = grayColor;\\n                rgbData[offset++] = grayColor;\\n                rgbData[offset++] = grayColor;\\n              }\\n\\n              return rgbData;\\n            } else if (this.numComponents === 3 && this._isColorConversionNeeded) {\\n              return this._convertYccToRgb(data);\\n            } else if (this.numComponents === 4) {\\n              if (this._isColorConversionNeeded) {\\n                if (forceRGB) {\\n                  return this._convertYcckToRgb(data);\\n                }\\n\\n                return this._convertYcckToCmyk(data);\\n              } else if (forceRGB) {\\n                return this._convertCmykToRgb(data);\\n              }\\n            }\\n\\n            return data;\\n          }\\n        };\\n        return JpegImage;\\n      }();\\n\\n      exports.JpegImage = JpegImage;\\n      /***/\\n    },\\n    /* 165 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.JpxStream = void 0;\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var _jpx = __w_pdfjs_require__(166);\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var JpxStream = function JpxStreamClosure() {\\n        function JpxStream(stream, maybeLength, dict, params) {\\n          this.stream = stream;\\n          this.maybeLength = maybeLength;\\n          this.dict = dict;\\n          this.params = params;\\n\\n          _stream.DecodeStream.call(this, maybeLength);\\n        }\\n\\n        JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\\n        Object.defineProperty(JpxStream.prototype, 'bytes', {\\n          get: function JpxStream_bytes() {\\n            return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\n          },\\n          configurable: true\\n        });\\n\\n        JpxStream.prototype.ensureBuffer = function (requested) {};\\n\\n        JpxStream.prototype.readBlock = function () {\\n          if (this.eof) {\\n            return;\\n          }\\n\\n          var jpxImage = new _jpx.JpxImage();\\n          jpxImage.parse(this.bytes);\\n          var width = jpxImage.width;\\n          var height = jpxImage.height;\\n          var componentsCount = jpxImage.componentsCount;\\n          var tileCount = jpxImage.tiles.length;\\n\\n          if (tileCount === 1) {\\n            this.buffer = jpxImage.tiles[0].items;\\n          } else {\\n            var data = new Uint8ClampedArray(width * height * componentsCount);\\n\\n            for (var k = 0; k < tileCount; k++) {\\n              var tileComponents = jpxImage.tiles[k];\\n              var tileWidth = tileComponents.width;\\n              var tileHeight = tileComponents.height;\\n              var tileLeft = tileComponents.left;\\n              var tileTop = tileComponents.top;\\n              var src = tileComponents.items;\\n              var srcPosition = 0;\\n              var dataPosition = (width * tileTop + tileLeft) * componentsCount;\\n              var imgRowSize = width * componentsCount;\\n              var tileRowSize = tileWidth * componentsCount;\\n\\n              for (var j = 0; j < tileHeight; j++) {\\n                var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\\n                data.set(rowBytes, dataPosition);\\n                srcPosition += tileRowSize;\\n                dataPosition += imgRowSize;\\n              }\\n            }\\n\\n            this.buffer = data;\\n          }\\n\\n          this.bufferLength = this.buffer.length;\\n          this.eof = true;\\n        };\\n\\n        return JpxStream;\\n      }();\\n\\n      exports.JpxStream = JpxStream;\\n      /***/\\n    },\\n    /* 166 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.JpxImage = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _arithmetic_decoder = __w_pdfjs_require__(162);\\n\\n      var JpxError = function JpxErrorClosure() {\\n        function JpxError(msg) {\\n          this.message = 'JPX error: ' + msg;\\n        }\\n\\n        JpxError.prototype = new Error();\\n        JpxError.prototype.name = 'JpxError';\\n        JpxError.constructor = JpxError;\\n        return JpxError;\\n      }();\\n\\n      var JpxImage = function JpxImageClosure() {\\n        var SubbandsGainLog2 = {\\n          'LL': 0,\\n          'LH': 1,\\n          'HL': 1,\\n          'HH': 2\\n        };\\n\\n        function JpxImage() {\\n          this.failOnCorruptedImage = false;\\n        }\\n\\n        JpxImage.prototype = {\\n          parse: function JpxImage_parse(data) {\\n            var head = (0, _util.readUint16)(data, 0);\\n\\n            if (head === 0xFF4F) {\\n              this.parseCodestream(data, 0, data.length);\\n              return;\\n            }\\n\\n            var position = 0,\\n                length = data.length;\\n\\n            while (position < length) {\\n              var headerSize = 8;\\n              var lbox = (0, _util.readUint32)(data, position);\\n              var tbox = (0, _util.readUint32)(data, position + 4);\\n              position += headerSize;\\n\\n              if (lbox === 1) {\\n                lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\\n                position += 8;\\n                headerSize += 8;\\n              }\\n\\n              if (lbox === 0) {\\n                lbox = length - position + headerSize;\\n              }\\n\\n              if (lbox < headerSize) {\\n                throw new JpxError('Invalid box field size');\\n              }\\n\\n              var dataLength = lbox - headerSize;\\n              var jumpDataLength = true;\\n\\n              switch (tbox) {\\n                case 0x6A703268:\\n                  jumpDataLength = false;\\n                  break;\\n\\n                case 0x636F6C72:\\n                  var method = data[position];\\n\\n                  if (method === 1) {\\n                    var colorspace = (0, _util.readUint32)(data, position + 3);\\n\\n                    switch (colorspace) {\\n                      case 16:\\n                      case 17:\\n                      case 18:\\n                        break;\\n\\n                      default:\\n                        (0, _util.warn)('Unknown colorspace ' + colorspace);\\n                        break;\\n                    }\\n                  } else if (method === 2) {\\n                    (0, _util.info)('ICC profile not supported');\\n                  }\\n\\n                  break;\\n\\n                case 0x6A703263:\\n                  this.parseCodestream(data, position, position + dataLength);\\n                  break;\\n\\n                case 0x6A502020:\\n                  if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\\n                    (0, _util.warn)('Invalid JP2 signature');\\n                  }\\n\\n                  break;\\n\\n                case 0x6A501A1A:\\n                case 0x66747970:\\n                case 0x72726571:\\n                case 0x72657320:\\n                case 0x69686472:\\n                  break;\\n\\n                default:\\n                  var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\\n                  (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\\n                  break;\\n              }\\n\\n              if (jumpDataLength) {\\n                position += dataLength;\\n              }\\n            }\\n          },\\n          parseImageProperties: function JpxImage_parseImageProperties(stream) {\\n            var newByte = stream.getByte();\\n\\n            while (newByte >= 0) {\\n              var oldByte = newByte;\\n              newByte = stream.getByte();\\n              var code = oldByte << 8 | newByte;\\n\\n              if (code === 0xFF51) {\\n                stream.skip(4);\\n                var Xsiz = stream.getInt32() >>> 0;\\n                var Ysiz = stream.getInt32() >>> 0;\\n                var XOsiz = stream.getInt32() >>> 0;\\n                var YOsiz = stream.getInt32() >>> 0;\\n                stream.skip(16);\\n                var Csiz = stream.getUint16();\\n                this.width = Xsiz - XOsiz;\\n                this.height = Ysiz - YOsiz;\\n                this.componentsCount = Csiz;\\n                this.bitsPerComponent = 8;\\n                return;\\n              }\\n            }\\n\\n            throw new JpxError('No size marker found in JPX stream');\\n          },\\n          parseCodestream: function JpxImage_parseCodestream(data, start, end) {\\n            var context = {};\\n            var doNotRecover = false;\\n\\n            try {\\n              var position = start;\\n\\n              while (position + 1 < end) {\\n                var code = (0, _util.readUint16)(data, position);\\n                position += 2;\\n                var length = 0,\\n                    j,\\n                    sqcd,\\n                    spqcds,\\n                    spqcdSize,\\n                    scalarExpounded,\\n                    tile;\\n\\n                switch (code) {\\n                  case 0xFF4F:\\n                    context.mainHeader = true;\\n                    break;\\n\\n                  case 0xFFD9:\\n                    break;\\n\\n                  case 0xFF51:\\n                    length = (0, _util.readUint16)(data, position);\\n                    var siz = {};\\n                    siz.Xsiz = (0, _util.readUint32)(data, position + 4);\\n                    siz.Ysiz = (0, _util.readUint32)(data, position + 8);\\n                    siz.XOsiz = (0, _util.readUint32)(data, position + 12);\\n                    siz.YOsiz = (0, _util.readUint32)(data, position + 16);\\n                    siz.XTsiz = (0, _util.readUint32)(data, position + 20);\\n                    siz.YTsiz = (0, _util.readUint32)(data, position + 24);\\n                    siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\\n                    siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\\n                    var componentsCount = (0, _util.readUint16)(data, position + 36);\\n                    siz.Csiz = componentsCount;\\n                    var components = [];\\n                    j = position + 38;\\n\\n                    for (var i = 0; i < componentsCount; i++) {\\n                      var component = {\\n                        precision: (data[j] & 0x7F) + 1,\\n                        isSigned: !!(data[j] & 0x80),\\n                        XRsiz: data[j + 1],\\n                        YRsiz: data[j + 2]\\n                      };\\n                      j += 3;\\n                      calculateComponentDimensions(component, siz);\\n                      components.push(component);\\n                    }\\n\\n                    context.SIZ = siz;\\n                    context.components = components;\\n                    calculateTileGrids(context, components);\\n                    context.QCC = [];\\n                    context.COC = [];\\n                    break;\\n\\n                  case 0xFF5C:\\n                    length = (0, _util.readUint16)(data, position);\\n                    var qcd = {};\\n                    j = position + 2;\\n                    sqcd = data[j++];\\n\\n                    switch (sqcd & 0x1F) {\\n                      case 0:\\n                        spqcdSize = 8;\\n                        scalarExpounded = true;\\n                        break;\\n\\n                      case 1:\\n                        spqcdSize = 16;\\n                        scalarExpounded = false;\\n                        break;\\n\\n                      case 2:\\n                        spqcdSize = 16;\\n                        scalarExpounded = true;\\n                        break;\\n\\n                      default:\\n                        throw new Error('Invalid SQcd value ' + sqcd);\\n                    }\\n\\n                    qcd.noQuantization = spqcdSize === 8;\\n                    qcd.scalarExpounded = scalarExpounded;\\n                    qcd.guardBits = sqcd >> 5;\\n                    spqcds = [];\\n\\n                    while (j < length + position) {\\n                      var spqcd = {};\\n\\n                      if (spqcdSize === 8) {\\n                        spqcd.epsilon = data[j++] >> 3;\\n                        spqcd.mu = 0;\\n                      } else {\\n                        spqcd.epsilon = data[j] >> 3;\\n                        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\\n                        j += 2;\\n                      }\\n\\n                      spqcds.push(spqcd);\\n                    }\\n\\n                    qcd.SPqcds = spqcds;\\n\\n                    if (context.mainHeader) {\\n                      context.QCD = qcd;\\n                    } else {\\n                      context.currentTile.QCD = qcd;\\n                      context.currentTile.QCC = [];\\n                    }\\n\\n                    break;\\n\\n                  case 0xFF5D:\\n                    length = (0, _util.readUint16)(data, position);\\n                    var qcc = {};\\n                    j = position + 2;\\n                    var cqcc;\\n\\n                    if (context.SIZ.Csiz < 257) {\\n                      cqcc = data[j++];\\n                    } else {\\n                      cqcc = (0, _util.readUint16)(data, j);\\n                      j += 2;\\n                    }\\n\\n                    sqcd = data[j++];\\n\\n                    switch (sqcd & 0x1F) {\\n                      case 0:\\n                        spqcdSize = 8;\\n                        scalarExpounded = true;\\n                        break;\\n\\n                      case 1:\\n                        spqcdSize = 16;\\n                        scalarExpounded = false;\\n                        break;\\n\\n                      case 2:\\n                        spqcdSize = 16;\\n                        scalarExpounded = true;\\n                        break;\\n\\n                      default:\\n                        throw new Error('Invalid SQcd value ' + sqcd);\\n                    }\\n\\n                    qcc.noQuantization = spqcdSize === 8;\\n                    qcc.scalarExpounded = scalarExpounded;\\n                    qcc.guardBits = sqcd >> 5;\\n                    spqcds = [];\\n\\n                    while (j < length + position) {\\n                      spqcd = {};\\n\\n                      if (spqcdSize === 8) {\\n                        spqcd.epsilon = data[j++] >> 3;\\n                        spqcd.mu = 0;\\n                      } else {\\n                        spqcd.epsilon = data[j] >> 3;\\n                        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\\n                        j += 2;\\n                      }\\n\\n                      spqcds.push(spqcd);\\n                    }\\n\\n                    qcc.SPqcds = spqcds;\\n\\n                    if (context.mainHeader) {\\n                      context.QCC[cqcc] = qcc;\\n                    } else {\\n                      context.currentTile.QCC[cqcc] = qcc;\\n                    }\\n\\n                    break;\\n\\n                  case 0xFF52:\\n                    length = (0, _util.readUint16)(data, position);\\n                    var cod = {};\\n                    j = position + 2;\\n                    var scod = data[j++];\\n                    cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\\n                    cod.sopMarkerUsed = !!(scod & 2);\\n                    cod.ephMarkerUsed = !!(scod & 4);\\n                    cod.progressionOrder = data[j++];\\n                    cod.layersCount = (0, _util.readUint16)(data, j);\\n                    j += 2;\\n                    cod.multipleComponentTransform = data[j++];\\n                    cod.decompositionLevelsCount = data[j++];\\n                    cod.xcb = (data[j++] & 0xF) + 2;\\n                    cod.ycb = (data[j++] & 0xF) + 2;\\n                    var blockStyle = data[j++];\\n                    cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\\n                    cod.resetContextProbabilities = !!(blockStyle & 2);\\n                    cod.terminationOnEachCodingPass = !!(blockStyle & 4);\\n                    cod.verticallyStripe = !!(blockStyle & 8);\\n                    cod.predictableTermination = !!(blockStyle & 16);\\n                    cod.segmentationSymbolUsed = !!(blockStyle & 32);\\n                    cod.reversibleTransformation = data[j++];\\n\\n                    if (cod.entropyCoderWithCustomPrecincts) {\\n                      var precinctsSizes = [];\\n\\n                      while (j < length + position) {\\n                        var precinctsSize = data[j++];\\n                        precinctsSizes.push({\\n                          PPx: precinctsSize & 0xF,\\n                          PPy: precinctsSize >> 4\\n                        });\\n                      }\\n\\n                      cod.precinctsSizes = precinctsSizes;\\n                    }\\n\\n                    var unsupported = [];\\n\\n                    if (cod.selectiveArithmeticCodingBypass) {\\n                      unsupported.push('selectiveArithmeticCodingBypass');\\n                    }\\n\\n                    if (cod.resetContextProbabilities) {\\n                      unsupported.push('resetContextProbabilities');\\n                    }\\n\\n                    if (cod.terminationOnEachCodingPass) {\\n                      unsupported.push('terminationOnEachCodingPass');\\n                    }\\n\\n                    if (cod.verticallyStripe) {\\n                      unsupported.push('verticallyStripe');\\n                    }\\n\\n                    if (cod.predictableTermination) {\\n                      unsupported.push('predictableTermination');\\n                    }\\n\\n                    if (unsupported.length > 0) {\\n                      doNotRecover = true;\\n                      throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\\n                    }\\n\\n                    if (context.mainHeader) {\\n                      context.COD = cod;\\n                    } else {\\n                      context.currentTile.COD = cod;\\n                      context.currentTile.COC = [];\\n                    }\\n\\n                    break;\\n\\n                  case 0xFF90:\\n                    length = (0, _util.readUint16)(data, position);\\n                    tile = {};\\n                    tile.index = (0, _util.readUint16)(data, position + 2);\\n                    tile.length = (0, _util.readUint32)(data, position + 4);\\n                    tile.dataEnd = tile.length + position - 2;\\n                    tile.partIndex = data[position + 8];\\n                    tile.partsCount = data[position + 9];\\n                    context.mainHeader = false;\\n\\n                    if (tile.partIndex === 0) {\\n                      tile.COD = context.COD;\\n                      tile.COC = context.COC.slice(0);\\n                      tile.QCD = context.QCD;\\n                      tile.QCC = context.QCC.slice(0);\\n                    }\\n\\n                    context.currentTile = tile;\\n                    break;\\n\\n                  case 0xFF93:\\n                    tile = context.currentTile;\\n\\n                    if (tile.partIndex === 0) {\\n                      initializeTile(context, tile.index);\\n                      buildPackets(context);\\n                    }\\n\\n                    length = tile.dataEnd - position;\\n                    parseTilePackets(context, data, position, length);\\n                    break;\\n\\n                  case 0xFF55:\\n                  case 0xFF57:\\n                  case 0xFF58:\\n                  case 0xFF64:\\n                    length = (0, _util.readUint16)(data, position);\\n                    break;\\n\\n                  case 0xFF53:\\n                    throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\\n\\n                  default:\\n                    throw new Error('Unknown codestream code: ' + code.toString(16));\\n                }\\n\\n                position += length;\\n              }\\n            } catch (e) {\\n              if (doNotRecover || this.failOnCorruptedImage) {\\n                throw new JpxError(e.message);\\n              } else {\\n                (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\\n              }\\n            }\\n\\n            this.tiles = transformComponents(context);\\n            this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\\n            this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\\n            this.componentsCount = context.SIZ.Csiz;\\n          }\\n        };\\n\\n        function calculateComponentDimensions(component, siz) {\\n          component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\\n          component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\\n          component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\\n          component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\\n          component.width = component.x1 - component.x0;\\n          component.height = component.y1 - component.y0;\\n        }\\n\\n        function calculateTileGrids(context, components) {\\n          var siz = context.SIZ;\\n          var tile,\\n              tiles = [];\\n          var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\\n          var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\\n\\n          for (var q = 0; q < numYtiles; q++) {\\n            for (var p = 0; p < numXtiles; p++) {\\n              tile = {};\\n              tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\\n              tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\\n              tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\\n              tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\\n              tile.width = tile.tx1 - tile.tx0;\\n              tile.height = tile.ty1 - tile.ty0;\\n              tile.components = [];\\n              tiles.push(tile);\\n            }\\n          }\\n\\n          context.tiles = tiles;\\n          var componentsCount = siz.Csiz;\\n\\n          for (var i = 0, ii = componentsCount; i < ii; i++) {\\n            var component = components[i];\\n\\n            for (var j = 0, jj = tiles.length; j < jj; j++) {\\n              var tileComponent = {};\\n              tile = tiles[j];\\n              tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\\n              tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\\n              tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\\n              tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\\n              tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\\n              tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\\n              tile.components[i] = tileComponent;\\n            }\\n          }\\n        }\\n\\n        function getBlocksDimensions(context, component, r) {\\n          var codOrCoc = component.codingStyleParameters;\\n          var result = {};\\n\\n          if (!codOrCoc.entropyCoderWithCustomPrecincts) {\\n            result.PPx = 15;\\n            result.PPy = 15;\\n          } else {\\n            result.PPx = codOrCoc.precinctsSizes[r].PPx;\\n            result.PPy = codOrCoc.precinctsSizes[r].PPy;\\n          }\\n\\n          result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\\n          result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\\n          return result;\\n        }\\n\\n        function buildPrecincts(context, resolution, dimensions) {\\n          var precinctWidth = 1 << dimensions.PPx;\\n          var precinctHeight = 1 << dimensions.PPy;\\n          var isZeroRes = resolution.resLevel === 0;\\n          var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\\n          var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\\n          var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\\n          var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\\n          var numprecincts = numprecinctswide * numprecinctshigh;\\n          resolution.precinctParameters = {\\n            precinctWidth: precinctWidth,\\n            precinctHeight: precinctHeight,\\n            numprecinctswide: numprecinctswide,\\n            numprecinctshigh: numprecinctshigh,\\n            numprecincts: numprecincts,\\n            precinctWidthInSubband: precinctWidthInSubband,\\n            precinctHeightInSubband: precinctHeightInSubband\\n          };\\n        }\\n\\n        function buildCodeblocks(context, subband, dimensions) {\\n          var xcb_ = dimensions.xcb_;\\n          var ycb_ = dimensions.ycb_;\\n          var codeblockWidth = 1 << xcb_;\\n          var codeblockHeight = 1 << ycb_;\\n          var cbx0 = subband.tbx0 >> xcb_;\\n          var cby0 = subband.tby0 >> ycb_;\\n          var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\\n          var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\\n          var precinctParameters = subband.resolution.precinctParameters;\\n          var codeblocks = [];\\n          var precincts = [];\\n          var i, j, codeblock, precinctNumber;\\n\\n          for (j = cby0; j < cby1; j++) {\\n            for (i = cbx0; i < cbx1; i++) {\\n              codeblock = {\\n                cbx: i,\\n                cby: j,\\n                tbx0: codeblockWidth * i,\\n                tby0: codeblockHeight * j,\\n                tbx1: codeblockWidth * (i + 1),\\n                tby1: codeblockHeight * (j + 1)\\n              };\\n              codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\\n              codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\\n              codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\\n              codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\\n              var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\\n              var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\\n              precinctNumber = pi + pj * precinctParameters.numprecinctswide;\\n              codeblock.precinctNumber = precinctNumber;\\n              codeblock.subbandType = subband.type;\\n              codeblock.Lblock = 3;\\n\\n              if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\\n                continue;\\n              }\\n\\n              codeblocks.push(codeblock);\\n              var precinct = precincts[precinctNumber];\\n\\n              if (precinct !== undefined) {\\n                if (i < precinct.cbxMin) {\\n                  precinct.cbxMin = i;\\n                } else if (i > precinct.cbxMax) {\\n                  precinct.cbxMax = i;\\n                }\\n\\n                if (j < precinct.cbyMin) {\\n                  precinct.cbxMin = j;\\n                } else if (j > precinct.cbyMax) {\\n                  precinct.cbyMax = j;\\n                }\\n              } else {\\n                precincts[precinctNumber] = precinct = {\\n                  cbxMin: i,\\n                  cbyMin: j,\\n                  cbxMax: i,\\n                  cbyMax: j\\n                };\\n              }\\n\\n              codeblock.precinct = precinct;\\n            }\\n          }\\n\\n          subband.codeblockParameters = {\\n            codeblockWidth: xcb_,\\n            codeblockHeight: ycb_,\\n            numcodeblockwide: cbx1 - cbx0 + 1,\\n            numcodeblockhigh: cby1 - cby0 + 1\\n          };\\n          subband.codeblocks = codeblocks;\\n          subband.precincts = precincts;\\n        }\\n\\n        function createPacket(resolution, precinctNumber, layerNumber) {\\n          var precinctCodeblocks = [];\\n          var subbands = resolution.subbands;\\n\\n          for (var i = 0, ii = subbands.length; i < ii; i++) {\\n            var subband = subbands[i];\\n            var codeblocks = subband.codeblocks;\\n\\n            for (var j = 0, jj = codeblocks.length; j < jj; j++) {\\n              var codeblock = codeblocks[j];\\n\\n              if (codeblock.precinctNumber !== precinctNumber) {\\n                continue;\\n              }\\n\\n              precinctCodeblocks.push(codeblock);\\n            }\\n          }\\n\\n          return {\\n            layerNumber: layerNumber,\\n            codeblocks: precinctCodeblocks\\n          };\\n        }\\n\\n        function LayerResolutionComponentPositionIterator(context) {\\n          var siz = context.SIZ;\\n          var tileIndex = context.currentTile.index;\\n          var tile = context.tiles[tileIndex];\\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n          var componentsCount = siz.Csiz;\\n          var maxDecompositionLevelsCount = 0;\\n\\n          for (var q = 0; q < componentsCount; q++) {\\n            maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\\n          }\\n\\n          var l = 0,\\n              r = 0,\\n              i = 0,\\n              k = 0;\\n\\n          this.nextPacket = function JpxImage_nextPacket() {\\n            for (; l < layersCount; l++) {\\n              for (; r <= maxDecompositionLevelsCount; r++) {\\n                for (; i < componentsCount; i++) {\\n                  var component = tile.components[i];\\n\\n                  if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n                    continue;\\n                  }\\n\\n                  var resolution = component.resolutions[r];\\n                  var numprecincts = resolution.precinctParameters.numprecincts;\\n\\n                  for (; k < numprecincts;) {\\n                    var packet = createPacket(resolution, k, l);\\n                    k++;\\n                    return packet;\\n                  }\\n\\n                  k = 0;\\n                }\\n\\n                i = 0;\\n              }\\n\\n              r = 0;\\n            }\\n\\n            throw new JpxError('Out of packets');\\n          };\\n        }\\n\\n        function ResolutionLayerComponentPositionIterator(context) {\\n          var siz = context.SIZ;\\n          var tileIndex = context.currentTile.index;\\n          var tile = context.tiles[tileIndex];\\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n          var componentsCount = siz.Csiz;\\n          var maxDecompositionLevelsCount = 0;\\n\\n          for (var q = 0; q < componentsCount; q++) {\\n            maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\\n          }\\n\\n          var r = 0,\\n              l = 0,\\n              i = 0,\\n              k = 0;\\n\\n          this.nextPacket = function JpxImage_nextPacket() {\\n            for (; r <= maxDecompositionLevelsCount; r++) {\\n              for (; l < layersCount; l++) {\\n                for (; i < componentsCount; i++) {\\n                  var component = tile.components[i];\\n\\n                  if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n                    continue;\\n                  }\\n\\n                  var resolution = component.resolutions[r];\\n                  var numprecincts = resolution.precinctParameters.numprecincts;\\n\\n                  for (; k < numprecincts;) {\\n                    var packet = createPacket(resolution, k, l);\\n                    k++;\\n                    return packet;\\n                  }\\n\\n                  k = 0;\\n                }\\n\\n                i = 0;\\n              }\\n\\n              l = 0;\\n            }\\n\\n            throw new JpxError('Out of packets');\\n          };\\n        }\\n\\n        function ResolutionPositionComponentLayerIterator(context) {\\n          var siz = context.SIZ;\\n          var tileIndex = context.currentTile.index;\\n          var tile = context.tiles[tileIndex];\\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n          var componentsCount = siz.Csiz;\\n          var l, r, c, p;\\n          var maxDecompositionLevelsCount = 0;\\n\\n          for (c = 0; c < componentsCount; c++) {\\n            var component = tile.components[c];\\n            maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\\n          }\\n\\n          var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\\n\\n          for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\\n            var maxNumPrecincts = 0;\\n\\n            for (c = 0; c < componentsCount; ++c) {\\n              var resolutions = tile.components[c].resolutions;\\n\\n              if (r < resolutions.length) {\\n                maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\\n              }\\n            }\\n\\n            maxNumPrecinctsInLevel[r] = maxNumPrecincts;\\n          }\\n\\n          l = 0;\\n          r = 0;\\n          c = 0;\\n          p = 0;\\n\\n          this.nextPacket = function JpxImage_nextPacket() {\\n            for (; r <= maxDecompositionLevelsCount; r++) {\\n              for (; p < maxNumPrecinctsInLevel[r]; p++) {\\n                for (; c < componentsCount; c++) {\\n                  var component = tile.components[c];\\n\\n                  if (r > component.codingStyleParameters.decompositionLevelsCount) {\\n                    continue;\\n                  }\\n\\n                  var resolution = component.resolutions[r];\\n                  var numprecincts = resolution.precinctParameters.numprecincts;\\n\\n                  if (p >= numprecincts) {\\n                    continue;\\n                  }\\n\\n                  for (; l < layersCount;) {\\n                    var packet = createPacket(resolution, p, l);\\n                    l++;\\n                    return packet;\\n                  }\\n\\n                  l = 0;\\n                }\\n\\n                c = 0;\\n              }\\n\\n              p = 0;\\n            }\\n\\n            throw new JpxError('Out of packets');\\n          };\\n        }\\n\\n        function PositionComponentResolutionLayerIterator(context) {\\n          var siz = context.SIZ;\\n          var tileIndex = context.currentTile.index;\\n          var tile = context.tiles[tileIndex];\\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n          var componentsCount = siz.Csiz;\\n          var precinctsSizes = getPrecinctSizesInImageScale(tile);\\n          var precinctsIterationSizes = precinctsSizes;\\n          var l = 0,\\n              r = 0,\\n              c = 0,\\n              px = 0,\\n              py = 0;\\n\\n          this.nextPacket = function JpxImage_nextPacket() {\\n            for (; py < precinctsIterationSizes.maxNumHigh; py++) {\\n              for (; px < precinctsIterationSizes.maxNumWide; px++) {\\n                for (; c < componentsCount; c++) {\\n                  var component = tile.components[c];\\n                  var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n\\n                  for (; r <= decompositionLevelsCount; r++) {\\n                    var resolution = component.resolutions[r];\\n                    var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\\n                    var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\\n\\n                    if (k === null) {\\n                      continue;\\n                    }\\n\\n                    for (; l < layersCount;) {\\n                      var packet = createPacket(resolution, k, l);\\n                      l++;\\n                      return packet;\\n                    }\\n\\n                    l = 0;\\n                  }\\n\\n                  r = 0;\\n                }\\n\\n                c = 0;\\n              }\\n\\n              px = 0;\\n            }\\n\\n            throw new JpxError('Out of packets');\\n          };\\n        }\\n\\n        function ComponentPositionResolutionLayerIterator(context) {\\n          var siz = context.SIZ;\\n          var tileIndex = context.currentTile.index;\\n          var tile = context.tiles[tileIndex];\\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\\n          var componentsCount = siz.Csiz;\\n          var precinctsSizes = getPrecinctSizesInImageScale(tile);\\n          var l = 0,\\n              r = 0,\\n              c = 0,\\n              px = 0,\\n              py = 0;\\n\\n          this.nextPacket = function JpxImage_nextPacket() {\\n            for (; c < componentsCount; ++c) {\\n              var component = tile.components[c];\\n              var precinctsIterationSizes = precinctsSizes.components[c];\\n              var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n\\n              for (; py < precinctsIterationSizes.maxNumHigh; py++) {\\n                for (; px < precinctsIterationSizes.maxNumWide; px++) {\\n                  for (; r <= decompositionLevelsCount; r++) {\\n                    var resolution = component.resolutions[r];\\n                    var sizeInImageScale = precinctsIterationSizes.resolutions[r];\\n                    var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\\n\\n                    if (k === null) {\\n                      continue;\\n                    }\\n\\n                    for (; l < layersCount;) {\\n                      var packet = createPacket(resolution, k, l);\\n                      l++;\\n                      return packet;\\n                    }\\n\\n                    l = 0;\\n                  }\\n\\n                  r = 0;\\n                }\\n\\n                px = 0;\\n              }\\n\\n              py = 0;\\n            }\\n\\n            throw new JpxError('Out of packets');\\n          };\\n        }\\n\\n        function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\\n          var posX = pxIndex * precinctIterationSizes.minWidth;\\n          var posY = pyIndex * precinctIterationSizes.minHeight;\\n\\n          if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\\n            return null;\\n          }\\n\\n          var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\\n          return posX / sizeInImageScale.height + startPrecinctRowIndex;\\n        }\\n\\n        function getPrecinctSizesInImageScale(tile) {\\n          var componentsCount = tile.components.length;\\n          var minWidth = Number.MAX_VALUE;\\n          var minHeight = Number.MAX_VALUE;\\n          var maxNumWide = 0;\\n          var maxNumHigh = 0;\\n          var sizePerComponent = new Array(componentsCount);\\n\\n          for (var c = 0; c < componentsCount; c++) {\\n            var component = tile.components[c];\\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n            var sizePerResolution = new Array(decompositionLevelsCount + 1);\\n            var minWidthCurrentComponent = Number.MAX_VALUE;\\n            var minHeightCurrentComponent = Number.MAX_VALUE;\\n            var maxNumWideCurrentComponent = 0;\\n            var maxNumHighCurrentComponent = 0;\\n            var scale = 1;\\n\\n            for (var r = decompositionLevelsCount; r >= 0; --r) {\\n              var resolution = component.resolutions[r];\\n              var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\\n              var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\\n              minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\\n              minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\\n              maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\\n              maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\\n              sizePerResolution[r] = {\\n                width: widthCurrentResolution,\\n                height: heightCurrentResolution\\n              };\\n              scale <<= 1;\\n            }\\n\\n            minWidth = Math.min(minWidth, minWidthCurrentComponent);\\n            minHeight = Math.min(minHeight, minHeightCurrentComponent);\\n            maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\\n            maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\\n            sizePerComponent[c] = {\\n              resolutions: sizePerResolution,\\n              minWidth: minWidthCurrentComponent,\\n              minHeight: minHeightCurrentComponent,\\n              maxNumWide: maxNumWideCurrentComponent,\\n              maxNumHigh: maxNumHighCurrentComponent\\n            };\\n          }\\n\\n          return {\\n            components: sizePerComponent,\\n            minWidth: minWidth,\\n            minHeight: minHeight,\\n            maxNumWide: maxNumWide,\\n            maxNumHigh: maxNumHigh\\n          };\\n        }\\n\\n        function buildPackets(context) {\\n          var siz = context.SIZ;\\n          var tileIndex = context.currentTile.index;\\n          var tile = context.tiles[tileIndex];\\n          var componentsCount = siz.Csiz;\\n\\n          for (var c = 0; c < componentsCount; c++) {\\n            var component = tile.components[c];\\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\n            var resolutions = [];\\n            var subbands = [];\\n\\n            for (var r = 0; r <= decompositionLevelsCount; r++) {\\n              var blocksDimensions = getBlocksDimensions(context, component, r);\\n              var resolution = {};\\n              var scale = 1 << decompositionLevelsCount - r;\\n              resolution.trx0 = Math.ceil(component.tcx0 / scale);\\n              resolution.try0 = Math.ceil(component.tcy0 / scale);\\n              resolution.trx1 = Math.ceil(component.tcx1 / scale);\\n              resolution.try1 = Math.ceil(component.tcy1 / scale);\\n              resolution.resLevel = r;\\n              buildPrecincts(context, resolution, blocksDimensions);\\n              resolutions.push(resolution);\\n              var subband;\\n\\n              if (r === 0) {\\n                subband = {};\\n                subband.type = 'LL';\\n                subband.tbx0 = Math.ceil(component.tcx0 / scale);\\n                subband.tby0 = Math.ceil(component.tcy0 / scale);\\n                subband.tbx1 = Math.ceil(component.tcx1 / scale);\\n                subband.tby1 = Math.ceil(component.tcy1 / scale);\\n                subband.resolution = resolution;\\n                buildCodeblocks(context, subband, blocksDimensions);\\n                subbands.push(subband);\\n                resolution.subbands = [subband];\\n              } else {\\n                var bscale = 1 << decompositionLevelsCount - r + 1;\\n                var resolutionSubbands = [];\\n                subband = {};\\n                subband.type = 'HL';\\n                subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\\n                subband.tby0 = Math.ceil(component.tcy0 / bscale);\\n                subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\\n                subband.tby1 = Math.ceil(component.tcy1 / bscale);\\n                subband.resolution = resolution;\\n                buildCodeblocks(context, subband, blocksDimensions);\\n                subbands.push(subband);\\n                resolutionSubbands.push(subband);\\n                subband = {};\\n                subband.type = 'LH';\\n                subband.tbx0 = Math.ceil(component.tcx0 / bscale);\\n                subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\\n                subband.tbx1 = Math.ceil(component.tcx1 / bscale);\\n                subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\\n                subband.resolution = resolution;\\n                buildCodeblocks(context, subband, blocksDimensions);\\n                subbands.push(subband);\\n                resolutionSubbands.push(subband);\\n                subband = {};\\n                subband.type = 'HH';\\n                subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\\n                subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\\n                subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\\n                subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\\n                subband.resolution = resolution;\\n                buildCodeblocks(context, subband, blocksDimensions);\\n                subbands.push(subband);\\n                resolutionSubbands.push(subband);\\n                resolution.subbands = resolutionSubbands;\\n              }\\n            }\\n\\n            component.resolutions = resolutions;\\n            component.subbands = subbands;\\n          }\\n\\n          var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\\n\\n          switch (progressionOrder) {\\n            case 0:\\n              tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\\n              break;\\n\\n            case 1:\\n              tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\\n              break;\\n\\n            case 2:\\n              tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\\n              break;\\n\\n            case 3:\\n              tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\\n              break;\\n\\n            case 4:\\n              tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\\n              break;\\n\\n            default:\\n              throw new JpxError(\\\"Unsupported progression order \\\".concat(progressionOrder));\\n          }\\n        }\\n\\n        function parseTilePackets(context, data, offset, dataLength) {\\n          var position = 0;\\n          var buffer,\\n              bufferSize = 0,\\n              skipNextBit = false;\\n\\n          function readBits(count) {\\n            while (bufferSize < count) {\\n              var b = data[offset + position];\\n              position++;\\n\\n              if (skipNextBit) {\\n                buffer = buffer << 7 | b;\\n                bufferSize += 7;\\n                skipNextBit = false;\\n              } else {\\n                buffer = buffer << 8 | b;\\n                bufferSize += 8;\\n              }\\n\\n              if (b === 0xFF) {\\n                skipNextBit = true;\\n              }\\n            }\\n\\n            bufferSize -= count;\\n            return buffer >>> bufferSize & (1 << count) - 1;\\n          }\\n\\n          function skipMarkerIfEqual(value) {\\n            if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\\n              skipBytes(1);\\n              return true;\\n            } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\\n              skipBytes(2);\\n              return true;\\n            }\\n\\n            return false;\\n          }\\n\\n          function skipBytes(count) {\\n            position += count;\\n          }\\n\\n          function alignToByte() {\\n            bufferSize = 0;\\n\\n            if (skipNextBit) {\\n              position++;\\n              skipNextBit = false;\\n            }\\n          }\\n\\n          function readCodingpasses() {\\n            if (readBits(1) === 0) {\\n              return 1;\\n            }\\n\\n            if (readBits(1) === 0) {\\n              return 2;\\n            }\\n\\n            var value = readBits(2);\\n\\n            if (value < 3) {\\n              return value + 3;\\n            }\\n\\n            value = readBits(5);\\n\\n            if (value < 31) {\\n              return value + 6;\\n            }\\n\\n            value = readBits(7);\\n            return value + 37;\\n          }\\n\\n          var tileIndex = context.currentTile.index;\\n          var tile = context.tiles[tileIndex];\\n          var sopMarkerUsed = context.COD.sopMarkerUsed;\\n          var ephMarkerUsed = context.COD.ephMarkerUsed;\\n          var packetsIterator = tile.packetsIterator;\\n\\n          while (position < dataLength) {\\n            alignToByte();\\n\\n            if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\\n              skipBytes(4);\\n            }\\n\\n            var packet = packetsIterator.nextPacket();\\n\\n            if (!readBits(1)) {\\n              continue;\\n            }\\n\\n            var layerNumber = packet.layerNumber;\\n            var queue = [],\\n                codeblock;\\n\\n            for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\\n              codeblock = packet.codeblocks[i];\\n              var precinct = codeblock.precinct;\\n              var codeblockColumn = codeblock.cbx - precinct.cbxMin;\\n              var codeblockRow = codeblock.cby - precinct.cbyMin;\\n              var codeblockIncluded = false;\\n              var firstTimeInclusion = false;\\n              var valueReady;\\n\\n              if (codeblock['included'] !== undefined) {\\n                codeblockIncluded = !!readBits(1);\\n              } else {\\n                precinct = codeblock.precinct;\\n                var inclusionTree, zeroBitPlanesTree;\\n\\n                if (precinct['inclusionTree'] !== undefined) {\\n                  inclusionTree = precinct.inclusionTree;\\n                } else {\\n                  var width = precinct.cbxMax - precinct.cbxMin + 1;\\n                  var height = precinct.cbyMax - precinct.cbyMin + 1;\\n                  inclusionTree = new InclusionTree(width, height, layerNumber);\\n                  zeroBitPlanesTree = new TagTree(width, height);\\n                  precinct.inclusionTree = inclusionTree;\\n                  precinct.zeroBitPlanesTree = zeroBitPlanesTree;\\n                }\\n\\n                if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\\n                  while (true) {\\n                    if (readBits(1)) {\\n                      valueReady = !inclusionTree.nextLevel();\\n\\n                      if (valueReady) {\\n                        codeblock.included = true;\\n                        codeblockIncluded = firstTimeInclusion = true;\\n                        break;\\n                      }\\n                    } else {\\n                      inclusionTree.incrementValue(layerNumber);\\n                      break;\\n                    }\\n                  }\\n                }\\n              }\\n\\n              if (!codeblockIncluded) {\\n                continue;\\n              }\\n\\n              if (firstTimeInclusion) {\\n                zeroBitPlanesTree = precinct.zeroBitPlanesTree;\\n                zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\\n\\n                while (true) {\\n                  if (readBits(1)) {\\n                    valueReady = !zeroBitPlanesTree.nextLevel();\\n\\n                    if (valueReady) {\\n                      break;\\n                    }\\n                  } else {\\n                    zeroBitPlanesTree.incrementValue();\\n                  }\\n                }\\n\\n                codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\\n              }\\n\\n              var codingpasses = readCodingpasses();\\n\\n              while (readBits(1)) {\\n                codeblock.Lblock++;\\n              }\\n\\n              var codingpassesLog2 = (0, _util.log2)(codingpasses);\\n              var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\\n              var codedDataLength = readBits(bits);\\n              queue.push({\\n                codeblock: codeblock,\\n                codingpasses: codingpasses,\\n                dataLength: codedDataLength\\n              });\\n            }\\n\\n            alignToByte();\\n\\n            if (ephMarkerUsed) {\\n              skipMarkerIfEqual(0x92);\\n            }\\n\\n            while (queue.length > 0) {\\n              var packetItem = queue.shift();\\n              codeblock = packetItem.codeblock;\\n\\n              if (codeblock['data'] === undefined) {\\n                codeblock.data = [];\\n              }\\n\\n              codeblock.data.push({\\n                data: data,\\n                start: offset + position,\\n                end: offset + position + packetItem.dataLength,\\n                codingpasses: packetItem.codingpasses\\n              });\\n              position += packetItem.dataLength;\\n            }\\n          }\\n\\n          return position;\\n        }\\n\\n        function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\\n          var x0 = subband.tbx0;\\n          var y0 = subband.tby0;\\n          var width = subband.tbx1 - subband.tbx0;\\n          var codeblocks = subband.codeblocks;\\n          var right = subband.type.charAt(0) === 'H' ? 1 : 0;\\n          var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\\n\\n          for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\\n            var codeblock = codeblocks[i];\\n            var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\\n            var blockHeight = codeblock.tby1_ - codeblock.tby0_;\\n\\n            if (blockWidth === 0 || blockHeight === 0) {\\n              continue;\\n            }\\n\\n            if (codeblock['data'] === undefined) {\\n              continue;\\n            }\\n\\n            var bitModel, currentCodingpassType;\\n            bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\\n            currentCodingpassType = 2;\\n            var data = codeblock.data,\\n                totalLength = 0,\\n                codingpasses = 0;\\n            var j, jj, dataItem;\\n\\n            for (j = 0, jj = data.length; j < jj; j++) {\\n              dataItem = data[j];\\n              totalLength += dataItem.end - dataItem.start;\\n              codingpasses += dataItem.codingpasses;\\n            }\\n\\n            var encodedData = new Uint8Array(totalLength);\\n            var position = 0;\\n\\n            for (j = 0, jj = data.length; j < jj; j++) {\\n              dataItem = data[j];\\n              var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\\n              encodedData.set(chunk, position);\\n              position += chunk.length;\\n            }\\n\\n            var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\\n            bitModel.setDecoder(decoder);\\n\\n            for (j = 0; j < codingpasses; j++) {\\n              switch (currentCodingpassType) {\\n                case 0:\\n                  bitModel.runSignificancePropagationPass();\\n                  break;\\n\\n                case 1:\\n                  bitModel.runMagnitudeRefinementPass();\\n                  break;\\n\\n                case 2:\\n                  bitModel.runCleanupPass();\\n\\n                  if (segmentationSymbolUsed) {\\n                    bitModel.checkSegmentationSymbol();\\n                  }\\n\\n                  break;\\n              }\\n\\n              currentCodingpassType = (currentCodingpassType + 1) % 3;\\n            }\\n\\n            var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\\n            var sign = bitModel.coefficentsSign;\\n            var magnitude = bitModel.coefficentsMagnitude;\\n            var bitsDecoded = bitModel.bitsDecoded;\\n            var magnitudeCorrection = reversible ? 0 : 0.5;\\n            var k, n, nb;\\n            position = 0;\\n            var interleave = subband.type !== 'LL';\\n\\n            for (j = 0; j < blockHeight; j++) {\\n              var row = offset / width | 0;\\n              var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\\n\\n              for (k = 0; k < blockWidth; k++) {\\n                n = magnitude[position];\\n\\n                if (n !== 0) {\\n                  n = (n + magnitudeCorrection) * delta;\\n\\n                  if (sign[position] !== 0) {\\n                    n = -n;\\n                  }\\n\\n                  nb = bitsDecoded[position];\\n                  var pos = interleave ? levelOffset + (offset << 1) : offset;\\n\\n                  if (reversible && nb >= mb) {\\n                    coefficients[pos] = n;\\n                  } else {\\n                    coefficients[pos] = n * (1 << mb - nb);\\n                  }\\n                }\\n\\n                offset++;\\n                position++;\\n              }\\n\\n              offset += width - blockWidth;\\n            }\\n          }\\n        }\\n\\n        function transformTile(context, tile, c) {\\n          var component = tile.components[c];\\n          var codingStyleParameters = component.codingStyleParameters;\\n          var quantizationParameters = component.quantizationParameters;\\n          var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\\n          var spqcds = quantizationParameters.SPqcds;\\n          var scalarExpounded = quantizationParameters.scalarExpounded;\\n          var guardBits = quantizationParameters.guardBits;\\n          var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\\n          var precision = context.components[c].precision;\\n          var reversible = codingStyleParameters.reversibleTransformation;\\n          var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\\n          var subbandCoefficients = [];\\n          var b = 0;\\n\\n          for (var i = 0; i <= decompositionLevelsCount; i++) {\\n            var resolution = component.resolutions[i];\\n            var width = resolution.trx1 - resolution.trx0;\\n            var height = resolution.try1 - resolution.try0;\\n            var coefficients = new Float32Array(width * height);\\n\\n            for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\\n              var mu, epsilon;\\n\\n              if (!scalarExpounded) {\\n                mu = spqcds[0].mu;\\n                epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\\n              } else {\\n                mu = spqcds[b].mu;\\n                epsilon = spqcds[b].epsilon;\\n                b++;\\n              }\\n\\n              var subband = resolution.subbands[j];\\n              var gainLog2 = SubbandsGainLog2[subband.type];\\n              var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\\n              var mb = guardBits + epsilon - 1;\\n              copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\\n            }\\n\\n            subbandCoefficients.push({\\n              width: width,\\n              height: height,\\n              items: coefficients\\n            });\\n          }\\n\\n          var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\\n          return {\\n            left: component.tcx0,\\n            top: component.tcy0,\\n            width: result.width,\\n            height: result.height,\\n            items: result.items\\n          };\\n        }\\n\\n        function transformComponents(context) {\\n          var siz = context.SIZ;\\n          var components = context.components;\\n          var componentsCount = siz.Csiz;\\n          var resultImages = [];\\n\\n          for (var i = 0, ii = context.tiles.length; i < ii; i++) {\\n            var tile = context.tiles[i];\\n            var transformedTiles = [];\\n            var c;\\n\\n            for (c = 0; c < componentsCount; c++) {\\n              transformedTiles[c] = transformTile(context, tile, c);\\n            }\\n\\n            var tile0 = transformedTiles[0];\\n            var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\\n            var result = {\\n              left: tile0.left,\\n              top: tile0.top,\\n              width: tile0.width,\\n              height: tile0.height,\\n              items: out\\n            };\\n            var shift, offset;\\n            var pos = 0,\\n                j,\\n                jj,\\n                y0,\\n                y1,\\n                y2;\\n\\n            if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\\n              var fourComponents = componentsCount === 4;\\n              var y0items = transformedTiles[0].items;\\n              var y1items = transformedTiles[1].items;\\n              var y2items = transformedTiles[2].items;\\n              var y3items = fourComponents ? transformedTiles[3].items : null;\\n              shift = components[0].precision - 8;\\n              offset = (128 << shift) + 0.5;\\n              var component0 = tile.components[0];\\n              var alpha01 = componentsCount - 3;\\n              jj = y0items.length;\\n\\n              if (!component0.codingStyleParameters.reversibleTransformation) {\\n                for (j = 0; j < jj; j++, pos += alpha01) {\\n                  y0 = y0items[j] + offset;\\n                  y1 = y1items[j];\\n                  y2 = y2items[j];\\n                  out[pos++] = y0 + 1.402 * y2 >> shift;\\n                  out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\\n                  out[pos++] = y0 + 1.772 * y1 >> shift;\\n                }\\n              } else {\\n                for (j = 0; j < jj; j++, pos += alpha01) {\\n                  y0 = y0items[j] + offset;\\n                  y1 = y1items[j];\\n                  y2 = y2items[j];\\n                  var g = y0 - (y2 + y1 >> 2);\\n                  out[pos++] = g + y2 >> shift;\\n                  out[pos++] = g >> shift;\\n                  out[pos++] = g + y1 >> shift;\\n                }\\n              }\\n\\n              if (fourComponents) {\\n                for (j = 0, pos = 3; j < jj; j++, pos += 4) {\\n                  out[pos] = y3items[j] + offset >> shift;\\n                }\\n              }\\n            } else {\\n              for (c = 0; c < componentsCount; c++) {\\n                var items = transformedTiles[c].items;\\n                shift = components[c].precision - 8;\\n                offset = (128 << shift) + 0.5;\\n\\n                for (pos = c, j = 0, jj = items.length; j < jj; j++) {\\n                  out[pos] = items[j] + offset >> shift;\\n                  pos += componentsCount;\\n                }\\n              }\\n            }\\n\\n            resultImages.push(result);\\n          }\\n\\n          return resultImages;\\n        }\\n\\n        function initializeTile(context, tileIndex) {\\n          var siz = context.SIZ;\\n          var componentsCount = siz.Csiz;\\n          var tile = context.tiles[tileIndex];\\n\\n          for (var c = 0; c < componentsCount; c++) {\\n            var component = tile.components[c];\\n            var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\\n            component.quantizationParameters = qcdOrQcc;\\n            var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\\n            component.codingStyleParameters = codOrCoc;\\n          }\\n\\n          tile.codingStyleDefaultParameters = context.currentTile.COD;\\n        }\\n\\n        var TagTree = function TagTreeClosure() {\\n          function TagTree(width, height) {\\n            var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\\n            this.levels = [];\\n\\n            for (var i = 0; i < levelsLength; i++) {\\n              var level = {\\n                width: width,\\n                height: height,\\n                items: []\\n              };\\n              this.levels.push(level);\\n              width = Math.ceil(width / 2);\\n              height = Math.ceil(height / 2);\\n            }\\n          }\\n\\n          TagTree.prototype = {\\n            reset: function TagTree_reset(i, j) {\\n              var currentLevel = 0,\\n                  value = 0,\\n                  level;\\n\\n              while (currentLevel < this.levels.length) {\\n                level = this.levels[currentLevel];\\n                var index = i + j * level.width;\\n\\n                if (level.items[index] !== undefined) {\\n                  value = level.items[index];\\n                  break;\\n                }\\n\\n                level.index = index;\\n                i >>= 1;\\n                j >>= 1;\\n                currentLevel++;\\n              }\\n\\n              currentLevel--;\\n              level = this.levels[currentLevel];\\n              level.items[level.index] = value;\\n              this.currentLevel = currentLevel;\\n              delete this.value;\\n            },\\n            incrementValue: function TagTree_incrementValue() {\\n              var level = this.levels[this.currentLevel];\\n              level.items[level.index]++;\\n            },\\n            nextLevel: function TagTree_nextLevel() {\\n              var currentLevel = this.currentLevel;\\n              var level = this.levels[currentLevel];\\n              var value = level.items[level.index];\\n              currentLevel--;\\n\\n              if (currentLevel < 0) {\\n                this.value = value;\\n                return false;\\n              }\\n\\n              this.currentLevel = currentLevel;\\n              level = this.levels[currentLevel];\\n              level.items[level.index] = value;\\n              return true;\\n            }\\n          };\\n          return TagTree;\\n        }();\\n\\n        var InclusionTree = function InclusionTreeClosure() {\\n          function InclusionTree(width, height, defaultValue) {\\n            var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\\n            this.levels = [];\\n\\n            for (var i = 0; i < levelsLength; i++) {\\n              var items = new Uint8Array(width * height);\\n\\n              for (var j = 0, jj = items.length; j < jj; j++) {\\n                items[j] = defaultValue;\\n              }\\n\\n              var level = {\\n                width: width,\\n                height: height,\\n                items: items\\n              };\\n              this.levels.push(level);\\n              width = Math.ceil(width / 2);\\n              height = Math.ceil(height / 2);\\n            }\\n          }\\n\\n          InclusionTree.prototype = {\\n            reset: function InclusionTree_reset(i, j, stopValue) {\\n              var currentLevel = 0;\\n\\n              while (currentLevel < this.levels.length) {\\n                var level = this.levels[currentLevel];\\n                var index = i + j * level.width;\\n                level.index = index;\\n                var value = level.items[index];\\n\\n                if (value === 0xFF) {\\n                  break;\\n                }\\n\\n                if (value > stopValue) {\\n                  this.currentLevel = currentLevel;\\n                  this.propagateValues();\\n                  return false;\\n                }\\n\\n                i >>= 1;\\n                j >>= 1;\\n                currentLevel++;\\n              }\\n\\n              this.currentLevel = currentLevel - 1;\\n              return true;\\n            },\\n            incrementValue: function InclusionTree_incrementValue(stopValue) {\\n              var level = this.levels[this.currentLevel];\\n              level.items[level.index] = stopValue + 1;\\n              this.propagateValues();\\n            },\\n            propagateValues: function InclusionTree_propagateValues() {\\n              var levelIndex = this.currentLevel;\\n              var level = this.levels[levelIndex];\\n              var currentValue = level.items[level.index];\\n\\n              while (--levelIndex >= 0) {\\n                level = this.levels[levelIndex];\\n                level.items[level.index] = currentValue;\\n              }\\n            },\\n            nextLevel: function InclusionTree_nextLevel() {\\n              var currentLevel = this.currentLevel;\\n              var level = this.levels[currentLevel];\\n              var value = level.items[level.index];\\n              level.items[level.index] = 0xFF;\\n              currentLevel--;\\n\\n              if (currentLevel < 0) {\\n                return false;\\n              }\\n\\n              this.currentLevel = currentLevel;\\n              level = this.levels[currentLevel];\\n              level.items[level.index] = value;\\n              return true;\\n            }\\n          };\\n          return InclusionTree;\\n        }();\\n\\n        var BitModel = function BitModelClosure() {\\n          var UNIFORM_CONTEXT = 17;\\n          var RUNLENGTH_CONTEXT = 18;\\n          var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\\n          var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\\n          var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\\n\\n          function BitModel(width, height, subband, zeroBitPlanes, mb) {\\n            this.width = width;\\n            this.height = height;\\n            this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\\n            var coefficientCount = width * height;\\n            this.neighborsSignificance = new Uint8Array(coefficientCount);\\n            this.coefficentsSign = new Uint8Array(coefficientCount);\\n            this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\\n            this.processingFlags = new Uint8Array(coefficientCount);\\n            var bitsDecoded = new Uint8Array(coefficientCount);\\n\\n            if (zeroBitPlanes !== 0) {\\n              for (var i = 0; i < coefficientCount; i++) {\\n                bitsDecoded[i] = zeroBitPlanes;\\n              }\\n            }\\n\\n            this.bitsDecoded = bitsDecoded;\\n            this.reset();\\n          }\\n\\n          BitModel.prototype = {\\n            setDecoder: function BitModel_setDecoder(decoder) {\\n              this.decoder = decoder;\\n            },\\n            reset: function BitModel_reset() {\\n              this.contexts = new Int8Array(19);\\n              this.contexts[0] = 4 << 1 | 0;\\n              this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\\n              this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\\n            },\\n            setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\\n              var neighborsSignificance = this.neighborsSignificance;\\n              var width = this.width,\\n                  height = this.height;\\n              var left = column > 0;\\n              var right = column + 1 < width;\\n              var i;\\n\\n              if (row > 0) {\\n                i = index - width;\\n\\n                if (left) {\\n                  neighborsSignificance[i - 1] += 0x10;\\n                }\\n\\n                if (right) {\\n                  neighborsSignificance[i + 1] += 0x10;\\n                }\\n\\n                neighborsSignificance[i] += 0x04;\\n              }\\n\\n              if (row + 1 < height) {\\n                i = index + width;\\n\\n                if (left) {\\n                  neighborsSignificance[i - 1] += 0x10;\\n                }\\n\\n                if (right) {\\n                  neighborsSignificance[i + 1] += 0x10;\\n                }\\n\\n                neighborsSignificance[i] += 0x04;\\n              }\\n\\n              if (left) {\\n                neighborsSignificance[index - 1] += 0x01;\\n              }\\n\\n              if (right) {\\n                neighborsSignificance[index + 1] += 0x01;\\n              }\\n\\n              neighborsSignificance[index] |= 0x80;\\n            },\\n            runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\\n              var decoder = this.decoder;\\n              var width = this.width,\\n                  height = this.height;\\n              var coefficentsMagnitude = this.coefficentsMagnitude;\\n              var coefficentsSign = this.coefficentsSign;\\n              var neighborsSignificance = this.neighborsSignificance;\\n              var processingFlags = this.processingFlags;\\n              var contexts = this.contexts;\\n              var labels = this.contextLabelTable;\\n              var bitsDecoded = this.bitsDecoded;\\n              var processedInverseMask = ~1;\\n              var processedMask = 1;\\n              var firstMagnitudeBitMask = 2;\\n\\n              for (var i0 = 0; i0 < height; i0 += 4) {\\n                for (var j = 0; j < width; j++) {\\n                  var index = i0 * width + j;\\n\\n                  for (var i1 = 0; i1 < 4; i1++, index += width) {\\n                    var i = i0 + i1;\\n\\n                    if (i >= height) {\\n                      break;\\n                    }\\n\\n                    processingFlags[index] &= processedInverseMask;\\n\\n                    if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\\n                      continue;\\n                    }\\n\\n                    var contextLabel = labels[neighborsSignificance[index]];\\n                    var decision = decoder.readBit(contexts, contextLabel);\\n\\n                    if (decision) {\\n                      var sign = this.decodeSignBit(i, j, index);\\n                      coefficentsSign[index] = sign;\\n                      coefficentsMagnitude[index] = 1;\\n                      this.setNeighborsSignificance(i, j, index);\\n                      processingFlags[index] |= firstMagnitudeBitMask;\\n                    }\\n\\n                    bitsDecoded[index]++;\\n                    processingFlags[index] |= processedMask;\\n                  }\\n                }\\n              }\\n            },\\n            decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\\n              var width = this.width,\\n                  height = this.height;\\n              var coefficentsMagnitude = this.coefficentsMagnitude;\\n              var coefficentsSign = this.coefficentsSign;\\n              var contribution, sign0, sign1, significance1;\\n              var contextLabel, decoded;\\n              significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\\n\\n              if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\\n                sign1 = coefficentsSign[index + 1];\\n\\n                if (significance1) {\\n                  sign0 = coefficentsSign[index - 1];\\n                  contribution = 1 - sign1 - sign0;\\n                } else {\\n                  contribution = 1 - sign1 - sign1;\\n                }\\n              } else if (significance1) {\\n                sign0 = coefficentsSign[index - 1];\\n                contribution = 1 - sign0 - sign0;\\n              } else {\\n                contribution = 0;\\n              }\\n\\n              var horizontalContribution = 3 * contribution;\\n              significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\\n\\n              if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\\n                sign1 = coefficentsSign[index + width];\\n\\n                if (significance1) {\\n                  sign0 = coefficentsSign[index - width];\\n                  contribution = 1 - sign1 - sign0 + horizontalContribution;\\n                } else {\\n                  contribution = 1 - sign1 - sign1 + horizontalContribution;\\n                }\\n              } else if (significance1) {\\n                sign0 = coefficentsSign[index - width];\\n                contribution = 1 - sign0 - sign0 + horizontalContribution;\\n              } else {\\n                contribution = horizontalContribution;\\n              }\\n\\n              if (contribution >= 0) {\\n                contextLabel = 9 + contribution;\\n                decoded = this.decoder.readBit(this.contexts, contextLabel);\\n              } else {\\n                contextLabel = 9 - contribution;\\n                decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\\n              }\\n\\n              return decoded;\\n            },\\n            runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\\n              var decoder = this.decoder;\\n              var width = this.width,\\n                  height = this.height;\\n              var coefficentsMagnitude = this.coefficentsMagnitude;\\n              var neighborsSignificance = this.neighborsSignificance;\\n              var contexts = this.contexts;\\n              var bitsDecoded = this.bitsDecoded;\\n              var processingFlags = this.processingFlags;\\n              var processedMask = 1;\\n              var firstMagnitudeBitMask = 2;\\n              var length = width * height;\\n              var width4 = width * 4;\\n\\n              for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\\n                indexNext = Math.min(length, index0 + width4);\\n\\n                for (var j = 0; j < width; j++) {\\n                  for (var index = index0 + j; index < indexNext; index += width) {\\n                    if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\\n                      continue;\\n                    }\\n\\n                    var contextLabel = 16;\\n\\n                    if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\\n                      processingFlags[index] ^= firstMagnitudeBitMask;\\n                      var significance = neighborsSignificance[index] & 127;\\n                      contextLabel = significance === 0 ? 15 : 14;\\n                    }\\n\\n                    var bit = decoder.readBit(contexts, contextLabel);\\n                    coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\\n                    bitsDecoded[index]++;\\n                    processingFlags[index] |= processedMask;\\n                  }\\n                }\\n              }\\n            },\\n            runCleanupPass: function BitModel_runCleanupPass() {\\n              var decoder = this.decoder;\\n              var width = this.width,\\n                  height = this.height;\\n              var neighborsSignificance = this.neighborsSignificance;\\n              var coefficentsMagnitude = this.coefficentsMagnitude;\\n              var coefficentsSign = this.coefficentsSign;\\n              var contexts = this.contexts;\\n              var labels = this.contextLabelTable;\\n              var bitsDecoded = this.bitsDecoded;\\n              var processingFlags = this.processingFlags;\\n              var processedMask = 1;\\n              var firstMagnitudeBitMask = 2;\\n              var oneRowDown = width;\\n              var twoRowsDown = width * 2;\\n              var threeRowsDown = width * 3;\\n              var iNext;\\n\\n              for (var i0 = 0; i0 < height; i0 = iNext) {\\n                iNext = Math.min(i0 + 4, height);\\n                var indexBase = i0 * width;\\n                var checkAllEmpty = i0 + 3 < height;\\n\\n                for (var j = 0; j < width; j++) {\\n                  var index0 = indexBase + j;\\n                  var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\\n                  var i1 = 0,\\n                      index = index0;\\n                  var i = i0,\\n                      sign;\\n\\n                  if (allEmpty) {\\n                    var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\\n\\n                    if (!hasSignificantCoefficent) {\\n                      bitsDecoded[index0]++;\\n                      bitsDecoded[index0 + oneRowDown]++;\\n                      bitsDecoded[index0 + twoRowsDown]++;\\n                      bitsDecoded[index0 + threeRowsDown]++;\\n                      continue;\\n                    }\\n\\n                    i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\\n\\n                    if (i1 !== 0) {\\n                      i = i0 + i1;\\n                      index += i1 * width;\\n                    }\\n\\n                    sign = this.decodeSignBit(i, j, index);\\n                    coefficentsSign[index] = sign;\\n                    coefficentsMagnitude[index] = 1;\\n                    this.setNeighborsSignificance(i, j, index);\\n                    processingFlags[index] |= firstMagnitudeBitMask;\\n                    index = index0;\\n\\n                    for (var i2 = i0; i2 <= i; i2++, index += width) {\\n                      bitsDecoded[index]++;\\n                    }\\n\\n                    i1++;\\n                  }\\n\\n                  for (i = i0 + i1; i < iNext; i++, index += width) {\\n                    if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\\n                      continue;\\n                    }\\n\\n                    var contextLabel = labels[neighborsSignificance[index]];\\n                    var decision = decoder.readBit(contexts, contextLabel);\\n\\n                    if (decision === 1) {\\n                      sign = this.decodeSignBit(i, j, index);\\n                      coefficentsSign[index] = sign;\\n                      coefficentsMagnitude[index] = 1;\\n                      this.setNeighborsSignificance(i, j, index);\\n                      processingFlags[index] |= firstMagnitudeBitMask;\\n                    }\\n\\n                    bitsDecoded[index]++;\\n                  }\\n                }\\n              }\\n            },\\n            checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\\n              var decoder = this.decoder;\\n              var contexts = this.contexts;\\n              var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\\n\\n              if (symbol !== 0xA) {\\n                throw new JpxError('Invalid segmentation symbol');\\n              }\\n            }\\n          };\\n          return BitModel;\\n        }();\\n\\n        var Transform = function TransformClosure() {\\n          function Transform() {}\\n\\n          Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\\n            var ll = subbands[0];\\n\\n            for (var i = 1, ii = subbands.length; i < ii; i++) {\\n              ll = this.iterate(ll, subbands[i], u0, v0);\\n            }\\n\\n            return ll;\\n          };\\n\\n          Transform.prototype.extend = function extend(buffer, offset, size) {\\n            var i1 = offset - 1,\\n                j1 = offset + 1;\\n            var i2 = offset + size - 2,\\n                j2 = offset + size;\\n            buffer[i1--] = buffer[j1++];\\n            buffer[j2++] = buffer[i2--];\\n            buffer[i1--] = buffer[j1++];\\n            buffer[j2++] = buffer[i2--];\\n            buffer[i1--] = buffer[j1++];\\n            buffer[j2++] = buffer[i2--];\\n            buffer[i1] = buffer[j1];\\n            buffer[j2] = buffer[i2];\\n          };\\n\\n          Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\\n            var llWidth = ll.width,\\n                llHeight = ll.height,\\n                llItems = ll.items;\\n            var width = hl_lh_hh.width;\\n            var height = hl_lh_hh.height;\\n            var items = hl_lh_hh.items;\\n            var i, j, k, l, u, v;\\n\\n            for (k = 0, i = 0; i < llHeight; i++) {\\n              l = i * 2 * width;\\n\\n              for (j = 0; j < llWidth; j++, k++, l += 2) {\\n                items[l] = llItems[k];\\n              }\\n            }\\n\\n            llItems = ll.items = null;\\n            var bufferPadding = 4;\\n            var rowBuffer = new Float32Array(width + 2 * bufferPadding);\\n\\n            if (width === 1) {\\n              if ((u0 & 1) !== 0) {\\n                for (v = 0, k = 0; v < height; v++, k += width) {\\n                  items[k] *= 0.5;\\n                }\\n              }\\n            } else {\\n              for (v = 0, k = 0; v < height; v++, k += width) {\\n                rowBuffer.set(items.subarray(k, k + width), bufferPadding);\\n                this.extend(rowBuffer, bufferPadding, width);\\n                this.filter(rowBuffer, bufferPadding, width);\\n                items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\\n              }\\n            }\\n\\n            var numBuffers = 16;\\n            var colBuffers = [];\\n\\n            for (i = 0; i < numBuffers; i++) {\\n              colBuffers.push(new Float32Array(height + 2 * bufferPadding));\\n            }\\n\\n            var b,\\n                currentBuffer = 0;\\n            ll = bufferPadding + height;\\n\\n            if (height === 1) {\\n              if ((v0 & 1) !== 0) {\\n                for (u = 0; u < width; u++) {\\n                  items[u] *= 0.5;\\n                }\\n              }\\n            } else {\\n              for (u = 0; u < width; u++) {\\n                if (currentBuffer === 0) {\\n                  numBuffers = Math.min(width - u, numBuffers);\\n\\n                  for (k = u, l = bufferPadding; l < ll; k += width, l++) {\\n                    for (b = 0; b < numBuffers; b++) {\\n                      colBuffers[b][l] = items[k + b];\\n                    }\\n                  }\\n\\n                  currentBuffer = numBuffers;\\n                }\\n\\n                currentBuffer--;\\n                var buffer = colBuffers[currentBuffer];\\n                this.extend(buffer, bufferPadding, height);\\n                this.filter(buffer, bufferPadding, height);\\n\\n                if (currentBuffer === 0) {\\n                  k = u - numBuffers + 1;\\n\\n                  for (l = bufferPadding; l < ll; k += width, l++) {\\n                    for (b = 0; b < numBuffers; b++) {\\n                      items[k + b] = colBuffers[b][l];\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n\\n            return {\\n              width: width,\\n              height: height,\\n              items: items\\n            };\\n          };\\n\\n          return Transform;\\n        }();\\n\\n        var IrreversibleTransform = function IrreversibleTransformClosure() {\\n          function IrreversibleTransform() {\\n            Transform.call(this);\\n          }\\n\\n          IrreversibleTransform.prototype = Object.create(Transform.prototype);\\n\\n          IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\\n            var len = length >> 1;\\n            offset = offset | 0;\\n            var j, n, current, next;\\n            var alpha = -1.586134342059924;\\n            var beta = -0.052980118572961;\\n            var gamma = 0.882911075530934;\\n            var delta = 0.443506852043971;\\n            var K = 1.230174104914001;\\n            var K_ = 1 / K;\\n            j = offset - 3;\\n\\n            for (n = len + 4; n--; j += 2) {\\n              x[j] *= K_;\\n            }\\n\\n            j = offset - 2;\\n            current = delta * x[j - 1];\\n\\n            for (n = len + 3; n--; j += 2) {\\n              next = delta * x[j + 1];\\n              x[j] = K * x[j] - current - next;\\n\\n              if (n--) {\\n                j += 2;\\n                current = delta * x[j + 1];\\n                x[j] = K * x[j] - current - next;\\n              } else {\\n                break;\\n              }\\n            }\\n\\n            j = offset - 1;\\n            current = gamma * x[j - 1];\\n\\n            for (n = len + 2; n--; j += 2) {\\n              next = gamma * x[j + 1];\\n              x[j] -= current + next;\\n\\n              if (n--) {\\n                j += 2;\\n                current = gamma * x[j + 1];\\n                x[j] -= current + next;\\n              } else {\\n                break;\\n              }\\n            }\\n\\n            j = offset;\\n            current = beta * x[j - 1];\\n\\n            for (n = len + 1; n--; j += 2) {\\n              next = beta * x[j + 1];\\n              x[j] -= current + next;\\n\\n              if (n--) {\\n                j += 2;\\n                current = beta * x[j + 1];\\n                x[j] -= current + next;\\n              } else {\\n                break;\\n              }\\n            }\\n\\n            if (len !== 0) {\\n              j = offset + 1;\\n              current = alpha * x[j - 1];\\n\\n              for (n = len; n--; j += 2) {\\n                next = alpha * x[j + 1];\\n                x[j] -= current + next;\\n\\n                if (n--) {\\n                  j += 2;\\n                  current = alpha * x[j + 1];\\n                  x[j] -= current + next;\\n                } else {\\n                  break;\\n                }\\n              }\\n            }\\n          };\\n\\n          return IrreversibleTransform;\\n        }();\\n\\n        var ReversibleTransform = function ReversibleTransformClosure() {\\n          function ReversibleTransform() {\\n            Transform.call(this);\\n          }\\n\\n          ReversibleTransform.prototype = Object.create(Transform.prototype);\\n\\n          ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\\n            var len = length >> 1;\\n            offset = offset | 0;\\n            var j, n;\\n\\n            for (j = offset, n = len + 1; n--; j += 2) {\\n              x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\\n            }\\n\\n            for (j = offset + 1, n = len; n--; j += 2) {\\n              x[j] += x[j - 1] + x[j + 1] >> 1;\\n            }\\n          };\\n\\n          return ReversibleTransform;\\n        }();\\n\\n        return JpxImage;\\n      }();\\n\\n      exports.JpxImage = JpxImage;\\n      /***/\\n    },\\n    /* 167 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _possibleConstructorReturn(self, call) {\\n        if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n          return call;\\n        }\\n\\n        return _assertThisInitialized(self);\\n      }\\n\\n      function _assertThisInitialized(self) {\\n        if (self === void 0) {\\n          throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n        }\\n\\n        return self;\\n      }\\n\\n      function _getPrototypeOf(o) {\\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n          return o.__proto__ || Object.getPrototypeOf(o);\\n        };\\n        return _getPrototypeOf(o);\\n      }\\n\\n      function _inherits(subClass, superClass) {\\n        if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n          throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n        }\\n\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n          constructor: {\\n            value: subClass,\\n            writable: true,\\n            configurable: true\\n          }\\n        });\\n        if (superClass) _setPrototypeOf(subClass, superClass);\\n      }\\n\\n      function _setPrototypeOf(o, p) {\\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n          o.__proto__ = p;\\n          return o;\\n        };\\n\\n        return _setPrototypeOf(o, p);\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var ARCFourCipher = function ARCFourCipherClosure() {\\n        function ARCFourCipher(key) {\\n          this.a = 0;\\n          this.b = 0;\\n          var s = new Uint8Array(256);\\n          var i,\\n              j = 0,\\n              tmp,\\n              keyLength = key.length;\\n\\n          for (i = 0; i < 256; ++i) {\\n            s[i] = i;\\n          }\\n\\n          for (i = 0; i < 256; ++i) {\\n            tmp = s[i];\\n            j = j + tmp + key[i % keyLength] & 0xFF;\\n            s[i] = s[j];\\n            s[j] = tmp;\\n          }\\n\\n          this.s = s;\\n        }\\n\\n        ARCFourCipher.prototype = {\\n          encryptBlock: function ARCFourCipher_encryptBlock(data) {\\n            var i,\\n                n = data.length,\\n                tmp,\\n                tmp2;\\n            var a = this.a,\\n                b = this.b,\\n                s = this.s;\\n            var output = new Uint8Array(n);\\n\\n            for (i = 0; i < n; ++i) {\\n              a = a + 1 & 0xFF;\\n              tmp = s[a];\\n              b = b + tmp & 0xFF;\\n              tmp2 = s[b];\\n              s[a] = tmp2;\\n              s[b] = tmp;\\n              output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\\n            }\\n\\n            this.a = a;\\n            this.b = b;\\n            return output;\\n          }\\n        };\\n        ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\\n        return ARCFourCipher;\\n      }();\\n\\n      exports.ARCFourCipher = ARCFourCipher;\\n\\n      var calculateMD5 = function calculateMD5Closure() {\\n        var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\\n        var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\\n\\n        function hash(data, offset, length) {\\n          var h0 = 1732584193,\\n              h1 = -271733879,\\n              h2 = -1732584194,\\n              h3 = 271733878;\\n          var paddedLength = length + 72 & ~63;\\n          var padded = new Uint8Array(paddedLength);\\n          var i, j, n;\\n\\n          for (i = 0; i < length; ++i) {\\n            padded[i] = data[offset++];\\n          }\\n\\n          padded[i++] = 0x80;\\n          n = paddedLength - 8;\\n\\n          while (i < n) {\\n            padded[i++] = 0;\\n          }\\n\\n          padded[i++] = length << 3 & 0xFF;\\n          padded[i++] = length >> 5 & 0xFF;\\n          padded[i++] = length >> 13 & 0xFF;\\n          padded[i++] = length >> 21 & 0xFF;\\n          padded[i++] = length >>> 29 & 0xFF;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          var w = new Int32Array(16);\\n\\n          for (i = 0; i < paddedLength;) {\\n            for (j = 0; j < 16; ++j, i += 4) {\\n              w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\\n            }\\n\\n            var a = h0,\\n                b = h1,\\n                c = h2,\\n                d = h3,\\n                f,\\n                g;\\n\\n            for (j = 0; j < 64; ++j) {\\n              if (j < 16) {\\n                f = b & c | ~b & d;\\n                g = j;\\n              } else if (j < 32) {\\n                f = d & b | ~d & c;\\n                g = 5 * j + 1 & 15;\\n              } else if (j < 48) {\\n                f = b ^ c ^ d;\\n                g = 3 * j + 5 & 15;\\n              } else {\\n                f = c ^ (b | ~d);\\n                g = 7 * j & 15;\\n              }\\n\\n              var tmp = d,\\n                  rotateArg = a + f + k[j] + w[g] | 0,\\n                  rotate = r[j];\\n              d = c;\\n              c = b;\\n              b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\\n              a = tmp;\\n            }\\n\\n            h0 = h0 + a | 0;\\n            h1 = h1 + b | 0;\\n            h2 = h2 + c | 0;\\n            h3 = h3 + d | 0;\\n          }\\n\\n          return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\\n        }\\n\\n        return hash;\\n      }();\\n\\n      exports.calculateMD5 = calculateMD5;\\n\\n      var Word64 = function Word64Closure() {\\n        function Word64(highInteger, lowInteger) {\\n          this.high = highInteger | 0;\\n          this.low = lowInteger | 0;\\n        }\\n\\n        Word64.prototype = {\\n          and: function Word64_and(word) {\\n            this.high &= word.high;\\n            this.low &= word.low;\\n          },\\n          xor: function Word64_xor(word) {\\n            this.high ^= word.high;\\n            this.low ^= word.low;\\n          },\\n          or: function Word64_or(word) {\\n            this.high |= word.high;\\n            this.low |= word.low;\\n          },\\n          shiftRight: function Word64_shiftRight(places) {\\n            if (places >= 32) {\\n              this.low = this.high >>> places - 32 | 0;\\n              this.high = 0;\\n            } else {\\n              this.low = this.low >>> places | this.high << 32 - places;\\n              this.high = this.high >>> places | 0;\\n            }\\n          },\\n          shiftLeft: function Word64_shiftLeft(places) {\\n            if (places >= 32) {\\n              this.high = this.low << places - 32;\\n              this.low = 0;\\n            } else {\\n              this.high = this.high << places | this.low >>> 32 - places;\\n              this.low = this.low << places;\\n            }\\n          },\\n          rotateRight: function Word64_rotateRight(places) {\\n            var low, high;\\n\\n            if (places & 32) {\\n              high = this.low;\\n              low = this.high;\\n            } else {\\n              low = this.low;\\n              high = this.high;\\n            }\\n\\n            places &= 31;\\n            this.low = low >>> places | high << 32 - places;\\n            this.high = high >>> places | low << 32 - places;\\n          },\\n          not: function Word64_not() {\\n            this.high = ~this.high;\\n            this.low = ~this.low;\\n          },\\n          add: function Word64_add(word) {\\n            var lowAdd = (this.low >>> 0) + (word.low >>> 0);\\n            var highAdd = (this.high >>> 0) + (word.high >>> 0);\\n\\n            if (lowAdd > 0xFFFFFFFF) {\\n              highAdd += 1;\\n            }\\n\\n            this.low = lowAdd | 0;\\n            this.high = highAdd | 0;\\n          },\\n          copyTo: function Word64_copyTo(bytes, offset) {\\n            bytes[offset] = this.high >>> 24 & 0xFF;\\n            bytes[offset + 1] = this.high >> 16 & 0xFF;\\n            bytes[offset + 2] = this.high >> 8 & 0xFF;\\n            bytes[offset + 3] = this.high & 0xFF;\\n            bytes[offset + 4] = this.low >>> 24 & 0xFF;\\n            bytes[offset + 5] = this.low >> 16 & 0xFF;\\n            bytes[offset + 6] = this.low >> 8 & 0xFF;\\n            bytes[offset + 7] = this.low & 0xFF;\\n          },\\n          assign: function Word64_assign(word) {\\n            this.high = word.high;\\n            this.low = word.low;\\n          }\\n        };\\n        return Word64;\\n      }();\\n\\n      var calculateSHA256 = function calculateSHA256Closure() {\\n        function rotr(x, n) {\\n          return x >>> n | x << 32 - n;\\n        }\\n\\n        function ch(x, y, z) {\\n          return x & y ^ ~x & z;\\n        }\\n\\n        function maj(x, y, z) {\\n          return x & y ^ x & z ^ y & z;\\n        }\\n\\n        function sigma(x) {\\n          return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\\n        }\\n\\n        function sigmaPrime(x) {\\n          return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\\n        }\\n\\n        function littleSigma(x) {\\n          return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\\n        }\\n\\n        function littleSigmaPrime(x) {\\n          return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\\n        }\\n\\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\\n\\n        function hash(data, offset, length) {\\n          var h0 = 0x6a09e667,\\n              h1 = 0xbb67ae85,\\n              h2 = 0x3c6ef372,\\n              h3 = 0xa54ff53a,\\n              h4 = 0x510e527f,\\n              h5 = 0x9b05688c,\\n              h6 = 0x1f83d9ab,\\n              h7 = 0x5be0cd19;\\n          var paddedLength = Math.ceil((length + 9) / 64) * 64;\\n          var padded = new Uint8Array(paddedLength);\\n          var i, j, n;\\n\\n          for (i = 0; i < length; ++i) {\\n            padded[i] = data[offset++];\\n          }\\n\\n          padded[i++] = 0x80;\\n          n = paddedLength - 8;\\n\\n          while (i < n) {\\n            padded[i++] = 0;\\n          }\\n\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = length >>> 29 & 0xFF;\\n          padded[i++] = length >> 21 & 0xFF;\\n          padded[i++] = length >> 13 & 0xFF;\\n          padded[i++] = length >> 5 & 0xFF;\\n          padded[i++] = length << 3 & 0xFF;\\n          var w = new Uint32Array(64);\\n\\n          for (i = 0; i < paddedLength;) {\\n            for (j = 0; j < 16; ++j) {\\n              w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\\n              i += 4;\\n            }\\n\\n            for (j = 16; j < 64; ++j) {\\n              w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\\n            }\\n\\n            var a = h0,\\n                b = h1,\\n                c = h2,\\n                d = h3,\\n                e = h4,\\n                f = h5,\\n                g = h6,\\n                h = h7,\\n                t1,\\n                t2;\\n\\n            for (j = 0; j < 64; ++j) {\\n              t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\\n              t2 = sigma(a) + maj(a, b, c);\\n              h = g;\\n              g = f;\\n              f = e;\\n              e = d + t1 | 0;\\n              d = c;\\n              c = b;\\n              b = a;\\n              a = t1 + t2 | 0;\\n            }\\n\\n            h0 = h0 + a | 0;\\n            h1 = h1 + b | 0;\\n            h2 = h2 + c | 0;\\n            h3 = h3 + d | 0;\\n            h4 = h4 + e | 0;\\n            h5 = h5 + f | 0;\\n            h6 = h6 + g | 0;\\n            h7 = h7 + h | 0;\\n          }\\n\\n          return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\\n        }\\n\\n        return hash;\\n      }();\\n\\n      exports.calculateSHA256 = calculateSHA256;\\n\\n      var calculateSHA512 = function calculateSHA512Closure() {\\n        function ch(result, x, y, z, tmp) {\\n          result.assign(x);\\n          result.and(y);\\n          tmp.assign(x);\\n          tmp.not();\\n          tmp.and(z);\\n          result.xor(tmp);\\n        }\\n\\n        function maj(result, x, y, z, tmp) {\\n          result.assign(x);\\n          result.and(y);\\n          tmp.assign(x);\\n          tmp.and(z);\\n          result.xor(tmp);\\n          tmp.assign(y);\\n          tmp.and(z);\\n          result.xor(tmp);\\n        }\\n\\n        function sigma(result, x, tmp) {\\n          result.assign(x);\\n          result.rotateRight(28);\\n          tmp.assign(x);\\n          tmp.rotateRight(34);\\n          result.xor(tmp);\\n          tmp.assign(x);\\n          tmp.rotateRight(39);\\n          result.xor(tmp);\\n        }\\n\\n        function sigmaPrime(result, x, tmp) {\\n          result.assign(x);\\n          result.rotateRight(14);\\n          tmp.assign(x);\\n          tmp.rotateRight(18);\\n          result.xor(tmp);\\n          tmp.assign(x);\\n          tmp.rotateRight(41);\\n          result.xor(tmp);\\n        }\\n\\n        function littleSigma(result, x, tmp) {\\n          result.assign(x);\\n          result.rotateRight(1);\\n          tmp.assign(x);\\n          tmp.rotateRight(8);\\n          result.xor(tmp);\\n          tmp.assign(x);\\n          tmp.shiftRight(7);\\n          result.xor(tmp);\\n        }\\n\\n        function littleSigmaPrime(result, x, tmp) {\\n          result.assign(x);\\n          result.rotateRight(19);\\n          tmp.assign(x);\\n          tmp.rotateRight(61);\\n          result.xor(tmp);\\n          tmp.assign(x);\\n          tmp.shiftRight(6);\\n          result.xor(tmp);\\n        }\\n\\n        var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\\n\\n        function hash(data, offset, length, mode384) {\\n          mode384 = !!mode384;\\n          var h0, h1, h2, h3, h4, h5, h6, h7;\\n\\n          if (!mode384) {\\n            h0 = new Word64(0x6a09e667, 0xf3bcc908);\\n            h1 = new Word64(0xbb67ae85, 0x84caa73b);\\n            h2 = new Word64(0x3c6ef372, 0xfe94f82b);\\n            h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\\n            h4 = new Word64(0x510e527f, 0xade682d1);\\n            h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\\n            h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\\n            h7 = new Word64(0x5be0cd19, 0x137e2179);\\n          } else {\\n            h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\\n            h1 = new Word64(0x629a292a, 0x367cd507);\\n            h2 = new Word64(0x9159015a, 0x3070dd17);\\n            h3 = new Word64(0x152fecd8, 0xf70e5939);\\n            h4 = new Word64(0x67332667, 0xffc00b31);\\n            h5 = new Word64(0x8eb44a87, 0x68581511);\\n            h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\\n            h7 = new Word64(0x47b5481d, 0xbefa4fa4);\\n          }\\n\\n          var paddedLength = Math.ceil((length + 17) / 128) * 128;\\n          var padded = new Uint8Array(paddedLength);\\n          var i, j, n;\\n\\n          for (i = 0; i < length; ++i) {\\n            padded[i] = data[offset++];\\n          }\\n\\n          padded[i++] = 0x80;\\n          n = paddedLength - 16;\\n\\n          while (i < n) {\\n            padded[i++] = 0;\\n          }\\n\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = 0;\\n          padded[i++] = length >>> 29 & 0xFF;\\n          padded[i++] = length >> 21 & 0xFF;\\n          padded[i++] = length >> 13 & 0xFF;\\n          padded[i++] = length >> 5 & 0xFF;\\n          padded[i++] = length << 3 & 0xFF;\\n          var w = new Array(80);\\n\\n          for (i = 0; i < 80; i++) {\\n            w[i] = new Word64(0, 0);\\n          }\\n\\n          var a = new Word64(0, 0),\\n              b = new Word64(0, 0),\\n              c = new Word64(0, 0);\\n          var d = new Word64(0, 0),\\n              e = new Word64(0, 0),\\n              f = new Word64(0, 0);\\n          var g = new Word64(0, 0),\\n              h = new Word64(0, 0);\\n          var t1 = new Word64(0, 0),\\n              t2 = new Word64(0, 0);\\n          var tmp1 = new Word64(0, 0),\\n              tmp2 = new Word64(0, 0),\\n              tmp3;\\n\\n          for (i = 0; i < paddedLength;) {\\n            for (j = 0; j < 16; ++j) {\\n              w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\\n              w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\\n              i += 8;\\n            }\\n\\n            for (j = 16; j < 80; ++j) {\\n              tmp3 = w[j];\\n              littleSigmaPrime(tmp3, w[j - 2], tmp2);\\n              tmp3.add(w[j - 7]);\\n              littleSigma(tmp1, w[j - 15], tmp2);\\n              tmp3.add(tmp1);\\n              tmp3.add(w[j - 16]);\\n            }\\n\\n            a.assign(h0);\\n            b.assign(h1);\\n            c.assign(h2);\\n            d.assign(h3);\\n            e.assign(h4);\\n            f.assign(h5);\\n            g.assign(h6);\\n            h.assign(h7);\\n\\n            for (j = 0; j < 80; ++j) {\\n              t1.assign(h);\\n              sigmaPrime(tmp1, e, tmp2);\\n              t1.add(tmp1);\\n              ch(tmp1, e, f, g, tmp2);\\n              t1.add(tmp1);\\n              t1.add(k[j]);\\n              t1.add(w[j]);\\n              sigma(t2, a, tmp2);\\n              maj(tmp1, a, b, c, tmp2);\\n              t2.add(tmp1);\\n              tmp3 = h;\\n              h = g;\\n              g = f;\\n              f = e;\\n              d.add(t1);\\n              e = d;\\n              d = c;\\n              c = b;\\n              b = a;\\n              tmp3.assign(t1);\\n              tmp3.add(t2);\\n              a = tmp3;\\n            }\\n\\n            h0.add(a);\\n            h1.add(b);\\n            h2.add(c);\\n            h3.add(d);\\n            h4.add(e);\\n            h5.add(f);\\n            h6.add(g);\\n            h7.add(h);\\n          }\\n\\n          var result;\\n\\n          if (!mode384) {\\n            result = new Uint8Array(64);\\n            h0.copyTo(result, 0);\\n            h1.copyTo(result, 8);\\n            h2.copyTo(result, 16);\\n            h3.copyTo(result, 24);\\n            h4.copyTo(result, 32);\\n            h5.copyTo(result, 40);\\n            h6.copyTo(result, 48);\\n            h7.copyTo(result, 56);\\n          } else {\\n            result = new Uint8Array(48);\\n            h0.copyTo(result, 0);\\n            h1.copyTo(result, 8);\\n            h2.copyTo(result, 16);\\n            h3.copyTo(result, 24);\\n            h4.copyTo(result, 32);\\n            h5.copyTo(result, 40);\\n          }\\n\\n          return result;\\n        }\\n\\n        return hash;\\n      }();\\n\\n      exports.calculateSHA512 = calculateSHA512;\\n\\n      var calculateSHA384 = function calculateSHA384Closure() {\\n        function hash(data, offset, length) {\\n          return calculateSHA512(data, offset, length, true);\\n        }\\n\\n        return hash;\\n      }();\\n\\n      exports.calculateSHA384 = calculateSHA384;\\n\\n      var NullCipher = function NullCipherClosure() {\\n        function NullCipher() {}\\n\\n        NullCipher.prototype = {\\n          decryptBlock: function NullCipher_decryptBlock(data) {\\n            return data;\\n          }\\n        };\\n        return NullCipher;\\n      }();\\n\\n      var AESBaseCipher =\\n      /*#__PURE__*/\\n      function () {\\n        function AESBaseCipher() {\\n          _classCallCheck(this, AESBaseCipher);\\n\\n          if (this.constructor === AESBaseCipher) {\\n            (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\\n          }\\n\\n          this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\\n          this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\\n          this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\\n          this._mixCol = new Uint8Array(256);\\n\\n          for (var i = 0; i < 256; i++) {\\n            if (i < 128) {\\n              this._mixCol[i] = i << 1;\\n            } else {\\n              this._mixCol[i] = i << 1 ^ 0x1b;\\n            }\\n          }\\n\\n          this.buffer = new Uint8Array(16);\\n          this.bufferPosition = 0;\\n        }\\n\\n        _createClass(AESBaseCipher, [{\\n          key: \\\"_expandKey\\\",\\n          value: function _expandKey(cipherKey) {\\n            (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\\n          }\\n        }, {\\n          key: \\\"_decrypt\\\",\\n          value: function _decrypt(input, key) {\\n            var t, u, v;\\n            var state = new Uint8Array(16);\\n            state.set(input);\\n\\n            for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\\n              state[j] ^= key[k];\\n            }\\n\\n            for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\\n              t = state[13];\\n              state[13] = state[9];\\n              state[9] = state[5];\\n              state[5] = state[1];\\n              state[1] = t;\\n              t = state[14];\\n              u = state[10];\\n              state[14] = state[6];\\n              state[10] = state[2];\\n              state[6] = t;\\n              state[2] = u;\\n              t = state[15];\\n              u = state[11];\\n              v = state[7];\\n              state[15] = state[3];\\n              state[11] = t;\\n              state[7] = u;\\n              state[3] = v;\\n\\n              for (var _j = 0; _j < 16; ++_j) {\\n                state[_j] = this._inv_s[state[_j]];\\n              }\\n\\n              for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\\n                state[_j2] ^= key[_k];\\n              }\\n\\n              for (var _j3 = 0; _j3 < 16; _j3 += 4) {\\n                var s0 = this._mix[state[_j3]];\\n                var s1 = this._mix[state[_j3 + 1]];\\n                var s2 = this._mix[state[_j3 + 2]];\\n                var s3 = this._mix[state[_j3 + 3]];\\n                t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\\n                state[_j3] = t >>> 24 & 0xFF;\\n                state[_j3 + 1] = t >> 16 & 0xFF;\\n                state[_j3 + 2] = t >> 8 & 0xFF;\\n                state[_j3 + 3] = t & 0xFF;\\n              }\\n            }\\n\\n            t = state[13];\\n            state[13] = state[9];\\n            state[9] = state[5];\\n            state[5] = state[1];\\n            state[1] = t;\\n            t = state[14];\\n            u = state[10];\\n            state[14] = state[6];\\n            state[10] = state[2];\\n            state[6] = t;\\n            state[2] = u;\\n            t = state[15];\\n            u = state[11];\\n            v = state[7];\\n            state[15] = state[3];\\n            state[11] = t;\\n            state[7] = u;\\n            state[3] = v;\\n\\n            for (var _j4 = 0; _j4 < 16; ++_j4) {\\n              state[_j4] = this._inv_s[state[_j4]];\\n              state[_j4] ^= key[_j4];\\n            }\\n\\n            return state;\\n          }\\n        }, {\\n          key: \\\"_encrypt\\\",\\n          value: function _encrypt(input, key) {\\n            var s = this._s;\\n            var t, u, v;\\n            var state = new Uint8Array(16);\\n            state.set(input);\\n\\n            for (var j = 0; j < 16; ++j) {\\n              state[j] ^= key[j];\\n            }\\n\\n            for (var i = 1; i < this._cyclesOfRepetition; i++) {\\n              for (var _j5 = 0; _j5 < 16; ++_j5) {\\n                state[_j5] = s[state[_j5]];\\n              }\\n\\n              v = state[1];\\n              state[1] = state[5];\\n              state[5] = state[9];\\n              state[9] = state[13];\\n              state[13] = v;\\n              v = state[2];\\n              u = state[6];\\n              state[2] = state[10];\\n              state[6] = state[14];\\n              state[10] = v;\\n              state[14] = u;\\n              v = state[3];\\n              u = state[7];\\n              t = state[11];\\n              state[3] = state[15];\\n              state[7] = v;\\n              state[11] = u;\\n              state[15] = t;\\n\\n              for (var _j6 = 0; _j6 < 16; _j6 += 4) {\\n                var s0 = state[_j6 + 0];\\n                var s1 = state[_j6 + 1];\\n                var s2 = state[_j6 + 2];\\n                var s3 = state[_j6 + 3];\\n                t = s0 ^ s1 ^ s2 ^ s3;\\n                state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\\n                state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\\n                state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\\n                state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\\n              }\\n\\n              for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\\n                state[_j7] ^= key[k];\\n              }\\n            }\\n\\n            for (var _j8 = 0; _j8 < 16; ++_j8) {\\n              state[_j8] = s[state[_j8]];\\n            }\\n\\n            v = state[1];\\n            state[1] = state[5];\\n            state[5] = state[9];\\n            state[9] = state[13];\\n            state[13] = v;\\n            v = state[2];\\n            u = state[6];\\n            state[2] = state[10];\\n            state[6] = state[14];\\n            state[10] = v;\\n            state[14] = u;\\n            v = state[3];\\n            u = state[7];\\n            t = state[11];\\n            state[3] = state[15];\\n            state[7] = v;\\n            state[11] = u;\\n            state[15] = t;\\n\\n            for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\\n              state[_j9] ^= key[_k2];\\n            }\\n\\n            return state;\\n          }\\n        }, {\\n          key: \\\"_decryptBlock2\\\",\\n          value: function _decryptBlock2(data, finalize) {\\n            var sourceLength = data.length;\\n            var buffer = this.buffer,\\n                bufferLength = this.bufferPosition;\\n            var result = [],\\n                iv = this.iv;\\n\\n            for (var i = 0; i < sourceLength; ++i) {\\n              buffer[bufferLength] = data[i];\\n              ++bufferLength;\\n\\n              if (bufferLength < 16) {\\n                continue;\\n              }\\n\\n              var plain = this._decrypt(buffer, this._key);\\n\\n              for (var j = 0; j < 16; ++j) {\\n                plain[j] ^= iv[j];\\n              }\\n\\n              iv = buffer;\\n              result.push(plain);\\n              buffer = new Uint8Array(16);\\n              bufferLength = 0;\\n            }\\n\\n            this.buffer = buffer;\\n            this.bufferLength = bufferLength;\\n            this.iv = iv;\\n\\n            if (result.length === 0) {\\n              return new Uint8Array(0);\\n            }\\n\\n            var outputLength = 16 * result.length;\\n\\n            if (finalize) {\\n              var lastBlock = result[result.length - 1];\\n              var psLen = lastBlock[15];\\n\\n              if (psLen <= 16) {\\n                for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\\n                  if (lastBlock[_i] !== psLen) {\\n                    psLen = 0;\\n                    break;\\n                  }\\n                }\\n\\n                outputLength -= psLen;\\n                result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\\n              }\\n            }\\n\\n            var output = new Uint8Array(outputLength);\\n\\n            for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\\n              output.set(result[_i2], _j10);\\n            }\\n\\n            return output;\\n          }\\n        }, {\\n          key: \\\"decryptBlock\\\",\\n          value: function decryptBlock(data, finalize) {\\n            var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\\n            var sourceLength = data.length;\\n            var buffer = this.buffer,\\n                bufferLength = this.bufferPosition;\\n\\n            if (iv) {\\n              this.iv = iv;\\n            } else {\\n              for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\\n                buffer[bufferLength] = data[i];\\n              }\\n\\n              if (bufferLength < 16) {\\n                this.bufferLength = bufferLength;\\n                return new Uint8Array(0);\\n              }\\n\\n              this.iv = buffer;\\n              data = data.subarray(16);\\n            }\\n\\n            this.buffer = new Uint8Array(16);\\n            this.bufferLength = 0;\\n            this.decryptBlock = this._decryptBlock2;\\n            return this.decryptBlock(data, finalize);\\n          }\\n        }, {\\n          key: \\\"encrypt\\\",\\n          value: function encrypt(data, iv) {\\n            var sourceLength = data.length;\\n            var buffer = this.buffer,\\n                bufferLength = this.bufferPosition;\\n            var result = [];\\n\\n            if (!iv) {\\n              iv = new Uint8Array(16);\\n            }\\n\\n            for (var i = 0; i < sourceLength; ++i) {\\n              buffer[bufferLength] = data[i];\\n              ++bufferLength;\\n\\n              if (bufferLength < 16) {\\n                continue;\\n              }\\n\\n              for (var j = 0; j < 16; ++j) {\\n                buffer[j] ^= iv[j];\\n              }\\n\\n              var cipher = this._encrypt(buffer, this._key);\\n\\n              iv = cipher;\\n              result.push(cipher);\\n              buffer = new Uint8Array(16);\\n              bufferLength = 0;\\n            }\\n\\n            this.buffer = buffer;\\n            this.bufferLength = bufferLength;\\n            this.iv = iv;\\n\\n            if (result.length === 0) {\\n              return new Uint8Array(0);\\n            }\\n\\n            var outputLength = 16 * result.length;\\n            var output = new Uint8Array(outputLength);\\n\\n            for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\\n              output.set(result[_i3], _j11);\\n            }\\n\\n            return output;\\n          }\\n        }]);\\n\\n        return AESBaseCipher;\\n      }();\\n\\n      var AES128Cipher =\\n      /*#__PURE__*/\\n      function (_AESBaseCipher) {\\n        _inherits(AES128Cipher, _AESBaseCipher);\\n\\n        function AES128Cipher(key) {\\n          var _this;\\n\\n          _classCallCheck(this, AES128Cipher);\\n\\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AES128Cipher).call(this));\\n          _this._cyclesOfRepetition = 10;\\n          _this._keySize = 160;\\n          _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\\n          _this._key = _this._expandKey(key);\\n          return _this;\\n        }\\n\\n        _createClass(AES128Cipher, [{\\n          key: \\\"_expandKey\\\",\\n          value: function _expandKey(cipherKey) {\\n            var b = 176;\\n            var s = this._s;\\n            var rcon = this._rcon;\\n            var result = new Uint8Array(b);\\n            result.set(cipherKey);\\n\\n            for (var j = 16, i = 1; j < b; ++i) {\\n              var t1 = result[j - 3];\\n              var t2 = result[j - 2];\\n              var t3 = result[j - 1];\\n              var t4 = result[j - 4];\\n              t1 = s[t1];\\n              t2 = s[t2];\\n              t3 = s[t3];\\n              t4 = s[t4];\\n              t1 = t1 ^ rcon[i];\\n\\n              for (var n = 0; n < 4; ++n) {\\n                result[j] = t1 ^= result[j - 16];\\n                j++;\\n                result[j] = t2 ^= result[j - 16];\\n                j++;\\n                result[j] = t3 ^= result[j - 16];\\n                j++;\\n                result[j] = t4 ^= result[j - 16];\\n                j++;\\n              }\\n            }\\n\\n            return result;\\n          }\\n        }]);\\n\\n        return AES128Cipher;\\n      }(AESBaseCipher);\\n\\n      exports.AES128Cipher = AES128Cipher;\\n\\n      var AES256Cipher =\\n      /*#__PURE__*/\\n      function (_AESBaseCipher2) {\\n        _inherits(AES256Cipher, _AESBaseCipher2);\\n\\n        function AES256Cipher(key) {\\n          var _this2;\\n\\n          _classCallCheck(this, AES256Cipher);\\n\\n          _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AES256Cipher).call(this));\\n          _this2._cyclesOfRepetition = 14;\\n          _this2._keySize = 224;\\n          _this2._key = _this2._expandKey(key);\\n          return _this2;\\n        }\\n\\n        _createClass(AES256Cipher, [{\\n          key: \\\"_expandKey\\\",\\n          value: function _expandKey(cipherKey) {\\n            var b = 240;\\n            var s = this._s;\\n            var result = new Uint8Array(b);\\n            result.set(cipherKey);\\n            var r = 1;\\n            var t1, t2, t3, t4;\\n\\n            for (var j = 32, i = 1; j < b; ++i) {\\n              if (j % 32 === 16) {\\n                t1 = s[t1];\\n                t2 = s[t2];\\n                t3 = s[t3];\\n                t4 = s[t4];\\n              } else if (j % 32 === 0) {\\n                t1 = result[j - 3];\\n                t2 = result[j - 2];\\n                t3 = result[j - 1];\\n                t4 = result[j - 4];\\n                t1 = s[t1];\\n                t2 = s[t2];\\n                t3 = s[t3];\\n                t4 = s[t4];\\n                t1 = t1 ^ r;\\n\\n                if ((r <<= 1) >= 256) {\\n                  r = (r ^ 0x1b) & 0xFF;\\n                }\\n              }\\n\\n              for (var n = 0; n < 4; ++n) {\\n                result[j] = t1 ^= result[j - 32];\\n                j++;\\n                result[j] = t2 ^= result[j - 32];\\n                j++;\\n                result[j] = t3 ^= result[j - 32];\\n                j++;\\n                result[j] = t4 ^= result[j - 32];\\n                j++;\\n              }\\n            }\\n\\n            return result;\\n          }\\n        }]);\\n\\n        return AES256Cipher;\\n      }(AESBaseCipher);\\n\\n      exports.AES256Cipher = AES256Cipher;\\n\\n      var PDF17 = function PDF17Closure() {\\n        function compareByteArrays(array1, array2) {\\n          if (array1.length !== array2.length) {\\n            return false;\\n          }\\n\\n          for (var i = 0; i < array1.length; i++) {\\n            if (array1[i] !== array2[i]) {\\n              return false;\\n            }\\n          }\\n\\n          return true;\\n        }\\n\\n        function PDF17() {}\\n\\n        PDF17.prototype = {\\n          checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\\n            var hashData = new Uint8Array(password.length + 56);\\n            hashData.set(password, 0);\\n            hashData.set(ownerValidationSalt, password.length);\\n            hashData.set(userBytes, password.length + ownerValidationSalt.length);\\n            var result = calculateSHA256(hashData, 0, hashData.length);\\n            return compareByteArrays(result, ownerPassword);\\n          },\\n          checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\\n            var hashData = new Uint8Array(password.length + 8);\\n            hashData.set(password, 0);\\n            hashData.set(userValidationSalt, password.length);\\n            var result = calculateSHA256(hashData, 0, hashData.length);\\n            return compareByteArrays(result, userPassword);\\n          },\\n          getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\\n            var hashData = new Uint8Array(password.length + 56);\\n            hashData.set(password, 0);\\n            hashData.set(ownerKeySalt, password.length);\\n            hashData.set(userBytes, password.length + ownerKeySalt.length);\\n            var key = calculateSHA256(hashData, 0, hashData.length);\\n            var cipher = new AES256Cipher(key);\\n            return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\\n          },\\n          getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\\n            var hashData = new Uint8Array(password.length + 8);\\n            hashData.set(password, 0);\\n            hashData.set(userKeySalt, password.length);\\n            var key = calculateSHA256(hashData, 0, hashData.length);\\n            var cipher = new AES256Cipher(key);\\n            return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\\n          }\\n        };\\n        return PDF17;\\n      }();\\n\\n      exports.PDF17 = PDF17;\\n\\n      var PDF20 = function PDF20Closure() {\\n        function concatArrays(array1, array2) {\\n          var t = new Uint8Array(array1.length + array2.length);\\n          t.set(array1, 0);\\n          t.set(array2, array1.length);\\n          return t;\\n        }\\n\\n        function calculatePDF20Hash(password, input, userBytes) {\\n          var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\\n          var e = [0];\\n          var i = 0;\\n\\n          while (i < 64 || e[e.length - 1] > i - 32) {\\n            var arrayLength = password.length + k.length + userBytes.length;\\n            var k1 = new Uint8Array(arrayLength * 64);\\n            var array = concatArrays(password, k);\\n            array = concatArrays(array, userBytes);\\n\\n            for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\\n              k1.set(array, pos);\\n            }\\n\\n            var cipher = new AES128Cipher(k.subarray(0, 16));\\n            e = cipher.encrypt(k1, k.subarray(16, 32));\\n            var remainder = 0;\\n\\n            for (var z = 0; z < 16; z++) {\\n              remainder *= 256 % 3;\\n              remainder %= 3;\\n              remainder += (e[z] >>> 0) % 3;\\n              remainder %= 3;\\n            }\\n\\n            if (remainder === 0) {\\n              k = calculateSHA256(e, 0, e.length);\\n            } else if (remainder === 1) {\\n              k = calculateSHA384(e, 0, e.length);\\n            } else if (remainder === 2) {\\n              k = calculateSHA512(e, 0, e.length);\\n            }\\n\\n            i++;\\n          }\\n\\n          return k.subarray(0, 32);\\n        }\\n\\n        function PDF20() {}\\n\\n        function compareByteArrays(array1, array2) {\\n          if (array1.length !== array2.length) {\\n            return false;\\n          }\\n\\n          for (var i = 0; i < array1.length; i++) {\\n            if (array1[i] !== array2[i]) {\\n              return false;\\n            }\\n          }\\n\\n          return true;\\n        }\\n\\n        PDF20.prototype = {\\n          hash: function PDF20_hash(password, concatBytes, userBytes) {\\n            return calculatePDF20Hash(password, concatBytes, userBytes);\\n          },\\n          checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\\n            var hashData = new Uint8Array(password.length + 56);\\n            hashData.set(password, 0);\\n            hashData.set(ownerValidationSalt, password.length);\\n            hashData.set(userBytes, password.length + ownerValidationSalt.length);\\n            var result = calculatePDF20Hash(password, hashData, userBytes);\\n            return compareByteArrays(result, ownerPassword);\\n          },\\n          checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\\n            var hashData = new Uint8Array(password.length + 8);\\n            hashData.set(password, 0);\\n            hashData.set(userValidationSalt, password.length);\\n            var result = calculatePDF20Hash(password, hashData, []);\\n            return compareByteArrays(result, userPassword);\\n          },\\n          getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\\n            var hashData = new Uint8Array(password.length + 56);\\n            hashData.set(password, 0);\\n            hashData.set(ownerKeySalt, password.length);\\n            hashData.set(userBytes, password.length + ownerKeySalt.length);\\n            var key = calculatePDF20Hash(password, hashData, userBytes);\\n            var cipher = new AES256Cipher(key);\\n            return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\\n          },\\n          getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\\n            var hashData = new Uint8Array(password.length + 8);\\n            hashData.set(password, 0);\\n            hashData.set(userKeySalt, password.length);\\n            var key = calculatePDF20Hash(password, hashData, []);\\n            var cipher = new AES256Cipher(key);\\n            return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\\n          }\\n        };\\n        return PDF20;\\n      }();\\n\\n      exports.PDF20 = PDF20;\\n\\n      var CipherTransform = function CipherTransformClosure() {\\n        function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\\n          this.StringCipherConstructor = stringCipherConstructor;\\n          this.StreamCipherConstructor = streamCipherConstructor;\\n        }\\n\\n        CipherTransform.prototype = {\\n          createStream: function CipherTransform_createStream(stream, length) {\\n            var cipher = new this.StreamCipherConstructor();\\n            return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\\n              return cipher.decryptBlock(data, finalize);\\n            });\\n          },\\n          decryptString: function CipherTransform_decryptString(s) {\\n            var cipher = new this.StringCipherConstructor();\\n            var data = (0, _util.stringToBytes)(s);\\n            data = cipher.decryptBlock(data, true);\\n            return (0, _util.bytesToString)(data);\\n          }\\n        };\\n        return CipherTransform;\\n      }();\\n\\n      var CipherTransformFactory = function CipherTransformFactoryClosure() {\\n        var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\\n\\n        function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\\n          if (password) {\\n            var passwordLength = Math.min(127, password.length);\\n            password = password.subarray(0, passwordLength);\\n          } else {\\n            password = [];\\n          }\\n\\n          var pdfAlgorithm;\\n\\n          if (revision === 6) {\\n            pdfAlgorithm = new PDF20();\\n          } else {\\n            pdfAlgorithm = new PDF17();\\n          }\\n\\n          if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\\n            return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\\n          } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\\n            return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\\n          }\\n\\n          return null;\\n        }\\n\\n        function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\\n          var hashDataSize = 40 + ownerPassword.length + fileId.length;\\n          var hashData = new Uint8Array(hashDataSize),\\n              i = 0,\\n              j,\\n              n;\\n\\n          if (password) {\\n            n = Math.min(32, password.length);\\n\\n            for (; i < n; ++i) {\\n              hashData[i] = password[i];\\n            }\\n          }\\n\\n          j = 0;\\n\\n          while (i < 32) {\\n            hashData[i++] = defaultPasswordBytes[j++];\\n          }\\n\\n          for (j = 0, n = ownerPassword.length; j < n; ++j) {\\n            hashData[i++] = ownerPassword[j];\\n          }\\n\\n          hashData[i++] = flags & 0xFF;\\n          hashData[i++] = flags >> 8 & 0xFF;\\n          hashData[i++] = flags >> 16 & 0xFF;\\n          hashData[i++] = flags >>> 24 & 0xFF;\\n\\n          for (j = 0, n = fileId.length; j < n; ++j) {\\n            hashData[i++] = fileId[j];\\n          }\\n\\n          if (revision >= 4 && !encryptMetadata) {\\n            hashData[i++] = 0xFF;\\n            hashData[i++] = 0xFF;\\n            hashData[i++] = 0xFF;\\n            hashData[i++] = 0xFF;\\n          }\\n\\n          var hash = calculateMD5(hashData, 0, i);\\n          var keyLengthInBytes = keyLength >> 3;\\n\\n          if (revision >= 3) {\\n            for (j = 0; j < 50; ++j) {\\n              hash = calculateMD5(hash, 0, keyLengthInBytes);\\n            }\\n          }\\n\\n          var encryptionKey = hash.subarray(0, keyLengthInBytes);\\n          var cipher, checkData;\\n\\n          if (revision >= 3) {\\n            for (i = 0; i < 32; ++i) {\\n              hashData[i] = defaultPasswordBytes[i];\\n            }\\n\\n            for (j = 0, n = fileId.length; j < n; ++j) {\\n              hashData[i++] = fileId[j];\\n            }\\n\\n            cipher = new ARCFourCipher(encryptionKey);\\n            checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\\n            n = encryptionKey.length;\\n            var derivedKey = new Uint8Array(n),\\n                k;\\n\\n            for (j = 1; j <= 19; ++j) {\\n              for (k = 0; k < n; ++k) {\\n                derivedKey[k] = encryptionKey[k] ^ j;\\n              }\\n\\n              cipher = new ARCFourCipher(derivedKey);\\n              checkData = cipher.encryptBlock(checkData);\\n            }\\n\\n            for (j = 0, n = checkData.length; j < n; ++j) {\\n              if (userPassword[j] !== checkData[j]) {\\n                return null;\\n              }\\n            }\\n          } else {\\n            cipher = new ARCFourCipher(encryptionKey);\\n            checkData = cipher.encryptBlock(defaultPasswordBytes);\\n\\n            for (j = 0, n = checkData.length; j < n; ++j) {\\n              if (userPassword[j] !== checkData[j]) {\\n                return null;\\n              }\\n            }\\n          }\\n\\n          return encryptionKey;\\n        }\\n\\n        function decodeUserPassword(password, ownerPassword, revision, keyLength) {\\n          var hashData = new Uint8Array(32),\\n              i = 0,\\n              j,\\n              n;\\n          n = Math.min(32, password.length);\\n\\n          for (; i < n; ++i) {\\n            hashData[i] = password[i];\\n          }\\n\\n          j = 0;\\n\\n          while (i < 32) {\\n            hashData[i++] = defaultPasswordBytes[j++];\\n          }\\n\\n          var hash = calculateMD5(hashData, 0, i);\\n          var keyLengthInBytes = keyLength >> 3;\\n\\n          if (revision >= 3) {\\n            for (j = 0; j < 50; ++j) {\\n              hash = calculateMD5(hash, 0, hash.length);\\n            }\\n          }\\n\\n          var cipher, userPassword;\\n\\n          if (revision >= 3) {\\n            userPassword = ownerPassword;\\n            var derivedKey = new Uint8Array(keyLengthInBytes),\\n                k;\\n\\n            for (j = 19; j >= 0; j--) {\\n              for (k = 0; k < keyLengthInBytes; ++k) {\\n                derivedKey[k] = hash[k] ^ j;\\n              }\\n\\n              cipher = new ARCFourCipher(derivedKey);\\n              userPassword = cipher.encryptBlock(userPassword);\\n            }\\n          } else {\\n            cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\\n            userPassword = cipher.encryptBlock(ownerPassword);\\n          }\\n\\n          return userPassword;\\n        }\\n\\n        var identityName = _primitives.Name.get('Identity');\\n\\n        function CipherTransformFactory(dict, fileId, password) {\\n          var filter = dict.get('Filter');\\n\\n          if (!(0, _primitives.isName)(filter, 'Standard')) {\\n            throw new _util.FormatError('unknown encryption method');\\n          }\\n\\n          this.dict = dict;\\n          var algorithm = dict.get('V');\\n\\n          if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\\n            throw new _util.FormatError('unsupported encryption algorithm');\\n          }\\n\\n          this.algorithm = algorithm;\\n          var keyLength = dict.get('Length');\\n\\n          if (!keyLength) {\\n            if (algorithm <= 3) {\\n              keyLength = 40;\\n            } else {\\n              var cfDict = dict.get('CF');\\n              var streamCryptoName = dict.get('StmF');\\n\\n              if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\\n                cfDict.suppressEncryption = true;\\n                var handlerDict = cfDict.get(streamCryptoName.name);\\n                keyLength = handlerDict && handlerDict.get('Length') || 128;\\n\\n                if (keyLength < 40) {\\n                  keyLength <<= 3;\\n                }\\n              }\\n            }\\n          }\\n\\n          if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\\n            throw new _util.FormatError('invalid key length');\\n          }\\n\\n          var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\\n          var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\\n          var flags = dict.get('P');\\n          var revision = dict.get('R');\\n          var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\\n          this.encryptMetadata = encryptMetadata;\\n          var fileIdBytes = (0, _util.stringToBytes)(fileId);\\n          var passwordBytes;\\n\\n          if (password) {\\n            if (revision === 6) {\\n              try {\\n                password = (0, _util.utf8StringToString)(password);\\n              } catch (ex) {\\n                (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\\n              }\\n            }\\n\\n            passwordBytes = (0, _util.stringToBytes)(password);\\n          }\\n\\n          var encryptionKey;\\n\\n          if (algorithm !== 5) {\\n            encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\\n          } else {\\n            var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\\n            var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\\n            var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\\n            var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\\n            var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\\n            var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\\n            var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\\n            var perms = (0, _util.stringToBytes)(dict.get('Perms'));\\n            encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\\n          }\\n\\n          if (!encryptionKey && !password) {\\n            throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\\n          } else if (!encryptionKey && password) {\\n            var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\\n            encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\\n          }\\n\\n          if (!encryptionKey) {\\n            throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\\n          }\\n\\n          this.encryptionKey = encryptionKey;\\n\\n          if (algorithm >= 4) {\\n            var cf = dict.get('CF');\\n\\n            if ((0, _primitives.isDict)(cf)) {\\n              cf.suppressEncryption = true;\\n            }\\n\\n            this.cf = cf;\\n            this.stmf = dict.get('StmF') || identityName;\\n            this.strf = dict.get('StrF') || identityName;\\n            this.eff = dict.get('EFF') || this.stmf;\\n          }\\n        }\\n\\n        function buildObjectKey(num, gen, encryptionKey, isAes) {\\n          var key = new Uint8Array(encryptionKey.length + 9),\\n              i,\\n              n;\\n\\n          for (i = 0, n = encryptionKey.length; i < n; ++i) {\\n            key[i] = encryptionKey[i];\\n          }\\n\\n          key[i++] = num & 0xFF;\\n          key[i++] = num >> 8 & 0xFF;\\n          key[i++] = num >> 16 & 0xFF;\\n          key[i++] = gen & 0xFF;\\n          key[i++] = gen >> 8 & 0xFF;\\n\\n          if (isAes) {\\n            key[i++] = 0x73;\\n            key[i++] = 0x41;\\n            key[i++] = 0x6C;\\n            key[i++] = 0x54;\\n          }\\n\\n          var hash = calculateMD5(key, 0, i);\\n          return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\\n        }\\n\\n        function buildCipherConstructor(cf, name, num, gen, key) {\\n          if (!(0, _primitives.isName)(name)) {\\n            throw new _util.FormatError('Invalid crypt filter name.');\\n          }\\n\\n          var cryptFilter = cf.get(name.name);\\n          var cfm;\\n\\n          if (cryptFilter !== null && cryptFilter !== undefined) {\\n            cfm = cryptFilter.get('CFM');\\n          }\\n\\n          if (!cfm || cfm.name === 'None') {\\n            return function cipherTransformFactoryBuildCipherConstructorNone() {\\n              return new NullCipher();\\n            };\\n          }\\n\\n          if (cfm.name === 'V2') {\\n            return function cipherTransformFactoryBuildCipherConstructorV2() {\\n              return new ARCFourCipher(buildObjectKey(num, gen, key, false));\\n            };\\n          }\\n\\n          if (cfm.name === 'AESV2') {\\n            return function cipherTransformFactoryBuildCipherConstructorAESV2() {\\n              return new AES128Cipher(buildObjectKey(num, gen, key, true));\\n            };\\n          }\\n\\n          if (cfm.name === 'AESV3') {\\n            return function cipherTransformFactoryBuildCipherConstructorAESV3() {\\n              return new AES256Cipher(key);\\n            };\\n          }\\n\\n          throw new _util.FormatError('Unknown crypto method');\\n        }\\n\\n        CipherTransformFactory.prototype = {\\n          createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\\n            if (this.algorithm === 4 || this.algorithm === 5) {\\n              return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\\n            }\\n\\n            var key = buildObjectKey(num, gen, this.encryptionKey, false);\\n\\n            var cipherConstructor = function buildCipherCipherConstructor() {\\n              return new ARCFourCipher(key);\\n            };\\n\\n            return new CipherTransform(cipherConstructor, cipherConstructor);\\n          }\\n        };\\n        return CipherTransformFactory;\\n      }();\\n\\n      exports.CipherTransformFactory = CipherTransformFactory;\\n      /***/\\n    },\\n    /* 168 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.ColorSpace = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _possibleConstructorReturn(self, call) {\\n        if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n          return call;\\n        }\\n\\n        return _assertThisInitialized(self);\\n      }\\n\\n      function _assertThisInitialized(self) {\\n        if (self === void 0) {\\n          throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n        }\\n\\n        return self;\\n      }\\n\\n      function _getPrototypeOf(o) {\\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n          return o.__proto__ || Object.getPrototypeOf(o);\\n        };\\n        return _getPrototypeOf(o);\\n      }\\n\\n      function _inherits(subClass, superClass) {\\n        if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n          throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n        }\\n\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n          constructor: {\\n            value: subClass,\\n            writable: true,\\n            configurable: true\\n          }\\n        });\\n        if (superClass) _setPrototypeOf(subClass, superClass);\\n      }\\n\\n      function _setPrototypeOf(o, p) {\\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n          o.__proto__ = p;\\n          return o;\\n        };\\n\\n        return _setPrototypeOf(o, p);\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      function resizeRgbImage(src, dest, w1, h1, w2, h2, alpha01) {\\n        var COMPONENTS = 3;\\n        alpha01 = alpha01 !== 1 ? 0 : alpha01;\\n        var xRatio = w1 / w2;\\n        var yRatio = h1 / h2;\\n        var newIndex = 0,\\n            oldIndex;\\n        var xScaled = new Uint16Array(w2);\\n        var w1Scanline = w1 * COMPONENTS;\\n\\n        for (var i = 0; i < w2; i++) {\\n          xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\\n        }\\n\\n        for (var _i = 0; _i < h2; _i++) {\\n          var py = Math.floor(_i * yRatio) * w1Scanline;\\n\\n          for (var j = 0; j < w2; j++) {\\n            oldIndex = py + xScaled[j];\\n            dest[newIndex++] = src[oldIndex++];\\n            dest[newIndex++] = src[oldIndex++];\\n            dest[newIndex++] = src[oldIndex++];\\n            newIndex += alpha01;\\n          }\\n        }\\n      }\\n\\n      var ColorSpace =\\n      /*#__PURE__*/\\n      function () {\\n        function ColorSpace(name, numComps) {\\n          _classCallCheck(this, ColorSpace);\\n\\n          if (this.constructor === ColorSpace) {\\n            (0, _util.unreachable)('Cannot initialize ColorSpace.');\\n          }\\n\\n          this.name = name;\\n          this.numComps = numComps;\\n        }\\n\\n        _createClass(ColorSpace, [{\\n          key: \\\"getRgb\\\",\\n          value: function getRgb(src, srcOffset) {\\n            var rgb = new Uint8ClampedArray(3);\\n            this.getRgbItem(src, srcOffset, rgb, 0);\\n            return rgb;\\n          }\\n        }, {\\n          key: \\\"getRgbItem\\\",\\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n            (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\\n          }\\n        }, {\\n          key: \\\"getRgbBuffer\\\",\\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n            (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\\n          }\\n        }, {\\n          key: \\\"getOutputLength\\\",\\n          value: function getOutputLength(inputLength, alpha01) {\\n            (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\\n          }\\n        }, {\\n          key: \\\"isPassthrough\\\",\\n          value: function isPassthrough(bits) {\\n            return false;\\n          }\\n        }, {\\n          key: \\\"isDefaultDecode\\\",\\n          value: function isDefaultDecode(decodeMap, bpc) {\\n            return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\n          }\\n        }, {\\n          key: \\\"fillRgb\\\",\\n          value: function fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\\n            var count = originalWidth * originalHeight;\\n            var rgbBuf = null;\\n            var numComponentColors = 1 << bpc;\\n            var needsResizing = originalHeight !== height || originalWidth !== width;\\n\\n            if (this.isPassthrough(bpc)) {\\n              rgbBuf = comps;\\n            } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\\n              var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\\n\\n              for (var i = 0; i < numComponentColors; i++) {\\n                allColors[i] = i;\\n              }\\n\\n              var colorMap = new Uint8ClampedArray(numComponentColors * 3);\\n              this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\\n\\n              if (!needsResizing) {\\n                var destPos = 0;\\n\\n                for (var _i2 = 0; _i2 < count; ++_i2) {\\n                  var key = comps[_i2] * 3;\\n                  dest[destPos++] = colorMap[key];\\n                  dest[destPos++] = colorMap[key + 1];\\n                  dest[destPos++] = colorMap[key + 2];\\n                  destPos += alpha01;\\n                }\\n              } else {\\n                rgbBuf = new Uint8Array(count * 3);\\n                var rgbPos = 0;\\n\\n                for (var _i3 = 0; _i3 < count; ++_i3) {\\n                  var _key = comps[_i3] * 3;\\n\\n                  rgbBuf[rgbPos++] = colorMap[_key];\\n                  rgbBuf[rgbPos++] = colorMap[_key + 1];\\n                  rgbBuf[rgbPos++] = colorMap[_key + 2];\\n                }\\n              }\\n            } else {\\n              if (!needsResizing) {\\n                this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\\n              } else {\\n                rgbBuf = new Uint8ClampedArray(count * 3);\\n                this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\\n              }\\n            }\\n\\n            if (rgbBuf) {\\n              if (needsResizing) {\\n                resizeRgbImage(rgbBuf, dest, originalWidth, originalHeight, width, height, alpha01);\\n              } else {\\n                var _destPos = 0,\\n                    _rgbPos = 0;\\n\\n                for (var _i4 = 0, ii = width * actualHeight; _i4 < ii; _i4++) {\\n                  dest[_destPos++] = rgbBuf[_rgbPos++];\\n                  dest[_destPos++] = rgbBuf[_rgbPos++];\\n                  dest[_destPos++] = rgbBuf[_rgbPos++];\\n                  _destPos += alpha01;\\n                }\\n              }\\n            }\\n          }\\n        }, {\\n          key: \\\"usesZeroToOneRange\\\",\\n          get: function get() {\\n            return (0, _util.shadow)(this, 'usesZeroToOneRange', true);\\n          }\\n        }], [{\\n          key: \\\"parse\\\",\\n          value: function parse(cs, xref, res, pdfFunctionFactory) {\\n            var IR = this.parseToIR(cs, xref, res, pdfFunctionFactory);\\n            return this.fromIR(IR);\\n          }\\n        }, {\\n          key: \\\"fromIR\\\",\\n          value: function fromIR(IR) {\\n            var name = Array.isArray(IR) ? IR[0] : IR;\\n            var whitePoint, blackPoint, gamma;\\n\\n            switch (name) {\\n              case 'DeviceGrayCS':\\n                return this.singletons.gray;\\n\\n              case 'DeviceRgbCS':\\n                return this.singletons.rgb;\\n\\n              case 'DeviceCmykCS':\\n                return this.singletons.cmyk;\\n\\n              case 'CalGrayCS':\\n                whitePoint = IR[1];\\n                blackPoint = IR[2];\\n                gamma = IR[3];\\n                return new CalGrayCS(whitePoint, blackPoint, gamma);\\n\\n              case 'CalRGBCS':\\n                whitePoint = IR[1];\\n                blackPoint = IR[2];\\n                gamma = IR[3];\\n                var matrix = IR[4];\\n                return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\\n\\n              case 'PatternCS':\\n                var basePatternCS = IR[1];\\n\\n                if (basePatternCS) {\\n                  basePatternCS = this.fromIR(basePatternCS);\\n                }\\n\\n                return new PatternCS(basePatternCS);\\n\\n              case 'IndexedCS':\\n                var baseIndexedCS = IR[1];\\n                var hiVal = IR[2];\\n                var lookup = IR[3];\\n                return new IndexedCS(this.fromIR(baseIndexedCS), hiVal, lookup);\\n\\n              case 'AlternateCS':\\n                var numComps = IR[1];\\n                var alt = IR[2];\\n                var tintFn = IR[3];\\n                return new AlternateCS(numComps, this.fromIR(alt), tintFn);\\n\\n              case 'LabCS':\\n                whitePoint = IR[1];\\n                blackPoint = IR[2];\\n                var range = IR[3];\\n                return new LabCS(whitePoint, blackPoint, range);\\n\\n              default:\\n                throw new _util.FormatError(\\\"Unknown colorspace name: \\\".concat(name));\\n            }\\n          }\\n        }, {\\n          key: \\\"parseToIR\\\",\\n          value: function parseToIR(cs, xref) {\\n            var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\\n            var pdfFunctionFactory = arguments.length > 3 ? arguments[3] : undefined;\\n            cs = xref.fetchIfRef(cs);\\n\\n            if ((0, _primitives.isName)(cs)) {\\n              switch (cs.name) {\\n                case 'DeviceGray':\\n                case 'G':\\n                  return 'DeviceGrayCS';\\n\\n                case 'DeviceRGB':\\n                case 'RGB':\\n                  return 'DeviceRgbCS';\\n\\n                case 'DeviceCMYK':\\n                case 'CMYK':\\n                  return 'DeviceCmykCS';\\n\\n                case 'Pattern':\\n                  return ['PatternCS', null];\\n\\n                default:\\n                  if ((0, _primitives.isDict)(res)) {\\n                    var colorSpaces = res.get('ColorSpace');\\n\\n                    if ((0, _primitives.isDict)(colorSpaces)) {\\n                      var resCS = colorSpaces.get(cs.name);\\n\\n                      if (resCS) {\\n                        if ((0, _primitives.isName)(resCS)) {\\n                          return this.parseToIR(resCS, xref, res, pdfFunctionFactory);\\n                        }\\n\\n                        cs = resCS;\\n                        break;\\n                      }\\n                    }\\n                  }\\n\\n                  throw new _util.FormatError(\\\"unrecognized colorspace \\\".concat(cs.name));\\n              }\\n            }\\n\\n            if (Array.isArray(cs)) {\\n              var mode = xref.fetchIfRef(cs[0]).name;\\n              var numComps, params, alt, whitePoint, blackPoint, gamma;\\n\\n              switch (mode) {\\n                case 'DeviceGray':\\n                case 'G':\\n                  return 'DeviceGrayCS';\\n\\n                case 'DeviceRGB':\\n                case 'RGB':\\n                  return 'DeviceRgbCS';\\n\\n                case 'DeviceCMYK':\\n                case 'CMYK':\\n                  return 'DeviceCmykCS';\\n\\n                case 'CalGray':\\n                  params = xref.fetchIfRef(cs[1]);\\n                  whitePoint = params.getArray('WhitePoint');\\n                  blackPoint = params.getArray('BlackPoint');\\n                  gamma = params.get('Gamma');\\n                  return ['CalGrayCS', whitePoint, blackPoint, gamma];\\n\\n                case 'CalRGB':\\n                  params = xref.fetchIfRef(cs[1]);\\n                  whitePoint = params.getArray('WhitePoint');\\n                  blackPoint = params.getArray('BlackPoint');\\n                  gamma = params.getArray('Gamma');\\n                  var matrix = params.getArray('Matrix');\\n                  return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\\n\\n                case 'ICCBased':\\n                  var stream = xref.fetchIfRef(cs[1]);\\n                  var dict = stream.dict;\\n                  numComps = dict.get('N');\\n                  alt = dict.get('Alternate');\\n\\n                  if (alt) {\\n                    var altIR = this.parseToIR(alt, xref, res, pdfFunctionFactory);\\n                    var altCS = this.fromIR(altIR, pdfFunctionFactory);\\n\\n                    if (altCS.numComps === numComps) {\\n                      return altIR;\\n                    }\\n\\n                    (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\\n                  }\\n\\n                  if (numComps === 1) {\\n                    return 'DeviceGrayCS';\\n                  } else if (numComps === 3) {\\n                    return 'DeviceRgbCS';\\n                  } else if (numComps === 4) {\\n                    return 'DeviceCmykCS';\\n                  }\\n\\n                  break;\\n\\n                case 'Pattern':\\n                  var basePatternCS = cs[1] || null;\\n\\n                  if (basePatternCS) {\\n                    basePatternCS = this.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\\n                  }\\n\\n                  return ['PatternCS', basePatternCS];\\n\\n                case 'Indexed':\\n                case 'I':\\n                  var baseIndexedCS = this.parseToIR(cs[1], xref, res, pdfFunctionFactory);\\n                  var hiVal = xref.fetchIfRef(cs[2]) + 1;\\n                  var lookup = xref.fetchIfRef(cs[3]);\\n\\n                  if ((0, _primitives.isStream)(lookup)) {\\n                    lookup = lookup.getBytes();\\n                  }\\n\\n                  return ['IndexedCS', baseIndexedCS, hiVal, lookup];\\n\\n                case 'Separation':\\n                case 'DeviceN':\\n                  var name = xref.fetchIfRef(cs[1]);\\n                  numComps = Array.isArray(name) ? name.length : 1;\\n                  alt = this.parseToIR(cs[2], xref, res, pdfFunctionFactory);\\n                  var tintFn = pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));\\n                  return ['AlternateCS', numComps, alt, tintFn];\\n\\n                case 'Lab':\\n                  params = xref.fetchIfRef(cs[1]);\\n                  whitePoint = params.getArray('WhitePoint');\\n                  blackPoint = params.getArray('BlackPoint');\\n                  var range = params.getArray('Range');\\n                  return ['LabCS', whitePoint, blackPoint, range];\\n\\n                default:\\n                  throw new _util.FormatError(\\\"unimplemented color space object \\\\\\\"\\\".concat(mode, \\\"\\\\\\\"\\\"));\\n              }\\n            }\\n\\n            throw new _util.FormatError(\\\"unrecognized color space object: \\\\\\\"\\\".concat(cs, \\\"\\\\\\\"\\\"));\\n          }\\n        }, {\\n          key: \\\"isDefaultDecode\\\",\\n          value: function isDefaultDecode(decode, numComps) {\\n            if (!Array.isArray(decode)) {\\n              return true;\\n            }\\n\\n            if (numComps * 2 !== decode.length) {\\n              (0, _util.warn)('The decode map is not the correct length');\\n              return true;\\n            }\\n\\n            for (var i = 0, ii = decode.length; i < ii; i += 2) {\\n              if (decode[i] !== 0 || decode[i + 1] !== 1) {\\n                return false;\\n              }\\n            }\\n\\n            return true;\\n          }\\n        }, {\\n          key: \\\"singletons\\\",\\n          get: function get() {\\n            return (0, _util.shadow)(this, 'singletons', {\\n              get gray() {\\n                return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\\n              },\\n\\n              get rgb() {\\n                return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\\n              },\\n\\n              get cmyk() {\\n                return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\\n              }\\n\\n            });\\n          }\\n        }]);\\n\\n        return ColorSpace;\\n      }();\\n\\n      exports.ColorSpace = ColorSpace;\\n\\n      var AlternateCS =\\n      /*#__PURE__*/\\n      function (_ColorSpace) {\\n        _inherits(AlternateCS, _ColorSpace);\\n\\n        function AlternateCS(numComps, base, tintFn) {\\n          var _this;\\n\\n          _classCallCheck(this, AlternateCS);\\n\\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AlternateCS).call(this, 'Alternate', numComps));\\n          _this.base = base;\\n          _this.tintFn = tintFn;\\n          _this.tmpBuf = new Float32Array(base.numComps);\\n          return _this;\\n        }\\n\\n        _createClass(AlternateCS, [{\\n          key: \\\"getRgbItem\\\",\\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n            var tmpBuf = this.tmpBuf;\\n            this.tintFn(src, srcOffset, tmpBuf, 0);\\n            this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\\n          }\\n        }, {\\n          key: \\\"getRgbBuffer\\\",\\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n            var tintFn = this.tintFn;\\n            var base = this.base;\\n            var scale = 1 / ((1 << bits) - 1);\\n            var baseNumComps = base.numComps;\\n            var usesZeroToOneRange = base.usesZeroToOneRange;\\n            var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\\n            var pos = isPassthrough ? destOffset : 0;\\n            var baseBuf = isPassthrough ? dest : new Uint8ClampedArray(baseNumComps * count);\\n            var numComps = this.numComps;\\n            var scaled = new Float32Array(numComps);\\n            var tinted = new Float32Array(baseNumComps);\\n            var i, j;\\n\\n            for (i = 0; i < count; i++) {\\n              for (j = 0; j < numComps; j++) {\\n                scaled[j] = src[srcOffset++] * scale;\\n              }\\n\\n              tintFn(scaled, 0, tinted, 0);\\n\\n              if (usesZeroToOneRange) {\\n                for (j = 0; j < baseNumComps; j++) {\\n                  baseBuf[pos++] = tinted[j] * 255;\\n                }\\n              } else {\\n                base.getRgbItem(tinted, 0, baseBuf, pos);\\n                pos += baseNumComps;\\n              }\\n            }\\n\\n            if (!isPassthrough) {\\n              base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\\n            }\\n          }\\n        }, {\\n          key: \\\"getOutputLength\\\",\\n          value: function getOutputLength(inputLength, alpha01) {\\n            return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\\n          }\\n        }]);\\n\\n        return AlternateCS;\\n      }(ColorSpace);\\n\\n      var PatternCS =\\n      /*#__PURE__*/\\n      function (_ColorSpace2) {\\n        _inherits(PatternCS, _ColorSpace2);\\n\\n        function PatternCS(baseCS) {\\n          var _this2;\\n\\n          _classCallCheck(this, PatternCS);\\n\\n          _this2 = _possibleConstructorReturn(this, _getPrototypeOf(PatternCS).call(this, 'Pattern', null));\\n          _this2.base = baseCS;\\n          return _this2;\\n        }\\n\\n        _createClass(PatternCS, [{\\n          key: \\\"isDefaultDecode\\\",\\n          value: function isDefaultDecode(decodeMap, bpc) {\\n            (0, _util.unreachable)('Should not call PatternCS.isDefaultDecode');\\n          }\\n        }]);\\n\\n        return PatternCS;\\n      }(ColorSpace);\\n\\n      var IndexedCS =\\n      /*#__PURE__*/\\n      function (_ColorSpace3) {\\n        _inherits(IndexedCS, _ColorSpace3);\\n\\n        function IndexedCS(base, highVal, lookup) {\\n          var _this3;\\n\\n          _classCallCheck(this, IndexedCS);\\n\\n          _this3 = _possibleConstructorReturn(this, _getPrototypeOf(IndexedCS).call(this, 'Indexed', 1));\\n          _this3.base = base;\\n          _this3.highVal = highVal;\\n          var baseNumComps = base.numComps;\\n          var length = baseNumComps * highVal;\\n\\n          if ((0, _primitives.isStream)(lookup)) {\\n            _this3.lookup = new Uint8Array(length);\\n            var bytes = lookup.getBytes(length);\\n\\n            _this3.lookup.set(bytes);\\n          } else if ((0, _util.isString)(lookup)) {\\n            _this3.lookup = new Uint8Array(length);\\n\\n            for (var i = 0; i < length; ++i) {\\n              _this3.lookup[i] = lookup.charCodeAt(i);\\n            }\\n          } else if (lookup instanceof Uint8Array) {\\n            _this3.lookup = lookup;\\n          } else {\\n            throw new _util.FormatError(\\\"Unrecognized lookup table: \\\".concat(lookup));\\n          }\\n\\n          return _this3;\\n        }\\n\\n        _createClass(IndexedCS, [{\\n          key: \\\"getRgbItem\\\",\\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n            var numComps = this.base.numComps;\\n            var start = src[srcOffset] * numComps;\\n            this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\\n          }\\n        }, {\\n          key: \\\"getRgbBuffer\\\",\\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n            var base = this.base;\\n            var numComps = base.numComps;\\n            var outputDelta = base.getOutputLength(numComps, alpha01);\\n            var lookup = this.lookup;\\n\\n            for (var i = 0; i < count; ++i) {\\n              var lookupPos = src[srcOffset++] * numComps;\\n              base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\\n              destOffset += outputDelta;\\n            }\\n          }\\n        }, {\\n          key: \\\"getOutputLength\\\",\\n          value: function getOutputLength(inputLength, alpha01) {\\n            return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\\n          }\\n        }, {\\n          key: \\\"isDefaultDecode\\\",\\n          value: function isDefaultDecode(decodeMap, bpc) {\\n            if (!Array.isArray(decodeMap)) {\\n              return true;\\n            }\\n\\n            if (decodeMap.length !== 2) {\\n              (0, _util.warn)('Decode map length is not correct');\\n              return true;\\n            }\\n\\n            if (!Number.isInteger(bpc) || bpc < 1) {\\n              (0, _util.warn)('Bits per component is not correct');\\n              return true;\\n            }\\n\\n            return decodeMap[0] === 0 && decodeMap[1] === (1 << bpc) - 1;\\n          }\\n        }]);\\n\\n        return IndexedCS;\\n      }(ColorSpace);\\n\\n      var DeviceGrayCS =\\n      /*#__PURE__*/\\n      function (_ColorSpace4) {\\n        _inherits(DeviceGrayCS, _ColorSpace4);\\n\\n        function DeviceGrayCS() {\\n          _classCallCheck(this, DeviceGrayCS);\\n\\n          return _possibleConstructorReturn(this, _getPrototypeOf(DeviceGrayCS).call(this, 'DeviceGray', 1));\\n        }\\n\\n        _createClass(DeviceGrayCS, [{\\n          key: \\\"getRgbItem\\\",\\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n            var c = src[srcOffset] * 255;\\n            dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\\n          }\\n        }, {\\n          key: \\\"getRgbBuffer\\\",\\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n            var scale = 255 / ((1 << bits) - 1);\\n            var j = srcOffset,\\n                q = destOffset;\\n\\n            for (var i = 0; i < count; ++i) {\\n              var c = scale * src[j++];\\n              dest[q++] = c;\\n              dest[q++] = c;\\n              dest[q++] = c;\\n              q += alpha01;\\n            }\\n          }\\n        }, {\\n          key: \\\"getOutputLength\\\",\\n          value: function getOutputLength(inputLength, alpha01) {\\n            return inputLength * (3 + alpha01);\\n          }\\n        }]);\\n\\n        return DeviceGrayCS;\\n      }(ColorSpace);\\n\\n      var DeviceRgbCS =\\n      /*#__PURE__*/\\n      function (_ColorSpace5) {\\n        _inherits(DeviceRgbCS, _ColorSpace5);\\n\\n        function DeviceRgbCS() {\\n          _classCallCheck(this, DeviceRgbCS);\\n\\n          return _possibleConstructorReturn(this, _getPrototypeOf(DeviceRgbCS).call(this, 'DeviceRGB', 3));\\n        }\\n\\n        _createClass(DeviceRgbCS, [{\\n          key: \\\"getRgbItem\\\",\\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n            dest[destOffset] = src[srcOffset] * 255;\\n            dest[destOffset + 1] = src[srcOffset + 1] * 255;\\n            dest[destOffset + 2] = src[srcOffset + 2] * 255;\\n          }\\n        }, {\\n          key: \\\"getRgbBuffer\\\",\\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n            if (bits === 8 && alpha01 === 0) {\\n              dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\\n              return;\\n            }\\n\\n            var scale = 255 / ((1 << bits) - 1);\\n            var j = srcOffset,\\n                q = destOffset;\\n\\n            for (var i = 0; i < count; ++i) {\\n              dest[q++] = scale * src[j++];\\n              dest[q++] = scale * src[j++];\\n              dest[q++] = scale * src[j++];\\n              q += alpha01;\\n            }\\n          }\\n        }, {\\n          key: \\\"getOutputLength\\\",\\n          value: function getOutputLength(inputLength, alpha01) {\\n            return inputLength * (3 + alpha01) / 3 | 0;\\n          }\\n        }, {\\n          key: \\\"isPassthrough\\\",\\n          value: function isPassthrough(bits) {\\n            return bits === 8;\\n          }\\n        }]);\\n\\n        return DeviceRgbCS;\\n      }(ColorSpace);\\n\\n      var DeviceCmykCS = function DeviceCmykCSClosure() {\\n        function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\\n          var c = src[srcOffset] * srcScale;\\n          var m = src[srcOffset + 1] * srcScale;\\n          var y = src[srcOffset + 2] * srcScale;\\n          var k = src[srcOffset + 3] * srcScale;\\n          dest[destOffset] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747);\\n          dest[destOffset + 1] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578);\\n          dest[destOffset + 2] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367);\\n        }\\n\\n        var DeviceCmykCS =\\n        /*#__PURE__*/\\n        function (_ColorSpace6) {\\n          _inherits(DeviceCmykCS, _ColorSpace6);\\n\\n          function DeviceCmykCS() {\\n            _classCallCheck(this, DeviceCmykCS);\\n\\n            return _possibleConstructorReturn(this, _getPrototypeOf(DeviceCmykCS).call(this, 'DeviceCMYK', 4));\\n          }\\n\\n          _createClass(DeviceCmykCS, [{\\n            key: \\\"getRgbItem\\\",\\n            value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n              convertToRgb(src, srcOffset, 1, dest, destOffset);\\n            }\\n          }, {\\n            key: \\\"getRgbBuffer\\\",\\n            value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n              var scale = 1 / ((1 << bits) - 1);\\n\\n              for (var i = 0; i < count; i++) {\\n                convertToRgb(src, srcOffset, scale, dest, destOffset);\\n                srcOffset += 4;\\n                destOffset += 3 + alpha01;\\n              }\\n            }\\n          }, {\\n            key: \\\"getOutputLength\\\",\\n            value: function getOutputLength(inputLength, alpha01) {\\n              return inputLength / 4 * (3 + alpha01) | 0;\\n            }\\n          }]);\\n\\n          return DeviceCmykCS;\\n        }(ColorSpace);\\n\\n        return DeviceCmykCS;\\n      }();\\n\\n      var CalGrayCS = function CalGrayCSClosure() {\\n        function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\\n          var A = src[srcOffset] * scale;\\n          var AG = Math.pow(A, cs.G);\\n          var L = cs.YW * AG;\\n          var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0);\\n          dest[destOffset] = val;\\n          dest[destOffset + 1] = val;\\n          dest[destOffset + 2] = val;\\n        }\\n\\n        var CalGrayCS =\\n        /*#__PURE__*/\\n        function (_ColorSpace7) {\\n          _inherits(CalGrayCS, _ColorSpace7);\\n\\n          function CalGrayCS(whitePoint, blackPoint, gamma) {\\n            var _this4;\\n\\n            _classCallCheck(this, CalGrayCS);\\n\\n            _this4 = _possibleConstructorReturn(this, _getPrototypeOf(CalGrayCS).call(this, 'CalGray', 1));\\n\\n            if (!whitePoint) {\\n              throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\\n            }\\n\\n            blackPoint = blackPoint || [0, 0, 0];\\n            gamma = gamma || 1;\\n            _this4.XW = whitePoint[0];\\n            _this4.YW = whitePoint[1];\\n            _this4.ZW = whitePoint[2];\\n            _this4.XB = blackPoint[0];\\n            _this4.YB = blackPoint[1];\\n            _this4.ZB = blackPoint[2];\\n            _this4.G = gamma;\\n\\n            if (_this4.XW < 0 || _this4.ZW < 0 || _this4.YW !== 1) {\\n              throw new _util.FormatError(\\\"Invalid WhitePoint components for \\\".concat(_this4.name) + ', no fallback available');\\n            }\\n\\n            if (_this4.XB < 0 || _this4.YB < 0 || _this4.ZB < 0) {\\n              (0, _util.info)(\\\"Invalid BlackPoint for \\\".concat(_this4.name, \\\", falling back to default.\\\"));\\n              _this4.XB = _this4.YB = _this4.ZB = 0;\\n            }\\n\\n            if (_this4.XB !== 0 || _this4.YB !== 0 || _this4.ZB !== 0) {\\n              (0, _util.warn)(\\\"\\\".concat(_this4.name, \\\", BlackPoint: XB: \\\").concat(_this4.XB, \\\", YB: \\\").concat(_this4.YB, \\\", \\\") + \\\"ZB: \\\".concat(_this4.ZB, \\\", only default values are supported.\\\"));\\n            }\\n\\n            if (_this4.G < 1) {\\n              (0, _util.info)(\\\"Invalid Gamma: \\\".concat(_this4.G, \\\" for \\\").concat(_this4.name, \\\", \\\") + 'falling back to default.');\\n              _this4.G = 1;\\n            }\\n\\n            return _this4;\\n          }\\n\\n          _createClass(CalGrayCS, [{\\n            key: \\\"getRgbItem\\\",\\n            value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n              convertToRgb(this, src, srcOffset, dest, destOffset, 1);\\n            }\\n          }, {\\n            key: \\\"getRgbBuffer\\\",\\n            value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n              var scale = 1 / ((1 << bits) - 1);\\n\\n              for (var i = 0; i < count; ++i) {\\n                convertToRgb(this, src, srcOffset, dest, destOffset, scale);\\n                srcOffset += 1;\\n                destOffset += 3 + alpha01;\\n              }\\n            }\\n          }, {\\n            key: \\\"getOutputLength\\\",\\n            value: function getOutputLength(inputLength, alpha01) {\\n              return inputLength * (3 + alpha01);\\n            }\\n          }]);\\n\\n          return CalGrayCS;\\n        }(ColorSpace);\\n\\n        return CalGrayCS;\\n      }();\\n\\n      var CalRGBCS = function CalRGBCSClosure() {\\n        var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\\n        var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\\n        var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\\n        var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\\n        var tempNormalizeMatrix = new Float32Array(3);\\n        var tempConvertMatrix1 = new Float32Array(3);\\n        var tempConvertMatrix2 = new Float32Array(3);\\n        var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\\n\\n        function matrixProduct(a, b, result) {\\n          result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\n          result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\\n          result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\\n        }\\n\\n        function convertToFlat(sourceWhitePoint, LMS, result) {\\n          result[0] = LMS[0] * 1 / sourceWhitePoint[0];\\n          result[1] = LMS[1] * 1 / sourceWhitePoint[1];\\n          result[2] = LMS[2] * 1 / sourceWhitePoint[2];\\n        }\\n\\n        function convertToD65(sourceWhitePoint, LMS, result) {\\n          var D65X = 0.95047;\\n          var D65Y = 1;\\n          var D65Z = 1.08883;\\n          result[0] = LMS[0] * D65X / sourceWhitePoint[0];\\n          result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\\n          result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\\n        }\\n\\n        function sRGBTransferFunction(color) {\\n          if (color <= 0.0031308) {\\n            return adjustToRange(0, 1, 12.92 * color);\\n          }\\n\\n          return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\\n        }\\n\\n        function adjustToRange(min, max, value) {\\n          return Math.max(min, Math.min(max, value));\\n        }\\n\\n        function decodeL(L) {\\n          if (L < 0) {\\n            return -decodeL(-L);\\n          }\\n\\n          if (L > 8.0) {\\n            return Math.pow((L + 16) / 116, 3);\\n          }\\n\\n          return L * DECODE_L_CONSTANT;\\n        }\\n\\n        function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\\n          if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\\n            result[0] = XYZ_Flat[0];\\n            result[1] = XYZ_Flat[1];\\n            result[2] = XYZ_Flat[2];\\n            return;\\n          }\\n\\n          var zeroDecodeL = decodeL(0);\\n          var X_DST = zeroDecodeL;\\n          var X_SRC = decodeL(sourceBlackPoint[0]);\\n          var Y_DST = zeroDecodeL;\\n          var Y_SRC = decodeL(sourceBlackPoint[1]);\\n          var Z_DST = zeroDecodeL;\\n          var Z_SRC = decodeL(sourceBlackPoint[2]);\\n          var X_Scale = (1 - X_DST) / (1 - X_SRC);\\n          var X_Offset = 1 - X_Scale;\\n          var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\\n          var Y_Offset = 1 - Y_Scale;\\n          var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\\n          var Z_Offset = 1 - Z_Scale;\\n          result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\\n          result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\\n          result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\\n        }\\n\\n        function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\\n          if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\\n            result[0] = XYZ_In[0];\\n            result[1] = XYZ_In[1];\\n            result[2] = XYZ_In[2];\\n            return;\\n          }\\n\\n          var LMS = result;\\n          matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\\n          var LMS_Flat = tempNormalizeMatrix;\\n          convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\\n          matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\\n        }\\n\\n        function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\\n          var LMS = result;\\n          matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\\n          var LMS_D65 = tempNormalizeMatrix;\\n          convertToD65(sourceWhitePoint, LMS, LMS_D65);\\n          matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\\n        }\\n\\n        function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\\n          var A = adjustToRange(0, 1, src[srcOffset] * scale);\\n          var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\\n          var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\\n          var AGR = Math.pow(A, cs.GR);\\n          var BGG = Math.pow(B, cs.GG);\\n          var CGB = Math.pow(C, cs.GB);\\n          var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\\n          var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\\n          var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\\n          var XYZ = tempConvertMatrix1;\\n          XYZ[0] = X;\\n          XYZ[1] = Y;\\n          XYZ[2] = Z;\\n          var XYZ_Flat = tempConvertMatrix2;\\n          normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\\n          var XYZ_Black = tempConvertMatrix1;\\n          compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\\n          var XYZ_D65 = tempConvertMatrix2;\\n          normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\\n          var SRGB = tempConvertMatrix1;\\n          matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\\n          dest[destOffset] = sRGBTransferFunction(SRGB[0]) * 255;\\n          dest[destOffset + 1] = sRGBTransferFunction(SRGB[1]) * 255;\\n          dest[destOffset + 2] = sRGBTransferFunction(SRGB[2]) * 255;\\n        }\\n\\n        var CalRGBCS =\\n        /*#__PURE__*/\\n        function (_ColorSpace8) {\\n          _inherits(CalRGBCS, _ColorSpace8);\\n\\n          function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\\n            var _this5;\\n\\n            _classCallCheck(this, CalRGBCS);\\n\\n            _this5 = _possibleConstructorReturn(this, _getPrototypeOf(CalRGBCS).call(this, 'CalRGB', 3));\\n\\n            if (!whitePoint) {\\n              throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\\n            }\\n\\n            blackPoint = blackPoint || new Float32Array(3);\\n            gamma = gamma || new Float32Array([1, 1, 1]);\\n            matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\\n            var XW = whitePoint[0];\\n            var YW = whitePoint[1];\\n            var ZW = whitePoint[2];\\n            _this5.whitePoint = whitePoint;\\n            var XB = blackPoint[0];\\n            var YB = blackPoint[1];\\n            var ZB = blackPoint[2];\\n            _this5.blackPoint = blackPoint;\\n            _this5.GR = gamma[0];\\n            _this5.GG = gamma[1];\\n            _this5.GB = gamma[2];\\n            _this5.MXA = matrix[0];\\n            _this5.MYA = matrix[1];\\n            _this5.MZA = matrix[2];\\n            _this5.MXB = matrix[3];\\n            _this5.MYB = matrix[4];\\n            _this5.MZB = matrix[5];\\n            _this5.MXC = matrix[6];\\n            _this5.MYC = matrix[7];\\n            _this5.MZC = matrix[8];\\n\\n            if (XW < 0 || ZW < 0 || YW !== 1) {\\n              throw new _util.FormatError(\\\"Invalid WhitePoint components for \\\".concat(_this5.name) + ', no fallback available');\\n            }\\n\\n            if (XB < 0 || YB < 0 || ZB < 0) {\\n              (0, _util.info)(\\\"Invalid BlackPoint for \\\".concat(_this5.name, \\\" [\\\").concat(XB, \\\", \\\").concat(YB, \\\", \\\").concat(ZB, \\\"], \\\") + 'falling back to default.');\\n              _this5.blackPoint = new Float32Array(3);\\n            }\\n\\n            if (_this5.GR < 0 || _this5.GG < 0 || _this5.GB < 0) {\\n              (0, _util.info)(\\\"Invalid Gamma [\\\".concat(_this5.GR, \\\", \\\").concat(_this5.GG, \\\", \\\").concat(_this5.GB, \\\"] for \\\") + \\\"\\\".concat(_this5.name, \\\", falling back to default.\\\"));\\n              _this5.GR = _this5.GG = _this5.GB = 1;\\n            }\\n\\n            return _this5;\\n          }\\n\\n          _createClass(CalRGBCS, [{\\n            key: \\\"getRgbItem\\\",\\n            value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n              convertToRgb(this, src, srcOffset, dest, destOffset, 1);\\n            }\\n          }, {\\n            key: \\\"getRgbBuffer\\\",\\n            value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n              var scale = 1 / ((1 << bits) - 1);\\n\\n              for (var i = 0; i < count; ++i) {\\n                convertToRgb(this, src, srcOffset, dest, destOffset, scale);\\n                srcOffset += 3;\\n                destOffset += 3 + alpha01;\\n              }\\n            }\\n          }, {\\n            key: \\\"getOutputLength\\\",\\n            value: function getOutputLength(inputLength, alpha01) {\\n              return inputLength * (3 + alpha01) / 3 | 0;\\n            }\\n          }]);\\n\\n          return CalRGBCS;\\n        }(ColorSpace);\\n\\n        return CalRGBCS;\\n      }();\\n\\n      var LabCS = function LabCSClosure() {\\n        function fn_g(x) {\\n          var result;\\n\\n          if (x >= 6 / 29) {\\n            result = x * x * x;\\n          } else {\\n            result = 108 / 841 * (x - 4 / 29);\\n          }\\n\\n          return result;\\n        }\\n\\n        function decode(value, high1, low2, high2) {\\n          return low2 + value * (high2 - low2) / high1;\\n        }\\n\\n        function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\\n          var Ls = src[srcOffset];\\n          var as = src[srcOffset + 1];\\n          var bs = src[srcOffset + 2];\\n\\n          if (maxVal !== false) {\\n            Ls = decode(Ls, maxVal, 0, 100);\\n            as = decode(as, maxVal, cs.amin, cs.amax);\\n            bs = decode(bs, maxVal, cs.bmin, cs.bmax);\\n          }\\n\\n          as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\\n          bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\\n          var M = (Ls + 16) / 116;\\n          var L = M + as / 500;\\n          var N = M - bs / 200;\\n          var X = cs.XW * fn_g(L);\\n          var Y = cs.YW * fn_g(M);\\n          var Z = cs.ZW * fn_g(N);\\n          var r, g, b;\\n\\n          if (cs.ZW < 1) {\\n            r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\\n            g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\\n            b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\\n          } else {\\n            r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\\n            g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\\n            b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\\n          }\\n\\n          dest[destOffset] = Math.sqrt(r) * 255;\\n          dest[destOffset + 1] = Math.sqrt(g) * 255;\\n          dest[destOffset + 2] = Math.sqrt(b) * 255;\\n        }\\n\\n        var LabCS =\\n        /*#__PURE__*/\\n        function (_ColorSpace9) {\\n          _inherits(LabCS, _ColorSpace9);\\n\\n          function LabCS(whitePoint, blackPoint, range) {\\n            var _this6;\\n\\n            _classCallCheck(this, LabCS);\\n\\n            _this6 = _possibleConstructorReturn(this, _getPrototypeOf(LabCS).call(this, 'Lab', 3));\\n\\n            if (!whitePoint) {\\n              throw new _util.FormatError('WhitePoint missing - required for color space Lab');\\n            }\\n\\n            blackPoint = blackPoint || [0, 0, 0];\\n            range = range || [-100, 100, -100, 100];\\n            _this6.XW = whitePoint[0];\\n            _this6.YW = whitePoint[1];\\n            _this6.ZW = whitePoint[2];\\n            _this6.amin = range[0];\\n            _this6.amax = range[1];\\n            _this6.bmin = range[2];\\n            _this6.bmax = range[3];\\n            _this6.XB = blackPoint[0];\\n            _this6.YB = blackPoint[1];\\n            _this6.ZB = blackPoint[2];\\n\\n            if (_this6.XW < 0 || _this6.ZW < 0 || _this6.YW !== 1) {\\n              throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\\n            }\\n\\n            if (_this6.XB < 0 || _this6.YB < 0 || _this6.ZB < 0) {\\n              (0, _util.info)('Invalid BlackPoint, falling back to default');\\n              _this6.XB = _this6.YB = _this6.ZB = 0;\\n            }\\n\\n            if (_this6.amin > _this6.amax || _this6.bmin > _this6.bmax) {\\n              (0, _util.info)('Invalid Range, falling back to defaults');\\n              _this6.amin = -100;\\n              _this6.amax = 100;\\n              _this6.bmin = -100;\\n              _this6.bmax = 100;\\n            }\\n\\n            return _this6;\\n          }\\n\\n          _createClass(LabCS, [{\\n            key: \\\"getRgbItem\\\",\\n            value: function getRgbItem(src, srcOffset, dest, destOffset) {\\n              convertToRgb(this, src, srcOffset, false, dest, destOffset);\\n            }\\n          }, {\\n            key: \\\"getRgbBuffer\\\",\\n            value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\n              var maxVal = (1 << bits) - 1;\\n\\n              for (var i = 0; i < count; i++) {\\n                convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\\n                srcOffset += 3;\\n                destOffset += 3 + alpha01;\\n              }\\n            }\\n          }, {\\n            key: \\\"getOutputLength\\\",\\n            value: function getOutputLength(inputLength, alpha01) {\\n              return inputLength * (3 + alpha01) / 3 | 0;\\n            }\\n          }, {\\n            key: \\\"isDefaultDecode\\\",\\n            value: function isDefaultDecode(decodeMap, bpc) {\\n              return true;\\n            }\\n          }, {\\n            key: \\\"usesZeroToOneRange\\\",\\n            get: function get() {\\n              return (0, _util.shadow)(this, 'usesZeroToOneRange', false);\\n            }\\n          }]);\\n\\n          return LabCS;\\n        }(ColorSpace);\\n\\n        return LabCS;\\n      }();\\n      /***/\\n\\n    },\\n    /* 169 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _obj = __w_pdfjs_require__(154);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _colorspace = __w_pdfjs_require__(168);\\n\\n      var _operator_list = __w_pdfjs_require__(170);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _possibleConstructorReturn(self, call) {\\n        if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n          return call;\\n        }\\n\\n        return _assertThisInitialized(self);\\n      }\\n\\n      function _assertThisInitialized(self) {\\n        if (self === void 0) {\\n          throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n        }\\n\\n        return self;\\n      }\\n\\n      function _get(target, property, receiver) {\\n        if (typeof Reflect !== \\\"undefined\\\" && Reflect.get) {\\n          _get = Reflect.get;\\n        } else {\\n          _get = function _get(target, property, receiver) {\\n            var base = _superPropBase(target, property);\\n\\n            if (!base) return;\\n            var desc = Object.getOwnPropertyDescriptor(base, property);\\n\\n            if (desc.get) {\\n              return desc.get.call(receiver);\\n            }\\n\\n            return desc.value;\\n          };\\n        }\\n\\n        return _get(target, property, receiver || target);\\n      }\\n\\n      function _superPropBase(object, property) {\\n        while (!Object.prototype.hasOwnProperty.call(object, property)) {\\n          object = _getPrototypeOf(object);\\n          if (object === null) break;\\n        }\\n\\n        return object;\\n      }\\n\\n      function _getPrototypeOf(o) {\\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n          return o.__proto__ || Object.getPrototypeOf(o);\\n        };\\n        return _getPrototypeOf(o);\\n      }\\n\\n      function _inherits(subClass, superClass) {\\n        if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n          throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n        }\\n\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n          constructor: {\\n            value: subClass,\\n            writable: true,\\n            configurable: true\\n          }\\n        });\\n        if (superClass) _setPrototypeOf(subClass, superClass);\\n      }\\n\\n      function _setPrototypeOf(o, p) {\\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n          o.__proto__ = p;\\n          return o;\\n        };\\n\\n        return _setPrototypeOf(o, p);\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var AnnotationFactory =\\n      /*#__PURE__*/\\n      function () {\\n        function AnnotationFactory() {\\n          _classCallCheck(this, AnnotationFactory);\\n        }\\n\\n        _createClass(AnnotationFactory, null, [{\\n          key: \\\"create\\\",\\n          value: function create(xref, ref, pdfManager, idFactory) {\\n            return pdfManager.ensure(this, '_create', [xref, ref, pdfManager, idFactory]);\\n          }\\n        }, {\\n          key: \\\"_create\\\",\\n          value: function _create(xref, ref, pdfManager, idFactory) {\\n            var dict = xref.fetchIfRef(ref);\\n\\n            if (!(0, _primitives.isDict)(dict)) {\\n              return;\\n            }\\n\\n            var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\\n            var subtype = dict.get('Subtype');\\n            subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\\n            var parameters = {\\n              xref: xref,\\n              dict: dict,\\n              ref: (0, _primitives.isRef)(ref) ? ref : null,\\n              subtype: subtype,\\n              id: id,\\n              pdfManager: pdfManager\\n            };\\n\\n            switch (subtype) {\\n              case 'Link':\\n                return new LinkAnnotation(parameters);\\n\\n              case 'Text':\\n                return new TextAnnotation(parameters);\\n\\n              case 'Widget':\\n                var fieldType = (0, _util.getInheritableProperty)({\\n                  dict: dict,\\n                  key: 'FT'\\n                });\\n                fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\\n\\n                switch (fieldType) {\\n                  case 'Tx':\\n                    return new TextWidgetAnnotation(parameters);\\n\\n                  case 'Btn':\\n                    return new ButtonWidgetAnnotation(parameters);\\n\\n                  case 'Ch':\\n                    return new ChoiceWidgetAnnotation(parameters);\\n                }\\n\\n                (0, _util.warn)('Unimplemented widget field type \\\"' + fieldType + '\\\", ' + 'falling back to base field type.');\\n                return new WidgetAnnotation(parameters);\\n\\n              case 'Popup':\\n                return new PopupAnnotation(parameters);\\n\\n              case 'Line':\\n                return new LineAnnotation(parameters);\\n\\n              case 'Square':\\n                return new SquareAnnotation(parameters);\\n\\n              case 'Circle':\\n                return new CircleAnnotation(parameters);\\n\\n              case 'PolyLine':\\n                return new PolylineAnnotation(parameters);\\n\\n              case 'Polygon':\\n                return new PolygonAnnotation(parameters);\\n\\n              case 'Ink':\\n                return new InkAnnotation(parameters);\\n\\n              case 'Highlight':\\n                return new HighlightAnnotation(parameters);\\n\\n              case 'Underline':\\n                return new UnderlineAnnotation(parameters);\\n\\n              case 'Squiggly':\\n                return new SquigglyAnnotation(parameters);\\n\\n              case 'StrikeOut':\\n                return new StrikeOutAnnotation(parameters);\\n\\n              case 'Stamp':\\n                return new StampAnnotation(parameters);\\n\\n              case 'FileAttachment':\\n                return new FileAttachmentAnnotation(parameters);\\n\\n              default:\\n                if (!subtype) {\\n                  (0, _util.warn)('Annotation is missing the required /Subtype.');\\n                } else {\\n                  (0, _util.warn)('Unimplemented annotation type \\\"' + subtype + '\\\", ' + 'falling back to base annotation.');\\n                }\\n\\n                return new Annotation(parameters);\\n            }\\n          }\\n        }]);\\n\\n        return AnnotationFactory;\\n      }();\\n\\n      exports.AnnotationFactory = AnnotationFactory;\\n\\n      function getTransformMatrix(rect, bbox, matrix) {\\n        var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\\n\\n        var minX = bounds[0];\\n        var minY = bounds[1];\\n        var maxX = bounds[2];\\n        var maxY = bounds[3];\\n\\n        if (minX === maxX || minY === maxY) {\\n          return [1, 0, 0, 1, rect[0], rect[1]];\\n        }\\n\\n        var xRatio = (rect[2] - rect[0]) / (maxX - minX);\\n        var yRatio = (rect[3] - rect[1]) / (maxY - minY);\\n        return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\\n      }\\n\\n      var Annotation =\\n      /*#__PURE__*/\\n      function () {\\n        function Annotation(params) {\\n          _classCallCheck(this, Annotation);\\n\\n          var dict = params.dict;\\n          this.setFlags(dict.get('F'));\\n          this.setRectangle(dict.getArray('Rect'));\\n          this.setColor(dict.getArray('C'));\\n          this.setBorderStyle(dict);\\n          this.setAppearance(dict);\\n          this.data = {\\n            annotationFlags: this.flags,\\n            borderStyle: this.borderStyle,\\n            color: this.color,\\n            hasAppearance: !!this.appearance,\\n            id: params.id,\\n            rect: this.rectangle,\\n            subtype: params.subtype\\n          };\\n        }\\n\\n        _createClass(Annotation, [{\\n          key: \\\"_hasFlag\\\",\\n          value: function _hasFlag(flags, flag) {\\n            return !!(flags & flag);\\n          }\\n        }, {\\n          key: \\\"_isViewable\\\",\\n          value: function _isViewable(flags) {\\n            return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\\n          }\\n        }, {\\n          key: \\\"_isPrintable\\\",\\n          value: function _isPrintable(flags) {\\n            return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\\n          }\\n        }, {\\n          key: \\\"setFlags\\\",\\n          value: function setFlags(flags) {\\n            this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\\n          }\\n        }, {\\n          key: \\\"hasFlag\\\",\\n          value: function hasFlag(flag) {\\n            return this._hasFlag(this.flags, flag);\\n          }\\n        }, {\\n          key: \\\"setRectangle\\\",\\n          value: function setRectangle(rectangle) {\\n            if (Array.isArray(rectangle) && rectangle.length === 4) {\\n              this.rectangle = _util.Util.normalizeRect(rectangle);\\n            } else {\\n              this.rectangle = [0, 0, 0, 0];\\n            }\\n          }\\n        }, {\\n          key: \\\"setColor\\\",\\n          value: function setColor(color) {\\n            var rgbColor = new Uint8ClampedArray(3);\\n\\n            if (!Array.isArray(color)) {\\n              this.color = rgbColor;\\n              return;\\n            }\\n\\n            switch (color.length) {\\n              case 0:\\n                this.color = null;\\n                break;\\n\\n              case 1:\\n                _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\\n\\n                this.color = rgbColor;\\n                break;\\n\\n              case 3:\\n                _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\\n\\n                this.color = rgbColor;\\n                break;\\n\\n              case 4:\\n                _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\\n\\n                this.color = rgbColor;\\n                break;\\n\\n              default:\\n                this.color = rgbColor;\\n                break;\\n            }\\n          }\\n        }, {\\n          key: \\\"setBorderStyle\\\",\\n          value: function setBorderStyle(borderStyle) {\\n            this.borderStyle = new AnnotationBorderStyle();\\n\\n            if (!(0, _primitives.isDict)(borderStyle)) {\\n              return;\\n            }\\n\\n            if (borderStyle.has('BS')) {\\n              var dict = borderStyle.get('BS');\\n              var dictType = dict.get('Type');\\n\\n              if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\\n                this.borderStyle.setWidth(dict.get('W'));\\n                this.borderStyle.setStyle(dict.get('S'));\\n                this.borderStyle.setDashArray(dict.getArray('D'));\\n              }\\n            } else if (borderStyle.has('Border')) {\\n              var array = borderStyle.getArray('Border');\\n\\n              if (Array.isArray(array) && array.length >= 3) {\\n                this.borderStyle.setHorizontalCornerRadius(array[0]);\\n                this.borderStyle.setVerticalCornerRadius(array[1]);\\n                this.borderStyle.setWidth(array[2]);\\n\\n                if (array.length === 4) {\\n                  this.borderStyle.setDashArray(array[3]);\\n                }\\n              }\\n            } else {\\n              this.borderStyle.setWidth(0);\\n            }\\n          }\\n        }, {\\n          key: \\\"setAppearance\\\",\\n          value: function setAppearance(dict) {\\n            this.appearance = null;\\n            var appearanceStates = dict.get('AP');\\n\\n            if (!(0, _primitives.isDict)(appearanceStates)) {\\n              return;\\n            }\\n\\n            var normalAppearanceState = appearanceStates.get('N');\\n\\n            if ((0, _primitives.isStream)(normalAppearanceState)) {\\n              this.appearance = normalAppearanceState;\\n              return;\\n            }\\n\\n            if (!(0, _primitives.isDict)(normalAppearanceState)) {\\n              return;\\n            }\\n\\n            var as = dict.get('AS');\\n\\n            if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\\n              return;\\n            }\\n\\n            this.appearance = normalAppearanceState.get(as.name);\\n          }\\n        }, {\\n          key: \\\"_preparePopup\\\",\\n          value: function _preparePopup(dict) {\\n            if (!dict.has('C')) {\\n              this.data.color = null;\\n            }\\n\\n            this.data.hasPopup = dict.has('Popup');\\n            this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\\n            this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\\n          }\\n        }, {\\n          key: \\\"loadResources\\\",\\n          value: function loadResources(keys) {\\n            return this.appearance.dict.getAsync('Resources').then(function (resources) {\\n              if (!resources) {\\n                return;\\n              }\\n\\n              var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\\n              return objectLoader.load().then(function () {\\n                return resources;\\n              });\\n            });\\n          }\\n        }, {\\n          key: \\\"getOperatorList\\\",\\n          value: function getOperatorList(evaluator, task, renderForms) {\\n            var _this = this;\\n\\n            if (!this.appearance) {\\n              return Promise.resolve(new _operator_list.OperatorList());\\n            }\\n\\n            var data = this.data;\\n            var appearanceDict = this.appearance.dict;\\n            var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\\n            var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\\n            var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\\n            var transform = getTransformMatrix(data.rect, bbox, matrix);\\n            return resourcesPromise.then(function (resources) {\\n              var opList = new _operator_list.OperatorList();\\n              opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\\n              return evaluator.getOperatorList({\\n                stream: _this.appearance,\\n                task: task,\\n                resources: resources,\\n                operatorList: opList\\n              }).then(function () {\\n                opList.addOp(_util.OPS.endAnnotation, []);\\n\\n                _this.appearance.reset();\\n\\n                return opList;\\n              });\\n            });\\n          }\\n        }, {\\n          key: \\\"viewable\\\",\\n          get: function get() {\\n            if (this.flags === 0) {\\n              return true;\\n            }\\n\\n            return this._isViewable(this.flags);\\n          }\\n        }, {\\n          key: \\\"printable\\\",\\n          get: function get() {\\n            if (this.flags === 0) {\\n              return false;\\n            }\\n\\n            return this._isPrintable(this.flags);\\n          }\\n        }]);\\n\\n        return Annotation;\\n      }();\\n\\n      exports.Annotation = Annotation;\\n\\n      var AnnotationBorderStyle =\\n      /*#__PURE__*/\\n      function () {\\n        function AnnotationBorderStyle() {\\n          _classCallCheck(this, AnnotationBorderStyle);\\n\\n          this.width = 1;\\n          this.style = _util.AnnotationBorderStyleType.SOLID;\\n          this.dashArray = [3];\\n          this.horizontalCornerRadius = 0;\\n          this.verticalCornerRadius = 0;\\n        }\\n\\n        _createClass(AnnotationBorderStyle, [{\\n          key: \\\"setWidth\\\",\\n          value: function setWidth(width) {\\n            if ((0, _primitives.isName)(width)) {\\n              this.width = 0;\\n              return;\\n            }\\n\\n            if (Number.isInteger(width)) {\\n              this.width = width;\\n            }\\n          }\\n        }, {\\n          key: \\\"setStyle\\\",\\n          value: function setStyle(style) {\\n            if (!(0, _primitives.isName)(style)) {\\n              return;\\n            }\\n\\n            switch (style.name) {\\n              case 'S':\\n                this.style = _util.AnnotationBorderStyleType.SOLID;\\n                break;\\n\\n              case 'D':\\n                this.style = _util.AnnotationBorderStyleType.DASHED;\\n                break;\\n\\n              case 'B':\\n                this.style = _util.AnnotationBorderStyleType.BEVELED;\\n                break;\\n\\n              case 'I':\\n                this.style = _util.AnnotationBorderStyleType.INSET;\\n                break;\\n\\n              case 'U':\\n                this.style = _util.AnnotationBorderStyleType.UNDERLINE;\\n                break;\\n\\n              default:\\n                break;\\n            }\\n          }\\n        }, {\\n          key: \\\"setDashArray\\\",\\n          value: function setDashArray(dashArray) {\\n            if (Array.isArray(dashArray) && dashArray.length > 0) {\\n              var isValid = true;\\n              var allZeros = true;\\n\\n              for (var i = 0, len = dashArray.length; i < len; i++) {\\n                var element = dashArray[i];\\n                var validNumber = +element >= 0;\\n\\n                if (!validNumber) {\\n                  isValid = false;\\n                  break;\\n                } else if (element > 0) {\\n                  allZeros = false;\\n                }\\n              }\\n\\n              if (isValid && !allZeros) {\\n                this.dashArray = dashArray;\\n              } else {\\n                this.width = 0;\\n              }\\n            } else if (dashArray) {\\n              this.width = 0;\\n            }\\n          }\\n        }, {\\n          key: \\\"setHorizontalCornerRadius\\\",\\n          value: function setHorizontalCornerRadius(radius) {\\n            if (Number.isInteger(radius)) {\\n              this.horizontalCornerRadius = radius;\\n            }\\n          }\\n        }, {\\n          key: \\\"setVerticalCornerRadius\\\",\\n          value: function setVerticalCornerRadius(radius) {\\n            if (Number.isInteger(radius)) {\\n              this.verticalCornerRadius = radius;\\n            }\\n          }\\n        }]);\\n\\n        return AnnotationBorderStyle;\\n      }();\\n\\n      exports.AnnotationBorderStyle = AnnotationBorderStyle;\\n\\n      var WidgetAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation) {\\n        _inherits(WidgetAnnotation, _Annotation);\\n\\n        function WidgetAnnotation(params) {\\n          var _this2;\\n\\n          _classCallCheck(this, WidgetAnnotation);\\n\\n          _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WidgetAnnotation).call(this, params));\\n          var dict = params.dict;\\n          var data = _this2.data;\\n          data.annotationType = _util.AnnotationType.WIDGET;\\n          data.fieldName = _this2._constructFieldName(dict);\\n          data.fieldValue = (0, _util.getInheritableProperty)({\\n            dict: dict,\\n            key: 'V',\\n            getArray: true\\n          });\\n          data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\\n          data.defaultAppearance = (0, _util.getInheritableProperty)({\\n            dict: dict,\\n            key: 'DA'\\n          }) || '';\\n          var fieldType = (0, _util.getInheritableProperty)({\\n            dict: dict,\\n            key: 'FT'\\n          });\\n          data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\\n          _this2.fieldResources = (0, _util.getInheritableProperty)({\\n            dict: dict,\\n            key: 'DR'\\n          }) || _primitives.Dict.empty;\\n          data.fieldFlags = (0, _util.getInheritableProperty)({\\n            dict: dict,\\n            key: 'Ff'\\n          });\\n\\n          if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\\n            data.fieldFlags = 0;\\n          }\\n\\n          data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\\n\\n          if (data.fieldType === 'Sig') {\\n            data.fieldValue = null;\\n\\n            _this2.setFlags(_util.AnnotationFlag.HIDDEN);\\n          }\\n\\n          return _this2;\\n        }\\n\\n        _createClass(WidgetAnnotation, [{\\n          key: \\\"_constructFieldName\\\",\\n          value: function _constructFieldName(dict) {\\n            if (!dict.has('T') && !dict.has('Parent')) {\\n              (0, _util.warn)('Unknown field name, falling back to empty field name.');\\n              return '';\\n            }\\n\\n            if (!dict.has('Parent')) {\\n              return (0, _util.stringToPDFString)(dict.get('T'));\\n            }\\n\\n            var fieldName = [];\\n\\n            if (dict.has('T')) {\\n              fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\\n            }\\n\\n            var loopDict = dict;\\n\\n            while (loopDict.has('Parent')) {\\n              loopDict = loopDict.get('Parent');\\n\\n              if (!(0, _primitives.isDict)(loopDict)) {\\n                break;\\n              }\\n\\n              if (loopDict.has('T')) {\\n                fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\\n              }\\n            }\\n\\n            return fieldName.join('.');\\n          }\\n        }, {\\n          key: \\\"hasFieldFlag\\\",\\n          value: function hasFieldFlag(flag) {\\n            return !!(this.data.fieldFlags & flag);\\n          }\\n        }, {\\n          key: \\\"getOperatorList\\\",\\n          value: function getOperatorList(evaluator, task, renderForms) {\\n            if (renderForms) {\\n              return Promise.resolve(new _operator_list.OperatorList());\\n            }\\n\\n            return _get(_getPrototypeOf(WidgetAnnotation.prototype), \\\"getOperatorList\\\", this).call(this, evaluator, task, renderForms);\\n          }\\n        }]);\\n\\n        return WidgetAnnotation;\\n      }(Annotation);\\n\\n      var TextWidgetAnnotation =\\n      /*#__PURE__*/\\n      function (_WidgetAnnotation) {\\n        _inherits(TextWidgetAnnotation, _WidgetAnnotation);\\n\\n        function TextWidgetAnnotation(params) {\\n          var _this3;\\n\\n          _classCallCheck(this, TextWidgetAnnotation);\\n\\n          _this3 = _possibleConstructorReturn(this, _getPrototypeOf(TextWidgetAnnotation).call(this, params));\\n          var dict = params.dict;\\n          _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\\n          var alignment = (0, _util.getInheritableProperty)({\\n            dict: dict,\\n            key: 'Q'\\n          });\\n\\n          if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\\n            alignment = null;\\n          }\\n\\n          _this3.data.textAlignment = alignment;\\n          var maximumLength = (0, _util.getInheritableProperty)({\\n            dict: dict,\\n            key: 'MaxLen'\\n          });\\n\\n          if (!Number.isInteger(maximumLength) || maximumLength < 0) {\\n            maximumLength = null;\\n          }\\n\\n          _this3.data.maxLen = maximumLength;\\n          _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\\n          _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\\n          return _this3;\\n        }\\n\\n        _createClass(TextWidgetAnnotation, [{\\n          key: \\\"getOperatorList\\\",\\n          value: function getOperatorList(evaluator, task, renderForms) {\\n            if (renderForms || this.appearance) {\\n              return _get(_getPrototypeOf(TextWidgetAnnotation.prototype), \\\"getOperatorList\\\", this).call(this, evaluator, task, renderForms);\\n            }\\n\\n            var operatorList = new _operator_list.OperatorList();\\n\\n            if (!this.data.defaultAppearance) {\\n              return Promise.resolve(operatorList);\\n            }\\n\\n            var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\\n            return evaluator.getOperatorList({\\n              stream: stream,\\n              task: task,\\n              resources: this.fieldResources,\\n              operatorList: operatorList\\n            }).then(function () {\\n              return operatorList;\\n            });\\n          }\\n        }]);\\n\\n        return TextWidgetAnnotation;\\n      }(WidgetAnnotation);\\n\\n      var ButtonWidgetAnnotation =\\n      /*#__PURE__*/\\n      function (_WidgetAnnotation2) {\\n        _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\\n\\n        function ButtonWidgetAnnotation(params) {\\n          var _this4;\\n\\n          _classCallCheck(this, ButtonWidgetAnnotation);\\n\\n          _this4 = _possibleConstructorReturn(this, _getPrototypeOf(ButtonWidgetAnnotation).call(this, params));\\n          _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n          _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n          _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\n\\n          if (_this4.data.checkBox) {\\n            _this4._processCheckBox(params);\\n          } else if (_this4.data.radioButton) {\\n            _this4._processRadioButton(params);\\n          } else if (_this4.data.pushButton) {\\n            _this4._processPushButton(params);\\n          } else {\\n            (0, _util.warn)('Invalid field flags for button widget annotation');\\n          }\\n\\n          return _this4;\\n        }\\n\\n        _createClass(ButtonWidgetAnnotation, [{\\n          key: \\\"_processCheckBox\\\",\\n          value: function _processCheckBox(params) {\\n            if ((0, _primitives.isName)(this.data.fieldValue)) {\\n              this.data.fieldValue = this.data.fieldValue.name;\\n            }\\n\\n            var customAppearance = params.dict.get('AP');\\n\\n            if (!(0, _primitives.isDict)(customAppearance)) {\\n              return;\\n            }\\n\\n            var exportValueOptionsDict = customAppearance.get('D');\\n\\n            if (!(0, _primitives.isDict)(exportValueOptionsDict)) {\\n              return;\\n            }\\n\\n            var exportValues = exportValueOptionsDict.getKeys();\\n            var hasCorrectOptionCount = exportValues.length === 2;\\n\\n            if (!hasCorrectOptionCount) {\\n              return;\\n            }\\n\\n            this.data.exportValue = exportValues[0] === 'Off' ? exportValues[1] : exportValues[0];\\n          }\\n        }, {\\n          key: \\\"_processRadioButton\\\",\\n          value: function _processRadioButton(params) {\\n            this.data.fieldValue = this.data.buttonValue = null;\\n            var fieldParent = params.dict.get('Parent');\\n\\n            if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\\n              var fieldParentValue = fieldParent.get('V');\\n\\n              if ((0, _primitives.isName)(fieldParentValue)) {\\n                this.data.fieldValue = fieldParentValue.name;\\n              }\\n            }\\n\\n            var appearanceStates = params.dict.get('AP');\\n\\n            if (!(0, _primitives.isDict)(appearanceStates)) {\\n              return;\\n            }\\n\\n            var normalAppearanceState = appearanceStates.get('N');\\n\\n            if (!(0, _primitives.isDict)(normalAppearanceState)) {\\n              return;\\n            }\\n\\n            var keys = normalAppearanceState.getKeys();\\n\\n            for (var i = 0, ii = keys.length; i < ii; i++) {\\n              if (keys[i] !== 'Off') {\\n                this.data.buttonValue = keys[i];\\n                break;\\n              }\\n            }\\n          }\\n        }, {\\n          key: \\\"_processPushButton\\\",\\n          value: function _processPushButton(params) {\\n            if (!params.dict.has('A')) {\\n              (0, _util.warn)('Push buttons without action dictionaries are not supported');\\n              return;\\n            }\\n\\n            _obj.Catalog.parseDestDictionary({\\n              destDict: params.dict,\\n              resultObj: this.data,\\n              docBaseUrl: params.pdfManager.docBaseUrl\\n            });\\n          }\\n        }]);\\n\\n        return ButtonWidgetAnnotation;\\n      }(WidgetAnnotation);\\n\\n      var ChoiceWidgetAnnotation =\\n      /*#__PURE__*/\\n      function (_WidgetAnnotation3) {\\n        _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\\n\\n        function ChoiceWidgetAnnotation(params) {\\n          var _this5;\\n\\n          _classCallCheck(this, ChoiceWidgetAnnotation);\\n\\n          _this5 = _possibleConstructorReturn(this, _getPrototypeOf(ChoiceWidgetAnnotation).call(this, params));\\n          _this5.data.options = [];\\n          var options = (0, _util.getInheritableProperty)({\\n            dict: params.dict,\\n            key: 'Opt'\\n          });\\n\\n          if (Array.isArray(options)) {\\n            var xref = params.xref;\\n\\n            for (var i = 0, ii = options.length; i < ii; i++) {\\n              var option = xref.fetchIfRef(options[i]);\\n              var isOptionArray = Array.isArray(option);\\n              _this5.data.options[i] = {\\n                exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\\n                displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\\n              };\\n            }\\n          }\\n\\n          if (!Array.isArray(_this5.data.fieldValue)) {\\n            _this5.data.fieldValue = [_this5.data.fieldValue];\\n          }\\n\\n          _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\\n          _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\\n          return _this5;\\n        }\\n\\n        return ChoiceWidgetAnnotation;\\n      }(WidgetAnnotation);\\n\\n      var TextAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation2) {\\n        _inherits(TextAnnotation, _Annotation2);\\n\\n        function TextAnnotation(parameters) {\\n          var _this6;\\n\\n          _classCallCheck(this, TextAnnotation);\\n\\n          var DEFAULT_ICON_SIZE = 22;\\n          _this6 = _possibleConstructorReturn(this, _getPrototypeOf(TextAnnotation).call(this, parameters));\\n          _this6.data.annotationType = _util.AnnotationType.TEXT;\\n\\n          if (_this6.data.hasAppearance) {\\n            _this6.data.name = 'NoIcon';\\n          } else {\\n            _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\\n            _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\\n            _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\\n          }\\n\\n          _this6._preparePopup(parameters.dict);\\n\\n          return _this6;\\n        }\\n\\n        return TextAnnotation;\\n      }(Annotation);\\n\\n      var LinkAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation3) {\\n        _inherits(LinkAnnotation, _Annotation3);\\n\\n        function LinkAnnotation(params) {\\n          var _this7;\\n\\n          _classCallCheck(this, LinkAnnotation);\\n\\n          _this7 = _possibleConstructorReturn(this, _getPrototypeOf(LinkAnnotation).call(this, params));\\n          _this7.data.annotationType = _util.AnnotationType.LINK;\\n\\n          _obj.Catalog.parseDestDictionary({\\n            destDict: params.dict,\\n            resultObj: _this7.data,\\n            docBaseUrl: params.pdfManager.docBaseUrl\\n          });\\n\\n          return _this7;\\n        }\\n\\n        return LinkAnnotation;\\n      }(Annotation);\\n\\n      var PopupAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation4) {\\n        _inherits(PopupAnnotation, _Annotation4);\\n\\n        function PopupAnnotation(parameters) {\\n          var _this8;\\n\\n          _classCallCheck(this, PopupAnnotation);\\n\\n          _this8 = _possibleConstructorReturn(this, _getPrototypeOf(PopupAnnotation).call(this, parameters));\\n          _this8.data.annotationType = _util.AnnotationType.POPUP;\\n          var dict = parameters.dict;\\n          var parentItem = dict.get('Parent');\\n\\n          if (!parentItem) {\\n            (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\\n            return _possibleConstructorReturn(_this8);\\n          }\\n\\n          var parentSubtype = parentItem.get('Subtype');\\n          _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\\n          _this8.data.parentId = dict.getRaw('Parent').toString();\\n          _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\\n          _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\\n\\n          if (!parentItem.has('C')) {\\n            _this8.data.color = null;\\n          } else {\\n            _this8.setColor(parentItem.getArray('C'));\\n\\n            _this8.data.color = _this8.color;\\n          }\\n\\n          if (!_this8.viewable) {\\n            var parentFlags = parentItem.get('F');\\n\\n            if (_this8._isViewable(parentFlags)) {\\n              _this8.setFlags(parentFlags);\\n            }\\n          }\\n\\n          return _this8;\\n        }\\n\\n        return PopupAnnotation;\\n      }(Annotation);\\n\\n      var LineAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation5) {\\n        _inherits(LineAnnotation, _Annotation5);\\n\\n        function LineAnnotation(parameters) {\\n          var _this9;\\n\\n          _classCallCheck(this, LineAnnotation);\\n\\n          _this9 = _possibleConstructorReturn(this, _getPrototypeOf(LineAnnotation).call(this, parameters));\\n          _this9.data.annotationType = _util.AnnotationType.LINE;\\n          var dict = parameters.dict;\\n          _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\\n\\n          _this9._preparePopup(dict);\\n\\n          return _this9;\\n        }\\n\\n        return LineAnnotation;\\n      }(Annotation);\\n\\n      var SquareAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation6) {\\n        _inherits(SquareAnnotation, _Annotation6);\\n\\n        function SquareAnnotation(parameters) {\\n          var _this10;\\n\\n          _classCallCheck(this, SquareAnnotation);\\n\\n          _this10 = _possibleConstructorReturn(this, _getPrototypeOf(SquareAnnotation).call(this, parameters));\\n          _this10.data.annotationType = _util.AnnotationType.SQUARE;\\n\\n          _this10._preparePopup(parameters.dict);\\n\\n          return _this10;\\n        }\\n\\n        return SquareAnnotation;\\n      }(Annotation);\\n\\n      var CircleAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation7) {\\n        _inherits(CircleAnnotation, _Annotation7);\\n\\n        function CircleAnnotation(parameters) {\\n          var _this11;\\n\\n          _classCallCheck(this, CircleAnnotation);\\n\\n          _this11 = _possibleConstructorReturn(this, _getPrototypeOf(CircleAnnotation).call(this, parameters));\\n          _this11.data.annotationType = _util.AnnotationType.CIRCLE;\\n\\n          _this11._preparePopup(parameters.dict);\\n\\n          return _this11;\\n        }\\n\\n        return CircleAnnotation;\\n      }(Annotation);\\n\\n      var PolylineAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation8) {\\n        _inherits(PolylineAnnotation, _Annotation8);\\n\\n        function PolylineAnnotation(parameters) {\\n          var _this12;\\n\\n          _classCallCheck(this, PolylineAnnotation);\\n\\n          _this12 = _possibleConstructorReturn(this, _getPrototypeOf(PolylineAnnotation).call(this, parameters));\\n          _this12.data.annotationType = _util.AnnotationType.POLYLINE;\\n          var dict = parameters.dict;\\n          var rawVertices = dict.getArray('Vertices');\\n          _this12.data.vertices = [];\\n\\n          for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\\n            _this12.data.vertices.push({\\n              x: rawVertices[i],\\n              y: rawVertices[i + 1]\\n            });\\n          }\\n\\n          _this12._preparePopup(dict);\\n\\n          return _this12;\\n        }\\n\\n        return PolylineAnnotation;\\n      }(Annotation);\\n\\n      var PolygonAnnotation =\\n      /*#__PURE__*/\\n      function (_PolylineAnnotation) {\\n        _inherits(PolygonAnnotation, _PolylineAnnotation);\\n\\n        function PolygonAnnotation(parameters) {\\n          var _this13;\\n\\n          _classCallCheck(this, PolygonAnnotation);\\n\\n          _this13 = _possibleConstructorReturn(this, _getPrototypeOf(PolygonAnnotation).call(this, parameters));\\n          _this13.data.annotationType = _util.AnnotationType.POLYGON;\\n          return _this13;\\n        }\\n\\n        return PolygonAnnotation;\\n      }(PolylineAnnotation);\\n\\n      var InkAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation9) {\\n        _inherits(InkAnnotation, _Annotation9);\\n\\n        function InkAnnotation(parameters) {\\n          var _this14;\\n\\n          _classCallCheck(this, InkAnnotation);\\n\\n          _this14 = _possibleConstructorReturn(this, _getPrototypeOf(InkAnnotation).call(this, parameters));\\n          _this14.data.annotationType = _util.AnnotationType.INK;\\n          var dict = parameters.dict;\\n          var xref = parameters.xref;\\n          var originalInkLists = dict.getArray('InkList');\\n          _this14.data.inkLists = [];\\n\\n          for (var i = 0, ii = originalInkLists.length; i < ii; ++i) {\\n            _this14.data.inkLists.push([]);\\n\\n            for (var j = 0, jj = originalInkLists[i].length; j < jj; j += 2) {\\n              _this14.data.inkLists[i].push({\\n                x: xref.fetchIfRef(originalInkLists[i][j]),\\n                y: xref.fetchIfRef(originalInkLists[i][j + 1])\\n              });\\n            }\\n          }\\n\\n          _this14._preparePopup(dict);\\n\\n          return _this14;\\n        }\\n\\n        return InkAnnotation;\\n      }(Annotation);\\n\\n      var HighlightAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation10) {\\n        _inherits(HighlightAnnotation, _Annotation10);\\n\\n        function HighlightAnnotation(parameters) {\\n          var _this15;\\n\\n          _classCallCheck(this, HighlightAnnotation);\\n\\n          _this15 = _possibleConstructorReturn(this, _getPrototypeOf(HighlightAnnotation).call(this, parameters));\\n          _this15.data.annotationType = _util.AnnotationType.HIGHLIGHT;\\n\\n          _this15._preparePopup(parameters.dict);\\n\\n          return _this15;\\n        }\\n\\n        return HighlightAnnotation;\\n      }(Annotation);\\n\\n      var UnderlineAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation11) {\\n        _inherits(UnderlineAnnotation, _Annotation11);\\n\\n        function UnderlineAnnotation(parameters) {\\n          var _this16;\\n\\n          _classCallCheck(this, UnderlineAnnotation);\\n\\n          _this16 = _possibleConstructorReturn(this, _getPrototypeOf(UnderlineAnnotation).call(this, parameters));\\n          _this16.data.annotationType = _util.AnnotationType.UNDERLINE;\\n\\n          _this16._preparePopup(parameters.dict);\\n\\n          return _this16;\\n        }\\n\\n        return UnderlineAnnotation;\\n      }(Annotation);\\n\\n      var SquigglyAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation12) {\\n        _inherits(SquigglyAnnotation, _Annotation12);\\n\\n        function SquigglyAnnotation(parameters) {\\n          var _this17;\\n\\n          _classCallCheck(this, SquigglyAnnotation);\\n\\n          _this17 = _possibleConstructorReturn(this, _getPrototypeOf(SquigglyAnnotation).call(this, parameters));\\n          _this17.data.annotationType = _util.AnnotationType.SQUIGGLY;\\n\\n          _this17._preparePopup(parameters.dict);\\n\\n          return _this17;\\n        }\\n\\n        return SquigglyAnnotation;\\n      }(Annotation);\\n\\n      var StrikeOutAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation13) {\\n        _inherits(StrikeOutAnnotation, _Annotation13);\\n\\n        function StrikeOutAnnotation(parameters) {\\n          var _this18;\\n\\n          _classCallCheck(this, StrikeOutAnnotation);\\n\\n          _this18 = _possibleConstructorReturn(this, _getPrototypeOf(StrikeOutAnnotation).call(this, parameters));\\n          _this18.data.annotationType = _util.AnnotationType.STRIKEOUT;\\n\\n          _this18._preparePopup(parameters.dict);\\n\\n          return _this18;\\n        }\\n\\n        return StrikeOutAnnotation;\\n      }(Annotation);\\n\\n      var StampAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation14) {\\n        _inherits(StampAnnotation, _Annotation14);\\n\\n        function StampAnnotation(parameters) {\\n          var _this19;\\n\\n          _classCallCheck(this, StampAnnotation);\\n\\n          _this19 = _possibleConstructorReturn(this, _getPrototypeOf(StampAnnotation).call(this, parameters));\\n          _this19.data.annotationType = _util.AnnotationType.STAMP;\\n\\n          _this19._preparePopup(parameters.dict);\\n\\n          return _this19;\\n        }\\n\\n        return StampAnnotation;\\n      }(Annotation);\\n\\n      var FileAttachmentAnnotation =\\n      /*#__PURE__*/\\n      function (_Annotation15) {\\n        _inherits(FileAttachmentAnnotation, _Annotation15);\\n\\n        function FileAttachmentAnnotation(parameters) {\\n          var _this20;\\n\\n          _classCallCheck(this, FileAttachmentAnnotation);\\n\\n          _this20 = _possibleConstructorReturn(this, _getPrototypeOf(FileAttachmentAnnotation).call(this, parameters));\\n          var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\\n          _this20.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\\n          _this20.data.file = file.serializable;\\n\\n          _this20._preparePopup(parameters.dict);\\n\\n          return _this20;\\n        }\\n\\n        return FileAttachmentAnnotation;\\n      }(Annotation);\\n      /***/\\n\\n    },\\n    /* 170 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.OperatorList = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var QueueOptimizer = function QueueOptimizerClosure() {\\n        function addState(parentState, pattern, checkFn, iterateFn, processFn) {\\n          var state = parentState;\\n\\n          for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\\n            var item = pattern[i];\\n            state = state[item] || (state[item] = []);\\n          }\\n\\n          state[pattern[pattern.length - 1]] = {\\n            checkFn: checkFn,\\n            iterateFn: iterateFn,\\n            processFn: processFn\\n          };\\n        }\\n\\n        function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\\n          var iFirstPIMXO = iFirstSave + 2;\\n\\n          for (var i = 0; i < count; i++) {\\n            var arg = argsArray[iFirstPIMXO + 4 * i];\\n            var imageMask = arg.length === 1 && arg[0];\\n\\n            if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\\n              fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\\n              continue;\\n            }\\n\\n            break;\\n          }\\n\\n          return count - i;\\n        }\\n\\n        var InitialState = [];\\n        addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\\n          var fnArray = context.fnArray;\\n          var iFirstSave = context.iCurr - 3;\\n          var pos = (i - iFirstSave) % 4;\\n\\n          switch (pos) {\\n            case 0:\\n              return fnArray[i] === _util.OPS.save;\\n\\n            case 1:\\n              return fnArray[i] === _util.OPS.transform;\\n\\n            case 2:\\n              return fnArray[i] === _util.OPS.paintInlineImageXObject;\\n\\n            case 3:\\n              return fnArray[i] === _util.OPS.restore;\\n          }\\n        }, function foundInlineImageGroup(context, i) {\\n          var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\\n          var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\\n          var MAX_WIDTH = 1000;\\n          var IMAGE_PADDING = 1;\\n          var fnArray = context.fnArray,\\n              argsArray = context.argsArray;\\n          var curr = context.iCurr;\\n          var iFirstSave = curr - 3;\\n          var iFirstTransform = curr - 2;\\n          var iFirstPIIXO = curr - 1;\\n          var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\\n\\n          if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\\n            return i - (i - iFirstSave) % 4;\\n          }\\n\\n          var maxX = 0;\\n          var map = [],\\n              maxLineHeight = 0;\\n          var currentX = IMAGE_PADDING,\\n              currentY = IMAGE_PADDING;\\n          var q;\\n\\n          for (q = 0; q < count; q++) {\\n            var transform = argsArray[iFirstTransform + (q << 2)];\\n            var img = argsArray[iFirstPIIXO + (q << 2)][0];\\n\\n            if (currentX + img.width > MAX_WIDTH) {\\n              maxX = Math.max(maxX, currentX);\\n              currentY += maxLineHeight + 2 * IMAGE_PADDING;\\n              currentX = 0;\\n              maxLineHeight = 0;\\n            }\\n\\n            map.push({\\n              transform: transform,\\n              x: currentX,\\n              y: currentY,\\n              w: img.width,\\n              h: img.height\\n            });\\n            currentX += img.width + 2 * IMAGE_PADDING;\\n            maxLineHeight = Math.max(maxLineHeight, img.height);\\n          }\\n\\n          var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\\n          var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\\n          var imgData = new Uint8ClampedArray(imgWidth * imgHeight * 4);\\n          var imgRowSize = imgWidth << 2;\\n\\n          for (q = 0; q < count; q++) {\\n            var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\\n            var rowSize = map[q].w << 2;\\n            var dataOffset = 0;\\n            var offset = map[q].x + map[q].y * imgWidth << 2;\\n            imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\\n\\n            for (var k = 0, kk = map[q].h; k < kk; k++) {\\n              imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\\n              dataOffset += rowSize;\\n              offset += imgRowSize;\\n            }\\n\\n            imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\\n\\n            while (offset >= 0) {\\n              data[offset - 4] = data[offset];\\n              data[offset - 3] = data[offset + 1];\\n              data[offset - 2] = data[offset + 2];\\n              data[offset - 1] = data[offset + 3];\\n              data[offset + rowSize] = data[offset + rowSize - 4];\\n              data[offset + rowSize + 1] = data[offset + rowSize - 3];\\n              data[offset + rowSize + 2] = data[offset + rowSize - 2];\\n              data[offset + rowSize + 3] = data[offset + rowSize - 1];\\n              offset -= imgRowSize;\\n            }\\n          }\\n\\n          fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\\n          argsArray.splice(iFirstSave, count * 4, [{\\n            width: imgWidth,\\n            height: imgHeight,\\n            kind: _util.ImageKind.RGBA_32BPP,\\n            data: imgData\\n          }, map]);\\n          return iFirstSave + 1;\\n        });\\n        addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\\n          var fnArray = context.fnArray;\\n          var iFirstSave = context.iCurr - 3;\\n          var pos = (i - iFirstSave) % 4;\\n\\n          switch (pos) {\\n            case 0:\\n              return fnArray[i] === _util.OPS.save;\\n\\n            case 1:\\n              return fnArray[i] === _util.OPS.transform;\\n\\n            case 2:\\n              return fnArray[i] === _util.OPS.paintImageMaskXObject;\\n\\n            case 3:\\n              return fnArray[i] === _util.OPS.restore;\\n          }\\n        }, function foundImageMaskGroup(context, i) {\\n          var MIN_IMAGES_IN_MASKS_BLOCK = 10;\\n          var MAX_IMAGES_IN_MASKS_BLOCK = 100;\\n          var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\\n          var fnArray = context.fnArray,\\n              argsArray = context.argsArray;\\n          var curr = context.iCurr;\\n          var iFirstSave = curr - 3;\\n          var iFirstTransform = curr - 2;\\n          var iFirstPIMXO = curr - 1;\\n          var count = Math.floor((i - iFirstSave) / 4);\\n          count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\\n\\n          if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\\n            return i - (i - iFirstSave) % 4;\\n          }\\n\\n          var q;\\n          var isSameImage = false;\\n          var iTransform, transformArgs;\\n          var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\\n\\n          if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\\n            isSameImage = true;\\n            var firstTransformArg0 = argsArray[iFirstTransform][0];\\n            var firstTransformArg3 = argsArray[iFirstTransform][3];\\n            iTransform = iFirstTransform + 4;\\n            var iPIMXO = iFirstPIMXO + 4;\\n\\n            for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\\n              transformArgs = argsArray[iTransform];\\n\\n              if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\\n                if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\\n                  isSameImage = false;\\n                } else {\\n                  count = q;\\n                }\\n\\n                break;\\n              }\\n            }\\n          }\\n\\n          if (isSameImage) {\\n            count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\\n            var positions = new Float32Array(count * 2);\\n            iTransform = iFirstTransform;\\n\\n            for (q = 0; q < count; q++, iTransform += 4) {\\n              transformArgs = argsArray[iTransform];\\n              positions[q << 1] = transformArgs[4];\\n              positions[(q << 1) + 1] = transformArgs[5];\\n            }\\n\\n            fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\\n            argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\\n          } else {\\n            count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\\n            var images = [];\\n\\n            for (q = 0; q < count; q++) {\\n              transformArgs = argsArray[iFirstTransform + (q << 2)];\\n              var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\\n              images.push({\\n                data: maskParams.data,\\n                width: maskParams.width,\\n                height: maskParams.height,\\n                transform: transformArgs\\n              });\\n            }\\n\\n            fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\\n            argsArray.splice(iFirstSave, count * 4, [images]);\\n          }\\n\\n          return iFirstSave + 1;\\n        });\\n        addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\\n          var argsArray = context.argsArray;\\n          var iFirstTransform = context.iCurr - 2;\\n          return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\\n        }, function (context, i) {\\n          var fnArray = context.fnArray,\\n              argsArray = context.argsArray;\\n          var iFirstSave = context.iCurr - 3;\\n          var pos = (i - iFirstSave) % 4;\\n\\n          switch (pos) {\\n            case 0:\\n              return fnArray[i] === _util.OPS.save;\\n\\n            case 1:\\n              if (fnArray[i] !== _util.OPS.transform) {\\n                return false;\\n              }\\n\\n              var iFirstTransform = context.iCurr - 2;\\n              var firstTransformArg0 = argsArray[iFirstTransform][0];\\n              var firstTransformArg3 = argsArray[iFirstTransform][3];\\n\\n              if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\\n                return false;\\n              }\\n\\n              return true;\\n\\n            case 2:\\n              if (fnArray[i] !== _util.OPS.paintImageXObject) {\\n                return false;\\n              }\\n\\n              var iFirstPIXO = context.iCurr - 1;\\n              var firstPIXOArg0 = argsArray[iFirstPIXO][0];\\n\\n              if (argsArray[i][0] !== firstPIXOArg0) {\\n                return false;\\n              }\\n\\n              return true;\\n\\n            case 3:\\n              return fnArray[i] === _util.OPS.restore;\\n          }\\n        }, function (context, i) {\\n          var MIN_IMAGES_IN_BLOCK = 3;\\n          var MAX_IMAGES_IN_BLOCK = 1000;\\n          var fnArray = context.fnArray,\\n              argsArray = context.argsArray;\\n          var curr = context.iCurr;\\n          var iFirstSave = curr - 3;\\n          var iFirstTransform = curr - 2;\\n          var iFirstPIXO = curr - 1;\\n          var firstPIXOArg0 = argsArray[iFirstPIXO][0];\\n          var firstTransformArg0 = argsArray[iFirstTransform][0];\\n          var firstTransformArg3 = argsArray[iFirstTransform][3];\\n          var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\\n\\n          if (count < MIN_IMAGES_IN_BLOCK) {\\n            return i - (i - iFirstSave) % 4;\\n          }\\n\\n          var positions = new Float32Array(count * 2);\\n          var iTransform = iFirstTransform;\\n\\n          for (var q = 0; q < count; q++, iTransform += 4) {\\n            var transformArgs = argsArray[iTransform];\\n            positions[q << 1] = transformArgs[4];\\n            positions[(q << 1) + 1] = transformArgs[5];\\n          }\\n\\n          var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\\n          fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\\n          argsArray.splice(iFirstSave, count * 4, args);\\n          return iFirstSave + 1;\\n        });\\n        addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\\n          var fnArray = context.fnArray,\\n              argsArray = context.argsArray;\\n          var iFirstSave = context.iCurr - 4;\\n          var pos = (i - iFirstSave) % 5;\\n\\n          switch (pos) {\\n            case 0:\\n              return fnArray[i] === _util.OPS.beginText;\\n\\n            case 1:\\n              return fnArray[i] === _util.OPS.setFont;\\n\\n            case 2:\\n              return fnArray[i] === _util.OPS.setTextMatrix;\\n\\n            case 3:\\n              if (fnArray[i] !== _util.OPS.showText) {\\n                return false;\\n              }\\n\\n              var iFirstSetFont = context.iCurr - 3;\\n              var firstSetFontArg0 = argsArray[iFirstSetFont][0];\\n              var firstSetFontArg1 = argsArray[iFirstSetFont][1];\\n\\n              if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\\n                return false;\\n              }\\n\\n              return true;\\n\\n            case 4:\\n              return fnArray[i] === _util.OPS.endText;\\n          }\\n        }, function (context, i) {\\n          var MIN_CHARS_IN_BLOCK = 3;\\n          var MAX_CHARS_IN_BLOCK = 1000;\\n          var fnArray = context.fnArray,\\n              argsArray = context.argsArray;\\n          var curr = context.iCurr;\\n          var iFirstBeginText = curr - 4;\\n          var iFirstSetFont = curr - 3;\\n          var iFirstSetTextMatrix = curr - 2;\\n          var iFirstShowText = curr - 1;\\n          var iFirstEndText = curr;\\n          var firstSetFontArg0 = argsArray[iFirstSetFont][0];\\n          var firstSetFontArg1 = argsArray[iFirstSetFont][1];\\n          var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\\n\\n          if (count < MIN_CHARS_IN_BLOCK) {\\n            return i - (i - iFirstBeginText) % 5;\\n          }\\n\\n          var iFirst = iFirstBeginText;\\n\\n          if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\\n            count++;\\n            iFirst -= 5;\\n          }\\n\\n          var iEndText = iFirst + 4;\\n\\n          for (var q = 1; q < count; q++) {\\n            fnArray.splice(iEndText, 3);\\n            argsArray.splice(iEndText, 3);\\n            iEndText += 2;\\n          }\\n\\n          return iEndText + 1;\\n        });\\n\\n        function QueueOptimizer(queue) {\\n          this.queue = queue;\\n          this.state = null;\\n          this.context = {\\n            iCurr: 0,\\n            fnArray: queue.fnArray,\\n            argsArray: queue.argsArray\\n          };\\n          this.match = null;\\n          this.lastProcessed = 0;\\n        }\\n\\n        QueueOptimizer.prototype = {\\n          _optimize: function _optimize() {\\n            var fnArray = this.queue.fnArray;\\n            var i = this.lastProcessed,\\n                ii = fnArray.length;\\n            var state = this.state;\\n            var match = this.match;\\n\\n            if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\\n              this.lastProcessed = ii;\\n              return;\\n            }\\n\\n            var context = this.context;\\n\\n            while (i < ii) {\\n              if (match) {\\n                var iterate = (0, match.iterateFn)(context, i);\\n\\n                if (iterate) {\\n                  i++;\\n                  continue;\\n                }\\n\\n                i = (0, match.processFn)(context, i + 1);\\n                ii = fnArray.length;\\n                match = null;\\n                state = null;\\n\\n                if (i >= ii) {\\n                  break;\\n                }\\n              }\\n\\n              state = (state || InitialState)[fnArray[i]];\\n\\n              if (!state || Array.isArray(state)) {\\n                i++;\\n                continue;\\n              }\\n\\n              context.iCurr = i;\\n              i++;\\n\\n              if (state.checkFn && !(0, state.checkFn)(context)) {\\n                state = null;\\n                continue;\\n              }\\n\\n              match = state;\\n              state = null;\\n            }\\n\\n            this.state = state;\\n            this.match = match;\\n            this.lastProcessed = i;\\n          },\\n          push: function push(fn, args) {\\n            this.queue.fnArray.push(fn);\\n            this.queue.argsArray.push(args);\\n\\n            this._optimize();\\n          },\\n          flush: function flush() {\\n            while (this.match) {\\n              var length = this.queue.fnArray.length;\\n              this.lastProcessed = (0, this.match.processFn)(this.context, length);\\n              this.match = null;\\n              this.state = null;\\n\\n              this._optimize();\\n            }\\n          },\\n          reset: function reset() {\\n            this.state = null;\\n            this.match = null;\\n            this.lastProcessed = 0;\\n          }\\n        };\\n        return QueueOptimizer;\\n      }();\\n\\n      var NullOptimizer = function NullOptimizerClosure() {\\n        function NullOptimizer(queue) {\\n          this.queue = queue;\\n        }\\n\\n        NullOptimizer.prototype = {\\n          push: function push(fn, args) {\\n            this.queue.fnArray.push(fn);\\n            this.queue.argsArray.push(args);\\n          },\\n          flush: function flush() {}\\n        };\\n        return NullOptimizer;\\n      }();\\n\\n      var OperatorList = function OperatorListClosure() {\\n        var CHUNK_SIZE = 1000;\\n        var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\\n\\n        function getTransfers(queue) {\\n          var transfers = [];\\n          var fnArray = queue.fnArray,\\n              argsArray = queue.argsArray;\\n\\n          for (var i = 0, ii = queue.length; i < ii; i++) {\\n            switch (fnArray[i]) {\\n              case _util.OPS.paintInlineImageXObject:\\n              case _util.OPS.paintInlineImageXObjectGroup:\\n              case _util.OPS.paintImageMaskXObject:\\n                var arg = argsArray[i][0];\\n                ;\\n\\n                if (!arg.cached) {\\n                  transfers.push(arg.data.buffer);\\n                }\\n\\n                break;\\n            }\\n          }\\n\\n          return transfers;\\n        }\\n\\n        function OperatorList(intent, messageHandler, pageIndex) {\\n          this.messageHandler = messageHandler;\\n          this.fnArray = [];\\n          this.argsArray = [];\\n\\n          if (messageHandler && this.intent !== 'oplist') {\\n            this.optimizer = new QueueOptimizer(this);\\n          } else {\\n            this.optimizer = new NullOptimizer(this);\\n          }\\n\\n          this.dependencies = Object.create(null);\\n          this._totalLength = 0;\\n          this.pageIndex = pageIndex;\\n          this.intent = intent;\\n          this.weight = 0;\\n        }\\n\\n        OperatorList.prototype = {\\n          get length() {\\n            return this.argsArray.length;\\n          },\\n\\n          get totalLength() {\\n            return this._totalLength + this.length;\\n          },\\n\\n          addOp: function addOp(fn, args) {\\n            this.optimizer.push(fn, args);\\n            this.weight++;\\n\\n            if (this.messageHandler) {\\n              if (this.weight >= CHUNK_SIZE) {\\n                this.flush();\\n              } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\\n                this.flush();\\n              }\\n            }\\n          },\\n          addDependency: function addDependency(dependency) {\\n            if (dependency in this.dependencies) {\\n              return;\\n            }\\n\\n            this.dependencies[dependency] = true;\\n            this.addOp(_util.OPS.dependency, [dependency]);\\n          },\\n          addDependencies: function addDependencies(dependencies) {\\n            for (var key in dependencies) {\\n              this.addDependency(key);\\n            }\\n          },\\n          addOpList: function addOpList(opList) {\\n            Object.assign(this.dependencies, opList.dependencies);\\n\\n            for (var i = 0, ii = opList.length; i < ii; i++) {\\n              this.addOp(opList.fnArray[i], opList.argsArray[i]);\\n            }\\n          },\\n          getIR: function getIR() {\\n            return {\\n              fnArray: this.fnArray,\\n              argsArray: this.argsArray,\\n              length: this.length\\n            };\\n          },\\n          flush: function flush(lastChunk) {\\n            this.optimizer.flush();\\n            var transfers = getTransfers(this);\\n            var length = this.length;\\n            this._totalLength += length;\\n            this.messageHandler.send('RenderPageChunk', {\\n              operatorList: {\\n                fnArray: this.fnArray,\\n                argsArray: this.argsArray,\\n                lastChunk: lastChunk,\\n                length: length\\n              },\\n              pageIndex: this.pageIndex,\\n              intent: this.intent\\n            }, transfers);\\n            this.dependencies = Object.create(null);\\n            this.fnArray.length = 0;\\n            this.argsArray.length = 0;\\n            this.weight = 0;\\n            this.optimizer.reset();\\n          }\\n        };\\n        return OperatorList;\\n      }();\\n\\n      exports.OperatorList = OperatorList;\\n      /***/\\n    },\\n    /* 171 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.PartialEvaluator = void 0;\\n\\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _cmap = __w_pdfjs_require__(172);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _fonts = __w_pdfjs_require__(173);\\n\\n      var _encodings = __w_pdfjs_require__(176);\\n\\n      var _unicode = __w_pdfjs_require__(179);\\n\\n      var _standard_fonts = __w_pdfjs_require__(178);\\n\\n      var _pattern = __w_pdfjs_require__(182);\\n\\n      var _parser = __w_pdfjs_require__(156);\\n\\n      var _bidi = __w_pdfjs_require__(183);\\n\\n      var _colorspace = __w_pdfjs_require__(168);\\n\\n      var _glyphlist = __w_pdfjs_require__(177);\\n\\n      var _metrics = __w_pdfjs_require__(184);\\n\\n      var _function = __w_pdfjs_require__(185);\\n\\n      var _jpeg_stream = __w_pdfjs_require__(163);\\n\\n      var _murmurhash = __w_pdfjs_require__(187);\\n\\n      var _operator_list = __w_pdfjs_require__(170);\\n\\n      var _image = __w_pdfjs_require__(188);\\n\\n      function _interopRequireDefault(obj) {\\n        return obj && obj.__esModule ? obj : {\\n          default: obj\\n        };\\n      }\\n\\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\\n        try {\\n          var info = gen[key](arg);\\n          var value = info.value;\\n        } catch (error) {\\n          reject(error);\\n          return;\\n        }\\n\\n        if (info.done) {\\n          resolve(value);\\n        } else {\\n          Promise.resolve(value).then(_next, _throw);\\n        }\\n      }\\n\\n      function _asyncToGenerator(fn) {\\n        return function () {\\n          var self = this,\\n              args = arguments;\\n          return new Promise(function (resolve, reject) {\\n            var gen = fn.apply(self, args);\\n\\n            function _next(value) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"next\\\", value);\\n            }\\n\\n            function _throw(err) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"throw\\\", err);\\n            }\\n\\n            _next(undefined);\\n          });\\n        };\\n      }\\n\\n      var PartialEvaluator = function PartialEvaluatorClosure() {\\n        var DefaultPartialEvaluatorOptions = {\\n          forceDataSchema: false,\\n          maxImageSize: -1,\\n          disableFontFace: false,\\n          nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\\n          ignoreErrors: false,\\n          isEvalSupported: true\\n        };\\n\\n        function NativeImageDecoder(_ref) {\\n          var xref = _ref.xref,\\n              resources = _ref.resources,\\n              handler = _ref.handler,\\n              _ref$forceDataSchema = _ref.forceDataSchema,\\n              forceDataSchema = _ref$forceDataSchema === void 0 ? false : _ref$forceDataSchema,\\n              pdfFunctionFactory = _ref.pdfFunctionFactory;\\n          this.xref = xref;\\n          this.resources = resources;\\n          this.handler = handler;\\n          this.forceDataSchema = forceDataSchema;\\n          this.pdfFunctionFactory = pdfFunctionFactory;\\n        }\\n\\n        NativeImageDecoder.prototype = {\\n          canDecode: function canDecode(image) {\\n            return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\\n          },\\n          decode: function decode(image) {\\n            var dict = image.dict;\\n            var colorSpace = dict.get('ColorSpace', 'CS');\\n            colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\\n            return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\\n              var data = _ref2.data,\\n                  width = _ref2.width,\\n                  height = _ref2.height;\\n              return new _stream.Stream(data, 0, data.length, image.dict);\\n            });\\n          }\\n        };\\n\\n        NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\\n          var dict = image.dict;\\n\\n          if (dict.has('DecodeParms') || dict.has('DP')) {\\n            return false;\\n          }\\n\\n          var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\\n\\n          return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\\n        };\\n\\n        NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\\n          var dict = image.dict;\\n\\n          if (dict.has('DecodeParms') || dict.has('DP')) {\\n            return false;\\n          }\\n\\n          var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\\n\\n          var bpc = dict.get('BitsPerComponent', 'BPC') || 1;\\n          return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'), bpc);\\n        };\\n\\n        function PartialEvaluator(_ref3) {\\n          var _this = this;\\n\\n          var pdfManager = _ref3.pdfManager,\\n              xref = _ref3.xref,\\n              handler = _ref3.handler,\\n              pageIndex = _ref3.pageIndex,\\n              idFactory = _ref3.idFactory,\\n              fontCache = _ref3.fontCache,\\n              builtInCMapCache = _ref3.builtInCMapCache,\\n              _ref3$options = _ref3.options,\\n              options = _ref3$options === void 0 ? null : _ref3$options,\\n              pdfFunctionFactory = _ref3.pdfFunctionFactory;\\n          this.pdfManager = pdfManager;\\n          this.xref = xref;\\n          this.handler = handler;\\n          this.pageIndex = pageIndex;\\n          this.idFactory = idFactory;\\n          this.fontCache = fontCache;\\n          this.builtInCMapCache = builtInCMapCache;\\n          this.options = options || DefaultPartialEvaluatorOptions;\\n          this.pdfFunctionFactory = pdfFunctionFactory;\\n\\n          this.fetchBuiltInCMap =\\n          /*#__PURE__*/\\n          function () {\\n            var _ref4 = _asyncToGenerator(\\n            /*#__PURE__*/\\n            _regenerator.default.mark(function _callee(name) {\\n              var data;\\n              return _regenerator.default.wrap(function _callee$(_context) {\\n                while (1) {\\n                  switch (_context.prev = _context.next) {\\n                    case 0:\\n                      if (!_this.builtInCMapCache.has(name)) {\\n                        _context.next = 2;\\n                        break;\\n                      }\\n\\n                      return _context.abrupt(\\\"return\\\", _this.builtInCMapCache.get(name));\\n\\n                    case 2:\\n                      _context.next = 4;\\n                      return _this.handler.sendWithPromise('FetchBuiltInCMap', {\\n                        name: name\\n                      });\\n\\n                    case 4:\\n                      data = _context.sent;\\n\\n                      if (data.compressionType !== _util.CMapCompressionType.NONE) {\\n                        _this.builtInCMapCache.set(name, data);\\n                      }\\n\\n                      return _context.abrupt(\\\"return\\\", data);\\n\\n                    case 7:\\n                    case \\\"end\\\":\\n                      return _context.stop();\\n                  }\\n                }\\n              }, _callee, this);\\n            }));\\n\\n            return function (_x) {\\n              return _ref4.apply(this, arguments);\\n            };\\n          }();\\n        }\\n\\n        var TIME_SLOT_DURATION_MS = 20;\\n        var CHECK_TIME_EVERY = 100;\\n\\n        function TimeSlotManager() {\\n          this.reset();\\n        }\\n\\n        TimeSlotManager.prototype = {\\n          check: function TimeSlotManager_check() {\\n            if (++this.checked < CHECK_TIME_EVERY) {\\n              return false;\\n            }\\n\\n            this.checked = 0;\\n            return this.endTime <= Date.now();\\n          },\\n          reset: function TimeSlotManager_reset() {\\n            this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\\n            this.checked = 0;\\n          }\\n        };\\n\\n        function normalizeBlendMode(value) {\\n          if (!(0, _primitives.isName)(value)) {\\n            return 'source-over';\\n          }\\n\\n          switch (value.name) {\\n            case 'Normal':\\n            case 'Compatible':\\n              return 'source-over';\\n\\n            case 'Multiply':\\n              return 'multiply';\\n\\n            case 'Screen':\\n              return 'screen';\\n\\n            case 'Overlay':\\n              return 'overlay';\\n\\n            case 'Darken':\\n              return 'darken';\\n\\n            case 'Lighten':\\n              return 'lighten';\\n\\n            case 'ColorDodge':\\n              return 'color-dodge';\\n\\n            case 'ColorBurn':\\n              return 'color-burn';\\n\\n            case 'HardLight':\\n              return 'hard-light';\\n\\n            case 'SoftLight':\\n              return 'soft-light';\\n\\n            case 'Difference':\\n              return 'difference';\\n\\n            case 'Exclusion':\\n              return 'exclusion';\\n\\n            case 'Hue':\\n              return 'hue';\\n\\n            case 'Saturation':\\n              return 'saturation';\\n\\n            case 'Color':\\n              return 'color';\\n\\n            case 'Luminosity':\\n              return 'luminosity';\\n          }\\n\\n          (0, _util.warn)('Unsupported blend mode: ' + value.name);\\n          return 'source-over';\\n        }\\n\\n        var deferred = Promise.resolve();\\n        var TILING_PATTERN = 1,\\n            SHADING_PATTERN = 2;\\n        PartialEvaluator.prototype = {\\n          clone: function clone() {\\n            var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\\n            var newEvaluator = Object.create(this);\\n            newEvaluator.options = newOptions;\\n            return newEvaluator;\\n          },\\n          hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\\n            if (!(0, _primitives.isDict)(resources)) {\\n              return false;\\n            }\\n\\n            var processed = Object.create(null);\\n\\n            if (resources.objId) {\\n              processed[resources.objId] = true;\\n            }\\n\\n            var nodes = [resources],\\n                xref = this.xref;\\n\\n            while (nodes.length) {\\n              var key, i, ii;\\n              var node = nodes.shift();\\n              var graphicStates = node.get('ExtGState');\\n\\n              if ((0, _primitives.isDict)(graphicStates)) {\\n                var graphicStatesKeys = graphicStates.getKeys();\\n\\n                for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\\n                  key = graphicStatesKeys[i];\\n                  var graphicState = graphicStates.get(key);\\n                  var bm = graphicState.get('BM');\\n\\n                  if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\\n                    return true;\\n                  }\\n                }\\n              }\\n\\n              var xObjects = node.get('XObject');\\n\\n              if (!(0, _primitives.isDict)(xObjects)) {\\n                continue;\\n              }\\n\\n              var xObjectsKeys = xObjects.getKeys();\\n\\n              for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\\n                key = xObjectsKeys[i];\\n                var xObject = xObjects.getRaw(key);\\n\\n                if ((0, _primitives.isRef)(xObject)) {\\n                  if (processed[xObject.toString()]) {\\n                    continue;\\n                  }\\n\\n                  xObject = xref.fetch(xObject);\\n                }\\n\\n                if (!(0, _primitives.isStream)(xObject)) {\\n                  continue;\\n                }\\n\\n                if (xObject.dict.objId) {\\n                  if (processed[xObject.dict.objId]) {\\n                    continue;\\n                  }\\n\\n                  processed[xObject.dict.objId] = true;\\n                }\\n\\n                var xResources = xObject.dict.get('Resources');\\n\\n                if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\\n                  nodes.push(xResources);\\n\\n                  if (xResources.objId) {\\n                    processed[xResources.objId] = true;\\n                  }\\n                }\\n              }\\n            }\\n\\n            return false;\\n          },\\n          buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\\n            var dict = xobj.dict;\\n            var matrix = dict.getArray('Matrix');\\n            var bbox = dict.getArray('BBox');\\n\\n            if (Array.isArray(bbox) && bbox.length === 4) {\\n              bbox = _util.Util.normalizeRect(bbox);\\n            } else {\\n              bbox = null;\\n            }\\n\\n            var group = dict.get('Group');\\n\\n            if (group) {\\n              var groupOptions = {\\n                matrix: matrix,\\n                bbox: bbox,\\n                smask: smask,\\n                isolated: false,\\n                knockout: false\\n              };\\n              var groupSubtype = group.get('S');\\n              var colorSpace = null;\\n\\n              if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\\n                groupOptions.isolated = group.get('I') || false;\\n                groupOptions.knockout = group.get('K') || false;\\n\\n                if (group.has('CS')) {\\n                  colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\\n                }\\n              }\\n\\n              if (smask && smask.backdrop) {\\n                colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\\n                smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\\n              }\\n\\n              operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\\n            }\\n\\n            operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\\n            return this.getOperatorList({\\n              stream: xobj,\\n              task: task,\\n              resources: dict.get('Resources') || resources,\\n              operatorList: operatorList,\\n              initialState: initialState\\n            }).then(function () {\\n              operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\\n\\n              if (group) {\\n                operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\\n              }\\n            });\\n          },\\n          buildPaintImageXObject: function buildPaintImageXObject(_ref5) {\\n            var _this2 = this;\\n\\n            var resources = _ref5.resources,\\n                image = _ref5.image,\\n                _ref5$isInline = _ref5.isInline,\\n                isInline = _ref5$isInline === void 0 ? false : _ref5$isInline,\\n                operatorList = _ref5.operatorList,\\n                cacheKey = _ref5.cacheKey,\\n                imageCache = _ref5.imageCache,\\n                _ref5$forceDisableNat = _ref5.forceDisableNativeImageDecoder,\\n                forceDisableNativeImageDecoder = _ref5$forceDisableNat === void 0 ? false : _ref5$forceDisableNat;\\n            var dict = image.dict;\\n            var w = dict.get('Width', 'W');\\n            var h = dict.get('Height', 'H');\\n\\n            if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\\n              (0, _util.warn)('Image dimensions are missing, or not numbers.');\\n              return Promise.resolve();\\n            }\\n\\n            var maxImageSize = this.options.maxImageSize;\\n\\n            if (maxImageSize !== -1 && w * h > maxImageSize) {\\n              (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\\n              return Promise.resolve();\\n            }\\n\\n            var imageMask = dict.get('ImageMask', 'IM') || false;\\n            var imgData, args;\\n\\n            if (imageMask) {\\n              var width = dict.get('Width', 'W');\\n              var height = dict.get('Height', 'H');\\n              var bitStrideLength = width + 7 >> 3;\\n              var imgArray = image.getBytes(bitStrideLength * height, true);\\n              var decode = dict.getArray('Decode', 'D');\\n              imgData = _image.PDFImage.createMask({\\n                imgArray: imgArray,\\n                width: width,\\n                height: height,\\n                imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\\n                inverseDecode: !!decode && decode[0] > 0\\n              });\\n              imgData.cached = true;\\n              args = [imgData];\\n              operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\\n\\n              if (cacheKey) {\\n                imageCache[cacheKey] = {\\n                  fn: _util.OPS.paintImageMaskXObject,\\n                  args: args\\n                };\\n              }\\n\\n              return Promise.resolve();\\n            }\\n\\n            var softMask = dict.get('SMask', 'SM') || false;\\n            var mask = dict.get('Mask') || false;\\n            var SMALL_IMAGE_DIMENSIONS = 200;\\n\\n            if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\\n              var imageObj = new _image.PDFImage({\\n                xref: this.xref,\\n                res: resources,\\n                image: image,\\n                isInline: isInline,\\n                pdfFunctionFactory: this.pdfFunctionFactory\\n              });\\n              imgData = imageObj.createImageData(true);\\n              operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\\n              return Promise.resolve();\\n            }\\n\\n            var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\\n            var objId = 'img_' + this.idFactory.createObjId();\\n\\n            if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\\n              return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\\n                operatorList.addDependency(objId);\\n                args = [objId, w, h];\\n                operatorList.addOp(_util.OPS.paintJpegXObject, args);\\n\\n                if (cacheKey) {\\n                  imageCache[cacheKey] = {\\n                    fn: _util.OPS.paintJpegXObject,\\n                    args: args\\n                  };\\n                }\\n              }, function (reason) {\\n                (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\\n                return _this2.buildPaintImageXObject({\\n                  resources: resources,\\n                  image: image,\\n                  isInline: isInline,\\n                  operatorList: operatorList,\\n                  cacheKey: cacheKey,\\n                  imageCache: imageCache,\\n                  forceDisableNativeImageDecoder: true\\n                });\\n              });\\n            }\\n\\n            var nativeImageDecoder = null;\\n\\n            if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\\n              nativeImageDecoder = new NativeImageDecoder({\\n                xref: this.xref,\\n                resources: resources,\\n                handler: this.handler,\\n                forceDataSchema: this.options.forceDataSchema,\\n                pdfFunctionFactory: this.pdfFunctionFactory\\n              });\\n            }\\n\\n            operatorList.addDependency(objId);\\n            args = [objId, w, h];\\n\\n            _image.PDFImage.buildImage({\\n              handler: this.handler,\\n              xref: this.xref,\\n              res: resources,\\n              image: image,\\n              isInline: isInline,\\n              nativeDecoder: nativeImageDecoder,\\n              pdfFunctionFactory: this.pdfFunctionFactory\\n            }).then(function (imageObj) {\\n              var imgData = imageObj.createImageData(false);\\n\\n              _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\\n            }).catch(function (reason) {\\n              (0, _util.warn)('Unable to decode image: ' + reason);\\n\\n              _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\\n            });\\n\\n            operatorList.addOp(_util.OPS.paintImageXObject, args);\\n\\n            if (cacheKey) {\\n              imageCache[cacheKey] = {\\n                fn: _util.OPS.paintImageXObject,\\n                args: args\\n              };\\n            }\\n\\n            return Promise.resolve();\\n          },\\n          handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\\n            var smaskContent = smask.get('G');\\n            var smaskOptions = {\\n              subtype: smask.get('S').name,\\n              backdrop: smask.get('BC')\\n            };\\n            var transferObj = smask.get('TR');\\n\\n            if ((0, _function.isPDFFunction)(transferObj)) {\\n              var transferFn = this.pdfFunctionFactory.create(transferObj);\\n              var transferMap = new Uint8Array(256);\\n              var tmp = new Float32Array(1);\\n\\n              for (var i = 0; i < 256; i++) {\\n                tmp[0] = i / 255;\\n                transferFn(tmp, 0, tmp, 0);\\n                transferMap[i] = tmp[0] * 255 | 0;\\n              }\\n\\n              smaskOptions.transferMap = transferMap;\\n            }\\n\\n            return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\\n          },\\n          handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\\n            var _this3 = this;\\n\\n            var tilingOpList = new _operator_list.OperatorList();\\n            var resourcesArray = [patternDict.get('Resources'), resources];\\n\\n            var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\\n\\n            return this.getOperatorList({\\n              stream: pattern,\\n              task: task,\\n              resources: patternResources,\\n              operatorList: tilingOpList\\n            }).then(function () {\\n              return (0, _pattern.getTilingPatternIR)({\\n                fnArray: tilingOpList.fnArray,\\n                argsArray: tilingOpList.argsArray\\n              }, patternDict, args);\\n            }).then(function (tilingPatternIR) {\\n              operatorList.addDependencies(tilingOpList.dependencies);\\n              operatorList.addOp(fn, tilingPatternIR);\\n            }, function (reason) {\\n              if (_this3.options.ignoreErrors) {\\n                _this3.handler.send('UnsupportedFeature', {\\n                  featureId: _util.UNSUPPORTED_FEATURES.unknown\\n                });\\n\\n                (0, _util.warn)(\\\"handleTilingType - ignoring pattern: \\\\\\\"\\\".concat(reason, \\\"\\\\\\\".\\\"));\\n                return;\\n              }\\n\\n              throw reason;\\n            });\\n          },\\n          handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\\n            var _this4 = this;\\n\\n            var fontName;\\n\\n            if (fontArgs) {\\n              fontArgs = fontArgs.slice();\\n              fontName = fontArgs[0].name;\\n            }\\n\\n            return this.loadFont(fontName, fontRef, resources).then(function (translated) {\\n              if (!translated.font.isType3Font) {\\n                return translated;\\n              }\\n\\n              return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\\n                return translated;\\n              }).catch(function (reason) {\\n                _this4.handler.send('UnsupportedFeature', {\\n                  featureId: _util.UNSUPPORTED_FEATURES.font\\n                });\\n\\n                return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\\n              });\\n            }).then(function (translated) {\\n              state.font = translated.font;\\n              translated.send(_this4.handler);\\n              return translated.loadedName;\\n            });\\n          },\\n          handleText: function handleText(chars, state) {\\n            var font = state.font;\\n            var glyphs = font.charsToGlyphs(chars);\\n\\n            if (font.data) {\\n              var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\\n\\n              if (isAddToPathSet || state.fillColorSpace.name === 'Pattern' || font.disableFontFace || this.options.disableFontFace) {\\n                PartialEvaluator.buildFontPaths(font, glyphs, this.handler);\\n              }\\n            }\\n\\n            return glyphs;\\n          },\\n          setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\\n            var _this5 = this;\\n\\n            var gStateObj = [];\\n            var gStateKeys = gState.getKeys();\\n            var promise = Promise.resolve();\\n\\n            var _loop = function _loop() {\\n              var key = gStateKeys[i];\\n              var value = gState.get(key);\\n\\n              switch (key) {\\n                case 'Type':\\n                  break;\\n\\n                case 'LW':\\n                case 'LC':\\n                case 'LJ':\\n                case 'ML':\\n                case 'D':\\n                case 'RI':\\n                case 'FL':\\n                case 'CA':\\n                case 'ca':\\n                  gStateObj.push([key, value]);\\n                  break;\\n\\n                case 'Font':\\n                  promise = promise.then(function () {\\n                    return _this5.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\\n                      operatorList.addDependency(loadedName);\\n                      gStateObj.push([key, [loadedName, value[1]]]);\\n                    });\\n                  });\\n                  break;\\n\\n                case 'BM':\\n                  gStateObj.push([key, normalizeBlendMode(value)]);\\n                  break;\\n\\n                case 'SMask':\\n                  if ((0, _primitives.isName)(value, 'None')) {\\n                    gStateObj.push([key, false]);\\n                    break;\\n                  }\\n\\n                  if ((0, _primitives.isDict)(value)) {\\n                    promise = promise.then(function () {\\n                      return _this5.handleSMask(value, resources, operatorList, task, stateManager);\\n                    });\\n                    gStateObj.push([key, true]);\\n                  } else {\\n                    (0, _util.warn)('Unsupported SMask type');\\n                  }\\n\\n                  break;\\n\\n                case 'OP':\\n                case 'op':\\n                case 'OPM':\\n                case 'BG':\\n                case 'BG2':\\n                case 'UCR':\\n                case 'UCR2':\\n                case 'TR':\\n                case 'TR2':\\n                case 'HT':\\n                case 'SM':\\n                case 'SA':\\n                case 'AIS':\\n                case 'TK':\\n                  (0, _util.info)('graphic state operator ' + key);\\n                  break;\\n\\n                default:\\n                  (0, _util.info)('Unknown graphic state operator ' + key);\\n                  break;\\n              }\\n            };\\n\\n            for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\\n              _loop();\\n            }\\n\\n            return promise.then(function () {\\n              if (gStateObj.length > 0) {\\n                operatorList.addOp(_util.OPS.setGState, [gStateObj]);\\n              }\\n            });\\n          },\\n          loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\\n            var _this6 = this;\\n\\n            function errorFont() {\\n              return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\\n            }\\n\\n            var fontRef,\\n                xref = this.xref;\\n\\n            if (font) {\\n              if (!(0, _primitives.isRef)(font)) {\\n                throw new Error('The \\\"font\\\" object should be a reference.');\\n              }\\n\\n              fontRef = font;\\n            } else {\\n              var fontRes = resources.get('Font');\\n\\n              if (fontRes) {\\n                fontRef = fontRes.getRaw(fontName);\\n              } else {\\n                (0, _util.warn)('fontRes not available');\\n                return errorFont();\\n              }\\n            }\\n\\n            if (!fontRef) {\\n              (0, _util.warn)('fontRef not available');\\n              return errorFont();\\n            }\\n\\n            if (this.fontCache.has(fontRef)) {\\n              return this.fontCache.get(fontRef);\\n            }\\n\\n            font = xref.fetchIfRef(fontRef);\\n\\n            if (!(0, _primitives.isDict)(font)) {\\n              return errorFont();\\n            }\\n\\n            if (font.translated) {\\n              return font.translated;\\n            }\\n\\n            var fontCapability = (0, _util.createPromiseCapability)();\\n            var preEvaluatedFont = this.preEvaluateFont(font);\\n            var descriptor = preEvaluatedFont.descriptor;\\n            var fontRefIsRef = (0, _primitives.isRef)(fontRef),\\n                fontID;\\n\\n            if (fontRefIsRef) {\\n              fontID = fontRef.toString();\\n            }\\n\\n            if ((0, _primitives.isDict)(descriptor)) {\\n              if (!descriptor.fontAliases) {\\n                descriptor.fontAliases = Object.create(null);\\n              }\\n\\n              var fontAliases = descriptor.fontAliases;\\n              var hash = preEvaluatedFont.hash;\\n\\n              if (fontAliases[hash]) {\\n                var aliasFontRef = fontAliases[hash].aliasRef;\\n\\n                if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\\n                  this.fontCache.putAlias(fontRef, aliasFontRef);\\n                  return this.fontCache.get(fontRef);\\n                }\\n              } else {\\n                fontAliases[hash] = {\\n                  fontID: _fonts.Font.getFontID()\\n                };\\n              }\\n\\n              if (fontRefIsRef) {\\n                fontAliases[hash].aliasRef = fontRef;\\n              }\\n\\n              fontID = fontAliases[hash].fontID;\\n            }\\n\\n            if (fontRefIsRef) {\\n              this.fontCache.put(fontRef, fontCapability.promise);\\n            } else {\\n              if (!fontID) {\\n                fontID = this.idFactory.createObjId();\\n              }\\n\\n              this.fontCache.put('id_' + fontID, fontCapability.promise);\\n            }\\n\\n            (0, _util.assert)(fontID, 'The \\\"fontID\\\" must be defined.');\\n            font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\\n            font.translated = fontCapability.promise;\\n            var translatedPromise;\\n\\n            try {\\n              translatedPromise = this.translateFont(preEvaluatedFont);\\n            } catch (e) {\\n              translatedPromise = Promise.reject(e);\\n            }\\n\\n            translatedPromise.then(function (translatedFont) {\\n              if (translatedFont.fontType !== undefined) {\\n                var xrefFontStats = xref.stats.fontTypes;\\n                xrefFontStats[translatedFont.fontType] = true;\\n              }\\n\\n              fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\\n            }).catch(function (reason) {\\n              _this6.handler.send('UnsupportedFeature', {\\n                featureId: _util.UNSUPPORTED_FEATURES.font\\n              });\\n\\n              try {\\n                var descriptor = preEvaluatedFont.descriptor;\\n                var fontFile3 = descriptor && descriptor.get('FontFile3');\\n                var subtype = fontFile3 && fontFile3.get('Subtype');\\n                var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\\n                var xrefFontStats = xref.stats.fontTypes;\\n                xrefFontStats[fontType] = true;\\n              } catch (ex) {}\\n\\n              fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\\n            });\\n            return fontCapability.promise;\\n          },\\n          buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\\n            var lastIndex = operatorList.length - 1;\\n\\n            if (!args) {\\n              args = [];\\n            }\\n\\n            if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\\n              operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\\n            } else {\\n              var opArgs = operatorList.argsArray[lastIndex];\\n              opArgs[0].push(fn);\\n              Array.prototype.push.apply(opArgs[1], args);\\n            }\\n          },\\n          handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\\n            var patternName = args[args.length - 1];\\n            var pattern;\\n\\n            if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\\n              var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\\n              var typeNum = dict.get('PatternType');\\n\\n              if (typeNum === TILING_PATTERN) {\\n                var color = cs.base ? cs.base.getRgb(args, 0) : null;\\n                return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\\n              } else if (typeNum === SHADING_PATTERN) {\\n                var shading = dict.get('Shading');\\n                var matrix = dict.getArray('Matrix');\\n                pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\\n                operatorList.addOp(fn, pattern.getIR());\\n                return Promise.resolve();\\n              }\\n\\n              return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\\n            }\\n\\n            operatorList.addOp(fn, args);\\n            return Promise.resolve();\\n          },\\n          getOperatorList: function getOperatorList(_ref6) {\\n            var _this7 = this;\\n\\n            var stream = _ref6.stream,\\n                task = _ref6.task,\\n                resources = _ref6.resources,\\n                operatorList = _ref6.operatorList,\\n                _ref6$initialState = _ref6.initialState,\\n                initialState = _ref6$initialState === void 0 ? null : _ref6$initialState;\\n            resources = resources || _primitives.Dict.empty;\\n            initialState = initialState || new EvalState();\\n\\n            if (!operatorList) {\\n              throw new Error('getOperatorList: missing \\\"operatorList\\\" parameter');\\n            }\\n\\n            var self = this;\\n            var xref = this.xref;\\n            var imageCache = Object.create(null);\\n\\n            var xobjs = resources.get('XObject') || _primitives.Dict.empty;\\n\\n            var patterns = resources.get('Pattern') || _primitives.Dict.empty;\\n\\n            var stateManager = new StateManager(initialState);\\n            var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\\n            var timeSlotManager = new TimeSlotManager();\\n\\n            function closePendingRestoreOPS(argument) {\\n              for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\\n                operatorList.addOp(_util.OPS.restore, []);\\n              }\\n            }\\n\\n            return new Promise(function promiseBody(resolve, reject) {\\n              var next = function next(promise) {\\n                promise.then(function () {\\n                  try {\\n                    promiseBody(resolve, reject);\\n                  } catch (ex) {\\n                    reject(ex);\\n                  }\\n                }, reject);\\n              };\\n\\n              task.ensureNotTerminated();\\n              timeSlotManager.reset();\\n              var stop,\\n                  operation = {},\\n                  i,\\n                  ii,\\n                  cs;\\n\\n              while (!(stop = timeSlotManager.check())) {\\n                operation.args = null;\\n\\n                if (!preprocessor.read(operation)) {\\n                  break;\\n                }\\n\\n                var args = operation.args;\\n                var fn = operation.fn;\\n\\n                switch (fn | 0) {\\n                  case _util.OPS.paintXObject:\\n                    var name = args[0].name;\\n\\n                    if (name && imageCache[name] !== undefined) {\\n                      operatorList.addOp(imageCache[name].fn, imageCache[name].args);\\n                      args = null;\\n                      continue;\\n                    }\\n\\n                    next(new Promise(function (resolveXObject, rejectXObject) {\\n                      if (!name) {\\n                        throw new _util.FormatError('XObject must be referred to by name.');\\n                      }\\n\\n                      var xobj = xobjs.get(name);\\n\\n                      if (!xobj) {\\n                        operatorList.addOp(fn, args);\\n                        resolveXObject();\\n                        return;\\n                      }\\n\\n                      if (!(0, _primitives.isStream)(xobj)) {\\n                        throw new _util.FormatError('XObject should be a stream');\\n                      }\\n\\n                      var type = xobj.dict.get('Subtype');\\n\\n                      if (!(0, _primitives.isName)(type)) {\\n                        throw new _util.FormatError('XObject should have a Name subtype');\\n                      }\\n\\n                      if (type.name === 'Form') {\\n                        stateManager.save();\\n                        self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\\n                          stateManager.restore();\\n                          resolveXObject();\\n                        }, rejectXObject);\\n                        return;\\n                      } else if (type.name === 'Image') {\\n                        self.buildPaintImageXObject({\\n                          resources: resources,\\n                          image: xobj,\\n                          operatorList: operatorList,\\n                          cacheKey: name,\\n                          imageCache: imageCache\\n                        }).then(resolveXObject, rejectXObject);\\n                        return;\\n                      } else if (type.name === 'PS') {\\n                        (0, _util.info)('Ignored XObject subtype PS');\\n                      } else {\\n                        throw new _util.FormatError(\\\"Unhandled XObject subtype \\\".concat(type.name));\\n                      }\\n\\n                      resolveXObject();\\n                    }).catch(function (reason) {\\n                      if (self.options.ignoreErrors) {\\n                        self.handler.send('UnsupportedFeature', {\\n                          featureId: _util.UNSUPPORTED_FEATURES.unknown\\n                        });\\n                        (0, _util.warn)(\\\"getOperatorList - ignoring XObject: \\\\\\\"\\\".concat(reason, \\\"\\\\\\\".\\\"));\\n                        return;\\n                      }\\n\\n                      throw reason;\\n                    }));\\n                    return;\\n\\n                  case _util.OPS.setFont:\\n                    var fontSize = args[1];\\n                    next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\\n                      operatorList.addDependency(loadedName);\\n                      operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\\n                    }));\\n                    return;\\n\\n                  case _util.OPS.endInlineImage:\\n                    var cacheKey = args[0].cacheKey;\\n\\n                    if (cacheKey) {\\n                      var cacheEntry = imageCache[cacheKey];\\n\\n                      if (cacheEntry !== undefined) {\\n                        operatorList.addOp(cacheEntry.fn, cacheEntry.args);\\n                        args = null;\\n                        continue;\\n                      }\\n                    }\\n\\n                    next(self.buildPaintImageXObject({\\n                      resources: resources,\\n                      image: args[0],\\n                      isInline: true,\\n                      operatorList: operatorList,\\n                      cacheKey: cacheKey,\\n                      imageCache: imageCache\\n                    }));\\n                    return;\\n\\n                  case _util.OPS.showText:\\n                    args[0] = self.handleText(args[0], stateManager.state);\\n                    break;\\n\\n                  case _util.OPS.showSpacedText:\\n                    var arr = args[0];\\n                    var combinedGlyphs = [];\\n                    var arrLength = arr.length;\\n                    var state = stateManager.state;\\n\\n                    for (i = 0; i < arrLength; ++i) {\\n                      var arrItem = arr[i];\\n\\n                      if ((0, _util.isString)(arrItem)) {\\n                        Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\\n                      } else if ((0, _util.isNum)(arrItem)) {\\n                        combinedGlyphs.push(arrItem);\\n                      }\\n                    }\\n\\n                    args[0] = combinedGlyphs;\\n                    fn = _util.OPS.showText;\\n                    break;\\n\\n                  case _util.OPS.nextLineShowText:\\n                    operatorList.addOp(_util.OPS.nextLine);\\n                    args[0] = self.handleText(args[0], stateManager.state);\\n                    fn = _util.OPS.showText;\\n                    break;\\n\\n                  case _util.OPS.nextLineSetSpacingShowText:\\n                    operatorList.addOp(_util.OPS.nextLine);\\n                    operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\\n                    operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\\n                    args[0] = self.handleText(args[0], stateManager.state);\\n                    fn = _util.OPS.showText;\\n                    break;\\n\\n                  case _util.OPS.setTextRenderingMode:\\n                    stateManager.state.textRenderingMode = args[0];\\n                    break;\\n\\n                  case _util.OPS.setFillColorSpace:\\n                    stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\\n                    continue;\\n\\n                  case _util.OPS.setStrokeColorSpace:\\n                    stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\\n                    continue;\\n\\n                  case _util.OPS.setFillColor:\\n                    cs = stateManager.state.fillColorSpace;\\n                    args = cs.getRgb(args, 0);\\n                    fn = _util.OPS.setFillRGBColor;\\n                    break;\\n\\n                  case _util.OPS.setStrokeColor:\\n                    cs = stateManager.state.strokeColorSpace;\\n                    args = cs.getRgb(args, 0);\\n                    fn = _util.OPS.setStrokeRGBColor;\\n                    break;\\n\\n                  case _util.OPS.setFillGray:\\n                    stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\\n                    args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\\n                    fn = _util.OPS.setFillRGBColor;\\n                    break;\\n\\n                  case _util.OPS.setStrokeGray:\\n                    stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\\n                    args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\\n                    fn = _util.OPS.setStrokeRGBColor;\\n                    break;\\n\\n                  case _util.OPS.setFillCMYKColor:\\n                    stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\\n                    args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\\n                    fn = _util.OPS.setFillRGBColor;\\n                    break;\\n\\n                  case _util.OPS.setStrokeCMYKColor:\\n                    stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\\n                    args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\\n                    fn = _util.OPS.setStrokeRGBColor;\\n                    break;\\n\\n                  case _util.OPS.setFillRGBColor:\\n                    stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\\n                    args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\\n                    break;\\n\\n                  case _util.OPS.setStrokeRGBColor:\\n                    stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\\n                    args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\\n                    break;\\n\\n                  case _util.OPS.setFillColorN:\\n                    cs = stateManager.state.fillColorSpace;\\n\\n                    if (cs.name === 'Pattern') {\\n                      next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\\n                      return;\\n                    }\\n\\n                    args = cs.getRgb(args, 0);\\n                    fn = _util.OPS.setFillRGBColor;\\n                    break;\\n\\n                  case _util.OPS.setStrokeColorN:\\n                    cs = stateManager.state.strokeColorSpace;\\n\\n                    if (cs.name === 'Pattern') {\\n                      next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\\n                      return;\\n                    }\\n\\n                    args = cs.getRgb(args, 0);\\n                    fn = _util.OPS.setStrokeRGBColor;\\n                    break;\\n\\n                  case _util.OPS.shadingFill:\\n                    var shadingRes = resources.get('Shading');\\n\\n                    if (!shadingRes) {\\n                      throw new _util.FormatError('No shading resource found');\\n                    }\\n\\n                    var shading = shadingRes.get(args[0].name);\\n\\n                    if (!shading) {\\n                      throw new _util.FormatError('No shading object found');\\n                    }\\n\\n                    var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\\n\\n                    var patternIR = shadingFill.getIR();\\n                    args = [patternIR];\\n                    fn = _util.OPS.shadingFill;\\n                    break;\\n\\n                  case _util.OPS.setGState:\\n                    var dictName = args[0];\\n                    var extGState = resources.get('ExtGState');\\n\\n                    if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\\n                      break;\\n                    }\\n\\n                    var gState = extGState.get(dictName.name);\\n                    next(self.setGState(resources, gState, operatorList, task, stateManager));\\n                    return;\\n\\n                  case _util.OPS.moveTo:\\n                  case _util.OPS.lineTo:\\n                  case _util.OPS.curveTo:\\n                  case _util.OPS.curveTo2:\\n                  case _util.OPS.curveTo3:\\n                  case _util.OPS.closePath:\\n                    self.buildPath(operatorList, fn, args);\\n                    continue;\\n\\n                  case _util.OPS.rectangle:\\n                    self.buildPath(operatorList, fn, args);\\n                    continue;\\n\\n                  case _util.OPS.markPoint:\\n                  case _util.OPS.markPointProps:\\n                  case _util.OPS.beginMarkedContent:\\n                  case _util.OPS.beginMarkedContentProps:\\n                  case _util.OPS.endMarkedContent:\\n                  case _util.OPS.beginCompat:\\n                  case _util.OPS.endCompat:\\n                    continue;\\n\\n                  default:\\n                    if (args !== null) {\\n                      for (i = 0, ii = args.length; i < ii; i++) {\\n                        if (args[i] instanceof _primitives.Dict) {\\n                          break;\\n                        }\\n                      }\\n\\n                      if (i < ii) {\\n                        (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\\n                        continue;\\n                      }\\n                    }\\n\\n                }\\n\\n                operatorList.addOp(fn, args);\\n              }\\n\\n              if (stop) {\\n                next(deferred);\\n                return;\\n              }\\n\\n              closePendingRestoreOPS();\\n              resolve();\\n            }).catch(function (reason) {\\n              if (_this7.options.ignoreErrors) {\\n                _this7.handler.send('UnsupportedFeature', {\\n                  featureId: _util.UNSUPPORTED_FEATURES.unknown\\n                });\\n\\n                (0, _util.warn)(\\\"getOperatorList - ignoring errors during \\\\\\\"\\\".concat(task.name, \\\"\\\\\\\" \\\") + \\\"task: \\\\\\\"\\\".concat(reason, \\\"\\\\\\\".\\\"));\\n                closePendingRestoreOPS();\\n                return;\\n              }\\n\\n              throw reason;\\n            });\\n          },\\n          getTextContent: function getTextContent(_ref7) {\\n            var _this8 = this;\\n\\n            var stream = _ref7.stream,\\n                task = _ref7.task,\\n                resources = _ref7.resources,\\n                _ref7$stateManager = _ref7.stateManager,\\n                stateManager = _ref7$stateManager === void 0 ? null : _ref7$stateManager,\\n                _ref7$normalizeWhites = _ref7.normalizeWhitespace,\\n                normalizeWhitespace = _ref7$normalizeWhites === void 0 ? false : _ref7$normalizeWhites,\\n                _ref7$combineTextItem = _ref7.combineTextItems,\\n                combineTextItems = _ref7$combineTextItem === void 0 ? false : _ref7$combineTextItem,\\n                sink = _ref7.sink,\\n                _ref7$seenStyles = _ref7.seenStyles,\\n                seenStyles = _ref7$seenStyles === void 0 ? Object.create(null) : _ref7$seenStyles;\\n            resources = resources || _primitives.Dict.empty;\\n            stateManager = stateManager || new StateManager(new TextState());\\n            var WhitespaceRegexp = /\\\\s/g;\\n            var textContent = {\\n              items: [],\\n              styles: Object.create(null)\\n            };\\n            var textContentItem = {\\n              initialized: false,\\n              str: [],\\n              width: 0,\\n              height: 0,\\n              vertical: false,\\n              lastAdvanceWidth: 0,\\n              lastAdvanceHeight: 0,\\n              textAdvanceScale: 0,\\n              spaceWidth: 0,\\n              fakeSpaceMin: Infinity,\\n              fakeMultiSpaceMin: Infinity,\\n              fakeMultiSpaceMax: -0,\\n              textRunBreakAllowed: false,\\n              transform: null,\\n              fontName: null\\n            };\\n            var SPACE_FACTOR = 0.3;\\n            var MULTI_SPACE_FACTOR = 1.5;\\n            var MULTI_SPACE_FACTOR_MAX = 4;\\n            var self = this;\\n            var xref = this.xref;\\n            var xobjs = null;\\n            var skipEmptyXObjs = Object.create(null);\\n            var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\\n            var textState;\\n\\n            function ensureTextContentItem() {\\n              if (textContentItem.initialized) {\\n                return textContentItem;\\n              }\\n\\n              var font = textState.font;\\n\\n              if (!(font.loadedName in seenStyles)) {\\n                seenStyles[font.loadedName] = true;\\n                textContent.styles[font.loadedName] = {\\n                  fontFamily: font.fallbackName,\\n                  ascent: font.ascent,\\n                  descent: font.descent,\\n                  vertical: !!font.vertical\\n                };\\n              }\\n\\n              textContentItem.fontName = font.loadedName;\\n              var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\\n\\n              if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\\n                var glyphHeight = font.bbox[3] - font.bbox[1];\\n\\n                if (glyphHeight > 0) {\\n                  glyphHeight = glyphHeight * textState.fontMatrix[3];\\n                  tsm[3] *= glyphHeight;\\n                }\\n              }\\n\\n              var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\\n\\n              textContentItem.transform = trm;\\n\\n              if (!font.vertical) {\\n                textContentItem.width = 0;\\n                textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\\n                textContentItem.vertical = false;\\n              } else {\\n                textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\\n                textContentItem.height = 0;\\n                textContentItem.vertical = true;\\n              }\\n\\n              var a = textState.textLineMatrix[0];\\n              var b = textState.textLineMatrix[1];\\n              var scaleLineX = Math.sqrt(a * a + b * b);\\n              a = textState.ctm[0];\\n              b = textState.ctm[1];\\n              var scaleCtmX = Math.sqrt(a * a + b * b);\\n              textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\\n              textContentItem.lastAdvanceWidth = 0;\\n              textContentItem.lastAdvanceHeight = 0;\\n              var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\\n\\n              if (spaceWidth) {\\n                textContentItem.spaceWidth = spaceWidth;\\n                textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\\n                textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\\n                textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\\n                textContentItem.textRunBreakAllowed = !font.isMonospace;\\n              } else {\\n                textContentItem.spaceWidth = 0;\\n                textContentItem.fakeSpaceMin = Infinity;\\n                textContentItem.fakeMultiSpaceMin = Infinity;\\n                textContentItem.fakeMultiSpaceMax = 0;\\n                textContentItem.textRunBreakAllowed = false;\\n              }\\n\\n              textContentItem.initialized = true;\\n              return textContentItem;\\n            }\\n\\n            function replaceWhitespace(str) {\\n              var i = 0,\\n                  ii = str.length,\\n                  code;\\n\\n              while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\\n                i++;\\n              }\\n\\n              return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\\n            }\\n\\n            function runBidiTransform(textChunk) {\\n              var str = textChunk.str.join('');\\n              var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\\n              return {\\n                str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\\n                dir: bidiResult.dir,\\n                width: textChunk.width,\\n                height: textChunk.height,\\n                transform: textChunk.transform,\\n                fontName: textChunk.fontName\\n              };\\n            }\\n\\n            function handleSetFont(fontName, fontRef) {\\n              return self.loadFont(fontName, fontRef, resources).then(function (translated) {\\n                textState.font = translated.font;\\n                textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\n              });\\n            }\\n\\n            function buildTextContentItem(chars) {\\n              var font = textState.font;\\n              var textChunk = ensureTextContentItem();\\n              var width = 0;\\n              var height = 0;\\n              var glyphs = font.charsToGlyphs(chars);\\n\\n              for (var i = 0; i < glyphs.length; i++) {\\n                var glyph = glyphs[i];\\n                var glyphWidth = null;\\n\\n                if (font.vertical && glyph.vmetric) {\\n                  glyphWidth = glyph.vmetric[0];\\n                } else {\\n                  glyphWidth = glyph.width;\\n                }\\n\\n                var glyphUnicode = glyph.unicode;\\n                var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\\n\\n                if (NormalizedUnicodes[glyphUnicode] !== undefined) {\\n                  glyphUnicode = NormalizedUnicodes[glyphUnicode];\\n                }\\n\\n                glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\\n                var charSpacing = textState.charSpacing;\\n\\n                if (glyph.isSpace) {\\n                  var wordSpacing = textState.wordSpacing;\\n                  charSpacing += wordSpacing;\\n\\n                  if (wordSpacing > 0) {\\n                    addFakeSpaces(wordSpacing, textChunk.str);\\n                  }\\n                }\\n\\n                var tx = 0;\\n                var ty = 0;\\n\\n                if (!font.vertical) {\\n                  var w0 = glyphWidth * textState.fontMatrix[0];\\n                  tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\\n                  width += tx;\\n                } else {\\n                  var w1 = glyphWidth * textState.fontMatrix[0];\\n                  ty = w1 * textState.fontSize + charSpacing;\\n                  height += ty;\\n                }\\n\\n                textState.translateTextMatrix(tx, ty);\\n                textChunk.str.push(glyphUnicode);\\n              }\\n\\n              if (!font.vertical) {\\n                textChunk.lastAdvanceWidth = width;\\n                textChunk.width += width;\\n              } else {\\n                textChunk.lastAdvanceHeight = height;\\n                textChunk.height += Math.abs(height);\\n              }\\n\\n              return textChunk;\\n            }\\n\\n            function addFakeSpaces(width, strBuf) {\\n              if (width < textContentItem.fakeSpaceMin) {\\n                return;\\n              }\\n\\n              if (width < textContentItem.fakeMultiSpaceMin) {\\n                strBuf.push(' ');\\n                return;\\n              }\\n\\n              var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\\n\\n              while (fakeSpaces-- > 0) {\\n                strBuf.push(' ');\\n              }\\n            }\\n\\n            function flushTextContentItem() {\\n              if (!textContentItem.initialized) {\\n                return;\\n              }\\n\\n              if (!textContentItem.vertical) {\\n                textContentItem.width *= textContentItem.textAdvanceScale;\\n              } else {\\n                textContentItem.height *= textContentItem.textAdvanceScale;\\n              }\\n\\n              textContent.items.push(runBidiTransform(textContentItem));\\n              textContentItem.initialized = false;\\n              textContentItem.str.length = 0;\\n            }\\n\\n            function enqueueChunk() {\\n              var length = textContent.items.length;\\n\\n              if (length > 0) {\\n                sink.enqueue(textContent, length);\\n                textContent.items = [];\\n                textContent.styles = Object.create(null);\\n              }\\n            }\\n\\n            var timeSlotManager = new TimeSlotManager();\\n            return new Promise(function promiseBody(resolve, reject) {\\n              var next = function next(promise) {\\n                enqueueChunk();\\n                Promise.all([promise, sink.ready]).then(function () {\\n                  try {\\n                    promiseBody(resolve, reject);\\n                  } catch (ex) {\\n                    reject(ex);\\n                  }\\n                }, reject);\\n              };\\n\\n              task.ensureNotTerminated();\\n              timeSlotManager.reset();\\n              var stop,\\n                  operation = {},\\n                  args = [];\\n\\n              while (!(stop = timeSlotManager.check())) {\\n                args.length = 0;\\n                operation.args = args;\\n\\n                if (!preprocessor.read(operation)) {\\n                  break;\\n                }\\n\\n                textState = stateManager.state;\\n                var fn = operation.fn;\\n                args = operation.args;\\n                var advance, diff;\\n\\n                switch (fn | 0) {\\n                  case _util.OPS.setFont:\\n                    var fontNameArg = args[0].name,\\n                        fontSizeArg = args[1];\\n\\n                    if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\\n                      break;\\n                    }\\n\\n                    flushTextContentItem();\\n                    textState.fontName = fontNameArg;\\n                    textState.fontSize = fontSizeArg;\\n                    next(handleSetFont(fontNameArg, null));\\n                    return;\\n\\n                  case _util.OPS.setTextRise:\\n                    flushTextContentItem();\\n                    textState.textRise = args[0];\\n                    break;\\n\\n                  case _util.OPS.setHScale:\\n                    flushTextContentItem();\\n                    textState.textHScale = args[0] / 100;\\n                    break;\\n\\n                  case _util.OPS.setLeading:\\n                    flushTextContentItem();\\n                    textState.leading = args[0];\\n                    break;\\n\\n                  case _util.OPS.moveText:\\n                    var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\\n                    advance = args[0] - args[1];\\n\\n                    if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\\n                      textState.translateTextLineMatrix(args[0], args[1]);\\n                      textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\\n                      textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\\n                      diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\\n                      addFakeSpaces(diff, textContentItem.str);\\n                      break;\\n                    }\\n\\n                    flushTextContentItem();\\n                    textState.translateTextLineMatrix(args[0], args[1]);\\n                    textState.textMatrix = textState.textLineMatrix.slice();\\n                    break;\\n\\n                  case _util.OPS.setLeadingMoveText:\\n                    flushTextContentItem();\\n                    textState.leading = -args[1];\\n                    textState.translateTextLineMatrix(args[0], args[1]);\\n                    textState.textMatrix = textState.textLineMatrix.slice();\\n                    break;\\n\\n                  case _util.OPS.nextLine:\\n                    flushTextContentItem();\\n                    textState.carriageReturn();\\n                    break;\\n\\n                  case _util.OPS.setTextMatrix:\\n                    advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\\n\\n                    if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\\n                      textState.translateTextLineMatrix(advance.width, advance.height);\\n                      textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\\n                      textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\\n                      diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\\n                      addFakeSpaces(diff, textContentItem.str);\\n                      break;\\n                    }\\n\\n                    flushTextContentItem();\\n                    textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\n                    textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\n                    break;\\n\\n                  case _util.OPS.setCharSpacing:\\n                    textState.charSpacing = args[0];\\n                    break;\\n\\n                  case _util.OPS.setWordSpacing:\\n                    textState.wordSpacing = args[0];\\n                    break;\\n\\n                  case _util.OPS.beginText:\\n                    flushTextContentItem();\\n                    textState.textMatrix = _util.IDENTITY_MATRIX.slice();\\n                    textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\\n                    break;\\n\\n                  case _util.OPS.showSpacedText:\\n                    var items = args[0];\\n                    var offset;\\n\\n                    for (var j = 0, jj = items.length; j < jj; j++) {\\n                      if (typeof items[j] === 'string') {\\n                        buildTextContentItem(items[j]);\\n                      } else if ((0, _util.isNum)(items[j])) {\\n                        ensureTextContentItem();\\n                        advance = items[j] * textState.fontSize / 1000;\\n                        var breakTextRun = false;\\n\\n                        if (textState.font.vertical) {\\n                          offset = advance;\\n                          textState.translateTextMatrix(0, offset);\\n                          breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\\n\\n                          if (!breakTextRun) {\\n                            textContentItem.height += offset;\\n                          }\\n                        } else {\\n                          advance = -advance;\\n                          offset = advance * textState.textHScale;\\n                          textState.translateTextMatrix(offset, 0);\\n                          breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\\n\\n                          if (!breakTextRun) {\\n                            textContentItem.width += offset;\\n                          }\\n                        }\\n\\n                        if (breakTextRun) {\\n                          flushTextContentItem();\\n                        } else if (advance > 0) {\\n                          addFakeSpaces(advance, textContentItem.str);\\n                        }\\n                      }\\n                    }\\n\\n                    break;\\n\\n                  case _util.OPS.showText:\\n                    buildTextContentItem(args[0]);\\n                    break;\\n\\n                  case _util.OPS.nextLineShowText:\\n                    flushTextContentItem();\\n                    textState.carriageReturn();\\n                    buildTextContentItem(args[0]);\\n                    break;\\n\\n                  case _util.OPS.nextLineSetSpacingShowText:\\n                    flushTextContentItem();\\n                    textState.wordSpacing = args[0];\\n                    textState.charSpacing = args[1];\\n                    textState.carriageReturn();\\n                    buildTextContentItem(args[2]);\\n                    break;\\n\\n                  case _util.OPS.paintXObject:\\n                    flushTextContentItem();\\n\\n                    if (!xobjs) {\\n                      xobjs = resources.get('XObject') || _primitives.Dict.empty;\\n                    }\\n\\n                    var name = args[0].name;\\n\\n                    if (name && skipEmptyXObjs[name] !== undefined) {\\n                      break;\\n                    }\\n\\n                    next(new Promise(function (resolveXObject, rejectXObject) {\\n                      if (!name) {\\n                        throw new _util.FormatError('XObject must be referred to by name.');\\n                      }\\n\\n                      var xobj = xobjs.get(name);\\n\\n                      if (!xobj) {\\n                        resolveXObject();\\n                        return;\\n                      }\\n\\n                      if (!(0, _primitives.isStream)(xobj)) {\\n                        throw new _util.FormatError('XObject should be a stream');\\n                      }\\n\\n                      var type = xobj.dict.get('Subtype');\\n\\n                      if (!(0, _primitives.isName)(type)) {\\n                        throw new _util.FormatError('XObject should have a Name subtype');\\n                      }\\n\\n                      if (type.name !== 'Form') {\\n                        skipEmptyXObjs[name] = true;\\n                        resolveXObject();\\n                        return;\\n                      }\\n\\n                      var currentState = stateManager.state.clone();\\n                      var xObjStateManager = new StateManager(currentState);\\n                      var matrix = xobj.dict.getArray('Matrix');\\n\\n                      if (Array.isArray(matrix) && matrix.length === 6) {\\n                        xObjStateManager.transform(matrix);\\n                      }\\n\\n                      enqueueChunk();\\n                      var sinkWrapper = {\\n                        enqueueInvoked: false,\\n                        enqueue: function enqueue(chunk, size) {\\n                          this.enqueueInvoked = true;\\n                          sink.enqueue(chunk, size);\\n                        },\\n\\n                        get desiredSize() {\\n                          return sink.desiredSize;\\n                        },\\n\\n                        get ready() {\\n                          return sink.ready;\\n                        }\\n\\n                      };\\n                      self.getTextContent({\\n                        stream: xobj,\\n                        task: task,\\n                        resources: xobj.dict.get('Resources') || resources,\\n                        stateManager: xObjStateManager,\\n                        normalizeWhitespace: normalizeWhitespace,\\n                        combineTextItems: combineTextItems,\\n                        sink: sinkWrapper,\\n                        seenStyles: seenStyles\\n                      }).then(function () {\\n                        if (!sinkWrapper.enqueueInvoked) {\\n                          skipEmptyXObjs[name] = true;\\n                        }\\n\\n                        resolveXObject();\\n                      }, rejectXObject);\\n                    }).catch(function (reason) {\\n                      if (reason instanceof _util.AbortException) {\\n                        return;\\n                      }\\n\\n                      if (self.options.ignoreErrors) {\\n                        (0, _util.warn)(\\\"getTextContent - ignoring XObject: \\\\\\\"\\\".concat(reason, \\\"\\\\\\\".\\\"));\\n                        return;\\n                      }\\n\\n                      throw reason;\\n                    }));\\n                    return;\\n\\n                  case _util.OPS.setGState:\\n                    flushTextContentItem();\\n                    var dictName = args[0];\\n                    var extGState = resources.get('ExtGState');\\n\\n                    if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\\n                      break;\\n                    }\\n\\n                    var gState = extGState.get(dictName.name);\\n\\n                    if (!(0, _primitives.isDict)(gState)) {\\n                      break;\\n                    }\\n\\n                    var gStateFont = gState.get('Font');\\n\\n                    if (gStateFont) {\\n                      textState.fontName = null;\\n                      textState.fontSize = gStateFont[1];\\n                      next(handleSetFont(null, gStateFont[0]));\\n                      return;\\n                    }\\n\\n                    break;\\n                }\\n\\n                if (textContent.items.length >= sink.desiredSize) {\\n                  stop = true;\\n                  break;\\n                }\\n              }\\n\\n              if (stop) {\\n                next(deferred);\\n                return;\\n              }\\n\\n              flushTextContentItem();\\n              enqueueChunk();\\n              resolve();\\n            }).catch(function (reason) {\\n              if (reason instanceof _util.AbortException) {\\n                return;\\n              }\\n\\n              if (_this8.options.ignoreErrors) {\\n                (0, _util.warn)(\\\"getTextContent - ignoring errors during \\\\\\\"\\\".concat(task.name, \\\"\\\\\\\" \\\") + \\\"task: \\\\\\\"\\\".concat(reason, \\\"\\\\\\\".\\\"));\\n                flushTextContentItem();\\n                enqueueChunk();\\n                return;\\n              }\\n\\n              throw reason;\\n            });\\n          },\\n          extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\\n            var _this9 = this;\\n\\n            var xref = this.xref;\\n            var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\\n            var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\\n\\n            if (properties.composite) {\\n              var cidSystemInfo = dict.get('CIDSystemInfo');\\n\\n              if ((0, _primitives.isDict)(cidSystemInfo)) {\\n                properties.cidSystemInfo = {\\n                  registry: (0, _util.stringToPDFString)(cidSystemInfo.get('Registry')),\\n                  ordering: (0, _util.stringToPDFString)(cidSystemInfo.get('Ordering')),\\n                  supplement: cidSystemInfo.get('Supplement')\\n                };\\n              }\\n\\n              var cidToGidMap = dict.get('CIDToGIDMap');\\n\\n              if ((0, _primitives.isStream)(cidToGidMap)) {\\n                properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\\n              }\\n            }\\n\\n            var differences = [];\\n            var baseEncodingName = null;\\n            var encoding;\\n\\n            if (dict.has('Encoding')) {\\n              encoding = dict.get('Encoding');\\n\\n              if ((0, _primitives.isDict)(encoding)) {\\n                baseEncodingName = encoding.get('BaseEncoding');\\n                baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\\n\\n                if (encoding.has('Differences')) {\\n                  var diffEncoding = encoding.get('Differences');\\n                  var index = 0;\\n\\n                  for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\\n                    var data = xref.fetchIfRef(diffEncoding[j]);\\n\\n                    if ((0, _util.isNum)(data)) {\\n                      index = data;\\n                    } else if ((0, _primitives.isName)(data)) {\\n                      differences[index++] = data.name;\\n                    } else {\\n                      throw new _util.FormatError(\\\"Invalid entry in 'Differences' array: \\\".concat(data));\\n                    }\\n                  }\\n                }\\n              } else if ((0, _primitives.isName)(encoding)) {\\n                baseEncodingName = encoding.name;\\n              } else {\\n                throw new _util.FormatError('Encoding is not a Name nor a Dict');\\n              }\\n\\n              if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\\n                baseEncodingName = null;\\n              }\\n            }\\n\\n            if (baseEncodingName) {\\n              properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\\n            } else {\\n              var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\\n              var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\\n              encoding = _encodings.StandardEncoding;\\n\\n              if (properties.type === 'TrueType' && !isNonsymbolicFont) {\\n                encoding = _encodings.WinAnsiEncoding;\\n              }\\n\\n              if (isSymbolicFont) {\\n                encoding = _encodings.MacRomanEncoding;\\n\\n                if (!properties.file) {\\n                  if (/Symbol/i.test(properties.name)) {\\n                    encoding = _encodings.SymbolSetEncoding;\\n                  } else if (/Dingbats/i.test(properties.name)) {\\n                    encoding = _encodings.ZapfDingbatsEncoding;\\n                  }\\n                }\\n              }\\n\\n              properties.defaultEncoding = encoding;\\n            }\\n\\n            properties.differences = differences;\\n            properties.baseEncodingName = baseEncodingName;\\n            properties.hasEncoding = !!baseEncodingName || differences.length > 0;\\n            properties.dict = dict;\\n            return toUnicodePromise.then(function (toUnicode) {\\n              properties.toUnicode = toUnicode;\\n              return _this9.buildToUnicode(properties);\\n            }).then(function (toUnicode) {\\n              properties.toUnicode = toUnicode;\\n              return properties;\\n            });\\n          },\\n          _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\\n            (0, _util.assert)(!properties.composite, 'Must be a simple font.');\\n            var toUnicode = [],\\n                charcode,\\n                glyphName;\\n            var encoding = properties.defaultEncoding.slice();\\n            var baseEncodingName = properties.baseEncodingName;\\n            var differences = properties.differences;\\n\\n            for (charcode in differences) {\\n              glyphName = differences[charcode];\\n\\n              if (glyphName === '.notdef') {\\n                continue;\\n              }\\n\\n              encoding[charcode] = glyphName;\\n            }\\n\\n            var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n\\n            for (charcode in encoding) {\\n              glyphName = encoding[charcode];\\n\\n              if (glyphName === '') {\\n                continue;\\n              } else if (glyphsUnicodeMap[glyphName] === undefined) {\\n                var code = 0;\\n\\n                switch (glyphName[0]) {\\n                  case 'G':\\n                    if (glyphName.length === 3) {\\n                      code = parseInt(glyphName.substring(1), 16);\\n                    }\\n\\n                    break;\\n\\n                  case 'g':\\n                    if (glyphName.length === 5) {\\n                      code = parseInt(glyphName.substring(1), 16);\\n                    }\\n\\n                    break;\\n\\n                  case 'C':\\n                  case 'c':\\n                    if (glyphName.length >= 3) {\\n                      code = +glyphName.substring(1);\\n                    }\\n\\n                    break;\\n\\n                  default:\\n                    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n\\n                    if (unicode !== -1) {\\n                      code = unicode;\\n                    }\\n\\n                }\\n\\n                if (code) {\\n                  if (baseEncodingName && code === +charcode) {\\n                    var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\\n\\n                    if (baseEncoding && (glyphName = baseEncoding[charcode])) {\\n                      toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\\n                      continue;\\n                    }\\n                  }\\n\\n                  toUnicode[charcode] = String.fromCodePoint(code);\\n                }\\n\\n                continue;\\n              }\\n\\n              toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\\n            }\\n\\n            return new _fonts.ToUnicodeMap(toUnicode);\\n          },\\n          buildToUnicode: function buildToUnicode(properties) {\\n            properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\\n\\n            if (properties.hasIncludedToUnicodeMap) {\\n              if (!properties.composite && properties.hasEncoding) {\\n                properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\\n              }\\n\\n              return Promise.resolve(properties.toUnicode);\\n            }\\n\\n            if (!properties.composite) {\\n              return Promise.resolve(this._buildSimpleFontToUnicode(properties));\\n            }\\n\\n            if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\\n              var registry = properties.cidSystemInfo.registry;\\n              var ordering = properties.cidSystemInfo.ordering;\\n\\n              var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\\n\\n              return _cmap.CMapFactory.create({\\n                encoding: ucs2CMapName,\\n                fetchBuiltInCMap: this.fetchBuiltInCMap,\\n                useCMap: null\\n              }).then(function (ucs2CMap) {\\n                var cMap = properties.cMap;\\n                var toUnicode = [];\\n                cMap.forEach(function (charcode, cid) {\\n                  if (cid > 0xffff) {\\n                    throw new _util.FormatError('Max size of CID is 65,535');\\n                  }\\n\\n                  var ucs2 = ucs2CMap.lookup(cid);\\n\\n                  if (ucs2) {\\n                    toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\\n                  }\\n                });\\n                return new _fonts.ToUnicodeMap(toUnicode);\\n              });\\n            }\\n\\n            return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\\n          },\\n          readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\\n            var cmapObj = toUnicode;\\n\\n            if ((0, _primitives.isName)(cmapObj)) {\\n              return _cmap.CMapFactory.create({\\n                encoding: cmapObj,\\n                fetchBuiltInCMap: this.fetchBuiltInCMap,\\n                useCMap: null\\n              }).then(function (cmap) {\\n                if (cmap instanceof _cmap.IdentityCMap) {\\n                  return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\\n                }\\n\\n                return new _fonts.ToUnicodeMap(cmap.getMap());\\n              });\\n            } else if ((0, _primitives.isStream)(cmapObj)) {\\n              return _cmap.CMapFactory.create({\\n                encoding: cmapObj,\\n                fetchBuiltInCMap: this.fetchBuiltInCMap,\\n                useCMap: null\\n              }).then(function (cmap) {\\n                if (cmap instanceof _cmap.IdentityCMap) {\\n                  return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\\n                }\\n\\n                var map = new Array(cmap.length);\\n                cmap.forEach(function (charCode, token) {\\n                  var str = [];\\n\\n                  for (var k = 0; k < token.length; k += 2) {\\n                    var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\\n\\n                    if ((w1 & 0xF800) !== 0xD800) {\\n                      str.push(w1);\\n                      continue;\\n                    }\\n\\n                    k += 2;\\n                    var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\\n                    str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\\n                  }\\n\\n                  map[charCode] = String.fromCodePoint.apply(String, str);\\n                });\\n                return new _fonts.ToUnicodeMap(map);\\n              });\\n            }\\n\\n            return Promise.resolve(null);\\n          },\\n          readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\\n            var glyphsData = cidToGidStream.getBytes();\\n            var result = [];\\n\\n            for (var j = 0, jj = glyphsData.length; j < jj; j++) {\\n              var glyphID = glyphsData[j++] << 8 | glyphsData[j];\\n\\n              if (glyphID === 0) {\\n                continue;\\n              }\\n\\n              var code = j >> 1;\\n              result[code] = glyphID;\\n            }\\n\\n            return result;\\n          },\\n          extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\\n            var xref = this.xref;\\n            var glyphsWidths = [];\\n            var defaultWidth = 0;\\n            var glyphsVMetrics = [];\\n            var defaultVMetrics;\\n            var i, ii, j, jj, start, code, widths;\\n\\n            if (properties.composite) {\\n              defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\\n              widths = dict.get('W');\\n\\n              if (widths) {\\n                for (i = 0, ii = widths.length; i < ii; i++) {\\n                  start = xref.fetchIfRef(widths[i++]);\\n                  code = xref.fetchIfRef(widths[i]);\\n\\n                  if (Array.isArray(code)) {\\n                    for (j = 0, jj = code.length; j < jj; j++) {\\n                      glyphsWidths[start++] = xref.fetchIfRef(code[j]);\\n                    }\\n                  } else {\\n                    var width = xref.fetchIfRef(widths[++i]);\\n\\n                    for (j = start; j <= code; j++) {\\n                      glyphsWidths[j] = width;\\n                    }\\n                  }\\n                }\\n              }\\n\\n              if (properties.vertical) {\\n                var vmetrics = dict.getArray('DW2') || [880, -1000];\\n                defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\\n                vmetrics = dict.get('W2');\\n\\n                if (vmetrics) {\\n                  for (i = 0, ii = vmetrics.length; i < ii; i++) {\\n                    start = xref.fetchIfRef(vmetrics[i++]);\\n                    code = xref.fetchIfRef(vmetrics[i]);\\n\\n                    if (Array.isArray(code)) {\\n                      for (j = 0, jj = code.length; j < jj; j++) {\\n                        glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\\n                      }\\n                    } else {\\n                      var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\\n\\n                      for (j = start; j <= code; j++) {\\n                        glyphsVMetrics[j] = vmetric;\\n                      }\\n                    }\\n                  }\\n                }\\n              }\\n            } else {\\n              var firstChar = properties.firstChar;\\n              widths = dict.get('Widths');\\n\\n              if (widths) {\\n                j = firstChar;\\n\\n                for (i = 0, ii = widths.length; i < ii; i++) {\\n                  glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\\n                }\\n\\n                defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\\n              } else {\\n                var baseFontName = dict.get('BaseFont');\\n\\n                if ((0, _primitives.isName)(baseFontName)) {\\n                  var metrics = this.getBaseFontMetrics(baseFontName.name);\\n                  glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\\n                  defaultWidth = metrics.defaultWidth;\\n                }\\n              }\\n            }\\n\\n            var isMonospace = true;\\n            var firstWidth = defaultWidth;\\n\\n            for (var glyph in glyphsWidths) {\\n              var glyphWidth = glyphsWidths[glyph];\\n\\n              if (!glyphWidth) {\\n                continue;\\n              }\\n\\n              if (!firstWidth) {\\n                firstWidth = glyphWidth;\\n                continue;\\n              }\\n\\n              if (firstWidth !== glyphWidth) {\\n                isMonospace = false;\\n                break;\\n              }\\n            }\\n\\n            if (isMonospace) {\\n              properties.flags |= _fonts.FontFlags.FixedPitch;\\n            }\\n\\n            properties.defaultWidth = defaultWidth;\\n            properties.widths = glyphsWidths;\\n            properties.defaultVMetrics = defaultVMetrics;\\n            properties.vmetrics = glyphsVMetrics;\\n          },\\n          isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\\n            var fontNameWoStyle = baseFontName.split('-')[0];\\n            return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\\n          },\\n          getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\\n            var defaultWidth = 0;\\n            var widths = [];\\n            var monospace = false;\\n            var stdFontMap = (0, _standard_fonts.getStdFontMap)();\\n            var lookupName = stdFontMap[name] || name;\\n            var Metrics = (0, _metrics.getMetrics)();\\n\\n            if (!(lookupName in Metrics)) {\\n              if (this.isSerifFont(name)) {\\n                lookupName = 'Times-Roman';\\n              } else {\\n                lookupName = 'Helvetica';\\n              }\\n            }\\n\\n            var glyphWidths = Metrics[lookupName];\\n\\n            if ((0, _util.isNum)(glyphWidths)) {\\n              defaultWidth = glyphWidths;\\n              monospace = true;\\n            } else {\\n              widths = glyphWidths();\\n            }\\n\\n            return {\\n              defaultWidth: defaultWidth,\\n              monospace: monospace,\\n              widths: widths\\n            };\\n          },\\n          buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\\n            var widths = Object.create(null);\\n            var differences = properties.differences;\\n            var encoding = properties.defaultEncoding;\\n\\n            for (var charCode = 0; charCode < 256; charCode++) {\\n              if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\\n                widths[charCode] = widthsByGlyphName[differences[charCode]];\\n                continue;\\n              }\\n\\n              if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\\n                widths[charCode] = widthsByGlyphName[encoding[charCode]];\\n                continue;\\n              }\\n            }\\n\\n            return widths;\\n          },\\n          preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\\n            var baseDict = dict;\\n            var type = dict.get('Subtype');\\n\\n            if (!(0, _primitives.isName)(type)) {\\n              throw new _util.FormatError('invalid font Subtype');\\n            }\\n\\n            var composite = false;\\n            var uint8array;\\n\\n            if (type.name === 'Type0') {\\n              var df = dict.get('DescendantFonts');\\n\\n              if (!df) {\\n                throw new _util.FormatError('Descendant fonts are not specified');\\n              }\\n\\n              dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\\n              type = dict.get('Subtype');\\n\\n              if (!(0, _primitives.isName)(type)) {\\n                throw new _util.FormatError('invalid font Subtype');\\n              }\\n\\n              composite = true;\\n            }\\n\\n            var descriptor = dict.get('FontDescriptor');\\n\\n            if (descriptor) {\\n              var hash = new _murmurhash.MurmurHash3_64();\\n              var encoding = baseDict.getRaw('Encoding');\\n\\n              if ((0, _primitives.isName)(encoding)) {\\n                hash.update(encoding.name);\\n              } else if ((0, _primitives.isRef)(encoding)) {\\n                hash.update(encoding.toString());\\n              } else if ((0, _primitives.isDict)(encoding)) {\\n                var keys = encoding.getKeys();\\n\\n                for (var i = 0, ii = keys.length; i < ii; i++) {\\n                  var entry = encoding.getRaw(keys[i]);\\n\\n                  if ((0, _primitives.isName)(entry)) {\\n                    hash.update(entry.name);\\n                  } else if ((0, _primitives.isRef)(entry)) {\\n                    hash.update(entry.toString());\\n                  } else if (Array.isArray(entry)) {\\n                    var diffLength = entry.length,\\n                        diffBuf = new Array(diffLength);\\n\\n                    for (var j = 0; j < diffLength; j++) {\\n                      var diffEntry = entry[j];\\n\\n                      if ((0, _primitives.isName)(diffEntry)) {\\n                        diffBuf[j] = diffEntry.name;\\n                      } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\\n                        diffBuf[j] = diffEntry.toString();\\n                      }\\n                    }\\n\\n                    hash.update(diffBuf.join());\\n                  }\\n                }\\n              }\\n\\n              var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\\n\\n              if ((0, _primitives.isStream)(toUnicode)) {\\n                var stream = toUnicode.str || toUnicode;\\n                uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\\n                hash.update(uint8array);\\n              } else if ((0, _primitives.isName)(toUnicode)) {\\n                hash.update(toUnicode.name);\\n              }\\n\\n              var widths = dict.get('Widths') || baseDict.get('Widths');\\n\\n              if (widths) {\\n                uint8array = new Uint8Array(new Uint32Array(widths).buffer);\\n                hash.update(uint8array);\\n              }\\n            }\\n\\n            return {\\n              descriptor: descriptor,\\n              dict: dict,\\n              baseDict: baseDict,\\n              composite: composite,\\n              type: type.name,\\n              hash: hash ? hash.hexdigest() : ''\\n            };\\n          },\\n          translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\\n            var _this10 = this;\\n\\n            var baseDict = preEvaluatedFont.baseDict;\\n            var dict = preEvaluatedFont.dict;\\n            var composite = preEvaluatedFont.composite;\\n            var descriptor = preEvaluatedFont.descriptor;\\n            var type = preEvaluatedFont.type;\\n            var maxCharIndex = composite ? 0xFFFF : 0xFF;\\n            var properties;\\n\\n            if (!descriptor) {\\n              if (type === 'Type3') {\\n                descriptor = new _primitives.Dict(null);\\n                descriptor.set('FontName', _primitives.Name.get(type));\\n                descriptor.set('FontBBox', dict.getArray('FontBBox'));\\n              } else {\\n                var baseFontName = dict.get('BaseFont');\\n\\n                if (!(0, _primitives.isName)(baseFontName)) {\\n                  throw new _util.FormatError('Base font is not specified');\\n                }\\n\\n                baseFontName = baseFontName.name.replace(/[,_]/g, '-');\\n                var metrics = this.getBaseFontMetrics(baseFontName);\\n                var fontNameWoStyle = baseFontName.split('-')[0];\\n                var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\\n                properties = {\\n                  type: type,\\n                  name: baseFontName,\\n                  widths: metrics.widths,\\n                  defaultWidth: metrics.defaultWidth,\\n                  flags: flags,\\n                  firstChar: 0,\\n                  lastChar: maxCharIndex\\n                };\\n                return this.extractDataStructures(dict, dict, properties).then(function (properties) {\\n                  properties.widths = _this10.buildCharCodeToWidth(metrics.widths, properties);\\n                  return new _fonts.Font(baseFontName, null, properties);\\n                });\\n              }\\n            }\\n\\n            var firstChar = dict.get('FirstChar') || 0;\\n            var lastChar = dict.get('LastChar') || maxCharIndex;\\n            var fontName = descriptor.get('FontName');\\n            var baseFont = dict.get('BaseFont');\\n\\n            if ((0, _util.isString)(fontName)) {\\n              fontName = _primitives.Name.get(fontName);\\n            }\\n\\n            if ((0, _util.isString)(baseFont)) {\\n              baseFont = _primitives.Name.get(baseFont);\\n            }\\n\\n            if (type !== 'Type3') {\\n              var fontNameStr = fontName && fontName.name;\\n              var baseFontStr = baseFont && baseFont.name;\\n\\n              if (fontNameStr !== baseFontStr) {\\n                (0, _util.info)(\\\"The FontDescriptor's FontName is \\\\\\\"\\\".concat(fontNameStr, \\\"\\\\\\\" but \\\") + \\\"should be the same as the Font's BaseFont \\\\\\\"\\\".concat(baseFontStr, \\\"\\\\\\\".\\\"));\\n\\n                if (fontNameStr && baseFontStr && baseFontStr.startsWith(fontNameStr)) {\\n                  fontName = baseFont;\\n                }\\n              }\\n            }\\n\\n            fontName = fontName || baseFont;\\n\\n            if (!(0, _primitives.isName)(fontName)) {\\n              throw new _util.FormatError('invalid font name');\\n            }\\n\\n            var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\\n\\n            if (fontFile) {\\n              if (fontFile.dict) {\\n                var subtype = fontFile.dict.get('Subtype');\\n\\n                if (subtype) {\\n                  subtype = subtype.name;\\n                }\\n\\n                var length1 = fontFile.dict.get('Length1');\\n                var length2 = fontFile.dict.get('Length2');\\n                var length3 = fontFile.dict.get('Length3');\\n              }\\n            }\\n\\n            properties = {\\n              type: type,\\n              name: fontName.name,\\n              subtype: subtype,\\n              file: fontFile,\\n              length1: length1,\\n              length2: length2,\\n              length3: length3,\\n              loadedName: baseDict.loadedName,\\n              composite: composite,\\n              wideChars: composite,\\n              fixedPitch: false,\\n              fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\\n              firstChar: firstChar || 0,\\n              lastChar: lastChar || maxCharIndex,\\n              bbox: descriptor.getArray('FontBBox'),\\n              ascent: descriptor.get('Ascent'),\\n              descent: descriptor.get('Descent'),\\n              xHeight: descriptor.get('XHeight'),\\n              capHeight: descriptor.get('CapHeight'),\\n              flags: descriptor.get('Flags'),\\n              italicAngle: descriptor.get('ItalicAngle'),\\n              isType3Font: false\\n            };\\n            var cMapPromise;\\n\\n            if (composite) {\\n              var cidEncoding = baseDict.get('Encoding');\\n\\n              if ((0, _primitives.isName)(cidEncoding)) {\\n                properties.cidEncoding = cidEncoding.name;\\n              }\\n\\n              cMapPromise = _cmap.CMapFactory.create({\\n                encoding: cidEncoding,\\n                fetchBuiltInCMap: this.fetchBuiltInCMap,\\n                useCMap: null\\n              }).then(function (cMap) {\\n                properties.cMap = cMap;\\n                properties.vertical = properties.cMap.vertical;\\n              });\\n            } else {\\n              cMapPromise = Promise.resolve(undefined);\\n            }\\n\\n            return cMapPromise.then(function () {\\n              return _this10.extractDataStructures(dict, baseDict, properties);\\n            }).then(function (properties) {\\n              _this10.extractWidths(dict, descriptor, properties);\\n\\n              if (type === 'Type3') {\\n                properties.isType3Font = true;\\n              }\\n\\n              return new _fonts.Font(fontName.name, fontFile, properties);\\n            });\\n          }\\n        };\\n\\n        PartialEvaluator.buildFontPaths = function (font, glyphs, handler) {\\n          function buildPath(fontChar) {\\n            if (font.renderer.hasBuiltPath(fontChar)) {\\n              return;\\n            }\\n\\n            handler.send('commonobj', [\\\"\\\".concat(font.loadedName, \\\"_path_\\\").concat(fontChar), 'FontPath', font.renderer.getPathJs(fontChar)]);\\n          }\\n\\n          var _iteratorNormalCompletion = true;\\n          var _didIteratorError = false;\\n          var _iteratorError = undefined;\\n\\n          try {\\n            for (var _iterator = glyphs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n              var glyph = _step.value;\\n              buildPath(glyph.fontChar);\\n              var accent = glyph.accent;\\n\\n              if (accent && accent.fontChar) {\\n                buildPath(accent.fontChar);\\n              }\\n            }\\n          } catch (err) {\\n            _didIteratorError = true;\\n            _iteratorError = err;\\n          } finally {\\n            try {\\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\\n                _iterator.return();\\n              }\\n            } finally {\\n              if (_didIteratorError) {\\n                throw _iteratorError;\\n              }\\n            }\\n          }\\n        };\\n\\n        return PartialEvaluator;\\n      }();\\n\\n      exports.PartialEvaluator = PartialEvaluator;\\n\\n      var TranslatedFont = function TranslatedFontClosure() {\\n        function TranslatedFont(loadedName, font, dict) {\\n          this.loadedName = loadedName;\\n          this.font = font;\\n          this.dict = dict;\\n          this.type3Loaded = null;\\n          this.sent = false;\\n        }\\n\\n        TranslatedFont.prototype = {\\n          send: function send(handler) {\\n            if (this.sent) {\\n              return;\\n            }\\n\\n            this.sent = true;\\n            handler.send('commonobj', [this.loadedName, 'Font', this.font.exportData()]);\\n          },\\n          fallback: function fallback(handler) {\\n            if (!this.font.data) {\\n              return;\\n            }\\n\\n            this.font.disableFontFace = true;\\n            var glyphs = this.font.glyphCacheValues;\\n            PartialEvaluator.buildFontPaths(this.font, glyphs, handler);\\n          },\\n          loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\\n            if (!this.font.isType3Font) {\\n              throw new Error('Must be a Type3 font.');\\n            }\\n\\n            if (this.type3Loaded) {\\n              return this.type3Loaded;\\n            }\\n\\n            var type3Options = Object.create(evaluator.options);\\n            type3Options.ignoreErrors = false;\\n            var type3Evaluator = evaluator.clone(type3Options);\\n            var translatedFont = this.font;\\n            var loadCharProcsPromise = Promise.resolve();\\n            var charProcs = this.dict.get('CharProcs');\\n            var fontResources = this.dict.get('Resources') || resources;\\n            var charProcKeys = charProcs.getKeys();\\n            var charProcOperatorList = Object.create(null);\\n\\n            var _loop2 = function _loop2() {\\n              var key = charProcKeys[i];\\n              loadCharProcsPromise = loadCharProcsPromise.then(function () {\\n                var glyphStream = charProcs.get(key);\\n                var operatorList = new _operator_list.OperatorList();\\n                return type3Evaluator.getOperatorList({\\n                  stream: glyphStream,\\n                  task: task,\\n                  resources: fontResources,\\n                  operatorList: operatorList\\n                }).then(function () {\\n                  charProcOperatorList[key] = operatorList.getIR();\\n                  parentOperatorList.addDependencies(operatorList.dependencies);\\n                }).catch(function (reason) {\\n                  (0, _util.warn)(\\\"Type3 font resource \\\\\\\"\\\".concat(key, \\\"\\\\\\\" is not available.\\\"));\\n                  var operatorList = new _operator_list.OperatorList();\\n                  charProcOperatorList[key] = operatorList.getIR();\\n                });\\n              });\\n            };\\n\\n            for (var i = 0, n = charProcKeys.length; i < n; ++i) {\\n              _loop2();\\n            }\\n\\n            this.type3Loaded = loadCharProcsPromise.then(function () {\\n              translatedFont.charProcOperatorList = charProcOperatorList;\\n            });\\n            return this.type3Loaded;\\n          }\\n        };\\n        return TranslatedFont;\\n      }();\\n\\n      var StateManager = function StateManagerClosure() {\\n        function StateManager(initialState) {\\n          this.state = initialState;\\n          this.stateStack = [];\\n        }\\n\\n        StateManager.prototype = {\\n          save: function save() {\\n            var old = this.state;\\n            this.stateStack.push(this.state);\\n            this.state = old.clone();\\n          },\\n          restore: function restore() {\\n            var prev = this.stateStack.pop();\\n\\n            if (prev) {\\n              this.state = prev;\\n            }\\n          },\\n          transform: function transform(args) {\\n            this.state.ctm = _util.Util.transform(this.state.ctm, args);\\n          }\\n        };\\n        return StateManager;\\n      }();\\n\\n      var TextState = function TextStateClosure() {\\n        function TextState() {\\n          this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\\n          this.fontName = null;\\n          this.fontSize = 0;\\n          this.font = null;\\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\\n          this.textMatrix = _util.IDENTITY_MATRIX.slice();\\n          this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\\n          this.charSpacing = 0;\\n          this.wordSpacing = 0;\\n          this.leading = 0;\\n          this.textHScale = 1;\\n          this.textRise = 0;\\n        }\\n\\n        TextState.prototype = {\\n          setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\\n            var m = this.textMatrix;\\n            m[0] = a;\\n            m[1] = b;\\n            m[2] = c;\\n            m[3] = d;\\n            m[4] = e;\\n            m[5] = f;\\n          },\\n          setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\\n            var m = this.textLineMatrix;\\n            m[0] = a;\\n            m[1] = b;\\n            m[2] = c;\\n            m[3] = d;\\n            m[4] = e;\\n            m[5] = f;\\n          },\\n          translateTextMatrix: function TextState_translateTextMatrix(x, y) {\\n            var m = this.textMatrix;\\n            m[4] = m[0] * x + m[2] * y + m[4];\\n            m[5] = m[1] * x + m[3] * y + m[5];\\n          },\\n          translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\\n            var m = this.textLineMatrix;\\n            m[4] = m[0] * x + m[2] * y + m[4];\\n            m[5] = m[1] * x + m[3] * y + m[5];\\n          },\\n          calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\\n            var font = this.font;\\n\\n            if (!font) {\\n              return null;\\n            }\\n\\n            var m = this.textLineMatrix;\\n\\n            if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\\n              return null;\\n            }\\n\\n            var txDiff = e - m[4],\\n                tyDiff = f - m[5];\\n\\n            if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\\n              return null;\\n            }\\n\\n            var tx,\\n                ty,\\n                denominator = a * d - b * c;\\n\\n            if (font.vertical) {\\n              tx = -tyDiff * c / denominator;\\n              ty = tyDiff * a / denominator;\\n            } else {\\n              tx = txDiff * d / denominator;\\n              ty = -txDiff * b / denominator;\\n            }\\n\\n            return {\\n              width: tx,\\n              height: ty,\\n              value: font.vertical ? ty : tx\\n            };\\n          },\\n          calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\\n            var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\\n            return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\\n          },\\n          carriageReturn: function TextState_carriageReturn() {\\n            this.translateTextLineMatrix(0, -this.leading);\\n            this.textMatrix = this.textLineMatrix.slice();\\n          },\\n          clone: function TextState_clone() {\\n            var clone = Object.create(this);\\n            clone.textMatrix = this.textMatrix.slice();\\n            clone.textLineMatrix = this.textLineMatrix.slice();\\n            clone.fontMatrix = this.fontMatrix.slice();\\n            return clone;\\n          }\\n        };\\n        return TextState;\\n      }();\\n\\n      var EvalState = function EvalStateClosure() {\\n        function EvalState() {\\n          this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\\n          this.font = null;\\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\\n          this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\\n          this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\\n        }\\n\\n        EvalState.prototype = {\\n          clone: function CanvasExtraState_clone() {\\n            return Object.create(this);\\n          }\\n        };\\n        return EvalState;\\n      }();\\n\\n      var EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\\n        var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\\n          t['w'] = {\\n            id: _util.OPS.setLineWidth,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['J'] = {\\n            id: _util.OPS.setLineCap,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['j'] = {\\n            id: _util.OPS.setLineJoin,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['M'] = {\\n            id: _util.OPS.setMiterLimit,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['d'] = {\\n            id: _util.OPS.setDash,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['ri'] = {\\n            id: _util.OPS.setRenderingIntent,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['i'] = {\\n            id: _util.OPS.setFlatness,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['gs'] = {\\n            id: _util.OPS.setGState,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['q'] = {\\n            id: _util.OPS.save,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['Q'] = {\\n            id: _util.OPS.restore,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['cm'] = {\\n            id: _util.OPS.transform,\\n            numArgs: 6,\\n            variableArgs: false\\n          };\\n          t['m'] = {\\n            id: _util.OPS.moveTo,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['l'] = {\\n            id: _util.OPS.lineTo,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['c'] = {\\n            id: _util.OPS.curveTo,\\n            numArgs: 6,\\n            variableArgs: false\\n          };\\n          t['v'] = {\\n            id: _util.OPS.curveTo2,\\n            numArgs: 4,\\n            variableArgs: false\\n          };\\n          t['y'] = {\\n            id: _util.OPS.curveTo3,\\n            numArgs: 4,\\n            variableArgs: false\\n          };\\n          t['h'] = {\\n            id: _util.OPS.closePath,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['re'] = {\\n            id: _util.OPS.rectangle,\\n            numArgs: 4,\\n            variableArgs: false\\n          };\\n          t['S'] = {\\n            id: _util.OPS.stroke,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['s'] = {\\n            id: _util.OPS.closeStroke,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['f'] = {\\n            id: _util.OPS.fill,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['F'] = {\\n            id: _util.OPS.fill,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['f*'] = {\\n            id: _util.OPS.eoFill,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['B'] = {\\n            id: _util.OPS.fillStroke,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['B*'] = {\\n            id: _util.OPS.eoFillStroke,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['b'] = {\\n            id: _util.OPS.closeFillStroke,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['b*'] = {\\n            id: _util.OPS.closeEOFillStroke,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['n'] = {\\n            id: _util.OPS.endPath,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['W'] = {\\n            id: _util.OPS.clip,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['W*'] = {\\n            id: _util.OPS.eoClip,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['BT'] = {\\n            id: _util.OPS.beginText,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['ET'] = {\\n            id: _util.OPS.endText,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['Tc'] = {\\n            id: _util.OPS.setCharSpacing,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['Tw'] = {\\n            id: _util.OPS.setWordSpacing,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['Tz'] = {\\n            id: _util.OPS.setHScale,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['TL'] = {\\n            id: _util.OPS.setLeading,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['Tf'] = {\\n            id: _util.OPS.setFont,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['Tr'] = {\\n            id: _util.OPS.setTextRenderingMode,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['Ts'] = {\\n            id: _util.OPS.setTextRise,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['Td'] = {\\n            id: _util.OPS.moveText,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['TD'] = {\\n            id: _util.OPS.setLeadingMoveText,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['Tm'] = {\\n            id: _util.OPS.setTextMatrix,\\n            numArgs: 6,\\n            variableArgs: false\\n          };\\n          t['T*'] = {\\n            id: _util.OPS.nextLine,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['Tj'] = {\\n            id: _util.OPS.showText,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['TJ'] = {\\n            id: _util.OPS.showSpacedText,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['\\\\''] = {\\n            id: _util.OPS.nextLineShowText,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['\\\"'] = {\\n            id: _util.OPS.nextLineSetSpacingShowText,\\n            numArgs: 3,\\n            variableArgs: false\\n          };\\n          t['d0'] = {\\n            id: _util.OPS.setCharWidth,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['d1'] = {\\n            id: _util.OPS.setCharWidthAndBounds,\\n            numArgs: 6,\\n            variableArgs: false\\n          };\\n          t['CS'] = {\\n            id: _util.OPS.setStrokeColorSpace,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['cs'] = {\\n            id: _util.OPS.setFillColorSpace,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['SC'] = {\\n            id: _util.OPS.setStrokeColor,\\n            numArgs: 4,\\n            variableArgs: true\\n          };\\n          t['SCN'] = {\\n            id: _util.OPS.setStrokeColorN,\\n            numArgs: 33,\\n            variableArgs: true\\n          };\\n          t['sc'] = {\\n            id: _util.OPS.setFillColor,\\n            numArgs: 4,\\n            variableArgs: true\\n          };\\n          t['scn'] = {\\n            id: _util.OPS.setFillColorN,\\n            numArgs: 33,\\n            variableArgs: true\\n          };\\n          t['G'] = {\\n            id: _util.OPS.setStrokeGray,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['g'] = {\\n            id: _util.OPS.setFillGray,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['RG'] = {\\n            id: _util.OPS.setStrokeRGBColor,\\n            numArgs: 3,\\n            variableArgs: false\\n          };\\n          t['rg'] = {\\n            id: _util.OPS.setFillRGBColor,\\n            numArgs: 3,\\n            variableArgs: false\\n          };\\n          t['K'] = {\\n            id: _util.OPS.setStrokeCMYKColor,\\n            numArgs: 4,\\n            variableArgs: false\\n          };\\n          t['k'] = {\\n            id: _util.OPS.setFillCMYKColor,\\n            numArgs: 4,\\n            variableArgs: false\\n          };\\n          t['sh'] = {\\n            id: _util.OPS.shadingFill,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['BI'] = {\\n            id: _util.OPS.beginInlineImage,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['ID'] = {\\n            id: _util.OPS.beginImageData,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['EI'] = {\\n            id: _util.OPS.endInlineImage,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['Do'] = {\\n            id: _util.OPS.paintXObject,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['MP'] = {\\n            id: _util.OPS.markPoint,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['DP'] = {\\n            id: _util.OPS.markPointProps,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['BMC'] = {\\n            id: _util.OPS.beginMarkedContent,\\n            numArgs: 1,\\n            variableArgs: false\\n          };\\n          t['BDC'] = {\\n            id: _util.OPS.beginMarkedContentProps,\\n            numArgs: 2,\\n            variableArgs: false\\n          };\\n          t['EMC'] = {\\n            id: _util.OPS.endMarkedContent,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['BX'] = {\\n            id: _util.OPS.beginCompat,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['EX'] = {\\n            id: _util.OPS.endCompat,\\n            numArgs: 0,\\n            variableArgs: false\\n          };\\n          t['BM'] = null;\\n          t['BD'] = null;\\n          t['true'] = null;\\n          t['fa'] = null;\\n          t['fal'] = null;\\n          t['fals'] = null;\\n          t['false'] = null;\\n          t['nu'] = null;\\n          t['nul'] = null;\\n          t['null'] = null;\\n        });\\n        var MAX_INVALID_PATH_OPS = 20;\\n\\n        function EvaluatorPreprocessor(stream, xref, stateManager) {\\n          this.opMap = getOPMap();\\n          this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\\n          this.stateManager = stateManager;\\n          this.nonProcessedArgs = [];\\n          this._numInvalidPathOPS = 0;\\n        }\\n\\n        EvaluatorPreprocessor.prototype = {\\n          get savedStatesDepth() {\\n            return this.stateManager.stateStack.length;\\n          },\\n\\n          read: function EvaluatorPreprocessor_read(operation) {\\n            var args = operation.args;\\n\\n            while (true) {\\n              var obj = this.parser.getObj();\\n\\n              if ((0, _primitives.isCmd)(obj)) {\\n                var cmd = obj.cmd;\\n                var opSpec = this.opMap[cmd];\\n\\n                if (!opSpec) {\\n                  (0, _util.warn)(\\\"Unknown command \\\\\\\"\\\".concat(cmd, \\\"\\\\\\\".\\\"));\\n                  continue;\\n                }\\n\\n                var fn = opSpec.id;\\n                var numArgs = opSpec.numArgs;\\n                var argsLength = args !== null ? args.length : 0;\\n\\n                if (!opSpec.variableArgs) {\\n                  if (argsLength !== numArgs) {\\n                    var nonProcessedArgs = this.nonProcessedArgs;\\n\\n                    while (argsLength > numArgs) {\\n                      nonProcessedArgs.push(args.shift());\\n                      argsLength--;\\n                    }\\n\\n                    while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\\n                      if (args === null) {\\n                        args = [];\\n                      }\\n\\n                      args.unshift(nonProcessedArgs.pop());\\n                      argsLength++;\\n                    }\\n                  }\\n\\n                  if (argsLength < numArgs) {\\n                    var partialMsg = \\\"command \\\".concat(cmd, \\\": expected \\\").concat(numArgs, \\\" args, \\\") + \\\"but received \\\".concat(argsLength, \\\" args.\\\");\\n\\n                    if (fn >= _util.OPS.moveTo && fn <= _util.OPS.endPath && ++this._numInvalidPathOPS > MAX_INVALID_PATH_OPS) {\\n                      throw new _util.FormatError(\\\"Invalid \\\".concat(partialMsg));\\n                    }\\n\\n                    (0, _util.warn)(\\\"Skipping \\\".concat(partialMsg));\\n\\n                    if (args !== null) {\\n                      args.length = 0;\\n                    }\\n\\n                    continue;\\n                  }\\n                } else if (argsLength > numArgs) {\\n                  (0, _util.info)(\\\"Command \\\".concat(cmd, \\\": expected [0, \\\").concat(numArgs, \\\"] args, \\\") + \\\"but received \\\".concat(argsLength, \\\" args.\\\"));\\n                }\\n\\n                this.preprocessCommand(fn, args);\\n                operation.fn = fn;\\n                operation.args = args;\\n                return true;\\n              }\\n\\n              if ((0, _primitives.isEOF)(obj)) {\\n                return false;\\n              }\\n\\n              if (obj !== null) {\\n                if (args === null) {\\n                  args = [];\\n                }\\n\\n                args.push(obj);\\n\\n                if (args.length > 33) {\\n                  throw new _util.FormatError('Too many arguments');\\n                }\\n              }\\n            }\\n          },\\n          preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\\n            switch (fn | 0) {\\n              case _util.OPS.save:\\n                this.stateManager.save();\\n                break;\\n\\n              case _util.OPS.restore:\\n                this.stateManager.restore();\\n                break;\\n\\n              case _util.OPS.transform:\\n                this.stateManager.transform(args);\\n                break;\\n            }\\n          }\\n        };\\n        return EvaluatorPreprocessor;\\n      }();\\n      /***/\\n\\n    },\\n    /* 172 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.CMapFactory = exports.IdentityCMap = exports.CMap = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _parser = __w_pdfjs_require__(156);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _possibleConstructorReturn(self, call) {\\n        if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n          return call;\\n        }\\n\\n        return _assertThisInitialized(self);\\n      }\\n\\n      function _assertThisInitialized(self) {\\n        if (self === void 0) {\\n          throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n        }\\n\\n        return self;\\n      }\\n\\n      function _getPrototypeOf(o) {\\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n          return o.__proto__ || Object.getPrototypeOf(o);\\n        };\\n        return _getPrototypeOf(o);\\n      }\\n\\n      function _inherits(subClass, superClass) {\\n        if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n          throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n        }\\n\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n          constructor: {\\n            value: subClass,\\n            writable: true,\\n            configurable: true\\n          }\\n        });\\n        if (superClass) _setPrototypeOf(subClass, superClass);\\n      }\\n\\n      function _setPrototypeOf(o, p) {\\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n          o.__proto__ = p;\\n          return o;\\n        };\\n\\n        return _setPrototypeOf(o, p);\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\\n\\n      var CMap =\\n      /*#__PURE__*/\\n      function () {\\n        function CMap() {\\n          var builtInCMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n\\n          _classCallCheck(this, CMap);\\n\\n          this.codespaceRanges = [[], [], [], []];\\n          this.numCodespaceRanges = 0;\\n          this._map = [];\\n          this.name = '';\\n          this.vertical = false;\\n          this.useCMap = null;\\n          this.builtInCMap = builtInCMap;\\n        }\\n\\n        _createClass(CMap, [{\\n          key: \\\"addCodespaceRange\\\",\\n          value: function addCodespaceRange(n, low, high) {\\n            this.codespaceRanges[n - 1].push(low, high);\\n            this.numCodespaceRanges++;\\n          }\\n        }, {\\n          key: \\\"mapCidRange\\\",\\n          value: function mapCidRange(low, high, dstLow) {\\n            while (low <= high) {\\n              this._map[low++] = dstLow++;\\n            }\\n          }\\n        }, {\\n          key: \\\"mapBfRange\\\",\\n          value: function mapBfRange(low, high, dstLow) {\\n            var lastByte = dstLow.length - 1;\\n\\n            while (low <= high) {\\n              this._map[low++] = dstLow;\\n              dstLow = dstLow.substring(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\\n            }\\n          }\\n        }, {\\n          key: \\\"mapBfRangeToArray\\\",\\n          value: function mapBfRangeToArray(low, high, array) {\\n            var i = 0,\\n                ii = array.length;\\n\\n            while (low <= high && i < ii) {\\n              this._map[low] = array[i++];\\n              ++low;\\n            }\\n          }\\n        }, {\\n          key: \\\"mapOne\\\",\\n          value: function mapOne(src, dst) {\\n            this._map[src] = dst;\\n          }\\n        }, {\\n          key: \\\"lookup\\\",\\n          value: function lookup(code) {\\n            return this._map[code];\\n          }\\n        }, {\\n          key: \\\"contains\\\",\\n          value: function contains(code) {\\n            return this._map[code] !== undefined;\\n          }\\n        }, {\\n          key: \\\"forEach\\\",\\n          value: function forEach(callback) {\\n            var map = this._map;\\n            var length = map.length;\\n\\n            if (length <= 0x10000) {\\n              for (var i = 0; i < length; i++) {\\n                if (map[i] !== undefined) {\\n                  callback(i, map[i]);\\n                }\\n              }\\n            } else {\\n              for (var _i in map) {\\n                callback(_i, map[_i]);\\n              }\\n            }\\n          }\\n        }, {\\n          key: \\\"charCodeOf\\\",\\n          value: function charCodeOf(value) {\\n            var map = this._map;\\n\\n            if (map.length <= 0x10000) {\\n              return map.indexOf(value);\\n            }\\n\\n            for (var charCode in map) {\\n              if (map[charCode] === value) {\\n                return charCode | 0;\\n              }\\n            }\\n\\n            return -1;\\n          }\\n        }, {\\n          key: \\\"getMap\\\",\\n          value: function getMap() {\\n            return this._map;\\n          }\\n        }, {\\n          key: \\\"readCharCode\\\",\\n          value: function readCharCode(str, offset, out) {\\n            var c = 0;\\n            var codespaceRanges = this.codespaceRanges;\\n\\n            for (var n = 0, nn = codespaceRanges.length; n < nn; n++) {\\n              c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\\n              var codespaceRange = codespaceRanges[n];\\n\\n              for (var k = 0, kk = codespaceRange.length; k < kk;) {\\n                var low = codespaceRange[k++];\\n                var high = codespaceRange[k++];\\n\\n                if (c >= low && c <= high) {\\n                  out.charcode = c;\\n                  out.length = n + 1;\\n                  return;\\n                }\\n              }\\n            }\\n\\n            out.charcode = 0;\\n            out.length = 1;\\n          }\\n        }, {\\n          key: \\\"length\\\",\\n          get: function get() {\\n            return this._map.length;\\n          }\\n        }, {\\n          key: \\\"isIdentityCMap\\\",\\n          get: function get() {\\n            if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\\n              return false;\\n            }\\n\\n            if (this._map.length !== 0x10000) {\\n              return false;\\n            }\\n\\n            for (var i = 0; i < 0x10000; i++) {\\n              if (this._map[i] !== i) {\\n                return false;\\n              }\\n            }\\n\\n            return true;\\n          }\\n        }]);\\n\\n        return CMap;\\n      }();\\n\\n      exports.CMap = CMap;\\n\\n      var IdentityCMap =\\n      /*#__PURE__*/\\n      function (_CMap) {\\n        _inherits(IdentityCMap, _CMap);\\n\\n        function IdentityCMap(vertical, n) {\\n          var _this;\\n\\n          _classCallCheck(this, IdentityCMap);\\n\\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(IdentityCMap).call(this));\\n          _this.vertical = vertical;\\n\\n          _this.addCodespaceRange(n, 0, 0xffff);\\n\\n          return _this;\\n        }\\n\\n        _createClass(IdentityCMap, [{\\n          key: \\\"mapCidRange\\\",\\n          value: function mapCidRange(low, high, dstLow) {\\n            (0, _util.unreachable)('should not call mapCidRange');\\n          }\\n        }, {\\n          key: \\\"mapBfRange\\\",\\n          value: function mapBfRange(low, high, dstLow) {\\n            (0, _util.unreachable)('should not call mapBfRange');\\n          }\\n        }, {\\n          key: \\\"mapBfRangeToArray\\\",\\n          value: function mapBfRangeToArray(low, high, array) {\\n            (0, _util.unreachable)('should not call mapBfRangeToArray');\\n          }\\n        }, {\\n          key: \\\"mapOne\\\",\\n          value: function mapOne(src, dst) {\\n            (0, _util.unreachable)('should not call mapCidOne');\\n          }\\n        }, {\\n          key: \\\"lookup\\\",\\n          value: function lookup(code) {\\n            return Number.isInteger(code) && code <= 0xffff ? code : undefined;\\n          }\\n        }, {\\n          key: \\\"contains\\\",\\n          value: function contains(code) {\\n            return Number.isInteger(code) && code <= 0xffff;\\n          }\\n        }, {\\n          key: \\\"forEach\\\",\\n          value: function forEach(callback) {\\n            for (var i = 0; i <= 0xffff; i++) {\\n              callback(i, i);\\n            }\\n          }\\n        }, {\\n          key: \\\"charCodeOf\\\",\\n          value: function charCodeOf(value) {\\n            return Number.isInteger(value) && value <= 0xffff ? value : -1;\\n          }\\n        }, {\\n          key: \\\"getMap\\\",\\n          value: function getMap() {\\n            var map = new Array(0x10000);\\n\\n            for (var i = 0; i <= 0xffff; i++) {\\n              map[i] = i;\\n            }\\n\\n            return map;\\n          }\\n        }, {\\n          key: \\\"length\\\",\\n          get: function get() {\\n            return 0x10000;\\n          }\\n        }, {\\n          key: \\\"isIdentityCMap\\\",\\n          get: function get() {\\n            (0, _util.unreachable)('should not access .isIdentityCMap');\\n          }\\n        }]);\\n\\n        return IdentityCMap;\\n      }(CMap);\\n\\n      exports.IdentityCMap = IdentityCMap;\\n\\n      var BinaryCMapReader = function BinaryCMapReaderClosure() {\\n        function hexToInt(a, size) {\\n          var n = 0;\\n\\n          for (var i = 0; i <= size; i++) {\\n            n = n << 8 | a[i];\\n          }\\n\\n          return n >>> 0;\\n        }\\n\\n        function hexToStr(a, size) {\\n          if (size === 1) {\\n            return String.fromCharCode(a[0], a[1]);\\n          }\\n\\n          if (size === 3) {\\n            return String.fromCharCode(a[0], a[1], a[2], a[3]);\\n          }\\n\\n          return String.fromCharCode.apply(null, a.subarray(0, size + 1));\\n        }\\n\\n        function addHex(a, b, size) {\\n          var c = 0;\\n\\n          for (var i = size; i >= 0; i--) {\\n            c += a[i] + b[i];\\n            a[i] = c & 255;\\n            c >>= 8;\\n          }\\n        }\\n\\n        function incHex(a, size) {\\n          var c = 1;\\n\\n          for (var i = size; i >= 0 && c > 0; i--) {\\n            c += a[i];\\n            a[i] = c & 255;\\n            c >>= 8;\\n          }\\n        }\\n\\n        var MAX_NUM_SIZE = 16;\\n        var MAX_ENCODED_NUM_SIZE = 19;\\n\\n        function BinaryCMapStream(data) {\\n          this.buffer = data;\\n          this.pos = 0;\\n          this.end = data.length;\\n          this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\\n        }\\n\\n        BinaryCMapStream.prototype = {\\n          readByte: function readByte() {\\n            if (this.pos >= this.end) {\\n              return -1;\\n            }\\n\\n            return this.buffer[this.pos++];\\n          },\\n          readNumber: function readNumber() {\\n            var n = 0;\\n            var last;\\n\\n            do {\\n              var b = this.readByte();\\n\\n              if (b < 0) {\\n                throw new _util.FormatError('unexpected EOF in bcmap');\\n              }\\n\\n              last = !(b & 0x80);\\n              n = n << 7 | b & 0x7F;\\n            } while (!last);\\n\\n            return n;\\n          },\\n          readSigned: function readSigned() {\\n            var n = this.readNumber();\\n            return n & 1 ? ~(n >>> 1) : n >>> 1;\\n          },\\n          readHex: function readHex(num, size) {\\n            num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\\n            this.pos += size + 1;\\n          },\\n          readHexNumber: function readHexNumber(num, size) {\\n            var last;\\n            var stack = this.tmpBuf,\\n                sp = 0;\\n\\n            do {\\n              var b = this.readByte();\\n\\n              if (b < 0) {\\n                throw new _util.FormatError('unexpected EOF in bcmap');\\n              }\\n\\n              last = !(b & 0x80);\\n              stack[sp++] = b & 0x7F;\\n            } while (!last);\\n\\n            var i = size,\\n                buffer = 0,\\n                bufferSize = 0;\\n\\n            while (i >= 0) {\\n              while (bufferSize < 8 && stack.length > 0) {\\n                buffer = stack[--sp] << bufferSize | buffer;\\n                bufferSize += 7;\\n              }\\n\\n              num[i] = buffer & 255;\\n              i--;\\n              buffer >>= 8;\\n              bufferSize -= 8;\\n            }\\n          },\\n          readHexSigned: function readHexSigned(num, size) {\\n            this.readHexNumber(num, size);\\n            var sign = num[size] & 1 ? 255 : 0;\\n            var c = 0;\\n\\n            for (var i = 0; i <= size; i++) {\\n              c = (c & 1) << 8 | num[i];\\n              num[i] = c >> 1 ^ sign;\\n            }\\n          },\\n          readString: function readString() {\\n            var len = this.readNumber();\\n            var s = '';\\n\\n            for (var i = 0; i < len; i++) {\\n              s += String.fromCharCode(this.readNumber());\\n            }\\n\\n            return s;\\n          }\\n        };\\n\\n        function processBinaryCMap(data, cMap, extend) {\\n          return new Promise(function (resolve, reject) {\\n            var stream = new BinaryCMapStream(data);\\n            var header = stream.readByte();\\n            cMap.vertical = !!(header & 1);\\n            var useCMap = null;\\n            var start = new Uint8Array(MAX_NUM_SIZE);\\n            var end = new Uint8Array(MAX_NUM_SIZE);\\n            var char = new Uint8Array(MAX_NUM_SIZE);\\n            var charCode = new Uint8Array(MAX_NUM_SIZE);\\n            var tmp = new Uint8Array(MAX_NUM_SIZE);\\n            var code;\\n            var b;\\n\\n            while ((b = stream.readByte()) >= 0) {\\n              var type = b >> 5;\\n\\n              if (type === 7) {\\n                switch (b & 0x1F) {\\n                  case 0:\\n                    stream.readString();\\n                    break;\\n\\n                  case 1:\\n                    useCMap = stream.readString();\\n                    break;\\n                }\\n\\n                continue;\\n              }\\n\\n              var sequence = !!(b & 0x10);\\n              var dataSize = b & 15;\\n\\n              if (dataSize + 1 > MAX_NUM_SIZE) {\\n                throw new Error('processBinaryCMap: Invalid dataSize.');\\n              }\\n\\n              var ucs2DataSize = 1;\\n              var subitemsCount = stream.readNumber();\\n              var i;\\n\\n              switch (type) {\\n                case 0:\\n                  stream.readHex(start, dataSize);\\n                  stream.readHexNumber(end, dataSize);\\n                  addHex(end, start, dataSize);\\n                  cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\\n\\n                  for (i = 1; i < subitemsCount; i++) {\\n                    incHex(end, dataSize);\\n                    stream.readHexNumber(start, dataSize);\\n                    addHex(start, end, dataSize);\\n                    stream.readHexNumber(end, dataSize);\\n                    addHex(end, start, dataSize);\\n                    cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\\n                  }\\n\\n                  break;\\n\\n                case 1:\\n                  stream.readHex(start, dataSize);\\n                  stream.readHexNumber(end, dataSize);\\n                  addHex(end, start, dataSize);\\n                  stream.readNumber();\\n\\n                  for (i = 1; i < subitemsCount; i++) {\\n                    incHex(end, dataSize);\\n                    stream.readHexNumber(start, dataSize);\\n                    addHex(start, end, dataSize);\\n                    stream.readHexNumber(end, dataSize);\\n                    addHex(end, start, dataSize);\\n                    stream.readNumber();\\n                  }\\n\\n                  break;\\n\\n                case 2:\\n                  stream.readHex(char, dataSize);\\n                  code = stream.readNumber();\\n                  cMap.mapOne(hexToInt(char, dataSize), code);\\n\\n                  for (i = 1; i < subitemsCount; i++) {\\n                    incHex(char, dataSize);\\n\\n                    if (!sequence) {\\n                      stream.readHexNumber(tmp, dataSize);\\n                      addHex(char, tmp, dataSize);\\n                    }\\n\\n                    code = stream.readSigned() + (code + 1);\\n                    cMap.mapOne(hexToInt(char, dataSize), code);\\n                  }\\n\\n                  break;\\n\\n                case 3:\\n                  stream.readHex(start, dataSize);\\n                  stream.readHexNumber(end, dataSize);\\n                  addHex(end, start, dataSize);\\n                  code = stream.readNumber();\\n                  cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\\n\\n                  for (i = 1; i < subitemsCount; i++) {\\n                    incHex(end, dataSize);\\n\\n                    if (!sequence) {\\n                      stream.readHexNumber(start, dataSize);\\n                      addHex(start, end, dataSize);\\n                    } else {\\n                      start.set(end);\\n                    }\\n\\n                    stream.readHexNumber(end, dataSize);\\n                    addHex(end, start, dataSize);\\n                    code = stream.readNumber();\\n                    cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\\n                  }\\n\\n                  break;\\n\\n                case 4:\\n                  stream.readHex(char, ucs2DataSize);\\n                  stream.readHex(charCode, dataSize);\\n                  cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\\n\\n                  for (i = 1; i < subitemsCount; i++) {\\n                    incHex(char, ucs2DataSize);\\n\\n                    if (!sequence) {\\n                      stream.readHexNumber(tmp, ucs2DataSize);\\n                      addHex(char, tmp, ucs2DataSize);\\n                    }\\n\\n                    incHex(charCode, dataSize);\\n                    stream.readHexSigned(tmp, dataSize);\\n                    addHex(charCode, tmp, dataSize);\\n                    cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\\n                  }\\n\\n                  break;\\n\\n                case 5:\\n                  stream.readHex(start, ucs2DataSize);\\n                  stream.readHexNumber(end, ucs2DataSize);\\n                  addHex(end, start, ucs2DataSize);\\n                  stream.readHex(charCode, dataSize);\\n                  cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\\n\\n                  for (i = 1; i < subitemsCount; i++) {\\n                    incHex(end, ucs2DataSize);\\n\\n                    if (!sequence) {\\n                      stream.readHexNumber(start, ucs2DataSize);\\n                      addHex(start, end, ucs2DataSize);\\n                    } else {\\n                      start.set(end);\\n                    }\\n\\n                    stream.readHexNumber(end, ucs2DataSize);\\n                    addHex(end, start, ucs2DataSize);\\n                    stream.readHex(charCode, dataSize);\\n                    cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\\n                  }\\n\\n                  break;\\n\\n                default:\\n                  reject(new Error('processBinaryCMap: Unknown type: ' + type));\\n                  return;\\n              }\\n            }\\n\\n            if (useCMap) {\\n              resolve(extend(useCMap));\\n              return;\\n            }\\n\\n            resolve(cMap);\\n          });\\n        }\\n\\n        function BinaryCMapReader() {}\\n\\n        BinaryCMapReader.prototype = {\\n          process: processBinaryCMap\\n        };\\n        return BinaryCMapReader;\\n      }();\\n\\n      var CMapFactory = function CMapFactoryClosure() {\\n        function strToInt(str) {\\n          var a = 0;\\n\\n          for (var i = 0; i < str.length; i++) {\\n            a = a << 8 | str.charCodeAt(i);\\n          }\\n\\n          return a >>> 0;\\n        }\\n\\n        function expectString(obj) {\\n          if (!(0, _util.isString)(obj)) {\\n            throw new _util.FormatError('Malformed CMap: expected string.');\\n          }\\n        }\\n\\n        function expectInt(obj) {\\n          if (!Number.isInteger(obj)) {\\n            throw new _util.FormatError('Malformed CMap: expected int.');\\n          }\\n        }\\n\\n        function parseBfChar(cMap, lexer) {\\n          while (true) {\\n            var obj = lexer.getObj();\\n\\n            if ((0, _primitives.isEOF)(obj)) {\\n              break;\\n            }\\n\\n            if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\\n              return;\\n            }\\n\\n            expectString(obj);\\n            var src = strToInt(obj);\\n            obj = lexer.getObj();\\n            expectString(obj);\\n            var dst = obj;\\n            cMap.mapOne(src, dst);\\n          }\\n        }\\n\\n        function parseBfRange(cMap, lexer) {\\n          while (true) {\\n            var obj = lexer.getObj();\\n\\n            if ((0, _primitives.isEOF)(obj)) {\\n              break;\\n            }\\n\\n            if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\\n              return;\\n            }\\n\\n            expectString(obj);\\n            var low = strToInt(obj);\\n            obj = lexer.getObj();\\n            expectString(obj);\\n            var high = strToInt(obj);\\n            obj = lexer.getObj();\\n\\n            if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\\n              var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\\n              cMap.mapBfRange(low, high, dstLow);\\n            } else if ((0, _primitives.isCmd)(obj, '[')) {\\n              obj = lexer.getObj();\\n              var array = [];\\n\\n              while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\\n                array.push(obj);\\n                obj = lexer.getObj();\\n              }\\n\\n              cMap.mapBfRangeToArray(low, high, array);\\n            } else {\\n              break;\\n            }\\n          }\\n\\n          throw new _util.FormatError('Invalid bf range.');\\n        }\\n\\n        function parseCidChar(cMap, lexer) {\\n          while (true) {\\n            var obj = lexer.getObj();\\n\\n            if ((0, _primitives.isEOF)(obj)) {\\n              break;\\n            }\\n\\n            if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\\n              return;\\n            }\\n\\n            expectString(obj);\\n            var src = strToInt(obj);\\n            obj = lexer.getObj();\\n            expectInt(obj);\\n            var dst = obj;\\n            cMap.mapOne(src, dst);\\n          }\\n        }\\n\\n        function parseCidRange(cMap, lexer) {\\n          while (true) {\\n            var obj = lexer.getObj();\\n\\n            if ((0, _primitives.isEOF)(obj)) {\\n              break;\\n            }\\n\\n            if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\\n              return;\\n            }\\n\\n            expectString(obj);\\n            var low = strToInt(obj);\\n            obj = lexer.getObj();\\n            expectString(obj);\\n            var high = strToInt(obj);\\n            obj = lexer.getObj();\\n            expectInt(obj);\\n            var dstLow = obj;\\n            cMap.mapCidRange(low, high, dstLow);\\n          }\\n        }\\n\\n        function parseCodespaceRange(cMap, lexer) {\\n          while (true) {\\n            var obj = lexer.getObj();\\n\\n            if ((0, _primitives.isEOF)(obj)) {\\n              break;\\n            }\\n\\n            if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\\n              return;\\n            }\\n\\n            if (!(0, _util.isString)(obj)) {\\n              break;\\n            }\\n\\n            var low = strToInt(obj);\\n            obj = lexer.getObj();\\n\\n            if (!(0, _util.isString)(obj)) {\\n              break;\\n            }\\n\\n            var high = strToInt(obj);\\n            cMap.addCodespaceRange(obj.length, low, high);\\n          }\\n\\n          throw new _util.FormatError('Invalid codespace range.');\\n        }\\n\\n        function parseWMode(cMap, lexer) {\\n          var obj = lexer.getObj();\\n\\n          if (Number.isInteger(obj)) {\\n            cMap.vertical = !!obj;\\n          }\\n        }\\n\\n        function parseCMapName(cMap, lexer) {\\n          var obj = lexer.getObj();\\n\\n          if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\\n            cMap.name = obj.name;\\n          }\\n        }\\n\\n        function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\\n          var previous;\\n          var embeddedUseCMap;\\n\\n          objLoop: while (true) {\\n            try {\\n              var obj = lexer.getObj();\\n\\n              if ((0, _primitives.isEOF)(obj)) {\\n                break;\\n              } else if ((0, _primitives.isName)(obj)) {\\n                if (obj.name === 'WMode') {\\n                  parseWMode(cMap, lexer);\\n                } else if (obj.name === 'CMapName') {\\n                  parseCMapName(cMap, lexer);\\n                }\\n\\n                previous = obj;\\n              } else if ((0, _primitives.isCmd)(obj)) {\\n                switch (obj.cmd) {\\n                  case 'endcmap':\\n                    break objLoop;\\n\\n                  case 'usecmap':\\n                    if ((0, _primitives.isName)(previous)) {\\n                      embeddedUseCMap = previous.name;\\n                    }\\n\\n                    break;\\n\\n                  case 'begincodespacerange':\\n                    parseCodespaceRange(cMap, lexer);\\n                    break;\\n\\n                  case 'beginbfchar':\\n                    parseBfChar(cMap, lexer);\\n                    break;\\n\\n                  case 'begincidchar':\\n                    parseCidChar(cMap, lexer);\\n                    break;\\n\\n                  case 'beginbfrange':\\n                    parseBfRange(cMap, lexer);\\n                    break;\\n\\n                  case 'begincidrange':\\n                    parseCidRange(cMap, lexer);\\n                    break;\\n                }\\n              }\\n            } catch (ex) {\\n              if (ex instanceof _util.MissingDataException) {\\n                throw ex;\\n              }\\n\\n              (0, _util.warn)('Invalid cMap data: ' + ex);\\n              continue;\\n            }\\n          }\\n\\n          if (!useCMap && embeddedUseCMap) {\\n            useCMap = embeddedUseCMap;\\n          }\\n\\n          if (useCMap) {\\n            return extendCMap(cMap, fetchBuiltInCMap, useCMap);\\n          }\\n\\n          return Promise.resolve(cMap);\\n        }\\n\\n        function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\\n          return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\\n            cMap.useCMap = newCMap;\\n\\n            if (cMap.numCodespaceRanges === 0) {\\n              var useCodespaceRanges = cMap.useCMap.codespaceRanges;\\n\\n              for (var i = 0; i < useCodespaceRanges.length; i++) {\\n                cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\\n              }\\n\\n              cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\\n            }\\n\\n            cMap.useCMap.forEach(function (key, value) {\\n              if (!cMap.contains(key)) {\\n                cMap.mapOne(key, cMap.useCMap.lookup(key));\\n              }\\n            });\\n            return cMap;\\n          });\\n        }\\n\\n        function createBuiltInCMap(name, fetchBuiltInCMap) {\\n          if (name === 'Identity-H') {\\n            return Promise.resolve(new IdentityCMap(false, 2));\\n          } else if (name === 'Identity-V') {\\n            return Promise.resolve(new IdentityCMap(true, 2));\\n          }\\n\\n          if (!BUILT_IN_CMAPS.includes(name)) {\\n            return Promise.reject(new Error('Unknown CMap name: ' + name));\\n          }\\n\\n          if (!fetchBuiltInCMap) {\\n            return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\\n          }\\n\\n          return fetchBuiltInCMap(name).then(function (data) {\\n            var cMapData = data.cMapData,\\n                compressionType = data.compressionType;\\n            var cMap = new CMap(true);\\n\\n            if (compressionType === _util.CMapCompressionType.BINARY) {\\n              return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\\n                return extendCMap(cMap, fetchBuiltInCMap, useCMap);\\n              });\\n            }\\n\\n            if (compressionType === _util.CMapCompressionType.NONE) {\\n              var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\\n              return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\\n            }\\n\\n            return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\\n          });\\n        }\\n\\n        return {\\n          create: function create(params) {\\n            var encoding = params.encoding;\\n            var fetchBuiltInCMap = params.fetchBuiltInCMap;\\n            var useCMap = params.useCMap;\\n\\n            if ((0, _primitives.isName)(encoding)) {\\n              return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\\n            } else if ((0, _primitives.isStream)(encoding)) {\\n              var cMap = new CMap();\\n              var lexer = new _parser.Lexer(encoding);\\n              return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\\n                if (parsedCMap.isIdentityCMap) {\\n                  return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\\n                }\\n\\n                return parsedCMap;\\n              });\\n            }\\n\\n            return Promise.reject(new Error('Encoding required.'));\\n          }\\n        };\\n      }();\\n\\n      exports.CMapFactory = CMapFactory;\\n      /***/\\n    },\\n    /* 173 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.getFontType = getFontType;\\n      exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.SEAC_ANALYSIS_ENABLED = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _cff_parser = __w_pdfjs_require__(174);\\n\\n      var _glyphlist = __w_pdfjs_require__(177);\\n\\n      var _encodings = __w_pdfjs_require__(176);\\n\\n      var _standard_fonts = __w_pdfjs_require__(178);\\n\\n      var _unicode = __w_pdfjs_require__(179);\\n\\n      var _font_renderer = __w_pdfjs_require__(180);\\n\\n      var _cmap = __w_pdfjs_require__(172);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var _type1_parser = __w_pdfjs_require__(181);\\n\\n      function _slicedToArray(arr, i) {\\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\\n      }\\n\\n      function _nonIterableRest() {\\n        throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\");\\n      }\\n\\n      function _iterableToArrayLimit(arr, i) {\\n        var _arr = [];\\n        var _n = true;\\n        var _d = false;\\n        var _e = undefined;\\n\\n        try {\\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n            _arr.push(_s.value);\\n\\n            if (i && _arr.length === i) break;\\n          }\\n        } catch (err) {\\n          _d = true;\\n          _e = err;\\n        } finally {\\n          try {\\n            if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"]();\\n          } finally {\\n            if (_d) throw _e;\\n          }\\n        }\\n\\n        return _arr;\\n      }\\n\\n      function _arrayWithHoles(arr) {\\n        if (Array.isArray(arr)) return arr;\\n      }\\n\\n      var PRIVATE_USE_AREAS = [[0xE000, 0xF8FF], [0x100000, 0x10FFFD]];\\n      var PDF_GLYPH_SPACE_UNITS = 1000;\\n      var SEAC_ANALYSIS_ENABLED = true;\\n      exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\\n      var FontFlags = {\\n        FixedPitch: 1,\\n        Serif: 2,\\n        Symbolic: 4,\\n        Script: 8,\\n        Nonsymbolic: 32,\\n        Italic: 64,\\n        AllCap: 65536,\\n        SmallCap: 131072,\\n        ForceBold: 262144\\n      };\\n      exports.FontFlags = FontFlags;\\n      var MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\\n\\n      function adjustWidths(properties) {\\n        if (!properties.fontMatrix) {\\n          return;\\n        }\\n\\n        if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\\n          return;\\n        }\\n\\n        var scale = 0.001 / properties.fontMatrix[0];\\n        var glyphsWidths = properties.widths;\\n\\n        for (var glyph in glyphsWidths) {\\n          glyphsWidths[glyph] *= scale;\\n        }\\n\\n        properties.defaultWidth *= scale;\\n      }\\n\\n      function adjustToUnicode(properties, builtInEncoding) {\\n        if (properties.hasIncludedToUnicodeMap) {\\n          return;\\n        }\\n\\n        if (properties.hasEncoding) {\\n          return;\\n        }\\n\\n        if (builtInEncoding === properties.defaultEncoding) {\\n          return;\\n        }\\n\\n        if (properties.toUnicode instanceof IdentityToUnicodeMap) {\\n          return;\\n        }\\n\\n        var toUnicode = [],\\n            glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n\\n        for (var charCode in builtInEncoding) {\\n          var glyphName = builtInEncoding[charCode];\\n          var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n\\n          if (unicode !== -1) {\\n            toUnicode[charCode] = String.fromCharCode(unicode);\\n          }\\n        }\\n\\n        properties.toUnicode.amend(toUnicode);\\n      }\\n\\n      function getFontType(type, subtype) {\\n        switch (type) {\\n          case 'Type1':\\n            return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\\n\\n          case 'CIDFontType0':\\n            return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\\n\\n          case 'OpenType':\\n            return _util.FontType.OPENTYPE;\\n\\n          case 'TrueType':\\n            return _util.FontType.TRUETYPE;\\n\\n          case 'CIDFontType2':\\n            return _util.FontType.CIDFONTTYPE2;\\n\\n          case 'MMType1':\\n            return _util.FontType.MMTYPE1;\\n\\n          case 'Type0':\\n            return _util.FontType.TYPE0;\\n\\n          default:\\n            return _util.FontType.UNKNOWN;\\n        }\\n      }\\n\\n      function recoverGlyphName(name, glyphsUnicodeMap) {\\n        if (glyphsUnicodeMap[name] !== undefined) {\\n          return name;\\n        }\\n\\n        var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\\n\\n        if (unicode !== -1) {\\n          for (var key in glyphsUnicodeMap) {\\n            if (glyphsUnicodeMap[key] === unicode) {\\n              return key;\\n            }\\n          }\\n        }\\n\\n        (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\\n        return name;\\n      }\\n\\n      var Glyph = function GlyphClosure() {\\n        function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\\n          this.fontChar = fontChar;\\n          this.unicode = unicode;\\n          this.accent = accent;\\n          this.width = width;\\n          this.vmetric = vmetric;\\n          this.operatorListId = operatorListId;\\n          this.isSpace = isSpace;\\n          this.isInFont = isInFont;\\n        }\\n\\n        Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\\n          return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\\n        };\\n\\n        return Glyph;\\n      }();\\n\\n      var ToUnicodeMap = function ToUnicodeMapClosure() {\\n        function ToUnicodeMap() {\\n          var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n          this._map = cmap;\\n        }\\n\\n        ToUnicodeMap.prototype = {\\n          get length() {\\n            return this._map.length;\\n          },\\n\\n          forEach: function forEach(callback) {\\n            for (var charCode in this._map) {\\n              callback(charCode, this._map[charCode].charCodeAt(0));\\n            }\\n          },\\n          has: function has(i) {\\n            return this._map[i] !== undefined;\\n          },\\n          get: function get(i) {\\n            return this._map[i];\\n          },\\n          charCodeOf: function charCodeOf(value) {\\n            var map = this._map;\\n\\n            if (map.length <= 0x10000) {\\n              return map.indexOf(value);\\n            }\\n\\n            for (var charCode in map) {\\n              if (map[charCode] === value) {\\n                return charCode | 0;\\n              }\\n            }\\n\\n            return -1;\\n          },\\n          amend: function amend(map) {\\n            for (var charCode in map) {\\n              this._map[charCode] = map[charCode];\\n            }\\n          }\\n        };\\n        return ToUnicodeMap;\\n      }();\\n\\n      exports.ToUnicodeMap = ToUnicodeMap;\\n\\n      var IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\\n        function IdentityToUnicodeMap(firstChar, lastChar) {\\n          this.firstChar = firstChar;\\n          this.lastChar = lastChar;\\n        }\\n\\n        IdentityToUnicodeMap.prototype = {\\n          get length() {\\n            return this.lastChar + 1 - this.firstChar;\\n          },\\n\\n          forEach: function forEach(callback) {\\n            for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\\n              callback(i, i);\\n            }\\n          },\\n          has: function has(i) {\\n            return this.firstChar <= i && i <= this.lastChar;\\n          },\\n          get: function get(i) {\\n            if (this.firstChar <= i && i <= this.lastChar) {\\n              return String.fromCharCode(i);\\n            }\\n\\n            return undefined;\\n          },\\n          charCodeOf: function charCodeOf(v) {\\n            return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\\n          },\\n          amend: function amend(map) {\\n            (0, _util.unreachable)('Should not call amend()');\\n          }\\n        };\\n        return IdentityToUnicodeMap;\\n      }();\\n\\n      exports.IdentityToUnicodeMap = IdentityToUnicodeMap;\\n\\n      var OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\\n        function writeInt16(dest, offset, num) {\\n          dest[offset] = num >> 8 & 0xFF;\\n          dest[offset + 1] = num & 0xFF;\\n        }\\n\\n        function writeInt32(dest, offset, num) {\\n          dest[offset] = num >> 24 & 0xFF;\\n          dest[offset + 1] = num >> 16 & 0xFF;\\n          dest[offset + 2] = num >> 8 & 0xFF;\\n          dest[offset + 3] = num & 0xFF;\\n        }\\n\\n        function writeData(dest, offset, data) {\\n          var i, ii;\\n\\n          if (data instanceof Uint8Array) {\\n            dest.set(data, offset);\\n          } else if (typeof data === 'string') {\\n            for (i = 0, ii = data.length; i < ii; i++) {\\n              dest[offset++] = data.charCodeAt(i) & 0xFF;\\n            }\\n          } else {\\n            for (i = 0, ii = data.length; i < ii; i++) {\\n              dest[offset++] = data[i] & 0xFF;\\n            }\\n          }\\n        }\\n\\n        function OpenTypeFileBuilder(sfnt) {\\n          this.sfnt = sfnt;\\n          this.tables = Object.create(null);\\n        }\\n\\n        OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\\n          var maxPower2 = 1,\\n              log2 = 0;\\n\\n          while ((maxPower2 ^ entriesCount) > maxPower2) {\\n            maxPower2 <<= 1;\\n            log2++;\\n          }\\n\\n          var searchRange = maxPower2 * entrySize;\\n          return {\\n            range: searchRange,\\n            entry: log2,\\n            rangeShift: entrySize * entriesCount - searchRange\\n          };\\n        };\\n\\n        var OTF_HEADER_SIZE = 12;\\n        var OTF_TABLE_ENTRY_SIZE = 16;\\n        OpenTypeFileBuilder.prototype = {\\n          toArray: function OpenTypeFileBuilder_toArray() {\\n            var sfnt = this.sfnt;\\n            var tables = this.tables;\\n            var tablesNames = Object.keys(tables);\\n            tablesNames.sort();\\n            var numTables = tablesNames.length;\\n            var i, j, jj, table, tableName;\\n            var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\\n            var tableOffsets = [offset];\\n\\n            for (i = 0; i < numTables; i++) {\\n              table = tables[tablesNames[i]];\\n              var paddedLength = (table.length + 3 & ~3) >>> 0;\\n              offset += paddedLength;\\n              tableOffsets.push(offset);\\n            }\\n\\n            var file = new Uint8Array(offset);\\n\\n            for (i = 0; i < numTables; i++) {\\n              table = tables[tablesNames[i]];\\n              writeData(file, tableOffsets[i], table);\\n            }\\n\\n            if (sfnt === 'true') {\\n              sfnt = (0, _util.string32)(0x00010000);\\n            }\\n\\n            file[0] = sfnt.charCodeAt(0) & 0xFF;\\n            file[1] = sfnt.charCodeAt(1) & 0xFF;\\n            file[2] = sfnt.charCodeAt(2) & 0xFF;\\n            file[3] = sfnt.charCodeAt(3) & 0xFF;\\n            writeInt16(file, 4, numTables);\\n            var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\\n            writeInt16(file, 6, searchParams.range);\\n            writeInt16(file, 8, searchParams.entry);\\n            writeInt16(file, 10, searchParams.rangeShift);\\n            offset = OTF_HEADER_SIZE;\\n\\n            for (i = 0; i < numTables; i++) {\\n              tableName = tablesNames[i];\\n              file[offset] = tableName.charCodeAt(0) & 0xFF;\\n              file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\\n              file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\\n              file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\\n              var checksum = 0;\\n\\n              for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\\n                var quad = (0, _util.readUint32)(file, j);\\n                checksum = checksum + quad >>> 0;\\n              }\\n\\n              writeInt32(file, offset + 4, checksum);\\n              writeInt32(file, offset + 8, tableOffsets[i]);\\n              writeInt32(file, offset + 12, tables[tableName].length);\\n              offset += OTF_TABLE_ENTRY_SIZE;\\n            }\\n\\n            return file;\\n          },\\n          addTable: function OpenTypeFileBuilder_addTable(tag, data) {\\n            if (tag in this.tables) {\\n              throw new Error('Table ' + tag + ' already exists');\\n            }\\n\\n            this.tables[tag] = data;\\n          }\\n        };\\n        return OpenTypeFileBuilder;\\n      }();\\n\\n      var Font = function FontClosure() {\\n        function Font(name, file, properties) {\\n          var charCode;\\n          this.name = name;\\n          this.loadedName = properties.loadedName;\\n          this.isType3Font = properties.isType3Font;\\n          this.sizes = [];\\n          this.missingFile = false;\\n          this.glyphCache = Object.create(null);\\n          this.isSerifFont = !!(properties.flags & FontFlags.Serif);\\n          this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\\n          this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\\n          var type = properties.type;\\n          var subtype = properties.subtype;\\n          this.type = type;\\n          this.subtype = subtype;\\n          this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\\n          this.differences = properties.differences;\\n          this.widths = properties.widths;\\n          this.defaultWidth = properties.defaultWidth;\\n          this.composite = properties.composite;\\n          this.wideChars = properties.wideChars;\\n          this.cMap = properties.cMap;\\n          this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\\n          this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\\n          this.fontMatrix = properties.fontMatrix;\\n          this.bbox = properties.bbox;\\n          this.defaultEncoding = properties.defaultEncoding;\\n          this.toUnicode = properties.toUnicode;\\n          this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\\n          this.toFontChar = [];\\n\\n          if (properties.type === 'Type3') {\\n            for (charCode = 0; charCode < 256; charCode++) {\\n              this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\\n            }\\n\\n            this.fontType = _util.FontType.TYPE3;\\n            return;\\n          }\\n\\n          this.cidEncoding = properties.cidEncoding;\\n          this.vertical = properties.vertical;\\n\\n          if (this.vertical) {\\n            this.vmetrics = properties.vmetrics;\\n            this.defaultVMetrics = properties.defaultVMetrics;\\n          }\\n\\n          if (!file || file.isEmpty) {\\n            if (file) {\\n              (0, _util.warn)('Font file is empty in \\\"' + name + '\\\" (' + this.loadedName + ')');\\n            }\\n\\n            this.fallbackToSystemFont();\\n            return;\\n          }\\n\\n          var _getFontFileType = getFontFileType(file, properties);\\n\\n          var _getFontFileType2 = _slicedToArray(_getFontFileType, 2);\\n\\n          type = _getFontFileType2[0];\\n          subtype = _getFontFileType2[1];\\n\\n          if (type !== this.type || subtype !== this.subtype) {\\n            (0, _util.info)('Inconsistent font file Type/SubType, expected: ' + \\\"\\\".concat(this.type, \\\"/\\\").concat(this.subtype, \\\" but found: \\\").concat(type, \\\"/\\\").concat(subtype, \\\".\\\"));\\n          }\\n\\n          try {\\n            var data;\\n\\n            switch (type) {\\n              case 'MMType1':\\n                (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\\n\\n              case 'Type1':\\n              case 'CIDFontType0':\\n                this.mimetype = 'font/opentype';\\n                var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\\n                adjustWidths(properties);\\n                data = this.convert(name, cff, properties);\\n                break;\\n\\n              case 'OpenType':\\n              case 'TrueType':\\n              case 'CIDFontType2':\\n                this.mimetype = 'font/opentype';\\n                data = this.checkAndRepair(name, file, properties);\\n\\n                if (this.isOpenType) {\\n                  adjustWidths(properties);\\n                  type = 'OpenType';\\n                }\\n\\n                break;\\n\\n              default:\\n                throw new _util.FormatError(\\\"Font \\\".concat(type, \\\" is not supported\\\"));\\n            }\\n          } catch (e) {\\n            (0, _util.warn)(e);\\n            this.fallbackToSystemFont();\\n            return;\\n          }\\n\\n          this.data = data;\\n          this.fontType = getFontType(type, subtype);\\n          this.fontMatrix = properties.fontMatrix;\\n          this.widths = properties.widths;\\n          this.defaultWidth = properties.defaultWidth;\\n          this.toUnicode = properties.toUnicode;\\n          this.encoding = properties.baseEncoding;\\n          this.seacMap = properties.seacMap;\\n        }\\n\\n        Font.getFontID = function () {\\n          var ID = 1;\\n          return function Font_getFontID() {\\n            return String(ID++);\\n          };\\n        }();\\n\\n        function int16(b0, b1) {\\n          return (b0 << 8) + b1;\\n        }\\n\\n        function writeSignedInt16(bytes, index, value) {\\n          bytes[index + 1] = value;\\n          bytes[index] = value >>> 8;\\n        }\\n\\n        function signedInt16(b0, b1) {\\n          var value = (b0 << 8) + b1;\\n          return value & 1 << 15 ? value - 0x10000 : value;\\n        }\\n\\n        function int32(b0, b1, b2, b3) {\\n          return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\n        }\\n\\n        function string16(value) {\\n          return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\\n        }\\n\\n        function safeString16(value) {\\n          value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\\n          return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\\n        }\\n\\n        function isTrueTypeFile(file) {\\n          var header = file.peekBytes(4);\\n          return (0, _util.readUint32)(header, 0) === 0x00010000 || (0, _util.bytesToString)(header) === 'true';\\n        }\\n\\n        function isTrueTypeCollectionFile(file) {\\n          var header = file.peekBytes(4);\\n          return (0, _util.bytesToString)(header) === 'ttcf';\\n        }\\n\\n        function isOpenTypeFile(file) {\\n          var header = file.peekBytes(4);\\n          return (0, _util.bytesToString)(header) === 'OTTO';\\n        }\\n\\n        function isType1File(file) {\\n          var header = file.peekBytes(2);\\n\\n          if (header[0] === 0x25 && header[1] === 0x21) {\\n            return true;\\n          }\\n\\n          if (header[0] === 0x80 && header[1] === 0x01) {\\n            return true;\\n          }\\n\\n          return false;\\n        }\\n\\n        function isCFFFile(file) {\\n          var header = file.peekBytes(4);\\n\\n          if (header[0] >= 1 && header[3] >= 1 && header[3] <= 4) {\\n            return true;\\n          }\\n\\n          return false;\\n        }\\n\\n        function getFontFileType(file, _ref) {\\n          var type = _ref.type,\\n              subtype = _ref.subtype,\\n              composite = _ref.composite;\\n          var fileType, fileSubtype;\\n\\n          if (isTrueTypeFile(file) || isTrueTypeCollectionFile(file)) {\\n            if (composite) {\\n              fileType = 'CIDFontType2';\\n            } else {\\n              fileType = 'TrueType';\\n            }\\n          } else if (isOpenTypeFile(file)) {\\n            if (composite) {\\n              fileType = 'CIDFontType2';\\n            } else {\\n              fileType = 'OpenType';\\n            }\\n          } else if (isType1File(file)) {\\n            if (composite) {\\n              fileType = 'CIDFontType0';\\n            } else {\\n              fileType = type === 'MMType1' ? 'MMType1' : 'Type1';\\n            }\\n          } else if (isCFFFile(file)) {\\n            if (composite) {\\n              fileType = 'CIDFontType0';\\n              fileSubtype = 'CIDFontType0C';\\n            } else {\\n              fileType = type === 'MMType1' ? 'MMType1' : 'Type1';\\n              fileSubtype = 'Type1C';\\n            }\\n          } else {\\n            (0, _util.warn)('getFontFileType: Unable to detect correct font file Type/Subtype.');\\n            fileType = type;\\n            fileSubtype = subtype;\\n          }\\n\\n          return [fileType, fileSubtype];\\n        }\\n\\n        function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\\n          var toFontChar = [],\\n              unicode;\\n\\n          for (var i = 0, ii = encoding.length; i < ii; i++) {\\n            unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\\n\\n            if (unicode !== -1) {\\n              toFontChar[i] = unicode;\\n            }\\n          }\\n\\n          for (var charCode in differences) {\\n            unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\\n\\n            if (unicode !== -1) {\\n              toFontChar[+charCode] = unicode;\\n            }\\n          }\\n\\n          return toFontChar;\\n        }\\n\\n        function adjustMapping(charCodeToGlyphId, hasGlyph, newGlyphZeroId) {\\n          var newMap = Object.create(null);\\n          var toFontChar = [];\\n          var privateUseAreaIndex = 0;\\n          var nextAvailableFontCharCode = PRIVATE_USE_AREAS[privateUseAreaIndex][0];\\n          var privateUseOffetEnd = PRIVATE_USE_AREAS[privateUseAreaIndex][1];\\n\\n          for (var originalCharCode in charCodeToGlyphId) {\\n            originalCharCode |= 0;\\n            var glyphId = charCodeToGlyphId[originalCharCode];\\n\\n            if (!hasGlyph(glyphId)) {\\n              continue;\\n            }\\n\\n            if (nextAvailableFontCharCode > privateUseOffetEnd) {\\n              privateUseAreaIndex++;\\n\\n              if (privateUseAreaIndex >= PRIVATE_USE_AREAS.length) {\\n                (0, _util.warn)('Ran out of space in font private use area.');\\n                break;\\n              }\\n\\n              nextAvailableFontCharCode = PRIVATE_USE_AREAS[privateUseAreaIndex][0];\\n              privateUseOffetEnd = PRIVATE_USE_AREAS[privateUseAreaIndex][1];\\n            }\\n\\n            var fontCharCode = nextAvailableFontCharCode++;\\n\\n            if (glyphId === 0) {\\n              glyphId = newGlyphZeroId;\\n            }\\n\\n            newMap[fontCharCode] = glyphId;\\n            toFontChar[originalCharCode] = fontCharCode;\\n          }\\n\\n          return {\\n            toFontChar: toFontChar,\\n            charCodeToGlyphId: newMap,\\n            nextAvailableFontCharCode: nextAvailableFontCharCode\\n          };\\n        }\\n\\n        function getRanges(glyphs, numGlyphs) {\\n          var codes = [];\\n\\n          for (var charCode in glyphs) {\\n            if (glyphs[charCode] >= numGlyphs) {\\n              continue;\\n            }\\n\\n            codes.push({\\n              fontCharCode: charCode | 0,\\n              glyphId: glyphs[charCode]\\n            });\\n          }\\n\\n          if (codes.length === 0) {\\n            codes.push({\\n              fontCharCode: 0,\\n              glyphId: 0\\n            });\\n          }\\n\\n          codes.sort(function fontGetRangesSort(a, b) {\\n            return a.fontCharCode - b.fontCharCode;\\n          });\\n          var ranges = [];\\n          var length = codes.length;\\n\\n          for (var n = 0; n < length;) {\\n            var start = codes[n].fontCharCode;\\n            var codeIndices = [codes[n].glyphId];\\n            ++n;\\n            var end = start;\\n\\n            while (n < length && end + 1 === codes[n].fontCharCode) {\\n              codeIndices.push(codes[n].glyphId);\\n              ++end;\\n              ++n;\\n\\n              if (end === 0xFFFF) {\\n                break;\\n              }\\n            }\\n\\n            ranges.push([start, end, codeIndices]);\\n          }\\n\\n          return ranges;\\n        }\\n\\n        function createCmapTable(glyphs, numGlyphs) {\\n          var ranges = getRanges(glyphs, numGlyphs);\\n          var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\\n          var cmap = '\\\\x00\\\\x00' + string16(numTables) + '\\\\x00\\\\x03' + '\\\\x00\\\\x01' + (0, _util.string32)(4 + numTables * 8);\\n          var i, ii, j, jj;\\n\\n          for (i = ranges.length - 1; i >= 0; --i) {\\n            if (ranges[i][0] <= 0xFFFF) {\\n              break;\\n            }\\n          }\\n\\n          var bmpLength = i + 1;\\n\\n          if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\\n            ranges[i][1] = 0xFFFE;\\n          }\\n\\n          var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\\n          var segCount = bmpLength + trailingRangesCount;\\n          var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\\n          var startCount = '';\\n          var endCount = '';\\n          var idDeltas = '';\\n          var idRangeOffsets = '';\\n          var glyphsIds = '';\\n          var bias = 0;\\n          var range, start, end, codes;\\n\\n          for (i = 0, ii = bmpLength; i < ii; i++) {\\n            range = ranges[i];\\n            start = range[0];\\n            end = range[1];\\n            startCount += string16(start);\\n            endCount += string16(end);\\n            codes = range[2];\\n            var contiguous = true;\\n\\n            for (j = 1, jj = codes.length; j < jj; ++j) {\\n              if (codes[j] !== codes[j - 1] + 1) {\\n                contiguous = false;\\n                break;\\n              }\\n            }\\n\\n            if (!contiguous) {\\n              var offset = (segCount - i) * 2 + bias * 2;\\n              bias += end - start + 1;\\n              idDeltas += string16(0);\\n              idRangeOffsets += string16(offset);\\n\\n              for (j = 0, jj = codes.length; j < jj; ++j) {\\n                glyphsIds += string16(codes[j]);\\n              }\\n            } else {\\n              var startCode = codes[0];\\n              idDeltas += string16(startCode - start & 0xFFFF);\\n              idRangeOffsets += string16(0);\\n            }\\n          }\\n\\n          if (trailingRangesCount > 0) {\\n            endCount += '\\\\xFF\\\\xFF';\\n            startCount += '\\\\xFF\\\\xFF';\\n            idDeltas += '\\\\x00\\\\x01';\\n            idRangeOffsets += '\\\\x00\\\\x00';\\n          }\\n\\n          var format314 = '\\\\x00\\\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\\\x00\\\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\\n          var format31012 = '';\\n          var header31012 = '';\\n\\n          if (numTables > 1) {\\n            cmap += '\\\\x00\\\\x03' + '\\\\x00\\\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\\n            format31012 = '';\\n\\n            for (i = 0, ii = ranges.length; i < ii; i++) {\\n              range = ranges[i];\\n              start = range[0];\\n              codes = range[2];\\n              var code = codes[0];\\n\\n              for (j = 1, jj = codes.length; j < jj; ++j) {\\n                if (codes[j] !== codes[j - 1] + 1) {\\n                  end = range[0] + j - 1;\\n                  format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\\n                  start = end + 1;\\n                  code = codes[j];\\n                }\\n              }\\n\\n              format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\\n            }\\n\\n            header31012 = '\\\\x00\\\\x0C' + '\\\\x00\\\\x00' + (0, _util.string32)(format31012.length + 16) + '\\\\x00\\\\x00\\\\x00\\\\x00' + (0, _util.string32)(format31012.length / 12);\\n          }\\n\\n          return cmap + '\\\\x00\\\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\\n        }\\n\\n        function validateOS2Table(os2) {\\n          var stream = new _stream.Stream(os2.data);\\n          var version = stream.getUint16();\\n          stream.getBytes(60);\\n          var selection = stream.getUint16();\\n\\n          if (version < 4 && selection & 0x0300) {\\n            return false;\\n          }\\n\\n          var firstChar = stream.getUint16();\\n          var lastChar = stream.getUint16();\\n\\n          if (firstChar > lastChar) {\\n            return false;\\n          }\\n\\n          stream.getBytes(6);\\n          var usWinAscent = stream.getUint16();\\n\\n          if (usWinAscent === 0) {\\n            return false;\\n          }\\n\\n          os2.data[8] = os2.data[9] = 0;\\n          return true;\\n        }\\n\\n        function createOS2Table(properties, charstrings, override) {\\n          override = override || {\\n            unitsPerEm: 0,\\n            yMax: 0,\\n            yMin: 0,\\n            ascent: 0,\\n            descent: 0\\n          };\\n          var ulUnicodeRange1 = 0;\\n          var ulUnicodeRange2 = 0;\\n          var ulUnicodeRange3 = 0;\\n          var ulUnicodeRange4 = 0;\\n          var firstCharIndex = null;\\n          var lastCharIndex = 0;\\n\\n          if (charstrings) {\\n            for (var code in charstrings) {\\n              code |= 0;\\n\\n              if (firstCharIndex > code || !firstCharIndex) {\\n                firstCharIndex = code;\\n              }\\n\\n              if (lastCharIndex < code) {\\n                lastCharIndex = code;\\n              }\\n\\n              var position = (0, _unicode.getUnicodeRangeFor)(code);\\n\\n              if (position < 32) {\\n                ulUnicodeRange1 |= 1 << position;\\n              } else if (position < 64) {\\n                ulUnicodeRange2 |= 1 << position - 32;\\n              } else if (position < 96) {\\n                ulUnicodeRange3 |= 1 << position - 64;\\n              } else if (position < 123) {\\n                ulUnicodeRange4 |= 1 << position - 96;\\n              } else {\\n                throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\\n              }\\n            }\\n\\n            if (lastCharIndex > 0xFFFF) {\\n              lastCharIndex = 0xFFFF;\\n            }\\n          } else {\\n            firstCharIndex = 0;\\n            lastCharIndex = 255;\\n          }\\n\\n          var bbox = properties.bbox || [0, 0, 0, 0];\\n          var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\\n          var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\\n          var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\\n          var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\\n\\n          if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\\n            typoDescent = -typoDescent;\\n          }\\n\\n          var winAscent = override.yMax || typoAscent;\\n          var winDescent = -override.yMin || -typoDescent;\\n          return '\\\\x00\\\\x03' + '\\\\x02\\\\x24' + '\\\\x01\\\\xF4' + '\\\\x00\\\\x05' + '\\\\x00\\\\x00' + '\\\\x02\\\\x8A' + '\\\\x02\\\\xBB' + '\\\\x00\\\\x00' + '\\\\x00\\\\x8C' + '\\\\x02\\\\x8A' + '\\\\x02\\\\xBB' + '\\\\x00\\\\x00' + '\\\\x01\\\\xDF' + '\\\\x00\\\\x31' + '\\\\x01\\\\x02' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\\\x2A\\\\x32\\\\x31\\\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\\\x00\\\\x64' + string16(winAscent) + string16(winDescent) + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\\\x00\\\\x03';\\n        }\\n\\n        function createPostTable(properties) {\\n          var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\\n          return '\\\\x00\\\\x03\\\\x00\\\\x00' + (0, _util.string32)(angle) + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00';\\n        }\\n\\n        function createNameTable(name, proto) {\\n          if (!proto) {\\n            proto = [[], []];\\n          }\\n\\n          var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\\n          var stringsUnicode = [];\\n          var i, ii, j, jj, str;\\n\\n          for (i = 0, ii = strings.length; i < ii; i++) {\\n            str = proto[1][i] || strings[i];\\n            var strBufUnicode = [];\\n\\n            for (j = 0, jj = str.length; j < jj; j++) {\\n              strBufUnicode.push(string16(str.charCodeAt(j)));\\n            }\\n\\n            stringsUnicode.push(strBufUnicode.join(''));\\n          }\\n\\n          var names = [strings, stringsUnicode];\\n          var platforms = ['\\\\x00\\\\x01', '\\\\x00\\\\x03'];\\n          var encodings = ['\\\\x00\\\\x00', '\\\\x00\\\\x01'];\\n          var languages = ['\\\\x00\\\\x00', '\\\\x04\\\\x09'];\\n          var namesRecordCount = strings.length * platforms.length;\\n          var nameTable = '\\\\x00\\\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\\n          var strOffset = 0;\\n\\n          for (i = 0, ii = platforms.length; i < ii; i++) {\\n            var strs = names[i];\\n\\n            for (j = 0, jj = strs.length; j < jj; j++) {\\n              str = strs[j];\\n              var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\\n              nameTable += nameRecord;\\n              strOffset += str.length;\\n            }\\n          }\\n\\n          nameTable += strings.join('') + stringsUnicode.join('');\\n          return nameTable;\\n        }\\n\\n        Font.prototype = {\\n          name: null,\\n          font: null,\\n          mimetype: null,\\n          encoding: null,\\n          disableFontFace: false,\\n\\n          get renderer() {\\n            var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\\n\\n            return (0, _util.shadow)(this, 'renderer', renderer);\\n          },\\n\\n          exportData: function Font_exportData() {\\n            var data = {};\\n\\n            for (var i in this) {\\n              if (this.hasOwnProperty(i)) {\\n                data[i] = this[i];\\n              }\\n            }\\n\\n            return data;\\n          },\\n          fallbackToSystemFont: function Font_fallbackToSystemFont() {\\n            var _this = this;\\n\\n            this.missingFile = true;\\n            var charCode, unicode;\\n            var name = this.name;\\n            var type = this.type;\\n            var subtype = this.subtype;\\n            var fontName = name.replace(/[,_]/g, '-');\\n            var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\\n                nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\\n            var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\\n            fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\\n            this.bold = fontName.search(/bold/gi) !== -1;\\n            this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\\n            this.black = name.search(/Black/g) !== -1;\\n            this.remeasure = Object.keys(this.widths).length > 0;\\n\\n            if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.startsWith('Identity-')) {\\n              var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\\n              var map = [];\\n\\n              for (charCode in GlyphMapForStandardFonts) {\\n                map[+charCode] = GlyphMapForStandardFonts[charCode];\\n              }\\n\\n              if (/Arial-?Black/i.test(name)) {\\n                var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\\n\\n                for (charCode in SupplementalGlyphMapForArialBlack) {\\n                  map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\\n                }\\n              } else if (/Calibri/i.test(name)) {\\n                var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\\n\\n                for (charCode in SupplementalGlyphMapForCalibri) {\\n                  map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\\n                }\\n              }\\n\\n              var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\\n\\n              if (!isIdentityUnicode) {\\n                this.toUnicode.forEach(function (charCode, unicodeCharCode) {\\n                  map[+charCode] = unicodeCharCode;\\n                });\\n              }\\n\\n              this.toFontChar = map;\\n              this.toUnicode = new ToUnicodeMap(map);\\n            } else if (/Symbol/i.test(fontName)) {\\n              this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\\n            } else if (/Dingbats/i.test(fontName)) {\\n              if (/Wingdings/i.test(name)) {\\n                (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\\n              }\\n\\n              this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\\n            } else if (isStandardFont) {\\n              this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\\n            } else {\\n              var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n              this.toUnicode.forEach(function (charCode, unicodeCharCode) {\\n                if (!_this.composite) {\\n                  var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\\n                  unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\n\\n                  if (unicode !== -1) {\\n                    unicodeCharCode = unicode;\\n                  }\\n                }\\n\\n                _this.toFontChar[charCode] = unicodeCharCode;\\n              });\\n            }\\n\\n            this.loadedName = fontName.split('-')[0];\\n            this.fontType = getFontType(type, subtype);\\n          },\\n          checkAndRepair: function Font_checkAndRepair(name, font, properties) {\\n            var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\\n\\n            function readTables(file, numTables) {\\n              var tables = Object.create(null);\\n              tables['OS/2'] = null;\\n              tables['cmap'] = null;\\n              tables['head'] = null;\\n              tables['hhea'] = null;\\n              tables['hmtx'] = null;\\n              tables['maxp'] = null;\\n              tables['name'] = null;\\n              tables['post'] = null;\\n\\n              for (var i = 0; i < numTables; i++) {\\n                var table = readTableEntry(font);\\n\\n                if (!VALID_TABLES.includes(table.tag)) {\\n                  continue;\\n                }\\n\\n                if (table.length === 0) {\\n                  continue;\\n                }\\n\\n                tables[table.tag] = table;\\n              }\\n\\n              return tables;\\n            }\\n\\n            function readTableEntry(file) {\\n              var tag = (0, _util.bytesToString)(file.getBytes(4));\\n              var checksum = file.getInt32() >>> 0;\\n              var offset = file.getInt32() >>> 0;\\n              var length = file.getInt32() >>> 0;\\n              var previousPosition = file.pos;\\n              file.pos = file.start ? file.start : 0;\\n              file.skip(offset);\\n              var data = file.getBytes(length);\\n              file.pos = previousPosition;\\n\\n              if (tag === 'head') {\\n                data[8] = data[9] = data[10] = data[11] = 0;\\n                data[17] |= 0x20;\\n              }\\n\\n              return {\\n                tag: tag,\\n                checksum: checksum,\\n                length: length,\\n                offset: offset,\\n                data: data\\n              };\\n            }\\n\\n            function readOpenTypeHeader(ttf) {\\n              return {\\n                version: (0, _util.bytesToString)(ttf.getBytes(4)),\\n                numTables: ttf.getUint16(),\\n                searchRange: ttf.getUint16(),\\n                entrySelector: ttf.getUint16(),\\n                rangeShift: ttf.getUint16()\\n              };\\n            }\\n\\n            function readTrueTypeCollectionHeader(ttc) {\\n              var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\\n              (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\\n              var majorVersion = ttc.getUint16();\\n              var minorVersion = ttc.getUint16();\\n              var numFonts = ttc.getInt32() >>> 0;\\n              var offsetTable = [];\\n\\n              for (var i = 0; i < numFonts; i++) {\\n                offsetTable.push(ttc.getInt32() >>> 0);\\n              }\\n\\n              var header = {\\n                ttcTag: ttcTag,\\n                majorVersion: majorVersion,\\n                minorVersion: minorVersion,\\n                numFonts: numFonts,\\n                offsetTable: offsetTable\\n              };\\n\\n              switch (majorVersion) {\\n                case 1:\\n                  return header;\\n\\n                case 2:\\n                  header.dsigTag = ttc.getInt32() >>> 0;\\n                  header.dsigLength = ttc.getInt32() >>> 0;\\n                  header.dsigOffset = ttc.getInt32() >>> 0;\\n                  return header;\\n              }\\n\\n              throw new _util.FormatError(\\\"Invalid TrueType Collection majorVersion: \\\".concat(majorVersion, \\\".\\\"));\\n            }\\n\\n            function readTrueTypeCollectionData(ttc, fontName) {\\n              var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\\n                  numFonts = _readTrueTypeCollecti.numFonts,\\n                  offsetTable = _readTrueTypeCollecti.offsetTable;\\n\\n              for (var i = 0; i < numFonts; i++) {\\n                ttc.pos = (ttc.start || 0) + offsetTable[i];\\n                var potentialHeader = readOpenTypeHeader(ttc);\\n                var potentialTables = readTables(ttc, potentialHeader.numTables);\\n\\n                if (!potentialTables['name']) {\\n                  throw new _util.FormatError('TrueType Collection font must contain a \\\"name\\\" table.');\\n                }\\n\\n                var nameTable = readNameTable(potentialTables['name']);\\n\\n                for (var j = 0, jj = nameTable.length; j < jj; j++) {\\n                  for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\\n                    var nameEntry = nameTable[j][k];\\n\\n                    if (nameEntry && nameEntry.replace(/\\\\s/g, '') === fontName) {\\n                      return {\\n                        header: potentialHeader,\\n                        tables: potentialTables\\n                      };\\n                    }\\n                  }\\n                }\\n              }\\n\\n              throw new _util.FormatError(\\\"TrueType Collection does not contain \\\\\\\"\\\".concat(fontName, \\\"\\\\\\\" font.\\\"));\\n            }\\n\\n            function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\\n              if (!cmap) {\\n                (0, _util.warn)('No cmap table available.');\\n                return {\\n                  platformId: -1,\\n                  encodingId: -1,\\n                  mappings: [],\\n                  hasShortCmap: false\\n                };\\n              }\\n\\n              var segment;\\n              var start = (font.start ? font.start : 0) + cmap.offset;\\n              font.pos = start;\\n              font.getUint16();\\n              var numTables = font.getUint16();\\n              var potentialTable;\\n              var canBreak = false;\\n\\n              for (var i = 0; i < numTables; i++) {\\n                var platformId = font.getUint16();\\n                var encodingId = font.getUint16();\\n                var offset = font.getInt32() >>> 0;\\n                var useTable = false;\\n\\n                if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\\n                  continue;\\n                }\\n\\n                if (platformId === 0 && encodingId === 0) {\\n                  useTable = true;\\n                } else if (platformId === 1 && encodingId === 0) {\\n                  useTable = true;\\n                } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\\n                  useTable = true;\\n\\n                  if (!isSymbolicFont) {\\n                    canBreak = true;\\n                  }\\n                } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\\n                  useTable = true;\\n                  canBreak = true;\\n                }\\n\\n                if (useTable) {\\n                  potentialTable = {\\n                    platformId: platformId,\\n                    encodingId: encodingId,\\n                    offset: offset\\n                  };\\n                }\\n\\n                if (canBreak) {\\n                  break;\\n                }\\n              }\\n\\n              if (potentialTable) {\\n                font.pos = start + potentialTable.offset;\\n              }\\n\\n              if (!potentialTable || font.peekByte() === -1) {\\n                (0, _util.warn)('Could not find a preferred cmap table.');\\n                return {\\n                  platformId: -1,\\n                  encodingId: -1,\\n                  mappings: [],\\n                  hasShortCmap: false\\n                };\\n              }\\n\\n              var format = font.getUint16();\\n              font.getUint16();\\n              font.getUint16();\\n              var hasShortCmap = false;\\n              var mappings = [];\\n              var j, glyphId;\\n\\n              if (format === 0) {\\n                for (j = 0; j < 256; j++) {\\n                  var index = font.getByte();\\n\\n                  if (!index) {\\n                    continue;\\n                  }\\n\\n                  mappings.push({\\n                    charCode: j,\\n                    glyphId: index\\n                  });\\n                }\\n\\n                hasShortCmap = true;\\n              } else if (format === 4) {\\n                var segCount = font.getUint16() >> 1;\\n                font.getBytes(6);\\n                var segIndex,\\n                    segments = [];\\n\\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\\n                  segments.push({\\n                    end: font.getUint16()\\n                  });\\n                }\\n\\n                font.getUint16();\\n\\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\\n                  segments[segIndex].start = font.getUint16();\\n                }\\n\\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\\n                  segments[segIndex].delta = font.getUint16();\\n                }\\n\\n                var offsetsCount = 0;\\n\\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\\n                  segment = segments[segIndex];\\n                  var rangeOffset = font.getUint16();\\n\\n                  if (!rangeOffset) {\\n                    segment.offsetIndex = -1;\\n                    continue;\\n                  }\\n\\n                  var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\\n                  segment.offsetIndex = offsetIndex;\\n                  offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\\n                }\\n\\n                var offsets = [];\\n\\n                for (j = 0; j < offsetsCount; j++) {\\n                  offsets.push(font.getUint16());\\n                }\\n\\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\\n                  segment = segments[segIndex];\\n                  start = segment.start;\\n                  var end = segment.end;\\n                  var delta = segment.delta;\\n                  offsetIndex = segment.offsetIndex;\\n\\n                  for (j = start; j <= end; j++) {\\n                    if (j === 0xFFFF) {\\n                      continue;\\n                    }\\n\\n                    glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\\n                    glyphId = glyphId + delta & 0xFFFF;\\n                    mappings.push({\\n                      charCode: j,\\n                      glyphId: glyphId\\n                    });\\n                  }\\n                }\\n              } else if (format === 6) {\\n                var firstCode = font.getUint16();\\n                var entryCount = font.getUint16();\\n\\n                for (j = 0; j < entryCount; j++) {\\n                  glyphId = font.getUint16();\\n                  var charCode = firstCode + j;\\n                  mappings.push({\\n                    charCode: charCode,\\n                    glyphId: glyphId\\n                  });\\n                }\\n              } else {\\n                (0, _util.warn)('cmap table has unsupported format: ' + format);\\n                return {\\n                  platformId: -1,\\n                  encodingId: -1,\\n                  mappings: [],\\n                  hasShortCmap: false\\n                };\\n              }\\n\\n              mappings.sort(function (a, b) {\\n                return a.charCode - b.charCode;\\n              });\\n\\n              for (i = 1; i < mappings.length; i++) {\\n                if (mappings[i - 1].charCode === mappings[i].charCode) {\\n                  mappings.splice(i, 1);\\n                  i--;\\n                }\\n              }\\n\\n              return {\\n                platformId: potentialTable.platformId,\\n                encodingId: potentialTable.encodingId,\\n                mappings: mappings,\\n                hasShortCmap: hasShortCmap\\n              };\\n            }\\n\\n            function sanitizeMetrics(font, header, metrics, numGlyphs) {\\n              if (!header) {\\n                if (metrics) {\\n                  metrics.data = null;\\n                }\\n\\n                return;\\n              }\\n\\n              font.pos = (font.start ? font.start : 0) + header.offset;\\n              font.pos += 4;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 2;\\n              font.pos += 8;\\n              font.pos += 2;\\n              var numOfMetrics = font.getUint16();\\n\\n              if (numOfMetrics > numGlyphs) {\\n                (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\\n                numOfMetrics = numGlyphs;\\n                header.data[34] = (numOfMetrics & 0xff00) >> 8;\\n                header.data[35] = numOfMetrics & 0x00ff;\\n              }\\n\\n              var numOfSidebearings = numGlyphs - numOfMetrics;\\n              var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\\n\\n              if (numMissing > 0) {\\n                var entries = new Uint8Array(metrics.length + numMissing * 2);\\n                entries.set(metrics.data);\\n                metrics.data = entries;\\n              }\\n            }\\n\\n            function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\\n              var glyphProfile = {\\n                length: 0,\\n                sizeOfInstructions: 0\\n              };\\n\\n              if (sourceEnd - sourceStart <= 12) {\\n                return glyphProfile;\\n              }\\n\\n              var glyf = source.subarray(sourceStart, sourceEnd);\\n              var contoursCount = signedInt16(glyf[0], glyf[1]);\\n\\n              if (contoursCount < 0) {\\n                contoursCount = -1;\\n                writeSignedInt16(glyf, 0, contoursCount);\\n                dest.set(glyf, destStart);\\n                glyphProfile.length = glyf.length;\\n                return glyphProfile;\\n              }\\n\\n              var i,\\n                  j = 10,\\n                  flagsCount = 0;\\n\\n              for (i = 0; i < contoursCount; i++) {\\n                var endPoint = glyf[j] << 8 | glyf[j + 1];\\n                flagsCount = endPoint + 1;\\n                j += 2;\\n              }\\n\\n              var instructionsStart = j;\\n              var instructionsLength = glyf[j] << 8 | glyf[j + 1];\\n              glyphProfile.sizeOfInstructions = instructionsLength;\\n              j += 2 + instructionsLength;\\n              var instructionsEnd = j;\\n              var coordinatesLength = 0;\\n\\n              for (i = 0; i < flagsCount; i++) {\\n                var flag = glyf[j++];\\n\\n                if (flag & 0xC0) {\\n                  glyf[j - 1] = flag & 0x3F;\\n                }\\n\\n                var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\\n                coordinatesLength += xyLength;\\n\\n                if (flag & 8) {\\n                  var repeat = glyf[j++];\\n                  i += repeat;\\n                  coordinatesLength += repeat * xyLength;\\n                }\\n              }\\n\\n              if (coordinatesLength === 0) {\\n                return glyphProfile;\\n              }\\n\\n              var glyphDataLength = j + coordinatesLength;\\n\\n              if (glyphDataLength > glyf.length) {\\n                return glyphProfile;\\n              }\\n\\n              if (!hintsValid && instructionsLength > 0) {\\n                dest.set(glyf.subarray(0, instructionsStart), destStart);\\n                dest.set([0, 0], destStart + instructionsStart);\\n                dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\\n                glyphDataLength -= instructionsLength;\\n\\n                if (glyf.length - glyphDataLength > 3) {\\n                  glyphDataLength = glyphDataLength + 3 & ~3;\\n                }\\n\\n                glyphProfile.length = glyphDataLength;\\n                return glyphProfile;\\n              }\\n\\n              if (glyf.length - glyphDataLength > 3) {\\n                glyphDataLength = glyphDataLength + 3 & ~3;\\n                dest.set(glyf.subarray(0, glyphDataLength), destStart);\\n                glyphProfile.length = glyphDataLength;\\n                return glyphProfile;\\n              }\\n\\n              dest.set(glyf, destStart);\\n              glyphProfile.length = glyf.length;\\n              return glyphProfile;\\n            }\\n\\n            function sanitizeHead(head, numGlyphs, locaLength) {\\n              var data = head.data;\\n              var version = int32(data[0], data[1], data[2], data[3]);\\n\\n              if (version >> 16 !== 1) {\\n                (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\\n                data[0] = 0;\\n                data[1] = 1;\\n                data[2] = 0;\\n                data[3] = 0;\\n              }\\n\\n              var indexToLocFormat = int16(data[50], data[51]);\\n\\n              if (indexToLocFormat < 0 || indexToLocFormat > 1) {\\n                (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\\n                var numGlyphsPlusOne = numGlyphs + 1;\\n\\n                if (locaLength === numGlyphsPlusOne << 1) {\\n                  data[50] = 0;\\n                  data[51] = 0;\\n                } else if (locaLength === numGlyphsPlusOne << 2) {\\n                  data[50] = 0;\\n                  data[51] = 1;\\n                } else {\\n                  throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\\n                }\\n              }\\n            }\\n\\n            function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\\n              var itemSize, itemDecode, itemEncode;\\n\\n              if (isGlyphLocationsLong) {\\n                itemSize = 4;\\n\\n                itemDecode = function fontItemDecodeLong(data, offset) {\\n                  return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n                };\\n\\n                itemEncode = function fontItemEncodeLong(data, offset, value) {\\n                  data[offset] = value >>> 24 & 0xFF;\\n                  data[offset + 1] = value >> 16 & 0xFF;\\n                  data[offset + 2] = value >> 8 & 0xFF;\\n                  data[offset + 3] = value & 0xFF;\\n                };\\n              } else {\\n                itemSize = 2;\\n\\n                itemDecode = function fontItemDecode(data, offset) {\\n                  return data[offset] << 9 | data[offset + 1] << 1;\\n                };\\n\\n                itemEncode = function fontItemEncode(data, offset, value) {\\n                  data[offset] = value >> 9 & 0xFF;\\n                  data[offset + 1] = value >> 1 & 0xFF;\\n                };\\n              }\\n\\n              var numGlyphsOut = dupFirstEntry ? numGlyphs + 1 : numGlyphs;\\n              var locaData = loca.data;\\n              var locaDataSize = itemSize * (1 + numGlyphsOut);\\n              locaData = new Uint8Array(locaDataSize);\\n              locaData.set(loca.data.subarray(0, locaDataSize));\\n              loca.data = locaData;\\n              var oldGlyfData = glyf.data;\\n              var oldGlyfDataLength = oldGlyfData.length;\\n              var newGlyfData = new Uint8Array(oldGlyfDataLength);\\n              var startOffset = itemDecode(locaData, 0);\\n              var writeOffset = 0;\\n              var missingGlyphs = Object.create(null);\\n              itemEncode(locaData, 0, writeOffset);\\n              var i, j;\\n\\n              for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\\n                var endOffset = itemDecode(locaData, j);\\n\\n                if (endOffset === 0) {\\n                  endOffset = startOffset;\\n                }\\n\\n                if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\\n                  endOffset = oldGlyfDataLength;\\n                }\\n\\n                if (endOffset > oldGlyfDataLength) {\\n                  startOffset = endOffset;\\n                }\\n\\n                var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\\n                var newLength = glyphProfile.length;\\n\\n                if (newLength === 0) {\\n                  missingGlyphs[i] = true;\\n                }\\n\\n                if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\\n                  maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\\n                }\\n\\n                writeOffset += newLength;\\n                itemEncode(locaData, j, writeOffset);\\n                startOffset = endOffset;\\n              }\\n\\n              if (writeOffset === 0) {\\n                var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\\n\\n                for (i = 0, j = itemSize; i < numGlyphsOut; i++, j += itemSize) {\\n                  itemEncode(locaData, j, simpleGlyph.length);\\n                }\\n\\n                glyf.data = simpleGlyph;\\n              } else if (dupFirstEntry) {\\n                var firstEntryLength = itemDecode(locaData, itemSize);\\n\\n                if (newGlyfData.length > firstEntryLength + writeOffset) {\\n                  glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\\n                } else {\\n                  glyf.data = new Uint8Array(firstEntryLength + writeOffset);\\n                  glyf.data.set(newGlyfData.subarray(0, writeOffset));\\n                }\\n\\n                glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\\n                itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\\n              } else {\\n                glyf.data = newGlyfData.subarray(0, writeOffset);\\n              }\\n\\n              return {\\n                missingGlyphs: missingGlyphs,\\n                maxSizeOfInstructions: maxSizeOfInstructions\\n              };\\n            }\\n\\n            function readPostScriptTable(post, properties, maxpNumGlyphs) {\\n              var start = (font.start ? font.start : 0) + post.offset;\\n              font.pos = start;\\n              var length = post.length,\\n                  end = start + length;\\n              var version = font.getInt32();\\n              font.getBytes(28);\\n              var glyphNames;\\n              var valid = true;\\n              var i;\\n\\n              switch (version) {\\n                case 0x00010000:\\n                  glyphNames = MacStandardGlyphOrdering;\\n                  break;\\n\\n                case 0x00020000:\\n                  var numGlyphs = font.getUint16();\\n\\n                  if (numGlyphs !== maxpNumGlyphs) {\\n                    valid = false;\\n                    break;\\n                  }\\n\\n                  var glyphNameIndexes = [];\\n\\n                  for (i = 0; i < numGlyphs; ++i) {\\n                    var index = font.getUint16();\\n\\n                    if (index >= 32768) {\\n                      valid = false;\\n                      break;\\n                    }\\n\\n                    glyphNameIndexes.push(index);\\n                  }\\n\\n                  if (!valid) {\\n                    break;\\n                  }\\n\\n                  var customNames = [];\\n                  var strBuf = [];\\n\\n                  while (font.pos < end) {\\n                    var stringLength = font.getByte();\\n                    strBuf.length = stringLength;\\n\\n                    for (i = 0; i < stringLength; ++i) {\\n                      strBuf[i] = String.fromCharCode(font.getByte());\\n                    }\\n\\n                    customNames.push(strBuf.join(''));\\n                  }\\n\\n                  glyphNames = [];\\n\\n                  for (i = 0; i < numGlyphs; ++i) {\\n                    var j = glyphNameIndexes[i];\\n\\n                    if (j < 258) {\\n                      glyphNames.push(MacStandardGlyphOrdering[j]);\\n                      continue;\\n                    }\\n\\n                    glyphNames.push(customNames[j - 258]);\\n                  }\\n\\n                  break;\\n\\n                case 0x00030000:\\n                  break;\\n\\n                default:\\n                  (0, _util.warn)('Unknown/unsupported post table version ' + version);\\n                  valid = false;\\n\\n                  if (properties.defaultEncoding) {\\n                    glyphNames = properties.defaultEncoding;\\n                  }\\n\\n                  break;\\n              }\\n\\n              properties.glyphNames = glyphNames;\\n              return valid;\\n            }\\n\\n            function readNameTable(nameTable) {\\n              var start = (font.start ? font.start : 0) + nameTable.offset;\\n              font.pos = start;\\n              var names = [[], []];\\n              var length = nameTable.length,\\n                  end = start + length;\\n              var format = font.getUint16();\\n              var FORMAT_0_HEADER_LENGTH = 6;\\n\\n              if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\\n                return names;\\n              }\\n\\n              var numRecords = font.getUint16();\\n              var stringsStart = font.getUint16();\\n              var records = [];\\n              var NAME_RECORD_LENGTH = 12;\\n              var i, ii;\\n\\n              for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\\n                var r = {\\n                  platform: font.getUint16(),\\n                  encoding: font.getUint16(),\\n                  language: font.getUint16(),\\n                  name: font.getUint16(),\\n                  length: font.getUint16(),\\n                  offset: font.getUint16()\\n                };\\n\\n                if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\\n                  records.push(r);\\n                }\\n              }\\n\\n              for (i = 0, ii = records.length; i < ii; i++) {\\n                var record = records[i];\\n\\n                if (record.length <= 0) {\\n                  continue;\\n                }\\n\\n                var pos = start + stringsStart + record.offset;\\n\\n                if (pos + record.length > end) {\\n                  continue;\\n                }\\n\\n                font.pos = pos;\\n                var nameIndex = record.name;\\n\\n                if (record.encoding) {\\n                  var str = '';\\n\\n                  for (var j = 0, jj = record.length; j < jj; j += 2) {\\n                    str += String.fromCharCode(font.getUint16());\\n                  }\\n\\n                  names[1][nameIndex] = str;\\n                } else {\\n                  names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\\n                }\\n              }\\n\\n              return names;\\n            }\\n\\n            var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\\n\\n            function sanitizeTTProgram(table, ttContext) {\\n              var data = table.data;\\n              var i = 0,\\n                  j,\\n                  n,\\n                  b,\\n                  funcId,\\n                  pc,\\n                  lastEndf = 0,\\n                  lastDeff = 0;\\n              var stack = [];\\n              var callstack = [];\\n              var functionsCalled = [];\\n              var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\\n              var inFDEF = false,\\n                  ifLevel = 0,\\n                  inELSE = 0;\\n\\n              for (var ii = data.length; i < ii;) {\\n                var op = data[i++];\\n\\n                if (op === 0x40) {\\n                  n = data[i++];\\n\\n                  if (inFDEF || inELSE) {\\n                    i += n;\\n                  } else {\\n                    for (j = 0; j < n; j++) {\\n                      stack.push(data[i++]);\\n                    }\\n                  }\\n                } else if (op === 0x41) {\\n                  n = data[i++];\\n\\n                  if (inFDEF || inELSE) {\\n                    i += n * 2;\\n                  } else {\\n                    for (j = 0; j < n; j++) {\\n                      b = data[i++];\\n                      stack.push(b << 8 | data[i++]);\\n                    }\\n                  }\\n                } else if ((op & 0xF8) === 0xB0) {\\n                  n = op - 0xB0 + 1;\\n\\n                  if (inFDEF || inELSE) {\\n                    i += n;\\n                  } else {\\n                    for (j = 0; j < n; j++) {\\n                      stack.push(data[i++]);\\n                    }\\n                  }\\n                } else if ((op & 0xF8) === 0xB8) {\\n                  n = op - 0xB8 + 1;\\n\\n                  if (inFDEF || inELSE) {\\n                    i += n * 2;\\n                  } else {\\n                    for (j = 0; j < n; j++) {\\n                      b = data[i++];\\n                      stack.push(b << 8 | data[i++]);\\n                    }\\n                  }\\n                } else if (op === 0x2B && !tooComplexToFollowFunctions) {\\n                  if (!inFDEF && !inELSE) {\\n                    funcId = stack[stack.length - 1];\\n\\n                    if (isNaN(funcId)) {\\n                      (0, _util.info)('TT: CALL empty stack (or invalid entry).');\\n                    } else {\\n                      ttContext.functionsUsed[funcId] = true;\\n\\n                      if (funcId in ttContext.functionsStackDeltas) {\\n                        var newStackLength = stack.length + ttContext.functionsStackDeltas[funcId];\\n\\n                        if (newStackLength < 0) {\\n                          (0, _util.warn)('TT: CALL invalid functions stack delta.');\\n                          ttContext.hintsValid = false;\\n                          return;\\n                        }\\n\\n                        stack.length = newStackLength;\\n                      } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\\n                        callstack.push({\\n                          data: data,\\n                          i: i,\\n                          stackTop: stack.length - 1\\n                        });\\n                        functionsCalled.push(funcId);\\n                        pc = ttContext.functionsDefined[funcId];\\n\\n                        if (!pc) {\\n                          (0, _util.warn)('TT: CALL non-existent function');\\n                          ttContext.hintsValid = false;\\n                          return;\\n                        }\\n\\n                        data = pc.data;\\n                        i = pc.i;\\n                      }\\n                    }\\n                  }\\n                } else if (op === 0x2C && !tooComplexToFollowFunctions) {\\n                  if (inFDEF || inELSE) {\\n                    (0, _util.warn)('TT: nested FDEFs not allowed');\\n                    tooComplexToFollowFunctions = true;\\n                  }\\n\\n                  inFDEF = true;\\n                  lastDeff = i;\\n                  funcId = stack.pop();\\n                  ttContext.functionsDefined[funcId] = {\\n                    data: data,\\n                    i: i\\n                  };\\n                } else if (op === 0x2D) {\\n                  if (inFDEF) {\\n                    inFDEF = false;\\n                    lastEndf = i;\\n                  } else {\\n                    pc = callstack.pop();\\n\\n                    if (!pc) {\\n                      (0, _util.warn)('TT: ENDF bad stack');\\n                      ttContext.hintsValid = false;\\n                      return;\\n                    }\\n\\n                    funcId = functionsCalled.pop();\\n                    data = pc.data;\\n                    i = pc.i;\\n                    ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\\n                  }\\n                } else if (op === 0x89) {\\n                  if (inFDEF || inELSE) {\\n                    (0, _util.warn)('TT: nested IDEFs not allowed');\\n                    tooComplexToFollowFunctions = true;\\n                  }\\n\\n                  inFDEF = true;\\n                  lastDeff = i;\\n                } else if (op === 0x58) {\\n                  ++ifLevel;\\n                } else if (op === 0x1B) {\\n                  inELSE = ifLevel;\\n                } else if (op === 0x59) {\\n                  if (inELSE === ifLevel) {\\n                    inELSE = 0;\\n                  }\\n\\n                  --ifLevel;\\n                } else if (op === 0x1C) {\\n                  if (!inFDEF && !inELSE) {\\n                    var offset = stack[stack.length - 1];\\n\\n                    if (offset > 0) {\\n                      i += offset - 1;\\n                    }\\n                  }\\n                }\\n\\n                if (!inFDEF && !inELSE) {\\n                  var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\\n\\n                  if (op >= 0x71 && op <= 0x75) {\\n                    n = stack.pop();\\n\\n                    if (!isNaN(n)) {\\n                      stackDelta = -n * 2;\\n                    }\\n                  }\\n\\n                  while (stackDelta < 0 && stack.length > 0) {\\n                    stack.pop();\\n                    stackDelta++;\\n                  }\\n\\n                  while (stackDelta > 0) {\\n                    stack.push(NaN);\\n                    stackDelta--;\\n                  }\\n                }\\n              }\\n\\n              ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\\n              var content = [data];\\n\\n              if (i > data.length) {\\n                content.push(new Uint8Array(i - data.length));\\n              }\\n\\n              if (lastDeff > lastEndf) {\\n                (0, _util.warn)('TT: complementing a missing function tail');\\n                content.push(new Uint8Array([0x22, 0x2D]));\\n              }\\n\\n              foldTTTable(table, content);\\n            }\\n\\n            function checkInvalidFunctions(ttContext, maxFunctionDefs) {\\n              if (ttContext.tooComplexToFollowFunctions) {\\n                return;\\n              }\\n\\n              if (ttContext.functionsDefined.length > maxFunctionDefs) {\\n                (0, _util.warn)('TT: more functions defined than expected');\\n                ttContext.hintsValid = false;\\n                return;\\n              }\\n\\n              for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\\n                if (j > maxFunctionDefs) {\\n                  (0, _util.warn)('TT: invalid function id: ' + j);\\n                  ttContext.hintsValid = false;\\n                  return;\\n                }\\n\\n                if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\\n                  (0, _util.warn)('TT: undefined function: ' + j);\\n                  ttContext.hintsValid = false;\\n                  return;\\n                }\\n              }\\n            }\\n\\n            function foldTTTable(table, content) {\\n              if (content.length > 1) {\\n                var newLength = 0;\\n                var j, jj;\\n\\n                for (j = 0, jj = content.length; j < jj; j++) {\\n                  newLength += content[j].length;\\n                }\\n\\n                newLength = newLength + 3 & ~3;\\n                var result = new Uint8Array(newLength);\\n                var pos = 0;\\n\\n                for (j = 0, jj = content.length; j < jj; j++) {\\n                  result.set(content[j], pos);\\n                  pos += content[j].length;\\n                }\\n\\n                table.data = result;\\n                table.length = newLength;\\n              }\\n            }\\n\\n            function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\\n              var ttContext = {\\n                functionsDefined: [],\\n                functionsUsed: [],\\n                functionsStackDeltas: [],\\n                tooComplexToFollowFunctions: false,\\n                hintsValid: true\\n              };\\n\\n              if (fpgm) {\\n                sanitizeTTProgram(fpgm, ttContext);\\n              }\\n\\n              if (prep) {\\n                sanitizeTTProgram(prep, ttContext);\\n              }\\n\\n              if (fpgm) {\\n                checkInvalidFunctions(ttContext, maxFunctionDefs);\\n              }\\n\\n              if (cvt && cvt.length & 1) {\\n                var cvtData = new Uint8Array(cvt.length + 1);\\n                cvtData.set(cvt.data);\\n                cvt.data = cvtData;\\n              }\\n\\n              return ttContext.hintsValid;\\n            }\\n\\n            font = new _stream.Stream(new Uint8Array(font.getBytes()));\\n            var header, tables;\\n\\n            if (isTrueTypeCollectionFile(font)) {\\n              var ttcData = readTrueTypeCollectionData(font, this.name);\\n              header = ttcData.header;\\n              tables = ttcData.tables;\\n            } else {\\n              header = readOpenTypeHeader(font);\\n              tables = readTables(font, header.numTables);\\n            }\\n\\n            var cff, cffFile;\\n            var isTrueType = !tables['CFF '];\\n\\n            if (!isTrueType) {\\n              var isComposite = properties.composite && ((properties.cidToGidMap || []).length > 0 || !(properties.cMap instanceof _cmap.IdentityCMap));\\n\\n              if (header.version === 'OTTO' && !isComposite || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\\n                cffFile = new _stream.Stream(tables['CFF '].data);\\n                cff = new CFFFont(cffFile, properties);\\n                adjustWidths(properties);\\n                return this.convert(name, cff, properties);\\n              }\\n\\n              delete tables['glyf'];\\n              delete tables['loca'];\\n              delete tables['fpgm'];\\n              delete tables['prep'];\\n              delete tables['cvt '];\\n              this.isOpenType = true;\\n            } else {\\n              if (!tables['loca']) {\\n                throw new _util.FormatError('Required \\\"loca\\\" table is not found');\\n              }\\n\\n              if (!tables['glyf']) {\\n                (0, _util.warn)('Required \\\"glyf\\\" table is not found -- trying to recover.');\\n                tables['glyf'] = {\\n                  tag: 'glyf',\\n                  data: new Uint8Array(0)\\n                };\\n              }\\n\\n              this.isOpenType = false;\\n            }\\n\\n            if (!tables['maxp']) {\\n              throw new _util.FormatError('Required \\\"maxp\\\" table is not found');\\n            }\\n\\n            font.pos = (font.start || 0) + tables['maxp'].offset;\\n            var version = font.getInt32();\\n            var numGlyphs = font.getUint16();\\n            var numGlyphsOut = numGlyphs + 1;\\n            var dupFirstEntry = true;\\n\\n            if (numGlyphsOut > 0xFFFF) {\\n              dupFirstEntry = false;\\n              numGlyphsOut = numGlyphs;\\n              (0, _util.warn)('Not enough space in glyfs to duplicate first glyph.');\\n            }\\n\\n            var maxFunctionDefs = 0;\\n            var maxSizeOfInstructions = 0;\\n\\n            if (version >= 0x00010000 && tables['maxp'].length >= 22) {\\n              font.pos += 8;\\n              var maxZones = font.getUint16();\\n\\n              if (maxZones > 2) {\\n                tables['maxp'].data[14] = 0;\\n                tables['maxp'].data[15] = 2;\\n              }\\n\\n              font.pos += 4;\\n              maxFunctionDefs = font.getUint16();\\n              font.pos += 4;\\n              maxSizeOfInstructions = font.getUint16();\\n            }\\n\\n            tables['maxp'].data[4] = numGlyphsOut >> 8;\\n            tables['maxp'].data[5] = numGlyphsOut & 255;\\n            var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\\n\\n            if (!hintsValid) {\\n              delete tables['fpgm'];\\n              delete tables['prep'];\\n              delete tables['cvt '];\\n            }\\n\\n            sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphsOut);\\n\\n            if (!tables['head']) {\\n              throw new _util.FormatError('Required \\\"head\\\" table is not found');\\n            }\\n\\n            sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\\n            var missingGlyphs = Object.create(null);\\n\\n            if (isTrueType) {\\n              var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\\n              var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\\n              missingGlyphs = glyphsInfo.missingGlyphs;\\n\\n              if (version >= 0x00010000 && tables['maxp'].length >= 22) {\\n                tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\\n                tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\\n              }\\n            }\\n\\n            if (!tables['hhea']) {\\n              throw new _util.FormatError('Required \\\"hhea\\\" table is not found');\\n            }\\n\\n            if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\\n              tables['hhea'].data[10] = 0xFF;\\n              tables['hhea'].data[11] = 0xFF;\\n            }\\n\\n            var metricsOverride = {\\n              unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\\n              yMax: int16(tables['head'].data[42], tables['head'].data[43]),\\n              yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\\n              ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\\n              descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\\n            };\\n            this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\\n            this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\\n\\n            if (tables['post']) {\\n              readPostScriptTable(tables['post'], properties, numGlyphs);\\n            }\\n\\n            tables['post'] = {\\n              tag: 'post',\\n              data: createPostTable(properties)\\n            };\\n            var charCodeToGlyphId = [],\\n                charCode;\\n\\n            function hasGlyph(glyphId) {\\n              return !missingGlyphs[glyphId];\\n            }\\n\\n            if (properties.composite) {\\n              var cidToGidMap = properties.cidToGidMap || [];\\n              var isCidToGidMapEmpty = cidToGidMap.length === 0;\\n              properties.cMap.forEach(function (charCode, cid) {\\n                if (cid > 0xffff) {\\n                  throw new _util.FormatError('Max size of CID is 65,535');\\n                }\\n\\n                var glyphId = -1;\\n\\n                if (isCidToGidMapEmpty) {\\n                  glyphId = cid;\\n                } else if (cidToGidMap[cid] !== undefined) {\\n                  glyphId = cidToGidMap[cid];\\n                }\\n\\n                if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\\n                  charCodeToGlyphId[charCode] = glyphId;\\n                }\\n              });\\n            } else {\\n              var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\\n              var cmapPlatformId = cmapTable.platformId;\\n              var cmapEncodingId = cmapTable.encodingId;\\n              var cmapMappings = cmapTable.mappings;\\n              var cmapMappingsLength = cmapMappings.length;\\n\\n              if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\\n                var baseEncoding = [];\\n\\n                if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\\n                  baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\\n                }\\n\\n                var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n\\n                for (charCode = 0; charCode < 256; charCode++) {\\n                  var glyphName, standardGlyphName;\\n\\n                  if (this.differences && charCode in this.differences) {\\n                    glyphName = this.differences[charCode];\\n                  } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\\n                    glyphName = baseEncoding[charCode];\\n                  } else {\\n                    glyphName = _encodings.StandardEncoding[charCode];\\n                  }\\n\\n                  if (!glyphName) {\\n                    continue;\\n                  }\\n\\n                  standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\\n                  var unicodeOrCharCode;\\n\\n                  if (cmapPlatformId === 3 && cmapEncodingId === 1) {\\n                    unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\\n                  } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\\n                    unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\\n                  }\\n\\n                  var found = false;\\n\\n                  for (var i = 0; i < cmapMappingsLength; ++i) {\\n                    if (cmapMappings[i].charCode !== unicodeOrCharCode) {\\n                      continue;\\n                    }\\n\\n                    charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\\n                    found = true;\\n                    break;\\n                  }\\n\\n                  if (!found && properties.glyphNames) {\\n                    var glyphId = properties.glyphNames.indexOf(glyphName);\\n\\n                    if (glyphId === -1 && standardGlyphName !== glyphName) {\\n                      glyphId = properties.glyphNames.indexOf(standardGlyphName);\\n                    }\\n\\n                    if (glyphId > 0 && hasGlyph(glyphId)) {\\n                      charCodeToGlyphId[charCode] = glyphId;\\n                    }\\n                  }\\n                }\\n              } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\\n                for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\\n                  charCodeToGlyphId[cmapMappings[_i2].charCode] = cmapMappings[_i2].glyphId;\\n                }\\n              } else {\\n                for (var _i3 = 0; _i3 < cmapMappingsLength; ++_i3) {\\n                  charCode = cmapMappings[_i3].charCode;\\n\\n                  if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\\n                    charCode &= 0xFF;\\n                  }\\n\\n                  charCodeToGlyphId[charCode] = cmapMappings[_i3].glyphId;\\n                }\\n              }\\n            }\\n\\n            if (charCodeToGlyphId.length === 0) {\\n              charCodeToGlyphId[0] = 0;\\n            }\\n\\n            var glyphZeroId = numGlyphsOut - 1;\\n\\n            if (!dupFirstEntry) {\\n              glyphZeroId = 0;\\n            }\\n\\n            var newMapping = adjustMapping(charCodeToGlyphId, hasGlyph, glyphZeroId);\\n            this.toFontChar = newMapping.toFontChar;\\n            tables['cmap'] = {\\n              tag: 'cmap',\\n              data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphsOut)\\n            };\\n\\n            if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\\n              tables['OS/2'] = {\\n                tag: 'OS/2',\\n                data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\\n              };\\n            }\\n\\n            if (!isTrueType) {\\n              try {\\n                cffFile = new _stream.Stream(tables['CFF '].data);\\n                var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\\n                cff = parser.parse();\\n                cff.duplicateFirstGlyph();\\n                var compiler = new _cff_parser.CFFCompiler(cff);\\n                tables['CFF '].data = compiler.compile();\\n              } catch (e) {\\n                (0, _util.warn)('Failed to compile font ' + properties.loadedName);\\n              }\\n            }\\n\\n            if (!tables['name']) {\\n              tables['name'] = {\\n                tag: 'name',\\n                data: createNameTable(this.name)\\n              };\\n            } else {\\n              var namePrototype = readNameTable(tables['name']);\\n              tables['name'].data = createNameTable(name, namePrototype);\\n            }\\n\\n            var builder = new OpenTypeFileBuilder(header.version);\\n\\n            for (var tableTag in tables) {\\n              builder.addTable(tableTag, tables[tableTag].data);\\n            }\\n\\n            return builder.toArray();\\n          },\\n          convert: function Font_convert(fontName, font, properties) {\\n            properties.fixedPitch = false;\\n\\n            if (properties.builtInEncoding) {\\n              adjustToUnicode(properties, properties.builtInEncoding);\\n            }\\n\\n            var glyphZeroId = 1;\\n\\n            if (font instanceof CFFFont) {\\n              glyphZeroId = font.numGlyphs - 1;\\n            }\\n\\n            var mapping = font.getGlyphMapping(properties);\\n            var newMapping = adjustMapping(mapping, font.hasGlyphId.bind(font), glyphZeroId);\\n            this.toFontChar = newMapping.toFontChar;\\n            var numGlyphs = font.numGlyphs;\\n\\n            function getCharCodes(charCodeToGlyphId, glyphId) {\\n              var charCodes = null;\\n\\n              for (var charCode in charCodeToGlyphId) {\\n                if (glyphId === charCodeToGlyphId[charCode]) {\\n                  if (!charCodes) {\\n                    charCodes = [];\\n                  }\\n\\n                  charCodes.push(charCode | 0);\\n                }\\n              }\\n\\n              return charCodes;\\n            }\\n\\n            function createCharCode(charCodeToGlyphId, glyphId) {\\n              for (var charCode in charCodeToGlyphId) {\\n                if (glyphId === charCodeToGlyphId[charCode]) {\\n                  return charCode | 0;\\n                }\\n              }\\n\\n              newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\\n              return newMapping.nextAvailableFontCharCode++;\\n            }\\n\\n            var seacs = font.seacs;\\n\\n            if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\\n              var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\n              var charset = font.getCharset();\\n              var seacMap = Object.create(null);\\n\\n              for (var glyphId in seacs) {\\n                glyphId |= 0;\\n                var seac = seacs[glyphId];\\n                var baseGlyphName = _encodings.StandardEncoding[seac[2]];\\n                var accentGlyphName = _encodings.StandardEncoding[seac[3]];\\n                var baseGlyphId = charset.indexOf(baseGlyphName);\\n                var accentGlyphId = charset.indexOf(accentGlyphName);\\n\\n                if (baseGlyphId < 0 || accentGlyphId < 0) {\\n                  continue;\\n                }\\n\\n                var accentOffset = {\\n                  x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\\n                  y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\\n                };\\n                var charCodes = getCharCodes(mapping, glyphId);\\n\\n                if (!charCodes) {\\n                  continue;\\n                }\\n\\n                for (var i = 0, ii = charCodes.length; i < ii; i++) {\\n                  var charCode = charCodes[i];\\n                  var charCodeToGlyphId = newMapping.charCodeToGlyphId;\\n                  var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\\n                  var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\\n                  seacMap[charCode] = {\\n                    baseFontCharCode: baseFontCharCode,\\n                    accentFontCharCode: accentFontCharCode,\\n                    accentOffset: accentOffset\\n                  };\\n                }\\n              }\\n\\n              properties.seacMap = seacMap;\\n            }\\n\\n            var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\\n            var builder = new OpenTypeFileBuilder('\\\\x4F\\\\x54\\\\x54\\\\x4F');\\n            builder.addTable('CFF ', font.data);\\n            builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\\n            builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\\n            builder.addTable('head', '\\\\x00\\\\x01\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x10\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x5F\\\\x0F\\\\x3C\\\\xF5' + '\\\\x00\\\\x00' + safeString16(unitsPerEm) + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x9e\\\\x0b\\\\x7e\\\\x27' + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x9e\\\\x0b\\\\x7e\\\\x27' + '\\\\x00\\\\x00' + safeString16(properties.descent) + '\\\\x0F\\\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\\\x00\\\\x11' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00');\\n            builder.addTable('hhea', '\\\\x00\\\\x01\\\\x00\\\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\\\x00\\\\x00' + '\\\\xFF\\\\xFF' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + string16(numGlyphs));\\n            builder.addTable('hmtx', function fontFieldsHmtx() {\\n              var charstrings = font.charstrings;\\n              var cffWidths = font.cff ? font.cff.widths : null;\\n              var hmtx = '\\\\x00\\\\x00\\\\x00\\\\x00';\\n\\n              for (var i = 1, ii = numGlyphs; i < ii; i++) {\\n                var width = 0;\\n\\n                if (charstrings) {\\n                  var charstring = charstrings[i - 1];\\n                  width = 'width' in charstring ? charstring.width : 0;\\n                } else if (cffWidths) {\\n                  width = Math.ceil(cffWidths[i] || 0);\\n                }\\n\\n                hmtx += string16(width) + string16(0);\\n              }\\n\\n              return hmtx;\\n            }());\\n            builder.addTable('maxp', '\\\\x00\\\\x00\\\\x50\\\\x00' + string16(numGlyphs));\\n            builder.addTable('name', createNameTable(fontName));\\n            builder.addTable('post', createPostTable(properties));\\n            return builder.toArray();\\n          },\\n\\n          get spaceWidth() {\\n            if ('_shadowWidth' in this) {\\n              return this._shadowWidth;\\n            }\\n\\n            var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\\n            var width;\\n\\n            for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\\n              var glyphName = possibleSpaceReplacements[i];\\n\\n              if (glyphName in this.widths) {\\n                width = this.widths[glyphName];\\n                break;\\n              }\\n\\n              var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n              var glyphUnicode = glyphsUnicodeMap[glyphName];\\n              var charcode = 0;\\n\\n              if (this.composite) {\\n                if (this.cMap.contains(glyphUnicode)) {\\n                  charcode = this.cMap.lookup(glyphUnicode);\\n                }\\n              }\\n\\n              if (!charcode && this.toUnicode) {\\n                charcode = this.toUnicode.charCodeOf(glyphUnicode);\\n              }\\n\\n              if (charcode <= 0) {\\n                charcode = glyphUnicode;\\n              }\\n\\n              width = this.widths[charcode];\\n\\n              if (width) {\\n                break;\\n              }\\n            }\\n\\n            width = width || this.defaultWidth;\\n            this._shadowWidth = width;\\n            return width;\\n          },\\n\\n          charToGlyph: function Font_charToGlyph(charcode, isSpace) {\\n            var fontCharCode, width, operatorListId;\\n            var widthCode = charcode;\\n\\n            if (this.cMap && this.cMap.contains(charcode)) {\\n              widthCode = this.cMap.lookup(charcode);\\n            }\\n\\n            width = this.widths[widthCode];\\n            width = (0, _util.isNum)(width) ? width : this.defaultWidth;\\n            var vmetric = this.vmetrics && this.vmetrics[widthCode];\\n            var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\\n\\n            if (typeof unicode === 'number') {\\n              unicode = String.fromCharCode(unicode);\\n            }\\n\\n            var isInFont = charcode in this.toFontChar;\\n            fontCharCode = this.toFontChar[charcode] || charcode;\\n\\n            if (this.missingFile) {\\n              fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\\n            }\\n\\n            if (this.isType3Font) {\\n              operatorListId = fontCharCode;\\n            }\\n\\n            var accent = null;\\n\\n            if (this.seacMap && this.seacMap[charcode]) {\\n              isInFont = true;\\n              var seac = this.seacMap[charcode];\\n              fontCharCode = seac.baseFontCharCode;\\n              accent = {\\n                fontChar: String.fromCodePoint(seac.accentFontCharCode),\\n                offset: seac.accentOffset\\n              };\\n            }\\n\\n            var fontChar = typeof fontCharCode === 'number' ? String.fromCodePoint(fontCharCode) : '';\\n            var glyph = this.glyphCache[charcode];\\n\\n            if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\\n              glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\\n              this.glyphCache[charcode] = glyph;\\n            }\\n\\n            return glyph;\\n          },\\n          charsToGlyphs: function Font_charsToGlyphs(chars) {\\n            var charsCache = this.charsCache;\\n            var glyphs, glyph, charcode;\\n\\n            if (charsCache) {\\n              glyphs = charsCache[chars];\\n\\n              if (glyphs) {\\n                return glyphs;\\n              }\\n            }\\n\\n            if (!charsCache) {\\n              charsCache = this.charsCache = Object.create(null);\\n            }\\n\\n            glyphs = [];\\n            var charsCacheKey = chars;\\n            var i = 0,\\n                ii;\\n\\n            if (this.cMap) {\\n              var c = Object.create(null);\\n\\n              while (i < chars.length) {\\n                this.cMap.readCharCode(chars, i, c);\\n                charcode = c.charcode;\\n                var length = c.length;\\n                i += length;\\n                var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\\n                glyph = this.charToGlyph(charcode, isSpace);\\n                glyphs.push(glyph);\\n              }\\n            } else {\\n              for (i = 0, ii = chars.length; i < ii; ++i) {\\n                charcode = chars.charCodeAt(i);\\n                glyph = this.charToGlyph(charcode, charcode === 0x20);\\n                glyphs.push(glyph);\\n              }\\n            }\\n\\n            return charsCache[charsCacheKey] = glyphs;\\n          },\\n\\n          get glyphCacheValues() {\\n            return Object.values(this.glyphCache);\\n          }\\n\\n        };\\n        return Font;\\n      }();\\n\\n      exports.Font = Font;\\n\\n      var ErrorFont = function ErrorFontClosure() {\\n        function ErrorFont(error) {\\n          this.error = error;\\n          this.loadedName = 'g_font_error';\\n          this.missingFile = true;\\n        }\\n\\n        ErrorFont.prototype = {\\n          charsToGlyphs: function ErrorFont_charsToGlyphs() {\\n            return [];\\n          },\\n          exportData: function ErrorFont_exportData() {\\n            return {\\n              error: this.error\\n            };\\n          }\\n        };\\n        return ErrorFont;\\n      }();\\n\\n      exports.ErrorFont = ErrorFont;\\n\\n      function type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\\n        var charCodeToGlyphId = Object.create(null);\\n        var glyphId, charCode, baseEncoding;\\n        var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\\n\\n        if (properties.baseEncodingName) {\\n          baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\\n\\n          for (charCode = 0; charCode < baseEncoding.length; charCode++) {\\n            glyphId = glyphNames.indexOf(baseEncoding[charCode]);\\n\\n            if (glyphId >= 0) {\\n              charCodeToGlyphId[charCode] = glyphId;\\n            } else {\\n              charCodeToGlyphId[charCode] = 0;\\n            }\\n          }\\n        } else if (isSymbolicFont) {\\n          for (charCode in builtInEncoding) {\\n            charCodeToGlyphId[charCode] = builtInEncoding[charCode];\\n          }\\n        } else {\\n          baseEncoding = _encodings.StandardEncoding;\\n\\n          for (charCode = 0; charCode < baseEncoding.length; charCode++) {\\n            glyphId = glyphNames.indexOf(baseEncoding[charCode]);\\n\\n            if (glyphId >= 0) {\\n              charCodeToGlyphId[charCode] = glyphId;\\n            } else {\\n              charCodeToGlyphId[charCode] = 0;\\n            }\\n          }\\n        }\\n\\n        var differences = properties.differences,\\n            glyphsUnicodeMap;\\n\\n        if (differences) {\\n          for (charCode in differences) {\\n            var glyphName = differences[charCode];\\n            glyphId = glyphNames.indexOf(glyphName);\\n\\n            if (glyphId === -1) {\\n              if (!glyphsUnicodeMap) {\\n                glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\n              }\\n\\n              var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\\n\\n              if (standardGlyphName !== glyphName) {\\n                glyphId = glyphNames.indexOf(standardGlyphName);\\n              }\\n            }\\n\\n            if (glyphId >= 0) {\\n              charCodeToGlyphId[charCode] = glyphId;\\n            } else {\\n              charCodeToGlyphId[charCode] = 0;\\n            }\\n          }\\n        }\\n\\n        return charCodeToGlyphId;\\n      }\\n\\n      var Type1Font = function Type1FontClosure() {\\n        function findBlock(streamBytes, signature, startIndex) {\\n          var streamBytesLength = streamBytes.length;\\n          var signatureLength = signature.length;\\n          var scanLength = streamBytesLength - signatureLength;\\n          var i = startIndex,\\n              j,\\n              found = false;\\n\\n          while (i < scanLength) {\\n            j = 0;\\n\\n            while (j < signatureLength && streamBytes[i + j] === signature[j]) {\\n              j++;\\n            }\\n\\n            if (j >= signatureLength) {\\n              i += j;\\n\\n              while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\\n                i++;\\n              }\\n\\n              found = true;\\n              break;\\n            }\\n\\n            i++;\\n          }\\n\\n          return {\\n            found: found,\\n            length: i\\n          };\\n        }\\n\\n        function getHeaderBlock(stream, suggestedLength) {\\n          var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\\n          var streamStartPos = stream.pos;\\n          var headerBytes, headerBytesLength, block;\\n\\n          try {\\n            headerBytes = stream.getBytes(suggestedLength);\\n            headerBytesLength = headerBytes.length;\\n          } catch (ex) {\\n            if (ex instanceof _util.MissingDataException) {\\n              throw ex;\\n            }\\n          }\\n\\n          if (headerBytesLength === suggestedLength) {\\n            block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\\n\\n            if (block.found && block.length === suggestedLength) {\\n              return {\\n                stream: new _stream.Stream(headerBytes),\\n                length: suggestedLength\\n              };\\n            }\\n          }\\n\\n          (0, _util.warn)('Invalid \\\"Length1\\\" property in Type1 font -- trying to recover.');\\n          stream.pos = streamStartPos;\\n          var SCAN_BLOCK_LENGTH = 2048;\\n          var actualLength;\\n\\n          while (true) {\\n            var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\\n            block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\\n\\n            if (block.length === 0) {\\n              break;\\n            }\\n\\n            stream.pos += block.length;\\n\\n            if (block.found) {\\n              actualLength = stream.pos - streamStartPos;\\n              break;\\n            }\\n          }\\n\\n          stream.pos = streamStartPos;\\n\\n          if (actualLength) {\\n            return {\\n              stream: new _stream.Stream(stream.getBytes(actualLength)),\\n              length: actualLength\\n            };\\n          }\\n\\n          (0, _util.warn)('Unable to recover \\\"Length1\\\" property in Type1 font -- using as is.');\\n          return {\\n            stream: new _stream.Stream(stream.getBytes(suggestedLength)),\\n            length: suggestedLength\\n          };\\n        }\\n\\n        function getEexecBlock(stream, suggestedLength) {\\n          var eexecBytes = stream.getBytes();\\n          return {\\n            stream: new _stream.Stream(eexecBytes),\\n            length: eexecBytes.length\\n          };\\n        }\\n\\n        function Type1Font(name, file, properties) {\\n          var PFB_HEADER_SIZE = 6;\\n          var headerBlockLength = properties.length1;\\n          var eexecBlockLength = properties.length2;\\n          var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\\n          var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\\n\\n          if (pfbHeaderPresent) {\\n            file.skip(PFB_HEADER_SIZE);\\n            headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\\n          }\\n\\n          var headerBlock = getHeaderBlock(file, headerBlockLength);\\n          var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\\n          headerBlockParser.extractFontHeader(properties);\\n\\n          if (pfbHeaderPresent) {\\n            pfbHeader = file.getBytes(PFB_HEADER_SIZE);\\n            eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\\n          }\\n\\n          var eexecBlock = getEexecBlock(file, eexecBlockLength);\\n          var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\\n          var data = eexecBlockParser.extractFontProgram();\\n\\n          for (var info in data.properties) {\\n            properties[info] = data.properties[info];\\n          }\\n\\n          var charstrings = data.charstrings;\\n          var type2Charstrings = this.getType2Charstrings(charstrings);\\n          var subrs = this.getType2Subrs(data.subrs);\\n          this.charstrings = charstrings;\\n          this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\\n          this.seacs = this.getSeacs(data.charstrings);\\n        }\\n\\n        Type1Font.prototype = {\\n          get numGlyphs() {\\n            return this.charstrings.length + 1;\\n          },\\n\\n          getCharset: function Type1Font_getCharset() {\\n            var charset = ['.notdef'];\\n            var charstrings = this.charstrings;\\n\\n            for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\\n              charset.push(charstrings[glyphId].glyphName);\\n            }\\n\\n            return charset;\\n          },\\n          getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\\n            var charstrings = this.charstrings;\\n            var glyphNames = ['.notdef'],\\n                glyphId;\\n\\n            for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\\n              glyphNames.push(charstrings[glyphId].glyphName);\\n            }\\n\\n            var encoding = properties.builtInEncoding;\\n\\n            if (encoding) {\\n              var builtInEncoding = Object.create(null);\\n\\n              for (var charCode in encoding) {\\n                glyphId = glyphNames.indexOf(encoding[charCode]);\\n\\n                if (glyphId >= 0) {\\n                  builtInEncoding[charCode] = glyphId;\\n                }\\n              }\\n            }\\n\\n            return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\\n          },\\n          hasGlyphId: function Type1Font_hasGlyphID(id) {\\n            if (id < 0 || id >= this.numGlyphs) {\\n              return false;\\n            }\\n\\n            if (id === 0) {\\n              return true;\\n            }\\n\\n            var glyph = this.charstrings[id - 1];\\n            return glyph.charstring.length > 0;\\n          },\\n          getSeacs: function Type1Font_getSeacs(charstrings) {\\n            var i, ii;\\n            var seacMap = [];\\n\\n            for (i = 0, ii = charstrings.length; i < ii; i++) {\\n              var charstring = charstrings[i];\\n\\n              if (charstring.seac) {\\n                seacMap[i + 1] = charstring.seac;\\n              }\\n            }\\n\\n            return seacMap;\\n          },\\n          getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\\n            var type2Charstrings = [];\\n\\n            for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\\n              type2Charstrings.push(type1Charstrings[i].charstring);\\n            }\\n\\n            return type2Charstrings;\\n          },\\n          getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\\n            var bias = 0;\\n            var count = type1Subrs.length;\\n\\n            if (count < 1133) {\\n              bias = 107;\\n            } else if (count < 33769) {\\n              bias = 1131;\\n            } else {\\n              bias = 32768;\\n            }\\n\\n            var type2Subrs = [];\\n            var i;\\n\\n            for (i = 0; i < bias; i++) {\\n              type2Subrs.push([0x0B]);\\n            }\\n\\n            for (i = 0; i < count; i++) {\\n              type2Subrs.push(type1Subrs[i]);\\n            }\\n\\n            return type2Subrs;\\n          },\\n          wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\\n            var cff = new _cff_parser.CFF();\\n            cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\\n            cff.names = [name];\\n            var topDict = new _cff_parser.CFFTopDict();\\n            topDict.setByName('version', 391);\\n            topDict.setByName('Notice', 392);\\n            topDict.setByName('FullName', 393);\\n            topDict.setByName('FamilyName', 394);\\n            topDict.setByName('Weight', 395);\\n            topDict.setByName('Encoding', null);\\n            topDict.setByName('FontMatrix', properties.fontMatrix);\\n            topDict.setByName('FontBBox', properties.bbox);\\n            topDict.setByName('charset', null);\\n            topDict.setByName('CharStrings', null);\\n            topDict.setByName('Private', null);\\n            cff.topDict = topDict;\\n            var strings = new _cff_parser.CFFStrings();\\n            strings.add('Version 0.11');\\n            strings.add('See original notice');\\n            strings.add(name);\\n            strings.add(name);\\n            strings.add('Medium');\\n            cff.strings = strings;\\n            cff.globalSubrIndex = new _cff_parser.CFFIndex();\\n            var count = glyphs.length;\\n            var charsetArray = [0];\\n            var i, ii;\\n\\n            for (i = 0; i < count; i++) {\\n              var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\\n\\n              if (index === -1) {\\n                index = 0;\\n              }\\n\\n              charsetArray.push(index >> 8 & 0xff, index & 0xff);\\n            }\\n\\n            cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\\n            var charStringsIndex = new _cff_parser.CFFIndex();\\n            charStringsIndex.add([0x8B, 0x0E]);\\n\\n            for (i = 0; i < count; i++) {\\n              charStringsIndex.add(glyphs[i]);\\n            }\\n\\n            cff.charStrings = charStringsIndex;\\n            var privateDict = new _cff_parser.CFFPrivateDict();\\n            privateDict.setByName('Subrs', null);\\n            var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\\n\\n            for (i = 0, ii = fields.length; i < ii; i++) {\\n              var field = fields[i];\\n\\n              if (!(field in properties.privateData)) {\\n                continue;\\n              }\\n\\n              var value = properties.privateData[field];\\n\\n              if (Array.isArray(value)) {\\n                for (var j = value.length - 1; j > 0; j--) {\\n                  value[j] -= value[j - 1];\\n                }\\n              }\\n\\n              privateDict.setByName(field, value);\\n            }\\n\\n            cff.topDict.privateDict = privateDict;\\n            var subrIndex = new _cff_parser.CFFIndex();\\n\\n            for (i = 0, ii = subrs.length; i < ii; i++) {\\n              subrIndex.add(subrs[i]);\\n            }\\n\\n            privateDict.subrsIndex = subrIndex;\\n            var compiler = new _cff_parser.CFFCompiler(cff);\\n            return compiler.compile();\\n          }\\n        };\\n        return Type1Font;\\n      }();\\n\\n      var CFFFont = function CFFFontClosure() {\\n        function CFFFont(file, properties) {\\n          this.properties = properties;\\n          var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\\n          this.cff = parser.parse();\\n          this.cff.duplicateFirstGlyph();\\n          var compiler = new _cff_parser.CFFCompiler(this.cff);\\n          this.seacs = this.cff.seacs;\\n\\n          try {\\n            this.data = compiler.compile();\\n          } catch (e) {\\n            (0, _util.warn)('Failed to compile font ' + properties.loadedName);\\n            this.data = file;\\n          }\\n        }\\n\\n        CFFFont.prototype = {\\n          get numGlyphs() {\\n            return this.cff.charStrings.count;\\n          },\\n\\n          getCharset: function CFFFont_getCharset() {\\n            return this.cff.charset.charset;\\n          },\\n          getGlyphMapping: function CFFFont_getGlyphMapping() {\\n            var cff = this.cff;\\n            var properties = this.properties;\\n            var charsets = cff.charset.charset;\\n            var charCodeToGlyphId;\\n            var glyphId;\\n\\n            if (properties.composite) {\\n              charCodeToGlyphId = Object.create(null);\\n\\n              if (cff.isCIDFont) {\\n                for (glyphId = 0; glyphId < charsets.length; glyphId++) {\\n                  var cid = charsets[glyphId];\\n                  var charCode = properties.cMap.charCodeOf(cid);\\n                  charCodeToGlyphId[charCode] = glyphId;\\n                }\\n              } else {\\n                for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\\n                  charCodeToGlyphId[glyphId] = glyphId;\\n                }\\n              }\\n\\n              return charCodeToGlyphId;\\n            }\\n\\n            var encoding = cff.encoding ? cff.encoding.encoding : null;\\n            charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\\n            return charCodeToGlyphId;\\n          },\\n          hasGlyphId: function CFFFont_hasGlyphID(id) {\\n            return this.cff.hasGlyphId(id);\\n          }\\n        };\\n        return CFFFont;\\n      }();\\n      /***/\\n\\n    },\\n    /* 174 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.CFFFDSelect = exports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _charsets = __w_pdfjs_require__(175);\\n\\n      var _encodings = __w_pdfjs_require__(176);\\n\\n      var MAX_SUBR_NESTING = 10;\\n      var CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\\n      exports.CFFStandardStrings = CFFStandardStrings;\\n\\n      var CFFParser = function CFFParserClosure() {\\n        var CharstringValidationData = [null, {\\n          id: 'hstem',\\n          min: 2,\\n          stackClearing: true,\\n          stem: true\\n        }, null, {\\n          id: 'vstem',\\n          min: 2,\\n          stackClearing: true,\\n          stem: true\\n        }, {\\n          id: 'vmoveto',\\n          min: 1,\\n          stackClearing: true\\n        }, {\\n          id: 'rlineto',\\n          min: 2,\\n          resetStack: true\\n        }, {\\n          id: 'hlineto',\\n          min: 1,\\n          resetStack: true\\n        }, {\\n          id: 'vlineto',\\n          min: 1,\\n          resetStack: true\\n        }, {\\n          id: 'rrcurveto',\\n          min: 6,\\n          resetStack: true\\n        }, null, {\\n          id: 'callsubr',\\n          min: 1,\\n          undefStack: true\\n        }, {\\n          id: 'return',\\n          min: 0,\\n          undefStack: true\\n        }, null, null, {\\n          id: 'endchar',\\n          min: 0,\\n          stackClearing: true\\n        }, null, null, null, {\\n          id: 'hstemhm',\\n          min: 2,\\n          stackClearing: true,\\n          stem: true\\n        }, {\\n          id: 'hintmask',\\n          min: 0,\\n          stackClearing: true\\n        }, {\\n          id: 'cntrmask',\\n          min: 0,\\n          stackClearing: true\\n        }, {\\n          id: 'rmoveto',\\n          min: 2,\\n          stackClearing: true\\n        }, {\\n          id: 'hmoveto',\\n          min: 1,\\n          stackClearing: true\\n        }, {\\n          id: 'vstemhm',\\n          min: 2,\\n          stackClearing: true,\\n          stem: true\\n        }, {\\n          id: 'rcurveline',\\n          min: 8,\\n          resetStack: true\\n        }, {\\n          id: 'rlinecurve',\\n          min: 8,\\n          resetStack: true\\n        }, {\\n          id: 'vvcurveto',\\n          min: 4,\\n          resetStack: true\\n        }, {\\n          id: 'hhcurveto',\\n          min: 4,\\n          resetStack: true\\n        }, null, {\\n          id: 'callgsubr',\\n          min: 1,\\n          undefStack: true\\n        }, {\\n          id: 'vhcurveto',\\n          min: 4,\\n          resetStack: true\\n        }, {\\n          id: 'hvcurveto',\\n          min: 4,\\n          resetStack: true\\n        }];\\n        var CharstringValidationData12 = [null, null, null, {\\n          id: 'and',\\n          min: 2,\\n          stackDelta: -1\\n        }, {\\n          id: 'or',\\n          min: 2,\\n          stackDelta: -1\\n        }, {\\n          id: 'not',\\n          min: 1,\\n          stackDelta: 0\\n        }, null, null, null, {\\n          id: 'abs',\\n          min: 1,\\n          stackDelta: 0\\n        }, {\\n          id: 'add',\\n          min: 2,\\n          stackDelta: -1,\\n          stackFn: function stack_div(stack, index) {\\n            stack[index - 2] = stack[index - 2] + stack[index - 1];\\n          }\\n        }, {\\n          id: 'sub',\\n          min: 2,\\n          stackDelta: -1,\\n          stackFn: function stack_div(stack, index) {\\n            stack[index - 2] = stack[index - 2] - stack[index - 1];\\n          }\\n        }, {\\n          id: 'div',\\n          min: 2,\\n          stackDelta: -1,\\n          stackFn: function stack_div(stack, index) {\\n            stack[index - 2] = stack[index - 2] / stack[index - 1];\\n          }\\n        }, null, {\\n          id: 'neg',\\n          min: 1,\\n          stackDelta: 0,\\n          stackFn: function stack_div(stack, index) {\\n            stack[index - 1] = -stack[index - 1];\\n          }\\n        }, {\\n          id: 'eq',\\n          min: 2,\\n          stackDelta: -1\\n        }, null, null, {\\n          id: 'drop',\\n          min: 1,\\n          stackDelta: -1\\n        }, null, {\\n          id: 'put',\\n          min: 2,\\n          stackDelta: -2\\n        }, {\\n          id: 'get',\\n          min: 1,\\n          stackDelta: 0\\n        }, {\\n          id: 'ifelse',\\n          min: 4,\\n          stackDelta: -3\\n        }, {\\n          id: 'random',\\n          min: 0,\\n          stackDelta: 1\\n        }, {\\n          id: 'mul',\\n          min: 2,\\n          stackDelta: -1,\\n          stackFn: function stack_div(stack, index) {\\n            stack[index - 2] = stack[index - 2] * stack[index - 1];\\n          }\\n        }, null, {\\n          id: 'sqrt',\\n          min: 1,\\n          stackDelta: 0\\n        }, {\\n          id: 'dup',\\n          min: 1,\\n          stackDelta: 1\\n        }, {\\n          id: 'exch',\\n          min: 2,\\n          stackDelta: 0\\n        }, {\\n          id: 'index',\\n          min: 2,\\n          stackDelta: 0\\n        }, {\\n          id: 'roll',\\n          min: 3,\\n          stackDelta: -2\\n        }, null, null, null, {\\n          id: 'hflex',\\n          min: 7,\\n          resetStack: true\\n        }, {\\n          id: 'flex',\\n          min: 13,\\n          resetStack: true\\n        }, {\\n          id: 'hflex1',\\n          min: 9,\\n          resetStack: true\\n        }, {\\n          id: 'flex1',\\n          min: 11,\\n          resetStack: true\\n        }];\\n\\n        function CFFParser(file, properties, seacAnalysisEnabled) {\\n          this.bytes = file.getBytes();\\n          this.properties = properties;\\n          this.seacAnalysisEnabled = !!seacAnalysisEnabled;\\n        }\\n\\n        CFFParser.prototype = {\\n          parse: function CFFParser_parse() {\\n            var properties = this.properties;\\n            var cff = new CFF();\\n            this.cff = cff;\\n            var header = this.parseHeader();\\n            var nameIndex = this.parseIndex(header.endPos);\\n            var topDictIndex = this.parseIndex(nameIndex.endPos);\\n            var stringIndex = this.parseIndex(topDictIndex.endPos);\\n            var globalSubrIndex = this.parseIndex(stringIndex.endPos);\\n            var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\\n            var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\\n            cff.header = header.obj;\\n            cff.names = this.parseNameIndex(nameIndex.obj);\\n            cff.strings = this.parseStringIndex(stringIndex.obj);\\n            cff.topDict = topDict;\\n            cff.globalSubrIndex = globalSubrIndex.obj;\\n            this.parsePrivateDict(cff.topDict);\\n            cff.isCIDFont = topDict.hasName('ROS');\\n            var charStringOffset = topDict.getByName('CharStrings');\\n            var charStringIndex = this.parseIndex(charStringOffset).obj;\\n            var fontMatrix = topDict.getByName('FontMatrix');\\n\\n            if (fontMatrix) {\\n              properties.fontMatrix = fontMatrix;\\n            }\\n\\n            var fontBBox = topDict.getByName('FontBBox');\\n\\n            if (fontBBox) {\\n              properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\\n              properties.descent = Math.min(fontBBox[1], fontBBox[3]);\\n              properties.ascentScaled = true;\\n            }\\n\\n            var charset, encoding;\\n\\n            if (cff.isCIDFont) {\\n              var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\\n\\n              for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\\n                var dictRaw = fdArrayIndex.get(i);\\n                var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\\n                this.parsePrivateDict(fontDict);\\n                cff.fdArray.push(fontDict);\\n              }\\n\\n              encoding = null;\\n              charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\\n              cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\\n            } else {\\n              charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\\n              encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\\n            }\\n\\n            cff.charset = charset;\\n            cff.encoding = encoding;\\n            var charStringsAndSeacs = this.parseCharStrings({\\n              charStrings: charStringIndex,\\n              localSubrIndex: topDict.privateDict.subrsIndex,\\n              globalSubrIndex: globalSubrIndex.obj,\\n              fdSelect: cff.fdSelect,\\n              fdArray: cff.fdArray,\\n              privateDict: topDict.privateDict\\n            });\\n            cff.charStrings = charStringsAndSeacs.charStrings;\\n            cff.seacs = charStringsAndSeacs.seacs;\\n            cff.widths = charStringsAndSeacs.widths;\\n            return cff;\\n          },\\n          parseHeader: function CFFParser_parseHeader() {\\n            var bytes = this.bytes;\\n            var bytesLength = bytes.length;\\n            var offset = 0;\\n\\n            while (offset < bytesLength && bytes[offset] !== 1) {\\n              ++offset;\\n            }\\n\\n            if (offset >= bytesLength) {\\n              throw new _util.FormatError('Invalid CFF header');\\n            }\\n\\n            if (offset !== 0) {\\n              (0, _util.info)('cff data is shifted');\\n              bytes = bytes.subarray(offset);\\n              this.bytes = bytes;\\n            }\\n\\n            var major = bytes[0];\\n            var minor = bytes[1];\\n            var hdrSize = bytes[2];\\n            var offSize = bytes[3];\\n            var header = new CFFHeader(major, minor, hdrSize, offSize);\\n            return {\\n              obj: header,\\n              endPos: hdrSize\\n            };\\n          },\\n          parseDict: function CFFParser_parseDict(dict) {\\n            var pos = 0;\\n\\n            function parseOperand() {\\n              var value = dict[pos++];\\n\\n              if (value === 30) {\\n                return parseFloatOperand();\\n              } else if (value === 28) {\\n                value = dict[pos++];\\n                value = (value << 24 | dict[pos++] << 16) >> 16;\\n                return value;\\n              } else if (value === 29) {\\n                value = dict[pos++];\\n                value = value << 8 | dict[pos++];\\n                value = value << 8 | dict[pos++];\\n                value = value << 8 | dict[pos++];\\n                return value;\\n              } else if (value >= 32 && value <= 246) {\\n                return value - 139;\\n              } else if (value >= 247 && value <= 250) {\\n                return (value - 247) * 256 + dict[pos++] + 108;\\n              } else if (value >= 251 && value <= 254) {\\n                return -((value - 251) * 256) - dict[pos++] - 108;\\n              }\\n\\n              (0, _util.warn)('CFFParser_parseDict: \\\"' + value + '\\\" is a reserved command.');\\n              return NaN;\\n            }\\n\\n            function parseFloatOperand() {\\n              var str = '';\\n              var eof = 15;\\n              var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\\n              var length = dict.length;\\n\\n              while (pos < length) {\\n                var b = dict[pos++];\\n                var b1 = b >> 4;\\n                var b2 = b & 15;\\n\\n                if (b1 === eof) {\\n                  break;\\n                }\\n\\n                str += lookup[b1];\\n\\n                if (b2 === eof) {\\n                  break;\\n                }\\n\\n                str += lookup[b2];\\n              }\\n\\n              return parseFloat(str);\\n            }\\n\\n            var operands = [];\\n            var entries = [];\\n            pos = 0;\\n            var end = dict.length;\\n\\n            while (pos < end) {\\n              var b = dict[pos];\\n\\n              if (b <= 21) {\\n                if (b === 12) {\\n                  b = b << 8 | dict[++pos];\\n                }\\n\\n                entries.push([b, operands]);\\n                operands = [];\\n                ++pos;\\n              } else {\\n                operands.push(parseOperand());\\n              }\\n            }\\n\\n            return entries;\\n          },\\n          parseIndex: function CFFParser_parseIndex(pos) {\\n            var cffIndex = new CFFIndex();\\n            var bytes = this.bytes;\\n            var count = bytes[pos++] << 8 | bytes[pos++];\\n            var offsets = [];\\n            var end = pos;\\n            var i, ii;\\n\\n            if (count !== 0) {\\n              var offsetSize = bytes[pos++];\\n              var startPos = pos + (count + 1) * offsetSize - 1;\\n\\n              for (i = 0, ii = count + 1; i < ii; ++i) {\\n                var offset = 0;\\n\\n                for (var j = 0; j < offsetSize; ++j) {\\n                  offset <<= 8;\\n                  offset += bytes[pos++];\\n                }\\n\\n                offsets.push(startPos + offset);\\n              }\\n\\n              end = offsets[count];\\n            }\\n\\n            for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\\n              var offsetStart = offsets[i];\\n              var offsetEnd = offsets[i + 1];\\n              cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\\n            }\\n\\n            return {\\n              obj: cffIndex,\\n              endPos: end\\n            };\\n          },\\n          parseNameIndex: function CFFParser_parseNameIndex(index) {\\n            var names = [];\\n\\n            for (var i = 0, ii = index.count; i < ii; ++i) {\\n              var name = index.get(i);\\n              names.push((0, _util.bytesToString)(name));\\n            }\\n\\n            return names;\\n          },\\n          parseStringIndex: function CFFParser_parseStringIndex(index) {\\n            var strings = new CFFStrings();\\n\\n            for (var i = 0, ii = index.count; i < ii; ++i) {\\n              var data = index.get(i);\\n              strings.add((0, _util.bytesToString)(data));\\n            }\\n\\n            return strings;\\n          },\\n          createDict: function CFFParser_createDict(Type, dict, strings) {\\n            var cffDict = new Type(strings);\\n\\n            for (var i = 0, ii = dict.length; i < ii; ++i) {\\n              var pair = dict[i];\\n              var key = pair[0];\\n              var value = pair[1];\\n              cffDict.setByKey(key, value);\\n            }\\n\\n            return cffDict;\\n          },\\n          parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\\n            if (!data || state.callDepth > MAX_SUBR_NESTING) {\\n              return false;\\n            }\\n\\n            var stackSize = state.stackSize;\\n            var stack = state.stack;\\n            var length = data.length;\\n\\n            for (var j = 0; j < length;) {\\n              var value = data[j++];\\n              var validationCommand = null;\\n\\n              if (value === 12) {\\n                var q = data[j++];\\n\\n                if (q === 0) {\\n                  data[j - 2] = 139;\\n                  data[j - 1] = 22;\\n                  stackSize = 0;\\n                } else {\\n                  validationCommand = CharstringValidationData12[q];\\n                }\\n              } else if (value === 28) {\\n                stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\\n                j += 2;\\n                stackSize++;\\n              } else if (value === 14) {\\n                if (stackSize >= 4) {\\n                  stackSize -= 4;\\n\\n                  if (this.seacAnalysisEnabled) {\\n                    state.seac = stack.slice(stackSize, stackSize + 4);\\n                    return false;\\n                  }\\n                }\\n\\n                validationCommand = CharstringValidationData[value];\\n              } else if (value >= 32 && value <= 246) {\\n                stack[stackSize] = value - 139;\\n                stackSize++;\\n              } else if (value >= 247 && value <= 254) {\\n                stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\\n                j++;\\n                stackSize++;\\n              } else if (value === 255) {\\n                stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\\n                j += 4;\\n                stackSize++;\\n              } else if (value === 19 || value === 20) {\\n                state.hints += stackSize >> 1;\\n                j += state.hints + 7 >> 3;\\n                stackSize %= 2;\\n                validationCommand = CharstringValidationData[value];\\n              } else if (value === 10 || value === 29) {\\n                var subrsIndex;\\n\\n                if (value === 10) {\\n                  subrsIndex = localSubrIndex;\\n                } else {\\n                  subrsIndex = globalSubrIndex;\\n                }\\n\\n                if (!subrsIndex) {\\n                  validationCommand = CharstringValidationData[value];\\n                  (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\\n                  return false;\\n                }\\n\\n                var bias = 32768;\\n\\n                if (subrsIndex.count < 1240) {\\n                  bias = 107;\\n                } else if (subrsIndex.count < 33900) {\\n                  bias = 1131;\\n                }\\n\\n                var subrNumber = stack[--stackSize] + bias;\\n\\n                if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\\n                  validationCommand = CharstringValidationData[value];\\n                  (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\\n                  return false;\\n                }\\n\\n                state.stackSize = stackSize;\\n                state.callDepth++;\\n                var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\\n\\n                if (!valid) {\\n                  return false;\\n                }\\n\\n                state.callDepth--;\\n                stackSize = state.stackSize;\\n                continue;\\n              } else if (value === 11) {\\n                state.stackSize = stackSize;\\n                return true;\\n              } else {\\n                validationCommand = CharstringValidationData[value];\\n              }\\n\\n              if (validationCommand) {\\n                if (validationCommand.stem) {\\n                  state.hints += stackSize >> 1;\\n\\n                  if (value === 3 || value === 23) {\\n                    state.hasVStems = true;\\n                  } else if (state.hasVStems && (value === 1 || value === 18)) {\\n                    (0, _util.warn)('CFF stem hints are in wrong order');\\n                    data[j - 1] = value === 1 ? 3 : 23;\\n                  }\\n                }\\n\\n                if ('min' in validationCommand) {\\n                  if (!state.undefStack && stackSize < validationCommand.min) {\\n                    (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\\n                    return false;\\n                  }\\n                }\\n\\n                if (state.firstStackClearing && validationCommand.stackClearing) {\\n                  state.firstStackClearing = false;\\n                  stackSize -= validationCommand.min;\\n\\n                  if (stackSize >= 2 && validationCommand.stem) {\\n                    stackSize %= 2;\\n                  } else if (stackSize > 1) {\\n                    (0, _util.warn)('Found too many parameters for stack-clearing command');\\n                  }\\n\\n                  if (stackSize > 0 && stack[stackSize - 1] >= 0) {\\n                    state.width = stack[stackSize - 1];\\n                  }\\n                }\\n\\n                if ('stackDelta' in validationCommand) {\\n                  if ('stackFn' in validationCommand) {\\n                    validationCommand.stackFn(stack, stackSize);\\n                  }\\n\\n                  stackSize += validationCommand.stackDelta;\\n                } else if (validationCommand.stackClearing) {\\n                  stackSize = 0;\\n                } else if (validationCommand.resetStack) {\\n                  stackSize = 0;\\n                  state.undefStack = false;\\n                } else if (validationCommand.undefStack) {\\n                  stackSize = 0;\\n                  state.undefStack = true;\\n                  state.firstStackClearing = false;\\n                }\\n              }\\n            }\\n\\n            state.stackSize = stackSize;\\n            return true;\\n          },\\n          parseCharStrings: function parseCharStrings(_ref) {\\n            var charStrings = _ref.charStrings,\\n                localSubrIndex = _ref.localSubrIndex,\\n                globalSubrIndex = _ref.globalSubrIndex,\\n                fdSelect = _ref.fdSelect,\\n                fdArray = _ref.fdArray,\\n                privateDict = _ref.privateDict;\\n            var seacs = [];\\n            var widths = [];\\n            var count = charStrings.count;\\n\\n            for (var i = 0; i < count; i++) {\\n              var charstring = charStrings.get(i);\\n              var state = {\\n                callDepth: 0,\\n                stackSize: 0,\\n                stack: [],\\n                undefStack: true,\\n                hints: 0,\\n                firstStackClearing: true,\\n                seac: null,\\n                width: null,\\n                hasVStems: false\\n              };\\n              var valid = true;\\n              var localSubrToUse = null;\\n              var privateDictToUse = privateDict;\\n\\n              if (fdSelect && fdArray.length) {\\n                var fdIndex = fdSelect.getFDIndex(i);\\n\\n                if (fdIndex === -1) {\\n                  (0, _util.warn)('Glyph index is not in fd select.');\\n                  valid = false;\\n                }\\n\\n                if (fdIndex >= fdArray.length) {\\n                  (0, _util.warn)('Invalid fd index for glyph index.');\\n                  valid = false;\\n                }\\n\\n                if (valid) {\\n                  privateDictToUse = fdArray[fdIndex].privateDict;\\n                  localSubrToUse = privateDictToUse.subrsIndex;\\n                }\\n              } else if (localSubrIndex) {\\n                localSubrToUse = localSubrIndex;\\n              }\\n\\n              if (valid) {\\n                valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\\n              }\\n\\n              if (state.width !== null) {\\n                var nominalWidth = privateDictToUse.getByName('nominalWidthX');\\n                widths[i] = nominalWidth + state.width;\\n              } else {\\n                var defaultWidth = privateDictToUse.getByName('defaultWidthX');\\n                widths[i] = defaultWidth;\\n              }\\n\\n              if (state.seac !== null) {\\n                seacs[i] = state.seac;\\n              }\\n\\n              if (!valid) {\\n                charStrings.set(i, new Uint8Array([14]));\\n              }\\n            }\\n\\n            return {\\n              charStrings: charStrings,\\n              seacs: seacs,\\n              widths: widths\\n            };\\n          },\\n          emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\\n            var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\\n            parentDict.setByKey(18, [0, 0]);\\n            parentDict.privateDict = privateDict;\\n          },\\n          parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\\n            if (!parentDict.hasName('Private')) {\\n              this.emptyPrivateDictionary(parentDict);\\n              return;\\n            }\\n\\n            var privateOffset = parentDict.getByName('Private');\\n\\n            if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\\n              parentDict.removeByName('Private');\\n              return;\\n            }\\n\\n            var size = privateOffset[0];\\n            var offset = privateOffset[1];\\n\\n            if (size === 0 || offset >= this.bytes.length) {\\n              this.emptyPrivateDictionary(parentDict);\\n              return;\\n            }\\n\\n            var privateDictEnd = offset + size;\\n            var dictData = this.bytes.subarray(offset, privateDictEnd);\\n            var dict = this.parseDict(dictData);\\n            var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\\n            parentDict.privateDict = privateDict;\\n\\n            if (!privateDict.getByName('Subrs')) {\\n              return;\\n            }\\n\\n            var subrsOffset = privateDict.getByName('Subrs');\\n            var relativeOffset = offset + subrsOffset;\\n\\n            if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\\n              this.emptyPrivateDictionary(parentDict);\\n              return;\\n            }\\n\\n            var subrsIndex = this.parseIndex(relativeOffset);\\n            privateDict.subrsIndex = subrsIndex.obj;\\n          },\\n          parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\\n            if (pos === 0) {\\n              return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\\n            } else if (pos === 1) {\\n              return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\\n            } else if (pos === 2) {\\n              return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\\n            }\\n\\n            var bytes = this.bytes;\\n            var start = pos;\\n            var format = bytes[pos++];\\n            var charset = ['.notdef'];\\n            var id, count, i;\\n            length -= 1;\\n\\n            switch (format) {\\n              case 0:\\n                for (i = 0; i < length; i++) {\\n                  id = bytes[pos++] << 8 | bytes[pos++];\\n                  charset.push(cid ? id : strings.get(id));\\n                }\\n\\n                break;\\n\\n              case 1:\\n                while (charset.length <= length) {\\n                  id = bytes[pos++] << 8 | bytes[pos++];\\n                  count = bytes[pos++];\\n\\n                  for (i = 0; i <= count; i++) {\\n                    charset.push(cid ? id++ : strings.get(id++));\\n                  }\\n                }\\n\\n                break;\\n\\n              case 2:\\n                while (charset.length <= length) {\\n                  id = bytes[pos++] << 8 | bytes[pos++];\\n                  count = bytes[pos++] << 8 | bytes[pos++];\\n\\n                  for (i = 0; i <= count; i++) {\\n                    charset.push(cid ? id++ : strings.get(id++));\\n                  }\\n                }\\n\\n                break;\\n\\n              default:\\n                throw new _util.FormatError('Unknown charset format');\\n            }\\n\\n            var end = pos;\\n            var raw = bytes.subarray(start, end);\\n            return new CFFCharset(false, format, charset, raw);\\n          },\\n          parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\\n            var encoding = Object.create(null);\\n            var bytes = this.bytes;\\n            var predefined = false;\\n            var format, i, ii;\\n            var raw = null;\\n\\n            function readSupplement() {\\n              var supplementsCount = bytes[pos++];\\n\\n              for (i = 0; i < supplementsCount; i++) {\\n                var code = bytes[pos++];\\n                var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\\n                encoding[code] = charset.indexOf(strings.get(sid));\\n              }\\n            }\\n\\n            if (pos === 0 || pos === 1) {\\n              predefined = true;\\n              format = pos;\\n              var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\\n\\n              for (i = 0, ii = charset.length; i < ii; i++) {\\n                var index = baseEncoding.indexOf(charset[i]);\\n\\n                if (index !== -1) {\\n                  encoding[index] = i;\\n                }\\n              }\\n            } else {\\n              var dataStart = pos;\\n              format = bytes[pos++];\\n\\n              switch (format & 0x7f) {\\n                case 0:\\n                  var glyphsCount = bytes[pos++];\\n\\n                  for (i = 1; i <= glyphsCount; i++) {\\n                    encoding[bytes[pos++]] = i;\\n                  }\\n\\n                  break;\\n\\n                case 1:\\n                  var rangesCount = bytes[pos++];\\n                  var gid = 1;\\n\\n                  for (i = 0; i < rangesCount; i++) {\\n                    var start = bytes[pos++];\\n                    var left = bytes[pos++];\\n\\n                    for (var j = start; j <= start + left; j++) {\\n                      encoding[j] = gid++;\\n                    }\\n                  }\\n\\n                  break;\\n\\n                default:\\n                  throw new _util.FormatError(\\\"Unknown encoding format: \\\".concat(format, \\\" in CFF\\\"));\\n              }\\n\\n              var dataEnd = pos;\\n\\n              if (format & 0x80) {\\n                bytes[dataStart] &= 0x7f;\\n                readSupplement();\\n              }\\n\\n              raw = bytes.subarray(dataStart, dataEnd);\\n            }\\n\\n            format = format & 0x7f;\\n            return new CFFEncoding(predefined, format, encoding, raw);\\n          },\\n          parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\\n            var bytes = this.bytes;\\n            var format = bytes[pos++];\\n            var fdSelect = [];\\n            var i;\\n\\n            switch (format) {\\n              case 0:\\n                for (i = 0; i < length; ++i) {\\n                  var id = bytes[pos++];\\n                  fdSelect.push(id);\\n                }\\n\\n                break;\\n\\n              case 3:\\n                var rangesCount = bytes[pos++] << 8 | bytes[pos++];\\n\\n                for (i = 0; i < rangesCount; ++i) {\\n                  var first = bytes[pos++] << 8 | bytes[pos++];\\n\\n                  if (i === 0 && first !== 0) {\\n                    (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\\n                    first = 0;\\n                  }\\n\\n                  var fdIndex = bytes[pos++];\\n                  var next = bytes[pos] << 8 | bytes[pos + 1];\\n\\n                  for (var j = first; j < next; ++j) {\\n                    fdSelect.push(fdIndex);\\n                  }\\n                }\\n\\n                pos += 2;\\n                break;\\n\\n              default:\\n                throw new _util.FormatError(\\\"parseFDSelect: Unknown format \\\\\\\"\\\".concat(format, \\\"\\\\\\\".\\\"));\\n            }\\n\\n            if (fdSelect.length !== length) {\\n              throw new _util.FormatError('parseFDSelect: Invalid font data.');\\n            }\\n\\n            return new CFFFDSelect(format, fdSelect);\\n          }\\n        };\\n        return CFFParser;\\n      }();\\n\\n      exports.CFFParser = CFFParser;\\n\\n      var CFF = function CFFClosure() {\\n        function CFF() {\\n          this.header = null;\\n          this.names = [];\\n          this.topDict = null;\\n          this.strings = new CFFStrings();\\n          this.globalSubrIndex = null;\\n          this.encoding = null;\\n          this.charset = null;\\n          this.charStrings = null;\\n          this.fdArray = [];\\n          this.fdSelect = null;\\n          this.isCIDFont = false;\\n        }\\n\\n        CFF.prototype = {\\n          duplicateFirstGlyph: function CFF_duplicateFirstGlyph() {\\n            if (this.charStrings.count >= 65535) {\\n              (0, _util.warn)('Not enough space in charstrings to duplicate first glyph.');\\n              return;\\n            }\\n\\n            var glyphZero = this.charStrings.get(0);\\n            this.charStrings.add(glyphZero);\\n\\n            if (this.isCIDFont) {\\n              this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0]);\\n            }\\n          },\\n          hasGlyphId: function CFF_hasGlyphID(id) {\\n            if (id < 0 || id >= this.charStrings.count) {\\n              return false;\\n            }\\n\\n            var glyph = this.charStrings.get(id);\\n            return glyph.length > 0;\\n          }\\n        };\\n        return CFF;\\n      }();\\n\\n      exports.CFF = CFF;\\n\\n      var CFFHeader = function CFFHeaderClosure() {\\n        function CFFHeader(major, minor, hdrSize, offSize) {\\n          this.major = major;\\n          this.minor = minor;\\n          this.hdrSize = hdrSize;\\n          this.offSize = offSize;\\n        }\\n\\n        return CFFHeader;\\n      }();\\n\\n      exports.CFFHeader = CFFHeader;\\n\\n      var CFFStrings = function CFFStringsClosure() {\\n        function CFFStrings() {\\n          this.strings = [];\\n        }\\n\\n        CFFStrings.prototype = {\\n          get: function CFFStrings_get(index) {\\n            if (index >= 0 && index <= 390) {\\n              return CFFStandardStrings[index];\\n            }\\n\\n            if (index - 391 <= this.strings.length) {\\n              return this.strings[index - 391];\\n            }\\n\\n            return CFFStandardStrings[0];\\n          },\\n          add: function CFFStrings_add(value) {\\n            this.strings.push(value);\\n          },\\n\\n          get count() {\\n            return this.strings.length;\\n          }\\n\\n        };\\n        return CFFStrings;\\n      }();\\n\\n      exports.CFFStrings = CFFStrings;\\n\\n      var CFFIndex = function CFFIndexClosure() {\\n        function CFFIndex() {\\n          this.objects = [];\\n          this.length = 0;\\n        }\\n\\n        CFFIndex.prototype = {\\n          add: function CFFIndex_add(data) {\\n            this.length += data.length;\\n            this.objects.push(data);\\n          },\\n          set: function CFFIndex_set(index, data) {\\n            this.length += data.length - this.objects[index].length;\\n            this.objects[index] = data;\\n          },\\n          get: function CFFIndex_get(index) {\\n            return this.objects[index];\\n          },\\n\\n          get count() {\\n            return this.objects.length;\\n          }\\n\\n        };\\n        return CFFIndex;\\n      }();\\n\\n      exports.CFFIndex = CFFIndex;\\n\\n      var CFFDict = function CFFDictClosure() {\\n        function CFFDict(tables, strings) {\\n          this.keyToNameMap = tables.keyToNameMap;\\n          this.nameToKeyMap = tables.nameToKeyMap;\\n          this.defaults = tables.defaults;\\n          this.types = tables.types;\\n          this.opcodes = tables.opcodes;\\n          this.order = tables.order;\\n          this.strings = strings;\\n          this.values = Object.create(null);\\n        }\\n\\n        CFFDict.prototype = {\\n          setByKey: function CFFDict_setByKey(key, value) {\\n            if (!(key in this.keyToNameMap)) {\\n              return false;\\n            }\\n\\n            var valueLength = value.length;\\n\\n            if (valueLength === 0) {\\n              return true;\\n            }\\n\\n            for (var i = 0; i < valueLength; i++) {\\n              if (isNaN(value[i])) {\\n                (0, _util.warn)('Invalid CFFDict value: \\\"' + value + '\\\" for key \\\"' + key + '\\\".');\\n                return true;\\n              }\\n            }\\n\\n            var type = this.types[key];\\n\\n            if (type === 'num' || type === 'sid' || type === 'offset') {\\n              value = value[0];\\n            }\\n\\n            this.values[key] = value;\\n            return true;\\n          },\\n          setByName: function CFFDict_setByName(name, value) {\\n            if (!(name in this.nameToKeyMap)) {\\n              throw new _util.FormatError(\\\"Invalid dictionary name \\\\\\\"\\\".concat(name, \\\"\\\\\\\"\\\"));\\n            }\\n\\n            this.values[this.nameToKeyMap[name]] = value;\\n          },\\n          hasName: function CFFDict_hasName(name) {\\n            return this.nameToKeyMap[name] in this.values;\\n          },\\n          getByName: function CFFDict_getByName(name) {\\n            if (!(name in this.nameToKeyMap)) {\\n              throw new _util.FormatError(\\\"Invalid dictionary name \\\".concat(name, \\\"\\\\\\\"\\\"));\\n            }\\n\\n            var key = this.nameToKeyMap[name];\\n\\n            if (!(key in this.values)) {\\n              return this.defaults[key];\\n            }\\n\\n            return this.values[key];\\n          },\\n          removeByName: function CFFDict_removeByName(name) {\\n            delete this.values[this.nameToKeyMap[name]];\\n          }\\n        };\\n\\n        CFFDict.createTables = function CFFDict_createTables(layout) {\\n          var tables = {\\n            keyToNameMap: {},\\n            nameToKeyMap: {},\\n            defaults: {},\\n            types: {},\\n            opcodes: {},\\n            order: []\\n          };\\n\\n          for (var i = 0, ii = layout.length; i < ii; ++i) {\\n            var entry = layout[i];\\n            var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\\n            tables.keyToNameMap[key] = entry[1];\\n            tables.nameToKeyMap[entry[1]] = key;\\n            tables.types[key] = entry[2];\\n            tables.defaults[key] = entry[3];\\n            tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\\n            tables.order.push(key);\\n          }\\n\\n          return tables;\\n        };\\n\\n        return CFFDict;\\n      }();\\n\\n      var CFFTopDict = function CFFTopDictClosure() {\\n        var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\\n        var tables = null;\\n\\n        function CFFTopDict(strings) {\\n          if (tables === null) {\\n            tables = CFFDict.createTables(layout);\\n          }\\n\\n          CFFDict.call(this, tables, strings);\\n          this.privateDict = null;\\n        }\\n\\n        CFFTopDict.prototype = Object.create(CFFDict.prototype);\\n        return CFFTopDict;\\n      }();\\n\\n      exports.CFFTopDict = CFFTopDict;\\n\\n      var CFFPrivateDict = function CFFPrivateDictClosure() {\\n        var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\\n        var tables = null;\\n\\n        function CFFPrivateDict(strings) {\\n          if (tables === null) {\\n            tables = CFFDict.createTables(layout);\\n          }\\n\\n          CFFDict.call(this, tables, strings);\\n          this.subrsIndex = null;\\n        }\\n\\n        CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\\n        return CFFPrivateDict;\\n      }();\\n\\n      exports.CFFPrivateDict = CFFPrivateDict;\\n      var CFFCharsetPredefinedTypes = {\\n        ISO_ADOBE: 0,\\n        EXPERT: 1,\\n        EXPERT_SUBSET: 2\\n      };\\n\\n      var CFFCharset = function CFFCharsetClosure() {\\n        function CFFCharset(predefined, format, charset, raw) {\\n          this.predefined = predefined;\\n          this.format = format;\\n          this.charset = charset;\\n          this.raw = raw;\\n        }\\n\\n        return CFFCharset;\\n      }();\\n\\n      exports.CFFCharset = CFFCharset;\\n\\n      var CFFEncoding = function CFFEncodingClosure() {\\n        function CFFEncoding(predefined, format, encoding, raw) {\\n          this.predefined = predefined;\\n          this.format = format;\\n          this.encoding = encoding;\\n          this.raw = raw;\\n        }\\n\\n        return CFFEncoding;\\n      }();\\n\\n      var CFFFDSelect = function CFFFDSelectClosure() {\\n        function CFFFDSelect(format, fdSelect) {\\n          this.format = format;\\n          this.fdSelect = fdSelect;\\n        }\\n\\n        CFFFDSelect.prototype = {\\n          getFDIndex: function CFFFDSelect_get(glyphIndex) {\\n            if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\\n              return -1;\\n            }\\n\\n            return this.fdSelect[glyphIndex];\\n          }\\n        };\\n        return CFFFDSelect;\\n      }();\\n\\n      exports.CFFFDSelect = CFFFDSelect;\\n\\n      var CFFOffsetTracker = function CFFOffsetTrackerClosure() {\\n        function CFFOffsetTracker() {\\n          this.offsets = Object.create(null);\\n        }\\n\\n        CFFOffsetTracker.prototype = {\\n          isTracking: function CFFOffsetTracker_isTracking(key) {\\n            return key in this.offsets;\\n          },\\n          track: function CFFOffsetTracker_track(key, location) {\\n            if (key in this.offsets) {\\n              throw new _util.FormatError(\\\"Already tracking location of \\\".concat(key));\\n            }\\n\\n            this.offsets[key] = location;\\n          },\\n          offset: function CFFOffsetTracker_offset(value) {\\n            for (var key in this.offsets) {\\n              this.offsets[key] += value;\\n            }\\n          },\\n          setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\\n            if (!(key in this.offsets)) {\\n              throw new _util.FormatError(\\\"Not tracking location of \\\".concat(key));\\n            }\\n\\n            var data = output.data;\\n            var dataOffset = this.offsets[key];\\n            var size = 5;\\n\\n            for (var i = 0, ii = values.length; i < ii; ++i) {\\n              var offset0 = i * size + dataOffset;\\n              var offset1 = offset0 + 1;\\n              var offset2 = offset0 + 2;\\n              var offset3 = offset0 + 3;\\n              var offset4 = offset0 + 4;\\n\\n              if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\\n                throw new _util.FormatError('writing to an offset that is not empty');\\n              }\\n\\n              var value = values[i];\\n              data[offset0] = 0x1d;\\n              data[offset1] = value >> 24 & 0xFF;\\n              data[offset2] = value >> 16 & 0xFF;\\n              data[offset3] = value >> 8 & 0xFF;\\n              data[offset4] = value & 0xFF;\\n            }\\n          }\\n        };\\n        return CFFOffsetTracker;\\n      }();\\n\\n      var CFFCompiler = function CFFCompilerClosure() {\\n        function CFFCompiler(cff) {\\n          this.cff = cff;\\n        }\\n\\n        CFFCompiler.prototype = {\\n          compile: function CFFCompiler_compile() {\\n            var cff = this.cff;\\n            var output = {\\n              data: [],\\n              length: 0,\\n              add: function CFFCompiler_add(data) {\\n                this.data = this.data.concat(data);\\n                this.length = this.data.length;\\n              }\\n            };\\n            var header = this.compileHeader(cff.header);\\n            output.add(header);\\n            var nameIndex = this.compileNameIndex(cff.names);\\n            output.add(nameIndex);\\n\\n            if (cff.isCIDFont) {\\n              if (cff.topDict.hasName('FontMatrix')) {\\n                var base = cff.topDict.getByName('FontMatrix');\\n                cff.topDict.removeByName('FontMatrix');\\n\\n                for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\\n                  var subDict = cff.fdArray[i];\\n                  var matrix = base.slice(0);\\n\\n                  if (subDict.hasName('FontMatrix')) {\\n                    matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\\n                  }\\n\\n                  subDict.setByName('FontMatrix', matrix);\\n                }\\n              }\\n            }\\n\\n            cff.topDict.setByName('charset', 0);\\n            var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\\n            output.add(compiled.output);\\n            var topDictTracker = compiled.trackers[0];\\n            var stringIndex = this.compileStringIndex(cff.strings.strings);\\n            output.add(stringIndex);\\n            var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\\n            output.add(globalSubrIndex);\\n\\n            if (cff.encoding && cff.topDict.hasName('Encoding')) {\\n              if (cff.encoding.predefined) {\\n                topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\\n              } else {\\n                var encoding = this.compileEncoding(cff.encoding);\\n                topDictTracker.setEntryLocation('Encoding', [output.length], output);\\n                output.add(encoding);\\n              }\\n            }\\n\\n            var charset = this.compileCharset(cff.charset);\\n            topDictTracker.setEntryLocation('charset', [output.length], output);\\n            output.add(charset);\\n            var charStrings = this.compileCharStrings(cff.charStrings);\\n            topDictTracker.setEntryLocation('CharStrings', [output.length], output);\\n            output.add(charStrings);\\n\\n            if (cff.isCIDFont) {\\n              topDictTracker.setEntryLocation('FDSelect', [output.length], output);\\n              var fdSelect = this.compileFDSelect(cff.fdSelect);\\n              output.add(fdSelect);\\n              compiled = this.compileTopDicts(cff.fdArray, output.length, true);\\n              topDictTracker.setEntryLocation('FDArray', [output.length], output);\\n              output.add(compiled.output);\\n              var fontDictTrackers = compiled.trackers;\\n              this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\\n            }\\n\\n            this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\\n            output.add([0]);\\n            return output.data;\\n          },\\n          encodeNumber: function CFFCompiler_encodeNumber(value) {\\n            if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\\n              return this.encodeInteger(value);\\n            }\\n\\n            return this.encodeFloat(value);\\n          },\\n          encodeFloat: function CFFCompiler_encodeFloat(num) {\\n            var value = num.toString();\\n            var m = /\\\\.(\\\\d*?)(?:9{5,20}|0{5,20})\\\\d{0,2}(?:e(.+)|$)/.exec(value);\\n\\n            if (m) {\\n              var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\\n              value = (Math.round(num * epsilon) / epsilon).toString();\\n            }\\n\\n            var nibbles = '';\\n            var i, ii;\\n\\n            for (i = 0, ii = value.length; i < ii; ++i) {\\n              var a = value[i];\\n\\n              if (a === 'e') {\\n                nibbles += value[++i] === '-' ? 'c' : 'b';\\n              } else if (a === '.') {\\n                nibbles += 'a';\\n              } else if (a === '-') {\\n                nibbles += 'e';\\n              } else {\\n                nibbles += a;\\n              }\\n            }\\n\\n            nibbles += nibbles.length & 1 ? 'f' : 'ff';\\n            var out = [30];\\n\\n            for (i = 0, ii = nibbles.length; i < ii; i += 2) {\\n              out.push(parseInt(nibbles.substring(i, i + 2), 16));\\n            }\\n\\n            return out;\\n          },\\n          encodeInteger: function CFFCompiler_encodeInteger(value) {\\n            var code;\\n\\n            if (value >= -107 && value <= 107) {\\n              code = [value + 139];\\n            } else if (value >= 108 && value <= 1131) {\\n              value = value - 108;\\n              code = [(value >> 8) + 247, value & 0xFF];\\n            } else if (value >= -1131 && value <= -108) {\\n              value = -value - 108;\\n              code = [(value >> 8) + 251, value & 0xFF];\\n            } else if (value >= -32768 && value <= 32767) {\\n              code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\\n            } else {\\n              code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\\n            }\\n\\n            return code;\\n          },\\n          compileHeader: function CFFCompiler_compileHeader(header) {\\n            return [header.major, header.minor, header.hdrSize, header.offSize];\\n          },\\n          compileNameIndex: function CFFCompiler_compileNameIndex(names) {\\n            var nameIndex = new CFFIndex();\\n\\n            for (var i = 0, ii = names.length; i < ii; ++i) {\\n              var name = names[i];\\n              var length = Math.min(name.length, 127);\\n              var sanitizedName = new Array(length);\\n\\n              for (var j = 0; j < length; j++) {\\n                var char = name[j];\\n\\n                if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\\n                  char = '_';\\n                }\\n\\n                sanitizedName[j] = char;\\n              }\\n\\n              sanitizedName = sanitizedName.join('');\\n\\n              if (sanitizedName === '') {\\n                sanitizedName = 'Bad_Font_Name';\\n              }\\n\\n              nameIndex.add((0, _util.stringToBytes)(sanitizedName));\\n            }\\n\\n            return this.compileIndex(nameIndex);\\n          },\\n          compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\\n            var fontDictTrackers = [];\\n            var fdArrayIndex = new CFFIndex();\\n\\n            for (var i = 0, ii = dicts.length; i < ii; ++i) {\\n              var fontDict = dicts[i];\\n\\n              if (removeCidKeys) {\\n                fontDict.removeByName('CIDFontVersion');\\n                fontDict.removeByName('CIDFontRevision');\\n                fontDict.removeByName('CIDFontType');\\n                fontDict.removeByName('CIDCount');\\n                fontDict.removeByName('UIDBase');\\n              }\\n\\n              var fontDictTracker = new CFFOffsetTracker();\\n              var fontDictData = this.compileDict(fontDict, fontDictTracker);\\n              fontDictTrackers.push(fontDictTracker);\\n              fdArrayIndex.add(fontDictData);\\n              fontDictTracker.offset(length);\\n            }\\n\\n            fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\\n            return {\\n              trackers: fontDictTrackers,\\n              output: fdArrayIndex\\n            };\\n          },\\n          compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\\n            for (var i = 0, ii = dicts.length; i < ii; ++i) {\\n              var fontDict = dicts[i];\\n              var privateDict = fontDict.privateDict;\\n\\n              if (!privateDict || !fontDict.hasName('Private')) {\\n                throw new _util.FormatError('There must be a private dictionary.');\\n              }\\n\\n              var privateDictTracker = new CFFOffsetTracker();\\n              var privateDictData = this.compileDict(privateDict, privateDictTracker);\\n              var outputLength = output.length;\\n              privateDictTracker.offset(outputLength);\\n\\n              if (!privateDictData.length) {\\n                outputLength = 0;\\n              }\\n\\n              trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\\n              output.add(privateDictData);\\n\\n              if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\\n                var subrs = this.compileIndex(privateDict.subrsIndex);\\n                privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\\n                output.add(subrs);\\n              }\\n            }\\n          },\\n          compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\\n            var out = [];\\n            var order = dict.order;\\n\\n            for (var i = 0; i < order.length; ++i) {\\n              var key = order[i];\\n\\n              if (!(key in dict.values)) {\\n                continue;\\n              }\\n\\n              var values = dict.values[key];\\n              var types = dict.types[key];\\n\\n              if (!Array.isArray(types)) {\\n                types = [types];\\n              }\\n\\n              if (!Array.isArray(values)) {\\n                values = [values];\\n              }\\n\\n              if (values.length === 0) {\\n                continue;\\n              }\\n\\n              for (var j = 0, jj = types.length; j < jj; ++j) {\\n                var type = types[j];\\n                var value = values[j];\\n\\n                switch (type) {\\n                  case 'num':\\n                  case 'sid':\\n                    out = out.concat(this.encodeNumber(value));\\n                    break;\\n\\n                  case 'offset':\\n                    var name = dict.keyToNameMap[key];\\n\\n                    if (!offsetTracker.isTracking(name)) {\\n                      offsetTracker.track(name, out.length);\\n                    }\\n\\n                    out = out.concat([0x1d, 0, 0, 0, 0]);\\n                    break;\\n\\n                  case 'array':\\n                  case 'delta':\\n                    out = out.concat(this.encodeNumber(value));\\n\\n                    for (var k = 1, kk = values.length; k < kk; ++k) {\\n                      out = out.concat(this.encodeNumber(values[k]));\\n                    }\\n\\n                    break;\\n\\n                  default:\\n                    throw new _util.FormatError(\\\"Unknown data type of \\\".concat(type));\\n                }\\n              }\\n\\n              out = out.concat(dict.opcodes[key]);\\n            }\\n\\n            return out;\\n          },\\n          compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\\n            var stringIndex = new CFFIndex();\\n\\n            for (var i = 0, ii = strings.length; i < ii; ++i) {\\n              stringIndex.add((0, _util.stringToBytes)(strings[i]));\\n            }\\n\\n            return this.compileIndex(stringIndex);\\n          },\\n          compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\\n            var globalSubrIndex = this.cff.globalSubrIndex;\\n            this.out.writeByteArray(this.compileIndex(globalSubrIndex));\\n          },\\n          compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\\n            var charStringsIndex = new CFFIndex();\\n\\n            for (var i = 0; i < charStrings.count; i++) {\\n              var glyph = charStrings.get(i);\\n\\n              if (glyph.length === 0) {\\n                charStringsIndex.add(new Uint8Array([0x8B, 0x0E]));\\n                continue;\\n              }\\n\\n              charStringsIndex.add(glyph);\\n            }\\n\\n            return this.compileIndex(charStringsIndex);\\n          },\\n          compileCharset: function CFFCompiler_compileCharset(charset) {\\n            var length = 1 + (this.cff.charStrings.count - 1) * 2;\\n            var out = new Uint8Array(length);\\n            return this.compileTypedArray(out);\\n          },\\n          compileEncoding: function CFFCompiler_compileEncoding(encoding) {\\n            return this.compileTypedArray(encoding.raw);\\n          },\\n          compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\\n            var format = fdSelect.format;\\n            var out, i;\\n\\n            switch (format) {\\n              case 0:\\n                out = new Uint8Array(1 + fdSelect.fdSelect.length);\\n                out[0] = format;\\n\\n                for (i = 0; i < fdSelect.fdSelect.length; i++) {\\n                  out[i + 1] = fdSelect.fdSelect[i];\\n                }\\n\\n                break;\\n\\n              case 3:\\n                var start = 0;\\n                var lastFD = fdSelect.fdSelect[0];\\n                var ranges = [format, 0, 0, start >> 8 & 0xFF, start & 0xFF, lastFD];\\n\\n                for (i = 1; i < fdSelect.fdSelect.length; i++) {\\n                  var currentFD = fdSelect.fdSelect[i];\\n\\n                  if (currentFD !== lastFD) {\\n                    ranges.push(i >> 8 & 0xFF, i & 0xFF, currentFD);\\n                    lastFD = currentFD;\\n                  }\\n                }\\n\\n                var numRanges = (ranges.length - 3) / 3;\\n                ranges[1] = numRanges >> 8 & 0xFF;\\n                ranges[2] = numRanges & 0xFF;\\n                ranges.push(i >> 8 & 0xFF, i & 0xFF);\\n                out = new Uint8Array(ranges);\\n                break;\\n            }\\n\\n            return this.compileTypedArray(out);\\n          },\\n          compileTypedArray: function CFFCompiler_compileTypedArray(data) {\\n            var out = [];\\n\\n            for (var i = 0, ii = data.length; i < ii; ++i) {\\n              out[i] = data[i];\\n            }\\n\\n            return out;\\n          },\\n          compileIndex: function CFFCompiler_compileIndex(index, trackers) {\\n            trackers = trackers || [];\\n            var objects = index.objects;\\n            var count = objects.length;\\n\\n            if (count === 0) {\\n              return [0, 0, 0];\\n            }\\n\\n            var data = [count >> 8 & 0xFF, count & 0xff];\\n            var lastOffset = 1,\\n                i;\\n\\n            for (i = 0; i < count; ++i) {\\n              lastOffset += objects[i].length;\\n            }\\n\\n            var offsetSize;\\n\\n            if (lastOffset < 0x100) {\\n              offsetSize = 1;\\n            } else if (lastOffset < 0x10000) {\\n              offsetSize = 2;\\n            } else if (lastOffset < 0x1000000) {\\n              offsetSize = 3;\\n            } else {\\n              offsetSize = 4;\\n            }\\n\\n            data.push(offsetSize);\\n            var relativeOffset = 1;\\n\\n            for (i = 0; i < count + 1; i++) {\\n              if (offsetSize === 1) {\\n                data.push(relativeOffset & 0xFF);\\n              } else if (offsetSize === 2) {\\n                data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n              } else if (offsetSize === 3) {\\n                data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n              } else {\\n                data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\n              }\\n\\n              if (objects[i]) {\\n                relativeOffset += objects[i].length;\\n              }\\n            }\\n\\n            for (i = 0; i < count; i++) {\\n              if (trackers[i]) {\\n                trackers[i].offset(data.length);\\n              }\\n\\n              for (var j = 0, jj = objects[i].length; j < jj; j++) {\\n                data.push(objects[i][j]);\\n              }\\n            }\\n\\n            return data;\\n          }\\n        };\\n        return CFFCompiler;\\n      }();\\n\\n      exports.CFFCompiler = CFFCompiler;\\n      /***/\\n    },\\n    /* 175 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.ExpertSubsetCharset = exports.ExpertCharset = exports.ISOAdobeCharset = void 0;\\n      var ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\\n      exports.ISOAdobeCharset = ISOAdobeCharset;\\n      var ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\\n      exports.ExpertCharset = ExpertCharset;\\n      var ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\\n      exports.ExpertSubsetCharset = ExpertSubsetCharset;\\n      /***/\\n    },\\n    /* 176 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.getEncoding = getEncoding;\\n      exports.ExpertEncoding = exports.ZapfDingbatsEncoding = exports.SymbolSetEncoding = exports.MacRomanEncoding = exports.StandardEncoding = exports.WinAnsiEncoding = void 0;\\n      var ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\\n      exports.ExpertEncoding = ExpertEncoding;\\n      var MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\\n      var MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\\n      exports.MacRomanEncoding = MacRomanEncoding;\\n      var StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\\n      exports.StandardEncoding = StandardEncoding;\\n      var WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\\n      exports.WinAnsiEncoding = WinAnsiEncoding;\\n      var SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\\n      exports.SymbolSetEncoding = SymbolSetEncoding;\\n      var ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\\n      exports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\\n\\n      function getEncoding(encodingName) {\\n        switch (encodingName) {\\n          case 'WinAnsiEncoding':\\n            return WinAnsiEncoding;\\n\\n          case 'StandardEncoding':\\n            return StandardEncoding;\\n\\n          case 'MacRomanEncoding':\\n            return MacRomanEncoding;\\n\\n          case 'SymbolSetEncoding':\\n            return SymbolSetEncoding;\\n\\n          case 'ZapfDingbatsEncoding':\\n            return ZapfDingbatsEncoding;\\n\\n          case 'ExpertEncoding':\\n            return ExpertEncoding;\\n\\n          case 'MacExpertEncoding':\\n            return MacExpertEncoding;\\n\\n          default:\\n            return null;\\n        }\\n      }\\n      /***/\\n\\n    },\\n    /* 177 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      var getLookupTableFactory = __w_pdfjs_require__(6).getLookupTableFactory;\\n\\n      var getGlyphsUnicode = getLookupTableFactory(function (t) {\\n        t['A'] = 0x0041;\\n        t['AE'] = 0x00C6;\\n        t['AEacute'] = 0x01FC;\\n        t['AEmacron'] = 0x01E2;\\n        t['AEsmall'] = 0xF7E6;\\n        t['Aacute'] = 0x00C1;\\n        t['Aacutesmall'] = 0xF7E1;\\n        t['Abreve'] = 0x0102;\\n        t['Abreveacute'] = 0x1EAE;\\n        t['Abrevecyrillic'] = 0x04D0;\\n        t['Abrevedotbelow'] = 0x1EB6;\\n        t['Abrevegrave'] = 0x1EB0;\\n        t['Abrevehookabove'] = 0x1EB2;\\n        t['Abrevetilde'] = 0x1EB4;\\n        t['Acaron'] = 0x01CD;\\n        t['Acircle'] = 0x24B6;\\n        t['Acircumflex'] = 0x00C2;\\n        t['Acircumflexacute'] = 0x1EA4;\\n        t['Acircumflexdotbelow'] = 0x1EAC;\\n        t['Acircumflexgrave'] = 0x1EA6;\\n        t['Acircumflexhookabove'] = 0x1EA8;\\n        t['Acircumflexsmall'] = 0xF7E2;\\n        t['Acircumflextilde'] = 0x1EAA;\\n        t['Acute'] = 0xF6C9;\\n        t['Acutesmall'] = 0xF7B4;\\n        t['Acyrillic'] = 0x0410;\\n        t['Adblgrave'] = 0x0200;\\n        t['Adieresis'] = 0x00C4;\\n        t['Adieresiscyrillic'] = 0x04D2;\\n        t['Adieresismacron'] = 0x01DE;\\n        t['Adieresissmall'] = 0xF7E4;\\n        t['Adotbelow'] = 0x1EA0;\\n        t['Adotmacron'] = 0x01E0;\\n        t['Agrave'] = 0x00C0;\\n        t['Agravesmall'] = 0xF7E0;\\n        t['Ahookabove'] = 0x1EA2;\\n        t['Aiecyrillic'] = 0x04D4;\\n        t['Ainvertedbreve'] = 0x0202;\\n        t['Alpha'] = 0x0391;\\n        t['Alphatonos'] = 0x0386;\\n        t['Amacron'] = 0x0100;\\n        t['Amonospace'] = 0xFF21;\\n        t['Aogonek'] = 0x0104;\\n        t['Aring'] = 0x00C5;\\n        t['Aringacute'] = 0x01FA;\\n        t['Aringbelow'] = 0x1E00;\\n        t['Aringsmall'] = 0xF7E5;\\n        t['Asmall'] = 0xF761;\\n        t['Atilde'] = 0x00C3;\\n        t['Atildesmall'] = 0xF7E3;\\n        t['Aybarmenian'] = 0x0531;\\n        t['B'] = 0x0042;\\n        t['Bcircle'] = 0x24B7;\\n        t['Bdotaccent'] = 0x1E02;\\n        t['Bdotbelow'] = 0x1E04;\\n        t['Becyrillic'] = 0x0411;\\n        t['Benarmenian'] = 0x0532;\\n        t['Beta'] = 0x0392;\\n        t['Bhook'] = 0x0181;\\n        t['Blinebelow'] = 0x1E06;\\n        t['Bmonospace'] = 0xFF22;\\n        t['Brevesmall'] = 0xF6F4;\\n        t['Bsmall'] = 0xF762;\\n        t['Btopbar'] = 0x0182;\\n        t['C'] = 0x0043;\\n        t['Caarmenian'] = 0x053E;\\n        t['Cacute'] = 0x0106;\\n        t['Caron'] = 0xF6CA;\\n        t['Caronsmall'] = 0xF6F5;\\n        t['Ccaron'] = 0x010C;\\n        t['Ccedilla'] = 0x00C7;\\n        t['Ccedillaacute'] = 0x1E08;\\n        t['Ccedillasmall'] = 0xF7E7;\\n        t['Ccircle'] = 0x24B8;\\n        t['Ccircumflex'] = 0x0108;\\n        t['Cdot'] = 0x010A;\\n        t['Cdotaccent'] = 0x010A;\\n        t['Cedillasmall'] = 0xF7B8;\\n        t['Chaarmenian'] = 0x0549;\\n        t['Cheabkhasiancyrillic'] = 0x04BC;\\n        t['Checyrillic'] = 0x0427;\\n        t['Chedescenderabkhasiancyrillic'] = 0x04BE;\\n        t['Chedescendercyrillic'] = 0x04B6;\\n        t['Chedieresiscyrillic'] = 0x04F4;\\n        t['Cheharmenian'] = 0x0543;\\n        t['Chekhakassiancyrillic'] = 0x04CB;\\n        t['Cheverticalstrokecyrillic'] = 0x04B8;\\n        t['Chi'] = 0x03A7;\\n        t['Chook'] = 0x0187;\\n        t['Circumflexsmall'] = 0xF6F6;\\n        t['Cmonospace'] = 0xFF23;\\n        t['Coarmenian'] = 0x0551;\\n        t['Csmall'] = 0xF763;\\n        t['D'] = 0x0044;\\n        t['DZ'] = 0x01F1;\\n        t['DZcaron'] = 0x01C4;\\n        t['Daarmenian'] = 0x0534;\\n        t['Dafrican'] = 0x0189;\\n        t['Dcaron'] = 0x010E;\\n        t['Dcedilla'] = 0x1E10;\\n        t['Dcircle'] = 0x24B9;\\n        t['Dcircumflexbelow'] = 0x1E12;\\n        t['Dcroat'] = 0x0110;\\n        t['Ddotaccent'] = 0x1E0A;\\n        t['Ddotbelow'] = 0x1E0C;\\n        t['Decyrillic'] = 0x0414;\\n        t['Deicoptic'] = 0x03EE;\\n        t['Delta'] = 0x2206;\\n        t['Deltagreek'] = 0x0394;\\n        t['Dhook'] = 0x018A;\\n        t['Dieresis'] = 0xF6CB;\\n        t['DieresisAcute'] = 0xF6CC;\\n        t['DieresisGrave'] = 0xF6CD;\\n        t['Dieresissmall'] = 0xF7A8;\\n        t['Digammagreek'] = 0x03DC;\\n        t['Djecyrillic'] = 0x0402;\\n        t['Dlinebelow'] = 0x1E0E;\\n        t['Dmonospace'] = 0xFF24;\\n        t['Dotaccentsmall'] = 0xF6F7;\\n        t['Dslash'] = 0x0110;\\n        t['Dsmall'] = 0xF764;\\n        t['Dtopbar'] = 0x018B;\\n        t['Dz'] = 0x01F2;\\n        t['Dzcaron'] = 0x01C5;\\n        t['Dzeabkhasiancyrillic'] = 0x04E0;\\n        t['Dzecyrillic'] = 0x0405;\\n        t['Dzhecyrillic'] = 0x040F;\\n        t['E'] = 0x0045;\\n        t['Eacute'] = 0x00C9;\\n        t['Eacutesmall'] = 0xF7E9;\\n        t['Ebreve'] = 0x0114;\\n        t['Ecaron'] = 0x011A;\\n        t['Ecedillabreve'] = 0x1E1C;\\n        t['Echarmenian'] = 0x0535;\\n        t['Ecircle'] = 0x24BA;\\n        t['Ecircumflex'] = 0x00CA;\\n        t['Ecircumflexacute'] = 0x1EBE;\\n        t['Ecircumflexbelow'] = 0x1E18;\\n        t['Ecircumflexdotbelow'] = 0x1EC6;\\n        t['Ecircumflexgrave'] = 0x1EC0;\\n        t['Ecircumflexhookabove'] = 0x1EC2;\\n        t['Ecircumflexsmall'] = 0xF7EA;\\n        t['Ecircumflextilde'] = 0x1EC4;\\n        t['Ecyrillic'] = 0x0404;\\n        t['Edblgrave'] = 0x0204;\\n        t['Edieresis'] = 0x00CB;\\n        t['Edieresissmall'] = 0xF7EB;\\n        t['Edot'] = 0x0116;\\n        t['Edotaccent'] = 0x0116;\\n        t['Edotbelow'] = 0x1EB8;\\n        t['Efcyrillic'] = 0x0424;\\n        t['Egrave'] = 0x00C8;\\n        t['Egravesmall'] = 0xF7E8;\\n        t['Eharmenian'] = 0x0537;\\n        t['Ehookabove'] = 0x1EBA;\\n        t['Eightroman'] = 0x2167;\\n        t['Einvertedbreve'] = 0x0206;\\n        t['Eiotifiedcyrillic'] = 0x0464;\\n        t['Elcyrillic'] = 0x041B;\\n        t['Elevenroman'] = 0x216A;\\n        t['Emacron'] = 0x0112;\\n        t['Emacronacute'] = 0x1E16;\\n        t['Emacrongrave'] = 0x1E14;\\n        t['Emcyrillic'] = 0x041C;\\n        t['Emonospace'] = 0xFF25;\\n        t['Encyrillic'] = 0x041D;\\n        t['Endescendercyrillic'] = 0x04A2;\\n        t['Eng'] = 0x014A;\\n        t['Enghecyrillic'] = 0x04A4;\\n        t['Enhookcyrillic'] = 0x04C7;\\n        t['Eogonek'] = 0x0118;\\n        t['Eopen'] = 0x0190;\\n        t['Epsilon'] = 0x0395;\\n        t['Epsilontonos'] = 0x0388;\\n        t['Ercyrillic'] = 0x0420;\\n        t['Ereversed'] = 0x018E;\\n        t['Ereversedcyrillic'] = 0x042D;\\n        t['Escyrillic'] = 0x0421;\\n        t['Esdescendercyrillic'] = 0x04AA;\\n        t['Esh'] = 0x01A9;\\n        t['Esmall'] = 0xF765;\\n        t['Eta'] = 0x0397;\\n        t['Etarmenian'] = 0x0538;\\n        t['Etatonos'] = 0x0389;\\n        t['Eth'] = 0x00D0;\\n        t['Ethsmall'] = 0xF7F0;\\n        t['Etilde'] = 0x1EBC;\\n        t['Etildebelow'] = 0x1E1A;\\n        t['Euro'] = 0x20AC;\\n        t['Ezh'] = 0x01B7;\\n        t['Ezhcaron'] = 0x01EE;\\n        t['Ezhreversed'] = 0x01B8;\\n        t['F'] = 0x0046;\\n        t['Fcircle'] = 0x24BB;\\n        t['Fdotaccent'] = 0x1E1E;\\n        t['Feharmenian'] = 0x0556;\\n        t['Feicoptic'] = 0x03E4;\\n        t['Fhook'] = 0x0191;\\n        t['Fitacyrillic'] = 0x0472;\\n        t['Fiveroman'] = 0x2164;\\n        t['Fmonospace'] = 0xFF26;\\n        t['Fourroman'] = 0x2163;\\n        t['Fsmall'] = 0xF766;\\n        t['G'] = 0x0047;\\n        t['GBsquare'] = 0x3387;\\n        t['Gacute'] = 0x01F4;\\n        t['Gamma'] = 0x0393;\\n        t['Gammaafrican'] = 0x0194;\\n        t['Gangiacoptic'] = 0x03EA;\\n        t['Gbreve'] = 0x011E;\\n        t['Gcaron'] = 0x01E6;\\n        t['Gcedilla'] = 0x0122;\\n        t['Gcircle'] = 0x24BC;\\n        t['Gcircumflex'] = 0x011C;\\n        t['Gcommaaccent'] = 0x0122;\\n        t['Gdot'] = 0x0120;\\n        t['Gdotaccent'] = 0x0120;\\n        t['Gecyrillic'] = 0x0413;\\n        t['Ghadarmenian'] = 0x0542;\\n        t['Ghemiddlehookcyrillic'] = 0x0494;\\n        t['Ghestrokecyrillic'] = 0x0492;\\n        t['Gheupturncyrillic'] = 0x0490;\\n        t['Ghook'] = 0x0193;\\n        t['Gimarmenian'] = 0x0533;\\n        t['Gjecyrillic'] = 0x0403;\\n        t['Gmacron'] = 0x1E20;\\n        t['Gmonospace'] = 0xFF27;\\n        t['Grave'] = 0xF6CE;\\n        t['Gravesmall'] = 0xF760;\\n        t['Gsmall'] = 0xF767;\\n        t['Gsmallhook'] = 0x029B;\\n        t['Gstroke'] = 0x01E4;\\n        t['H'] = 0x0048;\\n        t['H18533'] = 0x25CF;\\n        t['H18543'] = 0x25AA;\\n        t['H18551'] = 0x25AB;\\n        t['H22073'] = 0x25A1;\\n        t['HPsquare'] = 0x33CB;\\n        t['Haabkhasiancyrillic'] = 0x04A8;\\n        t['Hadescendercyrillic'] = 0x04B2;\\n        t['Hardsigncyrillic'] = 0x042A;\\n        t['Hbar'] = 0x0126;\\n        t['Hbrevebelow'] = 0x1E2A;\\n        t['Hcedilla'] = 0x1E28;\\n        t['Hcircle'] = 0x24BD;\\n        t['Hcircumflex'] = 0x0124;\\n        t['Hdieresis'] = 0x1E26;\\n        t['Hdotaccent'] = 0x1E22;\\n        t['Hdotbelow'] = 0x1E24;\\n        t['Hmonospace'] = 0xFF28;\\n        t['Hoarmenian'] = 0x0540;\\n        t['Horicoptic'] = 0x03E8;\\n        t['Hsmall'] = 0xF768;\\n        t['Hungarumlaut'] = 0xF6CF;\\n        t['Hungarumlautsmall'] = 0xF6F8;\\n        t['Hzsquare'] = 0x3390;\\n        t['I'] = 0x0049;\\n        t['IAcyrillic'] = 0x042F;\\n        t['IJ'] = 0x0132;\\n        t['IUcyrillic'] = 0x042E;\\n        t['Iacute'] = 0x00CD;\\n        t['Iacutesmall'] = 0xF7ED;\\n        t['Ibreve'] = 0x012C;\\n        t['Icaron'] = 0x01CF;\\n        t['Icircle'] = 0x24BE;\\n        t['Icircumflex'] = 0x00CE;\\n        t['Icircumflexsmall'] = 0xF7EE;\\n        t['Icyrillic'] = 0x0406;\\n        t['Idblgrave'] = 0x0208;\\n        t['Idieresis'] = 0x00CF;\\n        t['Idieresisacute'] = 0x1E2E;\\n        t['Idieresiscyrillic'] = 0x04E4;\\n        t['Idieresissmall'] = 0xF7EF;\\n        t['Idot'] = 0x0130;\\n        t['Idotaccent'] = 0x0130;\\n        t['Idotbelow'] = 0x1ECA;\\n        t['Iebrevecyrillic'] = 0x04D6;\\n        t['Iecyrillic'] = 0x0415;\\n        t['Ifraktur'] = 0x2111;\\n        t['Igrave'] = 0x00CC;\\n        t['Igravesmall'] = 0xF7EC;\\n        t['Ihookabove'] = 0x1EC8;\\n        t['Iicyrillic'] = 0x0418;\\n        t['Iinvertedbreve'] = 0x020A;\\n        t['Iishortcyrillic'] = 0x0419;\\n        t['Imacron'] = 0x012A;\\n        t['Imacroncyrillic'] = 0x04E2;\\n        t['Imonospace'] = 0xFF29;\\n        t['Iniarmenian'] = 0x053B;\\n        t['Iocyrillic'] = 0x0401;\\n        t['Iogonek'] = 0x012E;\\n        t['Iota'] = 0x0399;\\n        t['Iotaafrican'] = 0x0196;\\n        t['Iotadieresis'] = 0x03AA;\\n        t['Iotatonos'] = 0x038A;\\n        t['Ismall'] = 0xF769;\\n        t['Istroke'] = 0x0197;\\n        t['Itilde'] = 0x0128;\\n        t['Itildebelow'] = 0x1E2C;\\n        t['Izhitsacyrillic'] = 0x0474;\\n        t['Izhitsadblgravecyrillic'] = 0x0476;\\n        t['J'] = 0x004A;\\n        t['Jaarmenian'] = 0x0541;\\n        t['Jcircle'] = 0x24BF;\\n        t['Jcircumflex'] = 0x0134;\\n        t['Jecyrillic'] = 0x0408;\\n        t['Jheharmenian'] = 0x054B;\\n        t['Jmonospace'] = 0xFF2A;\\n        t['Jsmall'] = 0xF76A;\\n        t['K'] = 0x004B;\\n        t['KBsquare'] = 0x3385;\\n        t['KKsquare'] = 0x33CD;\\n        t['Kabashkircyrillic'] = 0x04A0;\\n        t['Kacute'] = 0x1E30;\\n        t['Kacyrillic'] = 0x041A;\\n        t['Kadescendercyrillic'] = 0x049A;\\n        t['Kahookcyrillic'] = 0x04C3;\\n        t['Kappa'] = 0x039A;\\n        t['Kastrokecyrillic'] = 0x049E;\\n        t['Kaverticalstrokecyrillic'] = 0x049C;\\n        t['Kcaron'] = 0x01E8;\\n        t['Kcedilla'] = 0x0136;\\n        t['Kcircle'] = 0x24C0;\\n        t['Kcommaaccent'] = 0x0136;\\n        t['Kdotbelow'] = 0x1E32;\\n        t['Keharmenian'] = 0x0554;\\n        t['Kenarmenian'] = 0x053F;\\n        t['Khacyrillic'] = 0x0425;\\n        t['Kheicoptic'] = 0x03E6;\\n        t['Khook'] = 0x0198;\\n        t['Kjecyrillic'] = 0x040C;\\n        t['Klinebelow'] = 0x1E34;\\n        t['Kmonospace'] = 0xFF2B;\\n        t['Koppacyrillic'] = 0x0480;\\n        t['Koppagreek'] = 0x03DE;\\n        t['Ksicyrillic'] = 0x046E;\\n        t['Ksmall'] = 0xF76B;\\n        t['L'] = 0x004C;\\n        t['LJ'] = 0x01C7;\\n        t['LL'] = 0xF6BF;\\n        t['Lacute'] = 0x0139;\\n        t['Lambda'] = 0x039B;\\n        t['Lcaron'] = 0x013D;\\n        t['Lcedilla'] = 0x013B;\\n        t['Lcircle'] = 0x24C1;\\n        t['Lcircumflexbelow'] = 0x1E3C;\\n        t['Lcommaaccent'] = 0x013B;\\n        t['Ldot'] = 0x013F;\\n        t['Ldotaccent'] = 0x013F;\\n        t['Ldotbelow'] = 0x1E36;\\n        t['Ldotbelowmacron'] = 0x1E38;\\n        t['Liwnarmenian'] = 0x053C;\\n        t['Lj'] = 0x01C8;\\n        t['Ljecyrillic'] = 0x0409;\\n        t['Llinebelow'] = 0x1E3A;\\n        t['Lmonospace'] = 0xFF2C;\\n        t['Lslash'] = 0x0141;\\n        t['Lslashsmall'] = 0xF6F9;\\n        t['Lsmall'] = 0xF76C;\\n        t['M'] = 0x004D;\\n        t['MBsquare'] = 0x3386;\\n        t['Macron'] = 0xF6D0;\\n        t['Macronsmall'] = 0xF7AF;\\n        t['Macute'] = 0x1E3E;\\n        t['Mcircle'] = 0x24C2;\\n        t['Mdotaccent'] = 0x1E40;\\n        t['Mdotbelow'] = 0x1E42;\\n        t['Menarmenian'] = 0x0544;\\n        t['Mmonospace'] = 0xFF2D;\\n        t['Msmall'] = 0xF76D;\\n        t['Mturned'] = 0x019C;\\n        t['Mu'] = 0x039C;\\n        t['N'] = 0x004E;\\n        t['NJ'] = 0x01CA;\\n        t['Nacute'] = 0x0143;\\n        t['Ncaron'] = 0x0147;\\n        t['Ncedilla'] = 0x0145;\\n        t['Ncircle'] = 0x24C3;\\n        t['Ncircumflexbelow'] = 0x1E4A;\\n        t['Ncommaaccent'] = 0x0145;\\n        t['Ndotaccent'] = 0x1E44;\\n        t['Ndotbelow'] = 0x1E46;\\n        t['Nhookleft'] = 0x019D;\\n        t['Nineroman'] = 0x2168;\\n        t['Nj'] = 0x01CB;\\n        t['Njecyrillic'] = 0x040A;\\n        t['Nlinebelow'] = 0x1E48;\\n        t['Nmonospace'] = 0xFF2E;\\n        t['Nowarmenian'] = 0x0546;\\n        t['Nsmall'] = 0xF76E;\\n        t['Ntilde'] = 0x00D1;\\n        t['Ntildesmall'] = 0xF7F1;\\n        t['Nu'] = 0x039D;\\n        t['O'] = 0x004F;\\n        t['OE'] = 0x0152;\\n        t['OEsmall'] = 0xF6FA;\\n        t['Oacute'] = 0x00D3;\\n        t['Oacutesmall'] = 0xF7F3;\\n        t['Obarredcyrillic'] = 0x04E8;\\n        t['Obarreddieresiscyrillic'] = 0x04EA;\\n        t['Obreve'] = 0x014E;\\n        t['Ocaron'] = 0x01D1;\\n        t['Ocenteredtilde'] = 0x019F;\\n        t['Ocircle'] = 0x24C4;\\n        t['Ocircumflex'] = 0x00D4;\\n        t['Ocircumflexacute'] = 0x1ED0;\\n        t['Ocircumflexdotbelow'] = 0x1ED8;\\n        t['Ocircumflexgrave'] = 0x1ED2;\\n        t['Ocircumflexhookabove'] = 0x1ED4;\\n        t['Ocircumflexsmall'] = 0xF7F4;\\n        t['Ocircumflextilde'] = 0x1ED6;\\n        t['Ocyrillic'] = 0x041E;\\n        t['Odblacute'] = 0x0150;\\n        t['Odblgrave'] = 0x020C;\\n        t['Odieresis'] = 0x00D6;\\n        t['Odieresiscyrillic'] = 0x04E6;\\n        t['Odieresissmall'] = 0xF7F6;\\n        t['Odotbelow'] = 0x1ECC;\\n        t['Ogoneksmall'] = 0xF6FB;\\n        t['Ograve'] = 0x00D2;\\n        t['Ogravesmall'] = 0xF7F2;\\n        t['Oharmenian'] = 0x0555;\\n        t['Ohm'] = 0x2126;\\n        t['Ohookabove'] = 0x1ECE;\\n        t['Ohorn'] = 0x01A0;\\n        t['Ohornacute'] = 0x1EDA;\\n        t['Ohorndotbelow'] = 0x1EE2;\\n        t['Ohorngrave'] = 0x1EDC;\\n        t['Ohornhookabove'] = 0x1EDE;\\n        t['Ohorntilde'] = 0x1EE0;\\n        t['Ohungarumlaut'] = 0x0150;\\n        t['Oi'] = 0x01A2;\\n        t['Oinvertedbreve'] = 0x020E;\\n        t['Omacron'] = 0x014C;\\n        t['Omacronacute'] = 0x1E52;\\n        t['Omacrongrave'] = 0x1E50;\\n        t['Omega'] = 0x2126;\\n        t['Omegacyrillic'] = 0x0460;\\n        t['Omegagreek'] = 0x03A9;\\n        t['Omegaroundcyrillic'] = 0x047A;\\n        t['Omegatitlocyrillic'] = 0x047C;\\n        t['Omegatonos'] = 0x038F;\\n        t['Omicron'] = 0x039F;\\n        t['Omicrontonos'] = 0x038C;\\n        t['Omonospace'] = 0xFF2F;\\n        t['Oneroman'] = 0x2160;\\n        t['Oogonek'] = 0x01EA;\\n        t['Oogonekmacron'] = 0x01EC;\\n        t['Oopen'] = 0x0186;\\n        t['Oslash'] = 0x00D8;\\n        t['Oslashacute'] = 0x01FE;\\n        t['Oslashsmall'] = 0xF7F8;\\n        t['Osmall'] = 0xF76F;\\n        t['Ostrokeacute'] = 0x01FE;\\n        t['Otcyrillic'] = 0x047E;\\n        t['Otilde'] = 0x00D5;\\n        t['Otildeacute'] = 0x1E4C;\\n        t['Otildedieresis'] = 0x1E4E;\\n        t['Otildesmall'] = 0xF7F5;\\n        t['P'] = 0x0050;\\n        t['Pacute'] = 0x1E54;\\n        t['Pcircle'] = 0x24C5;\\n        t['Pdotaccent'] = 0x1E56;\\n        t['Pecyrillic'] = 0x041F;\\n        t['Peharmenian'] = 0x054A;\\n        t['Pemiddlehookcyrillic'] = 0x04A6;\\n        t['Phi'] = 0x03A6;\\n        t['Phook'] = 0x01A4;\\n        t['Pi'] = 0x03A0;\\n        t['Piwrarmenian'] = 0x0553;\\n        t['Pmonospace'] = 0xFF30;\\n        t['Psi'] = 0x03A8;\\n        t['Psicyrillic'] = 0x0470;\\n        t['Psmall'] = 0xF770;\\n        t['Q'] = 0x0051;\\n        t['Qcircle'] = 0x24C6;\\n        t['Qmonospace'] = 0xFF31;\\n        t['Qsmall'] = 0xF771;\\n        t['R'] = 0x0052;\\n        t['Raarmenian'] = 0x054C;\\n        t['Racute'] = 0x0154;\\n        t['Rcaron'] = 0x0158;\\n        t['Rcedilla'] = 0x0156;\\n        t['Rcircle'] = 0x24C7;\\n        t['Rcommaaccent'] = 0x0156;\\n        t['Rdblgrave'] = 0x0210;\\n        t['Rdotaccent'] = 0x1E58;\\n        t['Rdotbelow'] = 0x1E5A;\\n        t['Rdotbelowmacron'] = 0x1E5C;\\n        t['Reharmenian'] = 0x0550;\\n        t['Rfraktur'] = 0x211C;\\n        t['Rho'] = 0x03A1;\\n        t['Ringsmall'] = 0xF6FC;\\n        t['Rinvertedbreve'] = 0x0212;\\n        t['Rlinebelow'] = 0x1E5E;\\n        t['Rmonospace'] = 0xFF32;\\n        t['Rsmall'] = 0xF772;\\n        t['Rsmallinverted'] = 0x0281;\\n        t['Rsmallinvertedsuperior'] = 0x02B6;\\n        t['S'] = 0x0053;\\n        t['SF010000'] = 0x250C;\\n        t['SF020000'] = 0x2514;\\n        t['SF030000'] = 0x2510;\\n        t['SF040000'] = 0x2518;\\n        t['SF050000'] = 0x253C;\\n        t['SF060000'] = 0x252C;\\n        t['SF070000'] = 0x2534;\\n        t['SF080000'] = 0x251C;\\n        t['SF090000'] = 0x2524;\\n        t['SF100000'] = 0x2500;\\n        t['SF110000'] = 0x2502;\\n        t['SF190000'] = 0x2561;\\n        t['SF200000'] = 0x2562;\\n        t['SF210000'] = 0x2556;\\n        t['SF220000'] = 0x2555;\\n        t['SF230000'] = 0x2563;\\n        t['SF240000'] = 0x2551;\\n        t['SF250000'] = 0x2557;\\n        t['SF260000'] = 0x255D;\\n        t['SF270000'] = 0x255C;\\n        t['SF280000'] = 0x255B;\\n        t['SF360000'] = 0x255E;\\n        t['SF370000'] = 0x255F;\\n        t['SF380000'] = 0x255A;\\n        t['SF390000'] = 0x2554;\\n        t['SF400000'] = 0x2569;\\n        t['SF410000'] = 0x2566;\\n        t['SF420000'] = 0x2560;\\n        t['SF430000'] = 0x2550;\\n        t['SF440000'] = 0x256C;\\n        t['SF450000'] = 0x2567;\\n        t['SF460000'] = 0x2568;\\n        t['SF470000'] = 0x2564;\\n        t['SF480000'] = 0x2565;\\n        t['SF490000'] = 0x2559;\\n        t['SF500000'] = 0x2558;\\n        t['SF510000'] = 0x2552;\\n        t['SF520000'] = 0x2553;\\n        t['SF530000'] = 0x256B;\\n        t['SF540000'] = 0x256A;\\n        t['Sacute'] = 0x015A;\\n        t['Sacutedotaccent'] = 0x1E64;\\n        t['Sampigreek'] = 0x03E0;\\n        t['Scaron'] = 0x0160;\\n        t['Scarondotaccent'] = 0x1E66;\\n        t['Scaronsmall'] = 0xF6FD;\\n        t['Scedilla'] = 0x015E;\\n        t['Schwa'] = 0x018F;\\n        t['Schwacyrillic'] = 0x04D8;\\n        t['Schwadieresiscyrillic'] = 0x04DA;\\n        t['Scircle'] = 0x24C8;\\n        t['Scircumflex'] = 0x015C;\\n        t['Scommaaccent'] = 0x0218;\\n        t['Sdotaccent'] = 0x1E60;\\n        t['Sdotbelow'] = 0x1E62;\\n        t['Sdotbelowdotaccent'] = 0x1E68;\\n        t['Seharmenian'] = 0x054D;\\n        t['Sevenroman'] = 0x2166;\\n        t['Shaarmenian'] = 0x0547;\\n        t['Shacyrillic'] = 0x0428;\\n        t['Shchacyrillic'] = 0x0429;\\n        t['Sheicoptic'] = 0x03E2;\\n        t['Shhacyrillic'] = 0x04BA;\\n        t['Shimacoptic'] = 0x03EC;\\n        t['Sigma'] = 0x03A3;\\n        t['Sixroman'] = 0x2165;\\n        t['Smonospace'] = 0xFF33;\\n        t['Softsigncyrillic'] = 0x042C;\\n        t['Ssmall'] = 0xF773;\\n        t['Stigmagreek'] = 0x03DA;\\n        t['T'] = 0x0054;\\n        t['Tau'] = 0x03A4;\\n        t['Tbar'] = 0x0166;\\n        t['Tcaron'] = 0x0164;\\n        t['Tcedilla'] = 0x0162;\\n        t['Tcircle'] = 0x24C9;\\n        t['Tcircumflexbelow'] = 0x1E70;\\n        t['Tcommaaccent'] = 0x0162;\\n        t['Tdotaccent'] = 0x1E6A;\\n        t['Tdotbelow'] = 0x1E6C;\\n        t['Tecyrillic'] = 0x0422;\\n        t['Tedescendercyrillic'] = 0x04AC;\\n        t['Tenroman'] = 0x2169;\\n        t['Tetsecyrillic'] = 0x04B4;\\n        t['Theta'] = 0x0398;\\n        t['Thook'] = 0x01AC;\\n        t['Thorn'] = 0x00DE;\\n        t['Thornsmall'] = 0xF7FE;\\n        t['Threeroman'] = 0x2162;\\n        t['Tildesmall'] = 0xF6FE;\\n        t['Tiwnarmenian'] = 0x054F;\\n        t['Tlinebelow'] = 0x1E6E;\\n        t['Tmonospace'] = 0xFF34;\\n        t['Toarmenian'] = 0x0539;\\n        t['Tonefive'] = 0x01BC;\\n        t['Tonesix'] = 0x0184;\\n        t['Tonetwo'] = 0x01A7;\\n        t['Tretroflexhook'] = 0x01AE;\\n        t['Tsecyrillic'] = 0x0426;\\n        t['Tshecyrillic'] = 0x040B;\\n        t['Tsmall'] = 0xF774;\\n        t['Twelveroman'] = 0x216B;\\n        t['Tworoman'] = 0x2161;\\n        t['U'] = 0x0055;\\n        t['Uacute'] = 0x00DA;\\n        t['Uacutesmall'] = 0xF7FA;\\n        t['Ubreve'] = 0x016C;\\n        t['Ucaron'] = 0x01D3;\\n        t['Ucircle'] = 0x24CA;\\n        t['Ucircumflex'] = 0x00DB;\\n        t['Ucircumflexbelow'] = 0x1E76;\\n        t['Ucircumflexsmall'] = 0xF7FB;\\n        t['Ucyrillic'] = 0x0423;\\n        t['Udblacute'] = 0x0170;\\n        t['Udblgrave'] = 0x0214;\\n        t['Udieresis'] = 0x00DC;\\n        t['Udieresisacute'] = 0x01D7;\\n        t['Udieresisbelow'] = 0x1E72;\\n        t['Udieresiscaron'] = 0x01D9;\\n        t['Udieresiscyrillic'] = 0x04F0;\\n        t['Udieresisgrave'] = 0x01DB;\\n        t['Udieresismacron'] = 0x01D5;\\n        t['Udieresissmall'] = 0xF7FC;\\n        t['Udotbelow'] = 0x1EE4;\\n        t['Ugrave'] = 0x00D9;\\n        t['Ugravesmall'] = 0xF7F9;\\n        t['Uhookabove'] = 0x1EE6;\\n        t['Uhorn'] = 0x01AF;\\n        t['Uhornacute'] = 0x1EE8;\\n        t['Uhorndotbelow'] = 0x1EF0;\\n        t['Uhorngrave'] = 0x1EEA;\\n        t['Uhornhookabove'] = 0x1EEC;\\n        t['Uhorntilde'] = 0x1EEE;\\n        t['Uhungarumlaut'] = 0x0170;\\n        t['Uhungarumlautcyrillic'] = 0x04F2;\\n        t['Uinvertedbreve'] = 0x0216;\\n        t['Ukcyrillic'] = 0x0478;\\n        t['Umacron'] = 0x016A;\\n        t['Umacroncyrillic'] = 0x04EE;\\n        t['Umacrondieresis'] = 0x1E7A;\\n        t['Umonospace'] = 0xFF35;\\n        t['Uogonek'] = 0x0172;\\n        t['Upsilon'] = 0x03A5;\\n        t['Upsilon1'] = 0x03D2;\\n        t['Upsilonacutehooksymbolgreek'] = 0x03D3;\\n        t['Upsilonafrican'] = 0x01B1;\\n        t['Upsilondieresis'] = 0x03AB;\\n        t['Upsilondieresishooksymbolgreek'] = 0x03D4;\\n        t['Upsilonhooksymbol'] = 0x03D2;\\n        t['Upsilontonos'] = 0x038E;\\n        t['Uring'] = 0x016E;\\n        t['Ushortcyrillic'] = 0x040E;\\n        t['Usmall'] = 0xF775;\\n        t['Ustraightcyrillic'] = 0x04AE;\\n        t['Ustraightstrokecyrillic'] = 0x04B0;\\n        t['Utilde'] = 0x0168;\\n        t['Utildeacute'] = 0x1E78;\\n        t['Utildebelow'] = 0x1E74;\\n        t['V'] = 0x0056;\\n        t['Vcircle'] = 0x24CB;\\n        t['Vdotbelow'] = 0x1E7E;\\n        t['Vecyrillic'] = 0x0412;\\n        t['Vewarmenian'] = 0x054E;\\n        t['Vhook'] = 0x01B2;\\n        t['Vmonospace'] = 0xFF36;\\n        t['Voarmenian'] = 0x0548;\\n        t['Vsmall'] = 0xF776;\\n        t['Vtilde'] = 0x1E7C;\\n        t['W'] = 0x0057;\\n        t['Wacute'] = 0x1E82;\\n        t['Wcircle'] = 0x24CC;\\n        t['Wcircumflex'] = 0x0174;\\n        t['Wdieresis'] = 0x1E84;\\n        t['Wdotaccent'] = 0x1E86;\\n        t['Wdotbelow'] = 0x1E88;\\n        t['Wgrave'] = 0x1E80;\\n        t['Wmonospace'] = 0xFF37;\\n        t['Wsmall'] = 0xF777;\\n        t['X'] = 0x0058;\\n        t['Xcircle'] = 0x24CD;\\n        t['Xdieresis'] = 0x1E8C;\\n        t['Xdotaccent'] = 0x1E8A;\\n        t['Xeharmenian'] = 0x053D;\\n        t['Xi'] = 0x039E;\\n        t['Xmonospace'] = 0xFF38;\\n        t['Xsmall'] = 0xF778;\\n        t['Y'] = 0x0059;\\n        t['Yacute'] = 0x00DD;\\n        t['Yacutesmall'] = 0xF7FD;\\n        t['Yatcyrillic'] = 0x0462;\\n        t['Ycircle'] = 0x24CE;\\n        t['Ycircumflex'] = 0x0176;\\n        t['Ydieresis'] = 0x0178;\\n        t['Ydieresissmall'] = 0xF7FF;\\n        t['Ydotaccent'] = 0x1E8E;\\n        t['Ydotbelow'] = 0x1EF4;\\n        t['Yericyrillic'] = 0x042B;\\n        t['Yerudieresiscyrillic'] = 0x04F8;\\n        t['Ygrave'] = 0x1EF2;\\n        t['Yhook'] = 0x01B3;\\n        t['Yhookabove'] = 0x1EF6;\\n        t['Yiarmenian'] = 0x0545;\\n        t['Yicyrillic'] = 0x0407;\\n        t['Yiwnarmenian'] = 0x0552;\\n        t['Ymonospace'] = 0xFF39;\\n        t['Ysmall'] = 0xF779;\\n        t['Ytilde'] = 0x1EF8;\\n        t['Yusbigcyrillic'] = 0x046A;\\n        t['Yusbigiotifiedcyrillic'] = 0x046C;\\n        t['Yuslittlecyrillic'] = 0x0466;\\n        t['Yuslittleiotifiedcyrillic'] = 0x0468;\\n        t['Z'] = 0x005A;\\n        t['Zaarmenian'] = 0x0536;\\n        t['Zacute'] = 0x0179;\\n        t['Zcaron'] = 0x017D;\\n        t['Zcaronsmall'] = 0xF6FF;\\n        t['Zcircle'] = 0x24CF;\\n        t['Zcircumflex'] = 0x1E90;\\n        t['Zdot'] = 0x017B;\\n        t['Zdotaccent'] = 0x017B;\\n        t['Zdotbelow'] = 0x1E92;\\n        t['Zecyrillic'] = 0x0417;\\n        t['Zedescendercyrillic'] = 0x0498;\\n        t['Zedieresiscyrillic'] = 0x04DE;\\n        t['Zeta'] = 0x0396;\\n        t['Zhearmenian'] = 0x053A;\\n        t['Zhebrevecyrillic'] = 0x04C1;\\n        t['Zhecyrillic'] = 0x0416;\\n        t['Zhedescendercyrillic'] = 0x0496;\\n        t['Zhedieresiscyrillic'] = 0x04DC;\\n        t['Zlinebelow'] = 0x1E94;\\n        t['Zmonospace'] = 0xFF3A;\\n        t['Zsmall'] = 0xF77A;\\n        t['Zstroke'] = 0x01B5;\\n        t['a'] = 0x0061;\\n        t['aabengali'] = 0x0986;\\n        t['aacute'] = 0x00E1;\\n        t['aadeva'] = 0x0906;\\n        t['aagujarati'] = 0x0A86;\\n        t['aagurmukhi'] = 0x0A06;\\n        t['aamatragurmukhi'] = 0x0A3E;\\n        t['aarusquare'] = 0x3303;\\n        t['aavowelsignbengali'] = 0x09BE;\\n        t['aavowelsigndeva'] = 0x093E;\\n        t['aavowelsigngujarati'] = 0x0ABE;\\n        t['abbreviationmarkarmenian'] = 0x055F;\\n        t['abbreviationsigndeva'] = 0x0970;\\n        t['abengali'] = 0x0985;\\n        t['abopomofo'] = 0x311A;\\n        t['abreve'] = 0x0103;\\n        t['abreveacute'] = 0x1EAF;\\n        t['abrevecyrillic'] = 0x04D1;\\n        t['abrevedotbelow'] = 0x1EB7;\\n        t['abrevegrave'] = 0x1EB1;\\n        t['abrevehookabove'] = 0x1EB3;\\n        t['abrevetilde'] = 0x1EB5;\\n        t['acaron'] = 0x01CE;\\n        t['acircle'] = 0x24D0;\\n        t['acircumflex'] = 0x00E2;\\n        t['acircumflexacute'] = 0x1EA5;\\n        t['acircumflexdotbelow'] = 0x1EAD;\\n        t['acircumflexgrave'] = 0x1EA7;\\n        t['acircumflexhookabove'] = 0x1EA9;\\n        t['acircumflextilde'] = 0x1EAB;\\n        t['acute'] = 0x00B4;\\n        t['acutebelowcmb'] = 0x0317;\\n        t['acutecmb'] = 0x0301;\\n        t['acutecomb'] = 0x0301;\\n        t['acutedeva'] = 0x0954;\\n        t['acutelowmod'] = 0x02CF;\\n        t['acutetonecmb'] = 0x0341;\\n        t['acyrillic'] = 0x0430;\\n        t['adblgrave'] = 0x0201;\\n        t['addakgurmukhi'] = 0x0A71;\\n        t['adeva'] = 0x0905;\\n        t['adieresis'] = 0x00E4;\\n        t['adieresiscyrillic'] = 0x04D3;\\n        t['adieresismacron'] = 0x01DF;\\n        t['adotbelow'] = 0x1EA1;\\n        t['adotmacron'] = 0x01E1;\\n        t['ae'] = 0x00E6;\\n        t['aeacute'] = 0x01FD;\\n        t['aekorean'] = 0x3150;\\n        t['aemacron'] = 0x01E3;\\n        t['afii00208'] = 0x2015;\\n        t['afii08941'] = 0x20A4;\\n        t['afii10017'] = 0x0410;\\n        t['afii10018'] = 0x0411;\\n        t['afii10019'] = 0x0412;\\n        t['afii10020'] = 0x0413;\\n        t['afii10021'] = 0x0414;\\n        t['afii10022'] = 0x0415;\\n        t['afii10023'] = 0x0401;\\n        t['afii10024'] = 0x0416;\\n        t['afii10025'] = 0x0417;\\n        t['afii10026'] = 0x0418;\\n        t['afii10027'] = 0x0419;\\n        t['afii10028'] = 0x041A;\\n        t['afii10029'] = 0x041B;\\n        t['afii10030'] = 0x041C;\\n        t['afii10031'] = 0x041D;\\n        t['afii10032'] = 0x041E;\\n        t['afii10033'] = 0x041F;\\n        t['afii10034'] = 0x0420;\\n        t['afii10035'] = 0x0421;\\n        t['afii10036'] = 0x0422;\\n        t['afii10037'] = 0x0423;\\n        t['afii10038'] = 0x0424;\\n        t['afii10039'] = 0x0425;\\n        t['afii10040'] = 0x0426;\\n        t['afii10041'] = 0x0427;\\n        t['afii10042'] = 0x0428;\\n        t['afii10043'] = 0x0429;\\n        t['afii10044'] = 0x042A;\\n        t['afii10045'] = 0x042B;\\n        t['afii10046'] = 0x042C;\\n        t['afii10047'] = 0x042D;\\n        t['afii10048'] = 0x042E;\\n        t['afii10049'] = 0x042F;\\n        t['afii10050'] = 0x0490;\\n        t['afii10051'] = 0x0402;\\n        t['afii10052'] = 0x0403;\\n        t['afii10053'] = 0x0404;\\n        t['afii10054'] = 0x0405;\\n        t['afii10055'] = 0x0406;\\n        t['afii10056'] = 0x0407;\\n        t['afii10057'] = 0x0408;\\n        t['afii10058'] = 0x0409;\\n        t['afii10059'] = 0x040A;\\n        t['afii10060'] = 0x040B;\\n        t['afii10061'] = 0x040C;\\n        t['afii10062'] = 0x040E;\\n        t['afii10063'] = 0xF6C4;\\n        t['afii10064'] = 0xF6C5;\\n        t['afii10065'] = 0x0430;\\n        t['afii10066'] = 0x0431;\\n        t['afii10067'] = 0x0432;\\n        t['afii10068'] = 0x0433;\\n        t['afii10069'] = 0x0434;\\n        t['afii10070'] = 0x0435;\\n        t['afii10071'] = 0x0451;\\n        t['afii10072'] = 0x0436;\\n        t['afii10073'] = 0x0437;\\n        t['afii10074'] = 0x0438;\\n        t['afii10075'] = 0x0439;\\n        t['afii10076'] = 0x043A;\\n        t['afii10077'] = 0x043B;\\n        t['afii10078'] = 0x043C;\\n        t['afii10079'] = 0x043D;\\n        t['afii10080'] = 0x043E;\\n        t['afii10081'] = 0x043F;\\n        t['afii10082'] = 0x0440;\\n        t['afii10083'] = 0x0441;\\n        t['afii10084'] = 0x0442;\\n        t['afii10085'] = 0x0443;\\n        t['afii10086'] = 0x0444;\\n        t['afii10087'] = 0x0445;\\n        t['afii10088'] = 0x0446;\\n        t['afii10089'] = 0x0447;\\n        t['afii10090'] = 0x0448;\\n        t['afii10091'] = 0x0449;\\n        t['afii10092'] = 0x044A;\\n        t['afii10093'] = 0x044B;\\n        t['afii10094'] = 0x044C;\\n        t['afii10095'] = 0x044D;\\n        t['afii10096'] = 0x044E;\\n        t['afii10097'] = 0x044F;\\n        t['afii10098'] = 0x0491;\\n        t['afii10099'] = 0x0452;\\n        t['afii10100'] = 0x0453;\\n        t['afii10101'] = 0x0454;\\n        t['afii10102'] = 0x0455;\\n        t['afii10103'] = 0x0456;\\n        t['afii10104'] = 0x0457;\\n        t['afii10105'] = 0x0458;\\n        t['afii10106'] = 0x0459;\\n        t['afii10107'] = 0x045A;\\n        t['afii10108'] = 0x045B;\\n        t['afii10109'] = 0x045C;\\n        t['afii10110'] = 0x045E;\\n        t['afii10145'] = 0x040F;\\n        t['afii10146'] = 0x0462;\\n        t['afii10147'] = 0x0472;\\n        t['afii10148'] = 0x0474;\\n        t['afii10192'] = 0xF6C6;\\n        t['afii10193'] = 0x045F;\\n        t['afii10194'] = 0x0463;\\n        t['afii10195'] = 0x0473;\\n        t['afii10196'] = 0x0475;\\n        t['afii10831'] = 0xF6C7;\\n        t['afii10832'] = 0xF6C8;\\n        t['afii10846'] = 0x04D9;\\n        t['afii299'] = 0x200E;\\n        t['afii300'] = 0x200F;\\n        t['afii301'] = 0x200D;\\n        t['afii57381'] = 0x066A;\\n        t['afii57388'] = 0x060C;\\n        t['afii57392'] = 0x0660;\\n        t['afii57393'] = 0x0661;\\n        t['afii57394'] = 0x0662;\\n        t['afii57395'] = 0x0663;\\n        t['afii57396'] = 0x0664;\\n        t['afii57397'] = 0x0665;\\n        t['afii57398'] = 0x0666;\\n        t['afii57399'] = 0x0667;\\n        t['afii57400'] = 0x0668;\\n        t['afii57401'] = 0x0669;\\n        t['afii57403'] = 0x061B;\\n        t['afii57407'] = 0x061F;\\n        t['afii57409'] = 0x0621;\\n        t['afii57410'] = 0x0622;\\n        t['afii57411'] = 0x0623;\\n        t['afii57412'] = 0x0624;\\n        t['afii57413'] = 0x0625;\\n        t['afii57414'] = 0x0626;\\n        t['afii57415'] = 0x0627;\\n        t['afii57416'] = 0x0628;\\n        t['afii57417'] = 0x0629;\\n        t['afii57418'] = 0x062A;\\n        t['afii57419'] = 0x062B;\\n        t['afii57420'] = 0x062C;\\n        t['afii57421'] = 0x062D;\\n        t['afii57422'] = 0x062E;\\n        t['afii57423'] = 0x062F;\\n        t['afii57424'] = 0x0630;\\n        t['afii57425'] = 0x0631;\\n        t['afii57426'] = 0x0632;\\n        t['afii57427'] = 0x0633;\\n        t['afii57428'] = 0x0634;\\n        t['afii57429'] = 0x0635;\\n        t['afii57430'] = 0x0636;\\n        t['afii57431'] = 0x0637;\\n        t['afii57432'] = 0x0638;\\n        t['afii57433'] = 0x0639;\\n        t['afii57434'] = 0x063A;\\n        t['afii57440'] = 0x0640;\\n        t['afii57441'] = 0x0641;\\n        t['afii57442'] = 0x0642;\\n        t['afii57443'] = 0x0643;\\n        t['afii57444'] = 0x0644;\\n        t['afii57445'] = 0x0645;\\n        t['afii57446'] = 0x0646;\\n        t['afii57448'] = 0x0648;\\n        t['afii57449'] = 0x0649;\\n        t['afii57450'] = 0x064A;\\n        t['afii57451'] = 0x064B;\\n        t['afii57452'] = 0x064C;\\n        t['afii57453'] = 0x064D;\\n        t['afii57454'] = 0x064E;\\n        t['afii57455'] = 0x064F;\\n        t['afii57456'] = 0x0650;\\n        t['afii57457'] = 0x0651;\\n        t['afii57458'] = 0x0652;\\n        t['afii57470'] = 0x0647;\\n        t['afii57505'] = 0x06A4;\\n        t['afii57506'] = 0x067E;\\n        t['afii57507'] = 0x0686;\\n        t['afii57508'] = 0x0698;\\n        t['afii57509'] = 0x06AF;\\n        t['afii57511'] = 0x0679;\\n        t['afii57512'] = 0x0688;\\n        t['afii57513'] = 0x0691;\\n        t['afii57514'] = 0x06BA;\\n        t['afii57519'] = 0x06D2;\\n        t['afii57534'] = 0x06D5;\\n        t['afii57636'] = 0x20AA;\\n        t['afii57645'] = 0x05BE;\\n        t['afii57658'] = 0x05C3;\\n        t['afii57664'] = 0x05D0;\\n        t['afii57665'] = 0x05D1;\\n        t['afii57666'] = 0x05D2;\\n        t['afii57667'] = 0x05D3;\\n        t['afii57668'] = 0x05D4;\\n        t['afii57669'] = 0x05D5;\\n        t['afii57670'] = 0x05D6;\\n        t['afii57671'] = 0x05D7;\\n        t['afii57672'] = 0x05D8;\\n        t['afii57673'] = 0x05D9;\\n        t['afii57674'] = 0x05DA;\\n        t['afii57675'] = 0x05DB;\\n        t['afii57676'] = 0x05DC;\\n        t['afii57677'] = 0x05DD;\\n        t['afii57678'] = 0x05DE;\\n        t['afii57679'] = 0x05DF;\\n        t['afii57680'] = 0x05E0;\\n        t['afii57681'] = 0x05E1;\\n        t['afii57682'] = 0x05E2;\\n        t['afii57683'] = 0x05E3;\\n        t['afii57684'] = 0x05E4;\\n        t['afii57685'] = 0x05E5;\\n        t['afii57686'] = 0x05E6;\\n        t['afii57687'] = 0x05E7;\\n        t['afii57688'] = 0x05E8;\\n        t['afii57689'] = 0x05E9;\\n        t['afii57690'] = 0x05EA;\\n        t['afii57694'] = 0xFB2A;\\n        t['afii57695'] = 0xFB2B;\\n        t['afii57700'] = 0xFB4B;\\n        t['afii57705'] = 0xFB1F;\\n        t['afii57716'] = 0x05F0;\\n        t['afii57717'] = 0x05F1;\\n        t['afii57718'] = 0x05F2;\\n        t['afii57723'] = 0xFB35;\\n        t['afii57793'] = 0x05B4;\\n        t['afii57794'] = 0x05B5;\\n        t['afii57795'] = 0x05B6;\\n        t['afii57796'] = 0x05BB;\\n        t['afii57797'] = 0x05B8;\\n        t['afii57798'] = 0x05B7;\\n        t['afii57799'] = 0x05B0;\\n        t['afii57800'] = 0x05B2;\\n        t['afii57801'] = 0x05B1;\\n        t['afii57802'] = 0x05B3;\\n        t['afii57803'] = 0x05C2;\\n        t['afii57804'] = 0x05C1;\\n        t['afii57806'] = 0x05B9;\\n        t['afii57807'] = 0x05BC;\\n        t['afii57839'] = 0x05BD;\\n        t['afii57841'] = 0x05BF;\\n        t['afii57842'] = 0x05C0;\\n        t['afii57929'] = 0x02BC;\\n        t['afii61248'] = 0x2105;\\n        t['afii61289'] = 0x2113;\\n        t['afii61352'] = 0x2116;\\n        t['afii61573'] = 0x202C;\\n        t['afii61574'] = 0x202D;\\n        t['afii61575'] = 0x202E;\\n        t['afii61664'] = 0x200C;\\n        t['afii63167'] = 0x066D;\\n        t['afii64937'] = 0x02BD;\\n        t['agrave'] = 0x00E0;\\n        t['agujarati'] = 0x0A85;\\n        t['agurmukhi'] = 0x0A05;\\n        t['ahiragana'] = 0x3042;\\n        t['ahookabove'] = 0x1EA3;\\n        t['aibengali'] = 0x0990;\\n        t['aibopomofo'] = 0x311E;\\n        t['aideva'] = 0x0910;\\n        t['aiecyrillic'] = 0x04D5;\\n        t['aigujarati'] = 0x0A90;\\n        t['aigurmukhi'] = 0x0A10;\\n        t['aimatragurmukhi'] = 0x0A48;\\n        t['ainarabic'] = 0x0639;\\n        t['ainfinalarabic'] = 0xFECA;\\n        t['aininitialarabic'] = 0xFECB;\\n        t['ainmedialarabic'] = 0xFECC;\\n        t['ainvertedbreve'] = 0x0203;\\n        t['aivowelsignbengali'] = 0x09C8;\\n        t['aivowelsigndeva'] = 0x0948;\\n        t['aivowelsigngujarati'] = 0x0AC8;\\n        t['akatakana'] = 0x30A2;\\n        t['akatakanahalfwidth'] = 0xFF71;\\n        t['akorean'] = 0x314F;\\n        t['alef'] = 0x05D0;\\n        t['alefarabic'] = 0x0627;\\n        t['alefdageshhebrew'] = 0xFB30;\\n        t['aleffinalarabic'] = 0xFE8E;\\n        t['alefhamzaabovearabic'] = 0x0623;\\n        t['alefhamzaabovefinalarabic'] = 0xFE84;\\n        t['alefhamzabelowarabic'] = 0x0625;\\n        t['alefhamzabelowfinalarabic'] = 0xFE88;\\n        t['alefhebrew'] = 0x05D0;\\n        t['aleflamedhebrew'] = 0xFB4F;\\n        t['alefmaddaabovearabic'] = 0x0622;\\n        t['alefmaddaabovefinalarabic'] = 0xFE82;\\n        t['alefmaksuraarabic'] = 0x0649;\\n        t['alefmaksurafinalarabic'] = 0xFEF0;\\n        t['alefmaksurainitialarabic'] = 0xFEF3;\\n        t['alefmaksuramedialarabic'] = 0xFEF4;\\n        t['alefpatahhebrew'] = 0xFB2E;\\n        t['alefqamatshebrew'] = 0xFB2F;\\n        t['aleph'] = 0x2135;\\n        t['allequal'] = 0x224C;\\n        t['alpha'] = 0x03B1;\\n        t['alphatonos'] = 0x03AC;\\n        t['amacron'] = 0x0101;\\n        t['amonospace'] = 0xFF41;\\n        t['ampersand'] = 0x0026;\\n        t['ampersandmonospace'] = 0xFF06;\\n        t['ampersandsmall'] = 0xF726;\\n        t['amsquare'] = 0x33C2;\\n        t['anbopomofo'] = 0x3122;\\n        t['angbopomofo'] = 0x3124;\\n        t['angbracketleft'] = 0x3008;\\n        t['angbracketright'] = 0x3009;\\n        t['angkhankhuthai'] = 0x0E5A;\\n        t['angle'] = 0x2220;\\n        t['anglebracketleft'] = 0x3008;\\n        t['anglebracketleftvertical'] = 0xFE3F;\\n        t['anglebracketright'] = 0x3009;\\n        t['anglebracketrightvertical'] = 0xFE40;\\n        t['angleleft'] = 0x2329;\\n        t['angleright'] = 0x232A;\\n        t['angstrom'] = 0x212B;\\n        t['anoteleia'] = 0x0387;\\n        t['anudattadeva'] = 0x0952;\\n        t['anusvarabengali'] = 0x0982;\\n        t['anusvaradeva'] = 0x0902;\\n        t['anusvaragujarati'] = 0x0A82;\\n        t['aogonek'] = 0x0105;\\n        t['apaatosquare'] = 0x3300;\\n        t['aparen'] = 0x249C;\\n        t['apostrophearmenian'] = 0x055A;\\n        t['apostrophemod'] = 0x02BC;\\n        t['apple'] = 0xF8FF;\\n        t['approaches'] = 0x2250;\\n        t['approxequal'] = 0x2248;\\n        t['approxequalorimage'] = 0x2252;\\n        t['approximatelyequal'] = 0x2245;\\n        t['araeaekorean'] = 0x318E;\\n        t['araeakorean'] = 0x318D;\\n        t['arc'] = 0x2312;\\n        t['arighthalfring'] = 0x1E9A;\\n        t['aring'] = 0x00E5;\\n        t['aringacute'] = 0x01FB;\\n        t['aringbelow'] = 0x1E01;\\n        t['arrowboth'] = 0x2194;\\n        t['arrowdashdown'] = 0x21E3;\\n        t['arrowdashleft'] = 0x21E0;\\n        t['arrowdashright'] = 0x21E2;\\n        t['arrowdashup'] = 0x21E1;\\n        t['arrowdblboth'] = 0x21D4;\\n        t['arrowdbldown'] = 0x21D3;\\n        t['arrowdblleft'] = 0x21D0;\\n        t['arrowdblright'] = 0x21D2;\\n        t['arrowdblup'] = 0x21D1;\\n        t['arrowdown'] = 0x2193;\\n        t['arrowdownleft'] = 0x2199;\\n        t['arrowdownright'] = 0x2198;\\n        t['arrowdownwhite'] = 0x21E9;\\n        t['arrowheaddownmod'] = 0x02C5;\\n        t['arrowheadleftmod'] = 0x02C2;\\n        t['arrowheadrightmod'] = 0x02C3;\\n        t['arrowheadupmod'] = 0x02C4;\\n        t['arrowhorizex'] = 0xF8E7;\\n        t['arrowleft'] = 0x2190;\\n        t['arrowleftdbl'] = 0x21D0;\\n        t['arrowleftdblstroke'] = 0x21CD;\\n        t['arrowleftoverright'] = 0x21C6;\\n        t['arrowleftwhite'] = 0x21E6;\\n        t['arrowright'] = 0x2192;\\n        t['arrowrightdblstroke'] = 0x21CF;\\n        t['arrowrightheavy'] = 0x279E;\\n        t['arrowrightoverleft'] = 0x21C4;\\n        t['arrowrightwhite'] = 0x21E8;\\n        t['arrowtableft'] = 0x21E4;\\n        t['arrowtabright'] = 0x21E5;\\n        t['arrowup'] = 0x2191;\\n        t['arrowupdn'] = 0x2195;\\n        t['arrowupdnbse'] = 0x21A8;\\n        t['arrowupdownbase'] = 0x21A8;\\n        t['arrowupleft'] = 0x2196;\\n        t['arrowupleftofdown'] = 0x21C5;\\n        t['arrowupright'] = 0x2197;\\n        t['arrowupwhite'] = 0x21E7;\\n        t['arrowvertex'] = 0xF8E6;\\n        t['asciicircum'] = 0x005E;\\n        t['asciicircummonospace'] = 0xFF3E;\\n        t['asciitilde'] = 0x007E;\\n        t['asciitildemonospace'] = 0xFF5E;\\n        t['ascript'] = 0x0251;\\n        t['ascriptturned'] = 0x0252;\\n        t['asmallhiragana'] = 0x3041;\\n        t['asmallkatakana'] = 0x30A1;\\n        t['asmallkatakanahalfwidth'] = 0xFF67;\\n        t['asterisk'] = 0x002A;\\n        t['asteriskaltonearabic'] = 0x066D;\\n        t['asteriskarabic'] = 0x066D;\\n        t['asteriskmath'] = 0x2217;\\n        t['asteriskmonospace'] = 0xFF0A;\\n        t['asterisksmall'] = 0xFE61;\\n        t['asterism'] = 0x2042;\\n        t['asuperior'] = 0xF6E9;\\n        t['asymptoticallyequal'] = 0x2243;\\n        t['at'] = 0x0040;\\n        t['atilde'] = 0x00E3;\\n        t['atmonospace'] = 0xFF20;\\n        t['atsmall'] = 0xFE6B;\\n        t['aturned'] = 0x0250;\\n        t['aubengali'] = 0x0994;\\n        t['aubopomofo'] = 0x3120;\\n        t['audeva'] = 0x0914;\\n        t['augujarati'] = 0x0A94;\\n        t['augurmukhi'] = 0x0A14;\\n        t['aulengthmarkbengali'] = 0x09D7;\\n        t['aumatragurmukhi'] = 0x0A4C;\\n        t['auvowelsignbengali'] = 0x09CC;\\n        t['auvowelsigndeva'] = 0x094C;\\n        t['auvowelsigngujarati'] = 0x0ACC;\\n        t['avagrahadeva'] = 0x093D;\\n        t['aybarmenian'] = 0x0561;\\n        t['ayin'] = 0x05E2;\\n        t['ayinaltonehebrew'] = 0xFB20;\\n        t['ayinhebrew'] = 0x05E2;\\n        t['b'] = 0x0062;\\n        t['babengali'] = 0x09AC;\\n        t['backslash'] = 0x005C;\\n        t['backslashmonospace'] = 0xFF3C;\\n        t['badeva'] = 0x092C;\\n        t['bagujarati'] = 0x0AAC;\\n        t['bagurmukhi'] = 0x0A2C;\\n        t['bahiragana'] = 0x3070;\\n        t['bahtthai'] = 0x0E3F;\\n        t['bakatakana'] = 0x30D0;\\n        t['bar'] = 0x007C;\\n        t['barmonospace'] = 0xFF5C;\\n        t['bbopomofo'] = 0x3105;\\n        t['bcircle'] = 0x24D1;\\n        t['bdotaccent'] = 0x1E03;\\n        t['bdotbelow'] = 0x1E05;\\n        t['beamedsixteenthnotes'] = 0x266C;\\n        t['because'] = 0x2235;\\n        t['becyrillic'] = 0x0431;\\n        t['beharabic'] = 0x0628;\\n        t['behfinalarabic'] = 0xFE90;\\n        t['behinitialarabic'] = 0xFE91;\\n        t['behiragana'] = 0x3079;\\n        t['behmedialarabic'] = 0xFE92;\\n        t['behmeeminitialarabic'] = 0xFC9F;\\n        t['behmeemisolatedarabic'] = 0xFC08;\\n        t['behnoonfinalarabic'] = 0xFC6D;\\n        t['bekatakana'] = 0x30D9;\\n        t['benarmenian'] = 0x0562;\\n        t['bet'] = 0x05D1;\\n        t['beta'] = 0x03B2;\\n        t['betasymbolgreek'] = 0x03D0;\\n        t['betdagesh'] = 0xFB31;\\n        t['betdageshhebrew'] = 0xFB31;\\n        t['bethebrew'] = 0x05D1;\\n        t['betrafehebrew'] = 0xFB4C;\\n        t['bhabengali'] = 0x09AD;\\n        t['bhadeva'] = 0x092D;\\n        t['bhagujarati'] = 0x0AAD;\\n        t['bhagurmukhi'] = 0x0A2D;\\n        t['bhook'] = 0x0253;\\n        t['bihiragana'] = 0x3073;\\n        t['bikatakana'] = 0x30D3;\\n        t['bilabialclick'] = 0x0298;\\n        t['bindigurmukhi'] = 0x0A02;\\n        t['birusquare'] = 0x3331;\\n        t['blackcircle'] = 0x25CF;\\n        t['blackdiamond'] = 0x25C6;\\n        t['blackdownpointingtriangle'] = 0x25BC;\\n        t['blackleftpointingpointer'] = 0x25C4;\\n        t['blackleftpointingtriangle'] = 0x25C0;\\n        t['blacklenticularbracketleft'] = 0x3010;\\n        t['blacklenticularbracketleftvertical'] = 0xFE3B;\\n        t['blacklenticularbracketright'] = 0x3011;\\n        t['blacklenticularbracketrightvertical'] = 0xFE3C;\\n        t['blacklowerlefttriangle'] = 0x25E3;\\n        t['blacklowerrighttriangle'] = 0x25E2;\\n        t['blackrectangle'] = 0x25AC;\\n        t['blackrightpointingpointer'] = 0x25BA;\\n        t['blackrightpointingtriangle'] = 0x25B6;\\n        t['blacksmallsquare'] = 0x25AA;\\n        t['blacksmilingface'] = 0x263B;\\n        t['blacksquare'] = 0x25A0;\\n        t['blackstar'] = 0x2605;\\n        t['blackupperlefttriangle'] = 0x25E4;\\n        t['blackupperrighttriangle'] = 0x25E5;\\n        t['blackuppointingsmalltriangle'] = 0x25B4;\\n        t['blackuppointingtriangle'] = 0x25B2;\\n        t['blank'] = 0x2423;\\n        t['blinebelow'] = 0x1E07;\\n        t['block'] = 0x2588;\\n        t['bmonospace'] = 0xFF42;\\n        t['bobaimaithai'] = 0x0E1A;\\n        t['bohiragana'] = 0x307C;\\n        t['bokatakana'] = 0x30DC;\\n        t['bparen'] = 0x249D;\\n        t['bqsquare'] = 0x33C3;\\n        t['braceex'] = 0xF8F4;\\n        t['braceleft'] = 0x007B;\\n        t['braceleftbt'] = 0xF8F3;\\n        t['braceleftmid'] = 0xF8F2;\\n        t['braceleftmonospace'] = 0xFF5B;\\n        t['braceleftsmall'] = 0xFE5B;\\n        t['bracelefttp'] = 0xF8F1;\\n        t['braceleftvertical'] = 0xFE37;\\n        t['braceright'] = 0x007D;\\n        t['bracerightbt'] = 0xF8FE;\\n        t['bracerightmid'] = 0xF8FD;\\n        t['bracerightmonospace'] = 0xFF5D;\\n        t['bracerightsmall'] = 0xFE5C;\\n        t['bracerighttp'] = 0xF8FC;\\n        t['bracerightvertical'] = 0xFE38;\\n        t['bracketleft'] = 0x005B;\\n        t['bracketleftbt'] = 0xF8F0;\\n        t['bracketleftex'] = 0xF8EF;\\n        t['bracketleftmonospace'] = 0xFF3B;\\n        t['bracketlefttp'] = 0xF8EE;\\n        t['bracketright'] = 0x005D;\\n        t['bracketrightbt'] = 0xF8FB;\\n        t['bracketrightex'] = 0xF8FA;\\n        t['bracketrightmonospace'] = 0xFF3D;\\n        t['bracketrighttp'] = 0xF8F9;\\n        t['breve'] = 0x02D8;\\n        t['brevebelowcmb'] = 0x032E;\\n        t['brevecmb'] = 0x0306;\\n        t['breveinvertedbelowcmb'] = 0x032F;\\n        t['breveinvertedcmb'] = 0x0311;\\n        t['breveinverteddoublecmb'] = 0x0361;\\n        t['bridgebelowcmb'] = 0x032A;\\n        t['bridgeinvertedbelowcmb'] = 0x033A;\\n        t['brokenbar'] = 0x00A6;\\n        t['bstroke'] = 0x0180;\\n        t['bsuperior'] = 0xF6EA;\\n        t['btopbar'] = 0x0183;\\n        t['buhiragana'] = 0x3076;\\n        t['bukatakana'] = 0x30D6;\\n        t['bullet'] = 0x2022;\\n        t['bulletinverse'] = 0x25D8;\\n        t['bulletoperator'] = 0x2219;\\n        t['bullseye'] = 0x25CE;\\n        t['c'] = 0x0063;\\n        t['caarmenian'] = 0x056E;\\n        t['cabengali'] = 0x099A;\\n        t['cacute'] = 0x0107;\\n        t['cadeva'] = 0x091A;\\n        t['cagujarati'] = 0x0A9A;\\n        t['cagurmukhi'] = 0x0A1A;\\n        t['calsquare'] = 0x3388;\\n        t['candrabindubengali'] = 0x0981;\\n        t['candrabinducmb'] = 0x0310;\\n        t['candrabindudeva'] = 0x0901;\\n        t['candrabindugujarati'] = 0x0A81;\\n        t['capslock'] = 0x21EA;\\n        t['careof'] = 0x2105;\\n        t['caron'] = 0x02C7;\\n        t['caronbelowcmb'] = 0x032C;\\n        t['caroncmb'] = 0x030C;\\n        t['carriagereturn'] = 0x21B5;\\n        t['cbopomofo'] = 0x3118;\\n        t['ccaron'] = 0x010D;\\n        t['ccedilla'] = 0x00E7;\\n        t['ccedillaacute'] = 0x1E09;\\n        t['ccircle'] = 0x24D2;\\n        t['ccircumflex'] = 0x0109;\\n        t['ccurl'] = 0x0255;\\n        t['cdot'] = 0x010B;\\n        t['cdotaccent'] = 0x010B;\\n        t['cdsquare'] = 0x33C5;\\n        t['cedilla'] = 0x00B8;\\n        t['cedillacmb'] = 0x0327;\\n        t['cent'] = 0x00A2;\\n        t['centigrade'] = 0x2103;\\n        t['centinferior'] = 0xF6DF;\\n        t['centmonospace'] = 0xFFE0;\\n        t['centoldstyle'] = 0xF7A2;\\n        t['centsuperior'] = 0xF6E0;\\n        t['chaarmenian'] = 0x0579;\\n        t['chabengali'] = 0x099B;\\n        t['chadeva'] = 0x091B;\\n        t['chagujarati'] = 0x0A9B;\\n        t['chagurmukhi'] = 0x0A1B;\\n        t['chbopomofo'] = 0x3114;\\n        t['cheabkhasiancyrillic'] = 0x04BD;\\n        t['checkmark'] = 0x2713;\\n        t['checyrillic'] = 0x0447;\\n        t['chedescenderabkhasiancyrillic'] = 0x04BF;\\n        t['chedescendercyrillic'] = 0x04B7;\\n        t['chedieresiscyrillic'] = 0x04F5;\\n        t['cheharmenian'] = 0x0573;\\n        t['chekhakassiancyrillic'] = 0x04CC;\\n        t['cheverticalstrokecyrillic'] = 0x04B9;\\n        t['chi'] = 0x03C7;\\n        t['chieuchacirclekorean'] = 0x3277;\\n        t['chieuchaparenkorean'] = 0x3217;\\n        t['chieuchcirclekorean'] = 0x3269;\\n        t['chieuchkorean'] = 0x314A;\\n        t['chieuchparenkorean'] = 0x3209;\\n        t['chochangthai'] = 0x0E0A;\\n        t['chochanthai'] = 0x0E08;\\n        t['chochingthai'] = 0x0E09;\\n        t['chochoethai'] = 0x0E0C;\\n        t['chook'] = 0x0188;\\n        t['cieucacirclekorean'] = 0x3276;\\n        t['cieucaparenkorean'] = 0x3216;\\n        t['cieuccirclekorean'] = 0x3268;\\n        t['cieuckorean'] = 0x3148;\\n        t['cieucparenkorean'] = 0x3208;\\n        t['cieucuparenkorean'] = 0x321C;\\n        t['circle'] = 0x25CB;\\n        t['circlecopyrt'] = 0x00A9;\\n        t['circlemultiply'] = 0x2297;\\n        t['circleot'] = 0x2299;\\n        t['circleplus'] = 0x2295;\\n        t['circlepostalmark'] = 0x3036;\\n        t['circlewithlefthalfblack'] = 0x25D0;\\n        t['circlewithrighthalfblack'] = 0x25D1;\\n        t['circumflex'] = 0x02C6;\\n        t['circumflexbelowcmb'] = 0x032D;\\n        t['circumflexcmb'] = 0x0302;\\n        t['clear'] = 0x2327;\\n        t['clickalveolar'] = 0x01C2;\\n        t['clickdental'] = 0x01C0;\\n        t['clicklateral'] = 0x01C1;\\n        t['clickretroflex'] = 0x01C3;\\n        t['club'] = 0x2663;\\n        t['clubsuitblack'] = 0x2663;\\n        t['clubsuitwhite'] = 0x2667;\\n        t['cmcubedsquare'] = 0x33A4;\\n        t['cmonospace'] = 0xFF43;\\n        t['cmsquaredsquare'] = 0x33A0;\\n        t['coarmenian'] = 0x0581;\\n        t['colon'] = 0x003A;\\n        t['colonmonetary'] = 0x20A1;\\n        t['colonmonospace'] = 0xFF1A;\\n        t['colonsign'] = 0x20A1;\\n        t['colonsmall'] = 0xFE55;\\n        t['colontriangularhalfmod'] = 0x02D1;\\n        t['colontriangularmod'] = 0x02D0;\\n        t['comma'] = 0x002C;\\n        t['commaabovecmb'] = 0x0313;\\n        t['commaaboverightcmb'] = 0x0315;\\n        t['commaaccent'] = 0xF6C3;\\n        t['commaarabic'] = 0x060C;\\n        t['commaarmenian'] = 0x055D;\\n        t['commainferior'] = 0xF6E1;\\n        t['commamonospace'] = 0xFF0C;\\n        t['commareversedabovecmb'] = 0x0314;\\n        t['commareversedmod'] = 0x02BD;\\n        t['commasmall'] = 0xFE50;\\n        t['commasuperior'] = 0xF6E2;\\n        t['commaturnedabovecmb'] = 0x0312;\\n        t['commaturnedmod'] = 0x02BB;\\n        t['compass'] = 0x263C;\\n        t['congruent'] = 0x2245;\\n        t['contourintegral'] = 0x222E;\\n        t['control'] = 0x2303;\\n        t['controlACK'] = 0x0006;\\n        t['controlBEL'] = 0x0007;\\n        t['controlBS'] = 0x0008;\\n        t['controlCAN'] = 0x0018;\\n        t['controlCR'] = 0x000D;\\n        t['controlDC1'] = 0x0011;\\n        t['controlDC2'] = 0x0012;\\n        t['controlDC3'] = 0x0013;\\n        t['controlDC4'] = 0x0014;\\n        t['controlDEL'] = 0x007F;\\n        t['controlDLE'] = 0x0010;\\n        t['controlEM'] = 0x0019;\\n        t['controlENQ'] = 0x0005;\\n        t['controlEOT'] = 0x0004;\\n        t['controlESC'] = 0x001B;\\n        t['controlETB'] = 0x0017;\\n        t['controlETX'] = 0x0003;\\n        t['controlFF'] = 0x000C;\\n        t['controlFS'] = 0x001C;\\n        t['controlGS'] = 0x001D;\\n        t['controlHT'] = 0x0009;\\n        t['controlLF'] = 0x000A;\\n        t['controlNAK'] = 0x0015;\\n        t['controlNULL'] = 0x0000;\\n        t['controlRS'] = 0x001E;\\n        t['controlSI'] = 0x000F;\\n        t['controlSO'] = 0x000E;\\n        t['controlSOT'] = 0x0002;\\n        t['controlSTX'] = 0x0001;\\n        t['controlSUB'] = 0x001A;\\n        t['controlSYN'] = 0x0016;\\n        t['controlUS'] = 0x001F;\\n        t['controlVT'] = 0x000B;\\n        t['copyright'] = 0x00A9;\\n        t['copyrightsans'] = 0xF8E9;\\n        t['copyrightserif'] = 0xF6D9;\\n        t['cornerbracketleft'] = 0x300C;\\n        t['cornerbracketlefthalfwidth'] = 0xFF62;\\n        t['cornerbracketleftvertical'] = 0xFE41;\\n        t['cornerbracketright'] = 0x300D;\\n        t['cornerbracketrighthalfwidth'] = 0xFF63;\\n        t['cornerbracketrightvertical'] = 0xFE42;\\n        t['corporationsquare'] = 0x337F;\\n        t['cosquare'] = 0x33C7;\\n        t['coverkgsquare'] = 0x33C6;\\n        t['cparen'] = 0x249E;\\n        t['cruzeiro'] = 0x20A2;\\n        t['cstretched'] = 0x0297;\\n        t['curlyand'] = 0x22CF;\\n        t['curlyor'] = 0x22CE;\\n        t['currency'] = 0x00A4;\\n        t['cyrBreve'] = 0xF6D1;\\n        t['cyrFlex'] = 0xF6D2;\\n        t['cyrbreve'] = 0xF6D4;\\n        t['cyrflex'] = 0xF6D5;\\n        t['d'] = 0x0064;\\n        t['daarmenian'] = 0x0564;\\n        t['dabengali'] = 0x09A6;\\n        t['dadarabic'] = 0x0636;\\n        t['dadeva'] = 0x0926;\\n        t['dadfinalarabic'] = 0xFEBE;\\n        t['dadinitialarabic'] = 0xFEBF;\\n        t['dadmedialarabic'] = 0xFEC0;\\n        t['dagesh'] = 0x05BC;\\n        t['dageshhebrew'] = 0x05BC;\\n        t['dagger'] = 0x2020;\\n        t['daggerdbl'] = 0x2021;\\n        t['dagujarati'] = 0x0AA6;\\n        t['dagurmukhi'] = 0x0A26;\\n        t['dahiragana'] = 0x3060;\\n        t['dakatakana'] = 0x30C0;\\n        t['dalarabic'] = 0x062F;\\n        t['dalet'] = 0x05D3;\\n        t['daletdagesh'] = 0xFB33;\\n        t['daletdageshhebrew'] = 0xFB33;\\n        t['dalethebrew'] = 0x05D3;\\n        t['dalfinalarabic'] = 0xFEAA;\\n        t['dammaarabic'] = 0x064F;\\n        t['dammalowarabic'] = 0x064F;\\n        t['dammatanaltonearabic'] = 0x064C;\\n        t['dammatanarabic'] = 0x064C;\\n        t['danda'] = 0x0964;\\n        t['dargahebrew'] = 0x05A7;\\n        t['dargalefthebrew'] = 0x05A7;\\n        t['dasiapneumatacyrilliccmb'] = 0x0485;\\n        t['dblGrave'] = 0xF6D3;\\n        t['dblanglebracketleft'] = 0x300A;\\n        t['dblanglebracketleftvertical'] = 0xFE3D;\\n        t['dblanglebracketright'] = 0x300B;\\n        t['dblanglebracketrightvertical'] = 0xFE3E;\\n        t['dblarchinvertedbelowcmb'] = 0x032B;\\n        t['dblarrowleft'] = 0x21D4;\\n        t['dblarrowright'] = 0x21D2;\\n        t['dbldanda'] = 0x0965;\\n        t['dblgrave'] = 0xF6D6;\\n        t['dblgravecmb'] = 0x030F;\\n        t['dblintegral'] = 0x222C;\\n        t['dbllowline'] = 0x2017;\\n        t['dbllowlinecmb'] = 0x0333;\\n        t['dbloverlinecmb'] = 0x033F;\\n        t['dblprimemod'] = 0x02BA;\\n        t['dblverticalbar'] = 0x2016;\\n        t['dblverticallineabovecmb'] = 0x030E;\\n        t['dbopomofo'] = 0x3109;\\n        t['dbsquare'] = 0x33C8;\\n        t['dcaron'] = 0x010F;\\n        t['dcedilla'] = 0x1E11;\\n        t['dcircle'] = 0x24D3;\\n        t['dcircumflexbelow'] = 0x1E13;\\n        t['dcroat'] = 0x0111;\\n        t['ddabengali'] = 0x09A1;\\n        t['ddadeva'] = 0x0921;\\n        t['ddagujarati'] = 0x0AA1;\\n        t['ddagurmukhi'] = 0x0A21;\\n        t['ddalarabic'] = 0x0688;\\n        t['ddalfinalarabic'] = 0xFB89;\\n        t['dddhadeva'] = 0x095C;\\n        t['ddhabengali'] = 0x09A2;\\n        t['ddhadeva'] = 0x0922;\\n        t['ddhagujarati'] = 0x0AA2;\\n        t['ddhagurmukhi'] = 0x0A22;\\n        t['ddotaccent'] = 0x1E0B;\\n        t['ddotbelow'] = 0x1E0D;\\n        t['decimalseparatorarabic'] = 0x066B;\\n        t['decimalseparatorpersian'] = 0x066B;\\n        t['decyrillic'] = 0x0434;\\n        t['degree'] = 0x00B0;\\n        t['dehihebrew'] = 0x05AD;\\n        t['dehiragana'] = 0x3067;\\n        t['deicoptic'] = 0x03EF;\\n        t['dekatakana'] = 0x30C7;\\n        t['deleteleft'] = 0x232B;\\n        t['deleteright'] = 0x2326;\\n        t['delta'] = 0x03B4;\\n        t['deltaturned'] = 0x018D;\\n        t['denominatorminusonenumeratorbengali'] = 0x09F8;\\n        t['dezh'] = 0x02A4;\\n        t['dhabengali'] = 0x09A7;\\n        t['dhadeva'] = 0x0927;\\n        t['dhagujarati'] = 0x0AA7;\\n        t['dhagurmukhi'] = 0x0A27;\\n        t['dhook'] = 0x0257;\\n        t['dialytikatonos'] = 0x0385;\\n        t['dialytikatonoscmb'] = 0x0344;\\n        t['diamond'] = 0x2666;\\n        t['diamondsuitwhite'] = 0x2662;\\n        t['dieresis'] = 0x00A8;\\n        t['dieresisacute'] = 0xF6D7;\\n        t['dieresisbelowcmb'] = 0x0324;\\n        t['dieresiscmb'] = 0x0308;\\n        t['dieresisgrave'] = 0xF6D8;\\n        t['dieresistonos'] = 0x0385;\\n        t['dihiragana'] = 0x3062;\\n        t['dikatakana'] = 0x30C2;\\n        t['dittomark'] = 0x3003;\\n        t['divide'] = 0x00F7;\\n        t['divides'] = 0x2223;\\n        t['divisionslash'] = 0x2215;\\n        t['djecyrillic'] = 0x0452;\\n        t['dkshade'] = 0x2593;\\n        t['dlinebelow'] = 0x1E0F;\\n        t['dlsquare'] = 0x3397;\\n        t['dmacron'] = 0x0111;\\n        t['dmonospace'] = 0xFF44;\\n        t['dnblock'] = 0x2584;\\n        t['dochadathai'] = 0x0E0E;\\n        t['dodekthai'] = 0x0E14;\\n        t['dohiragana'] = 0x3069;\\n        t['dokatakana'] = 0x30C9;\\n        t['dollar'] = 0x0024;\\n        t['dollarinferior'] = 0xF6E3;\\n        t['dollarmonospace'] = 0xFF04;\\n        t['dollaroldstyle'] = 0xF724;\\n        t['dollarsmall'] = 0xFE69;\\n        t['dollarsuperior'] = 0xF6E4;\\n        t['dong'] = 0x20AB;\\n        t['dorusquare'] = 0x3326;\\n        t['dotaccent'] = 0x02D9;\\n        t['dotaccentcmb'] = 0x0307;\\n        t['dotbelowcmb'] = 0x0323;\\n        t['dotbelowcomb'] = 0x0323;\\n        t['dotkatakana'] = 0x30FB;\\n        t['dotlessi'] = 0x0131;\\n        t['dotlessj'] = 0xF6BE;\\n        t['dotlessjstrokehook'] = 0x0284;\\n        t['dotmath'] = 0x22C5;\\n        t['dottedcircle'] = 0x25CC;\\n        t['doubleyodpatah'] = 0xFB1F;\\n        t['doubleyodpatahhebrew'] = 0xFB1F;\\n        t['downtackbelowcmb'] = 0x031E;\\n        t['downtackmod'] = 0x02D5;\\n        t['dparen'] = 0x249F;\\n        t['dsuperior'] = 0xF6EB;\\n        t['dtail'] = 0x0256;\\n        t['dtopbar'] = 0x018C;\\n        t['duhiragana'] = 0x3065;\\n        t['dukatakana'] = 0x30C5;\\n        t['dz'] = 0x01F3;\\n        t['dzaltone'] = 0x02A3;\\n        t['dzcaron'] = 0x01C6;\\n        t['dzcurl'] = 0x02A5;\\n        t['dzeabkhasiancyrillic'] = 0x04E1;\\n        t['dzecyrillic'] = 0x0455;\\n        t['dzhecyrillic'] = 0x045F;\\n        t['e'] = 0x0065;\\n        t['eacute'] = 0x00E9;\\n        t['earth'] = 0x2641;\\n        t['ebengali'] = 0x098F;\\n        t['ebopomofo'] = 0x311C;\\n        t['ebreve'] = 0x0115;\\n        t['ecandradeva'] = 0x090D;\\n        t['ecandragujarati'] = 0x0A8D;\\n        t['ecandravowelsigndeva'] = 0x0945;\\n        t['ecandravowelsigngujarati'] = 0x0AC5;\\n        t['ecaron'] = 0x011B;\\n        t['ecedillabreve'] = 0x1E1D;\\n        t['echarmenian'] = 0x0565;\\n        t['echyiwnarmenian'] = 0x0587;\\n        t['ecircle'] = 0x24D4;\\n        t['ecircumflex'] = 0x00EA;\\n        t['ecircumflexacute'] = 0x1EBF;\\n        t['ecircumflexbelow'] = 0x1E19;\\n        t['ecircumflexdotbelow'] = 0x1EC7;\\n        t['ecircumflexgrave'] = 0x1EC1;\\n        t['ecircumflexhookabove'] = 0x1EC3;\\n        t['ecircumflextilde'] = 0x1EC5;\\n        t['ecyrillic'] = 0x0454;\\n        t['edblgrave'] = 0x0205;\\n        t['edeva'] = 0x090F;\\n        t['edieresis'] = 0x00EB;\\n        t['edot'] = 0x0117;\\n        t['edotaccent'] = 0x0117;\\n        t['edotbelow'] = 0x1EB9;\\n        t['eegurmukhi'] = 0x0A0F;\\n        t['eematragurmukhi'] = 0x0A47;\\n        t['efcyrillic'] = 0x0444;\\n        t['egrave'] = 0x00E8;\\n        t['egujarati'] = 0x0A8F;\\n        t['eharmenian'] = 0x0567;\\n        t['ehbopomofo'] = 0x311D;\\n        t['ehiragana'] = 0x3048;\\n        t['ehookabove'] = 0x1EBB;\\n        t['eibopomofo'] = 0x311F;\\n        t['eight'] = 0x0038;\\n        t['eightarabic'] = 0x0668;\\n        t['eightbengali'] = 0x09EE;\\n        t['eightcircle'] = 0x2467;\\n        t['eightcircleinversesansserif'] = 0x2791;\\n        t['eightdeva'] = 0x096E;\\n        t['eighteencircle'] = 0x2471;\\n        t['eighteenparen'] = 0x2485;\\n        t['eighteenperiod'] = 0x2499;\\n        t['eightgujarati'] = 0x0AEE;\\n        t['eightgurmukhi'] = 0x0A6E;\\n        t['eighthackarabic'] = 0x0668;\\n        t['eighthangzhou'] = 0x3028;\\n        t['eighthnotebeamed'] = 0x266B;\\n        t['eightideographicparen'] = 0x3227;\\n        t['eightinferior'] = 0x2088;\\n        t['eightmonospace'] = 0xFF18;\\n        t['eightoldstyle'] = 0xF738;\\n        t['eightparen'] = 0x247B;\\n        t['eightperiod'] = 0x248F;\\n        t['eightpersian'] = 0x06F8;\\n        t['eightroman'] = 0x2177;\\n        t['eightsuperior'] = 0x2078;\\n        t['eightthai'] = 0x0E58;\\n        t['einvertedbreve'] = 0x0207;\\n        t['eiotifiedcyrillic'] = 0x0465;\\n        t['ekatakana'] = 0x30A8;\\n        t['ekatakanahalfwidth'] = 0xFF74;\\n        t['ekonkargurmukhi'] = 0x0A74;\\n        t['ekorean'] = 0x3154;\\n        t['elcyrillic'] = 0x043B;\\n        t['element'] = 0x2208;\\n        t['elevencircle'] = 0x246A;\\n        t['elevenparen'] = 0x247E;\\n        t['elevenperiod'] = 0x2492;\\n        t['elevenroman'] = 0x217A;\\n        t['ellipsis'] = 0x2026;\\n        t['ellipsisvertical'] = 0x22EE;\\n        t['emacron'] = 0x0113;\\n        t['emacronacute'] = 0x1E17;\\n        t['emacrongrave'] = 0x1E15;\\n        t['emcyrillic'] = 0x043C;\\n        t['emdash'] = 0x2014;\\n        t['emdashvertical'] = 0xFE31;\\n        t['emonospace'] = 0xFF45;\\n        t['emphasismarkarmenian'] = 0x055B;\\n        t['emptyset'] = 0x2205;\\n        t['enbopomofo'] = 0x3123;\\n        t['encyrillic'] = 0x043D;\\n        t['endash'] = 0x2013;\\n        t['endashvertical'] = 0xFE32;\\n        t['endescendercyrillic'] = 0x04A3;\\n        t['eng'] = 0x014B;\\n        t['engbopomofo'] = 0x3125;\\n        t['enghecyrillic'] = 0x04A5;\\n        t['enhookcyrillic'] = 0x04C8;\\n        t['enspace'] = 0x2002;\\n        t['eogonek'] = 0x0119;\\n        t['eokorean'] = 0x3153;\\n        t['eopen'] = 0x025B;\\n        t['eopenclosed'] = 0x029A;\\n        t['eopenreversed'] = 0x025C;\\n        t['eopenreversedclosed'] = 0x025E;\\n        t['eopenreversedhook'] = 0x025D;\\n        t['eparen'] = 0x24A0;\\n        t['epsilon'] = 0x03B5;\\n        t['epsilontonos'] = 0x03AD;\\n        t['equal'] = 0x003D;\\n        t['equalmonospace'] = 0xFF1D;\\n        t['equalsmall'] = 0xFE66;\\n        t['equalsuperior'] = 0x207C;\\n        t['equivalence'] = 0x2261;\\n        t['erbopomofo'] = 0x3126;\\n        t['ercyrillic'] = 0x0440;\\n        t['ereversed'] = 0x0258;\\n        t['ereversedcyrillic'] = 0x044D;\\n        t['escyrillic'] = 0x0441;\\n        t['esdescendercyrillic'] = 0x04AB;\\n        t['esh'] = 0x0283;\\n        t['eshcurl'] = 0x0286;\\n        t['eshortdeva'] = 0x090E;\\n        t['eshortvowelsigndeva'] = 0x0946;\\n        t['eshreversedloop'] = 0x01AA;\\n        t['eshsquatreversed'] = 0x0285;\\n        t['esmallhiragana'] = 0x3047;\\n        t['esmallkatakana'] = 0x30A7;\\n        t['esmallkatakanahalfwidth'] = 0xFF6A;\\n        t['estimated'] = 0x212E;\\n        t['esuperior'] = 0xF6EC;\\n        t['eta'] = 0x03B7;\\n        t['etarmenian'] = 0x0568;\\n        t['etatonos'] = 0x03AE;\\n        t['eth'] = 0x00F0;\\n        t['etilde'] = 0x1EBD;\\n        t['etildebelow'] = 0x1E1B;\\n        t['etnahtafoukhhebrew'] = 0x0591;\\n        t['etnahtafoukhlefthebrew'] = 0x0591;\\n        t['etnahtahebrew'] = 0x0591;\\n        t['etnahtalefthebrew'] = 0x0591;\\n        t['eturned'] = 0x01DD;\\n        t['eukorean'] = 0x3161;\\n        t['euro'] = 0x20AC;\\n        t['evowelsignbengali'] = 0x09C7;\\n        t['evowelsigndeva'] = 0x0947;\\n        t['evowelsigngujarati'] = 0x0AC7;\\n        t['exclam'] = 0x0021;\\n        t['exclamarmenian'] = 0x055C;\\n        t['exclamdbl'] = 0x203C;\\n        t['exclamdown'] = 0x00A1;\\n        t['exclamdownsmall'] = 0xF7A1;\\n        t['exclammonospace'] = 0xFF01;\\n        t['exclamsmall'] = 0xF721;\\n        t['existential'] = 0x2203;\\n        t['ezh'] = 0x0292;\\n        t['ezhcaron'] = 0x01EF;\\n        t['ezhcurl'] = 0x0293;\\n        t['ezhreversed'] = 0x01B9;\\n        t['ezhtail'] = 0x01BA;\\n        t['f'] = 0x0066;\\n        t['fadeva'] = 0x095E;\\n        t['fagurmukhi'] = 0x0A5E;\\n        t['fahrenheit'] = 0x2109;\\n        t['fathaarabic'] = 0x064E;\\n        t['fathalowarabic'] = 0x064E;\\n        t['fathatanarabic'] = 0x064B;\\n        t['fbopomofo'] = 0x3108;\\n        t['fcircle'] = 0x24D5;\\n        t['fdotaccent'] = 0x1E1F;\\n        t['feharabic'] = 0x0641;\\n        t['feharmenian'] = 0x0586;\\n        t['fehfinalarabic'] = 0xFED2;\\n        t['fehinitialarabic'] = 0xFED3;\\n        t['fehmedialarabic'] = 0xFED4;\\n        t['feicoptic'] = 0x03E5;\\n        t['female'] = 0x2640;\\n        t['ff'] = 0xFB00;\\n        t['ffi'] = 0xFB03;\\n        t['ffl'] = 0xFB04;\\n        t['fi'] = 0xFB01;\\n        t['fifteencircle'] = 0x246E;\\n        t['fifteenparen'] = 0x2482;\\n        t['fifteenperiod'] = 0x2496;\\n        t['figuredash'] = 0x2012;\\n        t['filledbox'] = 0x25A0;\\n        t['filledrect'] = 0x25AC;\\n        t['finalkaf'] = 0x05DA;\\n        t['finalkafdagesh'] = 0xFB3A;\\n        t['finalkafdageshhebrew'] = 0xFB3A;\\n        t['finalkafhebrew'] = 0x05DA;\\n        t['finalmem'] = 0x05DD;\\n        t['finalmemhebrew'] = 0x05DD;\\n        t['finalnun'] = 0x05DF;\\n        t['finalnunhebrew'] = 0x05DF;\\n        t['finalpe'] = 0x05E3;\\n        t['finalpehebrew'] = 0x05E3;\\n        t['finaltsadi'] = 0x05E5;\\n        t['finaltsadihebrew'] = 0x05E5;\\n        t['firsttonechinese'] = 0x02C9;\\n        t['fisheye'] = 0x25C9;\\n        t['fitacyrillic'] = 0x0473;\\n        t['five'] = 0x0035;\\n        t['fivearabic'] = 0x0665;\\n        t['fivebengali'] = 0x09EB;\\n        t['fivecircle'] = 0x2464;\\n        t['fivecircleinversesansserif'] = 0x278E;\\n        t['fivedeva'] = 0x096B;\\n        t['fiveeighths'] = 0x215D;\\n        t['fivegujarati'] = 0x0AEB;\\n        t['fivegurmukhi'] = 0x0A6B;\\n        t['fivehackarabic'] = 0x0665;\\n        t['fivehangzhou'] = 0x3025;\\n        t['fiveideographicparen'] = 0x3224;\\n        t['fiveinferior'] = 0x2085;\\n        t['fivemonospace'] = 0xFF15;\\n        t['fiveoldstyle'] = 0xF735;\\n        t['fiveparen'] = 0x2478;\\n        t['fiveperiod'] = 0x248C;\\n        t['fivepersian'] = 0x06F5;\\n        t['fiveroman'] = 0x2174;\\n        t['fivesuperior'] = 0x2075;\\n        t['fivethai'] = 0x0E55;\\n        t['fl'] = 0xFB02;\\n        t['florin'] = 0x0192;\\n        t['fmonospace'] = 0xFF46;\\n        t['fmsquare'] = 0x3399;\\n        t['fofanthai'] = 0x0E1F;\\n        t['fofathai'] = 0x0E1D;\\n        t['fongmanthai'] = 0x0E4F;\\n        t['forall'] = 0x2200;\\n        t['four'] = 0x0034;\\n        t['fourarabic'] = 0x0664;\\n        t['fourbengali'] = 0x09EA;\\n        t['fourcircle'] = 0x2463;\\n        t['fourcircleinversesansserif'] = 0x278D;\\n        t['fourdeva'] = 0x096A;\\n        t['fourgujarati'] = 0x0AEA;\\n        t['fourgurmukhi'] = 0x0A6A;\\n        t['fourhackarabic'] = 0x0664;\\n        t['fourhangzhou'] = 0x3024;\\n        t['fourideographicparen'] = 0x3223;\\n        t['fourinferior'] = 0x2084;\\n        t['fourmonospace'] = 0xFF14;\\n        t['fournumeratorbengali'] = 0x09F7;\\n        t['fouroldstyle'] = 0xF734;\\n        t['fourparen'] = 0x2477;\\n        t['fourperiod'] = 0x248B;\\n        t['fourpersian'] = 0x06F4;\\n        t['fourroman'] = 0x2173;\\n        t['foursuperior'] = 0x2074;\\n        t['fourteencircle'] = 0x246D;\\n        t['fourteenparen'] = 0x2481;\\n        t['fourteenperiod'] = 0x2495;\\n        t['fourthai'] = 0x0E54;\\n        t['fourthtonechinese'] = 0x02CB;\\n        t['fparen'] = 0x24A1;\\n        t['fraction'] = 0x2044;\\n        t['franc'] = 0x20A3;\\n        t['g'] = 0x0067;\\n        t['gabengali'] = 0x0997;\\n        t['gacute'] = 0x01F5;\\n        t['gadeva'] = 0x0917;\\n        t['gafarabic'] = 0x06AF;\\n        t['gaffinalarabic'] = 0xFB93;\\n        t['gafinitialarabic'] = 0xFB94;\\n        t['gafmedialarabic'] = 0xFB95;\\n        t['gagujarati'] = 0x0A97;\\n        t['gagurmukhi'] = 0x0A17;\\n        t['gahiragana'] = 0x304C;\\n        t['gakatakana'] = 0x30AC;\\n        t['gamma'] = 0x03B3;\\n        t['gammalatinsmall'] = 0x0263;\\n        t['gammasuperior'] = 0x02E0;\\n        t['gangiacoptic'] = 0x03EB;\\n        t['gbopomofo'] = 0x310D;\\n        t['gbreve'] = 0x011F;\\n        t['gcaron'] = 0x01E7;\\n        t['gcedilla'] = 0x0123;\\n        t['gcircle'] = 0x24D6;\\n        t['gcircumflex'] = 0x011D;\\n        t['gcommaaccent'] = 0x0123;\\n        t['gdot'] = 0x0121;\\n        t['gdotaccent'] = 0x0121;\\n        t['gecyrillic'] = 0x0433;\\n        t['gehiragana'] = 0x3052;\\n        t['gekatakana'] = 0x30B2;\\n        t['geometricallyequal'] = 0x2251;\\n        t['gereshaccenthebrew'] = 0x059C;\\n        t['gereshhebrew'] = 0x05F3;\\n        t['gereshmuqdamhebrew'] = 0x059D;\\n        t['germandbls'] = 0x00DF;\\n        t['gershayimaccenthebrew'] = 0x059E;\\n        t['gershayimhebrew'] = 0x05F4;\\n        t['getamark'] = 0x3013;\\n        t['ghabengali'] = 0x0998;\\n        t['ghadarmenian'] = 0x0572;\\n        t['ghadeva'] = 0x0918;\\n        t['ghagujarati'] = 0x0A98;\\n        t['ghagurmukhi'] = 0x0A18;\\n        t['ghainarabic'] = 0x063A;\\n        t['ghainfinalarabic'] = 0xFECE;\\n        t['ghaininitialarabic'] = 0xFECF;\\n        t['ghainmedialarabic'] = 0xFED0;\\n        t['ghemiddlehookcyrillic'] = 0x0495;\\n        t['ghestrokecyrillic'] = 0x0493;\\n        t['gheupturncyrillic'] = 0x0491;\\n        t['ghhadeva'] = 0x095A;\\n        t['ghhagurmukhi'] = 0x0A5A;\\n        t['ghook'] = 0x0260;\\n        t['ghzsquare'] = 0x3393;\\n        t['gihiragana'] = 0x304E;\\n        t['gikatakana'] = 0x30AE;\\n        t['gimarmenian'] = 0x0563;\\n        t['gimel'] = 0x05D2;\\n        t['gimeldagesh'] = 0xFB32;\\n        t['gimeldageshhebrew'] = 0xFB32;\\n        t['gimelhebrew'] = 0x05D2;\\n        t['gjecyrillic'] = 0x0453;\\n        t['glottalinvertedstroke'] = 0x01BE;\\n        t['glottalstop'] = 0x0294;\\n        t['glottalstopinverted'] = 0x0296;\\n        t['glottalstopmod'] = 0x02C0;\\n        t['glottalstopreversed'] = 0x0295;\\n        t['glottalstopreversedmod'] = 0x02C1;\\n        t['glottalstopreversedsuperior'] = 0x02E4;\\n        t['glottalstopstroke'] = 0x02A1;\\n        t['glottalstopstrokereversed'] = 0x02A2;\\n        t['gmacron'] = 0x1E21;\\n        t['gmonospace'] = 0xFF47;\\n        t['gohiragana'] = 0x3054;\\n        t['gokatakana'] = 0x30B4;\\n        t['gparen'] = 0x24A2;\\n        t['gpasquare'] = 0x33AC;\\n        t['gradient'] = 0x2207;\\n        t['grave'] = 0x0060;\\n        t['gravebelowcmb'] = 0x0316;\\n        t['gravecmb'] = 0x0300;\\n        t['gravecomb'] = 0x0300;\\n        t['gravedeva'] = 0x0953;\\n        t['gravelowmod'] = 0x02CE;\\n        t['gravemonospace'] = 0xFF40;\\n        t['gravetonecmb'] = 0x0340;\\n        t['greater'] = 0x003E;\\n        t['greaterequal'] = 0x2265;\\n        t['greaterequalorless'] = 0x22DB;\\n        t['greatermonospace'] = 0xFF1E;\\n        t['greaterorequivalent'] = 0x2273;\\n        t['greaterorless'] = 0x2277;\\n        t['greateroverequal'] = 0x2267;\\n        t['greatersmall'] = 0xFE65;\\n        t['gscript'] = 0x0261;\\n        t['gstroke'] = 0x01E5;\\n        t['guhiragana'] = 0x3050;\\n        t['guillemotleft'] = 0x00AB;\\n        t['guillemotright'] = 0x00BB;\\n        t['guilsinglleft'] = 0x2039;\\n        t['guilsinglright'] = 0x203A;\\n        t['gukatakana'] = 0x30B0;\\n        t['guramusquare'] = 0x3318;\\n        t['gysquare'] = 0x33C9;\\n        t['h'] = 0x0068;\\n        t['haabkhasiancyrillic'] = 0x04A9;\\n        t['haaltonearabic'] = 0x06C1;\\n        t['habengali'] = 0x09B9;\\n        t['hadescendercyrillic'] = 0x04B3;\\n        t['hadeva'] = 0x0939;\\n        t['hagujarati'] = 0x0AB9;\\n        t['hagurmukhi'] = 0x0A39;\\n        t['haharabic'] = 0x062D;\\n        t['hahfinalarabic'] = 0xFEA2;\\n        t['hahinitialarabic'] = 0xFEA3;\\n        t['hahiragana'] = 0x306F;\\n        t['hahmedialarabic'] = 0xFEA4;\\n        t['haitusquare'] = 0x332A;\\n        t['hakatakana'] = 0x30CF;\\n        t['hakatakanahalfwidth'] = 0xFF8A;\\n        t['halantgurmukhi'] = 0x0A4D;\\n        t['hamzaarabic'] = 0x0621;\\n        t['hamzalowarabic'] = 0x0621;\\n        t['hangulfiller'] = 0x3164;\\n        t['hardsigncyrillic'] = 0x044A;\\n        t['harpoonleftbarbup'] = 0x21BC;\\n        t['harpoonrightbarbup'] = 0x21C0;\\n        t['hasquare'] = 0x33CA;\\n        t['hatafpatah'] = 0x05B2;\\n        t['hatafpatah16'] = 0x05B2;\\n        t['hatafpatah23'] = 0x05B2;\\n        t['hatafpatah2f'] = 0x05B2;\\n        t['hatafpatahhebrew'] = 0x05B2;\\n        t['hatafpatahnarrowhebrew'] = 0x05B2;\\n        t['hatafpatahquarterhebrew'] = 0x05B2;\\n        t['hatafpatahwidehebrew'] = 0x05B2;\\n        t['hatafqamats'] = 0x05B3;\\n        t['hatafqamats1b'] = 0x05B3;\\n        t['hatafqamats28'] = 0x05B3;\\n        t['hatafqamats34'] = 0x05B3;\\n        t['hatafqamatshebrew'] = 0x05B3;\\n        t['hatafqamatsnarrowhebrew'] = 0x05B3;\\n        t['hatafqamatsquarterhebrew'] = 0x05B3;\\n        t['hatafqamatswidehebrew'] = 0x05B3;\\n        t['hatafsegol'] = 0x05B1;\\n        t['hatafsegol17'] = 0x05B1;\\n        t['hatafsegol24'] = 0x05B1;\\n        t['hatafsegol30'] = 0x05B1;\\n        t['hatafsegolhebrew'] = 0x05B1;\\n        t['hatafsegolnarrowhebrew'] = 0x05B1;\\n        t['hatafsegolquarterhebrew'] = 0x05B1;\\n        t['hatafsegolwidehebrew'] = 0x05B1;\\n        t['hbar'] = 0x0127;\\n        t['hbopomofo'] = 0x310F;\\n        t['hbrevebelow'] = 0x1E2B;\\n        t['hcedilla'] = 0x1E29;\\n        t['hcircle'] = 0x24D7;\\n        t['hcircumflex'] = 0x0125;\\n        t['hdieresis'] = 0x1E27;\\n        t['hdotaccent'] = 0x1E23;\\n        t['hdotbelow'] = 0x1E25;\\n        t['he'] = 0x05D4;\\n        t['heart'] = 0x2665;\\n        t['heartsuitblack'] = 0x2665;\\n        t['heartsuitwhite'] = 0x2661;\\n        t['hedagesh'] = 0xFB34;\\n        t['hedageshhebrew'] = 0xFB34;\\n        t['hehaltonearabic'] = 0x06C1;\\n        t['heharabic'] = 0x0647;\\n        t['hehebrew'] = 0x05D4;\\n        t['hehfinalaltonearabic'] = 0xFBA7;\\n        t['hehfinalalttwoarabic'] = 0xFEEA;\\n        t['hehfinalarabic'] = 0xFEEA;\\n        t['hehhamzaabovefinalarabic'] = 0xFBA5;\\n        t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\\n        t['hehinitialaltonearabic'] = 0xFBA8;\\n        t['hehinitialarabic'] = 0xFEEB;\\n        t['hehiragana'] = 0x3078;\\n        t['hehmedialaltonearabic'] = 0xFBA9;\\n        t['hehmedialarabic'] = 0xFEEC;\\n        t['heiseierasquare'] = 0x337B;\\n        t['hekatakana'] = 0x30D8;\\n        t['hekatakanahalfwidth'] = 0xFF8D;\\n        t['hekutaarusquare'] = 0x3336;\\n        t['henghook'] = 0x0267;\\n        t['herutusquare'] = 0x3339;\\n        t['het'] = 0x05D7;\\n        t['hethebrew'] = 0x05D7;\\n        t['hhook'] = 0x0266;\\n        t['hhooksuperior'] = 0x02B1;\\n        t['hieuhacirclekorean'] = 0x327B;\\n        t['hieuhaparenkorean'] = 0x321B;\\n        t['hieuhcirclekorean'] = 0x326D;\\n        t['hieuhkorean'] = 0x314E;\\n        t['hieuhparenkorean'] = 0x320D;\\n        t['hihiragana'] = 0x3072;\\n        t['hikatakana'] = 0x30D2;\\n        t['hikatakanahalfwidth'] = 0xFF8B;\\n        t['hiriq'] = 0x05B4;\\n        t['hiriq14'] = 0x05B4;\\n        t['hiriq21'] = 0x05B4;\\n        t['hiriq2d'] = 0x05B4;\\n        t['hiriqhebrew'] = 0x05B4;\\n        t['hiriqnarrowhebrew'] = 0x05B4;\\n        t['hiriqquarterhebrew'] = 0x05B4;\\n        t['hiriqwidehebrew'] = 0x05B4;\\n        t['hlinebelow'] = 0x1E96;\\n        t['hmonospace'] = 0xFF48;\\n        t['hoarmenian'] = 0x0570;\\n        t['hohipthai'] = 0x0E2B;\\n        t['hohiragana'] = 0x307B;\\n        t['hokatakana'] = 0x30DB;\\n        t['hokatakanahalfwidth'] = 0xFF8E;\\n        t['holam'] = 0x05B9;\\n        t['holam19'] = 0x05B9;\\n        t['holam26'] = 0x05B9;\\n        t['holam32'] = 0x05B9;\\n        t['holamhebrew'] = 0x05B9;\\n        t['holamnarrowhebrew'] = 0x05B9;\\n        t['holamquarterhebrew'] = 0x05B9;\\n        t['holamwidehebrew'] = 0x05B9;\\n        t['honokhukthai'] = 0x0E2E;\\n        t['hookabovecomb'] = 0x0309;\\n        t['hookcmb'] = 0x0309;\\n        t['hookpalatalizedbelowcmb'] = 0x0321;\\n        t['hookretroflexbelowcmb'] = 0x0322;\\n        t['hoonsquare'] = 0x3342;\\n        t['horicoptic'] = 0x03E9;\\n        t['horizontalbar'] = 0x2015;\\n        t['horncmb'] = 0x031B;\\n        t['hotsprings'] = 0x2668;\\n        t['house'] = 0x2302;\\n        t['hparen'] = 0x24A3;\\n        t['hsuperior'] = 0x02B0;\\n        t['hturned'] = 0x0265;\\n        t['huhiragana'] = 0x3075;\\n        t['huiitosquare'] = 0x3333;\\n        t['hukatakana'] = 0x30D5;\\n        t['hukatakanahalfwidth'] = 0xFF8C;\\n        t['hungarumlaut'] = 0x02DD;\\n        t['hungarumlautcmb'] = 0x030B;\\n        t['hv'] = 0x0195;\\n        t['hyphen'] = 0x002D;\\n        t['hypheninferior'] = 0xF6E5;\\n        t['hyphenmonospace'] = 0xFF0D;\\n        t['hyphensmall'] = 0xFE63;\\n        t['hyphensuperior'] = 0xF6E6;\\n        t['hyphentwo'] = 0x2010;\\n        t['i'] = 0x0069;\\n        t['iacute'] = 0x00ED;\\n        t['iacyrillic'] = 0x044F;\\n        t['ibengali'] = 0x0987;\\n        t['ibopomofo'] = 0x3127;\\n        t['ibreve'] = 0x012D;\\n        t['icaron'] = 0x01D0;\\n        t['icircle'] = 0x24D8;\\n        t['icircumflex'] = 0x00EE;\\n        t['icyrillic'] = 0x0456;\\n        t['idblgrave'] = 0x0209;\\n        t['ideographearthcircle'] = 0x328F;\\n        t['ideographfirecircle'] = 0x328B;\\n        t['ideographicallianceparen'] = 0x323F;\\n        t['ideographiccallparen'] = 0x323A;\\n        t['ideographiccentrecircle'] = 0x32A5;\\n        t['ideographicclose'] = 0x3006;\\n        t['ideographiccomma'] = 0x3001;\\n        t['ideographiccommaleft'] = 0xFF64;\\n        t['ideographiccongratulationparen'] = 0x3237;\\n        t['ideographiccorrectcircle'] = 0x32A3;\\n        t['ideographicearthparen'] = 0x322F;\\n        t['ideographicenterpriseparen'] = 0x323D;\\n        t['ideographicexcellentcircle'] = 0x329D;\\n        t['ideographicfestivalparen'] = 0x3240;\\n        t['ideographicfinancialcircle'] = 0x3296;\\n        t['ideographicfinancialparen'] = 0x3236;\\n        t['ideographicfireparen'] = 0x322B;\\n        t['ideographichaveparen'] = 0x3232;\\n        t['ideographichighcircle'] = 0x32A4;\\n        t['ideographiciterationmark'] = 0x3005;\\n        t['ideographiclaborcircle'] = 0x3298;\\n        t['ideographiclaborparen'] = 0x3238;\\n        t['ideographicleftcircle'] = 0x32A7;\\n        t['ideographiclowcircle'] = 0x32A6;\\n        t['ideographicmedicinecircle'] = 0x32A9;\\n        t['ideographicmetalparen'] = 0x322E;\\n        t['ideographicmoonparen'] = 0x322A;\\n        t['ideographicnameparen'] = 0x3234;\\n        t['ideographicperiod'] = 0x3002;\\n        t['ideographicprintcircle'] = 0x329E;\\n        t['ideographicreachparen'] = 0x3243;\\n        t['ideographicrepresentparen'] = 0x3239;\\n        t['ideographicresourceparen'] = 0x323E;\\n        t['ideographicrightcircle'] = 0x32A8;\\n        t['ideographicsecretcircle'] = 0x3299;\\n        t['ideographicselfparen'] = 0x3242;\\n        t['ideographicsocietyparen'] = 0x3233;\\n        t['ideographicspace'] = 0x3000;\\n        t['ideographicspecialparen'] = 0x3235;\\n        t['ideographicstockparen'] = 0x3231;\\n        t['ideographicstudyparen'] = 0x323B;\\n        t['ideographicsunparen'] = 0x3230;\\n        t['ideographicsuperviseparen'] = 0x323C;\\n        t['ideographicwaterparen'] = 0x322C;\\n        t['ideographicwoodparen'] = 0x322D;\\n        t['ideographiczero'] = 0x3007;\\n        t['ideographmetalcircle'] = 0x328E;\\n        t['ideographmooncircle'] = 0x328A;\\n        t['ideographnamecircle'] = 0x3294;\\n        t['ideographsuncircle'] = 0x3290;\\n        t['ideographwatercircle'] = 0x328C;\\n        t['ideographwoodcircle'] = 0x328D;\\n        t['ideva'] = 0x0907;\\n        t['idieresis'] = 0x00EF;\\n        t['idieresisacute'] = 0x1E2F;\\n        t['idieresiscyrillic'] = 0x04E5;\\n        t['idotbelow'] = 0x1ECB;\\n        t['iebrevecyrillic'] = 0x04D7;\\n        t['iecyrillic'] = 0x0435;\\n        t['ieungacirclekorean'] = 0x3275;\\n        t['ieungaparenkorean'] = 0x3215;\\n        t['ieungcirclekorean'] = 0x3267;\\n        t['ieungkorean'] = 0x3147;\\n        t['ieungparenkorean'] = 0x3207;\\n        t['igrave'] = 0x00EC;\\n        t['igujarati'] = 0x0A87;\\n        t['igurmukhi'] = 0x0A07;\\n        t['ihiragana'] = 0x3044;\\n        t['ihookabove'] = 0x1EC9;\\n        t['iibengali'] = 0x0988;\\n        t['iicyrillic'] = 0x0438;\\n        t['iideva'] = 0x0908;\\n        t['iigujarati'] = 0x0A88;\\n        t['iigurmukhi'] = 0x0A08;\\n        t['iimatragurmukhi'] = 0x0A40;\\n        t['iinvertedbreve'] = 0x020B;\\n        t['iishortcyrillic'] = 0x0439;\\n        t['iivowelsignbengali'] = 0x09C0;\\n        t['iivowelsigndeva'] = 0x0940;\\n        t['iivowelsigngujarati'] = 0x0AC0;\\n        t['ij'] = 0x0133;\\n        t['ikatakana'] = 0x30A4;\\n        t['ikatakanahalfwidth'] = 0xFF72;\\n        t['ikorean'] = 0x3163;\\n        t['ilde'] = 0x02DC;\\n        t['iluyhebrew'] = 0x05AC;\\n        t['imacron'] = 0x012B;\\n        t['imacroncyrillic'] = 0x04E3;\\n        t['imageorapproximatelyequal'] = 0x2253;\\n        t['imatragurmukhi'] = 0x0A3F;\\n        t['imonospace'] = 0xFF49;\\n        t['increment'] = 0x2206;\\n        t['infinity'] = 0x221E;\\n        t['iniarmenian'] = 0x056B;\\n        t['integral'] = 0x222B;\\n        t['integralbottom'] = 0x2321;\\n        t['integralbt'] = 0x2321;\\n        t['integralex'] = 0xF8F5;\\n        t['integraltop'] = 0x2320;\\n        t['integraltp'] = 0x2320;\\n        t['intersection'] = 0x2229;\\n        t['intisquare'] = 0x3305;\\n        t['invbullet'] = 0x25D8;\\n        t['invcircle'] = 0x25D9;\\n        t['invsmileface'] = 0x263B;\\n        t['iocyrillic'] = 0x0451;\\n        t['iogonek'] = 0x012F;\\n        t['iota'] = 0x03B9;\\n        t['iotadieresis'] = 0x03CA;\\n        t['iotadieresistonos'] = 0x0390;\\n        t['iotalatin'] = 0x0269;\\n        t['iotatonos'] = 0x03AF;\\n        t['iparen'] = 0x24A4;\\n        t['irigurmukhi'] = 0x0A72;\\n        t['ismallhiragana'] = 0x3043;\\n        t['ismallkatakana'] = 0x30A3;\\n        t['ismallkatakanahalfwidth'] = 0xFF68;\\n        t['issharbengali'] = 0x09FA;\\n        t['istroke'] = 0x0268;\\n        t['isuperior'] = 0xF6ED;\\n        t['iterationhiragana'] = 0x309D;\\n        t['iterationkatakana'] = 0x30FD;\\n        t['itilde'] = 0x0129;\\n        t['itildebelow'] = 0x1E2D;\\n        t['iubopomofo'] = 0x3129;\\n        t['iucyrillic'] = 0x044E;\\n        t['ivowelsignbengali'] = 0x09BF;\\n        t['ivowelsigndeva'] = 0x093F;\\n        t['ivowelsigngujarati'] = 0x0ABF;\\n        t['izhitsacyrillic'] = 0x0475;\\n        t['izhitsadblgravecyrillic'] = 0x0477;\\n        t['j'] = 0x006A;\\n        t['jaarmenian'] = 0x0571;\\n        t['jabengali'] = 0x099C;\\n        t['jadeva'] = 0x091C;\\n        t['jagujarati'] = 0x0A9C;\\n        t['jagurmukhi'] = 0x0A1C;\\n        t['jbopomofo'] = 0x3110;\\n        t['jcaron'] = 0x01F0;\\n        t['jcircle'] = 0x24D9;\\n        t['jcircumflex'] = 0x0135;\\n        t['jcrossedtail'] = 0x029D;\\n        t['jdotlessstroke'] = 0x025F;\\n        t['jecyrillic'] = 0x0458;\\n        t['jeemarabic'] = 0x062C;\\n        t['jeemfinalarabic'] = 0xFE9E;\\n        t['jeeminitialarabic'] = 0xFE9F;\\n        t['jeemmedialarabic'] = 0xFEA0;\\n        t['jeharabic'] = 0x0698;\\n        t['jehfinalarabic'] = 0xFB8B;\\n        t['jhabengali'] = 0x099D;\\n        t['jhadeva'] = 0x091D;\\n        t['jhagujarati'] = 0x0A9D;\\n        t['jhagurmukhi'] = 0x0A1D;\\n        t['jheharmenian'] = 0x057B;\\n        t['jis'] = 0x3004;\\n        t['jmonospace'] = 0xFF4A;\\n        t['jparen'] = 0x24A5;\\n        t['jsuperior'] = 0x02B2;\\n        t['k'] = 0x006B;\\n        t['kabashkircyrillic'] = 0x04A1;\\n        t['kabengali'] = 0x0995;\\n        t['kacute'] = 0x1E31;\\n        t['kacyrillic'] = 0x043A;\\n        t['kadescendercyrillic'] = 0x049B;\\n        t['kadeva'] = 0x0915;\\n        t['kaf'] = 0x05DB;\\n        t['kafarabic'] = 0x0643;\\n        t['kafdagesh'] = 0xFB3B;\\n        t['kafdageshhebrew'] = 0xFB3B;\\n        t['kaffinalarabic'] = 0xFEDA;\\n        t['kafhebrew'] = 0x05DB;\\n        t['kafinitialarabic'] = 0xFEDB;\\n        t['kafmedialarabic'] = 0xFEDC;\\n        t['kafrafehebrew'] = 0xFB4D;\\n        t['kagujarati'] = 0x0A95;\\n        t['kagurmukhi'] = 0x0A15;\\n        t['kahiragana'] = 0x304B;\\n        t['kahookcyrillic'] = 0x04C4;\\n        t['kakatakana'] = 0x30AB;\\n        t['kakatakanahalfwidth'] = 0xFF76;\\n        t['kappa'] = 0x03BA;\\n        t['kappasymbolgreek'] = 0x03F0;\\n        t['kapyeounmieumkorean'] = 0x3171;\\n        t['kapyeounphieuphkorean'] = 0x3184;\\n        t['kapyeounpieupkorean'] = 0x3178;\\n        t['kapyeounssangpieupkorean'] = 0x3179;\\n        t['karoriisquare'] = 0x330D;\\n        t['kashidaautoarabic'] = 0x0640;\\n        t['kashidaautonosidebearingarabic'] = 0x0640;\\n        t['kasmallkatakana'] = 0x30F5;\\n        t['kasquare'] = 0x3384;\\n        t['kasraarabic'] = 0x0650;\\n        t['kasratanarabic'] = 0x064D;\\n        t['kastrokecyrillic'] = 0x049F;\\n        t['katahiraprolongmarkhalfwidth'] = 0xFF70;\\n        t['kaverticalstrokecyrillic'] = 0x049D;\\n        t['kbopomofo'] = 0x310E;\\n        t['kcalsquare'] = 0x3389;\\n        t['kcaron'] = 0x01E9;\\n        t['kcedilla'] = 0x0137;\\n        t['kcircle'] = 0x24DA;\\n        t['kcommaaccent'] = 0x0137;\\n        t['kdotbelow'] = 0x1E33;\\n        t['keharmenian'] = 0x0584;\\n        t['kehiragana'] = 0x3051;\\n        t['kekatakana'] = 0x30B1;\\n        t['kekatakanahalfwidth'] = 0xFF79;\\n        t['kenarmenian'] = 0x056F;\\n        t['kesmallkatakana'] = 0x30F6;\\n        t['kgreenlandic'] = 0x0138;\\n        t['khabengali'] = 0x0996;\\n        t['khacyrillic'] = 0x0445;\\n        t['khadeva'] = 0x0916;\\n        t['khagujarati'] = 0x0A96;\\n        t['khagurmukhi'] = 0x0A16;\\n        t['khaharabic'] = 0x062E;\\n        t['khahfinalarabic'] = 0xFEA6;\\n        t['khahinitialarabic'] = 0xFEA7;\\n        t['khahmedialarabic'] = 0xFEA8;\\n        t['kheicoptic'] = 0x03E7;\\n        t['khhadeva'] = 0x0959;\\n        t['khhagurmukhi'] = 0x0A59;\\n        t['khieukhacirclekorean'] = 0x3278;\\n        t['khieukhaparenkorean'] = 0x3218;\\n        t['khieukhcirclekorean'] = 0x326A;\\n        t['khieukhkorean'] = 0x314B;\\n        t['khieukhparenkorean'] = 0x320A;\\n        t['khokhaithai'] = 0x0E02;\\n        t['khokhonthai'] = 0x0E05;\\n        t['khokhuatthai'] = 0x0E03;\\n        t['khokhwaithai'] = 0x0E04;\\n        t['khomutthai'] = 0x0E5B;\\n        t['khook'] = 0x0199;\\n        t['khorakhangthai'] = 0x0E06;\\n        t['khzsquare'] = 0x3391;\\n        t['kihiragana'] = 0x304D;\\n        t['kikatakana'] = 0x30AD;\\n        t['kikatakanahalfwidth'] = 0xFF77;\\n        t['kiroguramusquare'] = 0x3315;\\n        t['kiromeetorusquare'] = 0x3316;\\n        t['kirosquare'] = 0x3314;\\n        t['kiyeokacirclekorean'] = 0x326E;\\n        t['kiyeokaparenkorean'] = 0x320E;\\n        t['kiyeokcirclekorean'] = 0x3260;\\n        t['kiyeokkorean'] = 0x3131;\\n        t['kiyeokparenkorean'] = 0x3200;\\n        t['kiyeoksioskorean'] = 0x3133;\\n        t['kjecyrillic'] = 0x045C;\\n        t['klinebelow'] = 0x1E35;\\n        t['klsquare'] = 0x3398;\\n        t['kmcubedsquare'] = 0x33A6;\\n        t['kmonospace'] = 0xFF4B;\\n        t['kmsquaredsquare'] = 0x33A2;\\n        t['kohiragana'] = 0x3053;\\n        t['kohmsquare'] = 0x33C0;\\n        t['kokaithai'] = 0x0E01;\\n        t['kokatakana'] = 0x30B3;\\n        t['kokatakanahalfwidth'] = 0xFF7A;\\n        t['kooposquare'] = 0x331E;\\n        t['koppacyrillic'] = 0x0481;\\n        t['koreanstandardsymbol'] = 0x327F;\\n        t['koroniscmb'] = 0x0343;\\n        t['kparen'] = 0x24A6;\\n        t['kpasquare'] = 0x33AA;\\n        t['ksicyrillic'] = 0x046F;\\n        t['ktsquare'] = 0x33CF;\\n        t['kturned'] = 0x029E;\\n        t['kuhiragana'] = 0x304F;\\n        t['kukatakana'] = 0x30AF;\\n        t['kukatakanahalfwidth'] = 0xFF78;\\n        t['kvsquare'] = 0x33B8;\\n        t['kwsquare'] = 0x33BE;\\n        t['l'] = 0x006C;\\n        t['labengali'] = 0x09B2;\\n        t['lacute'] = 0x013A;\\n        t['ladeva'] = 0x0932;\\n        t['lagujarati'] = 0x0AB2;\\n        t['lagurmukhi'] = 0x0A32;\\n        t['lakkhangyaothai'] = 0x0E45;\\n        t['lamaleffinalarabic'] = 0xFEFC;\\n        t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\\n        t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\\n        t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\\n        t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\\n        t['lamalefisolatedarabic'] = 0xFEFB;\\n        t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\\n        t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\\n        t['lamarabic'] = 0x0644;\\n        t['lambda'] = 0x03BB;\\n        t['lambdastroke'] = 0x019B;\\n        t['lamed'] = 0x05DC;\\n        t['lameddagesh'] = 0xFB3C;\\n        t['lameddageshhebrew'] = 0xFB3C;\\n        t['lamedhebrew'] = 0x05DC;\\n        t['lamfinalarabic'] = 0xFEDE;\\n        t['lamhahinitialarabic'] = 0xFCCA;\\n        t['laminitialarabic'] = 0xFEDF;\\n        t['lamjeeminitialarabic'] = 0xFCC9;\\n        t['lamkhahinitialarabic'] = 0xFCCB;\\n        t['lamlamhehisolatedarabic'] = 0xFDF2;\\n        t['lammedialarabic'] = 0xFEE0;\\n        t['lammeemhahinitialarabic'] = 0xFD88;\\n        t['lammeeminitialarabic'] = 0xFCCC;\\n        t['largecircle'] = 0x25EF;\\n        t['lbar'] = 0x019A;\\n        t['lbelt'] = 0x026C;\\n        t['lbopomofo'] = 0x310C;\\n        t['lcaron'] = 0x013E;\\n        t['lcedilla'] = 0x013C;\\n        t['lcircle'] = 0x24DB;\\n        t['lcircumflexbelow'] = 0x1E3D;\\n        t['lcommaaccent'] = 0x013C;\\n        t['ldot'] = 0x0140;\\n        t['ldotaccent'] = 0x0140;\\n        t['ldotbelow'] = 0x1E37;\\n        t['ldotbelowmacron'] = 0x1E39;\\n        t['leftangleabovecmb'] = 0x031A;\\n        t['lefttackbelowcmb'] = 0x0318;\\n        t['less'] = 0x003C;\\n        t['lessequal'] = 0x2264;\\n        t['lessequalorgreater'] = 0x22DA;\\n        t['lessmonospace'] = 0xFF1C;\\n        t['lessorequivalent'] = 0x2272;\\n        t['lessorgreater'] = 0x2276;\\n        t['lessoverequal'] = 0x2266;\\n        t['lesssmall'] = 0xFE64;\\n        t['lezh'] = 0x026E;\\n        t['lfblock'] = 0x258C;\\n        t['lhookretroflex'] = 0x026D;\\n        t['lira'] = 0x20A4;\\n        t['liwnarmenian'] = 0x056C;\\n        t['lj'] = 0x01C9;\\n        t['ljecyrillic'] = 0x0459;\\n        t['ll'] = 0xF6C0;\\n        t['lladeva'] = 0x0933;\\n        t['llagujarati'] = 0x0AB3;\\n        t['llinebelow'] = 0x1E3B;\\n        t['llladeva'] = 0x0934;\\n        t['llvocalicbengali'] = 0x09E1;\\n        t['llvocalicdeva'] = 0x0961;\\n        t['llvocalicvowelsignbengali'] = 0x09E3;\\n        t['llvocalicvowelsigndeva'] = 0x0963;\\n        t['lmiddletilde'] = 0x026B;\\n        t['lmonospace'] = 0xFF4C;\\n        t['lmsquare'] = 0x33D0;\\n        t['lochulathai'] = 0x0E2C;\\n        t['logicaland'] = 0x2227;\\n        t['logicalnot'] = 0x00AC;\\n        t['logicalnotreversed'] = 0x2310;\\n        t['logicalor'] = 0x2228;\\n        t['lolingthai'] = 0x0E25;\\n        t['longs'] = 0x017F;\\n        t['lowlinecenterline'] = 0xFE4E;\\n        t['lowlinecmb'] = 0x0332;\\n        t['lowlinedashed'] = 0xFE4D;\\n        t['lozenge'] = 0x25CA;\\n        t['lparen'] = 0x24A7;\\n        t['lslash'] = 0x0142;\\n        t['lsquare'] = 0x2113;\\n        t['lsuperior'] = 0xF6EE;\\n        t['ltshade'] = 0x2591;\\n        t['luthai'] = 0x0E26;\\n        t['lvocalicbengali'] = 0x098C;\\n        t['lvocalicdeva'] = 0x090C;\\n        t['lvocalicvowelsignbengali'] = 0x09E2;\\n        t['lvocalicvowelsigndeva'] = 0x0962;\\n        t['lxsquare'] = 0x33D3;\\n        t['m'] = 0x006D;\\n        t['mabengali'] = 0x09AE;\\n        t['macron'] = 0x00AF;\\n        t['macronbelowcmb'] = 0x0331;\\n        t['macroncmb'] = 0x0304;\\n        t['macronlowmod'] = 0x02CD;\\n        t['macronmonospace'] = 0xFFE3;\\n        t['macute'] = 0x1E3F;\\n        t['madeva'] = 0x092E;\\n        t['magujarati'] = 0x0AAE;\\n        t['magurmukhi'] = 0x0A2E;\\n        t['mahapakhhebrew'] = 0x05A4;\\n        t['mahapakhlefthebrew'] = 0x05A4;\\n        t['mahiragana'] = 0x307E;\\n        t['maichattawalowleftthai'] = 0xF895;\\n        t['maichattawalowrightthai'] = 0xF894;\\n        t['maichattawathai'] = 0x0E4B;\\n        t['maichattawaupperleftthai'] = 0xF893;\\n        t['maieklowleftthai'] = 0xF88C;\\n        t['maieklowrightthai'] = 0xF88B;\\n        t['maiekthai'] = 0x0E48;\\n        t['maiekupperleftthai'] = 0xF88A;\\n        t['maihanakatleftthai'] = 0xF884;\\n        t['maihanakatthai'] = 0x0E31;\\n        t['maitaikhuleftthai'] = 0xF889;\\n        t['maitaikhuthai'] = 0x0E47;\\n        t['maitholowleftthai'] = 0xF88F;\\n        t['maitholowrightthai'] = 0xF88E;\\n        t['maithothai'] = 0x0E49;\\n        t['maithoupperleftthai'] = 0xF88D;\\n        t['maitrilowleftthai'] = 0xF892;\\n        t['maitrilowrightthai'] = 0xF891;\\n        t['maitrithai'] = 0x0E4A;\\n        t['maitriupperleftthai'] = 0xF890;\\n        t['maiyamokthai'] = 0x0E46;\\n        t['makatakana'] = 0x30DE;\\n        t['makatakanahalfwidth'] = 0xFF8F;\\n        t['male'] = 0x2642;\\n        t['mansyonsquare'] = 0x3347;\\n        t['maqafhebrew'] = 0x05BE;\\n        t['mars'] = 0x2642;\\n        t['masoracirclehebrew'] = 0x05AF;\\n        t['masquare'] = 0x3383;\\n        t['mbopomofo'] = 0x3107;\\n        t['mbsquare'] = 0x33D4;\\n        t['mcircle'] = 0x24DC;\\n        t['mcubedsquare'] = 0x33A5;\\n        t['mdotaccent'] = 0x1E41;\\n        t['mdotbelow'] = 0x1E43;\\n        t['meemarabic'] = 0x0645;\\n        t['meemfinalarabic'] = 0xFEE2;\\n        t['meeminitialarabic'] = 0xFEE3;\\n        t['meemmedialarabic'] = 0xFEE4;\\n        t['meemmeeminitialarabic'] = 0xFCD1;\\n        t['meemmeemisolatedarabic'] = 0xFC48;\\n        t['meetorusquare'] = 0x334D;\\n        t['mehiragana'] = 0x3081;\\n        t['meizierasquare'] = 0x337E;\\n        t['mekatakana'] = 0x30E1;\\n        t['mekatakanahalfwidth'] = 0xFF92;\\n        t['mem'] = 0x05DE;\\n        t['memdagesh'] = 0xFB3E;\\n        t['memdageshhebrew'] = 0xFB3E;\\n        t['memhebrew'] = 0x05DE;\\n        t['menarmenian'] = 0x0574;\\n        t['merkhahebrew'] = 0x05A5;\\n        t['merkhakefulahebrew'] = 0x05A6;\\n        t['merkhakefulalefthebrew'] = 0x05A6;\\n        t['merkhalefthebrew'] = 0x05A5;\\n        t['mhook'] = 0x0271;\\n        t['mhzsquare'] = 0x3392;\\n        t['middledotkatakanahalfwidth'] = 0xFF65;\\n        t['middot'] = 0x00B7;\\n        t['mieumacirclekorean'] = 0x3272;\\n        t['mieumaparenkorean'] = 0x3212;\\n        t['mieumcirclekorean'] = 0x3264;\\n        t['mieumkorean'] = 0x3141;\\n        t['mieumpansioskorean'] = 0x3170;\\n        t['mieumparenkorean'] = 0x3204;\\n        t['mieumpieupkorean'] = 0x316E;\\n        t['mieumsioskorean'] = 0x316F;\\n        t['mihiragana'] = 0x307F;\\n        t['mikatakana'] = 0x30DF;\\n        t['mikatakanahalfwidth'] = 0xFF90;\\n        t['minus'] = 0x2212;\\n        t['minusbelowcmb'] = 0x0320;\\n        t['minuscircle'] = 0x2296;\\n        t['minusmod'] = 0x02D7;\\n        t['minusplus'] = 0x2213;\\n        t['minute'] = 0x2032;\\n        t['miribaarusquare'] = 0x334A;\\n        t['mirisquare'] = 0x3349;\\n        t['mlonglegturned'] = 0x0270;\\n        t['mlsquare'] = 0x3396;\\n        t['mmcubedsquare'] = 0x33A3;\\n        t['mmonospace'] = 0xFF4D;\\n        t['mmsquaredsquare'] = 0x339F;\\n        t['mohiragana'] = 0x3082;\\n        t['mohmsquare'] = 0x33C1;\\n        t['mokatakana'] = 0x30E2;\\n        t['mokatakanahalfwidth'] = 0xFF93;\\n        t['molsquare'] = 0x33D6;\\n        t['momathai'] = 0x0E21;\\n        t['moverssquare'] = 0x33A7;\\n        t['moverssquaredsquare'] = 0x33A8;\\n        t['mparen'] = 0x24A8;\\n        t['mpasquare'] = 0x33AB;\\n        t['mssquare'] = 0x33B3;\\n        t['msuperior'] = 0xF6EF;\\n        t['mturned'] = 0x026F;\\n        t['mu'] = 0x00B5;\\n        t['mu1'] = 0x00B5;\\n        t['muasquare'] = 0x3382;\\n        t['muchgreater'] = 0x226B;\\n        t['muchless'] = 0x226A;\\n        t['mufsquare'] = 0x338C;\\n        t['mugreek'] = 0x03BC;\\n        t['mugsquare'] = 0x338D;\\n        t['muhiragana'] = 0x3080;\\n        t['mukatakana'] = 0x30E0;\\n        t['mukatakanahalfwidth'] = 0xFF91;\\n        t['mulsquare'] = 0x3395;\\n        t['multiply'] = 0x00D7;\\n        t['mumsquare'] = 0x339B;\\n        t['munahhebrew'] = 0x05A3;\\n        t['munahlefthebrew'] = 0x05A3;\\n        t['musicalnote'] = 0x266A;\\n        t['musicalnotedbl'] = 0x266B;\\n        t['musicflatsign'] = 0x266D;\\n        t['musicsharpsign'] = 0x266F;\\n        t['mussquare'] = 0x33B2;\\n        t['muvsquare'] = 0x33B6;\\n        t['muwsquare'] = 0x33BC;\\n        t['mvmegasquare'] = 0x33B9;\\n        t['mvsquare'] = 0x33B7;\\n        t['mwmegasquare'] = 0x33BF;\\n        t['mwsquare'] = 0x33BD;\\n        t['n'] = 0x006E;\\n        t['nabengali'] = 0x09A8;\\n        t['nabla'] = 0x2207;\\n        t['nacute'] = 0x0144;\\n        t['nadeva'] = 0x0928;\\n        t['nagujarati'] = 0x0AA8;\\n        t['nagurmukhi'] = 0x0A28;\\n        t['nahiragana'] = 0x306A;\\n        t['nakatakana'] = 0x30CA;\\n        t['nakatakanahalfwidth'] = 0xFF85;\\n        t['napostrophe'] = 0x0149;\\n        t['nasquare'] = 0x3381;\\n        t['nbopomofo'] = 0x310B;\\n        t['nbspace'] = 0x00A0;\\n        t['ncaron'] = 0x0148;\\n        t['ncedilla'] = 0x0146;\\n        t['ncircle'] = 0x24DD;\\n        t['ncircumflexbelow'] = 0x1E4B;\\n        t['ncommaaccent'] = 0x0146;\\n        t['ndotaccent'] = 0x1E45;\\n        t['ndotbelow'] = 0x1E47;\\n        t['nehiragana'] = 0x306D;\\n        t['nekatakana'] = 0x30CD;\\n        t['nekatakanahalfwidth'] = 0xFF88;\\n        t['newsheqelsign'] = 0x20AA;\\n        t['nfsquare'] = 0x338B;\\n        t['ngabengali'] = 0x0999;\\n        t['ngadeva'] = 0x0919;\\n        t['ngagujarati'] = 0x0A99;\\n        t['ngagurmukhi'] = 0x0A19;\\n        t['ngonguthai'] = 0x0E07;\\n        t['nhiragana'] = 0x3093;\\n        t['nhookleft'] = 0x0272;\\n        t['nhookretroflex'] = 0x0273;\\n        t['nieunacirclekorean'] = 0x326F;\\n        t['nieunaparenkorean'] = 0x320F;\\n        t['nieuncieuckorean'] = 0x3135;\\n        t['nieuncirclekorean'] = 0x3261;\\n        t['nieunhieuhkorean'] = 0x3136;\\n        t['nieunkorean'] = 0x3134;\\n        t['nieunpansioskorean'] = 0x3168;\\n        t['nieunparenkorean'] = 0x3201;\\n        t['nieunsioskorean'] = 0x3167;\\n        t['nieuntikeutkorean'] = 0x3166;\\n        t['nihiragana'] = 0x306B;\\n        t['nikatakana'] = 0x30CB;\\n        t['nikatakanahalfwidth'] = 0xFF86;\\n        t['nikhahitleftthai'] = 0xF899;\\n        t['nikhahitthai'] = 0x0E4D;\\n        t['nine'] = 0x0039;\\n        t['ninearabic'] = 0x0669;\\n        t['ninebengali'] = 0x09EF;\\n        t['ninecircle'] = 0x2468;\\n        t['ninecircleinversesansserif'] = 0x2792;\\n        t['ninedeva'] = 0x096F;\\n        t['ninegujarati'] = 0x0AEF;\\n        t['ninegurmukhi'] = 0x0A6F;\\n        t['ninehackarabic'] = 0x0669;\\n        t['ninehangzhou'] = 0x3029;\\n        t['nineideographicparen'] = 0x3228;\\n        t['nineinferior'] = 0x2089;\\n        t['ninemonospace'] = 0xFF19;\\n        t['nineoldstyle'] = 0xF739;\\n        t['nineparen'] = 0x247C;\\n        t['nineperiod'] = 0x2490;\\n        t['ninepersian'] = 0x06F9;\\n        t['nineroman'] = 0x2178;\\n        t['ninesuperior'] = 0x2079;\\n        t['nineteencircle'] = 0x2472;\\n        t['nineteenparen'] = 0x2486;\\n        t['nineteenperiod'] = 0x249A;\\n        t['ninethai'] = 0x0E59;\\n        t['nj'] = 0x01CC;\\n        t['njecyrillic'] = 0x045A;\\n        t['nkatakana'] = 0x30F3;\\n        t['nkatakanahalfwidth'] = 0xFF9D;\\n        t['nlegrightlong'] = 0x019E;\\n        t['nlinebelow'] = 0x1E49;\\n        t['nmonospace'] = 0xFF4E;\\n        t['nmsquare'] = 0x339A;\\n        t['nnabengali'] = 0x09A3;\\n        t['nnadeva'] = 0x0923;\\n        t['nnagujarati'] = 0x0AA3;\\n        t['nnagurmukhi'] = 0x0A23;\\n        t['nnnadeva'] = 0x0929;\\n        t['nohiragana'] = 0x306E;\\n        t['nokatakana'] = 0x30CE;\\n        t['nokatakanahalfwidth'] = 0xFF89;\\n        t['nonbreakingspace'] = 0x00A0;\\n        t['nonenthai'] = 0x0E13;\\n        t['nonuthai'] = 0x0E19;\\n        t['noonarabic'] = 0x0646;\\n        t['noonfinalarabic'] = 0xFEE6;\\n        t['noonghunnaarabic'] = 0x06BA;\\n        t['noonghunnafinalarabic'] = 0xFB9F;\\n        t['nooninitialarabic'] = 0xFEE7;\\n        t['noonjeeminitialarabic'] = 0xFCD2;\\n        t['noonjeemisolatedarabic'] = 0xFC4B;\\n        t['noonmedialarabic'] = 0xFEE8;\\n        t['noonmeeminitialarabic'] = 0xFCD5;\\n        t['noonmeemisolatedarabic'] = 0xFC4E;\\n        t['noonnoonfinalarabic'] = 0xFC8D;\\n        t['notcontains'] = 0x220C;\\n        t['notelement'] = 0x2209;\\n        t['notelementof'] = 0x2209;\\n        t['notequal'] = 0x2260;\\n        t['notgreater'] = 0x226F;\\n        t['notgreaternorequal'] = 0x2271;\\n        t['notgreaternorless'] = 0x2279;\\n        t['notidentical'] = 0x2262;\\n        t['notless'] = 0x226E;\\n        t['notlessnorequal'] = 0x2270;\\n        t['notparallel'] = 0x2226;\\n        t['notprecedes'] = 0x2280;\\n        t['notsubset'] = 0x2284;\\n        t['notsucceeds'] = 0x2281;\\n        t['notsuperset'] = 0x2285;\\n        t['nowarmenian'] = 0x0576;\\n        t['nparen'] = 0x24A9;\\n        t['nssquare'] = 0x33B1;\\n        t['nsuperior'] = 0x207F;\\n        t['ntilde'] = 0x00F1;\\n        t['nu'] = 0x03BD;\\n        t['nuhiragana'] = 0x306C;\\n        t['nukatakana'] = 0x30CC;\\n        t['nukatakanahalfwidth'] = 0xFF87;\\n        t['nuktabengali'] = 0x09BC;\\n        t['nuktadeva'] = 0x093C;\\n        t['nuktagujarati'] = 0x0ABC;\\n        t['nuktagurmukhi'] = 0x0A3C;\\n        t['numbersign'] = 0x0023;\\n        t['numbersignmonospace'] = 0xFF03;\\n        t['numbersignsmall'] = 0xFE5F;\\n        t['numeralsigngreek'] = 0x0374;\\n        t['numeralsignlowergreek'] = 0x0375;\\n        t['numero'] = 0x2116;\\n        t['nun'] = 0x05E0;\\n        t['nundagesh'] = 0xFB40;\\n        t['nundageshhebrew'] = 0xFB40;\\n        t['nunhebrew'] = 0x05E0;\\n        t['nvsquare'] = 0x33B5;\\n        t['nwsquare'] = 0x33BB;\\n        t['nyabengali'] = 0x099E;\\n        t['nyadeva'] = 0x091E;\\n        t['nyagujarati'] = 0x0A9E;\\n        t['nyagurmukhi'] = 0x0A1E;\\n        t['o'] = 0x006F;\\n        t['oacute'] = 0x00F3;\\n        t['oangthai'] = 0x0E2D;\\n        t['obarred'] = 0x0275;\\n        t['obarredcyrillic'] = 0x04E9;\\n        t['obarreddieresiscyrillic'] = 0x04EB;\\n        t['obengali'] = 0x0993;\\n        t['obopomofo'] = 0x311B;\\n        t['obreve'] = 0x014F;\\n        t['ocandradeva'] = 0x0911;\\n        t['ocandragujarati'] = 0x0A91;\\n        t['ocandravowelsigndeva'] = 0x0949;\\n        t['ocandravowelsigngujarati'] = 0x0AC9;\\n        t['ocaron'] = 0x01D2;\\n        t['ocircle'] = 0x24DE;\\n        t['ocircumflex'] = 0x00F4;\\n        t['ocircumflexacute'] = 0x1ED1;\\n        t['ocircumflexdotbelow'] = 0x1ED9;\\n        t['ocircumflexgrave'] = 0x1ED3;\\n        t['ocircumflexhookabove'] = 0x1ED5;\\n        t['ocircumflextilde'] = 0x1ED7;\\n        t['ocyrillic'] = 0x043E;\\n        t['odblacute'] = 0x0151;\\n        t['odblgrave'] = 0x020D;\\n        t['odeva'] = 0x0913;\\n        t['odieresis'] = 0x00F6;\\n        t['odieresiscyrillic'] = 0x04E7;\\n        t['odotbelow'] = 0x1ECD;\\n        t['oe'] = 0x0153;\\n        t['oekorean'] = 0x315A;\\n        t['ogonek'] = 0x02DB;\\n        t['ogonekcmb'] = 0x0328;\\n        t['ograve'] = 0x00F2;\\n        t['ogujarati'] = 0x0A93;\\n        t['oharmenian'] = 0x0585;\\n        t['ohiragana'] = 0x304A;\\n        t['ohookabove'] = 0x1ECF;\\n        t['ohorn'] = 0x01A1;\\n        t['ohornacute'] = 0x1EDB;\\n        t['ohorndotbelow'] = 0x1EE3;\\n        t['ohorngrave'] = 0x1EDD;\\n        t['ohornhookabove'] = 0x1EDF;\\n        t['ohorntilde'] = 0x1EE1;\\n        t['ohungarumlaut'] = 0x0151;\\n        t['oi'] = 0x01A3;\\n        t['oinvertedbreve'] = 0x020F;\\n        t['okatakana'] = 0x30AA;\\n        t['okatakanahalfwidth'] = 0xFF75;\\n        t['okorean'] = 0x3157;\\n        t['olehebrew'] = 0x05AB;\\n        t['omacron'] = 0x014D;\\n        t['omacronacute'] = 0x1E53;\\n        t['omacrongrave'] = 0x1E51;\\n        t['omdeva'] = 0x0950;\\n        t['omega'] = 0x03C9;\\n        t['omega1'] = 0x03D6;\\n        t['omegacyrillic'] = 0x0461;\\n        t['omegalatinclosed'] = 0x0277;\\n        t['omegaroundcyrillic'] = 0x047B;\\n        t['omegatitlocyrillic'] = 0x047D;\\n        t['omegatonos'] = 0x03CE;\\n        t['omgujarati'] = 0x0AD0;\\n        t['omicron'] = 0x03BF;\\n        t['omicrontonos'] = 0x03CC;\\n        t['omonospace'] = 0xFF4F;\\n        t['one'] = 0x0031;\\n        t['onearabic'] = 0x0661;\\n        t['onebengali'] = 0x09E7;\\n        t['onecircle'] = 0x2460;\\n        t['onecircleinversesansserif'] = 0x278A;\\n        t['onedeva'] = 0x0967;\\n        t['onedotenleader'] = 0x2024;\\n        t['oneeighth'] = 0x215B;\\n        t['onefitted'] = 0xF6DC;\\n        t['onegujarati'] = 0x0AE7;\\n        t['onegurmukhi'] = 0x0A67;\\n        t['onehackarabic'] = 0x0661;\\n        t['onehalf'] = 0x00BD;\\n        t['onehangzhou'] = 0x3021;\\n        t['oneideographicparen'] = 0x3220;\\n        t['oneinferior'] = 0x2081;\\n        t['onemonospace'] = 0xFF11;\\n        t['onenumeratorbengali'] = 0x09F4;\\n        t['oneoldstyle'] = 0xF731;\\n        t['oneparen'] = 0x2474;\\n        t['oneperiod'] = 0x2488;\\n        t['onepersian'] = 0x06F1;\\n        t['onequarter'] = 0x00BC;\\n        t['oneroman'] = 0x2170;\\n        t['onesuperior'] = 0x00B9;\\n        t['onethai'] = 0x0E51;\\n        t['onethird'] = 0x2153;\\n        t['oogonek'] = 0x01EB;\\n        t['oogonekmacron'] = 0x01ED;\\n        t['oogurmukhi'] = 0x0A13;\\n        t['oomatragurmukhi'] = 0x0A4B;\\n        t['oopen'] = 0x0254;\\n        t['oparen'] = 0x24AA;\\n        t['openbullet'] = 0x25E6;\\n        t['option'] = 0x2325;\\n        t['ordfeminine'] = 0x00AA;\\n        t['ordmasculine'] = 0x00BA;\\n        t['orthogonal'] = 0x221F;\\n        t['oshortdeva'] = 0x0912;\\n        t['oshortvowelsigndeva'] = 0x094A;\\n        t['oslash'] = 0x00F8;\\n        t['oslashacute'] = 0x01FF;\\n        t['osmallhiragana'] = 0x3049;\\n        t['osmallkatakana'] = 0x30A9;\\n        t['osmallkatakanahalfwidth'] = 0xFF6B;\\n        t['ostrokeacute'] = 0x01FF;\\n        t['osuperior'] = 0xF6F0;\\n        t['otcyrillic'] = 0x047F;\\n        t['otilde'] = 0x00F5;\\n        t['otildeacute'] = 0x1E4D;\\n        t['otildedieresis'] = 0x1E4F;\\n        t['oubopomofo'] = 0x3121;\\n        t['overline'] = 0x203E;\\n        t['overlinecenterline'] = 0xFE4A;\\n        t['overlinecmb'] = 0x0305;\\n        t['overlinedashed'] = 0xFE49;\\n        t['overlinedblwavy'] = 0xFE4C;\\n        t['overlinewavy'] = 0xFE4B;\\n        t['overscore'] = 0x00AF;\\n        t['ovowelsignbengali'] = 0x09CB;\\n        t['ovowelsigndeva'] = 0x094B;\\n        t['ovowelsigngujarati'] = 0x0ACB;\\n        t['p'] = 0x0070;\\n        t['paampssquare'] = 0x3380;\\n        t['paasentosquare'] = 0x332B;\\n        t['pabengali'] = 0x09AA;\\n        t['pacute'] = 0x1E55;\\n        t['padeva'] = 0x092A;\\n        t['pagedown'] = 0x21DF;\\n        t['pageup'] = 0x21DE;\\n        t['pagujarati'] = 0x0AAA;\\n        t['pagurmukhi'] = 0x0A2A;\\n        t['pahiragana'] = 0x3071;\\n        t['paiyannoithai'] = 0x0E2F;\\n        t['pakatakana'] = 0x30D1;\\n        t['palatalizationcyrilliccmb'] = 0x0484;\\n        t['palochkacyrillic'] = 0x04C0;\\n        t['pansioskorean'] = 0x317F;\\n        t['paragraph'] = 0x00B6;\\n        t['parallel'] = 0x2225;\\n        t['parenleft'] = 0x0028;\\n        t['parenleftaltonearabic'] = 0xFD3E;\\n        t['parenleftbt'] = 0xF8ED;\\n        t['parenleftex'] = 0xF8EC;\\n        t['parenleftinferior'] = 0x208D;\\n        t['parenleftmonospace'] = 0xFF08;\\n        t['parenleftsmall'] = 0xFE59;\\n        t['parenleftsuperior'] = 0x207D;\\n        t['parenlefttp'] = 0xF8EB;\\n        t['parenleftvertical'] = 0xFE35;\\n        t['parenright'] = 0x0029;\\n        t['parenrightaltonearabic'] = 0xFD3F;\\n        t['parenrightbt'] = 0xF8F8;\\n        t['parenrightex'] = 0xF8F7;\\n        t['parenrightinferior'] = 0x208E;\\n        t['parenrightmonospace'] = 0xFF09;\\n        t['parenrightsmall'] = 0xFE5A;\\n        t['parenrightsuperior'] = 0x207E;\\n        t['parenrighttp'] = 0xF8F6;\\n        t['parenrightvertical'] = 0xFE36;\\n        t['partialdiff'] = 0x2202;\\n        t['paseqhebrew'] = 0x05C0;\\n        t['pashtahebrew'] = 0x0599;\\n        t['pasquare'] = 0x33A9;\\n        t['patah'] = 0x05B7;\\n        t['patah11'] = 0x05B7;\\n        t['patah1d'] = 0x05B7;\\n        t['patah2a'] = 0x05B7;\\n        t['patahhebrew'] = 0x05B7;\\n        t['patahnarrowhebrew'] = 0x05B7;\\n        t['patahquarterhebrew'] = 0x05B7;\\n        t['patahwidehebrew'] = 0x05B7;\\n        t['pazerhebrew'] = 0x05A1;\\n        t['pbopomofo'] = 0x3106;\\n        t['pcircle'] = 0x24DF;\\n        t['pdotaccent'] = 0x1E57;\\n        t['pe'] = 0x05E4;\\n        t['pecyrillic'] = 0x043F;\\n        t['pedagesh'] = 0xFB44;\\n        t['pedageshhebrew'] = 0xFB44;\\n        t['peezisquare'] = 0x333B;\\n        t['pefinaldageshhebrew'] = 0xFB43;\\n        t['peharabic'] = 0x067E;\\n        t['peharmenian'] = 0x057A;\\n        t['pehebrew'] = 0x05E4;\\n        t['pehfinalarabic'] = 0xFB57;\\n        t['pehinitialarabic'] = 0xFB58;\\n        t['pehiragana'] = 0x307A;\\n        t['pehmedialarabic'] = 0xFB59;\\n        t['pekatakana'] = 0x30DA;\\n        t['pemiddlehookcyrillic'] = 0x04A7;\\n        t['perafehebrew'] = 0xFB4E;\\n        t['percent'] = 0x0025;\\n        t['percentarabic'] = 0x066A;\\n        t['percentmonospace'] = 0xFF05;\\n        t['percentsmall'] = 0xFE6A;\\n        t['period'] = 0x002E;\\n        t['periodarmenian'] = 0x0589;\\n        t['periodcentered'] = 0x00B7;\\n        t['periodhalfwidth'] = 0xFF61;\\n        t['periodinferior'] = 0xF6E7;\\n        t['periodmonospace'] = 0xFF0E;\\n        t['periodsmall'] = 0xFE52;\\n        t['periodsuperior'] = 0xF6E8;\\n        t['perispomenigreekcmb'] = 0x0342;\\n        t['perpendicular'] = 0x22A5;\\n        t['perthousand'] = 0x2030;\\n        t['peseta'] = 0x20A7;\\n        t['pfsquare'] = 0x338A;\\n        t['phabengali'] = 0x09AB;\\n        t['phadeva'] = 0x092B;\\n        t['phagujarati'] = 0x0AAB;\\n        t['phagurmukhi'] = 0x0A2B;\\n        t['phi'] = 0x03C6;\\n        t['phi1'] = 0x03D5;\\n        t['phieuphacirclekorean'] = 0x327A;\\n        t['phieuphaparenkorean'] = 0x321A;\\n        t['phieuphcirclekorean'] = 0x326C;\\n        t['phieuphkorean'] = 0x314D;\\n        t['phieuphparenkorean'] = 0x320C;\\n        t['philatin'] = 0x0278;\\n        t['phinthuthai'] = 0x0E3A;\\n        t['phisymbolgreek'] = 0x03D5;\\n        t['phook'] = 0x01A5;\\n        t['phophanthai'] = 0x0E1E;\\n        t['phophungthai'] = 0x0E1C;\\n        t['phosamphaothai'] = 0x0E20;\\n        t['pi'] = 0x03C0;\\n        t['pieupacirclekorean'] = 0x3273;\\n        t['pieupaparenkorean'] = 0x3213;\\n        t['pieupcieuckorean'] = 0x3176;\\n        t['pieupcirclekorean'] = 0x3265;\\n        t['pieupkiyeokkorean'] = 0x3172;\\n        t['pieupkorean'] = 0x3142;\\n        t['pieupparenkorean'] = 0x3205;\\n        t['pieupsioskiyeokkorean'] = 0x3174;\\n        t['pieupsioskorean'] = 0x3144;\\n        t['pieupsiostikeutkorean'] = 0x3175;\\n        t['pieupthieuthkorean'] = 0x3177;\\n        t['pieuptikeutkorean'] = 0x3173;\\n        t['pihiragana'] = 0x3074;\\n        t['pikatakana'] = 0x30D4;\\n        t['pisymbolgreek'] = 0x03D6;\\n        t['piwrarmenian'] = 0x0583;\\n        t['plus'] = 0x002B;\\n        t['plusbelowcmb'] = 0x031F;\\n        t['pluscircle'] = 0x2295;\\n        t['plusminus'] = 0x00B1;\\n        t['plusmod'] = 0x02D6;\\n        t['plusmonospace'] = 0xFF0B;\\n        t['plussmall'] = 0xFE62;\\n        t['plussuperior'] = 0x207A;\\n        t['pmonospace'] = 0xFF50;\\n        t['pmsquare'] = 0x33D8;\\n        t['pohiragana'] = 0x307D;\\n        t['pointingindexdownwhite'] = 0x261F;\\n        t['pointingindexleftwhite'] = 0x261C;\\n        t['pointingindexrightwhite'] = 0x261E;\\n        t['pointingindexupwhite'] = 0x261D;\\n        t['pokatakana'] = 0x30DD;\\n        t['poplathai'] = 0x0E1B;\\n        t['postalmark'] = 0x3012;\\n        t['postalmarkface'] = 0x3020;\\n        t['pparen'] = 0x24AB;\\n        t['precedes'] = 0x227A;\\n        t['prescription'] = 0x211E;\\n        t['primemod'] = 0x02B9;\\n        t['primereversed'] = 0x2035;\\n        t['product'] = 0x220F;\\n        t['projective'] = 0x2305;\\n        t['prolongedkana'] = 0x30FC;\\n        t['propellor'] = 0x2318;\\n        t['propersubset'] = 0x2282;\\n        t['propersuperset'] = 0x2283;\\n        t['proportion'] = 0x2237;\\n        t['proportional'] = 0x221D;\\n        t['psi'] = 0x03C8;\\n        t['psicyrillic'] = 0x0471;\\n        t['psilipneumatacyrilliccmb'] = 0x0486;\\n        t['pssquare'] = 0x33B0;\\n        t['puhiragana'] = 0x3077;\\n        t['pukatakana'] = 0x30D7;\\n        t['pvsquare'] = 0x33B4;\\n        t['pwsquare'] = 0x33BA;\\n        t['q'] = 0x0071;\\n        t['qadeva'] = 0x0958;\\n        t['qadmahebrew'] = 0x05A8;\\n        t['qafarabic'] = 0x0642;\\n        t['qaffinalarabic'] = 0xFED6;\\n        t['qafinitialarabic'] = 0xFED7;\\n        t['qafmedialarabic'] = 0xFED8;\\n        t['qamats'] = 0x05B8;\\n        t['qamats10'] = 0x05B8;\\n        t['qamats1a'] = 0x05B8;\\n        t['qamats1c'] = 0x05B8;\\n        t['qamats27'] = 0x05B8;\\n        t['qamats29'] = 0x05B8;\\n        t['qamats33'] = 0x05B8;\\n        t['qamatsde'] = 0x05B8;\\n        t['qamatshebrew'] = 0x05B8;\\n        t['qamatsnarrowhebrew'] = 0x05B8;\\n        t['qamatsqatanhebrew'] = 0x05B8;\\n        t['qamatsqatannarrowhebrew'] = 0x05B8;\\n        t['qamatsqatanquarterhebrew'] = 0x05B8;\\n        t['qamatsqatanwidehebrew'] = 0x05B8;\\n        t['qamatsquarterhebrew'] = 0x05B8;\\n        t['qamatswidehebrew'] = 0x05B8;\\n        t['qarneyparahebrew'] = 0x059F;\\n        t['qbopomofo'] = 0x3111;\\n        t['qcircle'] = 0x24E0;\\n        t['qhook'] = 0x02A0;\\n        t['qmonospace'] = 0xFF51;\\n        t['qof'] = 0x05E7;\\n        t['qofdagesh'] = 0xFB47;\\n        t['qofdageshhebrew'] = 0xFB47;\\n        t['qofhebrew'] = 0x05E7;\\n        t['qparen'] = 0x24AC;\\n        t['quarternote'] = 0x2669;\\n        t['qubuts'] = 0x05BB;\\n        t['qubuts18'] = 0x05BB;\\n        t['qubuts25'] = 0x05BB;\\n        t['qubuts31'] = 0x05BB;\\n        t['qubutshebrew'] = 0x05BB;\\n        t['qubutsnarrowhebrew'] = 0x05BB;\\n        t['qubutsquarterhebrew'] = 0x05BB;\\n        t['qubutswidehebrew'] = 0x05BB;\\n        t['question'] = 0x003F;\\n        t['questionarabic'] = 0x061F;\\n        t['questionarmenian'] = 0x055E;\\n        t['questiondown'] = 0x00BF;\\n        t['questiondownsmall'] = 0xF7BF;\\n        t['questiongreek'] = 0x037E;\\n        t['questionmonospace'] = 0xFF1F;\\n        t['questionsmall'] = 0xF73F;\\n        t['quotedbl'] = 0x0022;\\n        t['quotedblbase'] = 0x201E;\\n        t['quotedblleft'] = 0x201C;\\n        t['quotedblmonospace'] = 0xFF02;\\n        t['quotedblprime'] = 0x301E;\\n        t['quotedblprimereversed'] = 0x301D;\\n        t['quotedblright'] = 0x201D;\\n        t['quoteleft'] = 0x2018;\\n        t['quoteleftreversed'] = 0x201B;\\n        t['quotereversed'] = 0x201B;\\n        t['quoteright'] = 0x2019;\\n        t['quoterightn'] = 0x0149;\\n        t['quotesinglbase'] = 0x201A;\\n        t['quotesingle'] = 0x0027;\\n        t['quotesinglemonospace'] = 0xFF07;\\n        t['r'] = 0x0072;\\n        t['raarmenian'] = 0x057C;\\n        t['rabengali'] = 0x09B0;\\n        t['racute'] = 0x0155;\\n        t['radeva'] = 0x0930;\\n        t['radical'] = 0x221A;\\n        t['radicalex'] = 0xF8E5;\\n        t['radoverssquare'] = 0x33AE;\\n        t['radoverssquaredsquare'] = 0x33AF;\\n        t['radsquare'] = 0x33AD;\\n        t['rafe'] = 0x05BF;\\n        t['rafehebrew'] = 0x05BF;\\n        t['ragujarati'] = 0x0AB0;\\n        t['ragurmukhi'] = 0x0A30;\\n        t['rahiragana'] = 0x3089;\\n        t['rakatakana'] = 0x30E9;\\n        t['rakatakanahalfwidth'] = 0xFF97;\\n        t['ralowerdiagonalbengali'] = 0x09F1;\\n        t['ramiddlediagonalbengali'] = 0x09F0;\\n        t['ramshorn'] = 0x0264;\\n        t['ratio'] = 0x2236;\\n        t['rbopomofo'] = 0x3116;\\n        t['rcaron'] = 0x0159;\\n        t['rcedilla'] = 0x0157;\\n        t['rcircle'] = 0x24E1;\\n        t['rcommaaccent'] = 0x0157;\\n        t['rdblgrave'] = 0x0211;\\n        t['rdotaccent'] = 0x1E59;\\n        t['rdotbelow'] = 0x1E5B;\\n        t['rdotbelowmacron'] = 0x1E5D;\\n        t['referencemark'] = 0x203B;\\n        t['reflexsubset'] = 0x2286;\\n        t['reflexsuperset'] = 0x2287;\\n        t['registered'] = 0x00AE;\\n        t['registersans'] = 0xF8E8;\\n        t['registerserif'] = 0xF6DA;\\n        t['reharabic'] = 0x0631;\\n        t['reharmenian'] = 0x0580;\\n        t['rehfinalarabic'] = 0xFEAE;\\n        t['rehiragana'] = 0x308C;\\n        t['rekatakana'] = 0x30EC;\\n        t['rekatakanahalfwidth'] = 0xFF9A;\\n        t['resh'] = 0x05E8;\\n        t['reshdageshhebrew'] = 0xFB48;\\n        t['reshhebrew'] = 0x05E8;\\n        t['reversedtilde'] = 0x223D;\\n        t['reviahebrew'] = 0x0597;\\n        t['reviamugrashhebrew'] = 0x0597;\\n        t['revlogicalnot'] = 0x2310;\\n        t['rfishhook'] = 0x027E;\\n        t['rfishhookreversed'] = 0x027F;\\n        t['rhabengali'] = 0x09DD;\\n        t['rhadeva'] = 0x095D;\\n        t['rho'] = 0x03C1;\\n        t['rhook'] = 0x027D;\\n        t['rhookturned'] = 0x027B;\\n        t['rhookturnedsuperior'] = 0x02B5;\\n        t['rhosymbolgreek'] = 0x03F1;\\n        t['rhotichookmod'] = 0x02DE;\\n        t['rieulacirclekorean'] = 0x3271;\\n        t['rieulaparenkorean'] = 0x3211;\\n        t['rieulcirclekorean'] = 0x3263;\\n        t['rieulhieuhkorean'] = 0x3140;\\n        t['rieulkiyeokkorean'] = 0x313A;\\n        t['rieulkiyeoksioskorean'] = 0x3169;\\n        t['rieulkorean'] = 0x3139;\\n        t['rieulmieumkorean'] = 0x313B;\\n        t['rieulpansioskorean'] = 0x316C;\\n        t['rieulparenkorean'] = 0x3203;\\n        t['rieulphieuphkorean'] = 0x313F;\\n        t['rieulpieupkorean'] = 0x313C;\\n        t['rieulpieupsioskorean'] = 0x316B;\\n        t['rieulsioskorean'] = 0x313D;\\n        t['rieulthieuthkorean'] = 0x313E;\\n        t['rieultikeutkorean'] = 0x316A;\\n        t['rieulyeorinhieuhkorean'] = 0x316D;\\n        t['rightangle'] = 0x221F;\\n        t['righttackbelowcmb'] = 0x0319;\\n        t['righttriangle'] = 0x22BF;\\n        t['rihiragana'] = 0x308A;\\n        t['rikatakana'] = 0x30EA;\\n        t['rikatakanahalfwidth'] = 0xFF98;\\n        t['ring'] = 0x02DA;\\n        t['ringbelowcmb'] = 0x0325;\\n        t['ringcmb'] = 0x030A;\\n        t['ringhalfleft'] = 0x02BF;\\n        t['ringhalfleftarmenian'] = 0x0559;\\n        t['ringhalfleftbelowcmb'] = 0x031C;\\n        t['ringhalfleftcentered'] = 0x02D3;\\n        t['ringhalfright'] = 0x02BE;\\n        t['ringhalfrightbelowcmb'] = 0x0339;\\n        t['ringhalfrightcentered'] = 0x02D2;\\n        t['rinvertedbreve'] = 0x0213;\\n        t['rittorusquare'] = 0x3351;\\n        t['rlinebelow'] = 0x1E5F;\\n        t['rlongleg'] = 0x027C;\\n        t['rlonglegturned'] = 0x027A;\\n        t['rmonospace'] = 0xFF52;\\n        t['rohiragana'] = 0x308D;\\n        t['rokatakana'] = 0x30ED;\\n        t['rokatakanahalfwidth'] = 0xFF9B;\\n        t['roruathai'] = 0x0E23;\\n        t['rparen'] = 0x24AD;\\n        t['rrabengali'] = 0x09DC;\\n        t['rradeva'] = 0x0931;\\n        t['rragurmukhi'] = 0x0A5C;\\n        t['rreharabic'] = 0x0691;\\n        t['rrehfinalarabic'] = 0xFB8D;\\n        t['rrvocalicbengali'] = 0x09E0;\\n        t['rrvocalicdeva'] = 0x0960;\\n        t['rrvocalicgujarati'] = 0x0AE0;\\n        t['rrvocalicvowelsignbengali'] = 0x09C4;\\n        t['rrvocalicvowelsigndeva'] = 0x0944;\\n        t['rrvocalicvowelsigngujarati'] = 0x0AC4;\\n        t['rsuperior'] = 0xF6F1;\\n        t['rtblock'] = 0x2590;\\n        t['rturned'] = 0x0279;\\n        t['rturnedsuperior'] = 0x02B4;\\n        t['ruhiragana'] = 0x308B;\\n        t['rukatakana'] = 0x30EB;\\n        t['rukatakanahalfwidth'] = 0xFF99;\\n        t['rupeemarkbengali'] = 0x09F2;\\n        t['rupeesignbengali'] = 0x09F3;\\n        t['rupiah'] = 0xF6DD;\\n        t['ruthai'] = 0x0E24;\\n        t['rvocalicbengali'] = 0x098B;\\n        t['rvocalicdeva'] = 0x090B;\\n        t['rvocalicgujarati'] = 0x0A8B;\\n        t['rvocalicvowelsignbengali'] = 0x09C3;\\n        t['rvocalicvowelsigndeva'] = 0x0943;\\n        t['rvocalicvowelsigngujarati'] = 0x0AC3;\\n        t['s'] = 0x0073;\\n        t['sabengali'] = 0x09B8;\\n        t['sacute'] = 0x015B;\\n        t['sacutedotaccent'] = 0x1E65;\\n        t['sadarabic'] = 0x0635;\\n        t['sadeva'] = 0x0938;\\n        t['sadfinalarabic'] = 0xFEBA;\\n        t['sadinitialarabic'] = 0xFEBB;\\n        t['sadmedialarabic'] = 0xFEBC;\\n        t['sagujarati'] = 0x0AB8;\\n        t['sagurmukhi'] = 0x0A38;\\n        t['sahiragana'] = 0x3055;\\n        t['sakatakana'] = 0x30B5;\\n        t['sakatakanahalfwidth'] = 0xFF7B;\\n        t['sallallahoualayhewasallamarabic'] = 0xFDFA;\\n        t['samekh'] = 0x05E1;\\n        t['samekhdagesh'] = 0xFB41;\\n        t['samekhdageshhebrew'] = 0xFB41;\\n        t['samekhhebrew'] = 0x05E1;\\n        t['saraaathai'] = 0x0E32;\\n        t['saraaethai'] = 0x0E41;\\n        t['saraaimaimalaithai'] = 0x0E44;\\n        t['saraaimaimuanthai'] = 0x0E43;\\n        t['saraamthai'] = 0x0E33;\\n        t['saraathai'] = 0x0E30;\\n        t['saraethai'] = 0x0E40;\\n        t['saraiileftthai'] = 0xF886;\\n        t['saraiithai'] = 0x0E35;\\n        t['saraileftthai'] = 0xF885;\\n        t['saraithai'] = 0x0E34;\\n        t['saraothai'] = 0x0E42;\\n        t['saraueeleftthai'] = 0xF888;\\n        t['saraueethai'] = 0x0E37;\\n        t['saraueleftthai'] = 0xF887;\\n        t['sarauethai'] = 0x0E36;\\n        t['sarauthai'] = 0x0E38;\\n        t['sarauuthai'] = 0x0E39;\\n        t['sbopomofo'] = 0x3119;\\n        t['scaron'] = 0x0161;\\n        t['scarondotaccent'] = 0x1E67;\\n        t['scedilla'] = 0x015F;\\n        t['schwa'] = 0x0259;\\n        t['schwacyrillic'] = 0x04D9;\\n        t['schwadieresiscyrillic'] = 0x04DB;\\n        t['schwahook'] = 0x025A;\\n        t['scircle'] = 0x24E2;\\n        t['scircumflex'] = 0x015D;\\n        t['scommaaccent'] = 0x0219;\\n        t['sdotaccent'] = 0x1E61;\\n        t['sdotbelow'] = 0x1E63;\\n        t['sdotbelowdotaccent'] = 0x1E69;\\n        t['seagullbelowcmb'] = 0x033C;\\n        t['second'] = 0x2033;\\n        t['secondtonechinese'] = 0x02CA;\\n        t['section'] = 0x00A7;\\n        t['seenarabic'] = 0x0633;\\n        t['seenfinalarabic'] = 0xFEB2;\\n        t['seeninitialarabic'] = 0xFEB3;\\n        t['seenmedialarabic'] = 0xFEB4;\\n        t['segol'] = 0x05B6;\\n        t['segol13'] = 0x05B6;\\n        t['segol1f'] = 0x05B6;\\n        t['segol2c'] = 0x05B6;\\n        t['segolhebrew'] = 0x05B6;\\n        t['segolnarrowhebrew'] = 0x05B6;\\n        t['segolquarterhebrew'] = 0x05B6;\\n        t['segoltahebrew'] = 0x0592;\\n        t['segolwidehebrew'] = 0x05B6;\\n        t['seharmenian'] = 0x057D;\\n        t['sehiragana'] = 0x305B;\\n        t['sekatakana'] = 0x30BB;\\n        t['sekatakanahalfwidth'] = 0xFF7E;\\n        t['semicolon'] = 0x003B;\\n        t['semicolonarabic'] = 0x061B;\\n        t['semicolonmonospace'] = 0xFF1B;\\n        t['semicolonsmall'] = 0xFE54;\\n        t['semivoicedmarkkana'] = 0x309C;\\n        t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\\n        t['sentisquare'] = 0x3322;\\n        t['sentosquare'] = 0x3323;\\n        t['seven'] = 0x0037;\\n        t['sevenarabic'] = 0x0667;\\n        t['sevenbengali'] = 0x09ED;\\n        t['sevencircle'] = 0x2466;\\n        t['sevencircleinversesansserif'] = 0x2790;\\n        t['sevendeva'] = 0x096D;\\n        t['seveneighths'] = 0x215E;\\n        t['sevengujarati'] = 0x0AED;\\n        t['sevengurmukhi'] = 0x0A6D;\\n        t['sevenhackarabic'] = 0x0667;\\n        t['sevenhangzhou'] = 0x3027;\\n        t['sevenideographicparen'] = 0x3226;\\n        t['seveninferior'] = 0x2087;\\n        t['sevenmonospace'] = 0xFF17;\\n        t['sevenoldstyle'] = 0xF737;\\n        t['sevenparen'] = 0x247A;\\n        t['sevenperiod'] = 0x248E;\\n        t['sevenpersian'] = 0x06F7;\\n        t['sevenroman'] = 0x2176;\\n        t['sevensuperior'] = 0x2077;\\n        t['seventeencircle'] = 0x2470;\\n        t['seventeenparen'] = 0x2484;\\n        t['seventeenperiod'] = 0x2498;\\n        t['seventhai'] = 0x0E57;\\n        t['sfthyphen'] = 0x00AD;\\n        t['shaarmenian'] = 0x0577;\\n        t['shabengali'] = 0x09B6;\\n        t['shacyrillic'] = 0x0448;\\n        t['shaddaarabic'] = 0x0651;\\n        t['shaddadammaarabic'] = 0xFC61;\\n        t['shaddadammatanarabic'] = 0xFC5E;\\n        t['shaddafathaarabic'] = 0xFC60;\\n        t['shaddakasraarabic'] = 0xFC62;\\n        t['shaddakasratanarabic'] = 0xFC5F;\\n        t['shade'] = 0x2592;\\n        t['shadedark'] = 0x2593;\\n        t['shadelight'] = 0x2591;\\n        t['shademedium'] = 0x2592;\\n        t['shadeva'] = 0x0936;\\n        t['shagujarati'] = 0x0AB6;\\n        t['shagurmukhi'] = 0x0A36;\\n        t['shalshelethebrew'] = 0x0593;\\n        t['shbopomofo'] = 0x3115;\\n        t['shchacyrillic'] = 0x0449;\\n        t['sheenarabic'] = 0x0634;\\n        t['sheenfinalarabic'] = 0xFEB6;\\n        t['sheeninitialarabic'] = 0xFEB7;\\n        t['sheenmedialarabic'] = 0xFEB8;\\n        t['sheicoptic'] = 0x03E3;\\n        t['sheqel'] = 0x20AA;\\n        t['sheqelhebrew'] = 0x20AA;\\n        t['sheva'] = 0x05B0;\\n        t['sheva115'] = 0x05B0;\\n        t['sheva15'] = 0x05B0;\\n        t['sheva22'] = 0x05B0;\\n        t['sheva2e'] = 0x05B0;\\n        t['shevahebrew'] = 0x05B0;\\n        t['shevanarrowhebrew'] = 0x05B0;\\n        t['shevaquarterhebrew'] = 0x05B0;\\n        t['shevawidehebrew'] = 0x05B0;\\n        t['shhacyrillic'] = 0x04BB;\\n        t['shimacoptic'] = 0x03ED;\\n        t['shin'] = 0x05E9;\\n        t['shindagesh'] = 0xFB49;\\n        t['shindageshhebrew'] = 0xFB49;\\n        t['shindageshshindot'] = 0xFB2C;\\n        t['shindageshshindothebrew'] = 0xFB2C;\\n        t['shindageshsindot'] = 0xFB2D;\\n        t['shindageshsindothebrew'] = 0xFB2D;\\n        t['shindothebrew'] = 0x05C1;\\n        t['shinhebrew'] = 0x05E9;\\n        t['shinshindot'] = 0xFB2A;\\n        t['shinshindothebrew'] = 0xFB2A;\\n        t['shinsindot'] = 0xFB2B;\\n        t['shinsindothebrew'] = 0xFB2B;\\n        t['shook'] = 0x0282;\\n        t['sigma'] = 0x03C3;\\n        t['sigma1'] = 0x03C2;\\n        t['sigmafinal'] = 0x03C2;\\n        t['sigmalunatesymbolgreek'] = 0x03F2;\\n        t['sihiragana'] = 0x3057;\\n        t['sikatakana'] = 0x30B7;\\n        t['sikatakanahalfwidth'] = 0xFF7C;\\n        t['siluqhebrew'] = 0x05BD;\\n        t['siluqlefthebrew'] = 0x05BD;\\n        t['similar'] = 0x223C;\\n        t['sindothebrew'] = 0x05C2;\\n        t['siosacirclekorean'] = 0x3274;\\n        t['siosaparenkorean'] = 0x3214;\\n        t['sioscieuckorean'] = 0x317E;\\n        t['sioscirclekorean'] = 0x3266;\\n        t['sioskiyeokkorean'] = 0x317A;\\n        t['sioskorean'] = 0x3145;\\n        t['siosnieunkorean'] = 0x317B;\\n        t['siosparenkorean'] = 0x3206;\\n        t['siospieupkorean'] = 0x317D;\\n        t['siostikeutkorean'] = 0x317C;\\n        t['six'] = 0x0036;\\n        t['sixarabic'] = 0x0666;\\n        t['sixbengali'] = 0x09EC;\\n        t['sixcircle'] = 0x2465;\\n        t['sixcircleinversesansserif'] = 0x278F;\\n        t['sixdeva'] = 0x096C;\\n        t['sixgujarati'] = 0x0AEC;\\n        t['sixgurmukhi'] = 0x0A6C;\\n        t['sixhackarabic'] = 0x0666;\\n        t['sixhangzhou'] = 0x3026;\\n        t['sixideographicparen'] = 0x3225;\\n        t['sixinferior'] = 0x2086;\\n        t['sixmonospace'] = 0xFF16;\\n        t['sixoldstyle'] = 0xF736;\\n        t['sixparen'] = 0x2479;\\n        t['sixperiod'] = 0x248D;\\n        t['sixpersian'] = 0x06F6;\\n        t['sixroman'] = 0x2175;\\n        t['sixsuperior'] = 0x2076;\\n        t['sixteencircle'] = 0x246F;\\n        t['sixteencurrencydenominatorbengali'] = 0x09F9;\\n        t['sixteenparen'] = 0x2483;\\n        t['sixteenperiod'] = 0x2497;\\n        t['sixthai'] = 0x0E56;\\n        t['slash'] = 0x002F;\\n        t['slashmonospace'] = 0xFF0F;\\n        t['slong'] = 0x017F;\\n        t['slongdotaccent'] = 0x1E9B;\\n        t['smileface'] = 0x263A;\\n        t['smonospace'] = 0xFF53;\\n        t['sofpasuqhebrew'] = 0x05C3;\\n        t['softhyphen'] = 0x00AD;\\n        t['softsigncyrillic'] = 0x044C;\\n        t['sohiragana'] = 0x305D;\\n        t['sokatakana'] = 0x30BD;\\n        t['sokatakanahalfwidth'] = 0xFF7F;\\n        t['soliduslongoverlaycmb'] = 0x0338;\\n        t['solidusshortoverlaycmb'] = 0x0337;\\n        t['sorusithai'] = 0x0E29;\\n        t['sosalathai'] = 0x0E28;\\n        t['sosothai'] = 0x0E0B;\\n        t['sosuathai'] = 0x0E2A;\\n        t['space'] = 0x0020;\\n        t['spacehackarabic'] = 0x0020;\\n        t['spade'] = 0x2660;\\n        t['spadesuitblack'] = 0x2660;\\n        t['spadesuitwhite'] = 0x2664;\\n        t['sparen'] = 0x24AE;\\n        t['squarebelowcmb'] = 0x033B;\\n        t['squarecc'] = 0x33C4;\\n        t['squarecm'] = 0x339D;\\n        t['squarediagonalcrosshatchfill'] = 0x25A9;\\n        t['squarehorizontalfill'] = 0x25A4;\\n        t['squarekg'] = 0x338F;\\n        t['squarekm'] = 0x339E;\\n        t['squarekmcapital'] = 0x33CE;\\n        t['squareln'] = 0x33D1;\\n        t['squarelog'] = 0x33D2;\\n        t['squaremg'] = 0x338E;\\n        t['squaremil'] = 0x33D5;\\n        t['squaremm'] = 0x339C;\\n        t['squaremsquared'] = 0x33A1;\\n        t['squareorthogonalcrosshatchfill'] = 0x25A6;\\n        t['squareupperlefttolowerrightfill'] = 0x25A7;\\n        t['squareupperrighttolowerleftfill'] = 0x25A8;\\n        t['squareverticalfill'] = 0x25A5;\\n        t['squarewhitewithsmallblack'] = 0x25A3;\\n        t['srsquare'] = 0x33DB;\\n        t['ssabengali'] = 0x09B7;\\n        t['ssadeva'] = 0x0937;\\n        t['ssagujarati'] = 0x0AB7;\\n        t['ssangcieuckorean'] = 0x3149;\\n        t['ssanghieuhkorean'] = 0x3185;\\n        t['ssangieungkorean'] = 0x3180;\\n        t['ssangkiyeokkorean'] = 0x3132;\\n        t['ssangnieunkorean'] = 0x3165;\\n        t['ssangpieupkorean'] = 0x3143;\\n        t['ssangsioskorean'] = 0x3146;\\n        t['ssangtikeutkorean'] = 0x3138;\\n        t['ssuperior'] = 0xF6F2;\\n        t['sterling'] = 0x00A3;\\n        t['sterlingmonospace'] = 0xFFE1;\\n        t['strokelongoverlaycmb'] = 0x0336;\\n        t['strokeshortoverlaycmb'] = 0x0335;\\n        t['subset'] = 0x2282;\\n        t['subsetnotequal'] = 0x228A;\\n        t['subsetorequal'] = 0x2286;\\n        t['succeeds'] = 0x227B;\\n        t['suchthat'] = 0x220B;\\n        t['suhiragana'] = 0x3059;\\n        t['sukatakana'] = 0x30B9;\\n        t['sukatakanahalfwidth'] = 0xFF7D;\\n        t['sukunarabic'] = 0x0652;\\n        t['summation'] = 0x2211;\\n        t['sun'] = 0x263C;\\n        t['superset'] = 0x2283;\\n        t['supersetnotequal'] = 0x228B;\\n        t['supersetorequal'] = 0x2287;\\n        t['svsquare'] = 0x33DC;\\n        t['syouwaerasquare'] = 0x337C;\\n        t['t'] = 0x0074;\\n        t['tabengali'] = 0x09A4;\\n        t['tackdown'] = 0x22A4;\\n        t['tackleft'] = 0x22A3;\\n        t['tadeva'] = 0x0924;\\n        t['tagujarati'] = 0x0AA4;\\n        t['tagurmukhi'] = 0x0A24;\\n        t['taharabic'] = 0x0637;\\n        t['tahfinalarabic'] = 0xFEC2;\\n        t['tahinitialarabic'] = 0xFEC3;\\n        t['tahiragana'] = 0x305F;\\n        t['tahmedialarabic'] = 0xFEC4;\\n        t['taisyouerasquare'] = 0x337D;\\n        t['takatakana'] = 0x30BF;\\n        t['takatakanahalfwidth'] = 0xFF80;\\n        t['tatweelarabic'] = 0x0640;\\n        t['tau'] = 0x03C4;\\n        t['tav'] = 0x05EA;\\n        t['tavdages'] = 0xFB4A;\\n        t['tavdagesh'] = 0xFB4A;\\n        t['tavdageshhebrew'] = 0xFB4A;\\n        t['tavhebrew'] = 0x05EA;\\n        t['tbar'] = 0x0167;\\n        t['tbopomofo'] = 0x310A;\\n        t['tcaron'] = 0x0165;\\n        t['tccurl'] = 0x02A8;\\n        t['tcedilla'] = 0x0163;\\n        t['tcheharabic'] = 0x0686;\\n        t['tchehfinalarabic'] = 0xFB7B;\\n        t['tchehinitialarabic'] = 0xFB7C;\\n        t['tchehmedialarabic'] = 0xFB7D;\\n        t['tcircle'] = 0x24E3;\\n        t['tcircumflexbelow'] = 0x1E71;\\n        t['tcommaaccent'] = 0x0163;\\n        t['tdieresis'] = 0x1E97;\\n        t['tdotaccent'] = 0x1E6B;\\n        t['tdotbelow'] = 0x1E6D;\\n        t['tecyrillic'] = 0x0442;\\n        t['tedescendercyrillic'] = 0x04AD;\\n        t['teharabic'] = 0x062A;\\n        t['tehfinalarabic'] = 0xFE96;\\n        t['tehhahinitialarabic'] = 0xFCA2;\\n        t['tehhahisolatedarabic'] = 0xFC0C;\\n        t['tehinitialarabic'] = 0xFE97;\\n        t['tehiragana'] = 0x3066;\\n        t['tehjeeminitialarabic'] = 0xFCA1;\\n        t['tehjeemisolatedarabic'] = 0xFC0B;\\n        t['tehmarbutaarabic'] = 0x0629;\\n        t['tehmarbutafinalarabic'] = 0xFE94;\\n        t['tehmedialarabic'] = 0xFE98;\\n        t['tehmeeminitialarabic'] = 0xFCA4;\\n        t['tehmeemisolatedarabic'] = 0xFC0E;\\n        t['tehnoonfinalarabic'] = 0xFC73;\\n        t['tekatakana'] = 0x30C6;\\n        t['tekatakanahalfwidth'] = 0xFF83;\\n        t['telephone'] = 0x2121;\\n        t['telephoneblack'] = 0x260E;\\n        t['telishagedolahebrew'] = 0x05A0;\\n        t['telishaqetanahebrew'] = 0x05A9;\\n        t['tencircle'] = 0x2469;\\n        t['tenideographicparen'] = 0x3229;\\n        t['tenparen'] = 0x247D;\\n        t['tenperiod'] = 0x2491;\\n        t['tenroman'] = 0x2179;\\n        t['tesh'] = 0x02A7;\\n        t['tet'] = 0x05D8;\\n        t['tetdagesh'] = 0xFB38;\\n        t['tetdageshhebrew'] = 0xFB38;\\n        t['tethebrew'] = 0x05D8;\\n        t['tetsecyrillic'] = 0x04B5;\\n        t['tevirhebrew'] = 0x059B;\\n        t['tevirlefthebrew'] = 0x059B;\\n        t['thabengali'] = 0x09A5;\\n        t['thadeva'] = 0x0925;\\n        t['thagujarati'] = 0x0AA5;\\n        t['thagurmukhi'] = 0x0A25;\\n        t['thalarabic'] = 0x0630;\\n        t['thalfinalarabic'] = 0xFEAC;\\n        t['thanthakhatlowleftthai'] = 0xF898;\\n        t['thanthakhatlowrightthai'] = 0xF897;\\n        t['thanthakhatthai'] = 0x0E4C;\\n        t['thanthakhatupperleftthai'] = 0xF896;\\n        t['theharabic'] = 0x062B;\\n        t['thehfinalarabic'] = 0xFE9A;\\n        t['thehinitialarabic'] = 0xFE9B;\\n        t['thehmedialarabic'] = 0xFE9C;\\n        t['thereexists'] = 0x2203;\\n        t['therefore'] = 0x2234;\\n        t['theta'] = 0x03B8;\\n        t['theta1'] = 0x03D1;\\n        t['thetasymbolgreek'] = 0x03D1;\\n        t['thieuthacirclekorean'] = 0x3279;\\n        t['thieuthaparenkorean'] = 0x3219;\\n        t['thieuthcirclekorean'] = 0x326B;\\n        t['thieuthkorean'] = 0x314C;\\n        t['thieuthparenkorean'] = 0x320B;\\n        t['thirteencircle'] = 0x246C;\\n        t['thirteenparen'] = 0x2480;\\n        t['thirteenperiod'] = 0x2494;\\n        t['thonangmonthothai'] = 0x0E11;\\n        t['thook'] = 0x01AD;\\n        t['thophuthaothai'] = 0x0E12;\\n        t['thorn'] = 0x00FE;\\n        t['thothahanthai'] = 0x0E17;\\n        t['thothanthai'] = 0x0E10;\\n        t['thothongthai'] = 0x0E18;\\n        t['thothungthai'] = 0x0E16;\\n        t['thousandcyrillic'] = 0x0482;\\n        t['thousandsseparatorarabic'] = 0x066C;\\n        t['thousandsseparatorpersian'] = 0x066C;\\n        t['three'] = 0x0033;\\n        t['threearabic'] = 0x0663;\\n        t['threebengali'] = 0x09E9;\\n        t['threecircle'] = 0x2462;\\n        t['threecircleinversesansserif'] = 0x278C;\\n        t['threedeva'] = 0x0969;\\n        t['threeeighths'] = 0x215C;\\n        t['threegujarati'] = 0x0AE9;\\n        t['threegurmukhi'] = 0x0A69;\\n        t['threehackarabic'] = 0x0663;\\n        t['threehangzhou'] = 0x3023;\\n        t['threeideographicparen'] = 0x3222;\\n        t['threeinferior'] = 0x2083;\\n        t['threemonospace'] = 0xFF13;\\n        t['threenumeratorbengali'] = 0x09F6;\\n        t['threeoldstyle'] = 0xF733;\\n        t['threeparen'] = 0x2476;\\n        t['threeperiod'] = 0x248A;\\n        t['threepersian'] = 0x06F3;\\n        t['threequarters'] = 0x00BE;\\n        t['threequartersemdash'] = 0xF6DE;\\n        t['threeroman'] = 0x2172;\\n        t['threesuperior'] = 0x00B3;\\n        t['threethai'] = 0x0E53;\\n        t['thzsquare'] = 0x3394;\\n        t['tihiragana'] = 0x3061;\\n        t['tikatakana'] = 0x30C1;\\n        t['tikatakanahalfwidth'] = 0xFF81;\\n        t['tikeutacirclekorean'] = 0x3270;\\n        t['tikeutaparenkorean'] = 0x3210;\\n        t['tikeutcirclekorean'] = 0x3262;\\n        t['tikeutkorean'] = 0x3137;\\n        t['tikeutparenkorean'] = 0x3202;\\n        t['tilde'] = 0x02DC;\\n        t['tildebelowcmb'] = 0x0330;\\n        t['tildecmb'] = 0x0303;\\n        t['tildecomb'] = 0x0303;\\n        t['tildedoublecmb'] = 0x0360;\\n        t['tildeoperator'] = 0x223C;\\n        t['tildeoverlaycmb'] = 0x0334;\\n        t['tildeverticalcmb'] = 0x033E;\\n        t['timescircle'] = 0x2297;\\n        t['tipehahebrew'] = 0x0596;\\n        t['tipehalefthebrew'] = 0x0596;\\n        t['tippigurmukhi'] = 0x0A70;\\n        t['titlocyrilliccmb'] = 0x0483;\\n        t['tiwnarmenian'] = 0x057F;\\n        t['tlinebelow'] = 0x1E6F;\\n        t['tmonospace'] = 0xFF54;\\n        t['toarmenian'] = 0x0569;\\n        t['tohiragana'] = 0x3068;\\n        t['tokatakana'] = 0x30C8;\\n        t['tokatakanahalfwidth'] = 0xFF84;\\n        t['tonebarextrahighmod'] = 0x02E5;\\n        t['tonebarextralowmod'] = 0x02E9;\\n        t['tonebarhighmod'] = 0x02E6;\\n        t['tonebarlowmod'] = 0x02E8;\\n        t['tonebarmidmod'] = 0x02E7;\\n        t['tonefive'] = 0x01BD;\\n        t['tonesix'] = 0x0185;\\n        t['tonetwo'] = 0x01A8;\\n        t['tonos'] = 0x0384;\\n        t['tonsquare'] = 0x3327;\\n        t['topatakthai'] = 0x0E0F;\\n        t['tortoiseshellbracketleft'] = 0x3014;\\n        t['tortoiseshellbracketleftsmall'] = 0xFE5D;\\n        t['tortoiseshellbracketleftvertical'] = 0xFE39;\\n        t['tortoiseshellbracketright'] = 0x3015;\\n        t['tortoiseshellbracketrightsmall'] = 0xFE5E;\\n        t['tortoiseshellbracketrightvertical'] = 0xFE3A;\\n        t['totaothai'] = 0x0E15;\\n        t['tpalatalhook'] = 0x01AB;\\n        t['tparen'] = 0x24AF;\\n        t['trademark'] = 0x2122;\\n        t['trademarksans'] = 0xF8EA;\\n        t['trademarkserif'] = 0xF6DB;\\n        t['tretroflexhook'] = 0x0288;\\n        t['triagdn'] = 0x25BC;\\n        t['triaglf'] = 0x25C4;\\n        t['triagrt'] = 0x25BA;\\n        t['triagup'] = 0x25B2;\\n        t['ts'] = 0x02A6;\\n        t['tsadi'] = 0x05E6;\\n        t['tsadidagesh'] = 0xFB46;\\n        t['tsadidageshhebrew'] = 0xFB46;\\n        t['tsadihebrew'] = 0x05E6;\\n        t['tsecyrillic'] = 0x0446;\\n        t['tsere'] = 0x05B5;\\n        t['tsere12'] = 0x05B5;\\n        t['tsere1e'] = 0x05B5;\\n        t['tsere2b'] = 0x05B5;\\n        t['tserehebrew'] = 0x05B5;\\n        t['tserenarrowhebrew'] = 0x05B5;\\n        t['tserequarterhebrew'] = 0x05B5;\\n        t['tserewidehebrew'] = 0x05B5;\\n        t['tshecyrillic'] = 0x045B;\\n        t['tsuperior'] = 0xF6F3;\\n        t['ttabengali'] = 0x099F;\\n        t['ttadeva'] = 0x091F;\\n        t['ttagujarati'] = 0x0A9F;\\n        t['ttagurmukhi'] = 0x0A1F;\\n        t['tteharabic'] = 0x0679;\\n        t['ttehfinalarabic'] = 0xFB67;\\n        t['ttehinitialarabic'] = 0xFB68;\\n        t['ttehmedialarabic'] = 0xFB69;\\n        t['tthabengali'] = 0x09A0;\\n        t['tthadeva'] = 0x0920;\\n        t['tthagujarati'] = 0x0AA0;\\n        t['tthagurmukhi'] = 0x0A20;\\n        t['tturned'] = 0x0287;\\n        t['tuhiragana'] = 0x3064;\\n        t['tukatakana'] = 0x30C4;\\n        t['tukatakanahalfwidth'] = 0xFF82;\\n        t['tusmallhiragana'] = 0x3063;\\n        t['tusmallkatakana'] = 0x30C3;\\n        t['tusmallkatakanahalfwidth'] = 0xFF6F;\\n        t['twelvecircle'] = 0x246B;\\n        t['twelveparen'] = 0x247F;\\n        t['twelveperiod'] = 0x2493;\\n        t['twelveroman'] = 0x217B;\\n        t['twentycircle'] = 0x2473;\\n        t['twentyhangzhou'] = 0x5344;\\n        t['twentyparen'] = 0x2487;\\n        t['twentyperiod'] = 0x249B;\\n        t['two'] = 0x0032;\\n        t['twoarabic'] = 0x0662;\\n        t['twobengali'] = 0x09E8;\\n        t['twocircle'] = 0x2461;\\n        t['twocircleinversesansserif'] = 0x278B;\\n        t['twodeva'] = 0x0968;\\n        t['twodotenleader'] = 0x2025;\\n        t['twodotleader'] = 0x2025;\\n        t['twodotleadervertical'] = 0xFE30;\\n        t['twogujarati'] = 0x0AE8;\\n        t['twogurmukhi'] = 0x0A68;\\n        t['twohackarabic'] = 0x0662;\\n        t['twohangzhou'] = 0x3022;\\n        t['twoideographicparen'] = 0x3221;\\n        t['twoinferior'] = 0x2082;\\n        t['twomonospace'] = 0xFF12;\\n        t['twonumeratorbengali'] = 0x09F5;\\n        t['twooldstyle'] = 0xF732;\\n        t['twoparen'] = 0x2475;\\n        t['twoperiod'] = 0x2489;\\n        t['twopersian'] = 0x06F2;\\n        t['tworoman'] = 0x2171;\\n        t['twostroke'] = 0x01BB;\\n        t['twosuperior'] = 0x00B2;\\n        t['twothai'] = 0x0E52;\\n        t['twothirds'] = 0x2154;\\n        t['u'] = 0x0075;\\n        t['uacute'] = 0x00FA;\\n        t['ubar'] = 0x0289;\\n        t['ubengali'] = 0x0989;\\n        t['ubopomofo'] = 0x3128;\\n        t['ubreve'] = 0x016D;\\n        t['ucaron'] = 0x01D4;\\n        t['ucircle'] = 0x24E4;\\n        t['ucircumflex'] = 0x00FB;\\n        t['ucircumflexbelow'] = 0x1E77;\\n        t['ucyrillic'] = 0x0443;\\n        t['udattadeva'] = 0x0951;\\n        t['udblacute'] = 0x0171;\\n        t['udblgrave'] = 0x0215;\\n        t['udeva'] = 0x0909;\\n        t['udieresis'] = 0x00FC;\\n        t['udieresisacute'] = 0x01D8;\\n        t['udieresisbelow'] = 0x1E73;\\n        t['udieresiscaron'] = 0x01DA;\\n        t['udieresiscyrillic'] = 0x04F1;\\n        t['udieresisgrave'] = 0x01DC;\\n        t['udieresismacron'] = 0x01D6;\\n        t['udotbelow'] = 0x1EE5;\\n        t['ugrave'] = 0x00F9;\\n        t['ugujarati'] = 0x0A89;\\n        t['ugurmukhi'] = 0x0A09;\\n        t['uhiragana'] = 0x3046;\\n        t['uhookabove'] = 0x1EE7;\\n        t['uhorn'] = 0x01B0;\\n        t['uhornacute'] = 0x1EE9;\\n        t['uhorndotbelow'] = 0x1EF1;\\n        t['uhorngrave'] = 0x1EEB;\\n        t['uhornhookabove'] = 0x1EED;\\n        t['uhorntilde'] = 0x1EEF;\\n        t['uhungarumlaut'] = 0x0171;\\n        t['uhungarumlautcyrillic'] = 0x04F3;\\n        t['uinvertedbreve'] = 0x0217;\\n        t['ukatakana'] = 0x30A6;\\n        t['ukatakanahalfwidth'] = 0xFF73;\\n        t['ukcyrillic'] = 0x0479;\\n        t['ukorean'] = 0x315C;\\n        t['umacron'] = 0x016B;\\n        t['umacroncyrillic'] = 0x04EF;\\n        t['umacrondieresis'] = 0x1E7B;\\n        t['umatragurmukhi'] = 0x0A41;\\n        t['umonospace'] = 0xFF55;\\n        t['underscore'] = 0x005F;\\n        t['underscoredbl'] = 0x2017;\\n        t['underscoremonospace'] = 0xFF3F;\\n        t['underscorevertical'] = 0xFE33;\\n        t['underscorewavy'] = 0xFE4F;\\n        t['union'] = 0x222A;\\n        t['universal'] = 0x2200;\\n        t['uogonek'] = 0x0173;\\n        t['uparen'] = 0x24B0;\\n        t['upblock'] = 0x2580;\\n        t['upperdothebrew'] = 0x05C4;\\n        t['upsilon'] = 0x03C5;\\n        t['upsilondieresis'] = 0x03CB;\\n        t['upsilondieresistonos'] = 0x03B0;\\n        t['upsilonlatin'] = 0x028A;\\n        t['upsilontonos'] = 0x03CD;\\n        t['uptackbelowcmb'] = 0x031D;\\n        t['uptackmod'] = 0x02D4;\\n        t['uragurmukhi'] = 0x0A73;\\n        t['uring'] = 0x016F;\\n        t['ushortcyrillic'] = 0x045E;\\n        t['usmallhiragana'] = 0x3045;\\n        t['usmallkatakana'] = 0x30A5;\\n        t['usmallkatakanahalfwidth'] = 0xFF69;\\n        t['ustraightcyrillic'] = 0x04AF;\\n        t['ustraightstrokecyrillic'] = 0x04B1;\\n        t['utilde'] = 0x0169;\\n        t['utildeacute'] = 0x1E79;\\n        t['utildebelow'] = 0x1E75;\\n        t['uubengali'] = 0x098A;\\n        t['uudeva'] = 0x090A;\\n        t['uugujarati'] = 0x0A8A;\\n        t['uugurmukhi'] = 0x0A0A;\\n        t['uumatragurmukhi'] = 0x0A42;\\n        t['uuvowelsignbengali'] = 0x09C2;\\n        t['uuvowelsigndeva'] = 0x0942;\\n        t['uuvowelsigngujarati'] = 0x0AC2;\\n        t['uvowelsignbengali'] = 0x09C1;\\n        t['uvowelsigndeva'] = 0x0941;\\n        t['uvowelsigngujarati'] = 0x0AC1;\\n        t['v'] = 0x0076;\\n        t['vadeva'] = 0x0935;\\n        t['vagujarati'] = 0x0AB5;\\n        t['vagurmukhi'] = 0x0A35;\\n        t['vakatakana'] = 0x30F7;\\n        t['vav'] = 0x05D5;\\n        t['vavdagesh'] = 0xFB35;\\n        t['vavdagesh65'] = 0xFB35;\\n        t['vavdageshhebrew'] = 0xFB35;\\n        t['vavhebrew'] = 0x05D5;\\n        t['vavholam'] = 0xFB4B;\\n        t['vavholamhebrew'] = 0xFB4B;\\n        t['vavvavhebrew'] = 0x05F0;\\n        t['vavyodhebrew'] = 0x05F1;\\n        t['vcircle'] = 0x24E5;\\n        t['vdotbelow'] = 0x1E7F;\\n        t['vecyrillic'] = 0x0432;\\n        t['veharabic'] = 0x06A4;\\n        t['vehfinalarabic'] = 0xFB6B;\\n        t['vehinitialarabic'] = 0xFB6C;\\n        t['vehmedialarabic'] = 0xFB6D;\\n        t['vekatakana'] = 0x30F9;\\n        t['venus'] = 0x2640;\\n        t['verticalbar'] = 0x007C;\\n        t['verticallineabovecmb'] = 0x030D;\\n        t['verticallinebelowcmb'] = 0x0329;\\n        t['verticallinelowmod'] = 0x02CC;\\n        t['verticallinemod'] = 0x02C8;\\n        t['vewarmenian'] = 0x057E;\\n        t['vhook'] = 0x028B;\\n        t['vikatakana'] = 0x30F8;\\n        t['viramabengali'] = 0x09CD;\\n        t['viramadeva'] = 0x094D;\\n        t['viramagujarati'] = 0x0ACD;\\n        t['visargabengali'] = 0x0983;\\n        t['visargadeva'] = 0x0903;\\n        t['visargagujarati'] = 0x0A83;\\n        t['vmonospace'] = 0xFF56;\\n        t['voarmenian'] = 0x0578;\\n        t['voicediterationhiragana'] = 0x309E;\\n        t['voicediterationkatakana'] = 0x30FE;\\n        t['voicedmarkkana'] = 0x309B;\\n        t['voicedmarkkanahalfwidth'] = 0xFF9E;\\n        t['vokatakana'] = 0x30FA;\\n        t['vparen'] = 0x24B1;\\n        t['vtilde'] = 0x1E7D;\\n        t['vturned'] = 0x028C;\\n        t['vuhiragana'] = 0x3094;\\n        t['vukatakana'] = 0x30F4;\\n        t['w'] = 0x0077;\\n        t['wacute'] = 0x1E83;\\n        t['waekorean'] = 0x3159;\\n        t['wahiragana'] = 0x308F;\\n        t['wakatakana'] = 0x30EF;\\n        t['wakatakanahalfwidth'] = 0xFF9C;\\n        t['wakorean'] = 0x3158;\\n        t['wasmallhiragana'] = 0x308E;\\n        t['wasmallkatakana'] = 0x30EE;\\n        t['wattosquare'] = 0x3357;\\n        t['wavedash'] = 0x301C;\\n        t['wavyunderscorevertical'] = 0xFE34;\\n        t['wawarabic'] = 0x0648;\\n        t['wawfinalarabic'] = 0xFEEE;\\n        t['wawhamzaabovearabic'] = 0x0624;\\n        t['wawhamzaabovefinalarabic'] = 0xFE86;\\n        t['wbsquare'] = 0x33DD;\\n        t['wcircle'] = 0x24E6;\\n        t['wcircumflex'] = 0x0175;\\n        t['wdieresis'] = 0x1E85;\\n        t['wdotaccent'] = 0x1E87;\\n        t['wdotbelow'] = 0x1E89;\\n        t['wehiragana'] = 0x3091;\\n        t['weierstrass'] = 0x2118;\\n        t['wekatakana'] = 0x30F1;\\n        t['wekorean'] = 0x315E;\\n        t['weokorean'] = 0x315D;\\n        t['wgrave'] = 0x1E81;\\n        t['whitebullet'] = 0x25E6;\\n        t['whitecircle'] = 0x25CB;\\n        t['whitecircleinverse'] = 0x25D9;\\n        t['whitecornerbracketleft'] = 0x300E;\\n        t['whitecornerbracketleftvertical'] = 0xFE43;\\n        t['whitecornerbracketright'] = 0x300F;\\n        t['whitecornerbracketrightvertical'] = 0xFE44;\\n        t['whitediamond'] = 0x25C7;\\n        t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\\n        t['whitedownpointingsmalltriangle'] = 0x25BF;\\n        t['whitedownpointingtriangle'] = 0x25BD;\\n        t['whiteleftpointingsmalltriangle'] = 0x25C3;\\n        t['whiteleftpointingtriangle'] = 0x25C1;\\n        t['whitelenticularbracketleft'] = 0x3016;\\n        t['whitelenticularbracketright'] = 0x3017;\\n        t['whiterightpointingsmalltriangle'] = 0x25B9;\\n        t['whiterightpointingtriangle'] = 0x25B7;\\n        t['whitesmallsquare'] = 0x25AB;\\n        t['whitesmilingface'] = 0x263A;\\n        t['whitesquare'] = 0x25A1;\\n        t['whitestar'] = 0x2606;\\n        t['whitetelephone'] = 0x260F;\\n        t['whitetortoiseshellbracketleft'] = 0x3018;\\n        t['whitetortoiseshellbracketright'] = 0x3019;\\n        t['whiteuppointingsmalltriangle'] = 0x25B5;\\n        t['whiteuppointingtriangle'] = 0x25B3;\\n        t['wihiragana'] = 0x3090;\\n        t['wikatakana'] = 0x30F0;\\n        t['wikorean'] = 0x315F;\\n        t['wmonospace'] = 0xFF57;\\n        t['wohiragana'] = 0x3092;\\n        t['wokatakana'] = 0x30F2;\\n        t['wokatakanahalfwidth'] = 0xFF66;\\n        t['won'] = 0x20A9;\\n        t['wonmonospace'] = 0xFFE6;\\n        t['wowaenthai'] = 0x0E27;\\n        t['wparen'] = 0x24B2;\\n        t['wring'] = 0x1E98;\\n        t['wsuperior'] = 0x02B7;\\n        t['wturned'] = 0x028D;\\n        t['wynn'] = 0x01BF;\\n        t['x'] = 0x0078;\\n        t['xabovecmb'] = 0x033D;\\n        t['xbopomofo'] = 0x3112;\\n        t['xcircle'] = 0x24E7;\\n        t['xdieresis'] = 0x1E8D;\\n        t['xdotaccent'] = 0x1E8B;\\n        t['xeharmenian'] = 0x056D;\\n        t['xi'] = 0x03BE;\\n        t['xmonospace'] = 0xFF58;\\n        t['xparen'] = 0x24B3;\\n        t['xsuperior'] = 0x02E3;\\n        t['y'] = 0x0079;\\n        t['yaadosquare'] = 0x334E;\\n        t['yabengali'] = 0x09AF;\\n        t['yacute'] = 0x00FD;\\n        t['yadeva'] = 0x092F;\\n        t['yaekorean'] = 0x3152;\\n        t['yagujarati'] = 0x0AAF;\\n        t['yagurmukhi'] = 0x0A2F;\\n        t['yahiragana'] = 0x3084;\\n        t['yakatakana'] = 0x30E4;\\n        t['yakatakanahalfwidth'] = 0xFF94;\\n        t['yakorean'] = 0x3151;\\n        t['yamakkanthai'] = 0x0E4E;\\n        t['yasmallhiragana'] = 0x3083;\\n        t['yasmallkatakana'] = 0x30E3;\\n        t['yasmallkatakanahalfwidth'] = 0xFF6C;\\n        t['yatcyrillic'] = 0x0463;\\n        t['ycircle'] = 0x24E8;\\n        t['ycircumflex'] = 0x0177;\\n        t['ydieresis'] = 0x00FF;\\n        t['ydotaccent'] = 0x1E8F;\\n        t['ydotbelow'] = 0x1EF5;\\n        t['yeharabic'] = 0x064A;\\n        t['yehbarreearabic'] = 0x06D2;\\n        t['yehbarreefinalarabic'] = 0xFBAF;\\n        t['yehfinalarabic'] = 0xFEF2;\\n        t['yehhamzaabovearabic'] = 0x0626;\\n        t['yehhamzaabovefinalarabic'] = 0xFE8A;\\n        t['yehhamzaaboveinitialarabic'] = 0xFE8B;\\n        t['yehhamzaabovemedialarabic'] = 0xFE8C;\\n        t['yehinitialarabic'] = 0xFEF3;\\n        t['yehmedialarabic'] = 0xFEF4;\\n        t['yehmeeminitialarabic'] = 0xFCDD;\\n        t['yehmeemisolatedarabic'] = 0xFC58;\\n        t['yehnoonfinalarabic'] = 0xFC94;\\n        t['yehthreedotsbelowarabic'] = 0x06D1;\\n        t['yekorean'] = 0x3156;\\n        t['yen'] = 0x00A5;\\n        t['yenmonospace'] = 0xFFE5;\\n        t['yeokorean'] = 0x3155;\\n        t['yeorinhieuhkorean'] = 0x3186;\\n        t['yerahbenyomohebrew'] = 0x05AA;\\n        t['yerahbenyomolefthebrew'] = 0x05AA;\\n        t['yericyrillic'] = 0x044B;\\n        t['yerudieresiscyrillic'] = 0x04F9;\\n        t['yesieungkorean'] = 0x3181;\\n        t['yesieungpansioskorean'] = 0x3183;\\n        t['yesieungsioskorean'] = 0x3182;\\n        t['yetivhebrew'] = 0x059A;\\n        t['ygrave'] = 0x1EF3;\\n        t['yhook'] = 0x01B4;\\n        t['yhookabove'] = 0x1EF7;\\n        t['yiarmenian'] = 0x0575;\\n        t['yicyrillic'] = 0x0457;\\n        t['yikorean'] = 0x3162;\\n        t['yinyang'] = 0x262F;\\n        t['yiwnarmenian'] = 0x0582;\\n        t['ymonospace'] = 0xFF59;\\n        t['yod'] = 0x05D9;\\n        t['yoddagesh'] = 0xFB39;\\n        t['yoddageshhebrew'] = 0xFB39;\\n        t['yodhebrew'] = 0x05D9;\\n        t['yodyodhebrew'] = 0x05F2;\\n        t['yodyodpatahhebrew'] = 0xFB1F;\\n        t['yohiragana'] = 0x3088;\\n        t['yoikorean'] = 0x3189;\\n        t['yokatakana'] = 0x30E8;\\n        t['yokatakanahalfwidth'] = 0xFF96;\\n        t['yokorean'] = 0x315B;\\n        t['yosmallhiragana'] = 0x3087;\\n        t['yosmallkatakana'] = 0x30E7;\\n        t['yosmallkatakanahalfwidth'] = 0xFF6E;\\n        t['yotgreek'] = 0x03F3;\\n        t['yoyaekorean'] = 0x3188;\\n        t['yoyakorean'] = 0x3187;\\n        t['yoyakthai'] = 0x0E22;\\n        t['yoyingthai'] = 0x0E0D;\\n        t['yparen'] = 0x24B4;\\n        t['ypogegrammeni'] = 0x037A;\\n        t['ypogegrammenigreekcmb'] = 0x0345;\\n        t['yr'] = 0x01A6;\\n        t['yring'] = 0x1E99;\\n        t['ysuperior'] = 0x02B8;\\n        t['ytilde'] = 0x1EF9;\\n        t['yturned'] = 0x028E;\\n        t['yuhiragana'] = 0x3086;\\n        t['yuikorean'] = 0x318C;\\n        t['yukatakana'] = 0x30E6;\\n        t['yukatakanahalfwidth'] = 0xFF95;\\n        t['yukorean'] = 0x3160;\\n        t['yusbigcyrillic'] = 0x046B;\\n        t['yusbigiotifiedcyrillic'] = 0x046D;\\n        t['yuslittlecyrillic'] = 0x0467;\\n        t['yuslittleiotifiedcyrillic'] = 0x0469;\\n        t['yusmallhiragana'] = 0x3085;\\n        t['yusmallkatakana'] = 0x30E5;\\n        t['yusmallkatakanahalfwidth'] = 0xFF6D;\\n        t['yuyekorean'] = 0x318B;\\n        t['yuyeokorean'] = 0x318A;\\n        t['yyabengali'] = 0x09DF;\\n        t['yyadeva'] = 0x095F;\\n        t['z'] = 0x007A;\\n        t['zaarmenian'] = 0x0566;\\n        t['zacute'] = 0x017A;\\n        t['zadeva'] = 0x095B;\\n        t['zagurmukhi'] = 0x0A5B;\\n        t['zaharabic'] = 0x0638;\\n        t['zahfinalarabic'] = 0xFEC6;\\n        t['zahinitialarabic'] = 0xFEC7;\\n        t['zahiragana'] = 0x3056;\\n        t['zahmedialarabic'] = 0xFEC8;\\n        t['zainarabic'] = 0x0632;\\n        t['zainfinalarabic'] = 0xFEB0;\\n        t['zakatakana'] = 0x30B6;\\n        t['zaqefgadolhebrew'] = 0x0595;\\n        t['zaqefqatanhebrew'] = 0x0594;\\n        t['zarqahebrew'] = 0x0598;\\n        t['zayin'] = 0x05D6;\\n        t['zayindagesh'] = 0xFB36;\\n        t['zayindageshhebrew'] = 0xFB36;\\n        t['zayinhebrew'] = 0x05D6;\\n        t['zbopomofo'] = 0x3117;\\n        t['zcaron'] = 0x017E;\\n        t['zcircle'] = 0x24E9;\\n        t['zcircumflex'] = 0x1E91;\\n        t['zcurl'] = 0x0291;\\n        t['zdot'] = 0x017C;\\n        t['zdotaccent'] = 0x017C;\\n        t['zdotbelow'] = 0x1E93;\\n        t['zecyrillic'] = 0x0437;\\n        t['zedescendercyrillic'] = 0x0499;\\n        t['zedieresiscyrillic'] = 0x04DF;\\n        t['zehiragana'] = 0x305C;\\n        t['zekatakana'] = 0x30BC;\\n        t['zero'] = 0x0030;\\n        t['zeroarabic'] = 0x0660;\\n        t['zerobengali'] = 0x09E6;\\n        t['zerodeva'] = 0x0966;\\n        t['zerogujarati'] = 0x0AE6;\\n        t['zerogurmukhi'] = 0x0A66;\\n        t['zerohackarabic'] = 0x0660;\\n        t['zeroinferior'] = 0x2080;\\n        t['zeromonospace'] = 0xFF10;\\n        t['zerooldstyle'] = 0xF730;\\n        t['zeropersian'] = 0x06F0;\\n        t['zerosuperior'] = 0x2070;\\n        t['zerothai'] = 0x0E50;\\n        t['zerowidthjoiner'] = 0xFEFF;\\n        t['zerowidthnonjoiner'] = 0x200C;\\n        t['zerowidthspace'] = 0x200B;\\n        t['zeta'] = 0x03B6;\\n        t['zhbopomofo'] = 0x3113;\\n        t['zhearmenian'] = 0x056A;\\n        t['zhebrevecyrillic'] = 0x04C2;\\n        t['zhecyrillic'] = 0x0436;\\n        t['zhedescendercyrillic'] = 0x0497;\\n        t['zhedieresiscyrillic'] = 0x04DD;\\n        t['zihiragana'] = 0x3058;\\n        t['zikatakana'] = 0x30B8;\\n        t['zinorhebrew'] = 0x05AE;\\n        t['zlinebelow'] = 0x1E95;\\n        t['zmonospace'] = 0xFF5A;\\n        t['zohiragana'] = 0x305E;\\n        t['zokatakana'] = 0x30BE;\\n        t['zparen'] = 0x24B5;\\n        t['zretroflexhook'] = 0x0290;\\n        t['zstroke'] = 0x01B6;\\n        t['zuhiragana'] = 0x305A;\\n        t['zukatakana'] = 0x30BA;\\n        t['.notdef'] = 0x0000;\\n        t['angbracketleftbig'] = 0x2329;\\n        t['angbracketleftBig'] = 0x2329;\\n        t['angbracketleftbigg'] = 0x2329;\\n        t['angbracketleftBigg'] = 0x2329;\\n        t['angbracketrightBig'] = 0x232A;\\n        t['angbracketrightbig'] = 0x232A;\\n        t['angbracketrightBigg'] = 0x232A;\\n        t['angbracketrightbigg'] = 0x232A;\\n        t['arrowhookleft'] = 0x21AA;\\n        t['arrowhookright'] = 0x21A9;\\n        t['arrowlefttophalf'] = 0x21BC;\\n        t['arrowleftbothalf'] = 0x21BD;\\n        t['arrownortheast'] = 0x2197;\\n        t['arrownorthwest'] = 0x2196;\\n        t['arrowrighttophalf'] = 0x21C0;\\n        t['arrowrightbothalf'] = 0x21C1;\\n        t['arrowsoutheast'] = 0x2198;\\n        t['arrowsouthwest'] = 0x2199;\\n        t['backslashbig'] = 0x2216;\\n        t['backslashBig'] = 0x2216;\\n        t['backslashBigg'] = 0x2216;\\n        t['backslashbigg'] = 0x2216;\\n        t['bardbl'] = 0x2016;\\n        t['bracehtipdownleft'] = 0xFE37;\\n        t['bracehtipdownright'] = 0xFE37;\\n        t['bracehtipupleft'] = 0xFE38;\\n        t['bracehtipupright'] = 0xFE38;\\n        t['braceleftBig'] = 0x007B;\\n        t['braceleftbig'] = 0x007B;\\n        t['braceleftbigg'] = 0x007B;\\n        t['braceleftBigg'] = 0x007B;\\n        t['bracerightBig'] = 0x007D;\\n        t['bracerightbig'] = 0x007D;\\n        t['bracerightbigg'] = 0x007D;\\n        t['bracerightBigg'] = 0x007D;\\n        t['bracketleftbig'] = 0x005B;\\n        t['bracketleftBig'] = 0x005B;\\n        t['bracketleftbigg'] = 0x005B;\\n        t['bracketleftBigg'] = 0x005B;\\n        t['bracketrightBig'] = 0x005D;\\n        t['bracketrightbig'] = 0x005D;\\n        t['bracketrightbigg'] = 0x005D;\\n        t['bracketrightBigg'] = 0x005D;\\n        t['ceilingleftbig'] = 0x2308;\\n        t['ceilingleftBig'] = 0x2308;\\n        t['ceilingleftBigg'] = 0x2308;\\n        t['ceilingleftbigg'] = 0x2308;\\n        t['ceilingrightbig'] = 0x2309;\\n        t['ceilingrightBig'] = 0x2309;\\n        t['ceilingrightbigg'] = 0x2309;\\n        t['ceilingrightBigg'] = 0x2309;\\n        t['circledotdisplay'] = 0x2299;\\n        t['circledottext'] = 0x2299;\\n        t['circlemultiplydisplay'] = 0x2297;\\n        t['circlemultiplytext'] = 0x2297;\\n        t['circleplusdisplay'] = 0x2295;\\n        t['circleplustext'] = 0x2295;\\n        t['contintegraldisplay'] = 0x222E;\\n        t['contintegraltext'] = 0x222E;\\n        t['coproductdisplay'] = 0x2210;\\n        t['coproducttext'] = 0x2210;\\n        t['floorleftBig'] = 0x230A;\\n        t['floorleftbig'] = 0x230A;\\n        t['floorleftbigg'] = 0x230A;\\n        t['floorleftBigg'] = 0x230A;\\n        t['floorrightbig'] = 0x230B;\\n        t['floorrightBig'] = 0x230B;\\n        t['floorrightBigg'] = 0x230B;\\n        t['floorrightbigg'] = 0x230B;\\n        t['hatwide'] = 0x0302;\\n        t['hatwider'] = 0x0302;\\n        t['hatwidest'] = 0x0302;\\n        t['intercal'] = 0x1D40;\\n        t['integraldisplay'] = 0x222B;\\n        t['integraltext'] = 0x222B;\\n        t['intersectiondisplay'] = 0x22C2;\\n        t['intersectiontext'] = 0x22C2;\\n        t['logicalanddisplay'] = 0x2227;\\n        t['logicalandtext'] = 0x2227;\\n        t['logicalordisplay'] = 0x2228;\\n        t['logicalortext'] = 0x2228;\\n        t['parenleftBig'] = 0x0028;\\n        t['parenleftbig'] = 0x0028;\\n        t['parenleftBigg'] = 0x0028;\\n        t['parenleftbigg'] = 0x0028;\\n        t['parenrightBig'] = 0x0029;\\n        t['parenrightbig'] = 0x0029;\\n        t['parenrightBigg'] = 0x0029;\\n        t['parenrightbigg'] = 0x0029;\\n        t['prime'] = 0x2032;\\n        t['productdisplay'] = 0x220F;\\n        t['producttext'] = 0x220F;\\n        t['radicalbig'] = 0x221A;\\n        t['radicalBig'] = 0x221A;\\n        t['radicalBigg'] = 0x221A;\\n        t['radicalbigg'] = 0x221A;\\n        t['radicalbt'] = 0x221A;\\n        t['radicaltp'] = 0x221A;\\n        t['radicalvertex'] = 0x221A;\\n        t['slashbig'] = 0x002F;\\n        t['slashBig'] = 0x002F;\\n        t['slashBigg'] = 0x002F;\\n        t['slashbigg'] = 0x002F;\\n        t['summationdisplay'] = 0x2211;\\n        t['summationtext'] = 0x2211;\\n        t['tildewide'] = 0x02DC;\\n        t['tildewider'] = 0x02DC;\\n        t['tildewidest'] = 0x02DC;\\n        t['uniondisplay'] = 0x22C3;\\n        t['unionmultidisplay'] = 0x228E;\\n        t['unionmultitext'] = 0x228E;\\n        t['unionsqdisplay'] = 0x2294;\\n        t['unionsqtext'] = 0x2294;\\n        t['uniontext'] = 0x22C3;\\n        t['vextenddouble'] = 0x2225;\\n        t['vextendsingle'] = 0x2223;\\n      });\\n      var getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\\n        t['space'] = 0x0020;\\n        t['a1'] = 0x2701;\\n        t['a2'] = 0x2702;\\n        t['a202'] = 0x2703;\\n        t['a3'] = 0x2704;\\n        t['a4'] = 0x260E;\\n        t['a5'] = 0x2706;\\n        t['a119'] = 0x2707;\\n        t['a118'] = 0x2708;\\n        t['a117'] = 0x2709;\\n        t['a11'] = 0x261B;\\n        t['a12'] = 0x261E;\\n        t['a13'] = 0x270C;\\n        t['a14'] = 0x270D;\\n        t['a15'] = 0x270E;\\n        t['a16'] = 0x270F;\\n        t['a105'] = 0x2710;\\n        t['a17'] = 0x2711;\\n        t['a18'] = 0x2712;\\n        t['a19'] = 0x2713;\\n        t['a20'] = 0x2714;\\n        t['a21'] = 0x2715;\\n        t['a22'] = 0x2716;\\n        t['a23'] = 0x2717;\\n        t['a24'] = 0x2718;\\n        t['a25'] = 0x2719;\\n        t['a26'] = 0x271A;\\n        t['a27'] = 0x271B;\\n        t['a28'] = 0x271C;\\n        t['a6'] = 0x271D;\\n        t['a7'] = 0x271E;\\n        t['a8'] = 0x271F;\\n        t['a9'] = 0x2720;\\n        t['a10'] = 0x2721;\\n        t['a29'] = 0x2722;\\n        t['a30'] = 0x2723;\\n        t['a31'] = 0x2724;\\n        t['a32'] = 0x2725;\\n        t['a33'] = 0x2726;\\n        t['a34'] = 0x2727;\\n        t['a35'] = 0x2605;\\n        t['a36'] = 0x2729;\\n        t['a37'] = 0x272A;\\n        t['a38'] = 0x272B;\\n        t['a39'] = 0x272C;\\n        t['a40'] = 0x272D;\\n        t['a41'] = 0x272E;\\n        t['a42'] = 0x272F;\\n        t['a43'] = 0x2730;\\n        t['a44'] = 0x2731;\\n        t['a45'] = 0x2732;\\n        t['a46'] = 0x2733;\\n        t['a47'] = 0x2734;\\n        t['a48'] = 0x2735;\\n        t['a49'] = 0x2736;\\n        t['a50'] = 0x2737;\\n        t['a51'] = 0x2738;\\n        t['a52'] = 0x2739;\\n        t['a53'] = 0x273A;\\n        t['a54'] = 0x273B;\\n        t['a55'] = 0x273C;\\n        t['a56'] = 0x273D;\\n        t['a57'] = 0x273E;\\n        t['a58'] = 0x273F;\\n        t['a59'] = 0x2740;\\n        t['a60'] = 0x2741;\\n        t['a61'] = 0x2742;\\n        t['a62'] = 0x2743;\\n        t['a63'] = 0x2744;\\n        t['a64'] = 0x2745;\\n        t['a65'] = 0x2746;\\n        t['a66'] = 0x2747;\\n        t['a67'] = 0x2748;\\n        t['a68'] = 0x2749;\\n        t['a69'] = 0x274A;\\n        t['a70'] = 0x274B;\\n        t['a71'] = 0x25CF;\\n        t['a72'] = 0x274D;\\n        t['a73'] = 0x25A0;\\n        t['a74'] = 0x274F;\\n        t['a203'] = 0x2750;\\n        t['a75'] = 0x2751;\\n        t['a204'] = 0x2752;\\n        t['a76'] = 0x25B2;\\n        t['a77'] = 0x25BC;\\n        t['a78'] = 0x25C6;\\n        t['a79'] = 0x2756;\\n        t['a81'] = 0x25D7;\\n        t['a82'] = 0x2758;\\n        t['a83'] = 0x2759;\\n        t['a84'] = 0x275A;\\n        t['a97'] = 0x275B;\\n        t['a98'] = 0x275C;\\n        t['a99'] = 0x275D;\\n        t['a100'] = 0x275E;\\n        t['a101'] = 0x2761;\\n        t['a102'] = 0x2762;\\n        t['a103'] = 0x2763;\\n        t['a104'] = 0x2764;\\n        t['a106'] = 0x2765;\\n        t['a107'] = 0x2766;\\n        t['a108'] = 0x2767;\\n        t['a112'] = 0x2663;\\n        t['a111'] = 0x2666;\\n        t['a110'] = 0x2665;\\n        t['a109'] = 0x2660;\\n        t['a120'] = 0x2460;\\n        t['a121'] = 0x2461;\\n        t['a122'] = 0x2462;\\n        t['a123'] = 0x2463;\\n        t['a124'] = 0x2464;\\n        t['a125'] = 0x2465;\\n        t['a126'] = 0x2466;\\n        t['a127'] = 0x2467;\\n        t['a128'] = 0x2468;\\n        t['a129'] = 0x2469;\\n        t['a130'] = 0x2776;\\n        t['a131'] = 0x2777;\\n        t['a132'] = 0x2778;\\n        t['a133'] = 0x2779;\\n        t['a134'] = 0x277A;\\n        t['a135'] = 0x277B;\\n        t['a136'] = 0x277C;\\n        t['a137'] = 0x277D;\\n        t['a138'] = 0x277E;\\n        t['a139'] = 0x277F;\\n        t['a140'] = 0x2780;\\n        t['a141'] = 0x2781;\\n        t['a142'] = 0x2782;\\n        t['a143'] = 0x2783;\\n        t['a144'] = 0x2784;\\n        t['a145'] = 0x2785;\\n        t['a146'] = 0x2786;\\n        t['a147'] = 0x2787;\\n        t['a148'] = 0x2788;\\n        t['a149'] = 0x2789;\\n        t['a150'] = 0x278A;\\n        t['a151'] = 0x278B;\\n        t['a152'] = 0x278C;\\n        t['a153'] = 0x278D;\\n        t['a154'] = 0x278E;\\n        t['a155'] = 0x278F;\\n        t['a156'] = 0x2790;\\n        t['a157'] = 0x2791;\\n        t['a158'] = 0x2792;\\n        t['a159'] = 0x2793;\\n        t['a160'] = 0x2794;\\n        t['a161'] = 0x2192;\\n        t['a163'] = 0x2194;\\n        t['a164'] = 0x2195;\\n        t['a196'] = 0x2798;\\n        t['a165'] = 0x2799;\\n        t['a192'] = 0x279A;\\n        t['a166'] = 0x279B;\\n        t['a167'] = 0x279C;\\n        t['a168'] = 0x279D;\\n        t['a169'] = 0x279E;\\n        t['a170'] = 0x279F;\\n        t['a171'] = 0x27A0;\\n        t['a172'] = 0x27A1;\\n        t['a173'] = 0x27A2;\\n        t['a162'] = 0x27A3;\\n        t['a174'] = 0x27A4;\\n        t['a175'] = 0x27A5;\\n        t['a176'] = 0x27A6;\\n        t['a177'] = 0x27A7;\\n        t['a178'] = 0x27A8;\\n        t['a179'] = 0x27A9;\\n        t['a193'] = 0x27AA;\\n        t['a180'] = 0x27AB;\\n        t['a199'] = 0x27AC;\\n        t['a181'] = 0x27AD;\\n        t['a200'] = 0x27AE;\\n        t['a182'] = 0x27AF;\\n        t['a201'] = 0x27B1;\\n        t['a183'] = 0x27B2;\\n        t['a184'] = 0x27B3;\\n        t['a197'] = 0x27B4;\\n        t['a185'] = 0x27B5;\\n        t['a194'] = 0x27B6;\\n        t['a198'] = 0x27B7;\\n        t['a186'] = 0x27B8;\\n        t['a195'] = 0x27B9;\\n        t['a187'] = 0x27BA;\\n        t['a188'] = 0x27BB;\\n        t['a189'] = 0x27BC;\\n        t['a190'] = 0x27BD;\\n        t['a191'] = 0x27BE;\\n        t['a89'] = 0x2768;\\n        t['a90'] = 0x2769;\\n        t['a93'] = 0x276A;\\n        t['a94'] = 0x276B;\\n        t['a91'] = 0x276C;\\n        t['a92'] = 0x276D;\\n        t['a205'] = 0x276E;\\n        t['a85'] = 0x276F;\\n        t['a206'] = 0x2770;\\n        t['a86'] = 0x2771;\\n        t['a87'] = 0x2772;\\n        t['a88'] = 0x2773;\\n        t['a95'] = 0x2774;\\n        t['a96'] = 0x2775;\\n        t['.notdef'] = 0x0000;\\n      });\\n      exports.getGlyphsUnicode = getGlyphsUnicode;\\n      exports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\\n      /***/\\n    },\\n    /* 178 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\\n        t['ArialNarrow'] = 'Helvetica';\\n        t['ArialNarrow-Bold'] = 'Helvetica-Bold';\\n        t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\\n        t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\\n        t['ArialBlack'] = 'Helvetica';\\n        t['ArialBlack-Bold'] = 'Helvetica-Bold';\\n        t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\\n        t['ArialBlack-Italic'] = 'Helvetica-Oblique';\\n        t['Arial-Black'] = 'Helvetica';\\n        t['Arial-Black-Bold'] = 'Helvetica-Bold';\\n        t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\\n        t['Arial-Black-Italic'] = 'Helvetica-Oblique';\\n        t['Arial'] = 'Helvetica';\\n        t['Arial-Bold'] = 'Helvetica-Bold';\\n        t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\\n        t['Arial-Italic'] = 'Helvetica-Oblique';\\n        t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\\n        t['Arial-BoldMT'] = 'Helvetica-Bold';\\n        t['Arial-ItalicMT'] = 'Helvetica-Oblique';\\n        t['ArialMT'] = 'Helvetica';\\n        t['Courier-Bold'] = 'Courier-Bold';\\n        t['Courier-BoldItalic'] = 'Courier-BoldOblique';\\n        t['Courier-Italic'] = 'Courier-Oblique';\\n        t['CourierNew'] = 'Courier';\\n        t['CourierNew-Bold'] = 'Courier-Bold';\\n        t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\\n        t['CourierNew-Italic'] = 'Courier-Oblique';\\n        t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\\n        t['CourierNewPS-BoldMT'] = 'Courier-Bold';\\n        t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\\n        t['CourierNewPSMT'] = 'Courier';\\n        t['Helvetica'] = 'Helvetica';\\n        t['Helvetica-Bold'] = 'Helvetica-Bold';\\n        t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\\n        t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\\n        t['Helvetica-Italic'] = 'Helvetica-Oblique';\\n        t['Helvetica-Oblique'] = 'Helvetica-Oblique';\\n        t['SegoeUISymbol'] = 'Helvetica';\\n        t['Symbol-Bold'] = 'Symbol';\\n        t['Symbol-BoldItalic'] = 'Symbol';\\n        t['Symbol-Italic'] = 'Symbol';\\n        t['TimesNewRoman'] = 'Times-Roman';\\n        t['TimesNewRoman-Bold'] = 'Times-Bold';\\n        t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\\n        t['TimesNewRoman-Italic'] = 'Times-Italic';\\n        t['TimesNewRomanPS'] = 'Times-Roman';\\n        t['TimesNewRomanPS-Bold'] = 'Times-Bold';\\n        t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\\n        t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\\n        t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\\n        t['TimesNewRomanPS-Italic'] = 'Times-Italic';\\n        t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\\n        t['TimesNewRomanPSMT'] = 'Times-Roman';\\n        t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\\n        t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\\n        t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\\n      });\\n      exports.getStdFontMap = getStdFontMap;\\n      var getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\\n        t['Calibri'] = 'Helvetica';\\n        t['Calibri-Bold'] = 'Helvetica-Bold';\\n        t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\\n        t['Calibri-Italic'] = 'Helvetica-Oblique';\\n        t['CenturyGothic'] = 'Helvetica';\\n        t['CenturyGothic-Bold'] = 'Helvetica-Bold';\\n        t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\\n        t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\\n        t['ComicSansMS'] = 'Comic Sans MS';\\n        t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\\n        t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\\n        t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\\n        t['LucidaConsole'] = 'Courier';\\n        t['LucidaConsole-Bold'] = 'Courier-Bold';\\n        t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\\n        t['LucidaConsole-Italic'] = 'Courier-Oblique';\\n        t['LucidaSans-Demi'] = 'Helvetica-Bold';\\n        t['MS-Gothic'] = 'MS Gothic';\\n        t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\\n        t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\\n        t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\\n        t['MS-Mincho'] = 'MS Mincho';\\n        t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\\n        t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\\n        t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\\n        t['MS-PGothic'] = 'MS PGothic';\\n        t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\\n        t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\\n        t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\\n        t['MS-PMincho'] = 'MS PMincho';\\n        t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\\n        t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\\n        t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\\n        t['NuptialScript'] = 'Times-Italic';\\n        t['Wingdings'] = 'ZapfDingbats';\\n      });\\n      exports.getNonStdFontMap = getNonStdFontMap;\\n      var getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\\n        t['Adobe Jenson'] = true;\\n        t['Adobe Text'] = true;\\n        t['Albertus'] = true;\\n        t['Aldus'] = true;\\n        t['Alexandria'] = true;\\n        t['Algerian'] = true;\\n        t['American Typewriter'] = true;\\n        t['Antiqua'] = true;\\n        t['Apex'] = true;\\n        t['Arno'] = true;\\n        t['Aster'] = true;\\n        t['Aurora'] = true;\\n        t['Baskerville'] = true;\\n        t['Bell'] = true;\\n        t['Bembo'] = true;\\n        t['Bembo Schoolbook'] = true;\\n        t['Benguiat'] = true;\\n        t['Berkeley Old Style'] = true;\\n        t['Bernhard Modern'] = true;\\n        t['Berthold City'] = true;\\n        t['Bodoni'] = true;\\n        t['Bauer Bodoni'] = true;\\n        t['Book Antiqua'] = true;\\n        t['Bookman'] = true;\\n        t['Bordeaux Roman'] = true;\\n        t['Californian FB'] = true;\\n        t['Calisto'] = true;\\n        t['Calvert'] = true;\\n        t['Capitals'] = true;\\n        t['Cambria'] = true;\\n        t['Cartier'] = true;\\n        t['Caslon'] = true;\\n        t['Catull'] = true;\\n        t['Centaur'] = true;\\n        t['Century Old Style'] = true;\\n        t['Century Schoolbook'] = true;\\n        t['Chaparral'] = true;\\n        t['Charis SIL'] = true;\\n        t['Cheltenham'] = true;\\n        t['Cholla Slab'] = true;\\n        t['Clarendon'] = true;\\n        t['Clearface'] = true;\\n        t['Cochin'] = true;\\n        t['Colonna'] = true;\\n        t['Computer Modern'] = true;\\n        t['Concrete Roman'] = true;\\n        t['Constantia'] = true;\\n        t['Cooper Black'] = true;\\n        t['Corona'] = true;\\n        t['Ecotype'] = true;\\n        t['Egyptienne'] = true;\\n        t['Elephant'] = true;\\n        t['Excelsior'] = true;\\n        t['Fairfield'] = true;\\n        t['FF Scala'] = true;\\n        t['Folkard'] = true;\\n        t['Footlight'] = true;\\n        t['FreeSerif'] = true;\\n        t['Friz Quadrata'] = true;\\n        t['Garamond'] = true;\\n        t['Gentium'] = true;\\n        t['Georgia'] = true;\\n        t['Gloucester'] = true;\\n        t['Goudy Old Style'] = true;\\n        t['Goudy Schoolbook'] = true;\\n        t['Goudy Pro Font'] = true;\\n        t['Granjon'] = true;\\n        t['Guardian Egyptian'] = true;\\n        t['Heather'] = true;\\n        t['Hercules'] = true;\\n        t['High Tower Text'] = true;\\n        t['Hiroshige'] = true;\\n        t['Hoefler Text'] = true;\\n        t['Humana Serif'] = true;\\n        t['Imprint'] = true;\\n        t['Ionic No. 5'] = true;\\n        t['Janson'] = true;\\n        t['Joanna'] = true;\\n        t['Korinna'] = true;\\n        t['Lexicon'] = true;\\n        t['Liberation Serif'] = true;\\n        t['Linux Libertine'] = true;\\n        t['Literaturnaya'] = true;\\n        t['Lucida'] = true;\\n        t['Lucida Bright'] = true;\\n        t['Melior'] = true;\\n        t['Memphis'] = true;\\n        t['Miller'] = true;\\n        t['Minion'] = true;\\n        t['Modern'] = true;\\n        t['Mona Lisa'] = true;\\n        t['Mrs Eaves'] = true;\\n        t['MS Serif'] = true;\\n        t['Museo Slab'] = true;\\n        t['New York'] = true;\\n        t['Nimbus Roman'] = true;\\n        t['NPS Rawlinson Roadway'] = true;\\n        t['NuptialScript'] = true;\\n        t['Palatino'] = true;\\n        t['Perpetua'] = true;\\n        t['Plantin'] = true;\\n        t['Plantin Schoolbook'] = true;\\n        t['Playbill'] = true;\\n        t['Poor Richard'] = true;\\n        t['Rawlinson Roadway'] = true;\\n        t['Renault'] = true;\\n        t['Requiem'] = true;\\n        t['Rockwell'] = true;\\n        t['Roman'] = true;\\n        t['Rotis Serif'] = true;\\n        t['Sabon'] = true;\\n        t['Scala'] = true;\\n        t['Seagull'] = true;\\n        t['Sistina'] = true;\\n        t['Souvenir'] = true;\\n        t['STIX'] = true;\\n        t['Stone Informal'] = true;\\n        t['Stone Serif'] = true;\\n        t['Sylfaen'] = true;\\n        t['Times'] = true;\\n        t['Trajan'] = true;\\n        t['Trinité'] = true;\\n        t['Trump Mediaeval'] = true;\\n        t['Utopia'] = true;\\n        t['Vale Type'] = true;\\n        t['Bitstream Vera'] = true;\\n        t['Vera Serif'] = true;\\n        t['Versailles'] = true;\\n        t['Wanted'] = true;\\n        t['Weiss'] = true;\\n        t['Wide Latin'] = true;\\n        t['Windsor'] = true;\\n        t['XITS'] = true;\\n      });\\n      exports.getSerifFonts = getSerifFonts;\\n      var getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\\n        t['Dingbats'] = true;\\n        t['Symbol'] = true;\\n        t['ZapfDingbats'] = true;\\n      });\\n      exports.getSymbolsFonts = getSymbolsFonts;\\n      var getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\\n        t[2] = 10;\\n        t[3] = 32;\\n        t[4] = 33;\\n        t[5] = 34;\\n        t[6] = 35;\\n        t[7] = 36;\\n        t[8] = 37;\\n        t[9] = 38;\\n        t[10] = 39;\\n        t[11] = 40;\\n        t[12] = 41;\\n        t[13] = 42;\\n        t[14] = 43;\\n        t[15] = 44;\\n        t[16] = 45;\\n        t[17] = 46;\\n        t[18] = 47;\\n        t[19] = 48;\\n        t[20] = 49;\\n        t[21] = 50;\\n        t[22] = 51;\\n        t[23] = 52;\\n        t[24] = 53;\\n        t[25] = 54;\\n        t[26] = 55;\\n        t[27] = 56;\\n        t[28] = 57;\\n        t[29] = 58;\\n        t[30] = 894;\\n        t[31] = 60;\\n        t[32] = 61;\\n        t[33] = 62;\\n        t[34] = 63;\\n        t[35] = 64;\\n        t[36] = 65;\\n        t[37] = 66;\\n        t[38] = 67;\\n        t[39] = 68;\\n        t[40] = 69;\\n        t[41] = 70;\\n        t[42] = 71;\\n        t[43] = 72;\\n        t[44] = 73;\\n        t[45] = 74;\\n        t[46] = 75;\\n        t[47] = 76;\\n        t[48] = 77;\\n        t[49] = 78;\\n        t[50] = 79;\\n        t[51] = 80;\\n        t[52] = 81;\\n        t[53] = 82;\\n        t[54] = 83;\\n        t[55] = 84;\\n        t[56] = 85;\\n        t[57] = 86;\\n        t[58] = 87;\\n        t[59] = 88;\\n        t[60] = 89;\\n        t[61] = 90;\\n        t[62] = 91;\\n        t[63] = 92;\\n        t[64] = 93;\\n        t[65] = 94;\\n        t[66] = 95;\\n        t[67] = 96;\\n        t[68] = 97;\\n        t[69] = 98;\\n        t[70] = 99;\\n        t[71] = 100;\\n        t[72] = 101;\\n        t[73] = 102;\\n        t[74] = 103;\\n        t[75] = 104;\\n        t[76] = 105;\\n        t[77] = 106;\\n        t[78] = 107;\\n        t[79] = 108;\\n        t[80] = 109;\\n        t[81] = 110;\\n        t[82] = 111;\\n        t[83] = 112;\\n        t[84] = 113;\\n        t[85] = 114;\\n        t[86] = 115;\\n        t[87] = 116;\\n        t[88] = 117;\\n        t[89] = 118;\\n        t[90] = 119;\\n        t[91] = 120;\\n        t[92] = 121;\\n        t[93] = 122;\\n        t[94] = 123;\\n        t[95] = 124;\\n        t[96] = 125;\\n        t[97] = 126;\\n        t[98] = 196;\\n        t[99] = 197;\\n        t[100] = 199;\\n        t[101] = 201;\\n        t[102] = 209;\\n        t[103] = 214;\\n        t[104] = 220;\\n        t[105] = 225;\\n        t[106] = 224;\\n        t[107] = 226;\\n        t[108] = 228;\\n        t[109] = 227;\\n        t[110] = 229;\\n        t[111] = 231;\\n        t[112] = 233;\\n        t[113] = 232;\\n        t[114] = 234;\\n        t[115] = 235;\\n        t[116] = 237;\\n        t[117] = 236;\\n        t[118] = 238;\\n        t[119] = 239;\\n        t[120] = 241;\\n        t[121] = 243;\\n        t[122] = 242;\\n        t[123] = 244;\\n        t[124] = 246;\\n        t[125] = 245;\\n        t[126] = 250;\\n        t[127] = 249;\\n        t[128] = 251;\\n        t[129] = 252;\\n        t[130] = 8224;\\n        t[131] = 176;\\n        t[132] = 162;\\n        t[133] = 163;\\n        t[134] = 167;\\n        t[135] = 8226;\\n        t[136] = 182;\\n        t[137] = 223;\\n        t[138] = 174;\\n        t[139] = 169;\\n        t[140] = 8482;\\n        t[141] = 180;\\n        t[142] = 168;\\n        t[143] = 8800;\\n        t[144] = 198;\\n        t[145] = 216;\\n        t[146] = 8734;\\n        t[147] = 177;\\n        t[148] = 8804;\\n        t[149] = 8805;\\n        t[150] = 165;\\n        t[151] = 181;\\n        t[152] = 8706;\\n        t[153] = 8721;\\n        t[154] = 8719;\\n        t[156] = 8747;\\n        t[157] = 170;\\n        t[158] = 186;\\n        t[159] = 8486;\\n        t[160] = 230;\\n        t[161] = 248;\\n        t[162] = 191;\\n        t[163] = 161;\\n        t[164] = 172;\\n        t[165] = 8730;\\n        t[166] = 402;\\n        t[167] = 8776;\\n        t[168] = 8710;\\n        t[169] = 171;\\n        t[170] = 187;\\n        t[171] = 8230;\\n        t[210] = 218;\\n        t[223] = 711;\\n        t[224] = 321;\\n        t[225] = 322;\\n        t[227] = 353;\\n        t[229] = 382;\\n        t[234] = 253;\\n        t[252] = 263;\\n        t[253] = 268;\\n        t[254] = 269;\\n        t[258] = 258;\\n        t[260] = 260;\\n        t[261] = 261;\\n        t[265] = 280;\\n        t[266] = 281;\\n        t[268] = 283;\\n        t[269] = 313;\\n        t[275] = 323;\\n        t[276] = 324;\\n        t[278] = 328;\\n        t[284] = 345;\\n        t[285] = 346;\\n        t[286] = 347;\\n        t[292] = 367;\\n        t[295] = 377;\\n        t[296] = 378;\\n        t[298] = 380;\\n        t[305] = 963;\\n        t[306] = 964;\\n        t[307] = 966;\\n        t[308] = 8215;\\n        t[309] = 8252;\\n        t[310] = 8319;\\n        t[311] = 8359;\\n        t[312] = 8592;\\n        t[313] = 8593;\\n        t[337] = 9552;\\n        t[493] = 1039;\\n        t[494] = 1040;\\n        t[705] = 1524;\\n        t[706] = 8362;\\n        t[710] = 64288;\\n        t[711] = 64298;\\n        t[759] = 1617;\\n        t[761] = 1776;\\n        t[763] = 1778;\\n        t[775] = 1652;\\n        t[777] = 1764;\\n        t[778] = 1780;\\n        t[779] = 1781;\\n        t[780] = 1782;\\n        t[782] = 771;\\n        t[783] = 64726;\\n        t[786] = 8363;\\n        t[788] = 8532;\\n        t[790] = 768;\\n        t[791] = 769;\\n        t[792] = 768;\\n        t[795] = 803;\\n        t[797] = 64336;\\n        t[798] = 64337;\\n        t[799] = 64342;\\n        t[800] = 64343;\\n        t[801] = 64344;\\n        t[802] = 64345;\\n        t[803] = 64362;\\n        t[804] = 64363;\\n        t[805] = 64364;\\n        t[2424] = 7821;\\n        t[2425] = 7822;\\n        t[2426] = 7823;\\n        t[2427] = 7824;\\n        t[2428] = 7825;\\n        t[2429] = 7826;\\n        t[2430] = 7827;\\n        t[2433] = 7682;\\n        t[2678] = 8045;\\n        t[2679] = 8046;\\n        t[2830] = 1552;\\n        t[2838] = 686;\\n        t[2840] = 751;\\n        t[2842] = 753;\\n        t[2843] = 754;\\n        t[2844] = 755;\\n        t[2846] = 757;\\n        t[2856] = 767;\\n        t[2857] = 848;\\n        t[2858] = 849;\\n        t[2862] = 853;\\n        t[2863] = 854;\\n        t[2864] = 855;\\n        t[2865] = 861;\\n        t[2866] = 862;\\n        t[2906] = 7460;\\n        t[2908] = 7462;\\n        t[2909] = 7463;\\n        t[2910] = 7464;\\n        t[2912] = 7466;\\n        t[2913] = 7467;\\n        t[2914] = 7468;\\n        t[2916] = 7470;\\n        t[2917] = 7471;\\n        t[2918] = 7472;\\n        t[2920] = 7474;\\n        t[2921] = 7475;\\n        t[2922] = 7476;\\n        t[2924] = 7478;\\n        t[2925] = 7479;\\n        t[2926] = 7480;\\n        t[2928] = 7482;\\n        t[2929] = 7483;\\n        t[2930] = 7484;\\n        t[2932] = 7486;\\n        t[2933] = 7487;\\n        t[2934] = 7488;\\n        t[2936] = 7490;\\n        t[2937] = 7491;\\n        t[2938] = 7492;\\n        t[2940] = 7494;\\n        t[2941] = 7495;\\n        t[2942] = 7496;\\n        t[2944] = 7498;\\n        t[2946] = 7500;\\n        t[2948] = 7502;\\n        t[2950] = 7504;\\n        t[2951] = 7505;\\n        t[2952] = 7506;\\n        t[2954] = 7508;\\n        t[2955] = 7509;\\n        t[2956] = 7510;\\n        t[2958] = 7512;\\n        t[2959] = 7513;\\n        t[2960] = 7514;\\n        t[2962] = 7516;\\n        t[2963] = 7517;\\n        t[2964] = 7518;\\n        t[2966] = 7520;\\n        t[2967] = 7521;\\n        t[2968] = 7522;\\n        t[2970] = 7524;\\n        t[2971] = 7525;\\n        t[2972] = 7526;\\n        t[2974] = 7528;\\n        t[2975] = 7529;\\n        t[2976] = 7530;\\n        t[2978] = 1537;\\n        t[2979] = 1538;\\n        t[2980] = 1539;\\n        t[2982] = 1549;\\n        t[2983] = 1551;\\n        t[2984] = 1552;\\n        t[2986] = 1554;\\n        t[2987] = 1555;\\n        t[2988] = 1556;\\n        t[2990] = 1623;\\n        t[2991] = 1624;\\n        t[2995] = 1775;\\n        t[2999] = 1791;\\n        t[3002] = 64290;\\n        t[3003] = 64291;\\n        t[3004] = 64292;\\n        t[3006] = 64294;\\n        t[3007] = 64295;\\n        t[3008] = 64296;\\n        t[3011] = 1900;\\n        t[3014] = 8223;\\n        t[3015] = 8244;\\n        t[3017] = 7532;\\n        t[3018] = 7533;\\n        t[3019] = 7534;\\n        t[3075] = 7590;\\n        t[3076] = 7591;\\n        t[3079] = 7594;\\n        t[3080] = 7595;\\n        t[3083] = 7598;\\n        t[3084] = 7599;\\n        t[3087] = 7602;\\n        t[3088] = 7603;\\n        t[3091] = 7606;\\n        t[3092] = 7607;\\n        t[3095] = 7610;\\n        t[3096] = 7611;\\n        t[3099] = 7614;\\n        t[3100] = 7615;\\n        t[3103] = 7618;\\n        t[3104] = 7619;\\n        t[3107] = 8337;\\n        t[3108] = 8338;\\n        t[3116] = 1884;\\n        t[3119] = 1885;\\n        t[3120] = 1885;\\n        t[3123] = 1886;\\n        t[3124] = 1886;\\n        t[3127] = 1887;\\n        t[3128] = 1887;\\n        t[3131] = 1888;\\n        t[3132] = 1888;\\n        t[3135] = 1889;\\n        t[3136] = 1889;\\n        t[3139] = 1890;\\n        t[3140] = 1890;\\n        t[3143] = 1891;\\n        t[3144] = 1891;\\n        t[3147] = 1892;\\n        t[3148] = 1892;\\n        t[3153] = 580;\\n        t[3154] = 581;\\n        t[3157] = 584;\\n        t[3158] = 585;\\n        t[3161] = 588;\\n        t[3162] = 589;\\n        t[3165] = 891;\\n        t[3166] = 892;\\n        t[3169] = 1274;\\n        t[3170] = 1275;\\n        t[3173] = 1278;\\n        t[3174] = 1279;\\n        t[3181] = 7622;\\n        t[3182] = 7623;\\n        t[3282] = 11799;\\n        t[3316] = 578;\\n        t[3379] = 42785;\\n        t[3393] = 1159;\\n        t[3416] = 8377;\\n      });\\n      exports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\\n      var getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\\n        t[227] = 322;\\n        t[264] = 261;\\n        t[291] = 346;\\n      });\\n      exports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\\n      var getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\\n        t[1] = 32;\\n        t[4] = 65;\\n        t[17] = 66;\\n        t[18] = 67;\\n        t[24] = 68;\\n        t[28] = 69;\\n        t[38] = 70;\\n        t[39] = 71;\\n        t[44] = 72;\\n        t[47] = 73;\\n        t[58] = 74;\\n        t[60] = 75;\\n        t[62] = 76;\\n        t[68] = 77;\\n        t[69] = 78;\\n        t[75] = 79;\\n        t[87] = 80;\\n        t[89] = 81;\\n        t[90] = 82;\\n        t[94] = 83;\\n        t[100] = 84;\\n        t[104] = 85;\\n        t[115] = 86;\\n        t[116] = 87;\\n        t[121] = 88;\\n        t[122] = 89;\\n        t[127] = 90;\\n        t[258] = 97;\\n        t[268] = 261;\\n        t[271] = 98;\\n        t[272] = 99;\\n        t[273] = 263;\\n        t[282] = 100;\\n        t[286] = 101;\\n        t[295] = 281;\\n        t[296] = 102;\\n        t[336] = 103;\\n        t[346] = 104;\\n        t[349] = 105;\\n        t[361] = 106;\\n        t[364] = 107;\\n        t[367] = 108;\\n        t[371] = 322;\\n        t[373] = 109;\\n        t[374] = 110;\\n        t[381] = 111;\\n        t[383] = 243;\\n        t[393] = 112;\\n        t[395] = 113;\\n        t[396] = 114;\\n        t[400] = 115;\\n        t[401] = 347;\\n        t[410] = 116;\\n        t[437] = 117;\\n        t[448] = 118;\\n        t[449] = 119;\\n        t[454] = 120;\\n        t[455] = 121;\\n        t[460] = 122;\\n        t[463] = 380;\\n        t[853] = 44;\\n        t[855] = 58;\\n        t[856] = 46;\\n        t[876] = 47;\\n        t[878] = 45;\\n        t[882] = 45;\\n        t[894] = 40;\\n        t[895] = 41;\\n        t[896] = 91;\\n        t[897] = 93;\\n        t[923] = 64;\\n        t[1004] = 48;\\n        t[1005] = 49;\\n        t[1006] = 50;\\n        t[1007] = 51;\\n        t[1008] = 52;\\n        t[1009] = 53;\\n        t[1010] = 54;\\n        t[1011] = 55;\\n        t[1012] = 56;\\n        t[1013] = 57;\\n        t[1081] = 37;\\n        t[1085] = 43;\\n        t[1086] = 45;\\n      });\\n      exports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\\n      /***/\\n    },\\n    /* 179 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      var getLookupTableFactory = __w_pdfjs_require__(6).getLookupTableFactory;\\n\\n      var getSpecialPUASymbols = getLookupTableFactory(function (t) {\\n        t[63721] = 0x00A9;\\n        t[63193] = 0x00A9;\\n        t[63720] = 0x00AE;\\n        t[63194] = 0x00AE;\\n        t[63722] = 0x2122;\\n        t[63195] = 0x2122;\\n        t[63729] = 0x23A7;\\n        t[63730] = 0x23A8;\\n        t[63731] = 0x23A9;\\n        t[63740] = 0x23AB;\\n        t[63741] = 0x23AC;\\n        t[63742] = 0x23AD;\\n        t[63726] = 0x23A1;\\n        t[63727] = 0x23A2;\\n        t[63728] = 0x23A3;\\n        t[63737] = 0x23A4;\\n        t[63738] = 0x23A5;\\n        t[63739] = 0x23A6;\\n        t[63723] = 0x239B;\\n        t[63724] = 0x239C;\\n        t[63725] = 0x239D;\\n        t[63734] = 0x239E;\\n        t[63735] = 0x239F;\\n        t[63736] = 0x23A0;\\n      });\\n\\n      function mapSpecialUnicodeValues(code) {\\n        if (code >= 0xFFF0 && code <= 0xFFFF) {\\n          return 0;\\n        } else if (code >= 0xF600 && code <= 0xF8FF) {\\n          return getSpecialPUASymbols()[code] || code;\\n        } else if (code === 0x00AD) {\\n          return 0x002D;\\n        }\\n\\n        return code;\\n      }\\n\\n      function getUnicodeForGlyph(name, glyphsUnicodeMap) {\\n        var unicode = glyphsUnicodeMap[name];\\n\\n        if (unicode !== undefined) {\\n          return unicode;\\n        }\\n\\n        if (!name) {\\n          return -1;\\n        }\\n\\n        if (name[0] === 'u') {\\n          var nameLen = name.length,\\n              hexStr;\\n\\n          if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\\n            hexStr = name.substring(3);\\n          } else if (nameLen >= 5 && nameLen <= 7) {\\n            hexStr = name.substring(1);\\n          } else {\\n            return -1;\\n          }\\n\\n          if (hexStr === hexStr.toUpperCase()) {\\n            unicode = parseInt(hexStr, 16);\\n\\n            if (unicode >= 0) {\\n              return unicode;\\n            }\\n          }\\n        }\\n\\n        return -1;\\n      }\\n\\n      var UnicodeRanges = [{\\n        'begin': 0x0000,\\n        'end': 0x007F\\n      }, {\\n        'begin': 0x0080,\\n        'end': 0x00FF\\n      }, {\\n        'begin': 0x0100,\\n        'end': 0x017F\\n      }, {\\n        'begin': 0x0180,\\n        'end': 0x024F\\n      }, {\\n        'begin': 0x0250,\\n        'end': 0x02AF\\n      }, {\\n        'begin': 0x02B0,\\n        'end': 0x02FF\\n      }, {\\n        'begin': 0x0300,\\n        'end': 0x036F\\n      }, {\\n        'begin': 0x0370,\\n        'end': 0x03FF\\n      }, {\\n        'begin': 0x2C80,\\n        'end': 0x2CFF\\n      }, {\\n        'begin': 0x0400,\\n        'end': 0x04FF\\n      }, {\\n        'begin': 0x0530,\\n        'end': 0x058F\\n      }, {\\n        'begin': 0x0590,\\n        'end': 0x05FF\\n      }, {\\n        'begin': 0xA500,\\n        'end': 0xA63F\\n      }, {\\n        'begin': 0x0600,\\n        'end': 0x06FF\\n      }, {\\n        'begin': 0x07C0,\\n        'end': 0x07FF\\n      }, {\\n        'begin': 0x0900,\\n        'end': 0x097F\\n      }, {\\n        'begin': 0x0980,\\n        'end': 0x09FF\\n      }, {\\n        'begin': 0x0A00,\\n        'end': 0x0A7F\\n      }, {\\n        'begin': 0x0A80,\\n        'end': 0x0AFF\\n      }, {\\n        'begin': 0x0B00,\\n        'end': 0x0B7F\\n      }, {\\n        'begin': 0x0B80,\\n        'end': 0x0BFF\\n      }, {\\n        'begin': 0x0C00,\\n        'end': 0x0C7F\\n      }, {\\n        'begin': 0x0C80,\\n        'end': 0x0CFF\\n      }, {\\n        'begin': 0x0D00,\\n        'end': 0x0D7F\\n      }, {\\n        'begin': 0x0E00,\\n        'end': 0x0E7F\\n      }, {\\n        'begin': 0x0E80,\\n        'end': 0x0EFF\\n      }, {\\n        'begin': 0x10A0,\\n        'end': 0x10FF\\n      }, {\\n        'begin': 0x1B00,\\n        'end': 0x1B7F\\n      }, {\\n        'begin': 0x1100,\\n        'end': 0x11FF\\n      }, {\\n        'begin': 0x1E00,\\n        'end': 0x1EFF\\n      }, {\\n        'begin': 0x1F00,\\n        'end': 0x1FFF\\n      }, {\\n        'begin': 0x2000,\\n        'end': 0x206F\\n      }, {\\n        'begin': 0x2070,\\n        'end': 0x209F\\n      }, {\\n        'begin': 0x20A0,\\n        'end': 0x20CF\\n      }, {\\n        'begin': 0x20D0,\\n        'end': 0x20FF\\n      }, {\\n        'begin': 0x2100,\\n        'end': 0x214F\\n      }, {\\n        'begin': 0x2150,\\n        'end': 0x218F\\n      }, {\\n        'begin': 0x2190,\\n        'end': 0x21FF\\n      }, {\\n        'begin': 0x2200,\\n        'end': 0x22FF\\n      }, {\\n        'begin': 0x2300,\\n        'end': 0x23FF\\n      }, {\\n        'begin': 0x2400,\\n        'end': 0x243F\\n      }, {\\n        'begin': 0x2440,\\n        'end': 0x245F\\n      }, {\\n        'begin': 0x2460,\\n        'end': 0x24FF\\n      }, {\\n        'begin': 0x2500,\\n        'end': 0x257F\\n      }, {\\n        'begin': 0x2580,\\n        'end': 0x259F\\n      }, {\\n        'begin': 0x25A0,\\n        'end': 0x25FF\\n      }, {\\n        'begin': 0x2600,\\n        'end': 0x26FF\\n      }, {\\n        'begin': 0x2700,\\n        'end': 0x27BF\\n      }, {\\n        'begin': 0x3000,\\n        'end': 0x303F\\n      }, {\\n        'begin': 0x3040,\\n        'end': 0x309F\\n      }, {\\n        'begin': 0x30A0,\\n        'end': 0x30FF\\n      }, {\\n        'begin': 0x3100,\\n        'end': 0x312F\\n      }, {\\n        'begin': 0x3130,\\n        'end': 0x318F\\n      }, {\\n        'begin': 0xA840,\\n        'end': 0xA87F\\n      }, {\\n        'begin': 0x3200,\\n        'end': 0x32FF\\n      }, {\\n        'begin': 0x3300,\\n        'end': 0x33FF\\n      }, {\\n        'begin': 0xAC00,\\n        'end': 0xD7AF\\n      }, {\\n        'begin': 0xD800,\\n        'end': 0xDFFF\\n      }, {\\n        'begin': 0x10900,\\n        'end': 0x1091F\\n      }, {\\n        'begin': 0x4E00,\\n        'end': 0x9FFF\\n      }, {\\n        'begin': 0xE000,\\n        'end': 0xF8FF\\n      }, {\\n        'begin': 0x31C0,\\n        'end': 0x31EF\\n      }, {\\n        'begin': 0xFB00,\\n        'end': 0xFB4F\\n      }, {\\n        'begin': 0xFB50,\\n        'end': 0xFDFF\\n      }, {\\n        'begin': 0xFE20,\\n        'end': 0xFE2F\\n      }, {\\n        'begin': 0xFE10,\\n        'end': 0xFE1F\\n      }, {\\n        'begin': 0xFE50,\\n        'end': 0xFE6F\\n      }, {\\n        'begin': 0xFE70,\\n        'end': 0xFEFF\\n      }, {\\n        'begin': 0xFF00,\\n        'end': 0xFFEF\\n      }, {\\n        'begin': 0xFFF0,\\n        'end': 0xFFFF\\n      }, {\\n        'begin': 0x0F00,\\n        'end': 0x0FFF\\n      }, {\\n        'begin': 0x0700,\\n        'end': 0x074F\\n      }, {\\n        'begin': 0x0780,\\n        'end': 0x07BF\\n      }, {\\n        'begin': 0x0D80,\\n        'end': 0x0DFF\\n      }, {\\n        'begin': 0x1000,\\n        'end': 0x109F\\n      }, {\\n        'begin': 0x1200,\\n        'end': 0x137F\\n      }, {\\n        'begin': 0x13A0,\\n        'end': 0x13FF\\n      }, {\\n        'begin': 0x1400,\\n        'end': 0x167F\\n      }, {\\n        'begin': 0x1680,\\n        'end': 0x169F\\n      }, {\\n        'begin': 0x16A0,\\n        'end': 0x16FF\\n      }, {\\n        'begin': 0x1780,\\n        'end': 0x17FF\\n      }, {\\n        'begin': 0x1800,\\n        'end': 0x18AF\\n      }, {\\n        'begin': 0x2800,\\n        'end': 0x28FF\\n      }, {\\n        'begin': 0xA000,\\n        'end': 0xA48F\\n      }, {\\n        'begin': 0x1700,\\n        'end': 0x171F\\n      }, {\\n        'begin': 0x10300,\\n        'end': 0x1032F\\n      }, {\\n        'begin': 0x10330,\\n        'end': 0x1034F\\n      }, {\\n        'begin': 0x10400,\\n        'end': 0x1044F\\n      }, {\\n        'begin': 0x1D000,\\n        'end': 0x1D0FF\\n      }, {\\n        'begin': 0x1D400,\\n        'end': 0x1D7FF\\n      }, {\\n        'begin': 0xFF000,\\n        'end': 0xFFFFD\\n      }, {\\n        'begin': 0xFE00,\\n        'end': 0xFE0F\\n      }, {\\n        'begin': 0xE0000,\\n        'end': 0xE007F\\n      }, {\\n        'begin': 0x1900,\\n        'end': 0x194F\\n      }, {\\n        'begin': 0x1950,\\n        'end': 0x197F\\n      }, {\\n        'begin': 0x1980,\\n        'end': 0x19DF\\n      }, {\\n        'begin': 0x1A00,\\n        'end': 0x1A1F\\n      }, {\\n        'begin': 0x2C00,\\n        'end': 0x2C5F\\n      }, {\\n        'begin': 0x2D30,\\n        'end': 0x2D7F\\n      }, {\\n        'begin': 0x4DC0,\\n        'end': 0x4DFF\\n      }, {\\n        'begin': 0xA800,\\n        'end': 0xA82F\\n      }, {\\n        'begin': 0x10000,\\n        'end': 0x1007F\\n      }, {\\n        'begin': 0x10140,\\n        'end': 0x1018F\\n      }, {\\n        'begin': 0x10380,\\n        'end': 0x1039F\\n      }, {\\n        'begin': 0x103A0,\\n        'end': 0x103DF\\n      }, {\\n        'begin': 0x10450,\\n        'end': 0x1047F\\n      }, {\\n        'begin': 0x10480,\\n        'end': 0x104AF\\n      }, {\\n        'begin': 0x10800,\\n        'end': 0x1083F\\n      }, {\\n        'begin': 0x10A00,\\n        'end': 0x10A5F\\n      }, {\\n        'begin': 0x1D300,\\n        'end': 0x1D35F\\n      }, {\\n        'begin': 0x12000,\\n        'end': 0x123FF\\n      }, {\\n        'begin': 0x1D360,\\n        'end': 0x1D37F\\n      }, {\\n        'begin': 0x1B80,\\n        'end': 0x1BBF\\n      }, {\\n        'begin': 0x1C00,\\n        'end': 0x1C4F\\n      }, {\\n        'begin': 0x1C50,\\n        'end': 0x1C7F\\n      }, {\\n        'begin': 0xA880,\\n        'end': 0xA8DF\\n      }, {\\n        'begin': 0xA900,\\n        'end': 0xA92F\\n      }, {\\n        'begin': 0xA930,\\n        'end': 0xA95F\\n      }, {\\n        'begin': 0xAA00,\\n        'end': 0xAA5F\\n      }, {\\n        'begin': 0x10190,\\n        'end': 0x101CF\\n      }, {\\n        'begin': 0x101D0,\\n        'end': 0x101FF\\n      }, {\\n        'begin': 0x102A0,\\n        'end': 0x102DF\\n      }, {\\n        'begin': 0x1F030,\\n        'end': 0x1F09F\\n      }];\\n\\n      function getUnicodeRangeFor(value) {\\n        for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\\n          var range = UnicodeRanges[i];\\n\\n          if (value >= range.begin && value < range.end) {\\n            return i;\\n          }\\n        }\\n\\n        return -1;\\n      }\\n\\n      function isRTLRangeFor(value) {\\n        var range = UnicodeRanges[13];\\n\\n        if (value >= range.begin && value < range.end) {\\n          return true;\\n        }\\n\\n        range = UnicodeRanges[11];\\n\\n        if (value >= range.begin && value < range.end) {\\n          return true;\\n        }\\n\\n        return false;\\n      }\\n\\n      var getNormalizedUnicodes = getLookupTableFactory(function (t) {\\n        t[\\\"\\\\xA8\\\"] = \\\" \\\\u0308\\\";\\n        t[\\\"\\\\xAF\\\"] = \\\" \\\\u0304\\\";\\n        t[\\\"\\\\xB4\\\"] = \\\" \\\\u0301\\\";\\n        t[\\\"\\\\xB5\\\"] = \\\"\\\\u03BC\\\";\\n        t[\\\"\\\\xB8\\\"] = \\\" \\\\u0327\\\";\\n        t[\\\"\\\\u0132\\\"] = \\\"IJ\\\";\\n        t[\\\"\\\\u0133\\\"] = \\\"ij\\\";\\n        t[\\\"\\\\u013F\\\"] = \\\"L\\\\xB7\\\";\\n        t[\\\"\\\\u0140\\\"] = \\\"l\\\\xB7\\\";\\n        t[\\\"\\\\u0149\\\"] = \\\"\\\\u02BCn\\\";\\n        t[\\\"\\\\u017F\\\"] = \\\"s\\\";\\n        t[\\\"\\\\u01C4\\\"] = \\\"D\\\\u017D\\\";\\n        t[\\\"\\\\u01C5\\\"] = \\\"D\\\\u017E\\\";\\n        t[\\\"\\\\u01C6\\\"] = \\\"d\\\\u017E\\\";\\n        t[\\\"\\\\u01C7\\\"] = \\\"LJ\\\";\\n        t[\\\"\\\\u01C8\\\"] = \\\"Lj\\\";\\n        t[\\\"\\\\u01C9\\\"] = \\\"lj\\\";\\n        t[\\\"\\\\u01CA\\\"] = \\\"NJ\\\";\\n        t[\\\"\\\\u01CB\\\"] = \\\"Nj\\\";\\n        t[\\\"\\\\u01CC\\\"] = \\\"nj\\\";\\n        t[\\\"\\\\u01F1\\\"] = \\\"DZ\\\";\\n        t[\\\"\\\\u01F2\\\"] = \\\"Dz\\\";\\n        t[\\\"\\\\u01F3\\\"] = \\\"dz\\\";\\n        t[\\\"\\\\u02D8\\\"] = \\\" \\\\u0306\\\";\\n        t[\\\"\\\\u02D9\\\"] = \\\" \\\\u0307\\\";\\n        t[\\\"\\\\u02DA\\\"] = \\\" \\\\u030A\\\";\\n        t[\\\"\\\\u02DB\\\"] = \\\" \\\\u0328\\\";\\n        t[\\\"\\\\u02DC\\\"] = \\\" \\\\u0303\\\";\\n        t[\\\"\\\\u02DD\\\"] = \\\" \\\\u030B\\\";\\n        t[\\\"\\\\u037A\\\"] = \\\" \\\\u0345\\\";\\n        t[\\\"\\\\u0384\\\"] = \\\" \\\\u0301\\\";\\n        t[\\\"\\\\u03D0\\\"] = \\\"\\\\u03B2\\\";\\n        t[\\\"\\\\u03D1\\\"] = \\\"\\\\u03B8\\\";\\n        t[\\\"\\\\u03D2\\\"] = \\\"\\\\u03A5\\\";\\n        t[\\\"\\\\u03D5\\\"] = \\\"\\\\u03C6\\\";\\n        t[\\\"\\\\u03D6\\\"] = \\\"\\\\u03C0\\\";\\n        t[\\\"\\\\u03F0\\\"] = \\\"\\\\u03BA\\\";\\n        t[\\\"\\\\u03F1\\\"] = \\\"\\\\u03C1\\\";\\n        t[\\\"\\\\u03F2\\\"] = \\\"\\\\u03C2\\\";\\n        t[\\\"\\\\u03F4\\\"] = \\\"\\\\u0398\\\";\\n        t[\\\"\\\\u03F5\\\"] = \\\"\\\\u03B5\\\";\\n        t[\\\"\\\\u03F9\\\"] = \\\"\\\\u03A3\\\";\\n        t[\\\"\\\\u0587\\\"] = \\\"\\\\u0565\\\\u0582\\\";\\n        t[\\\"\\\\u0675\\\"] = \\\"\\\\u0627\\\\u0674\\\";\\n        t[\\\"\\\\u0676\\\"] = \\\"\\\\u0648\\\\u0674\\\";\\n        t[\\\"\\\\u0677\\\"] = \\\"\\\\u06C7\\\\u0674\\\";\\n        t[\\\"\\\\u0678\\\"] = \\\"\\\\u064A\\\\u0674\\\";\\n        t[\\\"\\\\u0E33\\\"] = \\\"\\\\u0E4D\\\\u0E32\\\";\\n        t[\\\"\\\\u0EB3\\\"] = \\\"\\\\u0ECD\\\\u0EB2\\\";\\n        t[\\\"\\\\u0EDC\\\"] = \\\"\\\\u0EAB\\\\u0E99\\\";\\n        t[\\\"\\\\u0EDD\\\"] = \\\"\\\\u0EAB\\\\u0EA1\\\";\\n        t[\\\"\\\\u0F77\\\"] = \\\"\\\\u0FB2\\\\u0F81\\\";\\n        t[\\\"\\\\u0F79\\\"] = \\\"\\\\u0FB3\\\\u0F81\\\";\\n        t[\\\"\\\\u1E9A\\\"] = \\\"a\\\\u02BE\\\";\\n        t[\\\"\\\\u1FBD\\\"] = \\\" \\\\u0313\\\";\\n        t[\\\"\\\\u1FBF\\\"] = \\\" \\\\u0313\\\";\\n        t[\\\"\\\\u1FC0\\\"] = \\\" \\\\u0342\\\";\\n        t[\\\"\\\\u1FFE\\\"] = \\\" \\\\u0314\\\";\\n        t[\\\"\\\\u2002\\\"] = \\\" \\\";\\n        t[\\\"\\\\u2003\\\"] = \\\" \\\";\\n        t[\\\"\\\\u2004\\\"] = \\\" \\\";\\n        t[\\\"\\\\u2005\\\"] = \\\" \\\";\\n        t[\\\"\\\\u2006\\\"] = \\\" \\\";\\n        t[\\\"\\\\u2008\\\"] = \\\" \\\";\\n        t[\\\"\\\\u2009\\\"] = \\\" \\\";\\n        t[\\\"\\\\u200A\\\"] = \\\" \\\";\\n        t[\\\"\\\\u2017\\\"] = \\\" \\\\u0333\\\";\\n        t[\\\"\\\\u2024\\\"] = \\\".\\\";\\n        t[\\\"\\\\u2025\\\"] = \\\"..\\\";\\n        t[\\\"\\\\u2026\\\"] = \\\"...\\\";\\n        t[\\\"\\\\u2033\\\"] = \\\"\\\\u2032\\\\u2032\\\";\\n        t[\\\"\\\\u2034\\\"] = \\\"\\\\u2032\\\\u2032\\\\u2032\\\";\\n        t[\\\"\\\\u2036\\\"] = \\\"\\\\u2035\\\\u2035\\\";\\n        t[\\\"\\\\u2037\\\"] = \\\"\\\\u2035\\\\u2035\\\\u2035\\\";\\n        t[\\\"\\\\u203C\\\"] = \\\"!!\\\";\\n        t[\\\"\\\\u203E\\\"] = \\\" \\\\u0305\\\";\\n        t[\\\"\\\\u2047\\\"] = \\\"??\\\";\\n        t[\\\"\\\\u2048\\\"] = \\\"?!\\\";\\n        t[\\\"\\\\u2049\\\"] = \\\"!?\\\";\\n        t[\\\"\\\\u2057\\\"] = \\\"\\\\u2032\\\\u2032\\\\u2032\\\\u2032\\\";\\n        t[\\\"\\\\u205F\\\"] = \\\" \\\";\\n        t[\\\"\\\\u20A8\\\"] = \\\"Rs\\\";\\n        t[\\\"\\\\u2100\\\"] = \\\"a/c\\\";\\n        t[\\\"\\\\u2101\\\"] = \\\"a/s\\\";\\n        t[\\\"\\\\u2103\\\"] = \\\"\\\\xB0C\\\";\\n        t[\\\"\\\\u2105\\\"] = \\\"c/o\\\";\\n        t[\\\"\\\\u2106\\\"] = \\\"c/u\\\";\\n        t[\\\"\\\\u2107\\\"] = \\\"\\\\u0190\\\";\\n        t[\\\"\\\\u2109\\\"] = \\\"\\\\xB0F\\\";\\n        t[\\\"\\\\u2116\\\"] = \\\"No\\\";\\n        t[\\\"\\\\u2121\\\"] = \\\"TEL\\\";\\n        t[\\\"\\\\u2135\\\"] = \\\"\\\\u05D0\\\";\\n        t[\\\"\\\\u2136\\\"] = \\\"\\\\u05D1\\\";\\n        t[\\\"\\\\u2137\\\"] = \\\"\\\\u05D2\\\";\\n        t[\\\"\\\\u2138\\\"] = \\\"\\\\u05D3\\\";\\n        t[\\\"\\\\u213B\\\"] = \\\"FAX\\\";\\n        t[\\\"\\\\u2160\\\"] = \\\"I\\\";\\n        t[\\\"\\\\u2161\\\"] = \\\"II\\\";\\n        t[\\\"\\\\u2162\\\"] = \\\"III\\\";\\n        t[\\\"\\\\u2163\\\"] = \\\"IV\\\";\\n        t[\\\"\\\\u2164\\\"] = \\\"V\\\";\\n        t[\\\"\\\\u2165\\\"] = \\\"VI\\\";\\n        t[\\\"\\\\u2166\\\"] = \\\"VII\\\";\\n        t[\\\"\\\\u2167\\\"] = \\\"VIII\\\";\\n        t[\\\"\\\\u2168\\\"] = \\\"IX\\\";\\n        t[\\\"\\\\u2169\\\"] = \\\"X\\\";\\n        t[\\\"\\\\u216A\\\"] = \\\"XI\\\";\\n        t[\\\"\\\\u216B\\\"] = \\\"XII\\\";\\n        t[\\\"\\\\u216C\\\"] = \\\"L\\\";\\n        t[\\\"\\\\u216D\\\"] = \\\"C\\\";\\n        t[\\\"\\\\u216E\\\"] = \\\"D\\\";\\n        t[\\\"\\\\u216F\\\"] = \\\"M\\\";\\n        t[\\\"\\\\u2170\\\"] = \\\"i\\\";\\n        t[\\\"\\\\u2171\\\"] = \\\"ii\\\";\\n        t[\\\"\\\\u2172\\\"] = \\\"iii\\\";\\n        t[\\\"\\\\u2173\\\"] = \\\"iv\\\";\\n        t[\\\"\\\\u2174\\\"] = \\\"v\\\";\\n        t[\\\"\\\\u2175\\\"] = \\\"vi\\\";\\n        t[\\\"\\\\u2176\\\"] = \\\"vii\\\";\\n        t[\\\"\\\\u2177\\\"] = \\\"viii\\\";\\n        t[\\\"\\\\u2178\\\"] = \\\"ix\\\";\\n        t[\\\"\\\\u2179\\\"] = \\\"x\\\";\\n        t[\\\"\\\\u217A\\\"] = \\\"xi\\\";\\n        t[\\\"\\\\u217B\\\"] = \\\"xii\\\";\\n        t[\\\"\\\\u217C\\\"] = \\\"l\\\";\\n        t[\\\"\\\\u217D\\\"] = \\\"c\\\";\\n        t[\\\"\\\\u217E\\\"] = \\\"d\\\";\\n        t[\\\"\\\\u217F\\\"] = \\\"m\\\";\\n        t[\\\"\\\\u222C\\\"] = \\\"\\\\u222B\\\\u222B\\\";\\n        t[\\\"\\\\u222D\\\"] = \\\"\\\\u222B\\\\u222B\\\\u222B\\\";\\n        t[\\\"\\\\u222F\\\"] = \\\"\\\\u222E\\\\u222E\\\";\\n        t[\\\"\\\\u2230\\\"] = \\\"\\\\u222E\\\\u222E\\\\u222E\\\";\\n        t[\\\"\\\\u2474\\\"] = \\\"(1)\\\";\\n        t[\\\"\\\\u2475\\\"] = \\\"(2)\\\";\\n        t[\\\"\\\\u2476\\\"] = \\\"(3)\\\";\\n        t[\\\"\\\\u2477\\\"] = \\\"(4)\\\";\\n        t[\\\"\\\\u2478\\\"] = \\\"(5)\\\";\\n        t[\\\"\\\\u2479\\\"] = \\\"(6)\\\";\\n        t[\\\"\\\\u247A\\\"] = \\\"(7)\\\";\\n        t[\\\"\\\\u247B\\\"] = \\\"(8)\\\";\\n        t[\\\"\\\\u247C\\\"] = \\\"(9)\\\";\\n        t[\\\"\\\\u247D\\\"] = \\\"(10)\\\";\\n        t[\\\"\\\\u247E\\\"] = \\\"(11)\\\";\\n        t[\\\"\\\\u247F\\\"] = \\\"(12)\\\";\\n        t[\\\"\\\\u2480\\\"] = \\\"(13)\\\";\\n        t[\\\"\\\\u2481\\\"] = \\\"(14)\\\";\\n        t[\\\"\\\\u2482\\\"] = \\\"(15)\\\";\\n        t[\\\"\\\\u2483\\\"] = \\\"(16)\\\";\\n        t[\\\"\\\\u2484\\\"] = \\\"(17)\\\";\\n        t[\\\"\\\\u2485\\\"] = \\\"(18)\\\";\\n        t[\\\"\\\\u2486\\\"] = \\\"(19)\\\";\\n        t[\\\"\\\\u2487\\\"] = \\\"(20)\\\";\\n        t[\\\"\\\\u2488\\\"] = \\\"1.\\\";\\n        t[\\\"\\\\u2489\\\"] = \\\"2.\\\";\\n        t[\\\"\\\\u248A\\\"] = \\\"3.\\\";\\n        t[\\\"\\\\u248B\\\"] = \\\"4.\\\";\\n        t[\\\"\\\\u248C\\\"] = \\\"5.\\\";\\n        t[\\\"\\\\u248D\\\"] = \\\"6.\\\";\\n        t[\\\"\\\\u248E\\\"] = \\\"7.\\\";\\n        t[\\\"\\\\u248F\\\"] = \\\"8.\\\";\\n        t[\\\"\\\\u2490\\\"] = \\\"9.\\\";\\n        t[\\\"\\\\u2491\\\"] = \\\"10.\\\";\\n        t[\\\"\\\\u2492\\\"] = \\\"11.\\\";\\n        t[\\\"\\\\u2493\\\"] = \\\"12.\\\";\\n        t[\\\"\\\\u2494\\\"] = \\\"13.\\\";\\n        t[\\\"\\\\u2495\\\"] = \\\"14.\\\";\\n        t[\\\"\\\\u2496\\\"] = \\\"15.\\\";\\n        t[\\\"\\\\u2497\\\"] = \\\"16.\\\";\\n        t[\\\"\\\\u2498\\\"] = \\\"17.\\\";\\n        t[\\\"\\\\u2499\\\"] = \\\"18.\\\";\\n        t[\\\"\\\\u249A\\\"] = \\\"19.\\\";\\n        t[\\\"\\\\u249B\\\"] = \\\"20.\\\";\\n        t[\\\"\\\\u249C\\\"] = \\\"(a)\\\";\\n        t[\\\"\\\\u249D\\\"] = \\\"(b)\\\";\\n        t[\\\"\\\\u249E\\\"] = \\\"(c)\\\";\\n        t[\\\"\\\\u249F\\\"] = \\\"(d)\\\";\\n        t[\\\"\\\\u24A0\\\"] = \\\"(e)\\\";\\n        t[\\\"\\\\u24A1\\\"] = \\\"(f)\\\";\\n        t[\\\"\\\\u24A2\\\"] = \\\"(g)\\\";\\n        t[\\\"\\\\u24A3\\\"] = \\\"(h)\\\";\\n        t[\\\"\\\\u24A4\\\"] = \\\"(i)\\\";\\n        t[\\\"\\\\u24A5\\\"] = \\\"(j)\\\";\\n        t[\\\"\\\\u24A6\\\"] = \\\"(k)\\\";\\n        t[\\\"\\\\u24A7\\\"] = \\\"(l)\\\";\\n        t[\\\"\\\\u24A8\\\"] = \\\"(m)\\\";\\n        t[\\\"\\\\u24A9\\\"] = \\\"(n)\\\";\\n        t[\\\"\\\\u24AA\\\"] = \\\"(o)\\\";\\n        t[\\\"\\\\u24AB\\\"] = \\\"(p)\\\";\\n        t[\\\"\\\\u24AC\\\"] = \\\"(q)\\\";\\n        t[\\\"\\\\u24AD\\\"] = \\\"(r)\\\";\\n        t[\\\"\\\\u24AE\\\"] = \\\"(s)\\\";\\n        t[\\\"\\\\u24AF\\\"] = \\\"(t)\\\";\\n        t[\\\"\\\\u24B0\\\"] = \\\"(u)\\\";\\n        t[\\\"\\\\u24B1\\\"] = \\\"(v)\\\";\\n        t[\\\"\\\\u24B2\\\"] = \\\"(w)\\\";\\n        t[\\\"\\\\u24B3\\\"] = \\\"(x)\\\";\\n        t[\\\"\\\\u24B4\\\"] = \\\"(y)\\\";\\n        t[\\\"\\\\u24B5\\\"] = \\\"(z)\\\";\\n        t[\\\"\\\\u2A0C\\\"] = \\\"\\\\u222B\\\\u222B\\\\u222B\\\\u222B\\\";\\n        t[\\\"\\\\u2A74\\\"] = \\\"::=\\\";\\n        t[\\\"\\\\u2A75\\\"] = \\\"==\\\";\\n        t[\\\"\\\\u2A76\\\"] = \\\"===\\\";\\n        t[\\\"\\\\u2E9F\\\"] = \\\"\\\\u6BCD\\\";\\n        t[\\\"\\\\u2EF3\\\"] = \\\"\\\\u9F9F\\\";\\n        t[\\\"\\\\u2F00\\\"] = \\\"\\\\u4E00\\\";\\n        t[\\\"\\\\u2F01\\\"] = \\\"\\\\u4E28\\\";\\n        t[\\\"\\\\u2F02\\\"] = \\\"\\\\u4E36\\\";\\n        t[\\\"\\\\u2F03\\\"] = \\\"\\\\u4E3F\\\";\\n        t[\\\"\\\\u2F04\\\"] = \\\"\\\\u4E59\\\";\\n        t[\\\"\\\\u2F05\\\"] = \\\"\\\\u4E85\\\";\\n        t[\\\"\\\\u2F06\\\"] = \\\"\\\\u4E8C\\\";\\n        t[\\\"\\\\u2F07\\\"] = \\\"\\\\u4EA0\\\";\\n        t[\\\"\\\\u2F08\\\"] = \\\"\\\\u4EBA\\\";\\n        t[\\\"\\\\u2F09\\\"] = \\\"\\\\u513F\\\";\\n        t[\\\"\\\\u2F0A\\\"] = \\\"\\\\u5165\\\";\\n        t[\\\"\\\\u2F0B\\\"] = \\\"\\\\u516B\\\";\\n        t[\\\"\\\\u2F0C\\\"] = \\\"\\\\u5182\\\";\\n        t[\\\"\\\\u2F0D\\\"] = \\\"\\\\u5196\\\";\\n        t[\\\"\\\\u2F0E\\\"] = \\\"\\\\u51AB\\\";\\n        t[\\\"\\\\u2F0F\\\"] = \\\"\\\\u51E0\\\";\\n        t[\\\"\\\\u2F10\\\"] = \\\"\\\\u51F5\\\";\\n        t[\\\"\\\\u2F11\\\"] = \\\"\\\\u5200\\\";\\n        t[\\\"\\\\u2F12\\\"] = \\\"\\\\u529B\\\";\\n        t[\\\"\\\\u2F13\\\"] = \\\"\\\\u52F9\\\";\\n        t[\\\"\\\\u2F14\\\"] = \\\"\\\\u5315\\\";\\n        t[\\\"\\\\u2F15\\\"] = \\\"\\\\u531A\\\";\\n        t[\\\"\\\\u2F16\\\"] = \\\"\\\\u5338\\\";\\n        t[\\\"\\\\u2F17\\\"] = \\\"\\\\u5341\\\";\\n        t[\\\"\\\\u2F18\\\"] = \\\"\\\\u535C\\\";\\n        t[\\\"\\\\u2F19\\\"] = \\\"\\\\u5369\\\";\\n        t[\\\"\\\\u2F1A\\\"] = \\\"\\\\u5382\\\";\\n        t[\\\"\\\\u2F1B\\\"] = \\\"\\\\u53B6\\\";\\n        t[\\\"\\\\u2F1C\\\"] = \\\"\\\\u53C8\\\";\\n        t[\\\"\\\\u2F1D\\\"] = \\\"\\\\u53E3\\\";\\n        t[\\\"\\\\u2F1E\\\"] = \\\"\\\\u56D7\\\";\\n        t[\\\"\\\\u2F1F\\\"] = \\\"\\\\u571F\\\";\\n        t[\\\"\\\\u2F20\\\"] = \\\"\\\\u58EB\\\";\\n        t[\\\"\\\\u2F21\\\"] = \\\"\\\\u5902\\\";\\n        t[\\\"\\\\u2F22\\\"] = \\\"\\\\u590A\\\";\\n        t[\\\"\\\\u2F23\\\"] = \\\"\\\\u5915\\\";\\n        t[\\\"\\\\u2F24\\\"] = \\\"\\\\u5927\\\";\\n        t[\\\"\\\\u2F25\\\"] = \\\"\\\\u5973\\\";\\n        t[\\\"\\\\u2F26\\\"] = \\\"\\\\u5B50\\\";\\n        t[\\\"\\\\u2F27\\\"] = \\\"\\\\u5B80\\\";\\n        t[\\\"\\\\u2F28\\\"] = \\\"\\\\u5BF8\\\";\\n        t[\\\"\\\\u2F29\\\"] = \\\"\\\\u5C0F\\\";\\n        t[\\\"\\\\u2F2A\\\"] = \\\"\\\\u5C22\\\";\\n        t[\\\"\\\\u2F2B\\\"] = \\\"\\\\u5C38\\\";\\n        t[\\\"\\\\u2F2C\\\"] = \\\"\\\\u5C6E\\\";\\n        t[\\\"\\\\u2F2D\\\"] = \\\"\\\\u5C71\\\";\\n        t[\\\"\\\\u2F2E\\\"] = \\\"\\\\u5DDB\\\";\\n        t[\\\"\\\\u2F2F\\\"] = \\\"\\\\u5DE5\\\";\\n        t[\\\"\\\\u2F30\\\"] = \\\"\\\\u5DF1\\\";\\n        t[\\\"\\\\u2F31\\\"] = \\\"\\\\u5DFE\\\";\\n        t[\\\"\\\\u2F32\\\"] = \\\"\\\\u5E72\\\";\\n        t[\\\"\\\\u2F33\\\"] = \\\"\\\\u5E7A\\\";\\n        t[\\\"\\\\u2F34\\\"] = \\\"\\\\u5E7F\\\";\\n        t[\\\"\\\\u2F35\\\"] = \\\"\\\\u5EF4\\\";\\n        t[\\\"\\\\u2F36\\\"] = \\\"\\\\u5EFE\\\";\\n        t[\\\"\\\\u2F37\\\"] = \\\"\\\\u5F0B\\\";\\n        t[\\\"\\\\u2F38\\\"] = \\\"\\\\u5F13\\\";\\n        t[\\\"\\\\u2F39\\\"] = \\\"\\\\u5F50\\\";\\n        t[\\\"\\\\u2F3A\\\"] = \\\"\\\\u5F61\\\";\\n        t[\\\"\\\\u2F3B\\\"] = \\\"\\\\u5F73\\\";\\n        t[\\\"\\\\u2F3C\\\"] = \\\"\\\\u5FC3\\\";\\n        t[\\\"\\\\u2F3D\\\"] = \\\"\\\\u6208\\\";\\n        t[\\\"\\\\u2F3E\\\"] = \\\"\\\\u6236\\\";\\n        t[\\\"\\\\u2F3F\\\"] = \\\"\\\\u624B\\\";\\n        t[\\\"\\\\u2F40\\\"] = \\\"\\\\u652F\\\";\\n        t[\\\"\\\\u2F41\\\"] = \\\"\\\\u6534\\\";\\n        t[\\\"\\\\u2F42\\\"] = \\\"\\\\u6587\\\";\\n        t[\\\"\\\\u2F43\\\"] = \\\"\\\\u6597\\\";\\n        t[\\\"\\\\u2F44\\\"] = \\\"\\\\u65A4\\\";\\n        t[\\\"\\\\u2F45\\\"] = \\\"\\\\u65B9\\\";\\n        t[\\\"\\\\u2F46\\\"] = \\\"\\\\u65E0\\\";\\n        t[\\\"\\\\u2F47\\\"] = \\\"\\\\u65E5\\\";\\n        t[\\\"\\\\u2F48\\\"] = \\\"\\\\u66F0\\\";\\n        t[\\\"\\\\u2F49\\\"] = \\\"\\\\u6708\\\";\\n        t[\\\"\\\\u2F4A\\\"] = \\\"\\\\u6728\\\";\\n        t[\\\"\\\\u2F4B\\\"] = \\\"\\\\u6B20\\\";\\n        t[\\\"\\\\u2F4C\\\"] = \\\"\\\\u6B62\\\";\\n        t[\\\"\\\\u2F4D\\\"] = \\\"\\\\u6B79\\\";\\n        t[\\\"\\\\u2F4E\\\"] = \\\"\\\\u6BB3\\\";\\n        t[\\\"\\\\u2F4F\\\"] = \\\"\\\\u6BCB\\\";\\n        t[\\\"\\\\u2F50\\\"] = \\\"\\\\u6BD4\\\";\\n        t[\\\"\\\\u2F51\\\"] = \\\"\\\\u6BDB\\\";\\n        t[\\\"\\\\u2F52\\\"] = \\\"\\\\u6C0F\\\";\\n        t[\\\"\\\\u2F53\\\"] = \\\"\\\\u6C14\\\";\\n        t[\\\"\\\\u2F54\\\"] = \\\"\\\\u6C34\\\";\\n        t[\\\"\\\\u2F55\\\"] = \\\"\\\\u706B\\\";\\n        t[\\\"\\\\u2F56\\\"] = \\\"\\\\u722A\\\";\\n        t[\\\"\\\\u2F57\\\"] = \\\"\\\\u7236\\\";\\n        t[\\\"\\\\u2F58\\\"] = \\\"\\\\u723B\\\";\\n        t[\\\"\\\\u2F59\\\"] = \\\"\\\\u723F\\\";\\n        t[\\\"\\\\u2F5A\\\"] = \\\"\\\\u7247\\\";\\n        t[\\\"\\\\u2F5B\\\"] = \\\"\\\\u7259\\\";\\n        t[\\\"\\\\u2F5C\\\"] = \\\"\\\\u725B\\\";\\n        t[\\\"\\\\u2F5D\\\"] = \\\"\\\\u72AC\\\";\\n        t[\\\"\\\\u2F5E\\\"] = \\\"\\\\u7384\\\";\\n        t[\\\"\\\\u2F5F\\\"] = \\\"\\\\u7389\\\";\\n        t[\\\"\\\\u2F60\\\"] = \\\"\\\\u74DC\\\";\\n        t[\\\"\\\\u2F61\\\"] = \\\"\\\\u74E6\\\";\\n        t[\\\"\\\\u2F62\\\"] = \\\"\\\\u7518\\\";\\n        t[\\\"\\\\u2F63\\\"] = \\\"\\\\u751F\\\";\\n        t[\\\"\\\\u2F64\\\"] = \\\"\\\\u7528\\\";\\n        t[\\\"\\\\u2F65\\\"] = \\\"\\\\u7530\\\";\\n        t[\\\"\\\\u2F66\\\"] = \\\"\\\\u758B\\\";\\n        t[\\\"\\\\u2F67\\\"] = \\\"\\\\u7592\\\";\\n        t[\\\"\\\\u2F68\\\"] = \\\"\\\\u7676\\\";\\n        t[\\\"\\\\u2F69\\\"] = \\\"\\\\u767D\\\";\\n        t[\\\"\\\\u2F6A\\\"] = \\\"\\\\u76AE\\\";\\n        t[\\\"\\\\u2F6B\\\"] = \\\"\\\\u76BF\\\";\\n        t[\\\"\\\\u2F6C\\\"] = \\\"\\\\u76EE\\\";\\n        t[\\\"\\\\u2F6D\\\"] = \\\"\\\\u77DB\\\";\\n        t[\\\"\\\\u2F6E\\\"] = \\\"\\\\u77E2\\\";\\n        t[\\\"\\\\u2F6F\\\"] = \\\"\\\\u77F3\\\";\\n        t[\\\"\\\\u2F70\\\"] = \\\"\\\\u793A\\\";\\n        t[\\\"\\\\u2F71\\\"] = \\\"\\\\u79B8\\\";\\n        t[\\\"\\\\u2F72\\\"] = \\\"\\\\u79BE\\\";\\n        t[\\\"\\\\u2F73\\\"] = \\\"\\\\u7A74\\\";\\n        t[\\\"\\\\u2F74\\\"] = \\\"\\\\u7ACB\\\";\\n        t[\\\"\\\\u2F75\\\"] = \\\"\\\\u7AF9\\\";\\n        t[\\\"\\\\u2F76\\\"] = \\\"\\\\u7C73\\\";\\n        t[\\\"\\\\u2F77\\\"] = \\\"\\\\u7CF8\\\";\\n        t[\\\"\\\\u2F78\\\"] = \\\"\\\\u7F36\\\";\\n        t[\\\"\\\\u2F79\\\"] = \\\"\\\\u7F51\\\";\\n        t[\\\"\\\\u2F7A\\\"] = \\\"\\\\u7F8A\\\";\\n        t[\\\"\\\\u2F7B\\\"] = \\\"\\\\u7FBD\\\";\\n        t[\\\"\\\\u2F7C\\\"] = \\\"\\\\u8001\\\";\\n        t[\\\"\\\\u2F7D\\\"] = \\\"\\\\u800C\\\";\\n        t[\\\"\\\\u2F7E\\\"] = \\\"\\\\u8012\\\";\\n        t[\\\"\\\\u2F7F\\\"] = \\\"\\\\u8033\\\";\\n        t[\\\"\\\\u2F80\\\"] = \\\"\\\\u807F\\\";\\n        t[\\\"\\\\u2F81\\\"] = \\\"\\\\u8089\\\";\\n        t[\\\"\\\\u2F82\\\"] = \\\"\\\\u81E3\\\";\\n        t[\\\"\\\\u2F83\\\"] = \\\"\\\\u81EA\\\";\\n        t[\\\"\\\\u2F84\\\"] = \\\"\\\\u81F3\\\";\\n        t[\\\"\\\\u2F85\\\"] = \\\"\\\\u81FC\\\";\\n        t[\\\"\\\\u2F86\\\"] = \\\"\\\\u820C\\\";\\n        t[\\\"\\\\u2F87\\\"] = \\\"\\\\u821B\\\";\\n        t[\\\"\\\\u2F88\\\"] = \\\"\\\\u821F\\\";\\n        t[\\\"\\\\u2F89\\\"] = \\\"\\\\u826E\\\";\\n        t[\\\"\\\\u2F8A\\\"] = \\\"\\\\u8272\\\";\\n        t[\\\"\\\\u2F8B\\\"] = \\\"\\\\u8278\\\";\\n        t[\\\"\\\\u2F8C\\\"] = \\\"\\\\u864D\\\";\\n        t[\\\"\\\\u2F8D\\\"] = \\\"\\\\u866B\\\";\\n        t[\\\"\\\\u2F8E\\\"] = \\\"\\\\u8840\\\";\\n        t[\\\"\\\\u2F8F\\\"] = \\\"\\\\u884C\\\";\\n        t[\\\"\\\\u2F90\\\"] = \\\"\\\\u8863\\\";\\n        t[\\\"\\\\u2F91\\\"] = \\\"\\\\u897E\\\";\\n        t[\\\"\\\\u2F92\\\"] = \\\"\\\\u898B\\\";\\n        t[\\\"\\\\u2F93\\\"] = \\\"\\\\u89D2\\\";\\n        t[\\\"\\\\u2F94\\\"] = \\\"\\\\u8A00\\\";\\n        t[\\\"\\\\u2F95\\\"] = \\\"\\\\u8C37\\\";\\n        t[\\\"\\\\u2F96\\\"] = \\\"\\\\u8C46\\\";\\n        t[\\\"\\\\u2F97\\\"] = \\\"\\\\u8C55\\\";\\n        t[\\\"\\\\u2F98\\\"] = \\\"\\\\u8C78\\\";\\n        t[\\\"\\\\u2F99\\\"] = \\\"\\\\u8C9D\\\";\\n        t[\\\"\\\\u2F9A\\\"] = \\\"\\\\u8D64\\\";\\n        t[\\\"\\\\u2F9B\\\"] = \\\"\\\\u8D70\\\";\\n        t[\\\"\\\\u2F9C\\\"] = \\\"\\\\u8DB3\\\";\\n        t[\\\"\\\\u2F9D\\\"] = \\\"\\\\u8EAB\\\";\\n        t[\\\"\\\\u2F9E\\\"] = \\\"\\\\u8ECA\\\";\\n        t[\\\"\\\\u2F9F\\\"] = \\\"\\\\u8F9B\\\";\\n        t[\\\"\\\\u2FA0\\\"] = \\\"\\\\u8FB0\\\";\\n        t[\\\"\\\\u2FA1\\\"] = \\\"\\\\u8FB5\\\";\\n        t[\\\"\\\\u2FA2\\\"] = \\\"\\\\u9091\\\";\\n        t[\\\"\\\\u2FA3\\\"] = \\\"\\\\u9149\\\";\\n        t[\\\"\\\\u2FA4\\\"] = \\\"\\\\u91C6\\\";\\n        t[\\\"\\\\u2FA5\\\"] = \\\"\\\\u91CC\\\";\\n        t[\\\"\\\\u2FA6\\\"] = \\\"\\\\u91D1\\\";\\n        t[\\\"\\\\u2FA7\\\"] = \\\"\\\\u9577\\\";\\n        t[\\\"\\\\u2FA8\\\"] = \\\"\\\\u9580\\\";\\n        t[\\\"\\\\u2FA9\\\"] = \\\"\\\\u961C\\\";\\n        t[\\\"\\\\u2FAA\\\"] = \\\"\\\\u96B6\\\";\\n        t[\\\"\\\\u2FAB\\\"] = \\\"\\\\u96B9\\\";\\n        t[\\\"\\\\u2FAC\\\"] = \\\"\\\\u96E8\\\";\\n        t[\\\"\\\\u2FAD\\\"] = \\\"\\\\u9751\\\";\\n        t[\\\"\\\\u2FAE\\\"] = \\\"\\\\u975E\\\";\\n        t[\\\"\\\\u2FAF\\\"] = \\\"\\\\u9762\\\";\\n        t[\\\"\\\\u2FB0\\\"] = \\\"\\\\u9769\\\";\\n        t[\\\"\\\\u2FB1\\\"] = \\\"\\\\u97CB\\\";\\n        t[\\\"\\\\u2FB2\\\"] = \\\"\\\\u97ED\\\";\\n        t[\\\"\\\\u2FB3\\\"] = \\\"\\\\u97F3\\\";\\n        t[\\\"\\\\u2FB4\\\"] = \\\"\\\\u9801\\\";\\n        t[\\\"\\\\u2FB5\\\"] = \\\"\\\\u98A8\\\";\\n        t[\\\"\\\\u2FB6\\\"] = \\\"\\\\u98DB\\\";\\n        t[\\\"\\\\u2FB7\\\"] = \\\"\\\\u98DF\\\";\\n        t[\\\"\\\\u2FB8\\\"] = \\\"\\\\u9996\\\";\\n        t[\\\"\\\\u2FB9\\\"] = \\\"\\\\u9999\\\";\\n        t[\\\"\\\\u2FBA\\\"] = \\\"\\\\u99AC\\\";\\n        t[\\\"\\\\u2FBB\\\"] = \\\"\\\\u9AA8\\\";\\n        t[\\\"\\\\u2FBC\\\"] = \\\"\\\\u9AD8\\\";\\n        t[\\\"\\\\u2FBD\\\"] = \\\"\\\\u9ADF\\\";\\n        t[\\\"\\\\u2FBE\\\"] = \\\"\\\\u9B25\\\";\\n        t[\\\"\\\\u2FBF\\\"] = \\\"\\\\u9B2F\\\";\\n        t[\\\"\\\\u2FC0\\\"] = \\\"\\\\u9B32\\\";\\n        t[\\\"\\\\u2FC1\\\"] = \\\"\\\\u9B3C\\\";\\n        t[\\\"\\\\u2FC2\\\"] = \\\"\\\\u9B5A\\\";\\n        t[\\\"\\\\u2FC3\\\"] = \\\"\\\\u9CE5\\\";\\n        t[\\\"\\\\u2FC4\\\"] = \\\"\\\\u9E75\\\";\\n        t[\\\"\\\\u2FC5\\\"] = \\\"\\\\u9E7F\\\";\\n        t[\\\"\\\\u2FC6\\\"] = \\\"\\\\u9EA5\\\";\\n        t[\\\"\\\\u2FC7\\\"] = \\\"\\\\u9EBB\\\";\\n        t[\\\"\\\\u2FC8\\\"] = \\\"\\\\u9EC3\\\";\\n        t[\\\"\\\\u2FC9\\\"] = \\\"\\\\u9ECD\\\";\\n        t[\\\"\\\\u2FCA\\\"] = \\\"\\\\u9ED1\\\";\\n        t[\\\"\\\\u2FCB\\\"] = \\\"\\\\u9EF9\\\";\\n        t[\\\"\\\\u2FCC\\\"] = \\\"\\\\u9EFD\\\";\\n        t[\\\"\\\\u2FCD\\\"] = \\\"\\\\u9F0E\\\";\\n        t[\\\"\\\\u2FCE\\\"] = \\\"\\\\u9F13\\\";\\n        t[\\\"\\\\u2FCF\\\"] = \\\"\\\\u9F20\\\";\\n        t[\\\"\\\\u2FD0\\\"] = \\\"\\\\u9F3B\\\";\\n        t[\\\"\\\\u2FD1\\\"] = \\\"\\\\u9F4A\\\";\\n        t[\\\"\\\\u2FD2\\\"] = \\\"\\\\u9F52\\\";\\n        t[\\\"\\\\u2FD3\\\"] = \\\"\\\\u9F8D\\\";\\n        t[\\\"\\\\u2FD4\\\"] = \\\"\\\\u9F9C\\\";\\n        t[\\\"\\\\u2FD5\\\"] = \\\"\\\\u9FA0\\\";\\n        t[\\\"\\\\u3036\\\"] = \\\"\\\\u3012\\\";\\n        t[\\\"\\\\u3038\\\"] = \\\"\\\\u5341\\\";\\n        t[\\\"\\\\u3039\\\"] = \\\"\\\\u5344\\\";\\n        t[\\\"\\\\u303A\\\"] = \\\"\\\\u5345\\\";\\n        t[\\\"\\\\u309B\\\"] = \\\" \\\\u3099\\\";\\n        t[\\\"\\\\u309C\\\"] = \\\" \\\\u309A\\\";\\n        t[\\\"\\\\u3131\\\"] = \\\"\\\\u1100\\\";\\n        t[\\\"\\\\u3132\\\"] = \\\"\\\\u1101\\\";\\n        t[\\\"\\\\u3133\\\"] = \\\"\\\\u11AA\\\";\\n        t[\\\"\\\\u3134\\\"] = \\\"\\\\u1102\\\";\\n        t[\\\"\\\\u3135\\\"] = \\\"\\\\u11AC\\\";\\n        t[\\\"\\\\u3136\\\"] = \\\"\\\\u11AD\\\";\\n        t[\\\"\\\\u3137\\\"] = \\\"\\\\u1103\\\";\\n        t[\\\"\\\\u3138\\\"] = \\\"\\\\u1104\\\";\\n        t[\\\"\\\\u3139\\\"] = \\\"\\\\u1105\\\";\\n        t[\\\"\\\\u313A\\\"] = \\\"\\\\u11B0\\\";\\n        t[\\\"\\\\u313B\\\"] = \\\"\\\\u11B1\\\";\\n        t[\\\"\\\\u313C\\\"] = \\\"\\\\u11B2\\\";\\n        t[\\\"\\\\u313D\\\"] = \\\"\\\\u11B3\\\";\\n        t[\\\"\\\\u313E\\\"] = \\\"\\\\u11B4\\\";\\n        t[\\\"\\\\u313F\\\"] = \\\"\\\\u11B5\\\";\\n        t[\\\"\\\\u3140\\\"] = \\\"\\\\u111A\\\";\\n        t[\\\"\\\\u3141\\\"] = \\\"\\\\u1106\\\";\\n        t[\\\"\\\\u3142\\\"] = \\\"\\\\u1107\\\";\\n        t[\\\"\\\\u3143\\\"] = \\\"\\\\u1108\\\";\\n        t[\\\"\\\\u3144\\\"] = \\\"\\\\u1121\\\";\\n        t[\\\"\\\\u3145\\\"] = \\\"\\\\u1109\\\";\\n        t[\\\"\\\\u3146\\\"] = \\\"\\\\u110A\\\";\\n        t[\\\"\\\\u3147\\\"] = \\\"\\\\u110B\\\";\\n        t[\\\"\\\\u3148\\\"] = \\\"\\\\u110C\\\";\\n        t[\\\"\\\\u3149\\\"] = \\\"\\\\u110D\\\";\\n        t[\\\"\\\\u314A\\\"] = \\\"\\\\u110E\\\";\\n        t[\\\"\\\\u314B\\\"] = \\\"\\\\u110F\\\";\\n        t[\\\"\\\\u314C\\\"] = \\\"\\\\u1110\\\";\\n        t[\\\"\\\\u314D\\\"] = \\\"\\\\u1111\\\";\\n        t[\\\"\\\\u314E\\\"] = \\\"\\\\u1112\\\";\\n        t[\\\"\\\\u314F\\\"] = \\\"\\\\u1161\\\";\\n        t[\\\"\\\\u3150\\\"] = \\\"\\\\u1162\\\";\\n        t[\\\"\\\\u3151\\\"] = \\\"\\\\u1163\\\";\\n        t[\\\"\\\\u3152\\\"] = \\\"\\\\u1164\\\";\\n        t[\\\"\\\\u3153\\\"] = \\\"\\\\u1165\\\";\\n        t[\\\"\\\\u3154\\\"] = \\\"\\\\u1166\\\";\\n        t[\\\"\\\\u3155\\\"] = \\\"\\\\u1167\\\";\\n        t[\\\"\\\\u3156\\\"] = \\\"\\\\u1168\\\";\\n        t[\\\"\\\\u3157\\\"] = \\\"\\\\u1169\\\";\\n        t[\\\"\\\\u3158\\\"] = \\\"\\\\u116A\\\";\\n        t[\\\"\\\\u3159\\\"] = \\\"\\\\u116B\\\";\\n        t[\\\"\\\\u315A\\\"] = \\\"\\\\u116C\\\";\\n        t[\\\"\\\\u315B\\\"] = \\\"\\\\u116D\\\";\\n        t[\\\"\\\\u315C\\\"] = \\\"\\\\u116E\\\";\\n        t[\\\"\\\\u315D\\\"] = \\\"\\\\u116F\\\";\\n        t[\\\"\\\\u315E\\\"] = \\\"\\\\u1170\\\";\\n        t[\\\"\\\\u315F\\\"] = \\\"\\\\u1171\\\";\\n        t[\\\"\\\\u3160\\\"] = \\\"\\\\u1172\\\";\\n        t[\\\"\\\\u3161\\\"] = \\\"\\\\u1173\\\";\\n        t[\\\"\\\\u3162\\\"] = \\\"\\\\u1174\\\";\\n        t[\\\"\\\\u3163\\\"] = \\\"\\\\u1175\\\";\\n        t[\\\"\\\\u3164\\\"] = \\\"\\\\u1160\\\";\\n        t[\\\"\\\\u3165\\\"] = \\\"\\\\u1114\\\";\\n        t[\\\"\\\\u3166\\\"] = \\\"\\\\u1115\\\";\\n        t[\\\"\\\\u3167\\\"] = \\\"\\\\u11C7\\\";\\n        t[\\\"\\\\u3168\\\"] = \\\"\\\\u11C8\\\";\\n        t[\\\"\\\\u3169\\\"] = \\\"\\\\u11CC\\\";\\n        t[\\\"\\\\u316A\\\"] = \\\"\\\\u11CE\\\";\\n        t[\\\"\\\\u316B\\\"] = \\\"\\\\u11D3\\\";\\n        t[\\\"\\\\u316C\\\"] = \\\"\\\\u11D7\\\";\\n        t[\\\"\\\\u316D\\\"] = \\\"\\\\u11D9\\\";\\n        t[\\\"\\\\u316E\\\"] = \\\"\\\\u111C\\\";\\n        t[\\\"\\\\u316F\\\"] = \\\"\\\\u11DD\\\";\\n        t[\\\"\\\\u3170\\\"] = \\\"\\\\u11DF\\\";\\n        t[\\\"\\\\u3171\\\"] = \\\"\\\\u111D\\\";\\n        t[\\\"\\\\u3172\\\"] = \\\"\\\\u111E\\\";\\n        t[\\\"\\\\u3173\\\"] = \\\"\\\\u1120\\\";\\n        t[\\\"\\\\u3174\\\"] = \\\"\\\\u1122\\\";\\n        t[\\\"\\\\u3175\\\"] = \\\"\\\\u1123\\\";\\n        t[\\\"\\\\u3176\\\"] = \\\"\\\\u1127\\\";\\n        t[\\\"\\\\u3177\\\"] = \\\"\\\\u1129\\\";\\n        t[\\\"\\\\u3178\\\"] = \\\"\\\\u112B\\\";\\n        t[\\\"\\\\u3179\\\"] = \\\"\\\\u112C\\\";\\n        t[\\\"\\\\u317A\\\"] = \\\"\\\\u112D\\\";\\n        t[\\\"\\\\u317B\\\"] = \\\"\\\\u112E\\\";\\n        t[\\\"\\\\u317C\\\"] = \\\"\\\\u112F\\\";\\n        t[\\\"\\\\u317D\\\"] = \\\"\\\\u1132\\\";\\n        t[\\\"\\\\u317E\\\"] = \\\"\\\\u1136\\\";\\n        t[\\\"\\\\u317F\\\"] = \\\"\\\\u1140\\\";\\n        t[\\\"\\\\u3180\\\"] = \\\"\\\\u1147\\\";\\n        t[\\\"\\\\u3181\\\"] = \\\"\\\\u114C\\\";\\n        t[\\\"\\\\u3182\\\"] = \\\"\\\\u11F1\\\";\\n        t[\\\"\\\\u3183\\\"] = \\\"\\\\u11F2\\\";\\n        t[\\\"\\\\u3184\\\"] = \\\"\\\\u1157\\\";\\n        t[\\\"\\\\u3185\\\"] = \\\"\\\\u1158\\\";\\n        t[\\\"\\\\u3186\\\"] = \\\"\\\\u1159\\\";\\n        t[\\\"\\\\u3187\\\"] = \\\"\\\\u1184\\\";\\n        t[\\\"\\\\u3188\\\"] = \\\"\\\\u1185\\\";\\n        t[\\\"\\\\u3189\\\"] = \\\"\\\\u1188\\\";\\n        t[\\\"\\\\u318A\\\"] = \\\"\\\\u1191\\\";\\n        t[\\\"\\\\u318B\\\"] = \\\"\\\\u1192\\\";\\n        t[\\\"\\\\u318C\\\"] = \\\"\\\\u1194\\\";\\n        t[\\\"\\\\u318D\\\"] = \\\"\\\\u119E\\\";\\n        t[\\\"\\\\u318E\\\"] = \\\"\\\\u11A1\\\";\\n        t[\\\"\\\\u3200\\\"] = \\\"(\\\\u1100)\\\";\\n        t[\\\"\\\\u3201\\\"] = \\\"(\\\\u1102)\\\";\\n        t[\\\"\\\\u3202\\\"] = \\\"(\\\\u1103)\\\";\\n        t[\\\"\\\\u3203\\\"] = \\\"(\\\\u1105)\\\";\\n        t[\\\"\\\\u3204\\\"] = \\\"(\\\\u1106)\\\";\\n        t[\\\"\\\\u3205\\\"] = \\\"(\\\\u1107)\\\";\\n        t[\\\"\\\\u3206\\\"] = \\\"(\\\\u1109)\\\";\\n        t[\\\"\\\\u3207\\\"] = \\\"(\\\\u110B)\\\";\\n        t[\\\"\\\\u3208\\\"] = \\\"(\\\\u110C)\\\";\\n        t[\\\"\\\\u3209\\\"] = \\\"(\\\\u110E)\\\";\\n        t[\\\"\\\\u320A\\\"] = \\\"(\\\\u110F)\\\";\\n        t[\\\"\\\\u320B\\\"] = \\\"(\\\\u1110)\\\";\\n        t[\\\"\\\\u320C\\\"] = \\\"(\\\\u1111)\\\";\\n        t[\\\"\\\\u320D\\\"] = \\\"(\\\\u1112)\\\";\\n        t[\\\"\\\\u320E\\\"] = \\\"(\\\\u1100\\\\u1161)\\\";\\n        t[\\\"\\\\u320F\\\"] = \\\"(\\\\u1102\\\\u1161)\\\";\\n        t[\\\"\\\\u3210\\\"] = \\\"(\\\\u1103\\\\u1161)\\\";\\n        t[\\\"\\\\u3211\\\"] = \\\"(\\\\u1105\\\\u1161)\\\";\\n        t[\\\"\\\\u3212\\\"] = \\\"(\\\\u1106\\\\u1161)\\\";\\n        t[\\\"\\\\u3213\\\"] = \\\"(\\\\u1107\\\\u1161)\\\";\\n        t[\\\"\\\\u3214\\\"] = \\\"(\\\\u1109\\\\u1161)\\\";\\n        t[\\\"\\\\u3215\\\"] = \\\"(\\\\u110B\\\\u1161)\\\";\\n        t[\\\"\\\\u3216\\\"] = \\\"(\\\\u110C\\\\u1161)\\\";\\n        t[\\\"\\\\u3217\\\"] = \\\"(\\\\u110E\\\\u1161)\\\";\\n        t[\\\"\\\\u3218\\\"] = \\\"(\\\\u110F\\\\u1161)\\\";\\n        t[\\\"\\\\u3219\\\"] = \\\"(\\\\u1110\\\\u1161)\\\";\\n        t[\\\"\\\\u321A\\\"] = \\\"(\\\\u1111\\\\u1161)\\\";\\n        t[\\\"\\\\u321B\\\"] = \\\"(\\\\u1112\\\\u1161)\\\";\\n        t[\\\"\\\\u321C\\\"] = \\\"(\\\\u110C\\\\u116E)\\\";\\n        t[\\\"\\\\u321D\\\"] = \\\"(\\\\u110B\\\\u1169\\\\u110C\\\\u1165\\\\u11AB)\\\";\\n        t[\\\"\\\\u321E\\\"] = \\\"(\\\\u110B\\\\u1169\\\\u1112\\\\u116E)\\\";\\n        t[\\\"\\\\u3220\\\"] = \\\"(\\\\u4E00)\\\";\\n        t[\\\"\\\\u3221\\\"] = \\\"(\\\\u4E8C)\\\";\\n        t[\\\"\\\\u3222\\\"] = \\\"(\\\\u4E09)\\\";\\n        t[\\\"\\\\u3223\\\"] = \\\"(\\\\u56DB)\\\";\\n        t[\\\"\\\\u3224\\\"] = \\\"(\\\\u4E94)\\\";\\n        t[\\\"\\\\u3225\\\"] = \\\"(\\\\u516D)\\\";\\n        t[\\\"\\\\u3226\\\"] = \\\"(\\\\u4E03)\\\";\\n        t[\\\"\\\\u3227\\\"] = \\\"(\\\\u516B)\\\";\\n        t[\\\"\\\\u3228\\\"] = \\\"(\\\\u4E5D)\\\";\\n        t[\\\"\\\\u3229\\\"] = \\\"(\\\\u5341)\\\";\\n        t[\\\"\\\\u322A\\\"] = \\\"(\\\\u6708)\\\";\\n        t[\\\"\\\\u322B\\\"] = \\\"(\\\\u706B)\\\";\\n        t[\\\"\\\\u322C\\\"] = \\\"(\\\\u6C34)\\\";\\n        t[\\\"\\\\u322D\\\"] = \\\"(\\\\u6728)\\\";\\n        t[\\\"\\\\u322E\\\"] = \\\"(\\\\u91D1)\\\";\\n        t[\\\"\\\\u322F\\\"] = \\\"(\\\\u571F)\\\";\\n        t[\\\"\\\\u3230\\\"] = \\\"(\\\\u65E5)\\\";\\n        t[\\\"\\\\u3231\\\"] = \\\"(\\\\u682A)\\\";\\n        t[\\\"\\\\u3232\\\"] = \\\"(\\\\u6709)\\\";\\n        t[\\\"\\\\u3233\\\"] = \\\"(\\\\u793E)\\\";\\n        t[\\\"\\\\u3234\\\"] = \\\"(\\\\u540D)\\\";\\n        t[\\\"\\\\u3235\\\"] = \\\"(\\\\u7279)\\\";\\n        t[\\\"\\\\u3236\\\"] = \\\"(\\\\u8CA1)\\\";\\n        t[\\\"\\\\u3237\\\"] = \\\"(\\\\u795D)\\\";\\n        t[\\\"\\\\u3238\\\"] = \\\"(\\\\u52B4)\\\";\\n        t[\\\"\\\\u3239\\\"] = \\\"(\\\\u4EE3)\\\";\\n        t[\\\"\\\\u323A\\\"] = \\\"(\\\\u547C)\\\";\\n        t[\\\"\\\\u323B\\\"] = \\\"(\\\\u5B66)\\\";\\n        t[\\\"\\\\u323C\\\"] = \\\"(\\\\u76E3)\\\";\\n        t[\\\"\\\\u323D\\\"] = \\\"(\\\\u4F01)\\\";\\n        t[\\\"\\\\u323E\\\"] = \\\"(\\\\u8CC7)\\\";\\n        t[\\\"\\\\u323F\\\"] = \\\"(\\\\u5354)\\\";\\n        t[\\\"\\\\u3240\\\"] = \\\"(\\\\u796D)\\\";\\n        t[\\\"\\\\u3241\\\"] = \\\"(\\\\u4F11)\\\";\\n        t[\\\"\\\\u3242\\\"] = \\\"(\\\\u81EA)\\\";\\n        t[\\\"\\\\u3243\\\"] = \\\"(\\\\u81F3)\\\";\\n        t[\\\"\\\\u32C0\\\"] = \\\"1\\\\u6708\\\";\\n        t[\\\"\\\\u32C1\\\"] = \\\"2\\\\u6708\\\";\\n        t[\\\"\\\\u32C2\\\"] = \\\"3\\\\u6708\\\";\\n        t[\\\"\\\\u32C3\\\"] = \\\"4\\\\u6708\\\";\\n        t[\\\"\\\\u32C4\\\"] = \\\"5\\\\u6708\\\";\\n        t[\\\"\\\\u32C5\\\"] = \\\"6\\\\u6708\\\";\\n        t[\\\"\\\\u32C6\\\"] = \\\"7\\\\u6708\\\";\\n        t[\\\"\\\\u32C7\\\"] = \\\"8\\\\u6708\\\";\\n        t[\\\"\\\\u32C8\\\"] = \\\"9\\\\u6708\\\";\\n        t[\\\"\\\\u32C9\\\"] = \\\"10\\\\u6708\\\";\\n        t[\\\"\\\\u32CA\\\"] = \\\"11\\\\u6708\\\";\\n        t[\\\"\\\\u32CB\\\"] = \\\"12\\\\u6708\\\";\\n        t[\\\"\\\\u3358\\\"] = \\\"0\\\\u70B9\\\";\\n        t[\\\"\\\\u3359\\\"] = \\\"1\\\\u70B9\\\";\\n        t[\\\"\\\\u335A\\\"] = \\\"2\\\\u70B9\\\";\\n        t[\\\"\\\\u335B\\\"] = \\\"3\\\\u70B9\\\";\\n        t[\\\"\\\\u335C\\\"] = \\\"4\\\\u70B9\\\";\\n        t[\\\"\\\\u335D\\\"] = \\\"5\\\\u70B9\\\";\\n        t[\\\"\\\\u335E\\\"] = \\\"6\\\\u70B9\\\";\\n        t[\\\"\\\\u335F\\\"] = \\\"7\\\\u70B9\\\";\\n        t[\\\"\\\\u3360\\\"] = \\\"8\\\\u70B9\\\";\\n        t[\\\"\\\\u3361\\\"] = \\\"9\\\\u70B9\\\";\\n        t[\\\"\\\\u3362\\\"] = \\\"10\\\\u70B9\\\";\\n        t[\\\"\\\\u3363\\\"] = \\\"11\\\\u70B9\\\";\\n        t[\\\"\\\\u3364\\\"] = \\\"12\\\\u70B9\\\";\\n        t[\\\"\\\\u3365\\\"] = \\\"13\\\\u70B9\\\";\\n        t[\\\"\\\\u3366\\\"] = \\\"14\\\\u70B9\\\";\\n        t[\\\"\\\\u3367\\\"] = \\\"15\\\\u70B9\\\";\\n        t[\\\"\\\\u3368\\\"] = \\\"16\\\\u70B9\\\";\\n        t[\\\"\\\\u3369\\\"] = \\\"17\\\\u70B9\\\";\\n        t[\\\"\\\\u336A\\\"] = \\\"18\\\\u70B9\\\";\\n        t[\\\"\\\\u336B\\\"] = \\\"19\\\\u70B9\\\";\\n        t[\\\"\\\\u336C\\\"] = \\\"20\\\\u70B9\\\";\\n        t[\\\"\\\\u336D\\\"] = \\\"21\\\\u70B9\\\";\\n        t[\\\"\\\\u336E\\\"] = \\\"22\\\\u70B9\\\";\\n        t[\\\"\\\\u336F\\\"] = \\\"23\\\\u70B9\\\";\\n        t[\\\"\\\\u3370\\\"] = \\\"24\\\\u70B9\\\";\\n        t[\\\"\\\\u33E0\\\"] = \\\"1\\\\u65E5\\\";\\n        t[\\\"\\\\u33E1\\\"] = \\\"2\\\\u65E5\\\";\\n        t[\\\"\\\\u33E2\\\"] = \\\"3\\\\u65E5\\\";\\n        t[\\\"\\\\u33E3\\\"] = \\\"4\\\\u65E5\\\";\\n        t[\\\"\\\\u33E4\\\"] = \\\"5\\\\u65E5\\\";\\n        t[\\\"\\\\u33E5\\\"] = \\\"6\\\\u65E5\\\";\\n        t[\\\"\\\\u33E6\\\"] = \\\"7\\\\u65E5\\\";\\n        t[\\\"\\\\u33E7\\\"] = \\\"8\\\\u65E5\\\";\\n        t[\\\"\\\\u33E8\\\"] = \\\"9\\\\u65E5\\\";\\n        t[\\\"\\\\u33E9\\\"] = \\\"10\\\\u65E5\\\";\\n        t[\\\"\\\\u33EA\\\"] = \\\"11\\\\u65E5\\\";\\n        t[\\\"\\\\u33EB\\\"] = \\\"12\\\\u65E5\\\";\\n        t[\\\"\\\\u33EC\\\"] = \\\"13\\\\u65E5\\\";\\n        t[\\\"\\\\u33ED\\\"] = \\\"14\\\\u65E5\\\";\\n        t[\\\"\\\\u33EE\\\"] = \\\"15\\\\u65E5\\\";\\n        t[\\\"\\\\u33EF\\\"] = \\\"16\\\\u65E5\\\";\\n        t[\\\"\\\\u33F0\\\"] = \\\"17\\\\u65E5\\\";\\n        t[\\\"\\\\u33F1\\\"] = \\\"18\\\\u65E5\\\";\\n        t[\\\"\\\\u33F2\\\"] = \\\"19\\\\u65E5\\\";\\n        t[\\\"\\\\u33F3\\\"] = \\\"20\\\\u65E5\\\";\\n        t[\\\"\\\\u33F4\\\"] = \\\"21\\\\u65E5\\\";\\n        t[\\\"\\\\u33F5\\\"] = \\\"22\\\\u65E5\\\";\\n        t[\\\"\\\\u33F6\\\"] = \\\"23\\\\u65E5\\\";\\n        t[\\\"\\\\u33F7\\\"] = \\\"24\\\\u65E5\\\";\\n        t[\\\"\\\\u33F8\\\"] = \\\"25\\\\u65E5\\\";\\n        t[\\\"\\\\u33F9\\\"] = \\\"26\\\\u65E5\\\";\\n        t[\\\"\\\\u33FA\\\"] = \\\"27\\\\u65E5\\\";\\n        t[\\\"\\\\u33FB\\\"] = \\\"28\\\\u65E5\\\";\\n        t[\\\"\\\\u33FC\\\"] = \\\"29\\\\u65E5\\\";\\n        t[\\\"\\\\u33FD\\\"] = \\\"30\\\\u65E5\\\";\\n        t[\\\"\\\\u33FE\\\"] = \\\"31\\\\u65E5\\\";\\n        t[\\\"\\\\uFB00\\\"] = \\\"ff\\\";\\n        t[\\\"\\\\uFB01\\\"] = \\\"fi\\\";\\n        t[\\\"\\\\uFB02\\\"] = \\\"fl\\\";\\n        t[\\\"\\\\uFB03\\\"] = \\\"ffi\\\";\\n        t[\\\"\\\\uFB04\\\"] = \\\"ffl\\\";\\n        t[\\\"\\\\uFB05\\\"] = \\\"\\\\u017Ft\\\";\\n        t[\\\"\\\\uFB06\\\"] = \\\"st\\\";\\n        t[\\\"\\\\uFB13\\\"] = \\\"\\\\u0574\\\\u0576\\\";\\n        t[\\\"\\\\uFB14\\\"] = \\\"\\\\u0574\\\\u0565\\\";\\n        t[\\\"\\\\uFB15\\\"] = \\\"\\\\u0574\\\\u056B\\\";\\n        t[\\\"\\\\uFB16\\\"] = \\\"\\\\u057E\\\\u0576\\\";\\n        t[\\\"\\\\uFB17\\\"] = \\\"\\\\u0574\\\\u056D\\\";\\n        t[\\\"\\\\uFB4F\\\"] = \\\"\\\\u05D0\\\\u05DC\\\";\\n        t[\\\"\\\\uFB50\\\"] = \\\"\\\\u0671\\\";\\n        t[\\\"\\\\uFB51\\\"] = \\\"\\\\u0671\\\";\\n        t[\\\"\\\\uFB52\\\"] = \\\"\\\\u067B\\\";\\n        t[\\\"\\\\uFB53\\\"] = \\\"\\\\u067B\\\";\\n        t[\\\"\\\\uFB54\\\"] = \\\"\\\\u067B\\\";\\n        t[\\\"\\\\uFB55\\\"] = \\\"\\\\u067B\\\";\\n        t[\\\"\\\\uFB56\\\"] = \\\"\\\\u067E\\\";\\n        t[\\\"\\\\uFB57\\\"] = \\\"\\\\u067E\\\";\\n        t[\\\"\\\\uFB58\\\"] = \\\"\\\\u067E\\\";\\n        t[\\\"\\\\uFB59\\\"] = \\\"\\\\u067E\\\";\\n        t[\\\"\\\\uFB5A\\\"] = \\\"\\\\u0680\\\";\\n        t[\\\"\\\\uFB5B\\\"] = \\\"\\\\u0680\\\";\\n        t[\\\"\\\\uFB5C\\\"] = \\\"\\\\u0680\\\";\\n        t[\\\"\\\\uFB5D\\\"] = \\\"\\\\u0680\\\";\\n        t[\\\"\\\\uFB5E\\\"] = \\\"\\\\u067A\\\";\\n        t[\\\"\\\\uFB5F\\\"] = \\\"\\\\u067A\\\";\\n        t[\\\"\\\\uFB60\\\"] = \\\"\\\\u067A\\\";\\n        t[\\\"\\\\uFB61\\\"] = \\\"\\\\u067A\\\";\\n        t[\\\"\\\\uFB62\\\"] = \\\"\\\\u067F\\\";\\n        t[\\\"\\\\uFB63\\\"] = \\\"\\\\u067F\\\";\\n        t[\\\"\\\\uFB64\\\"] = \\\"\\\\u067F\\\";\\n        t[\\\"\\\\uFB65\\\"] = \\\"\\\\u067F\\\";\\n        t[\\\"\\\\uFB66\\\"] = \\\"\\\\u0679\\\";\\n        t[\\\"\\\\uFB67\\\"] = \\\"\\\\u0679\\\";\\n        t[\\\"\\\\uFB68\\\"] = \\\"\\\\u0679\\\";\\n        t[\\\"\\\\uFB69\\\"] = \\\"\\\\u0679\\\";\\n        t[\\\"\\\\uFB6A\\\"] = \\\"\\\\u06A4\\\";\\n        t[\\\"\\\\uFB6B\\\"] = \\\"\\\\u06A4\\\";\\n        t[\\\"\\\\uFB6C\\\"] = \\\"\\\\u06A4\\\";\\n        t[\\\"\\\\uFB6D\\\"] = \\\"\\\\u06A4\\\";\\n        t[\\\"\\\\uFB6E\\\"] = \\\"\\\\u06A6\\\";\\n        t[\\\"\\\\uFB6F\\\"] = \\\"\\\\u06A6\\\";\\n        t[\\\"\\\\uFB70\\\"] = \\\"\\\\u06A6\\\";\\n        t[\\\"\\\\uFB71\\\"] = \\\"\\\\u06A6\\\";\\n        t[\\\"\\\\uFB72\\\"] = \\\"\\\\u0684\\\";\\n        t[\\\"\\\\uFB73\\\"] = \\\"\\\\u0684\\\";\\n        t[\\\"\\\\uFB74\\\"] = \\\"\\\\u0684\\\";\\n        t[\\\"\\\\uFB75\\\"] = \\\"\\\\u0684\\\";\\n        t[\\\"\\\\uFB76\\\"] = \\\"\\\\u0683\\\";\\n        t[\\\"\\\\uFB77\\\"] = \\\"\\\\u0683\\\";\\n        t[\\\"\\\\uFB78\\\"] = \\\"\\\\u0683\\\";\\n        t[\\\"\\\\uFB79\\\"] = \\\"\\\\u0683\\\";\\n        t[\\\"\\\\uFB7A\\\"] = \\\"\\\\u0686\\\";\\n        t[\\\"\\\\uFB7B\\\"] = \\\"\\\\u0686\\\";\\n        t[\\\"\\\\uFB7C\\\"] = \\\"\\\\u0686\\\";\\n        t[\\\"\\\\uFB7D\\\"] = \\\"\\\\u0686\\\";\\n        t[\\\"\\\\uFB7E\\\"] = \\\"\\\\u0687\\\";\\n        t[\\\"\\\\uFB7F\\\"] = \\\"\\\\u0687\\\";\\n        t[\\\"\\\\uFB80\\\"] = \\\"\\\\u0687\\\";\\n        t[\\\"\\\\uFB81\\\"] = \\\"\\\\u0687\\\";\\n        t[\\\"\\\\uFB82\\\"] = \\\"\\\\u068D\\\";\\n        t[\\\"\\\\uFB83\\\"] = \\\"\\\\u068D\\\";\\n        t[\\\"\\\\uFB84\\\"] = \\\"\\\\u068C\\\";\\n        t[\\\"\\\\uFB85\\\"] = \\\"\\\\u068C\\\";\\n        t[\\\"\\\\uFB86\\\"] = \\\"\\\\u068E\\\";\\n        t[\\\"\\\\uFB87\\\"] = \\\"\\\\u068E\\\";\\n        t[\\\"\\\\uFB88\\\"] = \\\"\\\\u0688\\\";\\n        t[\\\"\\\\uFB89\\\"] = \\\"\\\\u0688\\\";\\n        t[\\\"\\\\uFB8A\\\"] = \\\"\\\\u0698\\\";\\n        t[\\\"\\\\uFB8B\\\"] = \\\"\\\\u0698\\\";\\n        t[\\\"\\\\uFB8C\\\"] = \\\"\\\\u0691\\\";\\n        t[\\\"\\\\uFB8D\\\"] = \\\"\\\\u0691\\\";\\n        t[\\\"\\\\uFB8E\\\"] = \\\"\\\\u06A9\\\";\\n        t[\\\"\\\\uFB8F\\\"] = \\\"\\\\u06A9\\\";\\n        t[\\\"\\\\uFB90\\\"] = \\\"\\\\u06A9\\\";\\n        t[\\\"\\\\uFB91\\\"] = \\\"\\\\u06A9\\\";\\n        t[\\\"\\\\uFB92\\\"] = \\\"\\\\u06AF\\\";\\n        t[\\\"\\\\uFB93\\\"] = \\\"\\\\u06AF\\\";\\n        t[\\\"\\\\uFB94\\\"] = \\\"\\\\u06AF\\\";\\n        t[\\\"\\\\uFB95\\\"] = \\\"\\\\u06AF\\\";\\n        t[\\\"\\\\uFB96\\\"] = \\\"\\\\u06B3\\\";\\n        t[\\\"\\\\uFB97\\\"] = \\\"\\\\u06B3\\\";\\n        t[\\\"\\\\uFB98\\\"] = \\\"\\\\u06B3\\\";\\n        t[\\\"\\\\uFB99\\\"] = \\\"\\\\u06B3\\\";\\n        t[\\\"\\\\uFB9A\\\"] = \\\"\\\\u06B1\\\";\\n        t[\\\"\\\\uFB9B\\\"] = \\\"\\\\u06B1\\\";\\n        t[\\\"\\\\uFB9C\\\"] = \\\"\\\\u06B1\\\";\\n        t[\\\"\\\\uFB9D\\\"] = \\\"\\\\u06B1\\\";\\n        t[\\\"\\\\uFB9E\\\"] = \\\"\\\\u06BA\\\";\\n        t[\\\"\\\\uFB9F\\\"] = \\\"\\\\u06BA\\\";\\n        t[\\\"\\\\uFBA0\\\"] = \\\"\\\\u06BB\\\";\\n        t[\\\"\\\\uFBA1\\\"] = \\\"\\\\u06BB\\\";\\n        t[\\\"\\\\uFBA2\\\"] = \\\"\\\\u06BB\\\";\\n        t[\\\"\\\\uFBA3\\\"] = \\\"\\\\u06BB\\\";\\n        t[\\\"\\\\uFBA4\\\"] = \\\"\\\\u06C0\\\";\\n        t[\\\"\\\\uFBA5\\\"] = \\\"\\\\u06C0\\\";\\n        t[\\\"\\\\uFBA6\\\"] = \\\"\\\\u06C1\\\";\\n        t[\\\"\\\\uFBA7\\\"] = \\\"\\\\u06C1\\\";\\n        t[\\\"\\\\uFBA8\\\"] = \\\"\\\\u06C1\\\";\\n        t[\\\"\\\\uFBA9\\\"] = \\\"\\\\u06C1\\\";\\n        t[\\\"\\\\uFBAA\\\"] = \\\"\\\\u06BE\\\";\\n        t[\\\"\\\\uFBAB\\\"] = \\\"\\\\u06BE\\\";\\n        t[\\\"\\\\uFBAC\\\"] = \\\"\\\\u06BE\\\";\\n        t[\\\"\\\\uFBAD\\\"] = \\\"\\\\u06BE\\\";\\n        t[\\\"\\\\uFBAE\\\"] = \\\"\\\\u06D2\\\";\\n        t[\\\"\\\\uFBAF\\\"] = \\\"\\\\u06D2\\\";\\n        t[\\\"\\\\uFBB0\\\"] = \\\"\\\\u06D3\\\";\\n        t[\\\"\\\\uFBB1\\\"] = \\\"\\\\u06D3\\\";\\n        t[\\\"\\\\uFBD3\\\"] = \\\"\\\\u06AD\\\";\\n        t[\\\"\\\\uFBD4\\\"] = \\\"\\\\u06AD\\\";\\n        t[\\\"\\\\uFBD5\\\"] = \\\"\\\\u06AD\\\";\\n        t[\\\"\\\\uFBD6\\\"] = \\\"\\\\u06AD\\\";\\n        t[\\\"\\\\uFBD7\\\"] = \\\"\\\\u06C7\\\";\\n        t[\\\"\\\\uFBD8\\\"] = \\\"\\\\u06C7\\\";\\n        t[\\\"\\\\uFBD9\\\"] = \\\"\\\\u06C6\\\";\\n        t[\\\"\\\\uFBDA\\\"] = \\\"\\\\u06C6\\\";\\n        t[\\\"\\\\uFBDB\\\"] = \\\"\\\\u06C8\\\";\\n        t[\\\"\\\\uFBDC\\\"] = \\\"\\\\u06C8\\\";\\n        t[\\\"\\\\uFBDD\\\"] = \\\"\\\\u0677\\\";\\n        t[\\\"\\\\uFBDE\\\"] = \\\"\\\\u06CB\\\";\\n        t[\\\"\\\\uFBDF\\\"] = \\\"\\\\u06CB\\\";\\n        t[\\\"\\\\uFBE0\\\"] = \\\"\\\\u06C5\\\";\\n        t[\\\"\\\\uFBE1\\\"] = \\\"\\\\u06C5\\\";\\n        t[\\\"\\\\uFBE2\\\"] = \\\"\\\\u06C9\\\";\\n        t[\\\"\\\\uFBE3\\\"] = \\\"\\\\u06C9\\\";\\n        t[\\\"\\\\uFBE4\\\"] = \\\"\\\\u06D0\\\";\\n        t[\\\"\\\\uFBE5\\\"] = \\\"\\\\u06D0\\\";\\n        t[\\\"\\\\uFBE6\\\"] = \\\"\\\\u06D0\\\";\\n        t[\\\"\\\\uFBE7\\\"] = \\\"\\\\u06D0\\\";\\n        t[\\\"\\\\uFBE8\\\"] = \\\"\\\\u0649\\\";\\n        t[\\\"\\\\uFBE9\\\"] = \\\"\\\\u0649\\\";\\n        t[\\\"\\\\uFBEA\\\"] = \\\"\\\\u0626\\\\u0627\\\";\\n        t[\\\"\\\\uFBEB\\\"] = \\\"\\\\u0626\\\\u0627\\\";\\n        t[\\\"\\\\uFBEC\\\"] = \\\"\\\\u0626\\\\u06D5\\\";\\n        t[\\\"\\\\uFBED\\\"] = \\\"\\\\u0626\\\\u06D5\\\";\\n        t[\\\"\\\\uFBEE\\\"] = \\\"\\\\u0626\\\\u0648\\\";\\n        t[\\\"\\\\uFBEF\\\"] = \\\"\\\\u0626\\\\u0648\\\";\\n        t[\\\"\\\\uFBF0\\\"] = \\\"\\\\u0626\\\\u06C7\\\";\\n        t[\\\"\\\\uFBF1\\\"] = \\\"\\\\u0626\\\\u06C7\\\";\\n        t[\\\"\\\\uFBF2\\\"] = \\\"\\\\u0626\\\\u06C6\\\";\\n        t[\\\"\\\\uFBF3\\\"] = \\\"\\\\u0626\\\\u06C6\\\";\\n        t[\\\"\\\\uFBF4\\\"] = \\\"\\\\u0626\\\\u06C8\\\";\\n        t[\\\"\\\\uFBF5\\\"] = \\\"\\\\u0626\\\\u06C8\\\";\\n        t[\\\"\\\\uFBF6\\\"] = \\\"\\\\u0626\\\\u06D0\\\";\\n        t[\\\"\\\\uFBF7\\\"] = \\\"\\\\u0626\\\\u06D0\\\";\\n        t[\\\"\\\\uFBF8\\\"] = \\\"\\\\u0626\\\\u06D0\\\";\\n        t[\\\"\\\\uFBF9\\\"] = \\\"\\\\u0626\\\\u0649\\\";\\n        t[\\\"\\\\uFBFA\\\"] = \\\"\\\\u0626\\\\u0649\\\";\\n        t[\\\"\\\\uFBFB\\\"] = \\\"\\\\u0626\\\\u0649\\\";\\n        t[\\\"\\\\uFBFC\\\"] = \\\"\\\\u06CC\\\";\\n        t[\\\"\\\\uFBFD\\\"] = \\\"\\\\u06CC\\\";\\n        t[\\\"\\\\uFBFE\\\"] = \\\"\\\\u06CC\\\";\\n        t[\\\"\\\\uFBFF\\\"] = \\\"\\\\u06CC\\\";\\n        t[\\\"\\\\uFC00\\\"] = \\\"\\\\u0626\\\\u062C\\\";\\n        t[\\\"\\\\uFC01\\\"] = \\\"\\\\u0626\\\\u062D\\\";\\n        t[\\\"\\\\uFC02\\\"] = \\\"\\\\u0626\\\\u0645\\\";\\n        t[\\\"\\\\uFC03\\\"] = \\\"\\\\u0626\\\\u0649\\\";\\n        t[\\\"\\\\uFC04\\\"] = \\\"\\\\u0626\\\\u064A\\\";\\n        t[\\\"\\\\uFC05\\\"] = \\\"\\\\u0628\\\\u062C\\\";\\n        t[\\\"\\\\uFC06\\\"] = \\\"\\\\u0628\\\\u062D\\\";\\n        t[\\\"\\\\uFC07\\\"] = \\\"\\\\u0628\\\\u062E\\\";\\n        t[\\\"\\\\uFC08\\\"] = \\\"\\\\u0628\\\\u0645\\\";\\n        t[\\\"\\\\uFC09\\\"] = \\\"\\\\u0628\\\\u0649\\\";\\n        t[\\\"\\\\uFC0A\\\"] = \\\"\\\\u0628\\\\u064A\\\";\\n        t[\\\"\\\\uFC0B\\\"] = \\\"\\\\u062A\\\\u062C\\\";\\n        t[\\\"\\\\uFC0C\\\"] = \\\"\\\\u062A\\\\u062D\\\";\\n        t[\\\"\\\\uFC0D\\\"] = \\\"\\\\u062A\\\\u062E\\\";\\n        t[\\\"\\\\uFC0E\\\"] = \\\"\\\\u062A\\\\u0645\\\";\\n        t[\\\"\\\\uFC0F\\\"] = \\\"\\\\u062A\\\\u0649\\\";\\n        t[\\\"\\\\uFC10\\\"] = \\\"\\\\u062A\\\\u064A\\\";\\n        t[\\\"\\\\uFC11\\\"] = \\\"\\\\u062B\\\\u062C\\\";\\n        t[\\\"\\\\uFC12\\\"] = \\\"\\\\u062B\\\\u0645\\\";\\n        t[\\\"\\\\uFC13\\\"] = \\\"\\\\u062B\\\\u0649\\\";\\n        t[\\\"\\\\uFC14\\\"] = \\\"\\\\u062B\\\\u064A\\\";\\n        t[\\\"\\\\uFC15\\\"] = \\\"\\\\u062C\\\\u062D\\\";\\n        t[\\\"\\\\uFC16\\\"] = \\\"\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFC17\\\"] = \\\"\\\\u062D\\\\u062C\\\";\\n        t[\\\"\\\\uFC18\\\"] = \\\"\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFC19\\\"] = \\\"\\\\u062E\\\\u062C\\\";\\n        t[\\\"\\\\uFC1A\\\"] = \\\"\\\\u062E\\\\u062D\\\";\\n        t[\\\"\\\\uFC1B\\\"] = \\\"\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFC1C\\\"] = \\\"\\\\u0633\\\\u062C\\\";\\n        t[\\\"\\\\uFC1D\\\"] = \\\"\\\\u0633\\\\u062D\\\";\\n        t[\\\"\\\\uFC1E\\\"] = \\\"\\\\u0633\\\\u062E\\\";\\n        t[\\\"\\\\uFC1F\\\"] = \\\"\\\\u0633\\\\u0645\\\";\\n        t[\\\"\\\\uFC20\\\"] = \\\"\\\\u0635\\\\u062D\\\";\\n        t[\\\"\\\\uFC21\\\"] = \\\"\\\\u0635\\\\u0645\\\";\\n        t[\\\"\\\\uFC22\\\"] = \\\"\\\\u0636\\\\u062C\\\";\\n        t[\\\"\\\\uFC23\\\"] = \\\"\\\\u0636\\\\u062D\\\";\\n        t[\\\"\\\\uFC24\\\"] = \\\"\\\\u0636\\\\u062E\\\";\\n        t[\\\"\\\\uFC25\\\"] = \\\"\\\\u0636\\\\u0645\\\";\\n        t[\\\"\\\\uFC26\\\"] = \\\"\\\\u0637\\\\u062D\\\";\\n        t[\\\"\\\\uFC27\\\"] = \\\"\\\\u0637\\\\u0645\\\";\\n        t[\\\"\\\\uFC28\\\"] = \\\"\\\\u0638\\\\u0645\\\";\\n        t[\\\"\\\\uFC29\\\"] = \\\"\\\\u0639\\\\u062C\\\";\\n        t[\\\"\\\\uFC2A\\\"] = \\\"\\\\u0639\\\\u0645\\\";\\n        t[\\\"\\\\uFC2B\\\"] = \\\"\\\\u063A\\\\u062C\\\";\\n        t[\\\"\\\\uFC2C\\\"] = \\\"\\\\u063A\\\\u0645\\\";\\n        t[\\\"\\\\uFC2D\\\"] = \\\"\\\\u0641\\\\u062C\\\";\\n        t[\\\"\\\\uFC2E\\\"] = \\\"\\\\u0641\\\\u062D\\\";\\n        t[\\\"\\\\uFC2F\\\"] = \\\"\\\\u0641\\\\u062E\\\";\\n        t[\\\"\\\\uFC30\\\"] = \\\"\\\\u0641\\\\u0645\\\";\\n        t[\\\"\\\\uFC31\\\"] = \\\"\\\\u0641\\\\u0649\\\";\\n        t[\\\"\\\\uFC32\\\"] = \\\"\\\\u0641\\\\u064A\\\";\\n        t[\\\"\\\\uFC33\\\"] = \\\"\\\\u0642\\\\u062D\\\";\\n        t[\\\"\\\\uFC34\\\"] = \\\"\\\\u0642\\\\u0645\\\";\\n        t[\\\"\\\\uFC35\\\"] = \\\"\\\\u0642\\\\u0649\\\";\\n        t[\\\"\\\\uFC36\\\"] = \\\"\\\\u0642\\\\u064A\\\";\\n        t[\\\"\\\\uFC37\\\"] = \\\"\\\\u0643\\\\u0627\\\";\\n        t[\\\"\\\\uFC38\\\"] = \\\"\\\\u0643\\\\u062C\\\";\\n        t[\\\"\\\\uFC39\\\"] = \\\"\\\\u0643\\\\u062D\\\";\\n        t[\\\"\\\\uFC3A\\\"] = \\\"\\\\u0643\\\\u062E\\\";\\n        t[\\\"\\\\uFC3B\\\"] = \\\"\\\\u0643\\\\u0644\\\";\\n        t[\\\"\\\\uFC3C\\\"] = \\\"\\\\u0643\\\\u0645\\\";\\n        t[\\\"\\\\uFC3D\\\"] = \\\"\\\\u0643\\\\u0649\\\";\\n        t[\\\"\\\\uFC3E\\\"] = \\\"\\\\u0643\\\\u064A\\\";\\n        t[\\\"\\\\uFC3F\\\"] = \\\"\\\\u0644\\\\u062C\\\";\\n        t[\\\"\\\\uFC40\\\"] = \\\"\\\\u0644\\\\u062D\\\";\\n        t[\\\"\\\\uFC41\\\"] = \\\"\\\\u0644\\\\u062E\\\";\\n        t[\\\"\\\\uFC42\\\"] = \\\"\\\\u0644\\\\u0645\\\";\\n        t[\\\"\\\\uFC43\\\"] = \\\"\\\\u0644\\\\u0649\\\";\\n        t[\\\"\\\\uFC44\\\"] = \\\"\\\\u0644\\\\u064A\\\";\\n        t[\\\"\\\\uFC45\\\"] = \\\"\\\\u0645\\\\u062C\\\";\\n        t[\\\"\\\\uFC46\\\"] = \\\"\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFC47\\\"] = \\\"\\\\u0645\\\\u062E\\\";\\n        t[\\\"\\\\uFC48\\\"] = \\\"\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFC49\\\"] = \\\"\\\\u0645\\\\u0649\\\";\\n        t[\\\"\\\\uFC4A\\\"] = \\\"\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFC4B\\\"] = \\\"\\\\u0646\\\\u062C\\\";\\n        t[\\\"\\\\uFC4C\\\"] = \\\"\\\\u0646\\\\u062D\\\";\\n        t[\\\"\\\\uFC4D\\\"] = \\\"\\\\u0646\\\\u062E\\\";\\n        t[\\\"\\\\uFC4E\\\"] = \\\"\\\\u0646\\\\u0645\\\";\\n        t[\\\"\\\\uFC4F\\\"] = \\\"\\\\u0646\\\\u0649\\\";\\n        t[\\\"\\\\uFC50\\\"] = \\\"\\\\u0646\\\\u064A\\\";\\n        t[\\\"\\\\uFC51\\\"] = \\\"\\\\u0647\\\\u062C\\\";\\n        t[\\\"\\\\uFC52\\\"] = \\\"\\\\u0647\\\\u0645\\\";\\n        t[\\\"\\\\uFC53\\\"] = \\\"\\\\u0647\\\\u0649\\\";\\n        t[\\\"\\\\uFC54\\\"] = \\\"\\\\u0647\\\\u064A\\\";\\n        t[\\\"\\\\uFC55\\\"] = \\\"\\\\u064A\\\\u062C\\\";\\n        t[\\\"\\\\uFC56\\\"] = \\\"\\\\u064A\\\\u062D\\\";\\n        t[\\\"\\\\uFC57\\\"] = \\\"\\\\u064A\\\\u062E\\\";\\n        t[\\\"\\\\uFC58\\\"] = \\\"\\\\u064A\\\\u0645\\\";\\n        t[\\\"\\\\uFC59\\\"] = \\\"\\\\u064A\\\\u0649\\\";\\n        t[\\\"\\\\uFC5A\\\"] = \\\"\\\\u064A\\\\u064A\\\";\\n        t[\\\"\\\\uFC5B\\\"] = \\\"\\\\u0630\\\\u0670\\\";\\n        t[\\\"\\\\uFC5C\\\"] = \\\"\\\\u0631\\\\u0670\\\";\\n        t[\\\"\\\\uFC5D\\\"] = \\\"\\\\u0649\\\\u0670\\\";\\n        t[\\\"\\\\uFC5E\\\"] = \\\" \\\\u064C\\\\u0651\\\";\\n        t[\\\"\\\\uFC5F\\\"] = \\\" \\\\u064D\\\\u0651\\\";\\n        t[\\\"\\\\uFC60\\\"] = \\\" \\\\u064E\\\\u0651\\\";\\n        t[\\\"\\\\uFC61\\\"] = \\\" \\\\u064F\\\\u0651\\\";\\n        t[\\\"\\\\uFC62\\\"] = \\\" \\\\u0650\\\\u0651\\\";\\n        t[\\\"\\\\uFC63\\\"] = \\\" \\\\u0651\\\\u0670\\\";\\n        t[\\\"\\\\uFC64\\\"] = \\\"\\\\u0626\\\\u0631\\\";\\n        t[\\\"\\\\uFC65\\\"] = \\\"\\\\u0626\\\\u0632\\\";\\n        t[\\\"\\\\uFC66\\\"] = \\\"\\\\u0626\\\\u0645\\\";\\n        t[\\\"\\\\uFC67\\\"] = \\\"\\\\u0626\\\\u0646\\\";\\n        t[\\\"\\\\uFC68\\\"] = \\\"\\\\u0626\\\\u0649\\\";\\n        t[\\\"\\\\uFC69\\\"] = \\\"\\\\u0626\\\\u064A\\\";\\n        t[\\\"\\\\uFC6A\\\"] = \\\"\\\\u0628\\\\u0631\\\";\\n        t[\\\"\\\\uFC6B\\\"] = \\\"\\\\u0628\\\\u0632\\\";\\n        t[\\\"\\\\uFC6C\\\"] = \\\"\\\\u0628\\\\u0645\\\";\\n        t[\\\"\\\\uFC6D\\\"] = \\\"\\\\u0628\\\\u0646\\\";\\n        t[\\\"\\\\uFC6E\\\"] = \\\"\\\\u0628\\\\u0649\\\";\\n        t[\\\"\\\\uFC6F\\\"] = \\\"\\\\u0628\\\\u064A\\\";\\n        t[\\\"\\\\uFC70\\\"] = \\\"\\\\u062A\\\\u0631\\\";\\n        t[\\\"\\\\uFC71\\\"] = \\\"\\\\u062A\\\\u0632\\\";\\n        t[\\\"\\\\uFC72\\\"] = \\\"\\\\u062A\\\\u0645\\\";\\n        t[\\\"\\\\uFC73\\\"] = \\\"\\\\u062A\\\\u0646\\\";\\n        t[\\\"\\\\uFC74\\\"] = \\\"\\\\u062A\\\\u0649\\\";\\n        t[\\\"\\\\uFC75\\\"] = \\\"\\\\u062A\\\\u064A\\\";\\n        t[\\\"\\\\uFC76\\\"] = \\\"\\\\u062B\\\\u0631\\\";\\n        t[\\\"\\\\uFC77\\\"] = \\\"\\\\u062B\\\\u0632\\\";\\n        t[\\\"\\\\uFC78\\\"] = \\\"\\\\u062B\\\\u0645\\\";\\n        t[\\\"\\\\uFC79\\\"] = \\\"\\\\u062B\\\\u0646\\\";\\n        t[\\\"\\\\uFC7A\\\"] = \\\"\\\\u062B\\\\u0649\\\";\\n        t[\\\"\\\\uFC7B\\\"] = \\\"\\\\u062B\\\\u064A\\\";\\n        t[\\\"\\\\uFC7C\\\"] = \\\"\\\\u0641\\\\u0649\\\";\\n        t[\\\"\\\\uFC7D\\\"] = \\\"\\\\u0641\\\\u064A\\\";\\n        t[\\\"\\\\uFC7E\\\"] = \\\"\\\\u0642\\\\u0649\\\";\\n        t[\\\"\\\\uFC7F\\\"] = \\\"\\\\u0642\\\\u064A\\\";\\n        t[\\\"\\\\uFC80\\\"] = \\\"\\\\u0643\\\\u0627\\\";\\n        t[\\\"\\\\uFC81\\\"] = \\\"\\\\u0643\\\\u0644\\\";\\n        t[\\\"\\\\uFC82\\\"] = \\\"\\\\u0643\\\\u0645\\\";\\n        t[\\\"\\\\uFC83\\\"] = \\\"\\\\u0643\\\\u0649\\\";\\n        t[\\\"\\\\uFC84\\\"] = \\\"\\\\u0643\\\\u064A\\\";\\n        t[\\\"\\\\uFC85\\\"] = \\\"\\\\u0644\\\\u0645\\\";\\n        t[\\\"\\\\uFC86\\\"] = \\\"\\\\u0644\\\\u0649\\\";\\n        t[\\\"\\\\uFC87\\\"] = \\\"\\\\u0644\\\\u064A\\\";\\n        t[\\\"\\\\uFC88\\\"] = \\\"\\\\u0645\\\\u0627\\\";\\n        t[\\\"\\\\uFC89\\\"] = \\\"\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFC8A\\\"] = \\\"\\\\u0646\\\\u0631\\\";\\n        t[\\\"\\\\uFC8B\\\"] = \\\"\\\\u0646\\\\u0632\\\";\\n        t[\\\"\\\\uFC8C\\\"] = \\\"\\\\u0646\\\\u0645\\\";\\n        t[\\\"\\\\uFC8D\\\"] = \\\"\\\\u0646\\\\u0646\\\";\\n        t[\\\"\\\\uFC8E\\\"] = \\\"\\\\u0646\\\\u0649\\\";\\n        t[\\\"\\\\uFC8F\\\"] = \\\"\\\\u0646\\\\u064A\\\";\\n        t[\\\"\\\\uFC90\\\"] = \\\"\\\\u0649\\\\u0670\\\";\\n        t[\\\"\\\\uFC91\\\"] = \\\"\\\\u064A\\\\u0631\\\";\\n        t[\\\"\\\\uFC92\\\"] = \\\"\\\\u064A\\\\u0632\\\";\\n        t[\\\"\\\\uFC93\\\"] = \\\"\\\\u064A\\\\u0645\\\";\\n        t[\\\"\\\\uFC94\\\"] = \\\"\\\\u064A\\\\u0646\\\";\\n        t[\\\"\\\\uFC95\\\"] = \\\"\\\\u064A\\\\u0649\\\";\\n        t[\\\"\\\\uFC96\\\"] = \\\"\\\\u064A\\\\u064A\\\";\\n        t[\\\"\\\\uFC97\\\"] = \\\"\\\\u0626\\\\u062C\\\";\\n        t[\\\"\\\\uFC98\\\"] = \\\"\\\\u0626\\\\u062D\\\";\\n        t[\\\"\\\\uFC99\\\"] = \\\"\\\\u0626\\\\u062E\\\";\\n        t[\\\"\\\\uFC9A\\\"] = \\\"\\\\u0626\\\\u0645\\\";\\n        t[\\\"\\\\uFC9B\\\"] = \\\"\\\\u0626\\\\u0647\\\";\\n        t[\\\"\\\\uFC9C\\\"] = \\\"\\\\u0628\\\\u062C\\\";\\n        t[\\\"\\\\uFC9D\\\"] = \\\"\\\\u0628\\\\u062D\\\";\\n        t[\\\"\\\\uFC9E\\\"] = \\\"\\\\u0628\\\\u062E\\\";\\n        t[\\\"\\\\uFC9F\\\"] = \\\"\\\\u0628\\\\u0645\\\";\\n        t[\\\"\\\\uFCA0\\\"] = \\\"\\\\u0628\\\\u0647\\\";\\n        t[\\\"\\\\uFCA1\\\"] = \\\"\\\\u062A\\\\u062C\\\";\\n        t[\\\"\\\\uFCA2\\\"] = \\\"\\\\u062A\\\\u062D\\\";\\n        t[\\\"\\\\uFCA3\\\"] = \\\"\\\\u062A\\\\u062E\\\";\\n        t[\\\"\\\\uFCA4\\\"] = \\\"\\\\u062A\\\\u0645\\\";\\n        t[\\\"\\\\uFCA5\\\"] = \\\"\\\\u062A\\\\u0647\\\";\\n        t[\\\"\\\\uFCA6\\\"] = \\\"\\\\u062B\\\\u0645\\\";\\n        t[\\\"\\\\uFCA7\\\"] = \\\"\\\\u062C\\\\u062D\\\";\\n        t[\\\"\\\\uFCA8\\\"] = \\\"\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFCA9\\\"] = \\\"\\\\u062D\\\\u062C\\\";\\n        t[\\\"\\\\uFCAA\\\"] = \\\"\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFCAB\\\"] = \\\"\\\\u062E\\\\u062C\\\";\\n        t[\\\"\\\\uFCAC\\\"] = \\\"\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFCAD\\\"] = \\\"\\\\u0633\\\\u062C\\\";\\n        t[\\\"\\\\uFCAE\\\"] = \\\"\\\\u0633\\\\u062D\\\";\\n        t[\\\"\\\\uFCAF\\\"] = \\\"\\\\u0633\\\\u062E\\\";\\n        t[\\\"\\\\uFCB0\\\"] = \\\"\\\\u0633\\\\u0645\\\";\\n        t[\\\"\\\\uFCB1\\\"] = \\\"\\\\u0635\\\\u062D\\\";\\n        t[\\\"\\\\uFCB2\\\"] = \\\"\\\\u0635\\\\u062E\\\";\\n        t[\\\"\\\\uFCB3\\\"] = \\\"\\\\u0635\\\\u0645\\\";\\n        t[\\\"\\\\uFCB4\\\"] = \\\"\\\\u0636\\\\u062C\\\";\\n        t[\\\"\\\\uFCB5\\\"] = \\\"\\\\u0636\\\\u062D\\\";\\n        t[\\\"\\\\uFCB6\\\"] = \\\"\\\\u0636\\\\u062E\\\";\\n        t[\\\"\\\\uFCB7\\\"] = \\\"\\\\u0636\\\\u0645\\\";\\n        t[\\\"\\\\uFCB8\\\"] = \\\"\\\\u0637\\\\u062D\\\";\\n        t[\\\"\\\\uFCB9\\\"] = \\\"\\\\u0638\\\\u0645\\\";\\n        t[\\\"\\\\uFCBA\\\"] = \\\"\\\\u0639\\\\u062C\\\";\\n        t[\\\"\\\\uFCBB\\\"] = \\\"\\\\u0639\\\\u0645\\\";\\n        t[\\\"\\\\uFCBC\\\"] = \\\"\\\\u063A\\\\u062C\\\";\\n        t[\\\"\\\\uFCBD\\\"] = \\\"\\\\u063A\\\\u0645\\\";\\n        t[\\\"\\\\uFCBE\\\"] = \\\"\\\\u0641\\\\u062C\\\";\\n        t[\\\"\\\\uFCBF\\\"] = \\\"\\\\u0641\\\\u062D\\\";\\n        t[\\\"\\\\uFCC0\\\"] = \\\"\\\\u0641\\\\u062E\\\";\\n        t[\\\"\\\\uFCC1\\\"] = \\\"\\\\u0641\\\\u0645\\\";\\n        t[\\\"\\\\uFCC2\\\"] = \\\"\\\\u0642\\\\u062D\\\";\\n        t[\\\"\\\\uFCC3\\\"] = \\\"\\\\u0642\\\\u0645\\\";\\n        t[\\\"\\\\uFCC4\\\"] = \\\"\\\\u0643\\\\u062C\\\";\\n        t[\\\"\\\\uFCC5\\\"] = \\\"\\\\u0643\\\\u062D\\\";\\n        t[\\\"\\\\uFCC6\\\"] = \\\"\\\\u0643\\\\u062E\\\";\\n        t[\\\"\\\\uFCC7\\\"] = \\\"\\\\u0643\\\\u0644\\\";\\n        t[\\\"\\\\uFCC8\\\"] = \\\"\\\\u0643\\\\u0645\\\";\\n        t[\\\"\\\\uFCC9\\\"] = \\\"\\\\u0644\\\\u062C\\\";\\n        t[\\\"\\\\uFCCA\\\"] = \\\"\\\\u0644\\\\u062D\\\";\\n        t[\\\"\\\\uFCCB\\\"] = \\\"\\\\u0644\\\\u062E\\\";\\n        t[\\\"\\\\uFCCC\\\"] = \\\"\\\\u0644\\\\u0645\\\";\\n        t[\\\"\\\\uFCCD\\\"] = \\\"\\\\u0644\\\\u0647\\\";\\n        t[\\\"\\\\uFCCE\\\"] = \\\"\\\\u0645\\\\u062C\\\";\\n        t[\\\"\\\\uFCCF\\\"] = \\\"\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFCD0\\\"] = \\\"\\\\u0645\\\\u062E\\\";\\n        t[\\\"\\\\uFCD1\\\"] = \\\"\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFCD2\\\"] = \\\"\\\\u0646\\\\u062C\\\";\\n        t[\\\"\\\\uFCD3\\\"] = \\\"\\\\u0646\\\\u062D\\\";\\n        t[\\\"\\\\uFCD4\\\"] = \\\"\\\\u0646\\\\u062E\\\";\\n        t[\\\"\\\\uFCD5\\\"] = \\\"\\\\u0646\\\\u0645\\\";\\n        t[\\\"\\\\uFCD6\\\"] = \\\"\\\\u0646\\\\u0647\\\";\\n        t[\\\"\\\\uFCD7\\\"] = \\\"\\\\u0647\\\\u062C\\\";\\n        t[\\\"\\\\uFCD8\\\"] = \\\"\\\\u0647\\\\u0645\\\";\\n        t[\\\"\\\\uFCD9\\\"] = \\\"\\\\u0647\\\\u0670\\\";\\n        t[\\\"\\\\uFCDA\\\"] = \\\"\\\\u064A\\\\u062C\\\";\\n        t[\\\"\\\\uFCDB\\\"] = \\\"\\\\u064A\\\\u062D\\\";\\n        t[\\\"\\\\uFCDC\\\"] = \\\"\\\\u064A\\\\u062E\\\";\\n        t[\\\"\\\\uFCDD\\\"] = \\\"\\\\u064A\\\\u0645\\\";\\n        t[\\\"\\\\uFCDE\\\"] = \\\"\\\\u064A\\\\u0647\\\";\\n        t[\\\"\\\\uFCDF\\\"] = \\\"\\\\u0626\\\\u0645\\\";\\n        t[\\\"\\\\uFCE0\\\"] = \\\"\\\\u0626\\\\u0647\\\";\\n        t[\\\"\\\\uFCE1\\\"] = \\\"\\\\u0628\\\\u0645\\\";\\n        t[\\\"\\\\uFCE2\\\"] = \\\"\\\\u0628\\\\u0647\\\";\\n        t[\\\"\\\\uFCE3\\\"] = \\\"\\\\u062A\\\\u0645\\\";\\n        t[\\\"\\\\uFCE4\\\"] = \\\"\\\\u062A\\\\u0647\\\";\\n        t[\\\"\\\\uFCE5\\\"] = \\\"\\\\u062B\\\\u0645\\\";\\n        t[\\\"\\\\uFCE6\\\"] = \\\"\\\\u062B\\\\u0647\\\";\\n        t[\\\"\\\\uFCE7\\\"] = \\\"\\\\u0633\\\\u0645\\\";\\n        t[\\\"\\\\uFCE8\\\"] = \\\"\\\\u0633\\\\u0647\\\";\\n        t[\\\"\\\\uFCE9\\\"] = \\\"\\\\u0634\\\\u0645\\\";\\n        t[\\\"\\\\uFCEA\\\"] = \\\"\\\\u0634\\\\u0647\\\";\\n        t[\\\"\\\\uFCEB\\\"] = \\\"\\\\u0643\\\\u0644\\\";\\n        t[\\\"\\\\uFCEC\\\"] = \\\"\\\\u0643\\\\u0645\\\";\\n        t[\\\"\\\\uFCED\\\"] = \\\"\\\\u0644\\\\u0645\\\";\\n        t[\\\"\\\\uFCEE\\\"] = \\\"\\\\u0646\\\\u0645\\\";\\n        t[\\\"\\\\uFCEF\\\"] = \\\"\\\\u0646\\\\u0647\\\";\\n        t[\\\"\\\\uFCF0\\\"] = \\\"\\\\u064A\\\\u0645\\\";\\n        t[\\\"\\\\uFCF1\\\"] = \\\"\\\\u064A\\\\u0647\\\";\\n        t[\\\"\\\\uFCF2\\\"] = \\\"\\\\u0640\\\\u064E\\\\u0651\\\";\\n        t[\\\"\\\\uFCF3\\\"] = \\\"\\\\u0640\\\\u064F\\\\u0651\\\";\\n        t[\\\"\\\\uFCF4\\\"] = \\\"\\\\u0640\\\\u0650\\\\u0651\\\";\\n        t[\\\"\\\\uFCF5\\\"] = \\\"\\\\u0637\\\\u0649\\\";\\n        t[\\\"\\\\uFCF6\\\"] = \\\"\\\\u0637\\\\u064A\\\";\\n        t[\\\"\\\\uFCF7\\\"] = \\\"\\\\u0639\\\\u0649\\\";\\n        t[\\\"\\\\uFCF8\\\"] = \\\"\\\\u0639\\\\u064A\\\";\\n        t[\\\"\\\\uFCF9\\\"] = \\\"\\\\u063A\\\\u0649\\\";\\n        t[\\\"\\\\uFCFA\\\"] = \\\"\\\\u063A\\\\u064A\\\";\\n        t[\\\"\\\\uFCFB\\\"] = \\\"\\\\u0633\\\\u0649\\\";\\n        t[\\\"\\\\uFCFC\\\"] = \\\"\\\\u0633\\\\u064A\\\";\\n        t[\\\"\\\\uFCFD\\\"] = \\\"\\\\u0634\\\\u0649\\\";\\n        t[\\\"\\\\uFCFE\\\"] = \\\"\\\\u0634\\\\u064A\\\";\\n        t[\\\"\\\\uFCFF\\\"] = \\\"\\\\u062D\\\\u0649\\\";\\n        t[\\\"\\\\uFD00\\\"] = \\\"\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFD01\\\"] = \\\"\\\\u062C\\\\u0649\\\";\\n        t[\\\"\\\\uFD02\\\"] = \\\"\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFD03\\\"] = \\\"\\\\u062E\\\\u0649\\\";\\n        t[\\\"\\\\uFD04\\\"] = \\\"\\\\u062E\\\\u064A\\\";\\n        t[\\\"\\\\uFD05\\\"] = \\\"\\\\u0635\\\\u0649\\\";\\n        t[\\\"\\\\uFD06\\\"] = \\\"\\\\u0635\\\\u064A\\\";\\n        t[\\\"\\\\uFD07\\\"] = \\\"\\\\u0636\\\\u0649\\\";\\n        t[\\\"\\\\uFD08\\\"] = \\\"\\\\u0636\\\\u064A\\\";\\n        t[\\\"\\\\uFD09\\\"] = \\\"\\\\u0634\\\\u062C\\\";\\n        t[\\\"\\\\uFD0A\\\"] = \\\"\\\\u0634\\\\u062D\\\";\\n        t[\\\"\\\\uFD0B\\\"] = \\\"\\\\u0634\\\\u062E\\\";\\n        t[\\\"\\\\uFD0C\\\"] = \\\"\\\\u0634\\\\u0645\\\";\\n        t[\\\"\\\\uFD0D\\\"] = \\\"\\\\u0634\\\\u0631\\\";\\n        t[\\\"\\\\uFD0E\\\"] = \\\"\\\\u0633\\\\u0631\\\";\\n        t[\\\"\\\\uFD0F\\\"] = \\\"\\\\u0635\\\\u0631\\\";\\n        t[\\\"\\\\uFD10\\\"] = \\\"\\\\u0636\\\\u0631\\\";\\n        t[\\\"\\\\uFD11\\\"] = \\\"\\\\u0637\\\\u0649\\\";\\n        t[\\\"\\\\uFD12\\\"] = \\\"\\\\u0637\\\\u064A\\\";\\n        t[\\\"\\\\uFD13\\\"] = \\\"\\\\u0639\\\\u0649\\\";\\n        t[\\\"\\\\uFD14\\\"] = \\\"\\\\u0639\\\\u064A\\\";\\n        t[\\\"\\\\uFD15\\\"] = \\\"\\\\u063A\\\\u0649\\\";\\n        t[\\\"\\\\uFD16\\\"] = \\\"\\\\u063A\\\\u064A\\\";\\n        t[\\\"\\\\uFD17\\\"] = \\\"\\\\u0633\\\\u0649\\\";\\n        t[\\\"\\\\uFD18\\\"] = \\\"\\\\u0633\\\\u064A\\\";\\n        t[\\\"\\\\uFD19\\\"] = \\\"\\\\u0634\\\\u0649\\\";\\n        t[\\\"\\\\uFD1A\\\"] = \\\"\\\\u0634\\\\u064A\\\";\\n        t[\\\"\\\\uFD1B\\\"] = \\\"\\\\u062D\\\\u0649\\\";\\n        t[\\\"\\\\uFD1C\\\"] = \\\"\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFD1D\\\"] = \\\"\\\\u062C\\\\u0649\\\";\\n        t[\\\"\\\\uFD1E\\\"] = \\\"\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFD1F\\\"] = \\\"\\\\u062E\\\\u0649\\\";\\n        t[\\\"\\\\uFD20\\\"] = \\\"\\\\u062E\\\\u064A\\\";\\n        t[\\\"\\\\uFD21\\\"] = \\\"\\\\u0635\\\\u0649\\\";\\n        t[\\\"\\\\uFD22\\\"] = \\\"\\\\u0635\\\\u064A\\\";\\n        t[\\\"\\\\uFD23\\\"] = \\\"\\\\u0636\\\\u0649\\\";\\n        t[\\\"\\\\uFD24\\\"] = \\\"\\\\u0636\\\\u064A\\\";\\n        t[\\\"\\\\uFD25\\\"] = \\\"\\\\u0634\\\\u062C\\\";\\n        t[\\\"\\\\uFD26\\\"] = \\\"\\\\u0634\\\\u062D\\\";\\n        t[\\\"\\\\uFD27\\\"] = \\\"\\\\u0634\\\\u062E\\\";\\n        t[\\\"\\\\uFD28\\\"] = \\\"\\\\u0634\\\\u0645\\\";\\n        t[\\\"\\\\uFD29\\\"] = \\\"\\\\u0634\\\\u0631\\\";\\n        t[\\\"\\\\uFD2A\\\"] = \\\"\\\\u0633\\\\u0631\\\";\\n        t[\\\"\\\\uFD2B\\\"] = \\\"\\\\u0635\\\\u0631\\\";\\n        t[\\\"\\\\uFD2C\\\"] = \\\"\\\\u0636\\\\u0631\\\";\\n        t[\\\"\\\\uFD2D\\\"] = \\\"\\\\u0634\\\\u062C\\\";\\n        t[\\\"\\\\uFD2E\\\"] = \\\"\\\\u0634\\\\u062D\\\";\\n        t[\\\"\\\\uFD2F\\\"] = \\\"\\\\u0634\\\\u062E\\\";\\n        t[\\\"\\\\uFD30\\\"] = \\\"\\\\u0634\\\\u0645\\\";\\n        t[\\\"\\\\uFD31\\\"] = \\\"\\\\u0633\\\\u0647\\\";\\n        t[\\\"\\\\uFD32\\\"] = \\\"\\\\u0634\\\\u0647\\\";\\n        t[\\\"\\\\uFD33\\\"] = \\\"\\\\u0637\\\\u0645\\\";\\n        t[\\\"\\\\uFD34\\\"] = \\\"\\\\u0633\\\\u062C\\\";\\n        t[\\\"\\\\uFD35\\\"] = \\\"\\\\u0633\\\\u062D\\\";\\n        t[\\\"\\\\uFD36\\\"] = \\\"\\\\u0633\\\\u062E\\\";\\n        t[\\\"\\\\uFD37\\\"] = \\\"\\\\u0634\\\\u062C\\\";\\n        t[\\\"\\\\uFD38\\\"] = \\\"\\\\u0634\\\\u062D\\\";\\n        t[\\\"\\\\uFD39\\\"] = \\\"\\\\u0634\\\\u062E\\\";\\n        t[\\\"\\\\uFD3A\\\"] = \\\"\\\\u0637\\\\u0645\\\";\\n        t[\\\"\\\\uFD3B\\\"] = \\\"\\\\u0638\\\\u0645\\\";\\n        t[\\\"\\\\uFD3C\\\"] = \\\"\\\\u0627\\\\u064B\\\";\\n        t[\\\"\\\\uFD3D\\\"] = \\\"\\\\u0627\\\\u064B\\\";\\n        t[\\\"\\\\uFD50\\\"] = \\\"\\\\u062A\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFD51\\\"] = \\\"\\\\u062A\\\\u062D\\\\u062C\\\";\\n        t[\\\"\\\\uFD52\\\"] = \\\"\\\\u062A\\\\u062D\\\\u062C\\\";\\n        t[\\\"\\\\uFD53\\\"] = \\\"\\\\u062A\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFD54\\\"] = \\\"\\\\u062A\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFD55\\\"] = \\\"\\\\u062A\\\\u0645\\\\u062C\\\";\\n        t[\\\"\\\\uFD56\\\"] = \\\"\\\\u062A\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD57\\\"] = \\\"\\\\u062A\\\\u0645\\\\u062E\\\";\\n        t[\\\"\\\\uFD58\\\"] = \\\"\\\\u062C\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD59\\\"] = \\\"\\\\u062C\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD5A\\\"] = \\\"\\\\u062D\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFD5B\\\"] = \\\"\\\\u062D\\\\u0645\\\\u0649\\\";\\n        t[\\\"\\\\uFD5C\\\"] = \\\"\\\\u0633\\\\u062D\\\\u062C\\\";\\n        t[\\\"\\\\uFD5D\\\"] = \\\"\\\\u0633\\\\u062C\\\\u062D\\\";\\n        t[\\\"\\\\uFD5E\\\"] = \\\"\\\\u0633\\\\u062C\\\\u0649\\\";\\n        t[\\\"\\\\uFD5F\\\"] = \\\"\\\\u0633\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD60\\\"] = \\\"\\\\u0633\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD61\\\"] = \\\"\\\\u0633\\\\u0645\\\\u062C\\\";\\n        t[\\\"\\\\uFD62\\\"] = \\\"\\\\u0633\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD63\\\"] = \\\"\\\\u0633\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD64\\\"] = \\\"\\\\u0635\\\\u062D\\\\u062D\\\";\\n        t[\\\"\\\\uFD65\\\"] = \\\"\\\\u0635\\\\u062D\\\\u062D\\\";\\n        t[\\\"\\\\uFD66\\\"] = \\\"\\\\u0635\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD67\\\"] = \\\"\\\\u0634\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFD68\\\"] = \\\"\\\\u0634\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFD69\\\"] = \\\"\\\\u0634\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFD6A\\\"] = \\\"\\\\u0634\\\\u0645\\\\u062E\\\";\\n        t[\\\"\\\\uFD6B\\\"] = \\\"\\\\u0634\\\\u0645\\\\u062E\\\";\\n        t[\\\"\\\\uFD6C\\\"] = \\\"\\\\u0634\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD6D\\\"] = \\\"\\\\u0634\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD6E\\\"] = \\\"\\\\u0636\\\\u062D\\\\u0649\\\";\\n        t[\\\"\\\\uFD6F\\\"] = \\\"\\\\u0636\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFD70\\\"] = \\\"\\\\u0636\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFD71\\\"] = \\\"\\\\u0637\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD72\\\"] = \\\"\\\\u0637\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD73\\\"] = \\\"\\\\u0637\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD74\\\"] = \\\"\\\\u0637\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFD75\\\"] = \\\"\\\\u0639\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFD76\\\"] = \\\"\\\\u0639\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD77\\\"] = \\\"\\\\u0639\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD78\\\"] = \\\"\\\\u0639\\\\u0645\\\\u0649\\\";\\n        t[\\\"\\\\uFD79\\\"] = \\\"\\\\u063A\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD7A\\\"] = \\\"\\\\u063A\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFD7B\\\"] = \\\"\\\\u063A\\\\u0645\\\\u0649\\\";\\n        t[\\\"\\\\uFD7C\\\"] = \\\"\\\\u0641\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFD7D\\\"] = \\\"\\\\u0641\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFD7E\\\"] = \\\"\\\\u0642\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD7F\\\"] = \\\"\\\\u0642\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD80\\\"] = \\\"\\\\u0644\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFD81\\\"] = \\\"\\\\u0644\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFD82\\\"] = \\\"\\\\u0644\\\\u062D\\\\u0649\\\";\\n        t[\\\"\\\\uFD83\\\"] = \\\"\\\\u0644\\\\u062C\\\\u062C\\\";\\n        t[\\\"\\\\uFD84\\\"] = \\\"\\\\u0644\\\\u062C\\\\u062C\\\";\\n        t[\\\"\\\\uFD85\\\"] = \\\"\\\\u0644\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFD86\\\"] = \\\"\\\\u0644\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFD87\\\"] = \\\"\\\\u0644\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD88\\\"] = \\\"\\\\u0644\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFD89\\\"] = \\\"\\\\u0645\\\\u062D\\\\u062C\\\";\\n        t[\\\"\\\\uFD8A\\\"] = \\\"\\\\u0645\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFD8B\\\"] = \\\"\\\\u0645\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFD8C\\\"] = \\\"\\\\u0645\\\\u062C\\\\u062D\\\";\\n        t[\\\"\\\\uFD8D\\\"] = \\\"\\\\u0645\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFD8E\\\"] = \\\"\\\\u0645\\\\u062E\\\\u062C\\\";\\n        t[\\\"\\\\uFD8F\\\"] = \\\"\\\\u0645\\\\u062E\\\\u0645\\\";\\n        t[\\\"\\\\uFD92\\\"] = \\\"\\\\u0645\\\\u062C\\\\u062E\\\";\\n        t[\\\"\\\\uFD93\\\"] = \\\"\\\\u0647\\\\u0645\\\\u062C\\\";\\n        t[\\\"\\\\uFD94\\\"] = \\\"\\\\u0647\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD95\\\"] = \\\"\\\\u0646\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFD96\\\"] = \\\"\\\\u0646\\\\u062D\\\\u0649\\\";\\n        t[\\\"\\\\uFD97\\\"] = \\\"\\\\u0646\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFD98\\\"] = \\\"\\\\u0646\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFD99\\\"] = \\\"\\\\u0646\\\\u062C\\\\u0649\\\";\\n        t[\\\"\\\\uFD9A\\\"] = \\\"\\\\u0646\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFD9B\\\"] = \\\"\\\\u0646\\\\u0645\\\\u0649\\\";\\n        t[\\\"\\\\uFD9C\\\"] = \\\"\\\\u064A\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD9D\\\"] = \\\"\\\\u064A\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFD9E\\\"] = \\\"\\\\u0628\\\\u062E\\\\u064A\\\";\\n        t[\\\"\\\\uFD9F\\\"] = \\\"\\\\u062A\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFDA0\\\"] = \\\"\\\\u062A\\\\u062C\\\\u0649\\\";\\n        t[\\\"\\\\uFDA1\\\"] = \\\"\\\\u062A\\\\u062E\\\\u064A\\\";\\n        t[\\\"\\\\uFDA2\\\"] = \\\"\\\\u062A\\\\u062E\\\\u0649\\\";\\n        t[\\\"\\\\uFDA3\\\"] = \\\"\\\\u062A\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDA4\\\"] = \\\"\\\\u062A\\\\u0645\\\\u0649\\\";\\n        t[\\\"\\\\uFDA5\\\"] = \\\"\\\\u062C\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDA6\\\"] = \\\"\\\\u062C\\\\u062D\\\\u0649\\\";\\n        t[\\\"\\\\uFDA7\\\"] = \\\"\\\\u062C\\\\u0645\\\\u0649\\\";\\n        t[\\\"\\\\uFDA8\\\"] = \\\"\\\\u0633\\\\u062E\\\\u0649\\\";\\n        t[\\\"\\\\uFDA9\\\"] = \\\"\\\\u0635\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFDAA\\\"] = \\\"\\\\u0634\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFDAB\\\"] = \\\"\\\\u0636\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFDAC\\\"] = \\\"\\\\u0644\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFDAD\\\"] = \\\"\\\\u0644\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDAE\\\"] = \\\"\\\\u064A\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFDAF\\\"] = \\\"\\\\u064A\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFDB0\\\"] = \\\"\\\\u064A\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDB1\\\"] = \\\"\\\\u0645\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDB2\\\"] = \\\"\\\\u0642\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDB3\\\"] = \\\"\\\\u0646\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFDB4\\\"] = \\\"\\\\u0642\\\\u0645\\\\u062D\\\";\\n        t[\\\"\\\\uFDB5\\\"] = \\\"\\\\u0644\\\\u062D\\\\u0645\\\";\\n        t[\\\"\\\\uFDB6\\\"] = \\\"\\\\u0639\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDB7\\\"] = \\\"\\\\u0643\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDB8\\\"] = \\\"\\\\u0646\\\\u062C\\\\u062D\\\";\\n        t[\\\"\\\\uFDB9\\\"] = \\\"\\\\u0645\\\\u062E\\\\u064A\\\";\\n        t[\\\"\\\\uFDBA\\\"] = \\\"\\\\u0644\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFDBB\\\"] = \\\"\\\\u0643\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFDBC\\\"] = \\\"\\\\u0644\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFDBD\\\"] = \\\"\\\\u0646\\\\u062C\\\\u062D\\\";\\n        t[\\\"\\\\uFDBE\\\"] = \\\"\\\\u062C\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFDBF\\\"] = \\\"\\\\u062D\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFDC0\\\"] = \\\"\\\\u0645\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFDC1\\\"] = \\\"\\\\u0641\\\\u0645\\\\u064A\\\";\\n        t[\\\"\\\\uFDC2\\\"] = \\\"\\\\u0628\\\\u062D\\\\u064A\\\";\\n        t[\\\"\\\\uFDC3\\\"] = \\\"\\\\u0643\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFDC4\\\"] = \\\"\\\\u0639\\\\u062C\\\\u0645\\\";\\n        t[\\\"\\\\uFDC5\\\"] = \\\"\\\\u0635\\\\u0645\\\\u0645\\\";\\n        t[\\\"\\\\uFDC6\\\"] = \\\"\\\\u0633\\\\u062E\\\\u064A\\\";\\n        t[\\\"\\\\uFDC7\\\"] = \\\"\\\\u0646\\\\u062C\\\\u064A\\\";\\n        t[\\\"\\\\uFE49\\\"] = \\\"\\\\u203E\\\";\\n        t[\\\"\\\\uFE4A\\\"] = \\\"\\\\u203E\\\";\\n        t[\\\"\\\\uFE4B\\\"] = \\\"\\\\u203E\\\";\\n        t[\\\"\\\\uFE4C\\\"] = \\\"\\\\u203E\\\";\\n        t[\\\"\\\\uFE4D\\\"] = \\\"_\\\";\\n        t[\\\"\\\\uFE4E\\\"] = \\\"_\\\";\\n        t[\\\"\\\\uFE4F\\\"] = \\\"_\\\";\\n        t[\\\"\\\\uFE80\\\"] = \\\"\\\\u0621\\\";\\n        t[\\\"\\\\uFE81\\\"] = \\\"\\\\u0622\\\";\\n        t[\\\"\\\\uFE82\\\"] = \\\"\\\\u0622\\\";\\n        t[\\\"\\\\uFE83\\\"] = \\\"\\\\u0623\\\";\\n        t[\\\"\\\\uFE84\\\"] = \\\"\\\\u0623\\\";\\n        t[\\\"\\\\uFE85\\\"] = \\\"\\\\u0624\\\";\\n        t[\\\"\\\\uFE86\\\"] = \\\"\\\\u0624\\\";\\n        t[\\\"\\\\uFE87\\\"] = \\\"\\\\u0625\\\";\\n        t[\\\"\\\\uFE88\\\"] = \\\"\\\\u0625\\\";\\n        t[\\\"\\\\uFE89\\\"] = \\\"\\\\u0626\\\";\\n        t[\\\"\\\\uFE8A\\\"] = \\\"\\\\u0626\\\";\\n        t[\\\"\\\\uFE8B\\\"] = \\\"\\\\u0626\\\";\\n        t[\\\"\\\\uFE8C\\\"] = \\\"\\\\u0626\\\";\\n        t[\\\"\\\\uFE8D\\\"] = \\\"\\\\u0627\\\";\\n        t[\\\"\\\\uFE8E\\\"] = \\\"\\\\u0627\\\";\\n        t[\\\"\\\\uFE8F\\\"] = \\\"\\\\u0628\\\";\\n        t[\\\"\\\\uFE90\\\"] = \\\"\\\\u0628\\\";\\n        t[\\\"\\\\uFE91\\\"] = \\\"\\\\u0628\\\";\\n        t[\\\"\\\\uFE92\\\"] = \\\"\\\\u0628\\\";\\n        t[\\\"\\\\uFE93\\\"] = \\\"\\\\u0629\\\";\\n        t[\\\"\\\\uFE94\\\"] = \\\"\\\\u0629\\\";\\n        t[\\\"\\\\uFE95\\\"] = \\\"\\\\u062A\\\";\\n        t[\\\"\\\\uFE96\\\"] = \\\"\\\\u062A\\\";\\n        t[\\\"\\\\uFE97\\\"] = \\\"\\\\u062A\\\";\\n        t[\\\"\\\\uFE98\\\"] = \\\"\\\\u062A\\\";\\n        t[\\\"\\\\uFE99\\\"] = \\\"\\\\u062B\\\";\\n        t[\\\"\\\\uFE9A\\\"] = \\\"\\\\u062B\\\";\\n        t[\\\"\\\\uFE9B\\\"] = \\\"\\\\u062B\\\";\\n        t[\\\"\\\\uFE9C\\\"] = \\\"\\\\u062B\\\";\\n        t[\\\"\\\\uFE9D\\\"] = \\\"\\\\u062C\\\";\\n        t[\\\"\\\\uFE9E\\\"] = \\\"\\\\u062C\\\";\\n        t[\\\"\\\\uFE9F\\\"] = \\\"\\\\u062C\\\";\\n        t[\\\"\\\\uFEA0\\\"] = \\\"\\\\u062C\\\";\\n        t[\\\"\\\\uFEA1\\\"] = \\\"\\\\u062D\\\";\\n        t[\\\"\\\\uFEA2\\\"] = \\\"\\\\u062D\\\";\\n        t[\\\"\\\\uFEA3\\\"] = \\\"\\\\u062D\\\";\\n        t[\\\"\\\\uFEA4\\\"] = \\\"\\\\u062D\\\";\\n        t[\\\"\\\\uFEA5\\\"] = \\\"\\\\u062E\\\";\\n        t[\\\"\\\\uFEA6\\\"] = \\\"\\\\u062E\\\";\\n        t[\\\"\\\\uFEA7\\\"] = \\\"\\\\u062E\\\";\\n        t[\\\"\\\\uFEA8\\\"] = \\\"\\\\u062E\\\";\\n        t[\\\"\\\\uFEA9\\\"] = \\\"\\\\u062F\\\";\\n        t[\\\"\\\\uFEAA\\\"] = \\\"\\\\u062F\\\";\\n        t[\\\"\\\\uFEAB\\\"] = \\\"\\\\u0630\\\";\\n        t[\\\"\\\\uFEAC\\\"] = \\\"\\\\u0630\\\";\\n        t[\\\"\\\\uFEAD\\\"] = \\\"\\\\u0631\\\";\\n        t[\\\"\\\\uFEAE\\\"] = \\\"\\\\u0631\\\";\\n        t[\\\"\\\\uFEAF\\\"] = \\\"\\\\u0632\\\";\\n        t[\\\"\\\\uFEB0\\\"] = \\\"\\\\u0632\\\";\\n        t[\\\"\\\\uFEB1\\\"] = \\\"\\\\u0633\\\";\\n        t[\\\"\\\\uFEB2\\\"] = \\\"\\\\u0633\\\";\\n        t[\\\"\\\\uFEB3\\\"] = \\\"\\\\u0633\\\";\\n        t[\\\"\\\\uFEB4\\\"] = \\\"\\\\u0633\\\";\\n        t[\\\"\\\\uFEB5\\\"] = \\\"\\\\u0634\\\";\\n        t[\\\"\\\\uFEB6\\\"] = \\\"\\\\u0634\\\";\\n        t[\\\"\\\\uFEB7\\\"] = \\\"\\\\u0634\\\";\\n        t[\\\"\\\\uFEB8\\\"] = \\\"\\\\u0634\\\";\\n        t[\\\"\\\\uFEB9\\\"] = \\\"\\\\u0635\\\";\\n        t[\\\"\\\\uFEBA\\\"] = \\\"\\\\u0635\\\";\\n        t[\\\"\\\\uFEBB\\\"] = \\\"\\\\u0635\\\";\\n        t[\\\"\\\\uFEBC\\\"] = \\\"\\\\u0635\\\";\\n        t[\\\"\\\\uFEBD\\\"] = \\\"\\\\u0636\\\";\\n        t[\\\"\\\\uFEBE\\\"] = \\\"\\\\u0636\\\";\\n        t[\\\"\\\\uFEBF\\\"] = \\\"\\\\u0636\\\";\\n        t[\\\"\\\\uFEC0\\\"] = \\\"\\\\u0636\\\";\\n        t[\\\"\\\\uFEC1\\\"] = \\\"\\\\u0637\\\";\\n        t[\\\"\\\\uFEC2\\\"] = \\\"\\\\u0637\\\";\\n        t[\\\"\\\\uFEC3\\\"] = \\\"\\\\u0637\\\";\\n        t[\\\"\\\\uFEC4\\\"] = \\\"\\\\u0637\\\";\\n        t[\\\"\\\\uFEC5\\\"] = \\\"\\\\u0638\\\";\\n        t[\\\"\\\\uFEC6\\\"] = \\\"\\\\u0638\\\";\\n        t[\\\"\\\\uFEC7\\\"] = \\\"\\\\u0638\\\";\\n        t[\\\"\\\\uFEC8\\\"] = \\\"\\\\u0638\\\";\\n        t[\\\"\\\\uFEC9\\\"] = \\\"\\\\u0639\\\";\\n        t[\\\"\\\\uFECA\\\"] = \\\"\\\\u0639\\\";\\n        t[\\\"\\\\uFECB\\\"] = \\\"\\\\u0639\\\";\\n        t[\\\"\\\\uFECC\\\"] = \\\"\\\\u0639\\\";\\n        t[\\\"\\\\uFECD\\\"] = \\\"\\\\u063A\\\";\\n        t[\\\"\\\\uFECE\\\"] = \\\"\\\\u063A\\\";\\n        t[\\\"\\\\uFECF\\\"] = \\\"\\\\u063A\\\";\\n        t[\\\"\\\\uFED0\\\"] = \\\"\\\\u063A\\\";\\n        t[\\\"\\\\uFED1\\\"] = \\\"\\\\u0641\\\";\\n        t[\\\"\\\\uFED2\\\"] = \\\"\\\\u0641\\\";\\n        t[\\\"\\\\uFED3\\\"] = \\\"\\\\u0641\\\";\\n        t[\\\"\\\\uFED4\\\"] = \\\"\\\\u0641\\\";\\n        t[\\\"\\\\uFED5\\\"] = \\\"\\\\u0642\\\";\\n        t[\\\"\\\\uFED6\\\"] = \\\"\\\\u0642\\\";\\n        t[\\\"\\\\uFED7\\\"] = \\\"\\\\u0642\\\";\\n        t[\\\"\\\\uFED8\\\"] = \\\"\\\\u0642\\\";\\n        t[\\\"\\\\uFED9\\\"] = \\\"\\\\u0643\\\";\\n        t[\\\"\\\\uFEDA\\\"] = \\\"\\\\u0643\\\";\\n        t[\\\"\\\\uFEDB\\\"] = \\\"\\\\u0643\\\";\\n        t[\\\"\\\\uFEDC\\\"] = \\\"\\\\u0643\\\";\\n        t[\\\"\\\\uFEDD\\\"] = \\\"\\\\u0644\\\";\\n        t[\\\"\\\\uFEDE\\\"] = \\\"\\\\u0644\\\";\\n        t[\\\"\\\\uFEDF\\\"] = \\\"\\\\u0644\\\";\\n        t[\\\"\\\\uFEE0\\\"] = \\\"\\\\u0644\\\";\\n        t[\\\"\\\\uFEE1\\\"] = \\\"\\\\u0645\\\";\\n        t[\\\"\\\\uFEE2\\\"] = \\\"\\\\u0645\\\";\\n        t[\\\"\\\\uFEE3\\\"] = \\\"\\\\u0645\\\";\\n        t[\\\"\\\\uFEE4\\\"] = \\\"\\\\u0645\\\";\\n        t[\\\"\\\\uFEE5\\\"] = \\\"\\\\u0646\\\";\\n        t[\\\"\\\\uFEE6\\\"] = \\\"\\\\u0646\\\";\\n        t[\\\"\\\\uFEE7\\\"] = \\\"\\\\u0646\\\";\\n        t[\\\"\\\\uFEE8\\\"] = \\\"\\\\u0646\\\";\\n        t[\\\"\\\\uFEE9\\\"] = \\\"\\\\u0647\\\";\\n        t[\\\"\\\\uFEEA\\\"] = \\\"\\\\u0647\\\";\\n        t[\\\"\\\\uFEEB\\\"] = \\\"\\\\u0647\\\";\\n        t[\\\"\\\\uFEEC\\\"] = \\\"\\\\u0647\\\";\\n        t[\\\"\\\\uFEED\\\"] = \\\"\\\\u0648\\\";\\n        t[\\\"\\\\uFEEE\\\"] = \\\"\\\\u0648\\\";\\n        t[\\\"\\\\uFEEF\\\"] = \\\"\\\\u0649\\\";\\n        t[\\\"\\\\uFEF0\\\"] = \\\"\\\\u0649\\\";\\n        t[\\\"\\\\uFEF1\\\"] = \\\"\\\\u064A\\\";\\n        t[\\\"\\\\uFEF2\\\"] = \\\"\\\\u064A\\\";\\n        t[\\\"\\\\uFEF3\\\"] = \\\"\\\\u064A\\\";\\n        t[\\\"\\\\uFEF4\\\"] = \\\"\\\\u064A\\\";\\n        t[\\\"\\\\uFEF5\\\"] = \\\"\\\\u0644\\\\u0622\\\";\\n        t[\\\"\\\\uFEF6\\\"] = \\\"\\\\u0644\\\\u0622\\\";\\n        t[\\\"\\\\uFEF7\\\"] = \\\"\\\\u0644\\\\u0623\\\";\\n        t[\\\"\\\\uFEF8\\\"] = \\\"\\\\u0644\\\\u0623\\\";\\n        t[\\\"\\\\uFEF9\\\"] = \\\"\\\\u0644\\\\u0625\\\";\\n        t[\\\"\\\\uFEFA\\\"] = \\\"\\\\u0644\\\\u0625\\\";\\n        t[\\\"\\\\uFEFB\\\"] = \\\"\\\\u0644\\\\u0627\\\";\\n        t[\\\"\\\\uFEFC\\\"] = \\\"\\\\u0644\\\\u0627\\\";\\n      });\\n\\n      function reverseIfRtl(chars) {\\n        var charsLength = chars.length;\\n\\n        if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\\n          return chars;\\n        }\\n\\n        var s = '';\\n\\n        for (var ii = charsLength - 1; ii >= 0; ii--) {\\n          s += chars[ii];\\n        }\\n\\n        return s;\\n      }\\n\\n      exports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\\n      exports.reverseIfRtl = reverseIfRtl;\\n      exports.getUnicodeRangeFor = getUnicodeRangeFor;\\n      exports.getNormalizedUnicodes = getNormalizedUnicodes;\\n      exports.getUnicodeForGlyph = getUnicodeForGlyph;\\n      /***/\\n    },\\n    /* 180 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.FontRendererFactory = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _cff_parser = __w_pdfjs_require__(174);\\n\\n      var _glyphlist = __w_pdfjs_require__(177);\\n\\n      var _encodings = __w_pdfjs_require__(176);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _possibleConstructorReturn(self, call) {\\n        if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n          return call;\\n        }\\n\\n        return _assertThisInitialized(self);\\n      }\\n\\n      function _assertThisInitialized(self) {\\n        if (self === void 0) {\\n          throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n        }\\n\\n        return self;\\n      }\\n\\n      function _getPrototypeOf(o) {\\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n          return o.__proto__ || Object.getPrototypeOf(o);\\n        };\\n        return _getPrototypeOf(o);\\n      }\\n\\n      function _inherits(subClass, superClass) {\\n        if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n          throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n        }\\n\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n          constructor: {\\n            value: subClass,\\n            writable: true,\\n            configurable: true\\n          }\\n        });\\n        if (superClass) _setPrototypeOf(subClass, superClass);\\n      }\\n\\n      function _setPrototypeOf(o, p) {\\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n          o.__proto__ = p;\\n          return o;\\n        };\\n\\n        return _setPrototypeOf(o, p);\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var FontRendererFactory = function FontRendererFactoryClosure() {\\n        function getLong(data, offset) {\\n          return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n        }\\n\\n        function getUshort(data, offset) {\\n          return data[offset] << 8 | data[offset + 1];\\n        }\\n\\n        function parseCmap(data, start, end) {\\n          var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\\n          var format = getUshort(data, start + offset);\\n          var ranges, p, i;\\n\\n          if (format === 4) {\\n            getUshort(data, start + offset + 2);\\n            var segCount = getUshort(data, start + offset + 6) >> 1;\\n            p = start + offset + 14;\\n            ranges = [];\\n\\n            for (i = 0; i < segCount; i++, p += 2) {\\n              ranges[i] = {\\n                end: getUshort(data, p)\\n              };\\n            }\\n\\n            p += 2;\\n\\n            for (i = 0; i < segCount; i++, p += 2) {\\n              ranges[i].start = getUshort(data, p);\\n            }\\n\\n            for (i = 0; i < segCount; i++, p += 2) {\\n              ranges[i].idDelta = getUshort(data, p);\\n            }\\n\\n            for (i = 0; i < segCount; i++, p += 2) {\\n              var idOffset = getUshort(data, p);\\n\\n              if (idOffset === 0) {\\n                continue;\\n              }\\n\\n              ranges[i].ids = [];\\n\\n              for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\\n                ranges[i].ids[j] = getUshort(data, p + idOffset);\\n                idOffset += 2;\\n              }\\n            }\\n\\n            return ranges;\\n          } else if (format === 12) {\\n            getLong(data, start + offset + 4);\\n            var groups = getLong(data, start + offset + 12);\\n            p = start + offset + 16;\\n            ranges = [];\\n\\n            for (i = 0; i < groups; i++) {\\n              ranges.push({\\n                start: getLong(data, p),\\n                end: getLong(data, p + 4),\\n                idDelta: getLong(data, p + 8) - getLong(data, p)\\n              });\\n              p += 12;\\n            }\\n\\n            return ranges;\\n          }\\n\\n          throw new _util.FormatError(\\\"unsupported cmap: \\\".concat(format));\\n        }\\n\\n        function parseCff(data, start, end, seacAnalysisEnabled) {\\n          var properties = {};\\n          var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\\n          var cff = parser.parse();\\n          return {\\n            glyphs: cff.charStrings.objects,\\n            subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\\n            gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\\n            isCFFCIDFont: cff.isCIDFont,\\n            fdSelect: cff.fdSelect,\\n            fdArray: cff.fdArray\\n          };\\n        }\\n\\n        function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\\n          var itemSize, itemDecode;\\n\\n          if (isGlyphLocationsLong) {\\n            itemSize = 4;\\n\\n            itemDecode = function fontItemDecodeLong(data, offset) {\\n              return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\n            };\\n          } else {\\n            itemSize = 2;\\n\\n            itemDecode = function fontItemDecode(data, offset) {\\n              return data[offset] << 9 | data[offset + 1] << 1;\\n            };\\n          }\\n\\n          var glyphs = [];\\n          var startOffset = itemDecode(loca, 0);\\n\\n          for (var j = itemSize; j < loca.length; j += itemSize) {\\n            var endOffset = itemDecode(loca, j);\\n            glyphs.push(glyf.subarray(startOffset, endOffset));\\n            startOffset = endOffset;\\n          }\\n\\n          return glyphs;\\n        }\\n\\n        function lookupCmap(ranges, unicode) {\\n          var code = unicode.codePointAt(0),\\n              gid = 0;\\n          var l = 0,\\n              r = ranges.length - 1;\\n\\n          while (l < r) {\\n            var c = l + r + 1 >> 1;\\n\\n            if (code < ranges[c].start) {\\n              r = c - 1;\\n            } else {\\n              l = c;\\n            }\\n          }\\n\\n          if (ranges[l].start <= code && code <= ranges[l].end) {\\n            gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\\n          }\\n\\n          return {\\n            charCode: code,\\n            glyphId: gid\\n          };\\n        }\\n\\n        function compileGlyf(code, cmds, font) {\\n          function moveTo(x, y) {\\n            cmds.push({\\n              cmd: 'moveTo',\\n              args: [x, y]\\n            });\\n          }\\n\\n          function lineTo(x, y) {\\n            cmds.push({\\n              cmd: 'lineTo',\\n              args: [x, y]\\n            });\\n          }\\n\\n          function quadraticCurveTo(xa, ya, x, y) {\\n            cmds.push({\\n              cmd: 'quadraticCurveTo',\\n              args: [xa, ya, x, y]\\n            });\\n          }\\n\\n          var i = 0;\\n          var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\\n          var flags;\\n          var x = 0,\\n              y = 0;\\n          i += 10;\\n\\n          if (numberOfContours < 0) {\\n            do {\\n              flags = code[i] << 8 | code[i + 1];\\n              var glyphIndex = code[i + 2] << 8 | code[i + 3];\\n              i += 4;\\n              var arg1, arg2;\\n\\n              if (flags & 0x01) {\\n                arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\\n                arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\\n                i += 4;\\n              } else {\\n                arg1 = code[i++];\\n                arg2 = code[i++];\\n              }\\n\\n              if (flags & 0x02) {\\n                x = arg1;\\n                y = arg2;\\n              } else {\\n                x = 0;\\n                y = 0;\\n              }\\n\\n              var scaleX = 1,\\n                  scaleY = 1,\\n                  scale01 = 0,\\n                  scale10 = 0;\\n\\n              if (flags & 0x08) {\\n                scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n                i += 2;\\n              } else if (flags & 0x40) {\\n                scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n                scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\\n                i += 4;\\n              } else if (flags & 0x80) {\\n                scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\n                scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\\n                scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\\n                scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\\n                i += 8;\\n              }\\n\\n              var subglyph = font.glyphs[glyphIndex];\\n\\n              if (subglyph) {\\n                cmds.push({\\n                  cmd: 'save'\\n                });\\n                cmds.push({\\n                  cmd: 'transform',\\n                  args: [scaleX, scale01, scale10, scaleY, x, y]\\n                });\\n                compileGlyf(subglyph, cmds, font);\\n                cmds.push({\\n                  cmd: 'restore'\\n                });\\n              }\\n            } while (flags & 0x20);\\n          } else {\\n            var endPtsOfContours = [];\\n            var j, jj;\\n\\n            for (j = 0; j < numberOfContours; j++) {\\n              endPtsOfContours.push(code[i] << 8 | code[i + 1]);\\n              i += 2;\\n            }\\n\\n            var instructionLength = code[i] << 8 | code[i + 1];\\n            i += 2 + instructionLength;\\n            var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\\n            var points = [];\\n\\n            while (points.length < numberOfPoints) {\\n              flags = code[i++];\\n              var repeat = 1;\\n\\n              if (flags & 0x08) {\\n                repeat += code[i++];\\n              }\\n\\n              while (repeat-- > 0) {\\n                points.push({\\n                  flags: flags\\n                });\\n              }\\n            }\\n\\n            for (j = 0; j < numberOfPoints; j++) {\\n              switch (points[j].flags & 0x12) {\\n                case 0x00:\\n                  x += (code[i] << 24 | code[i + 1] << 16) >> 16;\\n                  i += 2;\\n                  break;\\n\\n                case 0x02:\\n                  x -= code[i++];\\n                  break;\\n\\n                case 0x12:\\n                  x += code[i++];\\n                  break;\\n              }\\n\\n              points[j].x = x;\\n            }\\n\\n            for (j = 0; j < numberOfPoints; j++) {\\n              switch (points[j].flags & 0x24) {\\n                case 0x00:\\n                  y += (code[i] << 24 | code[i + 1] << 16) >> 16;\\n                  i += 2;\\n                  break;\\n\\n                case 0x04:\\n                  y -= code[i++];\\n                  break;\\n\\n                case 0x24:\\n                  y += code[i++];\\n                  break;\\n              }\\n\\n              points[j].y = y;\\n            }\\n\\n            var startPoint = 0;\\n\\n            for (i = 0; i < numberOfContours; i++) {\\n              var endPoint = endPtsOfContours[i];\\n              var contour = points.slice(startPoint, endPoint + 1);\\n\\n              if (contour[0].flags & 1) {\\n                contour.push(contour[0]);\\n              } else if (contour[contour.length - 1].flags & 1) {\\n                contour.unshift(contour[contour.length - 1]);\\n              } else {\\n                var p = {\\n                  flags: 1,\\n                  x: (contour[0].x + contour[contour.length - 1].x) / 2,\\n                  y: (contour[0].y + contour[contour.length - 1].y) / 2\\n                };\\n                contour.unshift(p);\\n                contour.push(p);\\n              }\\n\\n              moveTo(contour[0].x, contour[0].y);\\n\\n              for (j = 1, jj = contour.length; j < jj; j++) {\\n                if (contour[j].flags & 1) {\\n                  lineTo(contour[j].x, contour[j].y);\\n                } else if (contour[j + 1].flags & 1) {\\n                  quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\\n                  j++;\\n                } else {\\n                  quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\\n                }\\n              }\\n\\n              startPoint = endPoint + 1;\\n            }\\n          }\\n        }\\n\\n        function compileCharString(code, cmds, font, glyphId) {\\n          var stack = [];\\n          var x = 0,\\n              y = 0;\\n          var stems = 0;\\n\\n          function moveTo(x, y) {\\n            cmds.push({\\n              cmd: 'moveTo',\\n              args: [x, y]\\n            });\\n          }\\n\\n          function lineTo(x, y) {\\n            cmds.push({\\n              cmd: 'lineTo',\\n              args: [x, y]\\n            });\\n          }\\n\\n          function bezierCurveTo(x1, y1, x2, y2, x, y) {\\n            cmds.push({\\n              cmd: 'bezierCurveTo',\\n              args: [x1, y1, x2, y2, x, y]\\n            });\\n          }\\n\\n          function parse(code) {\\n            var i = 0;\\n\\n            while (i < code.length) {\\n              var stackClean = false;\\n              var v = code[i++];\\n              var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\\n\\n              switch (v) {\\n                case 1:\\n                  stems += stack.length >> 1;\\n                  stackClean = true;\\n                  break;\\n\\n                case 3:\\n                  stems += stack.length >> 1;\\n                  stackClean = true;\\n                  break;\\n\\n                case 4:\\n                  y += stack.pop();\\n                  moveTo(x, y);\\n                  stackClean = true;\\n                  break;\\n\\n                case 5:\\n                  while (stack.length > 0) {\\n                    x += stack.shift();\\n                    y += stack.shift();\\n                    lineTo(x, y);\\n                  }\\n\\n                  break;\\n\\n                case 6:\\n                  while (stack.length > 0) {\\n                    x += stack.shift();\\n                    lineTo(x, y);\\n\\n                    if (stack.length === 0) {\\n                      break;\\n                    }\\n\\n                    y += stack.shift();\\n                    lineTo(x, y);\\n                  }\\n\\n                  break;\\n\\n                case 7:\\n                  while (stack.length > 0) {\\n                    y += stack.shift();\\n                    lineTo(x, y);\\n\\n                    if (stack.length === 0) {\\n                      break;\\n                    }\\n\\n                    x += stack.shift();\\n                    lineTo(x, y);\\n                  }\\n\\n                  break;\\n\\n                case 8:\\n                  while (stack.length > 0) {\\n                    xa = x + stack.shift();\\n                    ya = y + stack.shift();\\n                    xb = xa + stack.shift();\\n                    yb = ya + stack.shift();\\n                    x = xb + stack.shift();\\n                    y = yb + stack.shift();\\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\\n                  }\\n\\n                  break;\\n\\n                case 10:\\n                  n = stack.pop();\\n                  subrCode = null;\\n\\n                  if (font.isCFFCIDFont) {\\n                    var fdIndex = font.fdSelect.getFDIndex(glyphId);\\n\\n                    if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\\n                      var fontDict = font.fdArray[fdIndex],\\n                          subrs = void 0;\\n\\n                      if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\\n                        subrs = fontDict.privateDict.subrsIndex.objects;\\n                      }\\n\\n                      if (subrs) {\\n                        var numSubrs = subrs.length;\\n                        n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\\n                        subrCode = subrs[n];\\n                      }\\n                    } else {\\n                      (0, _util.warn)('Invalid fd index for glyph index.');\\n                    }\\n                  } else {\\n                    subrCode = font.subrs[n + font.subrsBias];\\n                  }\\n\\n                  if (subrCode) {\\n                    parse(subrCode);\\n                  }\\n\\n                  break;\\n\\n                case 11:\\n                  return;\\n\\n                case 12:\\n                  v = code[i++];\\n\\n                  switch (v) {\\n                    case 34:\\n                      xa = x + stack.shift();\\n                      xb = xa + stack.shift();\\n                      y1 = y + stack.shift();\\n                      x = xb + stack.shift();\\n                      bezierCurveTo(xa, y, xb, y1, x, y1);\\n                      xa = x + stack.shift();\\n                      xb = xa + stack.shift();\\n                      x = xb + stack.shift();\\n                      bezierCurveTo(xa, y1, xb, y, x, y);\\n                      break;\\n\\n                    case 35:\\n                      xa = x + stack.shift();\\n                      ya = y + stack.shift();\\n                      xb = xa + stack.shift();\\n                      yb = ya + stack.shift();\\n                      x = xb + stack.shift();\\n                      y = yb + stack.shift();\\n                      bezierCurveTo(xa, ya, xb, yb, x, y);\\n                      xa = x + stack.shift();\\n                      ya = y + stack.shift();\\n                      xb = xa + stack.shift();\\n                      yb = ya + stack.shift();\\n                      x = xb + stack.shift();\\n                      y = yb + stack.shift();\\n                      bezierCurveTo(xa, ya, xb, yb, x, y);\\n                      stack.pop();\\n                      break;\\n\\n                    case 36:\\n                      xa = x + stack.shift();\\n                      y1 = y + stack.shift();\\n                      xb = xa + stack.shift();\\n                      y2 = y1 + stack.shift();\\n                      x = xb + stack.shift();\\n                      bezierCurveTo(xa, y1, xb, y2, x, y2);\\n                      xa = x + stack.shift();\\n                      xb = xa + stack.shift();\\n                      y3 = y2 + stack.shift();\\n                      x = xb + stack.shift();\\n                      bezierCurveTo(xa, y2, xb, y3, x, y);\\n                      break;\\n\\n                    case 37:\\n                      var x0 = x,\\n                          y0 = y;\\n                      xa = x + stack.shift();\\n                      ya = y + stack.shift();\\n                      xb = xa + stack.shift();\\n                      yb = ya + stack.shift();\\n                      x = xb + stack.shift();\\n                      y = yb + stack.shift();\\n                      bezierCurveTo(xa, ya, xb, yb, x, y);\\n                      xa = x + stack.shift();\\n                      ya = y + stack.shift();\\n                      xb = xa + stack.shift();\\n                      yb = ya + stack.shift();\\n                      x = xb;\\n                      y = yb;\\n\\n                      if (Math.abs(x - x0) > Math.abs(y - y0)) {\\n                        x += stack.shift();\\n                      } else {\\n                        y += stack.shift();\\n                      }\\n\\n                      bezierCurveTo(xa, ya, xb, yb, x, y);\\n                      break;\\n\\n                    default:\\n                      throw new _util.FormatError(\\\"unknown operator: 12 \\\".concat(v));\\n                  }\\n\\n                  break;\\n\\n                case 14:\\n                  if (stack.length >= 4) {\\n                    var achar = stack.pop();\\n                    var bchar = stack.pop();\\n                    y = stack.pop();\\n                    x = stack.pop();\\n                    cmds.push({\\n                      cmd: 'save'\\n                    });\\n                    cmds.push({\\n                      cmd: 'translate',\\n                      args: [x, y]\\n                    });\\n                    var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\\n                    compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\\n                    cmds.push({\\n                      cmd: 'restore'\\n                    });\\n                    cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\\n                    compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\\n                  }\\n\\n                  return;\\n\\n                case 18:\\n                  stems += stack.length >> 1;\\n                  stackClean = true;\\n                  break;\\n\\n                case 19:\\n                  stems += stack.length >> 1;\\n                  i += stems + 7 >> 3;\\n                  stackClean = true;\\n                  break;\\n\\n                case 20:\\n                  stems += stack.length >> 1;\\n                  i += stems + 7 >> 3;\\n                  stackClean = true;\\n                  break;\\n\\n                case 21:\\n                  y += stack.pop();\\n                  x += stack.pop();\\n                  moveTo(x, y);\\n                  stackClean = true;\\n                  break;\\n\\n                case 22:\\n                  x += stack.pop();\\n                  moveTo(x, y);\\n                  stackClean = true;\\n                  break;\\n\\n                case 23:\\n                  stems += stack.length >> 1;\\n                  stackClean = true;\\n                  break;\\n\\n                case 24:\\n                  while (stack.length > 2) {\\n                    xa = x + stack.shift();\\n                    ya = y + stack.shift();\\n                    xb = xa + stack.shift();\\n                    yb = ya + stack.shift();\\n                    x = xb + stack.shift();\\n                    y = yb + stack.shift();\\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\\n                  }\\n\\n                  x += stack.shift();\\n                  y += stack.shift();\\n                  lineTo(x, y);\\n                  break;\\n\\n                case 25:\\n                  while (stack.length > 6) {\\n                    x += stack.shift();\\n                    y += stack.shift();\\n                    lineTo(x, y);\\n                  }\\n\\n                  xa = x + stack.shift();\\n                  ya = y + stack.shift();\\n                  xb = xa + stack.shift();\\n                  yb = ya + stack.shift();\\n                  x = xb + stack.shift();\\n                  y = yb + stack.shift();\\n                  bezierCurveTo(xa, ya, xb, yb, x, y);\\n                  break;\\n\\n                case 26:\\n                  if (stack.length % 2) {\\n                    x += stack.shift();\\n                  }\\n\\n                  while (stack.length > 0) {\\n                    xa = x;\\n                    ya = y + stack.shift();\\n                    xb = xa + stack.shift();\\n                    yb = ya + stack.shift();\\n                    x = xb;\\n                    y = yb + stack.shift();\\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\\n                  }\\n\\n                  break;\\n\\n                case 27:\\n                  if (stack.length % 2) {\\n                    y += stack.shift();\\n                  }\\n\\n                  while (stack.length > 0) {\\n                    xa = x + stack.shift();\\n                    ya = y;\\n                    xb = xa + stack.shift();\\n                    yb = ya + stack.shift();\\n                    x = xb + stack.shift();\\n                    y = yb;\\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\\n                  }\\n\\n                  break;\\n\\n                case 28:\\n                  stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\\n                  i += 2;\\n                  break;\\n\\n                case 29:\\n                  n = stack.pop() + font.gsubrsBias;\\n                  subrCode = font.gsubrs[n];\\n\\n                  if (subrCode) {\\n                    parse(subrCode);\\n                  }\\n\\n                  break;\\n\\n                case 30:\\n                  while (stack.length > 0) {\\n                    xa = x;\\n                    ya = y + stack.shift();\\n                    xb = xa + stack.shift();\\n                    yb = ya + stack.shift();\\n                    x = xb + stack.shift();\\n                    y = yb + (stack.length === 1 ? stack.shift() : 0);\\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\\n\\n                    if (stack.length === 0) {\\n                      break;\\n                    }\\n\\n                    xa = x + stack.shift();\\n                    ya = y;\\n                    xb = xa + stack.shift();\\n                    yb = ya + stack.shift();\\n                    y = yb + stack.shift();\\n                    x = xb + (stack.length === 1 ? stack.shift() : 0);\\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\\n                  }\\n\\n                  break;\\n\\n                case 31:\\n                  while (stack.length > 0) {\\n                    xa = x + stack.shift();\\n                    ya = y;\\n                    xb = xa + stack.shift();\\n                    yb = ya + stack.shift();\\n                    y = yb + stack.shift();\\n                    x = xb + (stack.length === 1 ? stack.shift() : 0);\\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\\n\\n                    if (stack.length === 0) {\\n                      break;\\n                    }\\n\\n                    xa = x;\\n                    ya = y + stack.shift();\\n                    xb = xa + stack.shift();\\n                    yb = ya + stack.shift();\\n                    x = xb + stack.shift();\\n                    y = yb + (stack.length === 1 ? stack.shift() : 0);\\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\\n                  }\\n\\n                  break;\\n\\n                default:\\n                  if (v < 32) {\\n                    throw new _util.FormatError(\\\"unknown operator: \\\".concat(v));\\n                  }\\n\\n                  if (v < 247) {\\n                    stack.push(v - 139);\\n                  } else if (v < 251) {\\n                    stack.push((v - 247) * 256 + code[i++] + 108);\\n                  } else if (v < 255) {\\n                    stack.push(-(v - 251) * 256 - code[i++] - 108);\\n                  } else {\\n                    stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\\n                    i += 4;\\n                  }\\n\\n                  break;\\n              }\\n\\n              if (stackClean) {\\n                stack.length = 0;\\n              }\\n            }\\n          }\\n\\n          parse(code);\\n        }\\n\\n        var NOOP = [];\\n\\n        var CompiledFont =\\n        /*#__PURE__*/\\n        function () {\\n          function CompiledFont(fontMatrix) {\\n            _classCallCheck(this, CompiledFont);\\n\\n            if (this.constructor === CompiledFont) {\\n              (0, _util.unreachable)('Cannot initialize CompiledFont.');\\n            }\\n\\n            this.fontMatrix = fontMatrix;\\n            this.compiledGlyphs = Object.create(null);\\n            this.compiledCharCodeToGlyphId = Object.create(null);\\n          }\\n\\n          _createClass(CompiledFont, [{\\n            key: \\\"getPathJs\\\",\\n            value: function getPathJs(unicode) {\\n              var cmap = lookupCmap(this.cmap, unicode);\\n              var fn = this.compiledGlyphs[cmap.glyphId];\\n\\n              if (!fn) {\\n                fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\\n                this.compiledGlyphs[cmap.glyphId] = fn;\\n              }\\n\\n              if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\\n                this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\\n              }\\n\\n              return fn;\\n            }\\n          }, {\\n            key: \\\"compileGlyph\\\",\\n            value: function compileGlyph(code, glyphId) {\\n              if (!code || code.length === 0 || code[0] === 14) {\\n                return NOOP;\\n              }\\n\\n              var fontMatrix = this.fontMatrix;\\n\\n              if (this.isCFFCIDFont) {\\n                var fdIndex = this.fdSelect.getFDIndex(glyphId);\\n\\n                if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\\n                  var fontDict = this.fdArray[fdIndex];\\n                  fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\\n                } else {\\n                  (0, _util.warn)('Invalid fd index for glyph index.');\\n                }\\n              }\\n\\n              var cmds = [];\\n              cmds.push({\\n                cmd: 'save'\\n              });\\n              cmds.push({\\n                cmd: 'transform',\\n                args: fontMatrix.slice()\\n              });\\n              cmds.push({\\n                cmd: 'scale',\\n                args: ['size', '-size']\\n              });\\n              this.compileGlyphImpl(code, cmds, glyphId);\\n              cmds.push({\\n                cmd: 'restore'\\n              });\\n              return cmds;\\n            }\\n          }, {\\n            key: \\\"compileGlyphImpl\\\",\\n            value: function compileGlyphImpl() {\\n              (0, _util.unreachable)('Children classes should implement this.');\\n            }\\n          }, {\\n            key: \\\"hasBuiltPath\\\",\\n            value: function hasBuiltPath(unicode) {\\n              var cmap = lookupCmap(this.cmap, unicode);\\n              return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\\n            }\\n          }]);\\n\\n          return CompiledFont;\\n        }();\\n\\n        var TrueTypeCompiled =\\n        /*#__PURE__*/\\n        function (_CompiledFont) {\\n          _inherits(TrueTypeCompiled, _CompiledFont);\\n\\n          function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\\n            var _this;\\n\\n            _classCallCheck(this, TrueTypeCompiled);\\n\\n            _this = _possibleConstructorReturn(this, _getPrototypeOf(TrueTypeCompiled).call(this, fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0]));\\n            _this.glyphs = glyphs;\\n            _this.cmap = cmap;\\n            return _this;\\n          }\\n\\n          _createClass(TrueTypeCompiled, [{\\n            key: \\\"compileGlyphImpl\\\",\\n            value: function compileGlyphImpl(code, cmds) {\\n              compileGlyf(code, cmds, this);\\n            }\\n          }]);\\n\\n          return TrueTypeCompiled;\\n        }(CompiledFont);\\n\\n        var Type2Compiled =\\n        /*#__PURE__*/\\n        function (_CompiledFont2) {\\n          _inherits(Type2Compiled, _CompiledFont2);\\n\\n          function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\\n            var _this2;\\n\\n            _classCallCheck(this, Type2Compiled);\\n\\n            _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Type2Compiled).call(this, fontMatrix || [0.001, 0, 0, 0.001, 0, 0]));\\n            _this2.glyphs = cffInfo.glyphs;\\n            _this2.gsubrs = cffInfo.gsubrs || [];\\n            _this2.subrs = cffInfo.subrs || [];\\n            _this2.cmap = cmap;\\n            _this2.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\\n            _this2.gsubrsBias = _this2.gsubrs.length < 1240 ? 107 : _this2.gsubrs.length < 33900 ? 1131 : 32768;\\n            _this2.subrsBias = _this2.subrs.length < 1240 ? 107 : _this2.subrs.length < 33900 ? 1131 : 32768;\\n            _this2.isCFFCIDFont = cffInfo.isCFFCIDFont;\\n            _this2.fdSelect = cffInfo.fdSelect;\\n            _this2.fdArray = cffInfo.fdArray;\\n            return _this2;\\n          }\\n\\n          _createClass(Type2Compiled, [{\\n            key: \\\"compileGlyphImpl\\\",\\n            value: function compileGlyphImpl(code, cmds, glyphId) {\\n              compileCharString(code, cmds, this, glyphId);\\n            }\\n          }]);\\n\\n          return Type2Compiled;\\n        }(CompiledFont);\\n\\n        return {\\n          create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\\n            var data = new Uint8Array(font.data);\\n            var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\\n            var numTables = getUshort(data, 4);\\n\\n            for (var i = 0, p = 12; i < numTables; i++, p += 16) {\\n              var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\\n              var offset = getLong(data, p + 8);\\n              var length = getLong(data, p + 12);\\n\\n              switch (tag) {\\n                case 'cmap':\\n                  cmap = parseCmap(data, offset, offset + length);\\n                  break;\\n\\n                case 'glyf':\\n                  glyf = data.subarray(offset, offset + length);\\n                  break;\\n\\n                case 'loca':\\n                  loca = data.subarray(offset, offset + length);\\n                  break;\\n\\n                case 'head':\\n                  unitsPerEm = getUshort(data, offset + 18);\\n                  indexToLocFormat = getUshort(data, offset + 50);\\n                  break;\\n\\n                case 'CFF ':\\n                  cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\\n                  break;\\n              }\\n            }\\n\\n            if (glyf) {\\n              var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\\n              return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\\n            }\\n\\n            return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\\n          }\\n        };\\n      }();\\n\\n      exports.FontRendererFactory = FontRendererFactory;\\n      /***/\\n    },\\n    /* 181 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.Type1Parser = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _encodings = __w_pdfjs_require__(176);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var HINTING_ENABLED = false;\\n\\n      var Type1CharString = function Type1CharStringClosure() {\\n        var COMMAND_MAP = {\\n          'hstem': [1],\\n          'vstem': [3],\\n          'vmoveto': [4],\\n          'rlineto': [5],\\n          'hlineto': [6],\\n          'vlineto': [7],\\n          'rrcurveto': [8],\\n          'callsubr': [10],\\n          'flex': [12, 35],\\n          'drop': [12, 18],\\n          'endchar': [14],\\n          'rmoveto': [21],\\n          'hmoveto': [22],\\n          'vhcurveto': [30],\\n          'hvcurveto': [31]\\n        };\\n\\n        function Type1CharString() {\\n          this.width = 0;\\n          this.lsb = 0;\\n          this.flexing = false;\\n          this.output = [];\\n          this.stack = [];\\n        }\\n\\n        Type1CharString.prototype = {\\n          convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\\n            var count = encoded.length;\\n            var error = false;\\n            var wx, sbx, subrNumber;\\n\\n            for (var i = 0; i < count; i++) {\\n              var value = encoded[i];\\n\\n              if (value < 32) {\\n                if (value === 12) {\\n                  value = (value << 8) + encoded[++i];\\n                }\\n\\n                switch (value) {\\n                  case 1:\\n                    if (!HINTING_ENABLED) {\\n                      this.stack = [];\\n                      break;\\n                    }\\n\\n                    error = this.executeCommand(2, COMMAND_MAP.hstem);\\n                    break;\\n\\n                  case 3:\\n                    if (!HINTING_ENABLED) {\\n                      this.stack = [];\\n                      break;\\n                    }\\n\\n                    error = this.executeCommand(2, COMMAND_MAP.vstem);\\n                    break;\\n\\n                  case 4:\\n                    if (this.flexing) {\\n                      if (this.stack.length < 1) {\\n                        error = true;\\n                        break;\\n                      }\\n\\n                      var dy = this.stack.pop();\\n                      this.stack.push(0, dy);\\n                      break;\\n                    }\\n\\n                    error = this.executeCommand(1, COMMAND_MAP.vmoveto);\\n                    break;\\n\\n                  case 5:\\n                    error = this.executeCommand(2, COMMAND_MAP.rlineto);\\n                    break;\\n\\n                  case 6:\\n                    error = this.executeCommand(1, COMMAND_MAP.hlineto);\\n                    break;\\n\\n                  case 7:\\n                    error = this.executeCommand(1, COMMAND_MAP.vlineto);\\n                    break;\\n\\n                  case 8:\\n                    error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\\n                    break;\\n\\n                  case 9:\\n                    this.stack = [];\\n                    break;\\n\\n                  case 10:\\n                    if (this.stack.length < 1) {\\n                      error = true;\\n                      break;\\n                    }\\n\\n                    subrNumber = this.stack.pop();\\n\\n                    if (!subrs[subrNumber]) {\\n                      error = true;\\n                      break;\\n                    }\\n\\n                    error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\\n                    break;\\n\\n                  case 11:\\n                    return error;\\n\\n                  case 13:\\n                    if (this.stack.length < 2) {\\n                      error = true;\\n                      break;\\n                    }\\n\\n                    wx = this.stack.pop();\\n                    sbx = this.stack.pop();\\n                    this.lsb = sbx;\\n                    this.width = wx;\\n                    this.stack.push(wx, sbx);\\n                    error = this.executeCommand(2, COMMAND_MAP.hmoveto);\\n                    break;\\n\\n                  case 14:\\n                    this.output.push(COMMAND_MAP.endchar[0]);\\n                    break;\\n\\n                  case 21:\\n                    if (this.flexing) {\\n                      break;\\n                    }\\n\\n                    error = this.executeCommand(2, COMMAND_MAP.rmoveto);\\n                    break;\\n\\n                  case 22:\\n                    if (this.flexing) {\\n                      this.stack.push(0);\\n                      break;\\n                    }\\n\\n                    error = this.executeCommand(1, COMMAND_MAP.hmoveto);\\n                    break;\\n\\n                  case 30:\\n                    error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\\n                    break;\\n\\n                  case 31:\\n                    error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\\n                    break;\\n\\n                  case (12 << 8) + 0:\\n                    this.stack = [];\\n                    break;\\n\\n                  case (12 << 8) + 1:\\n                    if (!HINTING_ENABLED) {\\n                      this.stack = [];\\n                      break;\\n                    }\\n\\n                    error = this.executeCommand(2, COMMAND_MAP.vstem);\\n                    break;\\n\\n                  case (12 << 8) + 2:\\n                    if (!HINTING_ENABLED) {\\n                      this.stack = [];\\n                      break;\\n                    }\\n\\n                    error = this.executeCommand(2, COMMAND_MAP.hstem);\\n                    break;\\n\\n                  case (12 << 8) + 6:\\n                    if (seacAnalysisEnabled) {\\n                      this.seac = this.stack.splice(-4, 4);\\n                      error = this.executeCommand(0, COMMAND_MAP.endchar);\\n                    } else {\\n                      error = this.executeCommand(4, COMMAND_MAP.endchar);\\n                    }\\n\\n                    break;\\n\\n                  case (12 << 8) + 7:\\n                    if (this.stack.length < 4) {\\n                      error = true;\\n                      break;\\n                    }\\n\\n                    this.stack.pop();\\n                    wx = this.stack.pop();\\n                    var sby = this.stack.pop();\\n                    sbx = this.stack.pop();\\n                    this.lsb = sbx;\\n                    this.width = wx;\\n                    this.stack.push(wx, sbx, sby);\\n                    error = this.executeCommand(3, COMMAND_MAP.rmoveto);\\n                    break;\\n\\n                  case (12 << 8) + 12:\\n                    if (this.stack.length < 2) {\\n                      error = true;\\n                      break;\\n                    }\\n\\n                    var num2 = this.stack.pop();\\n                    var num1 = this.stack.pop();\\n                    this.stack.push(num1 / num2);\\n                    break;\\n\\n                  case (12 << 8) + 16:\\n                    if (this.stack.length < 2) {\\n                      error = true;\\n                      break;\\n                    }\\n\\n                    subrNumber = this.stack.pop();\\n                    var numArgs = this.stack.pop();\\n\\n                    if (subrNumber === 0 && numArgs === 3) {\\n                      var flexArgs = this.stack.splice(this.stack.length - 17, 17);\\n                      this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\\n                      error = this.executeCommand(13, COMMAND_MAP.flex, true);\\n                      this.flexing = false;\\n                      this.stack.push(flexArgs[15], flexArgs[16]);\\n                    } else if (subrNumber === 1 && numArgs === 0) {\\n                      this.flexing = true;\\n                    }\\n\\n                    break;\\n\\n                  case (12 << 8) + 17:\\n                    break;\\n\\n                  case (12 << 8) + 33:\\n                    this.stack = [];\\n                    break;\\n\\n                  default:\\n                    (0, _util.warn)('Unknown type 1 charstring command of \\\"' + value + '\\\"');\\n                    break;\\n                }\\n\\n                if (error) {\\n                  break;\\n                }\\n\\n                continue;\\n              } else if (value <= 246) {\\n                value = value - 139;\\n              } else if (value <= 250) {\\n                value = (value - 247) * 256 + encoded[++i] + 108;\\n              } else if (value <= 254) {\\n                value = -((value - 251) * 256) - encoded[++i] - 108;\\n              } else {\\n                value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\\n              }\\n\\n              this.stack.push(value);\\n            }\\n\\n            return error;\\n          },\\n          executeCommand: function executeCommand(howManyArgs, command, keepStack) {\\n            var stackLength = this.stack.length;\\n\\n            if (howManyArgs > stackLength) {\\n              return true;\\n            }\\n\\n            var start = stackLength - howManyArgs;\\n\\n            for (var i = start; i < stackLength; i++) {\\n              var value = this.stack[i];\\n\\n              if (Number.isInteger(value)) {\\n                this.output.push(28, value >> 8 & 0xff, value & 0xff);\\n              } else {\\n                value = 65536 * value | 0;\\n                this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\\n              }\\n            }\\n\\n            this.output.push.apply(this.output, command);\\n\\n            if (keepStack) {\\n              this.stack.splice(start, howManyArgs);\\n            } else {\\n              this.stack.length = 0;\\n            }\\n\\n            return false;\\n          }\\n        };\\n        return Type1CharString;\\n      }();\\n\\n      var Type1Parser = function Type1ParserClosure() {\\n        var EEXEC_ENCRYPT_KEY = 55665;\\n        var CHAR_STRS_ENCRYPT_KEY = 4330;\\n\\n        function isHexDigit(code) {\\n          return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\\n        }\\n\\n        function decrypt(data, key, discardNumber) {\\n          if (discardNumber >= data.length) {\\n            return new Uint8Array(0);\\n          }\\n\\n          var r = key | 0,\\n              c1 = 52845,\\n              c2 = 22719,\\n              i,\\n              j;\\n\\n          for (i = 0; i < discardNumber; i++) {\\n            r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\\n          }\\n\\n          var count = data.length - discardNumber;\\n          var decrypted = new Uint8Array(count);\\n\\n          for (i = discardNumber, j = 0; j < count; i++, j++) {\\n            var value = data[i];\\n            decrypted[j] = value ^ r >> 8;\\n            r = (value + r) * c1 + c2 & (1 << 16) - 1;\\n          }\\n\\n          return decrypted;\\n        }\\n\\n        function decryptAscii(data, key, discardNumber) {\\n          var r = key | 0,\\n              c1 = 52845,\\n              c2 = 22719;\\n          var count = data.length,\\n              maybeLength = count >>> 1;\\n          var decrypted = new Uint8Array(maybeLength);\\n          var i, j;\\n\\n          for (i = 0, j = 0; i < count; i++) {\\n            var digit1 = data[i];\\n\\n            if (!isHexDigit(digit1)) {\\n              continue;\\n            }\\n\\n            i++;\\n            var digit2;\\n\\n            while (i < count && !isHexDigit(digit2 = data[i])) {\\n              i++;\\n            }\\n\\n            if (i < count) {\\n              var value = parseInt(String.fromCharCode(digit1, digit2), 16);\\n              decrypted[j++] = value ^ r >> 8;\\n              r = (value + r) * c1 + c2 & (1 << 16) - 1;\\n            }\\n          }\\n\\n          return Array.prototype.slice.call(decrypted, discardNumber, j);\\n        }\\n\\n        function isSpecial(c) {\\n          return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\\n        }\\n\\n        function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\\n          if (encrypted) {\\n            var data = stream.getBytes();\\n            var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\\n            stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\\n          }\\n\\n          this.seacAnalysisEnabled = !!seacAnalysisEnabled;\\n          this.stream = stream;\\n          this.nextChar();\\n        }\\n\\n        Type1Parser.prototype = {\\n          readNumberArray: function Type1Parser_readNumberArray() {\\n            this.getToken();\\n            var array = [];\\n\\n            while (true) {\\n              var token = this.getToken();\\n\\n              if (token === null || token === ']' || token === '}') {\\n                break;\\n              }\\n\\n              array.push(parseFloat(token || 0));\\n            }\\n\\n            return array;\\n          },\\n          readNumber: function Type1Parser_readNumber() {\\n            var token = this.getToken();\\n            return parseFloat(token || 0);\\n          },\\n          readInt: function Type1Parser_readInt() {\\n            var token = this.getToken();\\n            return parseInt(token || 0, 10) | 0;\\n          },\\n          readBoolean: function Type1Parser_readBoolean() {\\n            var token = this.getToken();\\n            return token === 'true' ? 1 : 0;\\n          },\\n          nextChar: function Type1_nextChar() {\\n            return this.currentChar = this.stream.getByte();\\n          },\\n          getToken: function Type1Parser_getToken() {\\n            var comment = false;\\n            var ch = this.currentChar;\\n\\n            while (true) {\\n              if (ch === -1) {\\n                return null;\\n              }\\n\\n              if (comment) {\\n                if (ch === 0x0A || ch === 0x0D) {\\n                  comment = false;\\n                }\\n              } else if (ch === 0x25) {\\n                comment = true;\\n              } else if (!(0, _util.isSpace)(ch)) {\\n                break;\\n              }\\n\\n              ch = this.nextChar();\\n            }\\n\\n            if (isSpecial(ch)) {\\n              this.nextChar();\\n              return String.fromCharCode(ch);\\n            }\\n\\n            var token = '';\\n\\n            do {\\n              token += String.fromCharCode(ch);\\n              ch = this.nextChar();\\n            } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\\n\\n            return token;\\n          },\\n          readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\\n            if (lenIV === -1) {\\n              return bytes;\\n            }\\n\\n            return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\\n          },\\n          extractFontProgram: function Type1Parser_extractFontProgram() {\\n            var stream = this.stream;\\n            var subrs = [],\\n                charstrings = [];\\n            var privateData = Object.create(null);\\n            privateData['lenIV'] = 4;\\n            var program = {\\n              subrs: [],\\n              charstrings: [],\\n              properties: {\\n                'privateData': privateData\\n              }\\n            };\\n            var token, length, data, lenIV, encoded;\\n\\n            while ((token = this.getToken()) !== null) {\\n              if (token !== '/') {\\n                continue;\\n              }\\n\\n              token = this.getToken();\\n\\n              switch (token) {\\n                case 'CharStrings':\\n                  this.getToken();\\n                  this.getToken();\\n                  this.getToken();\\n                  this.getToken();\\n\\n                  while (true) {\\n                    token = this.getToken();\\n\\n                    if (token === null || token === 'end') {\\n                      break;\\n                    }\\n\\n                    if (token !== '/') {\\n                      continue;\\n                    }\\n\\n                    var glyph = this.getToken();\\n                    length = this.readInt();\\n                    this.getToken();\\n                    data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\\n                    lenIV = program.properties.privateData['lenIV'];\\n                    encoded = this.readCharStrings(data, lenIV);\\n                    this.nextChar();\\n                    token = this.getToken();\\n\\n                    if (token === 'noaccess') {\\n                      this.getToken();\\n                    }\\n\\n                    charstrings.push({\\n                      glyph: glyph,\\n                      encoded: encoded\\n                    });\\n                  }\\n\\n                  break;\\n\\n                case 'Subrs':\\n                  this.readInt();\\n                  this.getToken();\\n\\n                  while (this.getToken() === 'dup') {\\n                    var index = this.readInt();\\n                    length = this.readInt();\\n                    this.getToken();\\n                    data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\\n                    lenIV = program.properties.privateData['lenIV'];\\n                    encoded = this.readCharStrings(data, lenIV);\\n                    this.nextChar();\\n                    token = this.getToken();\\n\\n                    if (token === 'noaccess') {\\n                      this.getToken();\\n                    }\\n\\n                    subrs[index] = encoded;\\n                  }\\n\\n                  break;\\n\\n                case 'BlueValues':\\n                case 'OtherBlues':\\n                case 'FamilyBlues':\\n                case 'FamilyOtherBlues':\\n                  var blueArray = this.readNumberArray();\\n\\n                  if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\\n                    program.properties.privateData[token] = blueArray;\\n                  }\\n\\n                  break;\\n\\n                case 'StemSnapH':\\n                case 'StemSnapV':\\n                  program.properties.privateData[token] = this.readNumberArray();\\n                  break;\\n\\n                case 'StdHW':\\n                case 'StdVW':\\n                  program.properties.privateData[token] = this.readNumberArray()[0];\\n                  break;\\n\\n                case 'BlueShift':\\n                case 'lenIV':\\n                case 'BlueFuzz':\\n                case 'BlueScale':\\n                case 'LanguageGroup':\\n                case 'ExpansionFactor':\\n                  program.properties.privateData[token] = this.readNumber();\\n                  break;\\n\\n                case 'ForceBold':\\n                  program.properties.privateData[token] = this.readBoolean();\\n                  break;\\n              }\\n            }\\n\\n            for (var i = 0; i < charstrings.length; i++) {\\n              glyph = charstrings[i].glyph;\\n              encoded = charstrings[i].encoded;\\n              var charString = new Type1CharString();\\n              var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\\n              var output = charString.output;\\n\\n              if (error) {\\n                output = [14];\\n              }\\n\\n              program.charstrings.push({\\n                glyphName: glyph,\\n                charstring: output,\\n                width: charString.width,\\n                lsb: charString.lsb,\\n                seac: charString.seac\\n              });\\n            }\\n\\n            return program;\\n          },\\n          extractFontHeader: function Type1Parser_extractFontHeader(properties) {\\n            var token;\\n\\n            while ((token = this.getToken()) !== null) {\\n              if (token !== '/') {\\n                continue;\\n              }\\n\\n              token = this.getToken();\\n\\n              switch (token) {\\n                case 'FontMatrix':\\n                  var matrix = this.readNumberArray();\\n                  properties.fontMatrix = matrix;\\n                  break;\\n\\n                case 'Encoding':\\n                  var encodingArg = this.getToken();\\n                  var encoding;\\n\\n                  if (!/^\\\\d+$/.test(encodingArg)) {\\n                    encoding = (0, _encodings.getEncoding)(encodingArg);\\n                  } else {\\n                    encoding = [];\\n                    var size = parseInt(encodingArg, 10) | 0;\\n                    this.getToken();\\n\\n                    for (var j = 0; j < size; j++) {\\n                      token = this.getToken();\\n\\n                      while (token !== 'dup' && token !== 'def') {\\n                        token = this.getToken();\\n\\n                        if (token === null) {\\n                          return;\\n                        }\\n                      }\\n\\n                      if (token === 'def') {\\n                        break;\\n                      }\\n\\n                      var index = this.readInt();\\n                      this.getToken();\\n                      var glyph = this.getToken();\\n                      encoding[index] = glyph;\\n                      this.getToken();\\n                    }\\n                  }\\n\\n                  properties.builtInEncoding = encoding;\\n                  break;\\n\\n                case 'FontBBox':\\n                  var fontBBox = this.readNumberArray();\\n                  properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\\n                  properties.descent = Math.min(fontBBox[1], fontBBox[3]);\\n                  properties.ascentScaled = true;\\n                  break;\\n              }\\n            }\\n          }\\n        };\\n        return Type1Parser;\\n      }();\\n\\n      exports.Type1Parser = Type1Parser;\\n      /***/\\n    },\\n    /* 182 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.getTilingPatternIR = getTilingPatternIR;\\n      exports.Pattern = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _colorspace = __w_pdfjs_require__(168);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var ShadingType = {\\n        FUNCTION_BASED: 1,\\n        AXIAL: 2,\\n        RADIAL: 3,\\n        FREE_FORM_MESH: 4,\\n        LATTICE_FORM_MESH: 5,\\n        COONS_PATCH_MESH: 6,\\n        TENSOR_PATCH_MESH: 7\\n      };\\n\\n      var Pattern = function PatternClosure() {\\n        function Pattern() {\\n          (0, _util.unreachable)('should not call Pattern constructor');\\n        }\\n\\n        Pattern.prototype = {\\n          getPattern: function Pattern_getPattern(ctx) {\\n            (0, _util.unreachable)(\\\"Should not call Pattern.getStyle: \\\".concat(ctx));\\n          }\\n        };\\n\\n        Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\\n          var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\\n          var type = dict.get('ShadingType');\\n\\n          try {\\n            switch (type) {\\n              case ShadingType.AXIAL:\\n              case ShadingType.RADIAL:\\n                return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\\n\\n              case ShadingType.FREE_FORM_MESH:\\n              case ShadingType.LATTICE_FORM_MESH:\\n              case ShadingType.COONS_PATCH_MESH:\\n              case ShadingType.TENSOR_PATCH_MESH:\\n                return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\\n\\n              default:\\n                throw new _util.FormatError('Unsupported ShadingType: ' + type);\\n            }\\n          } catch (ex) {\\n            if (ex instanceof _util.MissingDataException) {\\n              throw ex;\\n            }\\n\\n            handler.send('UnsupportedFeature', {\\n              featureId: _util.UNSUPPORTED_FEATURES.shadingPattern\\n            });\\n            (0, _util.warn)(ex);\\n            return new Shadings.Dummy();\\n          }\\n        };\\n\\n        return Pattern;\\n      }();\\n\\n      exports.Pattern = Pattern;\\n      var Shadings = {};\\n      Shadings.SMALL_NUMBER = 1e-6;\\n\\n      Shadings.RadialAxial = function RadialAxialClosure() {\\n        function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\\n          this.matrix = matrix;\\n          this.coordsArr = dict.getArray('Coords');\\n          this.shadingType = dict.get('ShadingType');\\n          this.type = 'Pattern';\\n          var cs = dict.get('ColorSpace', 'CS');\\n          cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\\n          this.cs = cs;\\n          var t0 = 0.0,\\n              t1 = 1.0;\\n\\n          if (dict.has('Domain')) {\\n            var domainArr = dict.getArray('Domain');\\n            t0 = domainArr[0];\\n            t1 = domainArr[1];\\n          }\\n\\n          var extendStart = false,\\n              extendEnd = false;\\n\\n          if (dict.has('Extend')) {\\n            var extendArr = dict.getArray('Extend');\\n            extendStart = extendArr[0];\\n            extendEnd = extendArr[1];\\n          }\\n\\n          if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\\n            var x1 = this.coordsArr[0];\\n            var y1 = this.coordsArr[1];\\n            var r1 = this.coordsArr[2];\\n            var x2 = this.coordsArr[3];\\n            var y2 = this.coordsArr[4];\\n            var r2 = this.coordsArr[5];\\n            var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\\n\\n            if (r1 <= r2 + distance && r2 <= r1 + distance) {\\n              (0, _util.warn)('Unsupported radial gradient.');\\n            }\\n          }\\n\\n          this.extendStart = extendStart;\\n          this.extendEnd = extendEnd;\\n          var fnObj = dict.get('Function');\\n          var fn = pdfFunctionFactory.createFromArray(fnObj);\\n          var diff = t1 - t0;\\n          var step = diff / 10;\\n          var colorStops = this.colorStops = [];\\n\\n          if (t0 >= t1 || step <= 0) {\\n            (0, _util.info)('Bad shading domain.');\\n            return;\\n          }\\n\\n          var color = new Float32Array(cs.numComps),\\n              ratio = new Float32Array(1);\\n          var rgbColor;\\n\\n          for (var i = t0; i <= t1; i += step) {\\n            ratio[0] = i;\\n            fn(ratio, 0, color, 0);\\n            rgbColor = cs.getRgb(color, 0);\\n\\n            var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\\n\\n            colorStops.push([(i - t0) / diff, cssColor]);\\n          }\\n\\n          var background = 'transparent';\\n\\n          if (dict.has('Background')) {\\n            rgbColor = cs.getRgb(dict.get('Background'), 0);\\n            background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\\n          }\\n\\n          if (!extendStart) {\\n            colorStops.unshift([0, background]);\\n            colorStops[1][0] += Shadings.SMALL_NUMBER;\\n          }\\n\\n          if (!extendEnd) {\\n            colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\\n            colorStops.push([1, background]);\\n          }\\n\\n          this.colorStops = colorStops;\\n        }\\n\\n        RadialAxial.prototype = {\\n          getIR: function RadialAxial_getIR() {\\n            var coordsArr = this.coordsArr;\\n            var shadingType = this.shadingType;\\n            var type, p0, p1, r0, r1;\\n\\n            if (shadingType === ShadingType.AXIAL) {\\n              p0 = [coordsArr[0], coordsArr[1]];\\n              p1 = [coordsArr[2], coordsArr[3]];\\n              r0 = null;\\n              r1 = null;\\n              type = 'axial';\\n            } else if (shadingType === ShadingType.RADIAL) {\\n              p0 = [coordsArr[0], coordsArr[1]];\\n              p1 = [coordsArr[3], coordsArr[4]];\\n              r0 = coordsArr[2];\\n              r1 = coordsArr[5];\\n              type = 'radial';\\n            } else {\\n              (0, _util.unreachable)(\\\"getPattern type unknown: \\\".concat(shadingType));\\n            }\\n\\n            var matrix = this.matrix;\\n\\n            if (matrix) {\\n              p0 = _util.Util.applyTransform(p0, matrix);\\n              p1 = _util.Util.applyTransform(p1, matrix);\\n\\n              if (shadingType === ShadingType.RADIAL) {\\n                var scale = _util.Util.singularValueDecompose2dScale(matrix);\\n\\n                r0 *= scale[0];\\n                r1 *= scale[1];\\n              }\\n            }\\n\\n            return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\\n          }\\n        };\\n        return RadialAxial;\\n      }();\\n\\n      Shadings.Mesh = function MeshClosure() {\\n        function MeshStreamReader(stream, context) {\\n          this.stream = stream;\\n          this.context = context;\\n          this.buffer = 0;\\n          this.bufferLength = 0;\\n          var numComps = context.numComps;\\n          this.tmpCompsBuf = new Float32Array(numComps);\\n          var csNumComps = context.colorSpace.numComps;\\n          this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\\n        }\\n\\n        MeshStreamReader.prototype = {\\n          get hasData() {\\n            if (this.stream.end) {\\n              return this.stream.pos < this.stream.end;\\n            }\\n\\n            if (this.bufferLength > 0) {\\n              return true;\\n            }\\n\\n            var nextByte = this.stream.getByte();\\n\\n            if (nextByte < 0) {\\n              return false;\\n            }\\n\\n            this.buffer = nextByte;\\n            this.bufferLength = 8;\\n            return true;\\n          },\\n\\n          readBits: function MeshStreamReader_readBits(n) {\\n            var buffer = this.buffer;\\n            var bufferLength = this.bufferLength;\\n\\n            if (n === 32) {\\n              if (bufferLength === 0) {\\n                return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\\n              }\\n\\n              buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\\n              var nextByte = this.stream.getByte();\\n              this.buffer = nextByte & (1 << bufferLength) - 1;\\n              return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\\n            }\\n\\n            if (n === 8 && bufferLength === 0) {\\n              return this.stream.getByte();\\n            }\\n\\n            while (bufferLength < n) {\\n              buffer = buffer << 8 | this.stream.getByte();\\n              bufferLength += 8;\\n            }\\n\\n            bufferLength -= n;\\n            this.bufferLength = bufferLength;\\n            this.buffer = buffer & (1 << bufferLength) - 1;\\n            return buffer >> bufferLength;\\n          },\\n          align: function MeshStreamReader_align() {\\n            this.buffer = 0;\\n            this.bufferLength = 0;\\n          },\\n          readFlag: function MeshStreamReader_readFlag() {\\n            return this.readBits(this.context.bitsPerFlag);\\n          },\\n          readCoordinate: function MeshStreamReader_readCoordinate() {\\n            var bitsPerCoordinate = this.context.bitsPerCoordinate;\\n            var xi = this.readBits(bitsPerCoordinate);\\n            var yi = this.readBits(bitsPerCoordinate);\\n            var decode = this.context.decode;\\n            var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\\n            return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\\n          },\\n          readComponents: function MeshStreamReader_readComponents() {\\n            var numComps = this.context.numComps;\\n            var bitsPerComponent = this.context.bitsPerComponent;\\n            var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\\n            var decode = this.context.decode;\\n            var components = this.tmpCompsBuf;\\n\\n            for (var i = 0, j = 4; i < numComps; i++, j += 2) {\\n              var ci = this.readBits(bitsPerComponent);\\n              components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\\n            }\\n\\n            var color = this.tmpCsCompsBuf;\\n\\n            if (this.context.colorFn) {\\n              this.context.colorFn(components, 0, color, 0);\\n            }\\n\\n            return this.context.colorSpace.getRgb(color, 0);\\n          }\\n        };\\n\\n        function decodeType4Shading(mesh, reader) {\\n          var coords = mesh.coords;\\n          var colors = mesh.colors;\\n          var operators = [];\\n          var ps = [];\\n          var verticesLeft = 0;\\n\\n          while (reader.hasData) {\\n            var f = reader.readFlag();\\n            var coord = reader.readCoordinate();\\n            var color = reader.readComponents();\\n\\n            if (verticesLeft === 0) {\\n              if (!(0 <= f && f <= 2)) {\\n                throw new _util.FormatError('Unknown type4 flag');\\n              }\\n\\n              switch (f) {\\n                case 0:\\n                  verticesLeft = 3;\\n                  break;\\n\\n                case 1:\\n                  ps.push(ps[ps.length - 2], ps[ps.length - 1]);\\n                  verticesLeft = 1;\\n                  break;\\n\\n                case 2:\\n                  ps.push(ps[ps.length - 3], ps[ps.length - 1]);\\n                  verticesLeft = 1;\\n                  break;\\n              }\\n\\n              operators.push(f);\\n            }\\n\\n            ps.push(coords.length);\\n            coords.push(coord);\\n            colors.push(color);\\n            verticesLeft--;\\n            reader.align();\\n          }\\n\\n          mesh.figures.push({\\n            type: 'triangles',\\n            coords: new Int32Array(ps),\\n            colors: new Int32Array(ps)\\n          });\\n        }\\n\\n        function decodeType5Shading(mesh, reader, verticesPerRow) {\\n          var coords = mesh.coords;\\n          var colors = mesh.colors;\\n          var ps = [];\\n\\n          while (reader.hasData) {\\n            var coord = reader.readCoordinate();\\n            var color = reader.readComponents();\\n            ps.push(coords.length);\\n            coords.push(coord);\\n            colors.push(color);\\n          }\\n\\n          mesh.figures.push({\\n            type: 'lattice',\\n            coords: new Int32Array(ps),\\n            colors: new Int32Array(ps),\\n            verticesPerRow: verticesPerRow\\n          });\\n        }\\n\\n        var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\\n        var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\\n        var TRIANGLE_DENSITY = 20;\\n\\n        var getB = function getBClosure() {\\n          function buildB(count) {\\n            var lut = [];\\n\\n            for (var i = 0; i <= count; i++) {\\n              var t = i / count,\\n                  t_ = 1 - t;\\n              lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\\n            }\\n\\n            return lut;\\n          }\\n\\n          var cache = [];\\n          return function getB(count) {\\n            if (!cache[count]) {\\n              cache[count] = buildB(count);\\n            }\\n\\n            return cache[count];\\n          };\\n        }();\\n\\n        function buildFigureFromPatch(mesh, index) {\\n          var figure = mesh.figures[index];\\n          (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\\n          var coords = mesh.coords,\\n              colors = mesh.colors;\\n          var pi = figure.coords;\\n          var ci = figure.colors;\\n          var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\\n          var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\\n          var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\\n          var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\\n          var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\\n          splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\\n          var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\\n          splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\\n          var verticesPerRow = splitXBy + 1;\\n          var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\\n          var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\\n          var k = 0;\\n          var cl = new Uint8Array(3),\\n              cr = new Uint8Array(3);\\n          var c0 = colors[ci[0]],\\n              c1 = colors[ci[1]],\\n              c2 = colors[ci[2]],\\n              c3 = colors[ci[3]];\\n          var bRow = getB(splitYBy),\\n              bCol = getB(splitXBy);\\n\\n          for (var row = 0; row <= splitYBy; row++) {\\n            cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\\n            cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\\n            cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\\n            cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\\n            cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\\n            cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\\n\\n            for (var col = 0; col <= splitXBy; col++, k++) {\\n              if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\\n                continue;\\n              }\\n\\n              var x = 0,\\n                  y = 0;\\n              var q = 0;\\n\\n              for (var i = 0; i <= 3; i++) {\\n                for (var j = 0; j <= 3; j++, q++) {\\n                  var m = bRow[row][i] * bCol[col][j];\\n                  x += coords[pi[q]][0] * m;\\n                  y += coords[pi[q]][1] * m;\\n                }\\n              }\\n\\n              figureCoords[k] = coords.length;\\n              coords.push([x, y]);\\n              figureColors[k] = colors.length;\\n              var newColor = new Uint8Array(3);\\n              newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\\n              newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\\n              newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\\n              colors.push(newColor);\\n            }\\n          }\\n\\n          figureCoords[0] = pi[0];\\n          figureColors[0] = ci[0];\\n          figureCoords[splitXBy] = pi[3];\\n          figureColors[splitXBy] = ci[1];\\n          figureCoords[verticesPerRow * splitYBy] = pi[12];\\n          figureColors[verticesPerRow * splitYBy] = ci[2];\\n          figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\\n          figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\\n          mesh.figures[index] = {\\n            type: 'lattice',\\n            coords: figureCoords,\\n            colors: figureColors,\\n            verticesPerRow: verticesPerRow\\n          };\\n        }\\n\\n        function decodeType6Shading(mesh, reader) {\\n          var coords = mesh.coords;\\n          var colors = mesh.colors;\\n          var ps = new Int32Array(16);\\n          var cs = new Int32Array(4);\\n\\n          while (reader.hasData) {\\n            var f = reader.readFlag();\\n\\n            if (!(0 <= f && f <= 3)) {\\n              throw new _util.FormatError('Unknown type6 flag');\\n            }\\n\\n            var i, ii;\\n            var pi = coords.length;\\n\\n            for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\\n              coords.push(reader.readCoordinate());\\n            }\\n\\n            var ci = colors.length;\\n\\n            for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\\n              colors.push(reader.readComponents());\\n            }\\n\\n            var tmp1, tmp2, tmp3, tmp4;\\n\\n            switch (f) {\\n              case 0:\\n                ps[12] = pi + 3;\\n                ps[13] = pi + 4;\\n                ps[14] = pi + 5;\\n                ps[15] = pi + 6;\\n                ps[8] = pi + 2;\\n                ps[11] = pi + 7;\\n                ps[4] = pi + 1;\\n                ps[7] = pi + 8;\\n                ps[0] = pi;\\n                ps[1] = pi + 11;\\n                ps[2] = pi + 10;\\n                ps[3] = pi + 9;\\n                cs[2] = ci + 1;\\n                cs[3] = ci + 2;\\n                cs[0] = ci;\\n                cs[1] = ci + 3;\\n                break;\\n\\n              case 1:\\n                tmp1 = ps[12];\\n                tmp2 = ps[13];\\n                tmp3 = ps[14];\\n                tmp4 = ps[15];\\n                ps[12] = tmp4;\\n                ps[13] = pi + 0;\\n                ps[14] = pi + 1;\\n                ps[15] = pi + 2;\\n                ps[8] = tmp3;\\n                ps[11] = pi + 3;\\n                ps[4] = tmp2;\\n                ps[7] = pi + 4;\\n                ps[0] = tmp1;\\n                ps[1] = pi + 7;\\n                ps[2] = pi + 6;\\n                ps[3] = pi + 5;\\n                tmp1 = cs[2];\\n                tmp2 = cs[3];\\n                cs[2] = tmp2;\\n                cs[3] = ci;\\n                cs[0] = tmp1;\\n                cs[1] = ci + 1;\\n                break;\\n\\n              case 2:\\n                tmp1 = ps[15];\\n                tmp2 = ps[11];\\n                ps[12] = ps[3];\\n                ps[13] = pi + 0;\\n                ps[14] = pi + 1;\\n                ps[15] = pi + 2;\\n                ps[8] = ps[7];\\n                ps[11] = pi + 3;\\n                ps[4] = tmp2;\\n                ps[7] = pi + 4;\\n                ps[0] = tmp1;\\n                ps[1] = pi + 7;\\n                ps[2] = pi + 6;\\n                ps[3] = pi + 5;\\n                tmp1 = cs[3];\\n                cs[2] = cs[1];\\n                cs[3] = ci;\\n                cs[0] = tmp1;\\n                cs[1] = ci + 1;\\n                break;\\n\\n              case 3:\\n                ps[12] = ps[0];\\n                ps[13] = pi + 0;\\n                ps[14] = pi + 1;\\n                ps[15] = pi + 2;\\n                ps[8] = ps[1];\\n                ps[11] = pi + 3;\\n                ps[4] = ps[2];\\n                ps[7] = pi + 4;\\n                ps[0] = ps[3];\\n                ps[1] = pi + 7;\\n                ps[2] = pi + 6;\\n                ps[3] = pi + 5;\\n                cs[2] = cs[0];\\n                cs[3] = ci;\\n                cs[0] = cs[1];\\n                cs[1] = ci + 1;\\n                break;\\n            }\\n\\n            ps[5] = coords.length;\\n            coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\\n            ps[6] = coords.length;\\n            coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\\n            ps[9] = coords.length;\\n            coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\\n            ps[10] = coords.length;\\n            coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\\n            mesh.figures.push({\\n              type: 'patch',\\n              coords: new Int32Array(ps),\\n              colors: new Int32Array(cs)\\n            });\\n          }\\n        }\\n\\n        function decodeType7Shading(mesh, reader) {\\n          var coords = mesh.coords;\\n          var colors = mesh.colors;\\n          var ps = new Int32Array(16);\\n          var cs = new Int32Array(4);\\n\\n          while (reader.hasData) {\\n            var f = reader.readFlag();\\n\\n            if (!(0 <= f && f <= 3)) {\\n              throw new _util.FormatError('Unknown type7 flag');\\n            }\\n\\n            var i, ii;\\n            var pi = coords.length;\\n\\n            for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\\n              coords.push(reader.readCoordinate());\\n            }\\n\\n            var ci = colors.length;\\n\\n            for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\\n              colors.push(reader.readComponents());\\n            }\\n\\n            var tmp1, tmp2, tmp3, tmp4;\\n\\n            switch (f) {\\n              case 0:\\n                ps[12] = pi + 3;\\n                ps[13] = pi + 4;\\n                ps[14] = pi + 5;\\n                ps[15] = pi + 6;\\n                ps[8] = pi + 2;\\n                ps[9] = pi + 13;\\n                ps[10] = pi + 14;\\n                ps[11] = pi + 7;\\n                ps[4] = pi + 1;\\n                ps[5] = pi + 12;\\n                ps[6] = pi + 15;\\n                ps[7] = pi + 8;\\n                ps[0] = pi;\\n                ps[1] = pi + 11;\\n                ps[2] = pi + 10;\\n                ps[3] = pi + 9;\\n                cs[2] = ci + 1;\\n                cs[3] = ci + 2;\\n                cs[0] = ci;\\n                cs[1] = ci + 3;\\n                break;\\n\\n              case 1:\\n                tmp1 = ps[12];\\n                tmp2 = ps[13];\\n                tmp3 = ps[14];\\n                tmp4 = ps[15];\\n                ps[12] = tmp4;\\n                ps[13] = pi + 0;\\n                ps[14] = pi + 1;\\n                ps[15] = pi + 2;\\n                ps[8] = tmp3;\\n                ps[9] = pi + 9;\\n                ps[10] = pi + 10;\\n                ps[11] = pi + 3;\\n                ps[4] = tmp2;\\n                ps[5] = pi + 8;\\n                ps[6] = pi + 11;\\n                ps[7] = pi + 4;\\n                ps[0] = tmp1;\\n                ps[1] = pi + 7;\\n                ps[2] = pi + 6;\\n                ps[3] = pi + 5;\\n                tmp1 = cs[2];\\n                tmp2 = cs[3];\\n                cs[2] = tmp2;\\n                cs[3] = ci;\\n                cs[0] = tmp1;\\n                cs[1] = ci + 1;\\n                break;\\n\\n              case 2:\\n                tmp1 = ps[15];\\n                tmp2 = ps[11];\\n                ps[12] = ps[3];\\n                ps[13] = pi + 0;\\n                ps[14] = pi + 1;\\n                ps[15] = pi + 2;\\n                ps[8] = ps[7];\\n                ps[9] = pi + 9;\\n                ps[10] = pi + 10;\\n                ps[11] = pi + 3;\\n                ps[4] = tmp2;\\n                ps[5] = pi + 8;\\n                ps[6] = pi + 11;\\n                ps[7] = pi + 4;\\n                ps[0] = tmp1;\\n                ps[1] = pi + 7;\\n                ps[2] = pi + 6;\\n                ps[3] = pi + 5;\\n                tmp1 = cs[3];\\n                cs[2] = cs[1];\\n                cs[3] = ci;\\n                cs[0] = tmp1;\\n                cs[1] = ci + 1;\\n                break;\\n\\n              case 3:\\n                ps[12] = ps[0];\\n                ps[13] = pi + 0;\\n                ps[14] = pi + 1;\\n                ps[15] = pi + 2;\\n                ps[8] = ps[1];\\n                ps[9] = pi + 9;\\n                ps[10] = pi + 10;\\n                ps[11] = pi + 3;\\n                ps[4] = ps[2];\\n                ps[5] = pi + 8;\\n                ps[6] = pi + 11;\\n                ps[7] = pi + 4;\\n                ps[0] = ps[3];\\n                ps[1] = pi + 7;\\n                ps[2] = pi + 6;\\n                ps[3] = pi + 5;\\n                cs[2] = cs[0];\\n                cs[3] = ci;\\n                cs[0] = cs[1];\\n                cs[1] = ci + 1;\\n                break;\\n            }\\n\\n            mesh.figures.push({\\n              type: 'patch',\\n              coords: new Int32Array(ps),\\n              colors: new Int32Array(cs)\\n            });\\n          }\\n        }\\n\\n        function updateBounds(mesh) {\\n          var minX = mesh.coords[0][0],\\n              minY = mesh.coords[0][1],\\n              maxX = minX,\\n              maxY = minY;\\n\\n          for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\\n            var x = mesh.coords[i][0],\\n                y = mesh.coords[i][1];\\n            minX = minX > x ? x : minX;\\n            minY = minY > y ? y : minY;\\n            maxX = maxX < x ? x : maxX;\\n            maxY = maxY < y ? y : maxY;\\n          }\\n\\n          mesh.bounds = [minX, minY, maxX, maxY];\\n        }\\n\\n        function packData(mesh) {\\n          var i, ii, j, jj;\\n          var coords = mesh.coords;\\n          var coordsPacked = new Float32Array(coords.length * 2);\\n\\n          for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\\n            var xy = coords[i];\\n            coordsPacked[j++] = xy[0];\\n            coordsPacked[j++] = xy[1];\\n          }\\n\\n          mesh.coords = coordsPacked;\\n          var colors = mesh.colors;\\n          var colorsPacked = new Uint8Array(colors.length * 3);\\n\\n          for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\\n            var c = colors[i];\\n            colorsPacked[j++] = c[0];\\n            colorsPacked[j++] = c[1];\\n            colorsPacked[j++] = c[2];\\n          }\\n\\n          mesh.colors = colorsPacked;\\n          var figures = mesh.figures;\\n\\n          for (i = 0, ii = figures.length; i < ii; i++) {\\n            var figure = figures[i],\\n                ps = figure.coords,\\n                cs = figure.colors;\\n\\n            for (j = 0, jj = ps.length; j < jj; j++) {\\n              ps[j] *= 2;\\n              cs[j] *= 3;\\n            }\\n          }\\n        }\\n\\n        function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\\n          if (!(0, _primitives.isStream)(stream)) {\\n            throw new _util.FormatError('Mesh data is not a stream');\\n          }\\n\\n          var dict = stream.dict;\\n          this.matrix = matrix;\\n          this.shadingType = dict.get('ShadingType');\\n          this.type = 'Pattern';\\n          this.bbox = dict.getArray('BBox');\\n          var cs = dict.get('ColorSpace', 'CS');\\n          cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\\n          this.cs = cs;\\n          this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\\n          var fnObj = dict.get('Function');\\n          var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\\n          this.coords = [];\\n          this.colors = [];\\n          this.figures = [];\\n          var decodeContext = {\\n            bitsPerCoordinate: dict.get('BitsPerCoordinate'),\\n            bitsPerComponent: dict.get('BitsPerComponent'),\\n            bitsPerFlag: dict.get('BitsPerFlag'),\\n            decode: dict.getArray('Decode'),\\n            colorFn: fn,\\n            colorSpace: cs,\\n            numComps: fn ? 1 : cs.numComps\\n          };\\n          var reader = new MeshStreamReader(stream, decodeContext);\\n          var patchMesh = false;\\n\\n          switch (this.shadingType) {\\n            case ShadingType.FREE_FORM_MESH:\\n              decodeType4Shading(this, reader);\\n              break;\\n\\n            case ShadingType.LATTICE_FORM_MESH:\\n              var verticesPerRow = dict.get('VerticesPerRow') | 0;\\n\\n              if (verticesPerRow < 2) {\\n                throw new _util.FormatError('Invalid VerticesPerRow');\\n              }\\n\\n              decodeType5Shading(this, reader, verticesPerRow);\\n              break;\\n\\n            case ShadingType.COONS_PATCH_MESH:\\n              decodeType6Shading(this, reader);\\n              patchMesh = true;\\n              break;\\n\\n            case ShadingType.TENSOR_PATCH_MESH:\\n              decodeType7Shading(this, reader);\\n              patchMesh = true;\\n              break;\\n\\n            default:\\n              (0, _util.unreachable)('Unsupported mesh type.');\\n              break;\\n          }\\n\\n          if (patchMesh) {\\n            updateBounds(this);\\n\\n            for (var i = 0, ii = this.figures.length; i < ii; i++) {\\n              buildFigureFromPatch(this, i);\\n            }\\n          }\\n\\n          updateBounds(this);\\n          packData(this);\\n        }\\n\\n        Mesh.prototype = {\\n          getIR: function Mesh_getIR() {\\n            return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\\n          }\\n        };\\n        return Mesh;\\n      }();\\n\\n      Shadings.Dummy = function DummyClosure() {\\n        function Dummy() {\\n          this.type = 'Pattern';\\n        }\\n\\n        Dummy.prototype = {\\n          getIR: function Dummy_getIR() {\\n            return ['Dummy'];\\n          }\\n        };\\n        return Dummy;\\n      }();\\n\\n      function getTilingPatternIR(operatorList, dict, args) {\\n        var matrix = dict.getArray('Matrix');\\n\\n        var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\\n\\n        var xstep = dict.get('XStep');\\n        var ystep = dict.get('YStep');\\n        var paintType = dict.get('PaintType');\\n        var tilingType = dict.get('TilingType');\\n\\n        if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\\n          throw new _util.FormatError(\\\"Invalid getTilingPatternIR /BBox array: [\\\".concat(bbox, \\\"].\\\"));\\n        }\\n\\n        return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\\n      }\\n      /***/\\n\\n    },\\n    /* 183 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.bidi = bidi;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\\n      var arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\\n\\n      function isOdd(i) {\\n        return (i & 1) !== 0;\\n      }\\n\\n      function isEven(i) {\\n        return (i & 1) === 0;\\n      }\\n\\n      function findUnequal(arr, start, value) {\\n        for (var j = start, jj = arr.length; j < jj; ++j) {\\n          if (arr[j] !== value) {\\n            return j;\\n          }\\n        }\\n\\n        return j;\\n      }\\n\\n      function setValues(arr, start, end, value) {\\n        for (var j = start; j < end; ++j) {\\n          arr[j] = value;\\n        }\\n      }\\n\\n      function reverseValues(arr, start, end) {\\n        for (var i = start, j = end - 1; i < j; ++i, --j) {\\n          var temp = arr[i];\\n          arr[i] = arr[j];\\n          arr[j] = temp;\\n        }\\n      }\\n\\n      function createBidiText(str, isLTR, vertical) {\\n        return {\\n          str: str,\\n          dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\\n        };\\n      }\\n\\n      var chars = [];\\n      var types = [];\\n\\n      function bidi(str, startLevel, vertical) {\\n        var isLTR = true;\\n        var strLength = str.length;\\n\\n        if (strLength === 0 || vertical) {\\n          return createBidiText(str, isLTR, vertical);\\n        }\\n\\n        chars.length = strLength;\\n        types.length = strLength;\\n        var numBidi = 0;\\n        var i, ii;\\n\\n        for (i = 0; i < strLength; ++i) {\\n          chars[i] = str.charAt(i);\\n          var charCode = str.charCodeAt(i);\\n          var charType = 'L';\\n\\n          if (charCode <= 0x00ff) {\\n            charType = baseTypes[charCode];\\n          } else if (0x0590 <= charCode && charCode <= 0x05f4) {\\n            charType = 'R';\\n          } else if (0x0600 <= charCode && charCode <= 0x06ff) {\\n            charType = arabicTypes[charCode & 0xff];\\n\\n            if (!charType) {\\n              (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\\n            }\\n          } else if (0x0700 <= charCode && charCode <= 0x08AC) {\\n            charType = 'AL';\\n          }\\n\\n          if (charType === 'R' || charType === 'AL' || charType === 'AN') {\\n            numBidi++;\\n          }\\n\\n          types[i] = charType;\\n        }\\n\\n        if (numBidi === 0) {\\n          isLTR = true;\\n          return createBidiText(str, isLTR);\\n        }\\n\\n        if (startLevel === -1) {\\n          if (numBidi / strLength < 0.3) {\\n            isLTR = true;\\n            startLevel = 0;\\n          } else {\\n            isLTR = false;\\n            startLevel = 1;\\n          }\\n        }\\n\\n        var levels = [];\\n\\n        for (i = 0; i < strLength; ++i) {\\n          levels[i] = startLevel;\\n        }\\n\\n        var e = isOdd(startLevel) ? 'R' : 'L';\\n        var sor = e;\\n        var eor = sor;\\n        var lastType = sor;\\n\\n        for (i = 0; i < strLength; ++i) {\\n          if (types[i] === 'NSM') {\\n            types[i] = lastType;\\n          } else {\\n            lastType = types[i];\\n          }\\n        }\\n\\n        lastType = sor;\\n        var t;\\n\\n        for (i = 0; i < strLength; ++i) {\\n          t = types[i];\\n\\n          if (t === 'EN') {\\n            types[i] = lastType === 'AL' ? 'AN' : 'EN';\\n          } else if (t === 'R' || t === 'L' || t === 'AL') {\\n            lastType = t;\\n          }\\n        }\\n\\n        for (i = 0; i < strLength; ++i) {\\n          t = types[i];\\n\\n          if (t === 'AL') {\\n            types[i] = 'R';\\n          }\\n        }\\n\\n        for (i = 1; i < strLength - 1; ++i) {\\n          if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\\n            types[i] = 'EN';\\n          }\\n\\n          if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\\n            types[i] = types[i - 1];\\n          }\\n        }\\n\\n        for (i = 0; i < strLength; ++i) {\\n          if (types[i] === 'EN') {\\n            var j;\\n\\n            for (j = i - 1; j >= 0; --j) {\\n              if (types[j] !== 'ET') {\\n                break;\\n              }\\n\\n              types[j] = 'EN';\\n            }\\n\\n            for (j = i + 1; j < strLength; ++j) {\\n              if (types[j] !== 'ET') {\\n                break;\\n              }\\n\\n              types[j] = 'EN';\\n            }\\n          }\\n        }\\n\\n        for (i = 0; i < strLength; ++i) {\\n          t = types[i];\\n\\n          if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\\n            types[i] = 'ON';\\n          }\\n        }\\n\\n        lastType = sor;\\n\\n        for (i = 0; i < strLength; ++i) {\\n          t = types[i];\\n\\n          if (t === 'EN') {\\n            types[i] = lastType === 'L' ? 'L' : 'EN';\\n          } else if (t === 'R' || t === 'L') {\\n            lastType = t;\\n          }\\n        }\\n\\n        for (i = 0; i < strLength; ++i) {\\n          if (types[i] === 'ON') {\\n            var end = findUnequal(types, i + 1, 'ON');\\n            var before = sor;\\n\\n            if (i > 0) {\\n              before = types[i - 1];\\n            }\\n\\n            var after = eor;\\n\\n            if (end + 1 < strLength) {\\n              after = types[end + 1];\\n            }\\n\\n            if (before !== 'L') {\\n              before = 'R';\\n            }\\n\\n            if (after !== 'L') {\\n              after = 'R';\\n            }\\n\\n            if (before === after) {\\n              setValues(types, i, end, before);\\n            }\\n\\n            i = end - 1;\\n          }\\n        }\\n\\n        for (i = 0; i < strLength; ++i) {\\n          if (types[i] === 'ON') {\\n            types[i] = e;\\n          }\\n        }\\n\\n        for (i = 0; i < strLength; ++i) {\\n          t = types[i];\\n\\n          if (isEven(levels[i])) {\\n            if (t === 'R') {\\n              levels[i] += 1;\\n            } else if (t === 'AN' || t === 'EN') {\\n              levels[i] += 2;\\n            }\\n          } else {\\n            if (t === 'L' || t === 'AN' || t === 'EN') {\\n              levels[i] += 1;\\n            }\\n          }\\n        }\\n\\n        var highestLevel = -1;\\n        var lowestOddLevel = 99;\\n        var level;\\n\\n        for (i = 0, ii = levels.length; i < ii; ++i) {\\n          level = levels[i];\\n\\n          if (highestLevel < level) {\\n            highestLevel = level;\\n          }\\n\\n          if (lowestOddLevel > level && isOdd(level)) {\\n            lowestOddLevel = level;\\n          }\\n        }\\n\\n        for (level = highestLevel; level >= lowestOddLevel; --level) {\\n          var start = -1;\\n\\n          for (i = 0, ii = levels.length; i < ii; ++i) {\\n            if (levels[i] < level) {\\n              if (start >= 0) {\\n                reverseValues(chars, start, i);\\n                start = -1;\\n              }\\n            } else if (start < 0) {\\n              start = i;\\n            }\\n          }\\n\\n          if (start >= 0) {\\n            reverseValues(chars, start, levels.length);\\n          }\\n        }\\n\\n        for (i = 0, ii = chars.length; i < ii; ++i) {\\n          var ch = chars[i];\\n\\n          if (ch === '<' || ch === '>') {\\n            chars[i] = '';\\n          }\\n        }\\n\\n        return createBidiText(chars.join(''), isLTR);\\n      }\\n      /***/\\n\\n    },\\n    /* 184 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.getMetrics = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var getMetrics = (0, _util.getLookupTableFactory)(function (t) {\\n        t['Courier'] = 600;\\n        t['Courier-Bold'] = 600;\\n        t['Courier-BoldOblique'] = 600;\\n        t['Courier-Oblique'] = 600;\\n        t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 278;\\n          t['exclam'] = 278;\\n          t['quotedbl'] = 355;\\n          t['numbersign'] = 556;\\n          t['dollar'] = 556;\\n          t['percent'] = 889;\\n          t['ampersand'] = 667;\\n          t['quoteright'] = 222;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asterisk'] = 389;\\n          t['plus'] = 584;\\n          t['comma'] = 278;\\n          t['hyphen'] = 333;\\n          t['period'] = 278;\\n          t['slash'] = 278;\\n          t['zero'] = 556;\\n          t['one'] = 556;\\n          t['two'] = 556;\\n          t['three'] = 556;\\n          t['four'] = 556;\\n          t['five'] = 556;\\n          t['six'] = 556;\\n          t['seven'] = 556;\\n          t['eight'] = 556;\\n          t['nine'] = 556;\\n          t['colon'] = 278;\\n          t['semicolon'] = 278;\\n          t['less'] = 584;\\n          t['equal'] = 584;\\n          t['greater'] = 584;\\n          t['question'] = 556;\\n          t['at'] = 1015;\\n          t['A'] = 667;\\n          t['B'] = 667;\\n          t['C'] = 722;\\n          t['D'] = 722;\\n          t['E'] = 667;\\n          t['F'] = 611;\\n          t['G'] = 778;\\n          t['H'] = 722;\\n          t['I'] = 278;\\n          t['J'] = 500;\\n          t['K'] = 667;\\n          t['L'] = 556;\\n          t['M'] = 833;\\n          t['N'] = 722;\\n          t['O'] = 778;\\n          t['P'] = 667;\\n          t['Q'] = 778;\\n          t['R'] = 722;\\n          t['S'] = 667;\\n          t['T'] = 611;\\n          t['U'] = 722;\\n          t['V'] = 667;\\n          t['W'] = 944;\\n          t['X'] = 667;\\n          t['Y'] = 667;\\n          t['Z'] = 611;\\n          t['bracketleft'] = 278;\\n          t['backslash'] = 278;\\n          t['bracketright'] = 278;\\n          t['asciicircum'] = 469;\\n          t['underscore'] = 556;\\n          t['quoteleft'] = 222;\\n          t['a'] = 556;\\n          t['b'] = 556;\\n          t['c'] = 500;\\n          t['d'] = 556;\\n          t['e'] = 556;\\n          t['f'] = 278;\\n          t['g'] = 556;\\n          t['h'] = 556;\\n          t['i'] = 222;\\n          t['j'] = 222;\\n          t['k'] = 500;\\n          t['l'] = 222;\\n          t['m'] = 833;\\n          t['n'] = 556;\\n          t['o'] = 556;\\n          t['p'] = 556;\\n          t['q'] = 556;\\n          t['r'] = 333;\\n          t['s'] = 500;\\n          t['t'] = 278;\\n          t['u'] = 556;\\n          t['v'] = 500;\\n          t['w'] = 722;\\n          t['x'] = 500;\\n          t['y'] = 500;\\n          t['z'] = 500;\\n          t['braceleft'] = 334;\\n          t['bar'] = 260;\\n          t['braceright'] = 334;\\n          t['asciitilde'] = 584;\\n          t['exclamdown'] = 333;\\n          t['cent'] = 556;\\n          t['sterling'] = 556;\\n          t['fraction'] = 167;\\n          t['yen'] = 556;\\n          t['florin'] = 556;\\n          t['section'] = 556;\\n          t['currency'] = 556;\\n          t['quotesingle'] = 191;\\n          t['quotedblleft'] = 333;\\n          t['guillemotleft'] = 556;\\n          t['guilsinglleft'] = 333;\\n          t['guilsinglright'] = 333;\\n          t['fi'] = 500;\\n          t['fl'] = 500;\\n          t['endash'] = 556;\\n          t['dagger'] = 556;\\n          t['daggerdbl'] = 556;\\n          t['periodcentered'] = 278;\\n          t['paragraph'] = 537;\\n          t['bullet'] = 350;\\n          t['quotesinglbase'] = 222;\\n          t['quotedblbase'] = 333;\\n          t['quotedblright'] = 333;\\n          t['guillemotright'] = 556;\\n          t['ellipsis'] = 1000;\\n          t['perthousand'] = 1000;\\n          t['questiondown'] = 611;\\n          t['grave'] = 333;\\n          t['acute'] = 333;\\n          t['circumflex'] = 333;\\n          t['tilde'] = 333;\\n          t['macron'] = 333;\\n          t['breve'] = 333;\\n          t['dotaccent'] = 333;\\n          t['dieresis'] = 333;\\n          t['ring'] = 333;\\n          t['cedilla'] = 333;\\n          t['hungarumlaut'] = 333;\\n          t['ogonek'] = 333;\\n          t['caron'] = 333;\\n          t['emdash'] = 1000;\\n          t['AE'] = 1000;\\n          t['ordfeminine'] = 370;\\n          t['Lslash'] = 556;\\n          t['Oslash'] = 778;\\n          t['OE'] = 1000;\\n          t['ordmasculine'] = 365;\\n          t['ae'] = 889;\\n          t['dotlessi'] = 278;\\n          t['lslash'] = 222;\\n          t['oslash'] = 611;\\n          t['oe'] = 944;\\n          t['germandbls'] = 611;\\n          t['Idieresis'] = 278;\\n          t['eacute'] = 556;\\n          t['abreve'] = 556;\\n          t['uhungarumlaut'] = 556;\\n          t['ecaron'] = 556;\\n          t['Ydieresis'] = 667;\\n          t['divide'] = 584;\\n          t['Yacute'] = 667;\\n          t['Acircumflex'] = 667;\\n          t['aacute'] = 556;\\n          t['Ucircumflex'] = 722;\\n          t['yacute'] = 500;\\n          t['scommaaccent'] = 500;\\n          t['ecircumflex'] = 556;\\n          t['Uring'] = 722;\\n          t['Udieresis'] = 722;\\n          t['aogonek'] = 556;\\n          t['Uacute'] = 722;\\n          t['uogonek'] = 556;\\n          t['Edieresis'] = 667;\\n          t['Dcroat'] = 722;\\n          t['commaaccent'] = 250;\\n          t['copyright'] = 737;\\n          t['Emacron'] = 667;\\n          t['ccaron'] = 500;\\n          t['aring'] = 556;\\n          t['Ncommaaccent'] = 722;\\n          t['lacute'] = 222;\\n          t['agrave'] = 556;\\n          t['Tcommaaccent'] = 611;\\n          t['Cacute'] = 722;\\n          t['atilde'] = 556;\\n          t['Edotaccent'] = 667;\\n          t['scaron'] = 500;\\n          t['scedilla'] = 500;\\n          t['iacute'] = 278;\\n          t['lozenge'] = 471;\\n          t['Rcaron'] = 722;\\n          t['Gcommaaccent'] = 778;\\n          t['ucircumflex'] = 556;\\n          t['acircumflex'] = 556;\\n          t['Amacron'] = 667;\\n          t['rcaron'] = 333;\\n          t['ccedilla'] = 500;\\n          t['Zdotaccent'] = 611;\\n          t['Thorn'] = 667;\\n          t['Omacron'] = 778;\\n          t['Racute'] = 722;\\n          t['Sacute'] = 667;\\n          t['dcaron'] = 643;\\n          t['Umacron'] = 722;\\n          t['uring'] = 556;\\n          t['threesuperior'] = 333;\\n          t['Ograve'] = 778;\\n          t['Agrave'] = 667;\\n          t['Abreve'] = 667;\\n          t['multiply'] = 584;\\n          t['uacute'] = 556;\\n          t['Tcaron'] = 611;\\n          t['partialdiff'] = 476;\\n          t['ydieresis'] = 500;\\n          t['Nacute'] = 722;\\n          t['icircumflex'] = 278;\\n          t['Ecircumflex'] = 667;\\n          t['adieresis'] = 556;\\n          t['edieresis'] = 556;\\n          t['cacute'] = 500;\\n          t['nacute'] = 556;\\n          t['umacron'] = 556;\\n          t['Ncaron'] = 722;\\n          t['Iacute'] = 278;\\n          t['plusminus'] = 584;\\n          t['brokenbar'] = 260;\\n          t['registered'] = 737;\\n          t['Gbreve'] = 778;\\n          t['Idotaccent'] = 278;\\n          t['summation'] = 600;\\n          t['Egrave'] = 667;\\n          t['racute'] = 333;\\n          t['omacron'] = 556;\\n          t['Zacute'] = 611;\\n          t['Zcaron'] = 611;\\n          t['greaterequal'] = 549;\\n          t['Eth'] = 722;\\n          t['Ccedilla'] = 722;\\n          t['lcommaaccent'] = 222;\\n          t['tcaron'] = 317;\\n          t['eogonek'] = 556;\\n          t['Uogonek'] = 722;\\n          t['Aacute'] = 667;\\n          t['Adieresis'] = 667;\\n          t['egrave'] = 556;\\n          t['zacute'] = 500;\\n          t['iogonek'] = 222;\\n          t['Oacute'] = 778;\\n          t['oacute'] = 556;\\n          t['amacron'] = 556;\\n          t['sacute'] = 500;\\n          t['idieresis'] = 278;\\n          t['Ocircumflex'] = 778;\\n          t['Ugrave'] = 722;\\n          t['Delta'] = 612;\\n          t['thorn'] = 556;\\n          t['twosuperior'] = 333;\\n          t['Odieresis'] = 778;\\n          t['mu'] = 556;\\n          t['igrave'] = 278;\\n          t['ohungarumlaut'] = 556;\\n          t['Eogonek'] = 667;\\n          t['dcroat'] = 556;\\n          t['threequarters'] = 834;\\n          t['Scedilla'] = 667;\\n          t['lcaron'] = 299;\\n          t['Kcommaaccent'] = 667;\\n          t['Lacute'] = 556;\\n          t['trademark'] = 1000;\\n          t['edotaccent'] = 556;\\n          t['Igrave'] = 278;\\n          t['Imacron'] = 278;\\n          t['Lcaron'] = 556;\\n          t['onehalf'] = 834;\\n          t['lessequal'] = 549;\\n          t['ocircumflex'] = 556;\\n          t['ntilde'] = 556;\\n          t['Uhungarumlaut'] = 722;\\n          t['Eacute'] = 667;\\n          t['emacron'] = 556;\\n          t['gbreve'] = 556;\\n          t['onequarter'] = 834;\\n          t['Scaron'] = 667;\\n          t['Scommaaccent'] = 667;\\n          t['Ohungarumlaut'] = 778;\\n          t['degree'] = 400;\\n          t['ograve'] = 556;\\n          t['Ccaron'] = 722;\\n          t['ugrave'] = 556;\\n          t['radical'] = 453;\\n          t['Dcaron'] = 722;\\n          t['rcommaaccent'] = 333;\\n          t['Ntilde'] = 722;\\n          t['otilde'] = 556;\\n          t['Rcommaaccent'] = 722;\\n          t['Lcommaaccent'] = 556;\\n          t['Atilde'] = 667;\\n          t['Aogonek'] = 667;\\n          t['Aring'] = 667;\\n          t['Otilde'] = 778;\\n          t['zdotaccent'] = 500;\\n          t['Ecaron'] = 667;\\n          t['Iogonek'] = 278;\\n          t['kcommaaccent'] = 500;\\n          t['minus'] = 584;\\n          t['Icircumflex'] = 278;\\n          t['ncaron'] = 556;\\n          t['tcommaaccent'] = 278;\\n          t['logicalnot'] = 584;\\n          t['odieresis'] = 556;\\n          t['udieresis'] = 556;\\n          t['notequal'] = 549;\\n          t['gcommaaccent'] = 556;\\n          t['eth'] = 556;\\n          t['zcaron'] = 500;\\n          t['ncommaaccent'] = 556;\\n          t['onesuperior'] = 333;\\n          t['imacron'] = 278;\\n          t['Euro'] = 556;\\n        });\\n        t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 278;\\n          t['exclam'] = 333;\\n          t['quotedbl'] = 474;\\n          t['numbersign'] = 556;\\n          t['dollar'] = 556;\\n          t['percent'] = 889;\\n          t['ampersand'] = 722;\\n          t['quoteright'] = 278;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asterisk'] = 389;\\n          t['plus'] = 584;\\n          t['comma'] = 278;\\n          t['hyphen'] = 333;\\n          t['period'] = 278;\\n          t['slash'] = 278;\\n          t['zero'] = 556;\\n          t['one'] = 556;\\n          t['two'] = 556;\\n          t['three'] = 556;\\n          t['four'] = 556;\\n          t['five'] = 556;\\n          t['six'] = 556;\\n          t['seven'] = 556;\\n          t['eight'] = 556;\\n          t['nine'] = 556;\\n          t['colon'] = 333;\\n          t['semicolon'] = 333;\\n          t['less'] = 584;\\n          t['equal'] = 584;\\n          t['greater'] = 584;\\n          t['question'] = 611;\\n          t['at'] = 975;\\n          t['A'] = 722;\\n          t['B'] = 722;\\n          t['C'] = 722;\\n          t['D'] = 722;\\n          t['E'] = 667;\\n          t['F'] = 611;\\n          t['G'] = 778;\\n          t['H'] = 722;\\n          t['I'] = 278;\\n          t['J'] = 556;\\n          t['K'] = 722;\\n          t['L'] = 611;\\n          t['M'] = 833;\\n          t['N'] = 722;\\n          t['O'] = 778;\\n          t['P'] = 667;\\n          t['Q'] = 778;\\n          t['R'] = 722;\\n          t['S'] = 667;\\n          t['T'] = 611;\\n          t['U'] = 722;\\n          t['V'] = 667;\\n          t['W'] = 944;\\n          t['X'] = 667;\\n          t['Y'] = 667;\\n          t['Z'] = 611;\\n          t['bracketleft'] = 333;\\n          t['backslash'] = 278;\\n          t['bracketright'] = 333;\\n          t['asciicircum'] = 584;\\n          t['underscore'] = 556;\\n          t['quoteleft'] = 278;\\n          t['a'] = 556;\\n          t['b'] = 611;\\n          t['c'] = 556;\\n          t['d'] = 611;\\n          t['e'] = 556;\\n          t['f'] = 333;\\n          t['g'] = 611;\\n          t['h'] = 611;\\n          t['i'] = 278;\\n          t['j'] = 278;\\n          t['k'] = 556;\\n          t['l'] = 278;\\n          t['m'] = 889;\\n          t['n'] = 611;\\n          t['o'] = 611;\\n          t['p'] = 611;\\n          t['q'] = 611;\\n          t['r'] = 389;\\n          t['s'] = 556;\\n          t['t'] = 333;\\n          t['u'] = 611;\\n          t['v'] = 556;\\n          t['w'] = 778;\\n          t['x'] = 556;\\n          t['y'] = 556;\\n          t['z'] = 500;\\n          t['braceleft'] = 389;\\n          t['bar'] = 280;\\n          t['braceright'] = 389;\\n          t['asciitilde'] = 584;\\n          t['exclamdown'] = 333;\\n          t['cent'] = 556;\\n          t['sterling'] = 556;\\n          t['fraction'] = 167;\\n          t['yen'] = 556;\\n          t['florin'] = 556;\\n          t['section'] = 556;\\n          t['currency'] = 556;\\n          t['quotesingle'] = 238;\\n          t['quotedblleft'] = 500;\\n          t['guillemotleft'] = 556;\\n          t['guilsinglleft'] = 333;\\n          t['guilsinglright'] = 333;\\n          t['fi'] = 611;\\n          t['fl'] = 611;\\n          t['endash'] = 556;\\n          t['dagger'] = 556;\\n          t['daggerdbl'] = 556;\\n          t['periodcentered'] = 278;\\n          t['paragraph'] = 556;\\n          t['bullet'] = 350;\\n          t['quotesinglbase'] = 278;\\n          t['quotedblbase'] = 500;\\n          t['quotedblright'] = 500;\\n          t['guillemotright'] = 556;\\n          t['ellipsis'] = 1000;\\n          t['perthousand'] = 1000;\\n          t['questiondown'] = 611;\\n          t['grave'] = 333;\\n          t['acute'] = 333;\\n          t['circumflex'] = 333;\\n          t['tilde'] = 333;\\n          t['macron'] = 333;\\n          t['breve'] = 333;\\n          t['dotaccent'] = 333;\\n          t['dieresis'] = 333;\\n          t['ring'] = 333;\\n          t['cedilla'] = 333;\\n          t['hungarumlaut'] = 333;\\n          t['ogonek'] = 333;\\n          t['caron'] = 333;\\n          t['emdash'] = 1000;\\n          t['AE'] = 1000;\\n          t['ordfeminine'] = 370;\\n          t['Lslash'] = 611;\\n          t['Oslash'] = 778;\\n          t['OE'] = 1000;\\n          t['ordmasculine'] = 365;\\n          t['ae'] = 889;\\n          t['dotlessi'] = 278;\\n          t['lslash'] = 278;\\n          t['oslash'] = 611;\\n          t['oe'] = 944;\\n          t['germandbls'] = 611;\\n          t['Idieresis'] = 278;\\n          t['eacute'] = 556;\\n          t['abreve'] = 556;\\n          t['uhungarumlaut'] = 611;\\n          t['ecaron'] = 556;\\n          t['Ydieresis'] = 667;\\n          t['divide'] = 584;\\n          t['Yacute'] = 667;\\n          t['Acircumflex'] = 722;\\n          t['aacute'] = 556;\\n          t['Ucircumflex'] = 722;\\n          t['yacute'] = 556;\\n          t['scommaaccent'] = 556;\\n          t['ecircumflex'] = 556;\\n          t['Uring'] = 722;\\n          t['Udieresis'] = 722;\\n          t['aogonek'] = 556;\\n          t['Uacute'] = 722;\\n          t['uogonek'] = 611;\\n          t['Edieresis'] = 667;\\n          t['Dcroat'] = 722;\\n          t['commaaccent'] = 250;\\n          t['copyright'] = 737;\\n          t['Emacron'] = 667;\\n          t['ccaron'] = 556;\\n          t['aring'] = 556;\\n          t['Ncommaaccent'] = 722;\\n          t['lacute'] = 278;\\n          t['agrave'] = 556;\\n          t['Tcommaaccent'] = 611;\\n          t['Cacute'] = 722;\\n          t['atilde'] = 556;\\n          t['Edotaccent'] = 667;\\n          t['scaron'] = 556;\\n          t['scedilla'] = 556;\\n          t['iacute'] = 278;\\n          t['lozenge'] = 494;\\n          t['Rcaron'] = 722;\\n          t['Gcommaaccent'] = 778;\\n          t['ucircumflex'] = 611;\\n          t['acircumflex'] = 556;\\n          t['Amacron'] = 722;\\n          t['rcaron'] = 389;\\n          t['ccedilla'] = 556;\\n          t['Zdotaccent'] = 611;\\n          t['Thorn'] = 667;\\n          t['Omacron'] = 778;\\n          t['Racute'] = 722;\\n          t['Sacute'] = 667;\\n          t['dcaron'] = 743;\\n          t['Umacron'] = 722;\\n          t['uring'] = 611;\\n          t['threesuperior'] = 333;\\n          t['Ograve'] = 778;\\n          t['Agrave'] = 722;\\n          t['Abreve'] = 722;\\n          t['multiply'] = 584;\\n          t['uacute'] = 611;\\n          t['Tcaron'] = 611;\\n          t['partialdiff'] = 494;\\n          t['ydieresis'] = 556;\\n          t['Nacute'] = 722;\\n          t['icircumflex'] = 278;\\n          t['Ecircumflex'] = 667;\\n          t['adieresis'] = 556;\\n          t['edieresis'] = 556;\\n          t['cacute'] = 556;\\n          t['nacute'] = 611;\\n          t['umacron'] = 611;\\n          t['Ncaron'] = 722;\\n          t['Iacute'] = 278;\\n          t['plusminus'] = 584;\\n          t['brokenbar'] = 280;\\n          t['registered'] = 737;\\n          t['Gbreve'] = 778;\\n          t['Idotaccent'] = 278;\\n          t['summation'] = 600;\\n          t['Egrave'] = 667;\\n          t['racute'] = 389;\\n          t['omacron'] = 611;\\n          t['Zacute'] = 611;\\n          t['Zcaron'] = 611;\\n          t['greaterequal'] = 549;\\n          t['Eth'] = 722;\\n          t['Ccedilla'] = 722;\\n          t['lcommaaccent'] = 278;\\n          t['tcaron'] = 389;\\n          t['eogonek'] = 556;\\n          t['Uogonek'] = 722;\\n          t['Aacute'] = 722;\\n          t['Adieresis'] = 722;\\n          t['egrave'] = 556;\\n          t['zacute'] = 500;\\n          t['iogonek'] = 278;\\n          t['Oacute'] = 778;\\n          t['oacute'] = 611;\\n          t['amacron'] = 556;\\n          t['sacute'] = 556;\\n          t['idieresis'] = 278;\\n          t['Ocircumflex'] = 778;\\n          t['Ugrave'] = 722;\\n          t['Delta'] = 612;\\n          t['thorn'] = 611;\\n          t['twosuperior'] = 333;\\n          t['Odieresis'] = 778;\\n          t['mu'] = 611;\\n          t['igrave'] = 278;\\n          t['ohungarumlaut'] = 611;\\n          t['Eogonek'] = 667;\\n          t['dcroat'] = 611;\\n          t['threequarters'] = 834;\\n          t['Scedilla'] = 667;\\n          t['lcaron'] = 400;\\n          t['Kcommaaccent'] = 722;\\n          t['Lacute'] = 611;\\n          t['trademark'] = 1000;\\n          t['edotaccent'] = 556;\\n          t['Igrave'] = 278;\\n          t['Imacron'] = 278;\\n          t['Lcaron'] = 611;\\n          t['onehalf'] = 834;\\n          t['lessequal'] = 549;\\n          t['ocircumflex'] = 611;\\n          t['ntilde'] = 611;\\n          t['Uhungarumlaut'] = 722;\\n          t['Eacute'] = 667;\\n          t['emacron'] = 556;\\n          t['gbreve'] = 611;\\n          t['onequarter'] = 834;\\n          t['Scaron'] = 667;\\n          t['Scommaaccent'] = 667;\\n          t['Ohungarumlaut'] = 778;\\n          t['degree'] = 400;\\n          t['ograve'] = 611;\\n          t['Ccaron'] = 722;\\n          t['ugrave'] = 611;\\n          t['radical'] = 549;\\n          t['Dcaron'] = 722;\\n          t['rcommaaccent'] = 389;\\n          t['Ntilde'] = 722;\\n          t['otilde'] = 611;\\n          t['Rcommaaccent'] = 722;\\n          t['Lcommaaccent'] = 611;\\n          t['Atilde'] = 722;\\n          t['Aogonek'] = 722;\\n          t['Aring'] = 722;\\n          t['Otilde'] = 778;\\n          t['zdotaccent'] = 500;\\n          t['Ecaron'] = 667;\\n          t['Iogonek'] = 278;\\n          t['kcommaaccent'] = 556;\\n          t['minus'] = 584;\\n          t['Icircumflex'] = 278;\\n          t['ncaron'] = 611;\\n          t['tcommaaccent'] = 333;\\n          t['logicalnot'] = 584;\\n          t['odieresis'] = 611;\\n          t['udieresis'] = 611;\\n          t['notequal'] = 549;\\n          t['gcommaaccent'] = 611;\\n          t['eth'] = 611;\\n          t['zcaron'] = 500;\\n          t['ncommaaccent'] = 611;\\n          t['onesuperior'] = 333;\\n          t['imacron'] = 278;\\n          t['Euro'] = 556;\\n        });\\n        t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 278;\\n          t['exclam'] = 333;\\n          t['quotedbl'] = 474;\\n          t['numbersign'] = 556;\\n          t['dollar'] = 556;\\n          t['percent'] = 889;\\n          t['ampersand'] = 722;\\n          t['quoteright'] = 278;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asterisk'] = 389;\\n          t['plus'] = 584;\\n          t['comma'] = 278;\\n          t['hyphen'] = 333;\\n          t['period'] = 278;\\n          t['slash'] = 278;\\n          t['zero'] = 556;\\n          t['one'] = 556;\\n          t['two'] = 556;\\n          t['three'] = 556;\\n          t['four'] = 556;\\n          t['five'] = 556;\\n          t['six'] = 556;\\n          t['seven'] = 556;\\n          t['eight'] = 556;\\n          t['nine'] = 556;\\n          t['colon'] = 333;\\n          t['semicolon'] = 333;\\n          t['less'] = 584;\\n          t['equal'] = 584;\\n          t['greater'] = 584;\\n          t['question'] = 611;\\n          t['at'] = 975;\\n          t['A'] = 722;\\n          t['B'] = 722;\\n          t['C'] = 722;\\n          t['D'] = 722;\\n          t['E'] = 667;\\n          t['F'] = 611;\\n          t['G'] = 778;\\n          t['H'] = 722;\\n          t['I'] = 278;\\n          t['J'] = 556;\\n          t['K'] = 722;\\n          t['L'] = 611;\\n          t['M'] = 833;\\n          t['N'] = 722;\\n          t['O'] = 778;\\n          t['P'] = 667;\\n          t['Q'] = 778;\\n          t['R'] = 722;\\n          t['S'] = 667;\\n          t['T'] = 611;\\n          t['U'] = 722;\\n          t['V'] = 667;\\n          t['W'] = 944;\\n          t['X'] = 667;\\n          t['Y'] = 667;\\n          t['Z'] = 611;\\n          t['bracketleft'] = 333;\\n          t['backslash'] = 278;\\n          t['bracketright'] = 333;\\n          t['asciicircum'] = 584;\\n          t['underscore'] = 556;\\n          t['quoteleft'] = 278;\\n          t['a'] = 556;\\n          t['b'] = 611;\\n          t['c'] = 556;\\n          t['d'] = 611;\\n          t['e'] = 556;\\n          t['f'] = 333;\\n          t['g'] = 611;\\n          t['h'] = 611;\\n          t['i'] = 278;\\n          t['j'] = 278;\\n          t['k'] = 556;\\n          t['l'] = 278;\\n          t['m'] = 889;\\n          t['n'] = 611;\\n          t['o'] = 611;\\n          t['p'] = 611;\\n          t['q'] = 611;\\n          t['r'] = 389;\\n          t['s'] = 556;\\n          t['t'] = 333;\\n          t['u'] = 611;\\n          t['v'] = 556;\\n          t['w'] = 778;\\n          t['x'] = 556;\\n          t['y'] = 556;\\n          t['z'] = 500;\\n          t['braceleft'] = 389;\\n          t['bar'] = 280;\\n          t['braceright'] = 389;\\n          t['asciitilde'] = 584;\\n          t['exclamdown'] = 333;\\n          t['cent'] = 556;\\n          t['sterling'] = 556;\\n          t['fraction'] = 167;\\n          t['yen'] = 556;\\n          t['florin'] = 556;\\n          t['section'] = 556;\\n          t['currency'] = 556;\\n          t['quotesingle'] = 238;\\n          t['quotedblleft'] = 500;\\n          t['guillemotleft'] = 556;\\n          t['guilsinglleft'] = 333;\\n          t['guilsinglright'] = 333;\\n          t['fi'] = 611;\\n          t['fl'] = 611;\\n          t['endash'] = 556;\\n          t['dagger'] = 556;\\n          t['daggerdbl'] = 556;\\n          t['periodcentered'] = 278;\\n          t['paragraph'] = 556;\\n          t['bullet'] = 350;\\n          t['quotesinglbase'] = 278;\\n          t['quotedblbase'] = 500;\\n          t['quotedblright'] = 500;\\n          t['guillemotright'] = 556;\\n          t['ellipsis'] = 1000;\\n          t['perthousand'] = 1000;\\n          t['questiondown'] = 611;\\n          t['grave'] = 333;\\n          t['acute'] = 333;\\n          t['circumflex'] = 333;\\n          t['tilde'] = 333;\\n          t['macron'] = 333;\\n          t['breve'] = 333;\\n          t['dotaccent'] = 333;\\n          t['dieresis'] = 333;\\n          t['ring'] = 333;\\n          t['cedilla'] = 333;\\n          t['hungarumlaut'] = 333;\\n          t['ogonek'] = 333;\\n          t['caron'] = 333;\\n          t['emdash'] = 1000;\\n          t['AE'] = 1000;\\n          t['ordfeminine'] = 370;\\n          t['Lslash'] = 611;\\n          t['Oslash'] = 778;\\n          t['OE'] = 1000;\\n          t['ordmasculine'] = 365;\\n          t['ae'] = 889;\\n          t['dotlessi'] = 278;\\n          t['lslash'] = 278;\\n          t['oslash'] = 611;\\n          t['oe'] = 944;\\n          t['germandbls'] = 611;\\n          t['Idieresis'] = 278;\\n          t['eacute'] = 556;\\n          t['abreve'] = 556;\\n          t['uhungarumlaut'] = 611;\\n          t['ecaron'] = 556;\\n          t['Ydieresis'] = 667;\\n          t['divide'] = 584;\\n          t['Yacute'] = 667;\\n          t['Acircumflex'] = 722;\\n          t['aacute'] = 556;\\n          t['Ucircumflex'] = 722;\\n          t['yacute'] = 556;\\n          t['scommaaccent'] = 556;\\n          t['ecircumflex'] = 556;\\n          t['Uring'] = 722;\\n          t['Udieresis'] = 722;\\n          t['aogonek'] = 556;\\n          t['Uacute'] = 722;\\n          t['uogonek'] = 611;\\n          t['Edieresis'] = 667;\\n          t['Dcroat'] = 722;\\n          t['commaaccent'] = 250;\\n          t['copyright'] = 737;\\n          t['Emacron'] = 667;\\n          t['ccaron'] = 556;\\n          t['aring'] = 556;\\n          t['Ncommaaccent'] = 722;\\n          t['lacute'] = 278;\\n          t['agrave'] = 556;\\n          t['Tcommaaccent'] = 611;\\n          t['Cacute'] = 722;\\n          t['atilde'] = 556;\\n          t['Edotaccent'] = 667;\\n          t['scaron'] = 556;\\n          t['scedilla'] = 556;\\n          t['iacute'] = 278;\\n          t['lozenge'] = 494;\\n          t['Rcaron'] = 722;\\n          t['Gcommaaccent'] = 778;\\n          t['ucircumflex'] = 611;\\n          t['acircumflex'] = 556;\\n          t['Amacron'] = 722;\\n          t['rcaron'] = 389;\\n          t['ccedilla'] = 556;\\n          t['Zdotaccent'] = 611;\\n          t['Thorn'] = 667;\\n          t['Omacron'] = 778;\\n          t['Racute'] = 722;\\n          t['Sacute'] = 667;\\n          t['dcaron'] = 743;\\n          t['Umacron'] = 722;\\n          t['uring'] = 611;\\n          t['threesuperior'] = 333;\\n          t['Ograve'] = 778;\\n          t['Agrave'] = 722;\\n          t['Abreve'] = 722;\\n          t['multiply'] = 584;\\n          t['uacute'] = 611;\\n          t['Tcaron'] = 611;\\n          t['partialdiff'] = 494;\\n          t['ydieresis'] = 556;\\n          t['Nacute'] = 722;\\n          t['icircumflex'] = 278;\\n          t['Ecircumflex'] = 667;\\n          t['adieresis'] = 556;\\n          t['edieresis'] = 556;\\n          t['cacute'] = 556;\\n          t['nacute'] = 611;\\n          t['umacron'] = 611;\\n          t['Ncaron'] = 722;\\n          t['Iacute'] = 278;\\n          t['plusminus'] = 584;\\n          t['brokenbar'] = 280;\\n          t['registered'] = 737;\\n          t['Gbreve'] = 778;\\n          t['Idotaccent'] = 278;\\n          t['summation'] = 600;\\n          t['Egrave'] = 667;\\n          t['racute'] = 389;\\n          t['omacron'] = 611;\\n          t['Zacute'] = 611;\\n          t['Zcaron'] = 611;\\n          t['greaterequal'] = 549;\\n          t['Eth'] = 722;\\n          t['Ccedilla'] = 722;\\n          t['lcommaaccent'] = 278;\\n          t['tcaron'] = 389;\\n          t['eogonek'] = 556;\\n          t['Uogonek'] = 722;\\n          t['Aacute'] = 722;\\n          t['Adieresis'] = 722;\\n          t['egrave'] = 556;\\n          t['zacute'] = 500;\\n          t['iogonek'] = 278;\\n          t['Oacute'] = 778;\\n          t['oacute'] = 611;\\n          t['amacron'] = 556;\\n          t['sacute'] = 556;\\n          t['idieresis'] = 278;\\n          t['Ocircumflex'] = 778;\\n          t['Ugrave'] = 722;\\n          t['Delta'] = 612;\\n          t['thorn'] = 611;\\n          t['twosuperior'] = 333;\\n          t['Odieresis'] = 778;\\n          t['mu'] = 611;\\n          t['igrave'] = 278;\\n          t['ohungarumlaut'] = 611;\\n          t['Eogonek'] = 667;\\n          t['dcroat'] = 611;\\n          t['threequarters'] = 834;\\n          t['Scedilla'] = 667;\\n          t['lcaron'] = 400;\\n          t['Kcommaaccent'] = 722;\\n          t['Lacute'] = 611;\\n          t['trademark'] = 1000;\\n          t['edotaccent'] = 556;\\n          t['Igrave'] = 278;\\n          t['Imacron'] = 278;\\n          t['Lcaron'] = 611;\\n          t['onehalf'] = 834;\\n          t['lessequal'] = 549;\\n          t['ocircumflex'] = 611;\\n          t['ntilde'] = 611;\\n          t['Uhungarumlaut'] = 722;\\n          t['Eacute'] = 667;\\n          t['emacron'] = 556;\\n          t['gbreve'] = 611;\\n          t['onequarter'] = 834;\\n          t['Scaron'] = 667;\\n          t['Scommaaccent'] = 667;\\n          t['Ohungarumlaut'] = 778;\\n          t['degree'] = 400;\\n          t['ograve'] = 611;\\n          t['Ccaron'] = 722;\\n          t['ugrave'] = 611;\\n          t['radical'] = 549;\\n          t['Dcaron'] = 722;\\n          t['rcommaaccent'] = 389;\\n          t['Ntilde'] = 722;\\n          t['otilde'] = 611;\\n          t['Rcommaaccent'] = 722;\\n          t['Lcommaaccent'] = 611;\\n          t['Atilde'] = 722;\\n          t['Aogonek'] = 722;\\n          t['Aring'] = 722;\\n          t['Otilde'] = 778;\\n          t['zdotaccent'] = 500;\\n          t['Ecaron'] = 667;\\n          t['Iogonek'] = 278;\\n          t['kcommaaccent'] = 556;\\n          t['minus'] = 584;\\n          t['Icircumflex'] = 278;\\n          t['ncaron'] = 611;\\n          t['tcommaaccent'] = 333;\\n          t['logicalnot'] = 584;\\n          t['odieresis'] = 611;\\n          t['udieresis'] = 611;\\n          t['notequal'] = 549;\\n          t['gcommaaccent'] = 611;\\n          t['eth'] = 611;\\n          t['zcaron'] = 500;\\n          t['ncommaaccent'] = 611;\\n          t['onesuperior'] = 333;\\n          t['imacron'] = 278;\\n          t['Euro'] = 556;\\n        });\\n        t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 278;\\n          t['exclam'] = 278;\\n          t['quotedbl'] = 355;\\n          t['numbersign'] = 556;\\n          t['dollar'] = 556;\\n          t['percent'] = 889;\\n          t['ampersand'] = 667;\\n          t['quoteright'] = 222;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asterisk'] = 389;\\n          t['plus'] = 584;\\n          t['comma'] = 278;\\n          t['hyphen'] = 333;\\n          t['period'] = 278;\\n          t['slash'] = 278;\\n          t['zero'] = 556;\\n          t['one'] = 556;\\n          t['two'] = 556;\\n          t['three'] = 556;\\n          t['four'] = 556;\\n          t['five'] = 556;\\n          t['six'] = 556;\\n          t['seven'] = 556;\\n          t['eight'] = 556;\\n          t['nine'] = 556;\\n          t['colon'] = 278;\\n          t['semicolon'] = 278;\\n          t['less'] = 584;\\n          t['equal'] = 584;\\n          t['greater'] = 584;\\n          t['question'] = 556;\\n          t['at'] = 1015;\\n          t['A'] = 667;\\n          t['B'] = 667;\\n          t['C'] = 722;\\n          t['D'] = 722;\\n          t['E'] = 667;\\n          t['F'] = 611;\\n          t['G'] = 778;\\n          t['H'] = 722;\\n          t['I'] = 278;\\n          t['J'] = 500;\\n          t['K'] = 667;\\n          t['L'] = 556;\\n          t['M'] = 833;\\n          t['N'] = 722;\\n          t['O'] = 778;\\n          t['P'] = 667;\\n          t['Q'] = 778;\\n          t['R'] = 722;\\n          t['S'] = 667;\\n          t['T'] = 611;\\n          t['U'] = 722;\\n          t['V'] = 667;\\n          t['W'] = 944;\\n          t['X'] = 667;\\n          t['Y'] = 667;\\n          t['Z'] = 611;\\n          t['bracketleft'] = 278;\\n          t['backslash'] = 278;\\n          t['bracketright'] = 278;\\n          t['asciicircum'] = 469;\\n          t['underscore'] = 556;\\n          t['quoteleft'] = 222;\\n          t['a'] = 556;\\n          t['b'] = 556;\\n          t['c'] = 500;\\n          t['d'] = 556;\\n          t['e'] = 556;\\n          t['f'] = 278;\\n          t['g'] = 556;\\n          t['h'] = 556;\\n          t['i'] = 222;\\n          t['j'] = 222;\\n          t['k'] = 500;\\n          t['l'] = 222;\\n          t['m'] = 833;\\n          t['n'] = 556;\\n          t['o'] = 556;\\n          t['p'] = 556;\\n          t['q'] = 556;\\n          t['r'] = 333;\\n          t['s'] = 500;\\n          t['t'] = 278;\\n          t['u'] = 556;\\n          t['v'] = 500;\\n          t['w'] = 722;\\n          t['x'] = 500;\\n          t['y'] = 500;\\n          t['z'] = 500;\\n          t['braceleft'] = 334;\\n          t['bar'] = 260;\\n          t['braceright'] = 334;\\n          t['asciitilde'] = 584;\\n          t['exclamdown'] = 333;\\n          t['cent'] = 556;\\n          t['sterling'] = 556;\\n          t['fraction'] = 167;\\n          t['yen'] = 556;\\n          t['florin'] = 556;\\n          t['section'] = 556;\\n          t['currency'] = 556;\\n          t['quotesingle'] = 191;\\n          t['quotedblleft'] = 333;\\n          t['guillemotleft'] = 556;\\n          t['guilsinglleft'] = 333;\\n          t['guilsinglright'] = 333;\\n          t['fi'] = 500;\\n          t['fl'] = 500;\\n          t['endash'] = 556;\\n          t['dagger'] = 556;\\n          t['daggerdbl'] = 556;\\n          t['periodcentered'] = 278;\\n          t['paragraph'] = 537;\\n          t['bullet'] = 350;\\n          t['quotesinglbase'] = 222;\\n          t['quotedblbase'] = 333;\\n          t['quotedblright'] = 333;\\n          t['guillemotright'] = 556;\\n          t['ellipsis'] = 1000;\\n          t['perthousand'] = 1000;\\n          t['questiondown'] = 611;\\n          t['grave'] = 333;\\n          t['acute'] = 333;\\n          t['circumflex'] = 333;\\n          t['tilde'] = 333;\\n          t['macron'] = 333;\\n          t['breve'] = 333;\\n          t['dotaccent'] = 333;\\n          t['dieresis'] = 333;\\n          t['ring'] = 333;\\n          t['cedilla'] = 333;\\n          t['hungarumlaut'] = 333;\\n          t['ogonek'] = 333;\\n          t['caron'] = 333;\\n          t['emdash'] = 1000;\\n          t['AE'] = 1000;\\n          t['ordfeminine'] = 370;\\n          t['Lslash'] = 556;\\n          t['Oslash'] = 778;\\n          t['OE'] = 1000;\\n          t['ordmasculine'] = 365;\\n          t['ae'] = 889;\\n          t['dotlessi'] = 278;\\n          t['lslash'] = 222;\\n          t['oslash'] = 611;\\n          t['oe'] = 944;\\n          t['germandbls'] = 611;\\n          t['Idieresis'] = 278;\\n          t['eacute'] = 556;\\n          t['abreve'] = 556;\\n          t['uhungarumlaut'] = 556;\\n          t['ecaron'] = 556;\\n          t['Ydieresis'] = 667;\\n          t['divide'] = 584;\\n          t['Yacute'] = 667;\\n          t['Acircumflex'] = 667;\\n          t['aacute'] = 556;\\n          t['Ucircumflex'] = 722;\\n          t['yacute'] = 500;\\n          t['scommaaccent'] = 500;\\n          t['ecircumflex'] = 556;\\n          t['Uring'] = 722;\\n          t['Udieresis'] = 722;\\n          t['aogonek'] = 556;\\n          t['Uacute'] = 722;\\n          t['uogonek'] = 556;\\n          t['Edieresis'] = 667;\\n          t['Dcroat'] = 722;\\n          t['commaaccent'] = 250;\\n          t['copyright'] = 737;\\n          t['Emacron'] = 667;\\n          t['ccaron'] = 500;\\n          t['aring'] = 556;\\n          t['Ncommaaccent'] = 722;\\n          t['lacute'] = 222;\\n          t['agrave'] = 556;\\n          t['Tcommaaccent'] = 611;\\n          t['Cacute'] = 722;\\n          t['atilde'] = 556;\\n          t['Edotaccent'] = 667;\\n          t['scaron'] = 500;\\n          t['scedilla'] = 500;\\n          t['iacute'] = 278;\\n          t['lozenge'] = 471;\\n          t['Rcaron'] = 722;\\n          t['Gcommaaccent'] = 778;\\n          t['ucircumflex'] = 556;\\n          t['acircumflex'] = 556;\\n          t['Amacron'] = 667;\\n          t['rcaron'] = 333;\\n          t['ccedilla'] = 500;\\n          t['Zdotaccent'] = 611;\\n          t['Thorn'] = 667;\\n          t['Omacron'] = 778;\\n          t['Racute'] = 722;\\n          t['Sacute'] = 667;\\n          t['dcaron'] = 643;\\n          t['Umacron'] = 722;\\n          t['uring'] = 556;\\n          t['threesuperior'] = 333;\\n          t['Ograve'] = 778;\\n          t['Agrave'] = 667;\\n          t['Abreve'] = 667;\\n          t['multiply'] = 584;\\n          t['uacute'] = 556;\\n          t['Tcaron'] = 611;\\n          t['partialdiff'] = 476;\\n          t['ydieresis'] = 500;\\n          t['Nacute'] = 722;\\n          t['icircumflex'] = 278;\\n          t['Ecircumflex'] = 667;\\n          t['adieresis'] = 556;\\n          t['edieresis'] = 556;\\n          t['cacute'] = 500;\\n          t['nacute'] = 556;\\n          t['umacron'] = 556;\\n          t['Ncaron'] = 722;\\n          t['Iacute'] = 278;\\n          t['plusminus'] = 584;\\n          t['brokenbar'] = 260;\\n          t['registered'] = 737;\\n          t['Gbreve'] = 778;\\n          t['Idotaccent'] = 278;\\n          t['summation'] = 600;\\n          t['Egrave'] = 667;\\n          t['racute'] = 333;\\n          t['omacron'] = 556;\\n          t['Zacute'] = 611;\\n          t['Zcaron'] = 611;\\n          t['greaterequal'] = 549;\\n          t['Eth'] = 722;\\n          t['Ccedilla'] = 722;\\n          t['lcommaaccent'] = 222;\\n          t['tcaron'] = 317;\\n          t['eogonek'] = 556;\\n          t['Uogonek'] = 722;\\n          t['Aacute'] = 667;\\n          t['Adieresis'] = 667;\\n          t['egrave'] = 556;\\n          t['zacute'] = 500;\\n          t['iogonek'] = 222;\\n          t['Oacute'] = 778;\\n          t['oacute'] = 556;\\n          t['amacron'] = 556;\\n          t['sacute'] = 500;\\n          t['idieresis'] = 278;\\n          t['Ocircumflex'] = 778;\\n          t['Ugrave'] = 722;\\n          t['Delta'] = 612;\\n          t['thorn'] = 556;\\n          t['twosuperior'] = 333;\\n          t['Odieresis'] = 778;\\n          t['mu'] = 556;\\n          t['igrave'] = 278;\\n          t['ohungarumlaut'] = 556;\\n          t['Eogonek'] = 667;\\n          t['dcroat'] = 556;\\n          t['threequarters'] = 834;\\n          t['Scedilla'] = 667;\\n          t['lcaron'] = 299;\\n          t['Kcommaaccent'] = 667;\\n          t['Lacute'] = 556;\\n          t['trademark'] = 1000;\\n          t['edotaccent'] = 556;\\n          t['Igrave'] = 278;\\n          t['Imacron'] = 278;\\n          t['Lcaron'] = 556;\\n          t['onehalf'] = 834;\\n          t['lessequal'] = 549;\\n          t['ocircumflex'] = 556;\\n          t['ntilde'] = 556;\\n          t['Uhungarumlaut'] = 722;\\n          t['Eacute'] = 667;\\n          t['emacron'] = 556;\\n          t['gbreve'] = 556;\\n          t['onequarter'] = 834;\\n          t['Scaron'] = 667;\\n          t['Scommaaccent'] = 667;\\n          t['Ohungarumlaut'] = 778;\\n          t['degree'] = 400;\\n          t['ograve'] = 556;\\n          t['Ccaron'] = 722;\\n          t['ugrave'] = 556;\\n          t['radical'] = 453;\\n          t['Dcaron'] = 722;\\n          t['rcommaaccent'] = 333;\\n          t['Ntilde'] = 722;\\n          t['otilde'] = 556;\\n          t['Rcommaaccent'] = 722;\\n          t['Lcommaaccent'] = 556;\\n          t['Atilde'] = 667;\\n          t['Aogonek'] = 667;\\n          t['Aring'] = 667;\\n          t['Otilde'] = 778;\\n          t['zdotaccent'] = 500;\\n          t['Ecaron'] = 667;\\n          t['Iogonek'] = 278;\\n          t['kcommaaccent'] = 500;\\n          t['minus'] = 584;\\n          t['Icircumflex'] = 278;\\n          t['ncaron'] = 556;\\n          t['tcommaaccent'] = 278;\\n          t['logicalnot'] = 584;\\n          t['odieresis'] = 556;\\n          t['udieresis'] = 556;\\n          t['notequal'] = 549;\\n          t['gcommaaccent'] = 556;\\n          t['eth'] = 556;\\n          t['zcaron'] = 500;\\n          t['ncommaaccent'] = 556;\\n          t['onesuperior'] = 333;\\n          t['imacron'] = 278;\\n          t['Euro'] = 556;\\n        });\\n        t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 250;\\n          t['exclam'] = 333;\\n          t['universal'] = 713;\\n          t['numbersign'] = 500;\\n          t['existential'] = 549;\\n          t['percent'] = 833;\\n          t['ampersand'] = 778;\\n          t['suchthat'] = 439;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asteriskmath'] = 500;\\n          t['plus'] = 549;\\n          t['comma'] = 250;\\n          t['minus'] = 549;\\n          t['period'] = 250;\\n          t['slash'] = 278;\\n          t['zero'] = 500;\\n          t['one'] = 500;\\n          t['two'] = 500;\\n          t['three'] = 500;\\n          t['four'] = 500;\\n          t['five'] = 500;\\n          t['six'] = 500;\\n          t['seven'] = 500;\\n          t['eight'] = 500;\\n          t['nine'] = 500;\\n          t['colon'] = 278;\\n          t['semicolon'] = 278;\\n          t['less'] = 549;\\n          t['equal'] = 549;\\n          t['greater'] = 549;\\n          t['question'] = 444;\\n          t['congruent'] = 549;\\n          t['Alpha'] = 722;\\n          t['Beta'] = 667;\\n          t['Chi'] = 722;\\n          t['Delta'] = 612;\\n          t['Epsilon'] = 611;\\n          t['Phi'] = 763;\\n          t['Gamma'] = 603;\\n          t['Eta'] = 722;\\n          t['Iota'] = 333;\\n          t['theta1'] = 631;\\n          t['Kappa'] = 722;\\n          t['Lambda'] = 686;\\n          t['Mu'] = 889;\\n          t['Nu'] = 722;\\n          t['Omicron'] = 722;\\n          t['Pi'] = 768;\\n          t['Theta'] = 741;\\n          t['Rho'] = 556;\\n          t['Sigma'] = 592;\\n          t['Tau'] = 611;\\n          t['Upsilon'] = 690;\\n          t['sigma1'] = 439;\\n          t['Omega'] = 768;\\n          t['Xi'] = 645;\\n          t['Psi'] = 795;\\n          t['Zeta'] = 611;\\n          t['bracketleft'] = 333;\\n          t['therefore'] = 863;\\n          t['bracketright'] = 333;\\n          t['perpendicular'] = 658;\\n          t['underscore'] = 500;\\n          t['radicalex'] = 500;\\n          t['alpha'] = 631;\\n          t['beta'] = 549;\\n          t['chi'] = 549;\\n          t['delta'] = 494;\\n          t['epsilon'] = 439;\\n          t['phi'] = 521;\\n          t['gamma'] = 411;\\n          t['eta'] = 603;\\n          t['iota'] = 329;\\n          t['phi1'] = 603;\\n          t['kappa'] = 549;\\n          t['lambda'] = 549;\\n          t['mu'] = 576;\\n          t['nu'] = 521;\\n          t['omicron'] = 549;\\n          t['pi'] = 549;\\n          t['theta'] = 521;\\n          t['rho'] = 549;\\n          t['sigma'] = 603;\\n          t['tau'] = 439;\\n          t['upsilon'] = 576;\\n          t['omega1'] = 713;\\n          t['omega'] = 686;\\n          t['xi'] = 493;\\n          t['psi'] = 686;\\n          t['zeta'] = 494;\\n          t['braceleft'] = 480;\\n          t['bar'] = 200;\\n          t['braceright'] = 480;\\n          t['similar'] = 549;\\n          t['Euro'] = 750;\\n          t['Upsilon1'] = 620;\\n          t['minute'] = 247;\\n          t['lessequal'] = 549;\\n          t['fraction'] = 167;\\n          t['infinity'] = 713;\\n          t['florin'] = 500;\\n          t['club'] = 753;\\n          t['diamond'] = 753;\\n          t['heart'] = 753;\\n          t['spade'] = 753;\\n          t['arrowboth'] = 1042;\\n          t['arrowleft'] = 987;\\n          t['arrowup'] = 603;\\n          t['arrowright'] = 987;\\n          t['arrowdown'] = 603;\\n          t['degree'] = 400;\\n          t['plusminus'] = 549;\\n          t['second'] = 411;\\n          t['greaterequal'] = 549;\\n          t['multiply'] = 549;\\n          t['proportional'] = 713;\\n          t['partialdiff'] = 494;\\n          t['bullet'] = 460;\\n          t['divide'] = 549;\\n          t['notequal'] = 549;\\n          t['equivalence'] = 549;\\n          t['approxequal'] = 549;\\n          t['ellipsis'] = 1000;\\n          t['arrowvertex'] = 603;\\n          t['arrowhorizex'] = 1000;\\n          t['carriagereturn'] = 658;\\n          t['aleph'] = 823;\\n          t['Ifraktur'] = 686;\\n          t['Rfraktur'] = 795;\\n          t['weierstrass'] = 987;\\n          t['circlemultiply'] = 768;\\n          t['circleplus'] = 768;\\n          t['emptyset'] = 823;\\n          t['intersection'] = 768;\\n          t['union'] = 768;\\n          t['propersuperset'] = 713;\\n          t['reflexsuperset'] = 713;\\n          t['notsubset'] = 713;\\n          t['propersubset'] = 713;\\n          t['reflexsubset'] = 713;\\n          t['element'] = 713;\\n          t['notelement'] = 713;\\n          t['angle'] = 768;\\n          t['gradient'] = 713;\\n          t['registerserif'] = 790;\\n          t['copyrightserif'] = 790;\\n          t['trademarkserif'] = 890;\\n          t['product'] = 823;\\n          t['radical'] = 549;\\n          t['dotmath'] = 250;\\n          t['logicalnot'] = 713;\\n          t['logicaland'] = 603;\\n          t['logicalor'] = 603;\\n          t['arrowdblboth'] = 1042;\\n          t['arrowdblleft'] = 987;\\n          t['arrowdblup'] = 603;\\n          t['arrowdblright'] = 987;\\n          t['arrowdbldown'] = 603;\\n          t['lozenge'] = 494;\\n          t['angleleft'] = 329;\\n          t['registersans'] = 790;\\n          t['copyrightsans'] = 790;\\n          t['trademarksans'] = 786;\\n          t['summation'] = 713;\\n          t['parenlefttp'] = 384;\\n          t['parenleftex'] = 384;\\n          t['parenleftbt'] = 384;\\n          t['bracketlefttp'] = 384;\\n          t['bracketleftex'] = 384;\\n          t['bracketleftbt'] = 384;\\n          t['bracelefttp'] = 494;\\n          t['braceleftmid'] = 494;\\n          t['braceleftbt'] = 494;\\n          t['braceex'] = 494;\\n          t['angleright'] = 329;\\n          t['integral'] = 274;\\n          t['integraltp'] = 686;\\n          t['integralex'] = 686;\\n          t['integralbt'] = 686;\\n          t['parenrighttp'] = 384;\\n          t['parenrightex'] = 384;\\n          t['parenrightbt'] = 384;\\n          t['bracketrighttp'] = 384;\\n          t['bracketrightex'] = 384;\\n          t['bracketrightbt'] = 384;\\n          t['bracerighttp'] = 494;\\n          t['bracerightmid'] = 494;\\n          t['bracerightbt'] = 494;\\n          t['apple'] = 790;\\n        });\\n        t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 250;\\n          t['exclam'] = 333;\\n          t['quotedbl'] = 408;\\n          t['numbersign'] = 500;\\n          t['dollar'] = 500;\\n          t['percent'] = 833;\\n          t['ampersand'] = 778;\\n          t['quoteright'] = 333;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asterisk'] = 500;\\n          t['plus'] = 564;\\n          t['comma'] = 250;\\n          t['hyphen'] = 333;\\n          t['period'] = 250;\\n          t['slash'] = 278;\\n          t['zero'] = 500;\\n          t['one'] = 500;\\n          t['two'] = 500;\\n          t['three'] = 500;\\n          t['four'] = 500;\\n          t['five'] = 500;\\n          t['six'] = 500;\\n          t['seven'] = 500;\\n          t['eight'] = 500;\\n          t['nine'] = 500;\\n          t['colon'] = 278;\\n          t['semicolon'] = 278;\\n          t['less'] = 564;\\n          t['equal'] = 564;\\n          t['greater'] = 564;\\n          t['question'] = 444;\\n          t['at'] = 921;\\n          t['A'] = 722;\\n          t['B'] = 667;\\n          t['C'] = 667;\\n          t['D'] = 722;\\n          t['E'] = 611;\\n          t['F'] = 556;\\n          t['G'] = 722;\\n          t['H'] = 722;\\n          t['I'] = 333;\\n          t['J'] = 389;\\n          t['K'] = 722;\\n          t['L'] = 611;\\n          t['M'] = 889;\\n          t['N'] = 722;\\n          t['O'] = 722;\\n          t['P'] = 556;\\n          t['Q'] = 722;\\n          t['R'] = 667;\\n          t['S'] = 556;\\n          t['T'] = 611;\\n          t['U'] = 722;\\n          t['V'] = 722;\\n          t['W'] = 944;\\n          t['X'] = 722;\\n          t['Y'] = 722;\\n          t['Z'] = 611;\\n          t['bracketleft'] = 333;\\n          t['backslash'] = 278;\\n          t['bracketright'] = 333;\\n          t['asciicircum'] = 469;\\n          t['underscore'] = 500;\\n          t['quoteleft'] = 333;\\n          t['a'] = 444;\\n          t['b'] = 500;\\n          t['c'] = 444;\\n          t['d'] = 500;\\n          t['e'] = 444;\\n          t['f'] = 333;\\n          t['g'] = 500;\\n          t['h'] = 500;\\n          t['i'] = 278;\\n          t['j'] = 278;\\n          t['k'] = 500;\\n          t['l'] = 278;\\n          t['m'] = 778;\\n          t['n'] = 500;\\n          t['o'] = 500;\\n          t['p'] = 500;\\n          t['q'] = 500;\\n          t['r'] = 333;\\n          t['s'] = 389;\\n          t['t'] = 278;\\n          t['u'] = 500;\\n          t['v'] = 500;\\n          t['w'] = 722;\\n          t['x'] = 500;\\n          t['y'] = 500;\\n          t['z'] = 444;\\n          t['braceleft'] = 480;\\n          t['bar'] = 200;\\n          t['braceright'] = 480;\\n          t['asciitilde'] = 541;\\n          t['exclamdown'] = 333;\\n          t['cent'] = 500;\\n          t['sterling'] = 500;\\n          t['fraction'] = 167;\\n          t['yen'] = 500;\\n          t['florin'] = 500;\\n          t['section'] = 500;\\n          t['currency'] = 500;\\n          t['quotesingle'] = 180;\\n          t['quotedblleft'] = 444;\\n          t['guillemotleft'] = 500;\\n          t['guilsinglleft'] = 333;\\n          t['guilsinglright'] = 333;\\n          t['fi'] = 556;\\n          t['fl'] = 556;\\n          t['endash'] = 500;\\n          t['dagger'] = 500;\\n          t['daggerdbl'] = 500;\\n          t['periodcentered'] = 250;\\n          t['paragraph'] = 453;\\n          t['bullet'] = 350;\\n          t['quotesinglbase'] = 333;\\n          t['quotedblbase'] = 444;\\n          t['quotedblright'] = 444;\\n          t['guillemotright'] = 500;\\n          t['ellipsis'] = 1000;\\n          t['perthousand'] = 1000;\\n          t['questiondown'] = 444;\\n          t['grave'] = 333;\\n          t['acute'] = 333;\\n          t['circumflex'] = 333;\\n          t['tilde'] = 333;\\n          t['macron'] = 333;\\n          t['breve'] = 333;\\n          t['dotaccent'] = 333;\\n          t['dieresis'] = 333;\\n          t['ring'] = 333;\\n          t['cedilla'] = 333;\\n          t['hungarumlaut'] = 333;\\n          t['ogonek'] = 333;\\n          t['caron'] = 333;\\n          t['emdash'] = 1000;\\n          t['AE'] = 889;\\n          t['ordfeminine'] = 276;\\n          t['Lslash'] = 611;\\n          t['Oslash'] = 722;\\n          t['OE'] = 889;\\n          t['ordmasculine'] = 310;\\n          t['ae'] = 667;\\n          t['dotlessi'] = 278;\\n          t['lslash'] = 278;\\n          t['oslash'] = 500;\\n          t['oe'] = 722;\\n          t['germandbls'] = 500;\\n          t['Idieresis'] = 333;\\n          t['eacute'] = 444;\\n          t['abreve'] = 444;\\n          t['uhungarumlaut'] = 500;\\n          t['ecaron'] = 444;\\n          t['Ydieresis'] = 722;\\n          t['divide'] = 564;\\n          t['Yacute'] = 722;\\n          t['Acircumflex'] = 722;\\n          t['aacute'] = 444;\\n          t['Ucircumflex'] = 722;\\n          t['yacute'] = 500;\\n          t['scommaaccent'] = 389;\\n          t['ecircumflex'] = 444;\\n          t['Uring'] = 722;\\n          t['Udieresis'] = 722;\\n          t['aogonek'] = 444;\\n          t['Uacute'] = 722;\\n          t['uogonek'] = 500;\\n          t['Edieresis'] = 611;\\n          t['Dcroat'] = 722;\\n          t['commaaccent'] = 250;\\n          t['copyright'] = 760;\\n          t['Emacron'] = 611;\\n          t['ccaron'] = 444;\\n          t['aring'] = 444;\\n          t['Ncommaaccent'] = 722;\\n          t['lacute'] = 278;\\n          t['agrave'] = 444;\\n          t['Tcommaaccent'] = 611;\\n          t['Cacute'] = 667;\\n          t['atilde'] = 444;\\n          t['Edotaccent'] = 611;\\n          t['scaron'] = 389;\\n          t['scedilla'] = 389;\\n          t['iacute'] = 278;\\n          t['lozenge'] = 471;\\n          t['Rcaron'] = 667;\\n          t['Gcommaaccent'] = 722;\\n          t['ucircumflex'] = 500;\\n          t['acircumflex'] = 444;\\n          t['Amacron'] = 722;\\n          t['rcaron'] = 333;\\n          t['ccedilla'] = 444;\\n          t['Zdotaccent'] = 611;\\n          t['Thorn'] = 556;\\n          t['Omacron'] = 722;\\n          t['Racute'] = 667;\\n          t['Sacute'] = 556;\\n          t['dcaron'] = 588;\\n          t['Umacron'] = 722;\\n          t['uring'] = 500;\\n          t['threesuperior'] = 300;\\n          t['Ograve'] = 722;\\n          t['Agrave'] = 722;\\n          t['Abreve'] = 722;\\n          t['multiply'] = 564;\\n          t['uacute'] = 500;\\n          t['Tcaron'] = 611;\\n          t['partialdiff'] = 476;\\n          t['ydieresis'] = 500;\\n          t['Nacute'] = 722;\\n          t['icircumflex'] = 278;\\n          t['Ecircumflex'] = 611;\\n          t['adieresis'] = 444;\\n          t['edieresis'] = 444;\\n          t['cacute'] = 444;\\n          t['nacute'] = 500;\\n          t['umacron'] = 500;\\n          t['Ncaron'] = 722;\\n          t['Iacute'] = 333;\\n          t['plusminus'] = 564;\\n          t['brokenbar'] = 200;\\n          t['registered'] = 760;\\n          t['Gbreve'] = 722;\\n          t['Idotaccent'] = 333;\\n          t['summation'] = 600;\\n          t['Egrave'] = 611;\\n          t['racute'] = 333;\\n          t['omacron'] = 500;\\n          t['Zacute'] = 611;\\n          t['Zcaron'] = 611;\\n          t['greaterequal'] = 549;\\n          t['Eth'] = 722;\\n          t['Ccedilla'] = 667;\\n          t['lcommaaccent'] = 278;\\n          t['tcaron'] = 326;\\n          t['eogonek'] = 444;\\n          t['Uogonek'] = 722;\\n          t['Aacute'] = 722;\\n          t['Adieresis'] = 722;\\n          t['egrave'] = 444;\\n          t['zacute'] = 444;\\n          t['iogonek'] = 278;\\n          t['Oacute'] = 722;\\n          t['oacute'] = 500;\\n          t['amacron'] = 444;\\n          t['sacute'] = 389;\\n          t['idieresis'] = 278;\\n          t['Ocircumflex'] = 722;\\n          t['Ugrave'] = 722;\\n          t['Delta'] = 612;\\n          t['thorn'] = 500;\\n          t['twosuperior'] = 300;\\n          t['Odieresis'] = 722;\\n          t['mu'] = 500;\\n          t['igrave'] = 278;\\n          t['ohungarumlaut'] = 500;\\n          t['Eogonek'] = 611;\\n          t['dcroat'] = 500;\\n          t['threequarters'] = 750;\\n          t['Scedilla'] = 556;\\n          t['lcaron'] = 344;\\n          t['Kcommaaccent'] = 722;\\n          t['Lacute'] = 611;\\n          t['trademark'] = 980;\\n          t['edotaccent'] = 444;\\n          t['Igrave'] = 333;\\n          t['Imacron'] = 333;\\n          t['Lcaron'] = 611;\\n          t['onehalf'] = 750;\\n          t['lessequal'] = 549;\\n          t['ocircumflex'] = 500;\\n          t['ntilde'] = 500;\\n          t['Uhungarumlaut'] = 722;\\n          t['Eacute'] = 611;\\n          t['emacron'] = 444;\\n          t['gbreve'] = 500;\\n          t['onequarter'] = 750;\\n          t['Scaron'] = 556;\\n          t['Scommaaccent'] = 556;\\n          t['Ohungarumlaut'] = 722;\\n          t['degree'] = 400;\\n          t['ograve'] = 500;\\n          t['Ccaron'] = 667;\\n          t['ugrave'] = 500;\\n          t['radical'] = 453;\\n          t['Dcaron'] = 722;\\n          t['rcommaaccent'] = 333;\\n          t['Ntilde'] = 722;\\n          t['otilde'] = 500;\\n          t['Rcommaaccent'] = 667;\\n          t['Lcommaaccent'] = 611;\\n          t['Atilde'] = 722;\\n          t['Aogonek'] = 722;\\n          t['Aring'] = 722;\\n          t['Otilde'] = 722;\\n          t['zdotaccent'] = 444;\\n          t['Ecaron'] = 611;\\n          t['Iogonek'] = 333;\\n          t['kcommaaccent'] = 500;\\n          t['minus'] = 564;\\n          t['Icircumflex'] = 333;\\n          t['ncaron'] = 500;\\n          t['tcommaaccent'] = 278;\\n          t['logicalnot'] = 564;\\n          t['odieresis'] = 500;\\n          t['udieresis'] = 500;\\n          t['notequal'] = 549;\\n          t['gcommaaccent'] = 500;\\n          t['eth'] = 500;\\n          t['zcaron'] = 444;\\n          t['ncommaaccent'] = 500;\\n          t['onesuperior'] = 300;\\n          t['imacron'] = 278;\\n          t['Euro'] = 500;\\n        });\\n        t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 250;\\n          t['exclam'] = 333;\\n          t['quotedbl'] = 555;\\n          t['numbersign'] = 500;\\n          t['dollar'] = 500;\\n          t['percent'] = 1000;\\n          t['ampersand'] = 833;\\n          t['quoteright'] = 333;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asterisk'] = 500;\\n          t['plus'] = 570;\\n          t['comma'] = 250;\\n          t['hyphen'] = 333;\\n          t['period'] = 250;\\n          t['slash'] = 278;\\n          t['zero'] = 500;\\n          t['one'] = 500;\\n          t['two'] = 500;\\n          t['three'] = 500;\\n          t['four'] = 500;\\n          t['five'] = 500;\\n          t['six'] = 500;\\n          t['seven'] = 500;\\n          t['eight'] = 500;\\n          t['nine'] = 500;\\n          t['colon'] = 333;\\n          t['semicolon'] = 333;\\n          t['less'] = 570;\\n          t['equal'] = 570;\\n          t['greater'] = 570;\\n          t['question'] = 500;\\n          t['at'] = 930;\\n          t['A'] = 722;\\n          t['B'] = 667;\\n          t['C'] = 722;\\n          t['D'] = 722;\\n          t['E'] = 667;\\n          t['F'] = 611;\\n          t['G'] = 778;\\n          t['H'] = 778;\\n          t['I'] = 389;\\n          t['J'] = 500;\\n          t['K'] = 778;\\n          t['L'] = 667;\\n          t['M'] = 944;\\n          t['N'] = 722;\\n          t['O'] = 778;\\n          t['P'] = 611;\\n          t['Q'] = 778;\\n          t['R'] = 722;\\n          t['S'] = 556;\\n          t['T'] = 667;\\n          t['U'] = 722;\\n          t['V'] = 722;\\n          t['W'] = 1000;\\n          t['X'] = 722;\\n          t['Y'] = 722;\\n          t['Z'] = 667;\\n          t['bracketleft'] = 333;\\n          t['backslash'] = 278;\\n          t['bracketright'] = 333;\\n          t['asciicircum'] = 581;\\n          t['underscore'] = 500;\\n          t['quoteleft'] = 333;\\n          t['a'] = 500;\\n          t['b'] = 556;\\n          t['c'] = 444;\\n          t['d'] = 556;\\n          t['e'] = 444;\\n          t['f'] = 333;\\n          t['g'] = 500;\\n          t['h'] = 556;\\n          t['i'] = 278;\\n          t['j'] = 333;\\n          t['k'] = 556;\\n          t['l'] = 278;\\n          t['m'] = 833;\\n          t['n'] = 556;\\n          t['o'] = 500;\\n          t['p'] = 556;\\n          t['q'] = 556;\\n          t['r'] = 444;\\n          t['s'] = 389;\\n          t['t'] = 333;\\n          t['u'] = 556;\\n          t['v'] = 500;\\n          t['w'] = 722;\\n          t['x'] = 500;\\n          t['y'] = 500;\\n          t['z'] = 444;\\n          t['braceleft'] = 394;\\n          t['bar'] = 220;\\n          t['braceright'] = 394;\\n          t['asciitilde'] = 520;\\n          t['exclamdown'] = 333;\\n          t['cent'] = 500;\\n          t['sterling'] = 500;\\n          t['fraction'] = 167;\\n          t['yen'] = 500;\\n          t['florin'] = 500;\\n          t['section'] = 500;\\n          t['currency'] = 500;\\n          t['quotesingle'] = 278;\\n          t['quotedblleft'] = 500;\\n          t['guillemotleft'] = 500;\\n          t['guilsinglleft'] = 333;\\n          t['guilsinglright'] = 333;\\n          t['fi'] = 556;\\n          t['fl'] = 556;\\n          t['endash'] = 500;\\n          t['dagger'] = 500;\\n          t['daggerdbl'] = 500;\\n          t['periodcentered'] = 250;\\n          t['paragraph'] = 540;\\n          t['bullet'] = 350;\\n          t['quotesinglbase'] = 333;\\n          t['quotedblbase'] = 500;\\n          t['quotedblright'] = 500;\\n          t['guillemotright'] = 500;\\n          t['ellipsis'] = 1000;\\n          t['perthousand'] = 1000;\\n          t['questiondown'] = 500;\\n          t['grave'] = 333;\\n          t['acute'] = 333;\\n          t['circumflex'] = 333;\\n          t['tilde'] = 333;\\n          t['macron'] = 333;\\n          t['breve'] = 333;\\n          t['dotaccent'] = 333;\\n          t['dieresis'] = 333;\\n          t['ring'] = 333;\\n          t['cedilla'] = 333;\\n          t['hungarumlaut'] = 333;\\n          t['ogonek'] = 333;\\n          t['caron'] = 333;\\n          t['emdash'] = 1000;\\n          t['AE'] = 1000;\\n          t['ordfeminine'] = 300;\\n          t['Lslash'] = 667;\\n          t['Oslash'] = 778;\\n          t['OE'] = 1000;\\n          t['ordmasculine'] = 330;\\n          t['ae'] = 722;\\n          t['dotlessi'] = 278;\\n          t['lslash'] = 278;\\n          t['oslash'] = 500;\\n          t['oe'] = 722;\\n          t['germandbls'] = 556;\\n          t['Idieresis'] = 389;\\n          t['eacute'] = 444;\\n          t['abreve'] = 500;\\n          t['uhungarumlaut'] = 556;\\n          t['ecaron'] = 444;\\n          t['Ydieresis'] = 722;\\n          t['divide'] = 570;\\n          t['Yacute'] = 722;\\n          t['Acircumflex'] = 722;\\n          t['aacute'] = 500;\\n          t['Ucircumflex'] = 722;\\n          t['yacute'] = 500;\\n          t['scommaaccent'] = 389;\\n          t['ecircumflex'] = 444;\\n          t['Uring'] = 722;\\n          t['Udieresis'] = 722;\\n          t['aogonek'] = 500;\\n          t['Uacute'] = 722;\\n          t['uogonek'] = 556;\\n          t['Edieresis'] = 667;\\n          t['Dcroat'] = 722;\\n          t['commaaccent'] = 250;\\n          t['copyright'] = 747;\\n          t['Emacron'] = 667;\\n          t['ccaron'] = 444;\\n          t['aring'] = 500;\\n          t['Ncommaaccent'] = 722;\\n          t['lacute'] = 278;\\n          t['agrave'] = 500;\\n          t['Tcommaaccent'] = 667;\\n          t['Cacute'] = 722;\\n          t['atilde'] = 500;\\n          t['Edotaccent'] = 667;\\n          t['scaron'] = 389;\\n          t['scedilla'] = 389;\\n          t['iacute'] = 278;\\n          t['lozenge'] = 494;\\n          t['Rcaron'] = 722;\\n          t['Gcommaaccent'] = 778;\\n          t['ucircumflex'] = 556;\\n          t['acircumflex'] = 500;\\n          t['Amacron'] = 722;\\n          t['rcaron'] = 444;\\n          t['ccedilla'] = 444;\\n          t['Zdotaccent'] = 667;\\n          t['Thorn'] = 611;\\n          t['Omacron'] = 778;\\n          t['Racute'] = 722;\\n          t['Sacute'] = 556;\\n          t['dcaron'] = 672;\\n          t['Umacron'] = 722;\\n          t['uring'] = 556;\\n          t['threesuperior'] = 300;\\n          t['Ograve'] = 778;\\n          t['Agrave'] = 722;\\n          t['Abreve'] = 722;\\n          t['multiply'] = 570;\\n          t['uacute'] = 556;\\n          t['Tcaron'] = 667;\\n          t['partialdiff'] = 494;\\n          t['ydieresis'] = 500;\\n          t['Nacute'] = 722;\\n          t['icircumflex'] = 278;\\n          t['Ecircumflex'] = 667;\\n          t['adieresis'] = 500;\\n          t['edieresis'] = 444;\\n          t['cacute'] = 444;\\n          t['nacute'] = 556;\\n          t['umacron'] = 556;\\n          t['Ncaron'] = 722;\\n          t['Iacute'] = 389;\\n          t['plusminus'] = 570;\\n          t['brokenbar'] = 220;\\n          t['registered'] = 747;\\n          t['Gbreve'] = 778;\\n          t['Idotaccent'] = 389;\\n          t['summation'] = 600;\\n          t['Egrave'] = 667;\\n          t['racute'] = 444;\\n          t['omacron'] = 500;\\n          t['Zacute'] = 667;\\n          t['Zcaron'] = 667;\\n          t['greaterequal'] = 549;\\n          t['Eth'] = 722;\\n          t['Ccedilla'] = 722;\\n          t['lcommaaccent'] = 278;\\n          t['tcaron'] = 416;\\n          t['eogonek'] = 444;\\n          t['Uogonek'] = 722;\\n          t['Aacute'] = 722;\\n          t['Adieresis'] = 722;\\n          t['egrave'] = 444;\\n          t['zacute'] = 444;\\n          t['iogonek'] = 278;\\n          t['Oacute'] = 778;\\n          t['oacute'] = 500;\\n          t['amacron'] = 500;\\n          t['sacute'] = 389;\\n          t['idieresis'] = 278;\\n          t['Ocircumflex'] = 778;\\n          t['Ugrave'] = 722;\\n          t['Delta'] = 612;\\n          t['thorn'] = 556;\\n          t['twosuperior'] = 300;\\n          t['Odieresis'] = 778;\\n          t['mu'] = 556;\\n          t['igrave'] = 278;\\n          t['ohungarumlaut'] = 500;\\n          t['Eogonek'] = 667;\\n          t['dcroat'] = 556;\\n          t['threequarters'] = 750;\\n          t['Scedilla'] = 556;\\n          t['lcaron'] = 394;\\n          t['Kcommaaccent'] = 778;\\n          t['Lacute'] = 667;\\n          t['trademark'] = 1000;\\n          t['edotaccent'] = 444;\\n          t['Igrave'] = 389;\\n          t['Imacron'] = 389;\\n          t['Lcaron'] = 667;\\n          t['onehalf'] = 750;\\n          t['lessequal'] = 549;\\n          t['ocircumflex'] = 500;\\n          t['ntilde'] = 556;\\n          t['Uhungarumlaut'] = 722;\\n          t['Eacute'] = 667;\\n          t['emacron'] = 444;\\n          t['gbreve'] = 500;\\n          t['onequarter'] = 750;\\n          t['Scaron'] = 556;\\n          t['Scommaaccent'] = 556;\\n          t['Ohungarumlaut'] = 778;\\n          t['degree'] = 400;\\n          t['ograve'] = 500;\\n          t['Ccaron'] = 722;\\n          t['ugrave'] = 556;\\n          t['radical'] = 549;\\n          t['Dcaron'] = 722;\\n          t['rcommaaccent'] = 444;\\n          t['Ntilde'] = 722;\\n          t['otilde'] = 500;\\n          t['Rcommaaccent'] = 722;\\n          t['Lcommaaccent'] = 667;\\n          t['Atilde'] = 722;\\n          t['Aogonek'] = 722;\\n          t['Aring'] = 722;\\n          t['Otilde'] = 778;\\n          t['zdotaccent'] = 444;\\n          t['Ecaron'] = 667;\\n          t['Iogonek'] = 389;\\n          t['kcommaaccent'] = 556;\\n          t['minus'] = 570;\\n          t['Icircumflex'] = 389;\\n          t['ncaron'] = 556;\\n          t['tcommaaccent'] = 333;\\n          t['logicalnot'] = 570;\\n          t['odieresis'] = 500;\\n          t['udieresis'] = 556;\\n          t['notequal'] = 549;\\n          t['gcommaaccent'] = 500;\\n          t['eth'] = 500;\\n          t['zcaron'] = 444;\\n          t['ncommaaccent'] = 556;\\n          t['onesuperior'] = 300;\\n          t['imacron'] = 278;\\n          t['Euro'] = 500;\\n        });\\n        t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 250;\\n          t['exclam'] = 389;\\n          t['quotedbl'] = 555;\\n          t['numbersign'] = 500;\\n          t['dollar'] = 500;\\n          t['percent'] = 833;\\n          t['ampersand'] = 778;\\n          t['quoteright'] = 333;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asterisk'] = 500;\\n          t['plus'] = 570;\\n          t['comma'] = 250;\\n          t['hyphen'] = 333;\\n          t['period'] = 250;\\n          t['slash'] = 278;\\n          t['zero'] = 500;\\n          t['one'] = 500;\\n          t['two'] = 500;\\n          t['three'] = 500;\\n          t['four'] = 500;\\n          t['five'] = 500;\\n          t['six'] = 500;\\n          t['seven'] = 500;\\n          t['eight'] = 500;\\n          t['nine'] = 500;\\n          t['colon'] = 333;\\n          t['semicolon'] = 333;\\n          t['less'] = 570;\\n          t['equal'] = 570;\\n          t['greater'] = 570;\\n          t['question'] = 500;\\n          t['at'] = 832;\\n          t['A'] = 667;\\n          t['B'] = 667;\\n          t['C'] = 667;\\n          t['D'] = 722;\\n          t['E'] = 667;\\n          t['F'] = 667;\\n          t['G'] = 722;\\n          t['H'] = 778;\\n          t['I'] = 389;\\n          t['J'] = 500;\\n          t['K'] = 667;\\n          t['L'] = 611;\\n          t['M'] = 889;\\n          t['N'] = 722;\\n          t['O'] = 722;\\n          t['P'] = 611;\\n          t['Q'] = 722;\\n          t['R'] = 667;\\n          t['S'] = 556;\\n          t['T'] = 611;\\n          t['U'] = 722;\\n          t['V'] = 667;\\n          t['W'] = 889;\\n          t['X'] = 667;\\n          t['Y'] = 611;\\n          t['Z'] = 611;\\n          t['bracketleft'] = 333;\\n          t['backslash'] = 278;\\n          t['bracketright'] = 333;\\n          t['asciicircum'] = 570;\\n          t['underscore'] = 500;\\n          t['quoteleft'] = 333;\\n          t['a'] = 500;\\n          t['b'] = 500;\\n          t['c'] = 444;\\n          t['d'] = 500;\\n          t['e'] = 444;\\n          t['f'] = 333;\\n          t['g'] = 500;\\n          t['h'] = 556;\\n          t['i'] = 278;\\n          t['j'] = 278;\\n          t['k'] = 500;\\n          t['l'] = 278;\\n          t['m'] = 778;\\n          t['n'] = 556;\\n          t['o'] = 500;\\n          t['p'] = 500;\\n          t['q'] = 500;\\n          t['r'] = 389;\\n          t['s'] = 389;\\n          t['t'] = 278;\\n          t['u'] = 556;\\n          t['v'] = 444;\\n          t['w'] = 667;\\n          t['x'] = 500;\\n          t['y'] = 444;\\n          t['z'] = 389;\\n          t['braceleft'] = 348;\\n          t['bar'] = 220;\\n          t['braceright'] = 348;\\n          t['asciitilde'] = 570;\\n          t['exclamdown'] = 389;\\n          t['cent'] = 500;\\n          t['sterling'] = 500;\\n          t['fraction'] = 167;\\n          t['yen'] = 500;\\n          t['florin'] = 500;\\n          t['section'] = 500;\\n          t['currency'] = 500;\\n          t['quotesingle'] = 278;\\n          t['quotedblleft'] = 500;\\n          t['guillemotleft'] = 500;\\n          t['guilsinglleft'] = 333;\\n          t['guilsinglright'] = 333;\\n          t['fi'] = 556;\\n          t['fl'] = 556;\\n          t['endash'] = 500;\\n          t['dagger'] = 500;\\n          t['daggerdbl'] = 500;\\n          t['periodcentered'] = 250;\\n          t['paragraph'] = 500;\\n          t['bullet'] = 350;\\n          t['quotesinglbase'] = 333;\\n          t['quotedblbase'] = 500;\\n          t['quotedblright'] = 500;\\n          t['guillemotright'] = 500;\\n          t['ellipsis'] = 1000;\\n          t['perthousand'] = 1000;\\n          t['questiondown'] = 500;\\n          t['grave'] = 333;\\n          t['acute'] = 333;\\n          t['circumflex'] = 333;\\n          t['tilde'] = 333;\\n          t['macron'] = 333;\\n          t['breve'] = 333;\\n          t['dotaccent'] = 333;\\n          t['dieresis'] = 333;\\n          t['ring'] = 333;\\n          t['cedilla'] = 333;\\n          t['hungarumlaut'] = 333;\\n          t['ogonek'] = 333;\\n          t['caron'] = 333;\\n          t['emdash'] = 1000;\\n          t['AE'] = 944;\\n          t['ordfeminine'] = 266;\\n          t['Lslash'] = 611;\\n          t['Oslash'] = 722;\\n          t['OE'] = 944;\\n          t['ordmasculine'] = 300;\\n          t['ae'] = 722;\\n          t['dotlessi'] = 278;\\n          t['lslash'] = 278;\\n          t['oslash'] = 500;\\n          t['oe'] = 722;\\n          t['germandbls'] = 500;\\n          t['Idieresis'] = 389;\\n          t['eacute'] = 444;\\n          t['abreve'] = 500;\\n          t['uhungarumlaut'] = 556;\\n          t['ecaron'] = 444;\\n          t['Ydieresis'] = 611;\\n          t['divide'] = 570;\\n          t['Yacute'] = 611;\\n          t['Acircumflex'] = 667;\\n          t['aacute'] = 500;\\n          t['Ucircumflex'] = 722;\\n          t['yacute'] = 444;\\n          t['scommaaccent'] = 389;\\n          t['ecircumflex'] = 444;\\n          t['Uring'] = 722;\\n          t['Udieresis'] = 722;\\n          t['aogonek'] = 500;\\n          t['Uacute'] = 722;\\n          t['uogonek'] = 556;\\n          t['Edieresis'] = 667;\\n          t['Dcroat'] = 722;\\n          t['commaaccent'] = 250;\\n          t['copyright'] = 747;\\n          t['Emacron'] = 667;\\n          t['ccaron'] = 444;\\n          t['aring'] = 500;\\n          t['Ncommaaccent'] = 722;\\n          t['lacute'] = 278;\\n          t['agrave'] = 500;\\n          t['Tcommaaccent'] = 611;\\n          t['Cacute'] = 667;\\n          t['atilde'] = 500;\\n          t['Edotaccent'] = 667;\\n          t['scaron'] = 389;\\n          t['scedilla'] = 389;\\n          t['iacute'] = 278;\\n          t['lozenge'] = 494;\\n          t['Rcaron'] = 667;\\n          t['Gcommaaccent'] = 722;\\n          t['ucircumflex'] = 556;\\n          t['acircumflex'] = 500;\\n          t['Amacron'] = 667;\\n          t['rcaron'] = 389;\\n          t['ccedilla'] = 444;\\n          t['Zdotaccent'] = 611;\\n          t['Thorn'] = 611;\\n          t['Omacron'] = 722;\\n          t['Racute'] = 667;\\n          t['Sacute'] = 556;\\n          t['dcaron'] = 608;\\n          t['Umacron'] = 722;\\n          t['uring'] = 556;\\n          t['threesuperior'] = 300;\\n          t['Ograve'] = 722;\\n          t['Agrave'] = 667;\\n          t['Abreve'] = 667;\\n          t['multiply'] = 570;\\n          t['uacute'] = 556;\\n          t['Tcaron'] = 611;\\n          t['partialdiff'] = 494;\\n          t['ydieresis'] = 444;\\n          t['Nacute'] = 722;\\n          t['icircumflex'] = 278;\\n          t['Ecircumflex'] = 667;\\n          t['adieresis'] = 500;\\n          t['edieresis'] = 444;\\n          t['cacute'] = 444;\\n          t['nacute'] = 556;\\n          t['umacron'] = 556;\\n          t['Ncaron'] = 722;\\n          t['Iacute'] = 389;\\n          t['plusminus'] = 570;\\n          t['brokenbar'] = 220;\\n          t['registered'] = 747;\\n          t['Gbreve'] = 722;\\n          t['Idotaccent'] = 389;\\n          t['summation'] = 600;\\n          t['Egrave'] = 667;\\n          t['racute'] = 389;\\n          t['omacron'] = 500;\\n          t['Zacute'] = 611;\\n          t['Zcaron'] = 611;\\n          t['greaterequal'] = 549;\\n          t['Eth'] = 722;\\n          t['Ccedilla'] = 667;\\n          t['lcommaaccent'] = 278;\\n          t['tcaron'] = 366;\\n          t['eogonek'] = 444;\\n          t['Uogonek'] = 722;\\n          t['Aacute'] = 667;\\n          t['Adieresis'] = 667;\\n          t['egrave'] = 444;\\n          t['zacute'] = 389;\\n          t['iogonek'] = 278;\\n          t['Oacute'] = 722;\\n          t['oacute'] = 500;\\n          t['amacron'] = 500;\\n          t['sacute'] = 389;\\n          t['idieresis'] = 278;\\n          t['Ocircumflex'] = 722;\\n          t['Ugrave'] = 722;\\n          t['Delta'] = 612;\\n          t['thorn'] = 500;\\n          t['twosuperior'] = 300;\\n          t['Odieresis'] = 722;\\n          t['mu'] = 576;\\n          t['igrave'] = 278;\\n          t['ohungarumlaut'] = 500;\\n          t['Eogonek'] = 667;\\n          t['dcroat'] = 500;\\n          t['threequarters'] = 750;\\n          t['Scedilla'] = 556;\\n          t['lcaron'] = 382;\\n          t['Kcommaaccent'] = 667;\\n          t['Lacute'] = 611;\\n          t['trademark'] = 1000;\\n          t['edotaccent'] = 444;\\n          t['Igrave'] = 389;\\n          t['Imacron'] = 389;\\n          t['Lcaron'] = 611;\\n          t['onehalf'] = 750;\\n          t['lessequal'] = 549;\\n          t['ocircumflex'] = 500;\\n          t['ntilde'] = 556;\\n          t['Uhungarumlaut'] = 722;\\n          t['Eacute'] = 667;\\n          t['emacron'] = 444;\\n          t['gbreve'] = 500;\\n          t['onequarter'] = 750;\\n          t['Scaron'] = 556;\\n          t['Scommaaccent'] = 556;\\n          t['Ohungarumlaut'] = 722;\\n          t['degree'] = 400;\\n          t['ograve'] = 500;\\n          t['Ccaron'] = 667;\\n          t['ugrave'] = 556;\\n          t['radical'] = 549;\\n          t['Dcaron'] = 722;\\n          t['rcommaaccent'] = 389;\\n          t['Ntilde'] = 722;\\n          t['otilde'] = 500;\\n          t['Rcommaaccent'] = 667;\\n          t['Lcommaaccent'] = 611;\\n          t['Atilde'] = 667;\\n          t['Aogonek'] = 667;\\n          t['Aring'] = 667;\\n          t['Otilde'] = 722;\\n          t['zdotaccent'] = 389;\\n          t['Ecaron'] = 667;\\n          t['Iogonek'] = 389;\\n          t['kcommaaccent'] = 500;\\n          t['minus'] = 606;\\n          t['Icircumflex'] = 389;\\n          t['ncaron'] = 556;\\n          t['tcommaaccent'] = 278;\\n          t['logicalnot'] = 606;\\n          t['odieresis'] = 500;\\n          t['udieresis'] = 556;\\n          t['notequal'] = 549;\\n          t['gcommaaccent'] = 500;\\n          t['eth'] = 500;\\n          t['zcaron'] = 389;\\n          t['ncommaaccent'] = 556;\\n          t['onesuperior'] = 300;\\n          t['imacron'] = 278;\\n          t['Euro'] = 500;\\n        });\\n        t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 250;\\n          t['exclam'] = 333;\\n          t['quotedbl'] = 420;\\n          t['numbersign'] = 500;\\n          t['dollar'] = 500;\\n          t['percent'] = 833;\\n          t['ampersand'] = 778;\\n          t['quoteright'] = 333;\\n          t['parenleft'] = 333;\\n          t['parenright'] = 333;\\n          t['asterisk'] = 500;\\n          t['plus'] = 675;\\n          t['comma'] = 250;\\n          t['hyphen'] = 333;\\n          t['period'] = 250;\\n          t['slash'] = 278;\\n          t['zero'] = 500;\\n          t['one'] = 500;\\n          t['two'] = 500;\\n          t['three'] = 500;\\n          t['four'] = 500;\\n          t['five'] = 500;\\n          t['six'] = 500;\\n          t['seven'] = 500;\\n          t['eight'] = 500;\\n          t['nine'] = 500;\\n          t['colon'] = 333;\\n          t['semicolon'] = 333;\\n          t['less'] = 675;\\n          t['equal'] = 675;\\n          t['greater'] = 675;\\n          t['question'] = 500;\\n          t['at'] = 920;\\n          t['A'] = 611;\\n          t['B'] = 611;\\n          t['C'] = 667;\\n          t['D'] = 722;\\n          t['E'] = 611;\\n          t['F'] = 611;\\n          t['G'] = 722;\\n          t['H'] = 722;\\n          t['I'] = 333;\\n          t['J'] = 444;\\n          t['K'] = 667;\\n          t['L'] = 556;\\n          t['M'] = 833;\\n          t['N'] = 667;\\n          t['O'] = 722;\\n          t['P'] = 611;\\n          t['Q'] = 722;\\n          t['R'] = 611;\\n          t['S'] = 500;\\n          t['T'] = 556;\\n          t['U'] = 722;\\n          t['V'] = 611;\\n          t['W'] = 833;\\n          t['X'] = 611;\\n          t['Y'] = 556;\\n          t['Z'] = 556;\\n          t['bracketleft'] = 389;\\n          t['backslash'] = 278;\\n          t['bracketright'] = 389;\\n          t['asciicircum'] = 422;\\n          t['underscore'] = 500;\\n          t['quoteleft'] = 333;\\n          t['a'] = 500;\\n          t['b'] = 500;\\n          t['c'] = 444;\\n          t['d'] = 500;\\n          t['e'] = 444;\\n          t['f'] = 278;\\n          t['g'] = 500;\\n          t['h'] = 500;\\n          t['i'] = 278;\\n          t['j'] = 278;\\n          t['k'] = 444;\\n          t['l'] = 278;\\n          t['m'] = 722;\\n          t['n'] = 500;\\n          t['o'] = 500;\\n          t['p'] = 500;\\n          t['q'] = 500;\\n          t['r'] = 389;\\n          t['s'] = 389;\\n          t['t'] = 278;\\n          t['u'] = 500;\\n          t['v'] = 444;\\n          t['w'] = 667;\\n          t['x'] = 444;\\n          t['y'] = 444;\\n          t['z'] = 389;\\n          t['braceleft'] = 400;\\n          t['bar'] = 275;\\n          t['braceright'] = 400;\\n          t['asciitilde'] = 541;\\n          t['exclamdown'] = 389;\\n          t['cent'] = 500;\\n          t['sterling'] = 500;\\n          t['fraction'] = 167;\\n          t['yen'] = 500;\\n          t['florin'] = 500;\\n          t['section'] = 500;\\n          t['currency'] = 500;\\n          t['quotesingle'] = 214;\\n          t['quotedblleft'] = 556;\\n          t['guillemotleft'] = 500;\\n          t['guilsinglleft'] = 333;\\n          t['guilsinglright'] = 333;\\n          t['fi'] = 500;\\n          t['fl'] = 500;\\n          t['endash'] = 500;\\n          t['dagger'] = 500;\\n          t['daggerdbl'] = 500;\\n          t['periodcentered'] = 250;\\n          t['paragraph'] = 523;\\n          t['bullet'] = 350;\\n          t['quotesinglbase'] = 333;\\n          t['quotedblbase'] = 556;\\n          t['quotedblright'] = 556;\\n          t['guillemotright'] = 500;\\n          t['ellipsis'] = 889;\\n          t['perthousand'] = 1000;\\n          t['questiondown'] = 500;\\n          t['grave'] = 333;\\n          t['acute'] = 333;\\n          t['circumflex'] = 333;\\n          t['tilde'] = 333;\\n          t['macron'] = 333;\\n          t['breve'] = 333;\\n          t['dotaccent'] = 333;\\n          t['dieresis'] = 333;\\n          t['ring'] = 333;\\n          t['cedilla'] = 333;\\n          t['hungarumlaut'] = 333;\\n          t['ogonek'] = 333;\\n          t['caron'] = 333;\\n          t['emdash'] = 889;\\n          t['AE'] = 889;\\n          t['ordfeminine'] = 276;\\n          t['Lslash'] = 556;\\n          t['Oslash'] = 722;\\n          t['OE'] = 944;\\n          t['ordmasculine'] = 310;\\n          t['ae'] = 667;\\n          t['dotlessi'] = 278;\\n          t['lslash'] = 278;\\n          t['oslash'] = 500;\\n          t['oe'] = 667;\\n          t['germandbls'] = 500;\\n          t['Idieresis'] = 333;\\n          t['eacute'] = 444;\\n          t['abreve'] = 500;\\n          t['uhungarumlaut'] = 500;\\n          t['ecaron'] = 444;\\n          t['Ydieresis'] = 556;\\n          t['divide'] = 675;\\n          t['Yacute'] = 556;\\n          t['Acircumflex'] = 611;\\n          t['aacute'] = 500;\\n          t['Ucircumflex'] = 722;\\n          t['yacute'] = 444;\\n          t['scommaaccent'] = 389;\\n          t['ecircumflex'] = 444;\\n          t['Uring'] = 722;\\n          t['Udieresis'] = 722;\\n          t['aogonek'] = 500;\\n          t['Uacute'] = 722;\\n          t['uogonek'] = 500;\\n          t['Edieresis'] = 611;\\n          t['Dcroat'] = 722;\\n          t['commaaccent'] = 250;\\n          t['copyright'] = 760;\\n          t['Emacron'] = 611;\\n          t['ccaron'] = 444;\\n          t['aring'] = 500;\\n          t['Ncommaaccent'] = 667;\\n          t['lacute'] = 278;\\n          t['agrave'] = 500;\\n          t['Tcommaaccent'] = 556;\\n          t['Cacute'] = 667;\\n          t['atilde'] = 500;\\n          t['Edotaccent'] = 611;\\n          t['scaron'] = 389;\\n          t['scedilla'] = 389;\\n          t['iacute'] = 278;\\n          t['lozenge'] = 471;\\n          t['Rcaron'] = 611;\\n          t['Gcommaaccent'] = 722;\\n          t['ucircumflex'] = 500;\\n          t['acircumflex'] = 500;\\n          t['Amacron'] = 611;\\n          t['rcaron'] = 389;\\n          t['ccedilla'] = 444;\\n          t['Zdotaccent'] = 556;\\n          t['Thorn'] = 611;\\n          t['Omacron'] = 722;\\n          t['Racute'] = 611;\\n          t['Sacute'] = 500;\\n          t['dcaron'] = 544;\\n          t['Umacron'] = 722;\\n          t['uring'] = 500;\\n          t['threesuperior'] = 300;\\n          t['Ograve'] = 722;\\n          t['Agrave'] = 611;\\n          t['Abreve'] = 611;\\n          t['multiply'] = 675;\\n          t['uacute'] = 500;\\n          t['Tcaron'] = 556;\\n          t['partialdiff'] = 476;\\n          t['ydieresis'] = 444;\\n          t['Nacute'] = 667;\\n          t['icircumflex'] = 278;\\n          t['Ecircumflex'] = 611;\\n          t['adieresis'] = 500;\\n          t['edieresis'] = 444;\\n          t['cacute'] = 444;\\n          t['nacute'] = 500;\\n          t['umacron'] = 500;\\n          t['Ncaron'] = 667;\\n          t['Iacute'] = 333;\\n          t['plusminus'] = 675;\\n          t['brokenbar'] = 275;\\n          t['registered'] = 760;\\n          t['Gbreve'] = 722;\\n          t['Idotaccent'] = 333;\\n          t['summation'] = 600;\\n          t['Egrave'] = 611;\\n          t['racute'] = 389;\\n          t['omacron'] = 500;\\n          t['Zacute'] = 556;\\n          t['Zcaron'] = 556;\\n          t['greaterequal'] = 549;\\n          t['Eth'] = 722;\\n          t['Ccedilla'] = 667;\\n          t['lcommaaccent'] = 278;\\n          t['tcaron'] = 300;\\n          t['eogonek'] = 444;\\n          t['Uogonek'] = 722;\\n          t['Aacute'] = 611;\\n          t['Adieresis'] = 611;\\n          t['egrave'] = 444;\\n          t['zacute'] = 389;\\n          t['iogonek'] = 278;\\n          t['Oacute'] = 722;\\n          t['oacute'] = 500;\\n          t['amacron'] = 500;\\n          t['sacute'] = 389;\\n          t['idieresis'] = 278;\\n          t['Ocircumflex'] = 722;\\n          t['Ugrave'] = 722;\\n          t['Delta'] = 612;\\n          t['thorn'] = 500;\\n          t['twosuperior'] = 300;\\n          t['Odieresis'] = 722;\\n          t['mu'] = 500;\\n          t['igrave'] = 278;\\n          t['ohungarumlaut'] = 500;\\n          t['Eogonek'] = 611;\\n          t['dcroat'] = 500;\\n          t['threequarters'] = 750;\\n          t['Scedilla'] = 500;\\n          t['lcaron'] = 300;\\n          t['Kcommaaccent'] = 667;\\n          t['Lacute'] = 556;\\n          t['trademark'] = 980;\\n          t['edotaccent'] = 444;\\n          t['Igrave'] = 333;\\n          t['Imacron'] = 333;\\n          t['Lcaron'] = 611;\\n          t['onehalf'] = 750;\\n          t['lessequal'] = 549;\\n          t['ocircumflex'] = 500;\\n          t['ntilde'] = 500;\\n          t['Uhungarumlaut'] = 722;\\n          t['Eacute'] = 611;\\n          t['emacron'] = 444;\\n          t['gbreve'] = 500;\\n          t['onequarter'] = 750;\\n          t['Scaron'] = 500;\\n          t['Scommaaccent'] = 500;\\n          t['Ohungarumlaut'] = 722;\\n          t['degree'] = 400;\\n          t['ograve'] = 500;\\n          t['Ccaron'] = 667;\\n          t['ugrave'] = 500;\\n          t['radical'] = 453;\\n          t['Dcaron'] = 722;\\n          t['rcommaaccent'] = 389;\\n          t['Ntilde'] = 667;\\n          t['otilde'] = 500;\\n          t['Rcommaaccent'] = 611;\\n          t['Lcommaaccent'] = 556;\\n          t['Atilde'] = 611;\\n          t['Aogonek'] = 611;\\n          t['Aring'] = 611;\\n          t['Otilde'] = 722;\\n          t['zdotaccent'] = 389;\\n          t['Ecaron'] = 611;\\n          t['Iogonek'] = 333;\\n          t['kcommaaccent'] = 444;\\n          t['minus'] = 675;\\n          t['Icircumflex'] = 333;\\n          t['ncaron'] = 500;\\n          t['tcommaaccent'] = 278;\\n          t['logicalnot'] = 675;\\n          t['odieresis'] = 500;\\n          t['udieresis'] = 500;\\n          t['notequal'] = 549;\\n          t['gcommaaccent'] = 500;\\n          t['eth'] = 500;\\n          t['zcaron'] = 389;\\n          t['ncommaaccent'] = 500;\\n          t['onesuperior'] = 300;\\n          t['imacron'] = 278;\\n          t['Euro'] = 500;\\n        });\\n        t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\\n          t['space'] = 278;\\n          t['a1'] = 974;\\n          t['a2'] = 961;\\n          t['a202'] = 974;\\n          t['a3'] = 980;\\n          t['a4'] = 719;\\n          t['a5'] = 789;\\n          t['a119'] = 790;\\n          t['a118'] = 791;\\n          t['a117'] = 690;\\n          t['a11'] = 960;\\n          t['a12'] = 939;\\n          t['a13'] = 549;\\n          t['a14'] = 855;\\n          t['a15'] = 911;\\n          t['a16'] = 933;\\n          t['a105'] = 911;\\n          t['a17'] = 945;\\n          t['a18'] = 974;\\n          t['a19'] = 755;\\n          t['a20'] = 846;\\n          t['a21'] = 762;\\n          t['a22'] = 761;\\n          t['a23'] = 571;\\n          t['a24'] = 677;\\n          t['a25'] = 763;\\n          t['a26'] = 760;\\n          t['a27'] = 759;\\n          t['a28'] = 754;\\n          t['a6'] = 494;\\n          t['a7'] = 552;\\n          t['a8'] = 537;\\n          t['a9'] = 577;\\n          t['a10'] = 692;\\n          t['a29'] = 786;\\n          t['a30'] = 788;\\n          t['a31'] = 788;\\n          t['a32'] = 790;\\n          t['a33'] = 793;\\n          t['a34'] = 794;\\n          t['a35'] = 816;\\n          t['a36'] = 823;\\n          t['a37'] = 789;\\n          t['a38'] = 841;\\n          t['a39'] = 823;\\n          t['a40'] = 833;\\n          t['a41'] = 816;\\n          t['a42'] = 831;\\n          t['a43'] = 923;\\n          t['a44'] = 744;\\n          t['a45'] = 723;\\n          t['a46'] = 749;\\n          t['a47'] = 790;\\n          t['a48'] = 792;\\n          t['a49'] = 695;\\n          t['a50'] = 776;\\n          t['a51'] = 768;\\n          t['a52'] = 792;\\n          t['a53'] = 759;\\n          t['a54'] = 707;\\n          t['a55'] = 708;\\n          t['a56'] = 682;\\n          t['a57'] = 701;\\n          t['a58'] = 826;\\n          t['a59'] = 815;\\n          t['a60'] = 789;\\n          t['a61'] = 789;\\n          t['a62'] = 707;\\n          t['a63'] = 687;\\n          t['a64'] = 696;\\n          t['a65'] = 689;\\n          t['a66'] = 786;\\n          t['a67'] = 787;\\n          t['a68'] = 713;\\n          t['a69'] = 791;\\n          t['a70'] = 785;\\n          t['a71'] = 791;\\n          t['a72'] = 873;\\n          t['a73'] = 761;\\n          t['a74'] = 762;\\n          t['a203'] = 762;\\n          t['a75'] = 759;\\n          t['a204'] = 759;\\n          t['a76'] = 892;\\n          t['a77'] = 892;\\n          t['a78'] = 788;\\n          t['a79'] = 784;\\n          t['a81'] = 438;\\n          t['a82'] = 138;\\n          t['a83'] = 277;\\n          t['a84'] = 415;\\n          t['a97'] = 392;\\n          t['a98'] = 392;\\n          t['a99'] = 668;\\n          t['a100'] = 668;\\n          t['a89'] = 390;\\n          t['a90'] = 390;\\n          t['a93'] = 317;\\n          t['a94'] = 317;\\n          t['a91'] = 276;\\n          t['a92'] = 276;\\n          t['a205'] = 509;\\n          t['a85'] = 509;\\n          t['a206'] = 410;\\n          t['a86'] = 410;\\n          t['a87'] = 234;\\n          t['a88'] = 234;\\n          t['a95'] = 334;\\n          t['a96'] = 334;\\n          t['a101'] = 732;\\n          t['a102'] = 544;\\n          t['a103'] = 544;\\n          t['a104'] = 910;\\n          t['a106'] = 667;\\n          t['a107'] = 760;\\n          t['a108'] = 760;\\n          t['a112'] = 776;\\n          t['a111'] = 595;\\n          t['a110'] = 694;\\n          t['a109'] = 626;\\n          t['a120'] = 788;\\n          t['a121'] = 788;\\n          t['a122'] = 788;\\n          t['a123'] = 788;\\n          t['a124'] = 788;\\n          t['a125'] = 788;\\n          t['a126'] = 788;\\n          t['a127'] = 788;\\n          t['a128'] = 788;\\n          t['a129'] = 788;\\n          t['a130'] = 788;\\n          t['a131'] = 788;\\n          t['a132'] = 788;\\n          t['a133'] = 788;\\n          t['a134'] = 788;\\n          t['a135'] = 788;\\n          t['a136'] = 788;\\n          t['a137'] = 788;\\n          t['a138'] = 788;\\n          t['a139'] = 788;\\n          t['a140'] = 788;\\n          t['a141'] = 788;\\n          t['a142'] = 788;\\n          t['a143'] = 788;\\n          t['a144'] = 788;\\n          t['a145'] = 788;\\n          t['a146'] = 788;\\n          t['a147'] = 788;\\n          t['a148'] = 788;\\n          t['a149'] = 788;\\n          t['a150'] = 788;\\n          t['a151'] = 788;\\n          t['a152'] = 788;\\n          t['a153'] = 788;\\n          t['a154'] = 788;\\n          t['a155'] = 788;\\n          t['a156'] = 788;\\n          t['a157'] = 788;\\n          t['a158'] = 788;\\n          t['a159'] = 788;\\n          t['a160'] = 894;\\n          t['a161'] = 838;\\n          t['a163'] = 1016;\\n          t['a164'] = 458;\\n          t['a196'] = 748;\\n          t['a165'] = 924;\\n          t['a192'] = 748;\\n          t['a166'] = 918;\\n          t['a167'] = 927;\\n          t['a168'] = 928;\\n          t['a169'] = 928;\\n          t['a170'] = 834;\\n          t['a171'] = 873;\\n          t['a172'] = 828;\\n          t['a173'] = 924;\\n          t['a162'] = 924;\\n          t['a174'] = 917;\\n          t['a175'] = 930;\\n          t['a176'] = 931;\\n          t['a177'] = 463;\\n          t['a178'] = 883;\\n          t['a179'] = 836;\\n          t['a193'] = 836;\\n          t['a180'] = 867;\\n          t['a199'] = 867;\\n          t['a181'] = 696;\\n          t['a200'] = 696;\\n          t['a182'] = 874;\\n          t['a201'] = 874;\\n          t['a183'] = 760;\\n          t['a184'] = 946;\\n          t['a197'] = 771;\\n          t['a185'] = 865;\\n          t['a194'] = 771;\\n          t['a198'] = 888;\\n          t['a186'] = 967;\\n          t['a195'] = 888;\\n          t['a187'] = 831;\\n          t['a188'] = 873;\\n          t['a189'] = 927;\\n          t['a190'] = 970;\\n          t['a191'] = 918;\\n        });\\n      });\\n      exports.getMetrics = getMetrics;\\n      /***/\\n    },\\n    /* 185 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.isPDFFunction = isPDFFunction;\\n      exports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _ps_parser = __w_pdfjs_require__(186);\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var IsEvalSupportedCached = {\\n        get value() {\\n          return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\\n        }\\n\\n      };\\n\\n      var PDFFunctionFactory =\\n      /*#__PURE__*/\\n      function () {\\n        function PDFFunctionFactory(_ref) {\\n          var xref = _ref.xref,\\n              _ref$isEvalSupported = _ref.isEvalSupported,\\n              isEvalSupported = _ref$isEvalSupported === void 0 ? true : _ref$isEvalSupported;\\n\\n          _classCallCheck(this, PDFFunctionFactory);\\n\\n          this.xref = xref;\\n          this.isEvalSupported = isEvalSupported !== false;\\n        }\\n\\n        _createClass(PDFFunctionFactory, [{\\n          key: \\\"create\\\",\\n          value: function create(fn) {\\n            return PDFFunction.parse({\\n              xref: this.xref,\\n              isEvalSupported: this.isEvalSupported,\\n              fn: fn\\n            });\\n          }\\n        }, {\\n          key: \\\"createFromArray\\\",\\n          value: function createFromArray(fnObj) {\\n            return PDFFunction.parseArray({\\n              xref: this.xref,\\n              isEvalSupported: this.isEvalSupported,\\n              fnObj: fnObj\\n            });\\n          }\\n        }]);\\n\\n        return PDFFunctionFactory;\\n      }();\\n\\n      exports.PDFFunctionFactory = PDFFunctionFactory;\\n\\n      function toNumberArray(arr) {\\n        if (!Array.isArray(arr)) {\\n          return null;\\n        }\\n\\n        var length = arr.length;\\n\\n        for (var i = 0; i < length; i++) {\\n          if (typeof arr[i] !== 'number') {\\n            var result = new Array(length);\\n\\n            for (var _i = 0; _i < length; _i++) {\\n              result[_i] = +arr[_i];\\n            }\\n\\n            return result;\\n          }\\n        }\\n\\n        return arr;\\n      }\\n\\n      var PDFFunction = function PDFFunctionClosure() {\\n        var CONSTRUCT_SAMPLED = 0;\\n        var CONSTRUCT_INTERPOLATED = 2;\\n        var CONSTRUCT_STICHED = 3;\\n        var CONSTRUCT_POSTSCRIPT = 4;\\n        return {\\n          getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\\n            var i, ii;\\n            var length = 1;\\n\\n            for (i = 0, ii = size.length; i < ii; i++) {\\n              length *= size[i];\\n            }\\n\\n            length *= outputSize;\\n            var array = new Array(length);\\n            var codeSize = 0;\\n            var codeBuf = 0;\\n            var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\\n            var strBytes = stream.getBytes((length * bps + 7) / 8);\\n            var strIdx = 0;\\n\\n            for (i = 0; i < length; i++) {\\n              while (codeSize < bps) {\\n                codeBuf <<= 8;\\n                codeBuf |= strBytes[strIdx++];\\n                codeSize += 8;\\n              }\\n\\n              codeSize -= bps;\\n              array[i] = (codeBuf >> codeSize) * sampleMul;\\n              codeBuf &= (1 << codeSize) - 1;\\n            }\\n\\n            return array;\\n          },\\n          getIR: function getIR(_ref2) {\\n            var xref = _ref2.xref,\\n                isEvalSupported = _ref2.isEvalSupported,\\n                fn = _ref2.fn;\\n            var dict = fn.dict;\\n\\n            if (!dict) {\\n              dict = fn;\\n            }\\n\\n            var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\\n            var typeNum = dict.get('FunctionType');\\n            var typeFn = types[typeNum];\\n\\n            if (!typeFn) {\\n              throw new _util.FormatError('Unknown type of function');\\n            }\\n\\n            return typeFn.call(this, {\\n              xref: xref,\\n              isEvalSupported: isEvalSupported,\\n              fn: fn,\\n              dict: dict\\n            });\\n          },\\n          fromIR: function fromIR(_ref3) {\\n            var xref = _ref3.xref,\\n                isEvalSupported = _ref3.isEvalSupported,\\n                IR = _ref3.IR;\\n            var type = IR[0];\\n\\n            switch (type) {\\n              case CONSTRUCT_SAMPLED:\\n                return this.constructSampledFromIR({\\n                  xref: xref,\\n                  isEvalSupported: isEvalSupported,\\n                  IR: IR\\n                });\\n\\n              case CONSTRUCT_INTERPOLATED:\\n                return this.constructInterpolatedFromIR({\\n                  xref: xref,\\n                  isEvalSupported: isEvalSupported,\\n                  IR: IR\\n                });\\n\\n              case CONSTRUCT_STICHED:\\n                return this.constructStichedFromIR({\\n                  xref: xref,\\n                  isEvalSupported: isEvalSupported,\\n                  IR: IR\\n                });\\n\\n              default:\\n                return this.constructPostScriptFromIR({\\n                  xref: xref,\\n                  isEvalSupported: isEvalSupported,\\n                  IR: IR\\n                });\\n            }\\n          },\\n          parse: function parse(_ref4) {\\n            var xref = _ref4.xref,\\n                isEvalSupported = _ref4.isEvalSupported,\\n                fn = _ref4.fn;\\n            var IR = this.getIR({\\n              xref: xref,\\n              isEvalSupported: isEvalSupported,\\n              fn: fn\\n            });\\n            return this.fromIR({\\n              xref: xref,\\n              isEvalSupported: isEvalSupported,\\n              IR: IR\\n            });\\n          },\\n          parseArray: function parseArray(_ref5) {\\n            var xref = _ref5.xref,\\n                isEvalSupported = _ref5.isEvalSupported,\\n                fnObj = _ref5.fnObj;\\n\\n            if (!Array.isArray(fnObj)) {\\n              return this.parse({\\n                xref: xref,\\n                isEvalSupported: isEvalSupported,\\n                fn: fnObj\\n              });\\n            }\\n\\n            var fnArray = [];\\n\\n            for (var j = 0, jj = fnObj.length; j < jj; j++) {\\n              fnArray.push(this.parse({\\n                xref: xref,\\n                isEvalSupported: isEvalSupported,\\n                fn: xref.fetchIfRef(fnObj[j])\\n              }));\\n            }\\n\\n            return function (src, srcOffset, dest, destOffset) {\\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\\n                fnArray[i](src, srcOffset, dest, destOffset + i);\\n              }\\n            };\\n          },\\n          constructSampled: function constructSampled(_ref6) {\\n            var xref = _ref6.xref,\\n                isEvalSupported = _ref6.isEvalSupported,\\n                fn = _ref6.fn,\\n                dict = _ref6.dict;\\n\\n            function toMultiArray(arr) {\\n              var inputLength = arr.length;\\n              var out = [];\\n              var index = 0;\\n\\n              for (var i = 0; i < inputLength; i += 2) {\\n                out[index] = [arr[i], arr[i + 1]];\\n                ++index;\\n              }\\n\\n              return out;\\n            }\\n\\n            var domain = toNumberArray(dict.getArray('Domain'));\\n            var range = toNumberArray(dict.getArray('Range'));\\n\\n            if (!domain || !range) {\\n              throw new _util.FormatError('No domain or range');\\n            }\\n\\n            var inputSize = domain.length / 2;\\n            var outputSize = range.length / 2;\\n            domain = toMultiArray(domain);\\n            range = toMultiArray(range);\\n            var size = toNumberArray(dict.getArray('Size'));\\n            var bps = dict.get('BitsPerSample');\\n            var order = dict.get('Order') || 1;\\n\\n            if (order !== 1) {\\n              (0, _util.info)('No support for cubic spline interpolation: ' + order);\\n            }\\n\\n            var encode = toNumberArray(dict.getArray('Encode'));\\n\\n            if (!encode) {\\n              encode = [];\\n\\n              for (var i = 0; i < inputSize; ++i) {\\n                encode.push([0, size[i] - 1]);\\n              }\\n            } else {\\n              encode = toMultiArray(encode);\\n            }\\n\\n            var decode = toNumberArray(dict.getArray('Decode'));\\n\\n            if (!decode) {\\n              decode = range;\\n            } else {\\n              decode = toMultiArray(decode);\\n            }\\n\\n            var samples = this.getSampleArray(size, outputSize, bps, fn);\\n            return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\\n          },\\n          constructSampledFromIR: function constructSampledFromIR(_ref7) {\\n            var xref = _ref7.xref,\\n                isEvalSupported = _ref7.isEvalSupported,\\n                IR = _ref7.IR;\\n\\n            function interpolate(x, xmin, xmax, ymin, ymax) {\\n              return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\\n            }\\n\\n            return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\\n              var m = IR[1];\\n              var domain = IR[2];\\n              var encode = IR[3];\\n              var decode = IR[4];\\n              var samples = IR[5];\\n              var size = IR[6];\\n              var n = IR[7];\\n              var range = IR[9];\\n              var cubeVertices = 1 << m;\\n              var cubeN = new Float64Array(cubeVertices);\\n              var cubeVertex = new Uint32Array(cubeVertices);\\n              var i, j;\\n\\n              for (j = 0; j < cubeVertices; j++) {\\n                cubeN[j] = 1;\\n              }\\n\\n              var k = n,\\n                  pos = 1;\\n\\n              for (i = 0; i < m; ++i) {\\n                var domain_2i = domain[i][0];\\n                var domain_2i_1 = domain[i][1];\\n                var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\\n                var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\\n                var size_i = size[i];\\n                e = Math.min(Math.max(e, 0), size_i - 1);\\n                var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\\n                var n0 = e0 + 1 - e;\\n                var n1 = e - e0;\\n                var offset0 = e0 * k;\\n                var offset1 = offset0 + k;\\n\\n                for (j = 0; j < cubeVertices; j++) {\\n                  if (j & pos) {\\n                    cubeN[j] *= n1;\\n                    cubeVertex[j] += offset1;\\n                  } else {\\n                    cubeN[j] *= n0;\\n                    cubeVertex[j] += offset0;\\n                  }\\n                }\\n\\n                k *= size_i;\\n                pos <<= 1;\\n              }\\n\\n              for (j = 0; j < n; ++j) {\\n                var rj = 0;\\n\\n                for (i = 0; i < cubeVertices; i++) {\\n                  rj += samples[cubeVertex[i] + j] * cubeN[i];\\n                }\\n\\n                rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\\n                dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\\n              }\\n            };\\n          },\\n          constructInterpolated: function constructInterpolated(_ref8) {\\n            var xref = _ref8.xref,\\n                isEvalSupported = _ref8.isEvalSupported,\\n                fn = _ref8.fn,\\n                dict = _ref8.dict;\\n            var c0 = toNumberArray(dict.getArray('C0')) || [0];\\n            var c1 = toNumberArray(dict.getArray('C1')) || [1];\\n            var n = dict.get('N');\\n            var length = c0.length;\\n            var diff = [];\\n\\n            for (var i = 0; i < length; ++i) {\\n              diff.push(c1[i] - c0[i]);\\n            }\\n\\n            return [CONSTRUCT_INTERPOLATED, c0, diff, n];\\n          },\\n          constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\\n            var xref = _ref9.xref,\\n                isEvalSupported = _ref9.isEvalSupported,\\n                IR = _ref9.IR;\\n            var c0 = IR[1];\\n            var diff = IR[2];\\n            var n = IR[3];\\n            var length = diff.length;\\n            return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\\n              var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\\n\\n              for (var j = 0; j < length; ++j) {\\n                dest[destOffset + j] = c0[j] + x * diff[j];\\n              }\\n            };\\n          },\\n          constructStiched: function constructStiched(_ref10) {\\n            var xref = _ref10.xref,\\n                isEvalSupported = _ref10.isEvalSupported,\\n                fn = _ref10.fn,\\n                dict = _ref10.dict;\\n            var domain = toNumberArray(dict.getArray('Domain'));\\n\\n            if (!domain) {\\n              throw new _util.FormatError('No domain');\\n            }\\n\\n            var inputSize = domain.length / 2;\\n\\n            if (inputSize !== 1) {\\n              throw new _util.FormatError('Bad domain for stiched function');\\n            }\\n\\n            var fnRefs = dict.get('Functions');\\n            var fns = [];\\n\\n            for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\\n              fns.push(this.parse({\\n                xref: xref,\\n                isEvalSupported: isEvalSupported,\\n                fn: xref.fetchIfRef(fnRefs[i])\\n              }));\\n            }\\n\\n            var bounds = toNumberArray(dict.getArray('Bounds'));\\n            var encode = toNumberArray(dict.getArray('Encode'));\\n            return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\\n          },\\n          constructStichedFromIR: function constructStichedFromIR(_ref11) {\\n            var xref = _ref11.xref,\\n                isEvalSupported = _ref11.isEvalSupported,\\n                IR = _ref11.IR;\\n            var domain = IR[1];\\n            var bounds = IR[2];\\n            var encode = IR[3];\\n            var fns = IR[4];\\n            var tmpBuf = new Float32Array(1);\\n            return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\\n              var clip = function constructStichedFromIRClip(v, min, max) {\\n                if (v > max) {\\n                  v = max;\\n                } else if (v < min) {\\n                  v = min;\\n                }\\n\\n                return v;\\n              };\\n\\n              var v = clip(src[srcOffset], domain[0], domain[1]);\\n\\n              for (var i = 0, ii = bounds.length; i < ii; ++i) {\\n                if (v < bounds[i]) {\\n                  break;\\n                }\\n              }\\n\\n              var dmin = domain[0];\\n\\n              if (i > 0) {\\n                dmin = bounds[i - 1];\\n              }\\n\\n              var dmax = domain[1];\\n\\n              if (i < bounds.length) {\\n                dmax = bounds[i];\\n              }\\n\\n              var rmin = encode[2 * i];\\n              var rmax = encode[2 * i + 1];\\n              tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\\n              fns[i](tmpBuf, 0, dest, destOffset);\\n            };\\n          },\\n          constructPostScript: function constructPostScript(_ref12) {\\n            var xref = _ref12.xref,\\n                isEvalSupported = _ref12.isEvalSupported,\\n                fn = _ref12.fn,\\n                dict = _ref12.dict;\\n            var domain = toNumberArray(dict.getArray('Domain'));\\n            var range = toNumberArray(dict.getArray('Range'));\\n\\n            if (!domain) {\\n              throw new _util.FormatError('No domain.');\\n            }\\n\\n            if (!range) {\\n              throw new _util.FormatError('No range.');\\n            }\\n\\n            var lexer = new _ps_parser.PostScriptLexer(fn);\\n            var parser = new _ps_parser.PostScriptParser(lexer);\\n            var code = parser.parse();\\n            return [CONSTRUCT_POSTSCRIPT, domain, range, code];\\n          },\\n          constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\\n            var xref = _ref13.xref,\\n                isEvalSupported = _ref13.isEvalSupported,\\n                IR = _ref13.IR;\\n            var domain = IR[1];\\n            var range = IR[2];\\n            var code = IR[3];\\n\\n            if (isEvalSupported && IsEvalSupportedCached.value) {\\n              var compiled = new PostScriptCompiler().compile(code, domain, range);\\n\\n              if (compiled) {\\n                return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\\n              }\\n            }\\n\\n            (0, _util.info)('Unable to compile PS function');\\n            var numOutputs = range.length >> 1;\\n            var numInputs = domain.length >> 1;\\n            var evaluator = new PostScriptEvaluator(code);\\n            var cache = Object.create(null);\\n            var MAX_CACHE_SIZE = 2048 * 4;\\n            var cache_available = MAX_CACHE_SIZE;\\n            var tmpBuf = new Float32Array(numInputs);\\n            return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\\n              var i, value;\\n              var key = '';\\n              var input = tmpBuf;\\n\\n              for (i = 0; i < numInputs; i++) {\\n                value = src[srcOffset + i];\\n                input[i] = value;\\n                key += value + '_';\\n              }\\n\\n              var cachedValue = cache[key];\\n\\n              if (cachedValue !== undefined) {\\n                dest.set(cachedValue, destOffset);\\n                return;\\n              }\\n\\n              var output = new Float32Array(numOutputs);\\n              var stack = evaluator.execute(input);\\n              var stackIndex = stack.length - numOutputs;\\n\\n              for (i = 0; i < numOutputs; i++) {\\n                value = stack[stackIndex + i];\\n                var bound = range[i * 2];\\n\\n                if (value < bound) {\\n                  value = bound;\\n                } else {\\n                  bound = range[i * 2 + 1];\\n\\n                  if (value > bound) {\\n                    value = bound;\\n                  }\\n                }\\n\\n                output[i] = value;\\n              }\\n\\n              if (cache_available > 0) {\\n                cache_available--;\\n                cache[key] = output;\\n              }\\n\\n              dest.set(output, destOffset);\\n            };\\n          }\\n        };\\n      }();\\n\\n      function isPDFFunction(v) {\\n        var fnDict;\\n\\n        if (_typeof(v) !== 'object') {\\n          return false;\\n        } else if ((0, _primitives.isDict)(v)) {\\n          fnDict = v;\\n        } else if ((0, _primitives.isStream)(v)) {\\n          fnDict = v.dict;\\n        } else {\\n          return false;\\n        }\\n\\n        return fnDict.has('FunctionType');\\n      }\\n\\n      var PostScriptStack = function PostScriptStackClosure() {\\n        var MAX_STACK_SIZE = 100;\\n\\n        function PostScriptStack(initialStack) {\\n          this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\\n        }\\n\\n        PostScriptStack.prototype = {\\n          push: function PostScriptStack_push(value) {\\n            if (this.stack.length >= MAX_STACK_SIZE) {\\n              throw new Error('PostScript function stack overflow.');\\n            }\\n\\n            this.stack.push(value);\\n          },\\n          pop: function PostScriptStack_pop() {\\n            if (this.stack.length <= 0) {\\n              throw new Error('PostScript function stack underflow.');\\n            }\\n\\n            return this.stack.pop();\\n          },\\n          copy: function PostScriptStack_copy(n) {\\n            if (this.stack.length + n >= MAX_STACK_SIZE) {\\n              throw new Error('PostScript function stack overflow.');\\n            }\\n\\n            var stack = this.stack;\\n\\n            for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\\n              stack.push(stack[i]);\\n            }\\n          },\\n          index: function PostScriptStack_index(n) {\\n            this.push(this.stack[this.stack.length - n - 1]);\\n          },\\n          roll: function PostScriptStack_roll(n, p) {\\n            var stack = this.stack;\\n            var l = stack.length - n;\\n            var r = stack.length - 1,\\n                c = l + (p - Math.floor(p / n) * n),\\n                i,\\n                j,\\n                t;\\n\\n            for (i = l, j = r; i < j; i++, j--) {\\n              t = stack[i];\\n              stack[i] = stack[j];\\n              stack[j] = t;\\n            }\\n\\n            for (i = l, j = c - 1; i < j; i++, j--) {\\n              t = stack[i];\\n              stack[i] = stack[j];\\n              stack[j] = t;\\n            }\\n\\n            for (i = c, j = r; i < j; i++, j--) {\\n              t = stack[i];\\n              stack[i] = stack[j];\\n              stack[j] = t;\\n            }\\n          }\\n        };\\n        return PostScriptStack;\\n      }();\\n\\n      var PostScriptEvaluator = function PostScriptEvaluatorClosure() {\\n        function PostScriptEvaluator(operators) {\\n          this.operators = operators;\\n        }\\n\\n        PostScriptEvaluator.prototype = {\\n          execute: function PostScriptEvaluator_execute(initialStack) {\\n            var stack = new PostScriptStack(initialStack);\\n            var counter = 0;\\n            var operators = this.operators;\\n            var length = operators.length;\\n            var operator, a, b;\\n\\n            while (counter < length) {\\n              operator = operators[counter++];\\n\\n              if (typeof operator === 'number') {\\n                stack.push(operator);\\n                continue;\\n              }\\n\\n              switch (operator) {\\n                case 'jz':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n\\n                  if (!a) {\\n                    counter = b;\\n                  }\\n\\n                  break;\\n\\n                case 'j':\\n                  a = stack.pop();\\n                  counter = a;\\n                  break;\\n\\n                case 'abs':\\n                  a = stack.pop();\\n                  stack.push(Math.abs(a));\\n                  break;\\n\\n                case 'add':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a + b);\\n                  break;\\n\\n                case 'and':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n\\n                  if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n                    stack.push(a && b);\\n                  } else {\\n                    stack.push(a & b);\\n                  }\\n\\n                  break;\\n\\n                case 'atan':\\n                  a = stack.pop();\\n                  stack.push(Math.atan(a));\\n                  break;\\n\\n                case 'bitshift':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n\\n                  if (a > 0) {\\n                    stack.push(a << b);\\n                  } else {\\n                    stack.push(a >> b);\\n                  }\\n\\n                  break;\\n\\n                case 'ceiling':\\n                  a = stack.pop();\\n                  stack.push(Math.ceil(a));\\n                  break;\\n\\n                case 'copy':\\n                  a = stack.pop();\\n                  stack.copy(a);\\n                  break;\\n\\n                case 'cos':\\n                  a = stack.pop();\\n                  stack.push(Math.cos(a));\\n                  break;\\n\\n                case 'cvi':\\n                  a = stack.pop() | 0;\\n                  stack.push(a);\\n                  break;\\n\\n                case 'cvr':\\n                  break;\\n\\n                case 'div':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a / b);\\n                  break;\\n\\n                case 'dup':\\n                  stack.copy(1);\\n                  break;\\n\\n                case 'eq':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a === b);\\n                  break;\\n\\n                case 'exch':\\n                  stack.roll(2, 1);\\n                  break;\\n\\n                case 'exp':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(Math.pow(a, b));\\n                  break;\\n\\n                case 'false':\\n                  stack.push(false);\\n                  break;\\n\\n                case 'floor':\\n                  a = stack.pop();\\n                  stack.push(Math.floor(a));\\n                  break;\\n\\n                case 'ge':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a >= b);\\n                  break;\\n\\n                case 'gt':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a > b);\\n                  break;\\n\\n                case 'idiv':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a / b | 0);\\n                  break;\\n\\n                case 'index':\\n                  a = stack.pop();\\n                  stack.index(a);\\n                  break;\\n\\n                case 'le':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a <= b);\\n                  break;\\n\\n                case 'ln':\\n                  a = stack.pop();\\n                  stack.push(Math.log(a));\\n                  break;\\n\\n                case 'log':\\n                  a = stack.pop();\\n                  stack.push(Math.log(a) / Math.LN10);\\n                  break;\\n\\n                case 'lt':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a < b);\\n                  break;\\n\\n                case 'mod':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a % b);\\n                  break;\\n\\n                case 'mul':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a * b);\\n                  break;\\n\\n                case 'ne':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a !== b);\\n                  break;\\n\\n                case 'neg':\\n                  a = stack.pop();\\n                  stack.push(-a);\\n                  break;\\n\\n                case 'not':\\n                  a = stack.pop();\\n\\n                  if ((0, _util.isBool)(a)) {\\n                    stack.push(!a);\\n                  } else {\\n                    stack.push(~a);\\n                  }\\n\\n                  break;\\n\\n                case 'or':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n\\n                  if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n                    stack.push(a || b);\\n                  } else {\\n                    stack.push(a | b);\\n                  }\\n\\n                  break;\\n\\n                case 'pop':\\n                  stack.pop();\\n                  break;\\n\\n                case 'roll':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.roll(a, b);\\n                  break;\\n\\n                case 'round':\\n                  a = stack.pop();\\n                  stack.push(Math.round(a));\\n                  break;\\n\\n                case 'sin':\\n                  a = stack.pop();\\n                  stack.push(Math.sin(a));\\n                  break;\\n\\n                case 'sqrt':\\n                  a = stack.pop();\\n                  stack.push(Math.sqrt(a));\\n                  break;\\n\\n                case 'sub':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n                  stack.push(a - b);\\n                  break;\\n\\n                case 'true':\\n                  stack.push(true);\\n                  break;\\n\\n                case 'truncate':\\n                  a = stack.pop();\\n                  a = a < 0 ? Math.ceil(a) : Math.floor(a);\\n                  stack.push(a);\\n                  break;\\n\\n                case 'xor':\\n                  b = stack.pop();\\n                  a = stack.pop();\\n\\n                  if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\n                    stack.push(a !== b);\\n                  } else {\\n                    stack.push(a ^ b);\\n                  }\\n\\n                  break;\\n\\n                default:\\n                  throw new _util.FormatError(\\\"Unknown operator \\\".concat(operator));\\n              }\\n            }\\n\\n            return stack.stack;\\n          }\\n        };\\n        return PostScriptEvaluator;\\n      }();\\n\\n      exports.PostScriptEvaluator = PostScriptEvaluator;\\n\\n      var PostScriptCompiler = function PostScriptCompilerClosure() {\\n        function AstNode(type) {\\n          this.type = type;\\n        }\\n\\n        AstNode.prototype.visit = function (visitor) {\\n          (0, _util.unreachable)('abstract method');\\n        };\\n\\n        function AstArgument(index, min, max) {\\n          AstNode.call(this, 'args');\\n          this.index = index;\\n          this.min = min;\\n          this.max = max;\\n        }\\n\\n        AstArgument.prototype = Object.create(AstNode.prototype);\\n\\n        AstArgument.prototype.visit = function (visitor) {\\n          visitor.visitArgument(this);\\n        };\\n\\n        function AstLiteral(number) {\\n          AstNode.call(this, 'literal');\\n          this.number = number;\\n          this.min = number;\\n          this.max = number;\\n        }\\n\\n        AstLiteral.prototype = Object.create(AstNode.prototype);\\n\\n        AstLiteral.prototype.visit = function (visitor) {\\n          visitor.visitLiteral(this);\\n        };\\n\\n        function AstBinaryOperation(op, arg1, arg2, min, max) {\\n          AstNode.call(this, 'binary');\\n          this.op = op;\\n          this.arg1 = arg1;\\n          this.arg2 = arg2;\\n          this.min = min;\\n          this.max = max;\\n        }\\n\\n        AstBinaryOperation.prototype = Object.create(AstNode.prototype);\\n\\n        AstBinaryOperation.prototype.visit = function (visitor) {\\n          visitor.visitBinaryOperation(this);\\n        };\\n\\n        function AstMin(arg, max) {\\n          AstNode.call(this, 'max');\\n          this.arg = arg;\\n          this.min = arg.min;\\n          this.max = max;\\n        }\\n\\n        AstMin.prototype = Object.create(AstNode.prototype);\\n\\n        AstMin.prototype.visit = function (visitor) {\\n          visitor.visitMin(this);\\n        };\\n\\n        function AstVariable(index, min, max) {\\n          AstNode.call(this, 'var');\\n          this.index = index;\\n          this.min = min;\\n          this.max = max;\\n        }\\n\\n        AstVariable.prototype = Object.create(AstNode.prototype);\\n\\n        AstVariable.prototype.visit = function (visitor) {\\n          visitor.visitVariable(this);\\n        };\\n\\n        function AstVariableDefinition(variable, arg) {\\n          AstNode.call(this, 'definition');\\n          this.variable = variable;\\n          this.arg = arg;\\n        }\\n\\n        AstVariableDefinition.prototype = Object.create(AstNode.prototype);\\n\\n        AstVariableDefinition.prototype.visit = function (visitor) {\\n          visitor.visitVariableDefinition(this);\\n        };\\n\\n        function ExpressionBuilderVisitor() {\\n          this.parts = [];\\n        }\\n\\n        ExpressionBuilderVisitor.prototype = {\\n          visitArgument: function visitArgument(arg) {\\n            this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\\n          },\\n          visitVariable: function visitVariable(variable) {\\n            this.parts.push('v', variable.index);\\n          },\\n          visitLiteral: function visitLiteral(literal) {\\n            this.parts.push(literal.number);\\n          },\\n          visitBinaryOperation: function visitBinaryOperation(operation) {\\n            this.parts.push('(');\\n            operation.arg1.visit(this);\\n            this.parts.push(' ', operation.op, ' ');\\n            operation.arg2.visit(this);\\n            this.parts.push(')');\\n          },\\n          visitVariableDefinition: function visitVariableDefinition(definition) {\\n            this.parts.push('var ');\\n            definition.variable.visit(this);\\n            this.parts.push(' = ');\\n            definition.arg.visit(this);\\n            this.parts.push(';');\\n          },\\n          visitMin: function visitMin(max) {\\n            this.parts.push('Math.min(');\\n            max.arg.visit(this);\\n            this.parts.push(', ', max.max, ')');\\n          },\\n          toString: function toString() {\\n            return this.parts.join('');\\n          }\\n        };\\n\\n        function buildAddOperation(num1, num2) {\\n          if (num2.type === 'literal' && num2.number === 0) {\\n            return num1;\\n          }\\n\\n          if (num1.type === 'literal' && num1.number === 0) {\\n            return num2;\\n          }\\n\\n          if (num2.type === 'literal' && num1.type === 'literal') {\\n            return new AstLiteral(num1.number + num2.number);\\n          }\\n\\n          return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\\n        }\\n\\n        function buildMulOperation(num1, num2) {\\n          if (num2.type === 'literal') {\\n            if (num2.number === 0) {\\n              return new AstLiteral(0);\\n            } else if (num2.number === 1) {\\n              return num1;\\n            } else if (num1.type === 'literal') {\\n              return new AstLiteral(num1.number * num2.number);\\n            }\\n          }\\n\\n          if (num1.type === 'literal') {\\n            if (num1.number === 0) {\\n              return new AstLiteral(0);\\n            } else if (num1.number === 1) {\\n              return num2;\\n            }\\n          }\\n\\n          var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\\n          var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\\n          return new AstBinaryOperation('*', num1, num2, min, max);\\n        }\\n\\n        function buildSubOperation(num1, num2) {\\n          if (num2.type === 'literal') {\\n            if (num2.number === 0) {\\n              return num1;\\n            } else if (num1.type === 'literal') {\\n              return new AstLiteral(num1.number - num2.number);\\n            }\\n          }\\n\\n          if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\\n            return num2.arg2;\\n          }\\n\\n          return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\\n        }\\n\\n        function buildMinOperation(num1, max) {\\n          if (num1.min >= max) {\\n            return new AstLiteral(max);\\n          } else if (num1.max <= max) {\\n            return num1;\\n          }\\n\\n          return new AstMin(num1, max);\\n        }\\n\\n        function PostScriptCompiler() {}\\n\\n        PostScriptCompiler.prototype = {\\n          compile: function PostScriptCompiler_compile(code, domain, range) {\\n            var stack = [];\\n            var i, ii;\\n            var instructions = [];\\n            var inputSize = domain.length >> 1,\\n                outputSize = range.length >> 1;\\n            var lastRegister = 0;\\n            var n, j;\\n            var num1, num2, ast1, ast2, tmpVar, item;\\n\\n            for (i = 0; i < inputSize; i++) {\\n              stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\\n            }\\n\\n            for (i = 0, ii = code.length; i < ii; i++) {\\n              item = code[i];\\n\\n              if (typeof item === 'number') {\\n                stack.push(new AstLiteral(item));\\n                continue;\\n              }\\n\\n              switch (item) {\\n                case 'add':\\n                  if (stack.length < 2) {\\n                    return null;\\n                  }\\n\\n                  num2 = stack.pop();\\n                  num1 = stack.pop();\\n                  stack.push(buildAddOperation(num1, num2));\\n                  break;\\n\\n                case 'cvr':\\n                  if (stack.length < 1) {\\n                    return null;\\n                  }\\n\\n                  break;\\n\\n                case 'mul':\\n                  if (stack.length < 2) {\\n                    return null;\\n                  }\\n\\n                  num2 = stack.pop();\\n                  num1 = stack.pop();\\n                  stack.push(buildMulOperation(num1, num2));\\n                  break;\\n\\n                case 'sub':\\n                  if (stack.length < 2) {\\n                    return null;\\n                  }\\n\\n                  num2 = stack.pop();\\n                  num1 = stack.pop();\\n                  stack.push(buildSubOperation(num1, num2));\\n                  break;\\n\\n                case 'exch':\\n                  if (stack.length < 2) {\\n                    return null;\\n                  }\\n\\n                  ast1 = stack.pop();\\n                  ast2 = stack.pop();\\n                  stack.push(ast1, ast2);\\n                  break;\\n\\n                case 'pop':\\n                  if (stack.length < 1) {\\n                    return null;\\n                  }\\n\\n                  stack.pop();\\n                  break;\\n\\n                case 'index':\\n                  if (stack.length < 1) {\\n                    return null;\\n                  }\\n\\n                  num1 = stack.pop();\\n\\n                  if (num1.type !== 'literal') {\\n                    return null;\\n                  }\\n\\n                  n = num1.number;\\n\\n                  if (n < 0 || !Number.isInteger(n) || stack.length < n) {\\n                    return null;\\n                  }\\n\\n                  ast1 = stack[stack.length - n - 1];\\n\\n                  if (ast1.type === 'literal' || ast1.type === 'var') {\\n                    stack.push(ast1);\\n                    break;\\n                  }\\n\\n                  tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\\n                  stack[stack.length - n - 1] = tmpVar;\\n                  stack.push(tmpVar);\\n                  instructions.push(new AstVariableDefinition(tmpVar, ast1));\\n                  break;\\n\\n                case 'dup':\\n                  if (stack.length < 1) {\\n                    return null;\\n                  }\\n\\n                  if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\\n                    num1 = stack.pop();\\n                    stack.push(buildMinOperation(num1, code[i + 1]));\\n                    i += 6;\\n                    break;\\n                  }\\n\\n                  ast1 = stack[stack.length - 1];\\n\\n                  if (ast1.type === 'literal' || ast1.type === 'var') {\\n                    stack.push(ast1);\\n                    break;\\n                  }\\n\\n                  tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\\n                  stack[stack.length - 1] = tmpVar;\\n                  stack.push(tmpVar);\\n                  instructions.push(new AstVariableDefinition(tmpVar, ast1));\\n                  break;\\n\\n                case 'roll':\\n                  if (stack.length < 2) {\\n                    return null;\\n                  }\\n\\n                  num2 = stack.pop();\\n                  num1 = stack.pop();\\n\\n                  if (num2.type !== 'literal' || num1.type !== 'literal') {\\n                    return null;\\n                  }\\n\\n                  j = num2.number;\\n                  n = num1.number;\\n\\n                  if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\\n                    return null;\\n                  }\\n\\n                  j = (j % n + n) % n;\\n\\n                  if (j === 0) {\\n                    break;\\n                  }\\n\\n                  Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\\n                  break;\\n\\n                default:\\n                  return null;\\n              }\\n            }\\n\\n            if (stack.length !== outputSize) {\\n              return null;\\n            }\\n\\n            var result = [];\\n            instructions.forEach(function (instruction) {\\n              var statementBuilder = new ExpressionBuilderVisitor();\\n              instruction.visit(statementBuilder);\\n              result.push(statementBuilder.toString());\\n            });\\n            stack.forEach(function (expr, i) {\\n              var statementBuilder = new ExpressionBuilderVisitor();\\n              expr.visit(statementBuilder);\\n              var min = range[i * 2],\\n                  max = range[i * 2 + 1];\\n              var out = [statementBuilder.toString()];\\n\\n              if (min > expr.min) {\\n                out.unshift('Math.max(', min, ', ');\\n                out.push(')');\\n              }\\n\\n              if (max < expr.max) {\\n                out.unshift('Math.min(', max, ', ');\\n                out.push(')');\\n              }\\n\\n              out.unshift('dest[destOffset + ', i, '] = ');\\n              out.push(';');\\n              result.push(out.join(''));\\n            });\\n            return result.join('\\\\n');\\n          }\\n        };\\n        return PostScriptCompiler;\\n      }();\\n\\n      exports.PostScriptCompiler = PostScriptCompiler;\\n      /***/\\n    },\\n    /* 186 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.PostScriptParser = exports.PostScriptLexer = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n          throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n      }\\n\\n      function _defineProperties(target, props) {\\n        for (var i = 0; i < props.length; i++) {\\n          var descriptor = props[i];\\n          descriptor.enumerable = descriptor.enumerable || false;\\n          descriptor.configurable = true;\\n          if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n          Object.defineProperty(target, descriptor.key, descriptor);\\n        }\\n      }\\n\\n      function _createClass(Constructor, protoProps, staticProps) {\\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n        if (staticProps) _defineProperties(Constructor, staticProps);\\n        return Constructor;\\n      }\\n\\n      var PostScriptParser =\\n      /*#__PURE__*/\\n      function () {\\n        function PostScriptParser(lexer) {\\n          _classCallCheck(this, PostScriptParser);\\n\\n          this.lexer = lexer;\\n          this.operators = [];\\n          this.token = null;\\n          this.prev = null;\\n        }\\n\\n        _createClass(PostScriptParser, [{\\n          key: \\\"nextToken\\\",\\n          value: function nextToken() {\\n            this.prev = this.token;\\n            this.token = this.lexer.getToken();\\n          }\\n        }, {\\n          key: \\\"accept\\\",\\n          value: function accept(type) {\\n            if (this.token.type === type) {\\n              this.nextToken();\\n              return true;\\n            }\\n\\n            return false;\\n          }\\n        }, {\\n          key: \\\"expect\\\",\\n          value: function expect(type) {\\n            if (this.accept(type)) {\\n              return true;\\n            }\\n\\n            throw new _util.FormatError(\\\"Unexpected symbol: found \\\".concat(this.token.type, \\\" expected \\\").concat(type, \\\".\\\"));\\n          }\\n        }, {\\n          key: \\\"parse\\\",\\n          value: function parse() {\\n            this.nextToken();\\n            this.expect(PostScriptTokenTypes.LBRACE);\\n            this.parseBlock();\\n            this.expect(PostScriptTokenTypes.RBRACE);\\n            return this.operators;\\n          }\\n        }, {\\n          key: \\\"parseBlock\\\",\\n          value: function parseBlock() {\\n            while (true) {\\n              if (this.accept(PostScriptTokenTypes.NUMBER)) {\\n                this.operators.push(this.prev.value);\\n              } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\\n                this.operators.push(this.prev.value);\\n              } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\\n                this.parseCondition();\\n              } else {\\n                return;\\n              }\\n            }\\n          }\\n        }, {\\n          key: \\\"parseCondition\\\",\\n          value: function parseCondition() {\\n            var conditionLocation = this.operators.length;\\n            this.operators.push(null, null);\\n            this.parseBlock();\\n            this.expect(PostScriptTokenTypes.RBRACE);\\n\\n            if (this.accept(PostScriptTokenTypes.IF)) {\\n              this.operators[conditionLocation] = this.operators.length;\\n              this.operators[conditionLocation + 1] = 'jz';\\n            } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\\n              var jumpLocation = this.operators.length;\\n              this.operators.push(null, null);\\n              var endOfTrue = this.operators.length;\\n              this.parseBlock();\\n              this.expect(PostScriptTokenTypes.RBRACE);\\n              this.expect(PostScriptTokenTypes.IFELSE);\\n              this.operators[jumpLocation] = this.operators.length;\\n              this.operators[jumpLocation + 1] = 'j';\\n              this.operators[conditionLocation] = endOfTrue;\\n              this.operators[conditionLocation + 1] = 'jz';\\n            } else {\\n              throw new _util.FormatError('PS Function: error parsing conditional.');\\n            }\\n          }\\n        }]);\\n\\n        return PostScriptParser;\\n      }();\\n\\n      exports.PostScriptParser = PostScriptParser;\\n      var PostScriptTokenTypes = {\\n        LBRACE: 0,\\n        RBRACE: 1,\\n        NUMBER: 2,\\n        OPERATOR: 3,\\n        IF: 4,\\n        IFELSE: 5\\n      };\\n\\n      var PostScriptToken = function PostScriptTokenClosure() {\\n        var opCache = Object.create(null);\\n\\n        var PostScriptToken =\\n        /*#__PURE__*/\\n        function () {\\n          function PostScriptToken(type, value) {\\n            _classCallCheck(this, PostScriptToken);\\n\\n            this.type = type;\\n            this.value = value;\\n          }\\n\\n          _createClass(PostScriptToken, null, [{\\n            key: \\\"getOperator\\\",\\n            value: function getOperator(op) {\\n              var opValue = opCache[op];\\n\\n              if (opValue) {\\n                return opValue;\\n              }\\n\\n              return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\\n            }\\n          }, {\\n            key: \\\"LBRACE\\\",\\n            get: function get() {\\n              return (0, _util.shadow)(this, 'LBRACE', new PostScriptToken(PostScriptTokenTypes.LBRACE, '{'));\\n            }\\n          }, {\\n            key: \\\"RBRACE\\\",\\n            get: function get() {\\n              return (0, _util.shadow)(this, 'RBRACE', new PostScriptToken(PostScriptTokenTypes.RBRACE, '}'));\\n            }\\n          }, {\\n            key: \\\"IF\\\",\\n            get: function get() {\\n              return (0, _util.shadow)(this, 'IF', new PostScriptToken(PostScriptTokenTypes.IF, 'IF'));\\n            }\\n          }, {\\n            key: \\\"IFELSE\\\",\\n            get: function get() {\\n              return (0, _util.shadow)(this, 'IFELSE', new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE'));\\n            }\\n          }]);\\n\\n          return PostScriptToken;\\n        }();\\n\\n        return PostScriptToken;\\n      }();\\n\\n      var PostScriptLexer =\\n      /*#__PURE__*/\\n      function () {\\n        function PostScriptLexer(stream) {\\n          _classCallCheck(this, PostScriptLexer);\\n\\n          this.stream = stream;\\n          this.nextChar();\\n          this.strBuf = [];\\n        }\\n\\n        _createClass(PostScriptLexer, [{\\n          key: \\\"nextChar\\\",\\n          value: function nextChar() {\\n            return this.currentChar = this.stream.getByte();\\n          }\\n        }, {\\n          key: \\\"getToken\\\",\\n          value: function getToken() {\\n            var comment = false;\\n            var ch = this.currentChar;\\n\\n            while (true) {\\n              if (ch < 0) {\\n                return _primitives.EOF;\\n              }\\n\\n              if (comment) {\\n                if (ch === 0x0A || ch === 0x0D) {\\n                  comment = false;\\n                }\\n              } else if (ch === 0x25) {\\n                comment = true;\\n              } else if (!(0, _util.isSpace)(ch)) {\\n                break;\\n              }\\n\\n              ch = this.nextChar();\\n            }\\n\\n            switch (ch | 0) {\\n              case 0x30:\\n              case 0x31:\\n              case 0x32:\\n              case 0x33:\\n              case 0x34:\\n              case 0x35:\\n              case 0x36:\\n              case 0x37:\\n              case 0x38:\\n              case 0x39:\\n              case 0x2B:\\n              case 0x2D:\\n              case 0x2E:\\n                return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\\n\\n              case 0x7B:\\n                this.nextChar();\\n                return PostScriptToken.LBRACE;\\n\\n              case 0x7D:\\n                this.nextChar();\\n                return PostScriptToken.RBRACE;\\n            }\\n\\n            var strBuf = this.strBuf;\\n            strBuf.length = 0;\\n            strBuf[0] = String.fromCharCode(ch);\\n\\n            while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\\n              strBuf.push(String.fromCharCode(ch));\\n            }\\n\\n            var str = strBuf.join('');\\n\\n            switch (str.toLowerCase()) {\\n              case 'if':\\n                return PostScriptToken.IF;\\n\\n              case 'ifelse':\\n                return PostScriptToken.IFELSE;\\n\\n              default:\\n                return PostScriptToken.getOperator(str);\\n            }\\n          }\\n        }, {\\n          key: \\\"getNumber\\\",\\n          value: function getNumber() {\\n            var ch = this.currentChar;\\n            var strBuf = this.strBuf;\\n            strBuf.length = 0;\\n            strBuf[0] = String.fromCharCode(ch);\\n\\n            while ((ch = this.nextChar()) >= 0) {\\n              if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\\n                strBuf.push(String.fromCharCode(ch));\\n              } else {\\n                break;\\n              }\\n            }\\n\\n            var value = parseFloat(strBuf.join(''));\\n\\n            if (isNaN(value)) {\\n              throw new _util.FormatError(\\\"Invalid floating point number: \\\".concat(value));\\n            }\\n\\n            return value;\\n          }\\n        }]);\\n\\n        return PostScriptLexer;\\n      }();\\n\\n      exports.PostScriptLexer = PostScriptLexer;\\n      /***/\\n    },\\n    /* 187 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.MurmurHash3_64 = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\\n        var MASK_HIGH = 0xffff0000;\\n        var MASK_LOW = 0xffff;\\n\\n        function MurmurHash3_64(seed) {\\n          var SEED = 0xc3d2e1f0;\\n          this.h1 = seed ? seed & 0xffffffff : SEED;\\n          this.h2 = seed ? seed & 0xffffffff : SEED;\\n        }\\n\\n        MurmurHash3_64.prototype = {\\n          update: function MurmurHash3_64_update(input) {\\n            var data, length;\\n\\n            if ((0, _util.isString)(input)) {\\n              data = new Uint8Array(input.length * 2);\\n              length = 0;\\n\\n              for (var i = 0, ii = input.length; i < ii; i++) {\\n                var code = input.charCodeAt(i);\\n\\n                if (code <= 0xff) {\\n                  data[length++] = code;\\n                } else {\\n                  data[length++] = code >>> 8;\\n                  data[length++] = code & 0xff;\\n                }\\n              }\\n            } else if ((0, _util.isArrayBuffer)(input)) {\\n              data = input;\\n              length = data.byteLength;\\n            } else {\\n              throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\\n            }\\n\\n            var blockCounts = length >> 2;\\n            var tailLength = length - blockCounts * 4;\\n            var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\\n            var k1 = 0;\\n            var k2 = 0;\\n            var h1 = this.h1;\\n            var h2 = this.h2;\\n            var C1 = 0xcc9e2d51;\\n            var C2 = 0x1b873593;\\n            var C1_LOW = C1 & MASK_LOW;\\n            var C2_LOW = C2 & MASK_LOW;\\n\\n            for (var _i = 0; _i < blockCounts; _i++) {\\n              if (_i & 1) {\\n                k1 = dataUint32[_i];\\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\\n                k1 = k1 << 15 | k1 >>> 17;\\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\\n                h1 ^= k1;\\n                h1 = h1 << 13 | h1 >>> 19;\\n                h1 = h1 * 5 + 0xe6546b64;\\n              } else {\\n                k2 = dataUint32[_i];\\n                k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\\n                k2 = k2 << 15 | k2 >>> 17;\\n                k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\\n                h2 ^= k2;\\n                h2 = h2 << 13 | h2 >>> 19;\\n                h2 = h2 * 5 + 0xe6546b64;\\n              }\\n            }\\n\\n            k1 = 0;\\n\\n            switch (tailLength) {\\n              case 3:\\n                k1 ^= data[blockCounts * 4 + 2] << 16;\\n\\n              case 2:\\n                k1 ^= data[blockCounts * 4 + 1] << 8;\\n\\n              case 1:\\n                k1 ^= data[blockCounts * 4];\\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\\n                k1 = k1 << 15 | k1 >>> 17;\\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\\n\\n                if (blockCounts & 1) {\\n                  h1 ^= k1;\\n                } else {\\n                  h2 ^= k1;\\n                }\\n\\n            }\\n\\n            this.h1 = h1;\\n            this.h2 = h2;\\n            return this;\\n          },\\n          hexdigest: function MurmurHash3_64_hexdigest() {\\n            var h1 = this.h1;\\n            var h2 = this.h2;\\n            h1 ^= h2 >>> 1;\\n            h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\\n            h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\\n            h1 ^= h2 >>> 1;\\n            h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\\n            h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\\n            h1 ^= h2 >>> 1;\\n\\n            for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\\n              var hex = (arr[i] >>> 0).toString(16);\\n\\n              while (hex.length < 8) {\\n                hex = '0' + hex;\\n              }\\n\\n              str += hex;\\n            }\\n\\n            return str;\\n          }\\n        };\\n        return MurmurHash3_64;\\n      }();\\n\\n      exports.MurmurHash3_64 = MurmurHash3_64;\\n      /***/\\n    },\\n    /* 188 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.PDFImage = void 0;\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      var _primitives = __w_pdfjs_require__(155);\\n\\n      var _colorspace = __w_pdfjs_require__(168);\\n\\n      var _stream = __w_pdfjs_require__(157);\\n\\n      var _jpeg_stream = __w_pdfjs_require__(163);\\n\\n      var _jpx = __w_pdfjs_require__(166);\\n\\n      function _slicedToArray(arr, i) {\\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\\n      }\\n\\n      function _nonIterableRest() {\\n        throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\");\\n      }\\n\\n      function _iterableToArrayLimit(arr, i) {\\n        var _arr = [];\\n        var _n = true;\\n        var _d = false;\\n        var _e = undefined;\\n\\n        try {\\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n            _arr.push(_s.value);\\n\\n            if (i && _arr.length === i) break;\\n          }\\n        } catch (err) {\\n          _d = true;\\n          _e = err;\\n        } finally {\\n          try {\\n            if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"]();\\n          } finally {\\n            if (_d) throw _e;\\n          }\\n        }\\n\\n        return _arr;\\n      }\\n\\n      function _arrayWithHoles(arr) {\\n        if (Array.isArray(arr)) return arr;\\n      }\\n\\n      var PDFImage = function PDFImageClosure() {\\n        function handleImageData(image, nativeDecoder) {\\n          if (nativeDecoder && nativeDecoder.canDecode(image)) {\\n            return nativeDecoder.decode(image).catch(function (reason) {\\n              (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\\n              return image;\\n            });\\n          }\\n\\n          return Promise.resolve(image);\\n        }\\n\\n        function decodeAndClamp(value, addend, coefficient, max) {\\n          value = addend + value * coefficient;\\n          return value < 0 ? 0 : value > max ? max : value;\\n        }\\n\\n        function resizeImageMask(src, bpc, w1, h1, w2, h2) {\\n          var length = w2 * h2;\\n          var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\\n          var xRatio = w1 / w2;\\n          var yRatio = h1 / h2;\\n          var i,\\n              j,\\n              py,\\n              newIndex = 0,\\n              oldIndex;\\n          var xScaled = new Uint16Array(w2);\\n          var w1Scanline = w1;\\n\\n          for (i = 0; i < w2; i++) {\\n            xScaled[i] = Math.floor(i * xRatio);\\n          }\\n\\n          for (i = 0; i < h2; i++) {\\n            py = Math.floor(i * yRatio) * w1Scanline;\\n\\n            for (j = 0; j < w2; j++) {\\n              oldIndex = py + xScaled[j];\\n              dest[newIndex++] = src[oldIndex];\\n            }\\n          }\\n\\n          return dest;\\n        }\\n\\n        function PDFImage(_ref) {\\n          var xref = _ref.xref,\\n              res = _ref.res,\\n              image = _ref.image,\\n              _ref$isInline = _ref.isInline,\\n              isInline = _ref$isInline === void 0 ? false : _ref$isInline,\\n              _ref$smask = _ref.smask,\\n              smask = _ref$smask === void 0 ? null : _ref$smask,\\n              _ref$mask = _ref.mask,\\n              mask = _ref$mask === void 0 ? null : _ref$mask,\\n              _ref$isMask = _ref.isMask,\\n              isMask = _ref$isMask === void 0 ? false : _ref$isMask,\\n              pdfFunctionFactory = _ref.pdfFunctionFactory;\\n          this.image = image;\\n          var dict = image.dict;\\n          var filter = dict.get('Filter');\\n\\n          if ((0, _primitives.isName)(filter)) {\\n            switch (filter.name) {\\n              case 'JPXDecode':\\n                var jpxImage = new _jpx.JpxImage();\\n                jpxImage.parseImageProperties(image.stream);\\n                image.stream.reset();\\n                image.width = jpxImage.width;\\n                image.height = jpxImage.height;\\n                image.bitsPerComponent = jpxImage.bitsPerComponent;\\n                image.numComps = jpxImage.componentsCount;\\n                break;\\n\\n              case 'JBIG2Decode':\\n                image.bitsPerComponent = 1;\\n                image.numComps = 1;\\n                break;\\n            }\\n          }\\n\\n          var width = dict.get('Width', 'W');\\n          var height = dict.get('Height', 'H');\\n\\n          if (Number.isInteger(image.width) && image.width > 0 && Number.isInteger(image.height) && image.height > 0 && (image.width !== width || image.height !== height)) {\\n            (0, _util.warn)('PDFImage - using the Width/Height of the image data, ' + 'rather than the image dictionary.');\\n            width = image.width;\\n            height = image.height;\\n          }\\n\\n          if (width < 1 || height < 1) {\\n            throw new _util.FormatError(\\\"Invalid image width: \\\".concat(width, \\\" or \\\") + \\\"height: \\\".concat(height));\\n          }\\n\\n          this.width = width;\\n          this.height = height;\\n          this.interpolate = dict.get('Interpolate', 'I') || false;\\n          this.imageMask = dict.get('ImageMask', 'IM') || false;\\n          this.matte = dict.get('Matte') || false;\\n          var bitsPerComponent = image.bitsPerComponent;\\n\\n          if (!bitsPerComponent) {\\n            bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\\n\\n            if (!bitsPerComponent) {\\n              if (this.imageMask) {\\n                bitsPerComponent = 1;\\n              } else {\\n                throw new _util.FormatError(\\\"Bits per component missing in image: \\\".concat(this.imageMask));\\n              }\\n            }\\n          }\\n\\n          this.bpc = bitsPerComponent;\\n\\n          if (!this.imageMask) {\\n            var colorSpace = dict.get('ColorSpace', 'CS');\\n\\n            if (!colorSpace) {\\n              (0, _util.info)('JPX images (which do not require color spaces)');\\n\\n              switch (image.numComps) {\\n                case 1:\\n                  colorSpace = _primitives.Name.get('DeviceGray');\\n                  break;\\n\\n                case 3:\\n                  colorSpace = _primitives.Name.get('DeviceRGB');\\n                  break;\\n\\n                case 4:\\n                  colorSpace = _primitives.Name.get('DeviceCMYK');\\n                  break;\\n\\n                default:\\n                  throw new Error(\\\"JPX images with \\\".concat(image.numComps, \\\" \\\") + 'color components not supported.');\\n              }\\n            }\\n\\n            var resources = isInline ? res : null;\\n            this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\\n            this.numComps = this.colorSpace.numComps;\\n          }\\n\\n          this.decode = dict.getArray('Decode', 'D');\\n          this.needsDecode = false;\\n\\n          if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode, bitsPerComponent) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\\n            this.needsDecode = true;\\n            var max = (1 << bitsPerComponent) - 1;\\n            this.decodeCoefficients = [];\\n            this.decodeAddends = [];\\n            var isIndexed = this.colorSpace && this.colorSpace.name === 'Indexed';\\n\\n            for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\\n              var dmin = this.decode[i];\\n              var dmax = this.decode[i + 1];\\n              this.decodeCoefficients[j] = isIndexed ? (dmax - dmin) / max : dmax - dmin;\\n              this.decodeAddends[j] = isIndexed ? dmin : max * dmin;\\n            }\\n          }\\n\\n          if (smask) {\\n            this.smask = new PDFImage({\\n              xref: xref,\\n              res: res,\\n              image: smask,\\n              isInline: isInline,\\n              pdfFunctionFactory: pdfFunctionFactory\\n            });\\n          } else if (mask) {\\n            if ((0, _primitives.isStream)(mask)) {\\n              var maskDict = mask.dict,\\n                  imageMask = maskDict.get('ImageMask', 'IM');\\n\\n              if (!imageMask) {\\n                (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\\n              } else {\\n                this.mask = new PDFImage({\\n                  xref: xref,\\n                  res: res,\\n                  image: mask,\\n                  isInline: isInline,\\n                  isMask: true,\\n                  pdfFunctionFactory: pdfFunctionFactory\\n                });\\n              }\\n            } else {\\n              this.mask = mask;\\n            }\\n          }\\n        }\\n\\n        PDFImage.buildImage = function (_ref2) {\\n          var handler = _ref2.handler,\\n              xref = _ref2.xref,\\n              res = _ref2.res,\\n              image = _ref2.image,\\n              _ref2$isInline = _ref2.isInline,\\n              isInline = _ref2$isInline === void 0 ? false : _ref2$isInline,\\n              _ref2$nativeDecoder = _ref2.nativeDecoder,\\n              nativeDecoder = _ref2$nativeDecoder === void 0 ? null : _ref2$nativeDecoder,\\n              pdfFunctionFactory = _ref2.pdfFunctionFactory;\\n          var imagePromise = handleImageData(image, nativeDecoder);\\n          var smaskPromise;\\n          var maskPromise;\\n          var smask = image.dict.get('SMask');\\n          var mask = image.dict.get('Mask');\\n\\n          if (smask) {\\n            smaskPromise = handleImageData(smask, nativeDecoder);\\n            maskPromise = Promise.resolve(null);\\n          } else {\\n            smaskPromise = Promise.resolve(null);\\n\\n            if (mask) {\\n              if ((0, _primitives.isStream)(mask)) {\\n                maskPromise = handleImageData(mask, nativeDecoder);\\n              } else if (Array.isArray(mask)) {\\n                maskPromise = Promise.resolve(mask);\\n              } else {\\n                (0, _util.warn)('Unsupported mask format.');\\n                maskPromise = Promise.resolve(null);\\n              }\\n            } else {\\n              maskPromise = Promise.resolve(null);\\n            }\\n          }\\n\\n          return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\\n            var _ref4 = _slicedToArray(_ref3, 3),\\n                imageData = _ref4[0],\\n                smaskData = _ref4[1],\\n                maskData = _ref4[2];\\n\\n            return new PDFImage({\\n              xref: xref,\\n              res: res,\\n              image: imageData,\\n              isInline: isInline,\\n              smask: smaskData,\\n              mask: maskData,\\n              pdfFunctionFactory: pdfFunctionFactory\\n            });\\n          });\\n        };\\n\\n        PDFImage.createMask = function (_ref5) {\\n          var imgArray = _ref5.imgArray,\\n              width = _ref5.width,\\n              height = _ref5.height,\\n              imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\\n              inverseDecode = _ref5.inverseDecode;\\n          var computedLength = (width + 7 >> 3) * height;\\n          var actualLength = imgArray.byteLength;\\n          var haveFullData = computedLength === actualLength;\\n          var data, i;\\n\\n          if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\\n            data = imgArray;\\n          } else if (!inverseDecode) {\\n            data = new Uint8ClampedArray(actualLength);\\n            data.set(imgArray);\\n          } else {\\n            data = new Uint8ClampedArray(computedLength);\\n            data.set(imgArray);\\n\\n            for (i = actualLength; i < computedLength; i++) {\\n              data[i] = 0xff;\\n            }\\n          }\\n\\n          if (inverseDecode) {\\n            for (i = 0; i < actualLength; i++) {\\n              data[i] ^= 0xFF;\\n            }\\n          }\\n\\n          return {\\n            data: data,\\n            width: width,\\n            height: height\\n          };\\n        };\\n\\n        PDFImage.prototype = {\\n          get drawWidth() {\\n            return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\\n          },\\n\\n          get drawHeight() {\\n            return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\\n          },\\n\\n          decodeBuffer: function decodeBuffer(buffer) {\\n            var bpc = this.bpc;\\n            var numComps = this.numComps;\\n            var decodeAddends = this.decodeAddends;\\n            var decodeCoefficients = this.decodeCoefficients;\\n            var max = (1 << bpc) - 1;\\n            var i, ii;\\n\\n            if (bpc === 1) {\\n              for (i = 0, ii = buffer.length; i < ii; i++) {\\n                buffer[i] = +!buffer[i];\\n              }\\n\\n              return;\\n            }\\n\\n            var index = 0;\\n\\n            for (i = 0, ii = this.width * this.height; i < ii; i++) {\\n              for (var j = 0; j < numComps; j++) {\\n                buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\\n                index++;\\n              }\\n            }\\n          },\\n          getComponents: function getComponents(buffer) {\\n            var bpc = this.bpc;\\n\\n            if (bpc === 8) {\\n              return buffer;\\n            }\\n\\n            var width = this.width;\\n            var height = this.height;\\n            var numComps = this.numComps;\\n            var length = width * height * numComps;\\n            var bufferPos = 0;\\n            var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\\n            var rowComps = width * numComps;\\n            var max = (1 << bpc) - 1;\\n            var i = 0,\\n                ii,\\n                buf;\\n\\n            if (bpc === 1) {\\n              var mask, loop1End, loop2End;\\n\\n              for (var j = 0; j < height; j++) {\\n                loop1End = i + (rowComps & ~7);\\n                loop2End = i + rowComps;\\n\\n                while (i < loop1End) {\\n                  buf = buffer[bufferPos++];\\n                  output[i] = buf >> 7 & 1;\\n                  output[i + 1] = buf >> 6 & 1;\\n                  output[i + 2] = buf >> 5 & 1;\\n                  output[i + 3] = buf >> 4 & 1;\\n                  output[i + 4] = buf >> 3 & 1;\\n                  output[i + 5] = buf >> 2 & 1;\\n                  output[i + 6] = buf >> 1 & 1;\\n                  output[i + 7] = buf & 1;\\n                  i += 8;\\n                }\\n\\n                if (i < loop2End) {\\n                  buf = buffer[bufferPos++];\\n                  mask = 128;\\n\\n                  while (i < loop2End) {\\n                    output[i++] = +!!(buf & mask);\\n                    mask >>= 1;\\n                  }\\n                }\\n              }\\n            } else {\\n              var bits = 0;\\n              buf = 0;\\n\\n              for (i = 0, ii = length; i < ii; ++i) {\\n                if (i % rowComps === 0) {\\n                  buf = 0;\\n                  bits = 0;\\n                }\\n\\n                while (bits < bpc) {\\n                  buf = buf << 8 | buffer[bufferPos++];\\n                  bits += 8;\\n                }\\n\\n                var remainingBits = bits - bpc;\\n                var value = buf >> remainingBits;\\n                output[i] = value < 0 ? 0 : value > max ? max : value;\\n                buf = buf & (1 << remainingBits) - 1;\\n                bits = remainingBits;\\n              }\\n            }\\n\\n            return output;\\n          },\\n          fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\\n            var smask = this.smask;\\n            var mask = this.mask;\\n            var alphaBuf, sw, sh, i, ii, j;\\n\\n            if (smask) {\\n              sw = smask.width;\\n              sh = smask.height;\\n              alphaBuf = new Uint8ClampedArray(sw * sh);\\n              smask.fillGrayBuffer(alphaBuf);\\n\\n              if (sw !== width || sh !== height) {\\n                alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\\n              }\\n            } else if (mask) {\\n              if (mask instanceof PDFImage) {\\n                sw = mask.width;\\n                sh = mask.height;\\n                alphaBuf = new Uint8ClampedArray(sw * sh);\\n                mask.numComps = 1;\\n                mask.fillGrayBuffer(alphaBuf);\\n\\n                for (i = 0, ii = sw * sh; i < ii; ++i) {\\n                  alphaBuf[i] = 255 - alphaBuf[i];\\n                }\\n\\n                if (sw !== width || sh !== height) {\\n                  alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\\n                }\\n              } else if (Array.isArray(mask)) {\\n                alphaBuf = new Uint8ClampedArray(width * height);\\n                var numComps = this.numComps;\\n\\n                for (i = 0, ii = width * height; i < ii; ++i) {\\n                  var opacity = 0;\\n                  var imageOffset = i * numComps;\\n\\n                  for (j = 0; j < numComps; ++j) {\\n                    var color = image[imageOffset + j];\\n                    var maskOffset = j * 2;\\n\\n                    if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\\n                      opacity = 255;\\n                      break;\\n                    }\\n                  }\\n\\n                  alphaBuf[i] = opacity;\\n                }\\n              } else {\\n                throw new _util.FormatError('Unknown mask format.');\\n              }\\n            }\\n\\n            if (alphaBuf) {\\n              for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\\n                rgbaBuf[j] = alphaBuf[i];\\n              }\\n            } else {\\n              for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\\n                rgbaBuf[j] = 255;\\n              }\\n            }\\n          },\\n          undoPreblend: function undoPreblend(buffer, width, height) {\\n            var matte = this.smask && this.smask.matte;\\n\\n            if (!matte) {\\n              return;\\n            }\\n\\n            var matteRgb = this.colorSpace.getRgb(matte, 0);\\n            var matteR = matteRgb[0];\\n            var matteG = matteRgb[1];\\n            var matteB = matteRgb[2];\\n            var length = width * height * 4;\\n\\n            for (var i = 0; i < length; i += 4) {\\n              var alpha = buffer[i + 3];\\n\\n              if (alpha === 0) {\\n                buffer[i] = 255;\\n                buffer[i + 1] = 255;\\n                buffer[i + 2] = 255;\\n                continue;\\n              }\\n\\n              var k = 255 / alpha;\\n              buffer[i] = (buffer[i] - matteR) * k + matteR;\\n              buffer[i + 1] = (buffer[i + 1] - matteG) * k + matteG;\\n              buffer[i + 2] = (buffer[i + 2] - matteB) * k + matteB;\\n            }\\n          },\\n          createImageData: function createImageData() {\\n            var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n            var drawWidth = this.drawWidth;\\n            var drawHeight = this.drawHeight;\\n            var imgData = {\\n              width: drawWidth,\\n              height: drawHeight,\\n              kind: 0,\\n              data: null\\n            };\\n            var numComps = this.numComps;\\n            var originalWidth = this.width;\\n            var originalHeight = this.height;\\n            var bpc = this.bpc;\\n            var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\\n            var imgArray;\\n\\n            if (!forceRGBA) {\\n              var kind;\\n\\n              if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\\n                kind = _util.ImageKind.GRAYSCALE_1BPP;\\n              } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\\n                kind = _util.ImageKind.RGB_24BPP;\\n              }\\n\\n              if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\\n                imgData.kind = kind;\\n                imgArray = this.getImageBytes(originalHeight * rowBytes);\\n\\n                if (this.image instanceof _stream.DecodeStream) {\\n                  imgData.data = imgArray;\\n                } else {\\n                  var newArray = new Uint8ClampedArray(imgArray.length);\\n                  newArray.set(imgArray);\\n                  imgData.data = newArray;\\n                }\\n\\n                if (this.needsDecode) {\\n                  (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP, 'PDFImage.createImageData: The image must be grayscale.');\\n                  var buffer = imgData.data;\\n\\n                  for (var i = 0, ii = buffer.length; i < ii; i++) {\\n                    buffer[i] ^= 0xff;\\n                  }\\n                }\\n\\n                return imgData;\\n              }\\n\\n              if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\\n                var imageLength = originalHeight * rowBytes;\\n\\n                switch (this.colorSpace.name) {\\n                  case 'DeviceGray':\\n                    imageLength *= 3;\\n\\n                  case 'DeviceRGB':\\n                  case 'DeviceCMYK':\\n                    imgData.kind = _util.ImageKind.RGB_24BPP;\\n                    imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\\n                    return imgData;\\n                }\\n              }\\n            }\\n\\n            imgArray = this.getImageBytes(originalHeight * rowBytes);\\n            var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\\n            var comps = this.getComponents(imgArray);\\n            var alpha01, maybeUndoPreblend;\\n\\n            if (!forceRGBA && !this.smask && !this.mask) {\\n              imgData.kind = _util.ImageKind.RGB_24BPP;\\n              imgData.data = new Uint8ClampedArray(drawWidth * drawHeight * 3);\\n              alpha01 = 0;\\n              maybeUndoPreblend = false;\\n            } else {\\n              imgData.kind = _util.ImageKind.RGBA_32BPP;\\n              imgData.data = new Uint8ClampedArray(drawWidth * drawHeight * 4);\\n              alpha01 = 1;\\n              maybeUndoPreblend = true;\\n              this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\\n            }\\n\\n            if (this.needsDecode) {\\n              this.decodeBuffer(comps);\\n            }\\n\\n            this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\\n\\n            if (maybeUndoPreblend) {\\n              this.undoPreblend(imgData.data, drawWidth, actualHeight);\\n            }\\n\\n            return imgData;\\n          },\\n          fillGrayBuffer: function fillGrayBuffer(buffer) {\\n            var numComps = this.numComps;\\n\\n            if (numComps !== 1) {\\n              throw new _util.FormatError(\\\"Reading gray scale from a color image: \\\".concat(numComps));\\n            }\\n\\n            var width = this.width;\\n            var height = this.height;\\n            var bpc = this.bpc;\\n            var rowBytes = width * numComps * bpc + 7 >> 3;\\n            var imgArray = this.getImageBytes(height * rowBytes);\\n            var comps = this.getComponents(imgArray);\\n            var i, length;\\n\\n            if (bpc === 1) {\\n              length = width * height;\\n\\n              if (this.needsDecode) {\\n                for (i = 0; i < length; ++i) {\\n                  buffer[i] = comps[i] - 1 & 255;\\n                }\\n              } else {\\n                for (i = 0; i < length; ++i) {\\n                  buffer[i] = -comps[i] & 255;\\n                }\\n              }\\n\\n              return;\\n            }\\n\\n            if (this.needsDecode) {\\n              this.decodeBuffer(comps);\\n            }\\n\\n            length = width * height;\\n            var scale = 255 / ((1 << bpc) - 1);\\n\\n            for (i = 0; i < length; ++i) {\\n              buffer[i] = scale * comps[i];\\n            }\\n          },\\n          getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\\n            var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\\n            this.image.reset();\\n            this.image.drawWidth = drawWidth || this.width;\\n            this.image.drawHeight = drawHeight || this.height;\\n            this.image.forceRGB = !!forceRGB;\\n            return this.image.getBytes(length, true);\\n          }\\n        };\\n        return PDFImage;\\n      }();\\n\\n      exports.PDFImage = PDFImage;\\n      /***/\\n    },\\n    /* 189 */\\n\\n    /***/\\n    function (module, exports, __w_pdfjs_require__) {\\n      \\\"use strict\\\";\\n\\n      Object.defineProperty(exports, \\\"__esModule\\\", {\\n        value: true\\n      });\\n      exports.MessageHandler = MessageHandler;\\n\\n      var _regenerator = _interopRequireDefault(__w_pdfjs_require__(2));\\n\\n      var _util = __w_pdfjs_require__(6);\\n\\n      function _interopRequireDefault(obj) {\\n        return obj && obj.__esModule ? obj : {\\n          default: obj\\n        };\\n      }\\n\\n      function _typeof(obj) {\\n        if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n          _typeof = function _typeof(obj) {\\n            return typeof obj;\\n          };\\n        } else {\\n          _typeof = function _typeof(obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n          };\\n        }\\n\\n        return _typeof(obj);\\n      }\\n\\n      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\\n        try {\\n          var info = gen[key](arg);\\n          var value = info.value;\\n        } catch (error) {\\n          reject(error);\\n          return;\\n        }\\n\\n        if (info.done) {\\n          resolve(value);\\n        } else {\\n          Promise.resolve(value).then(_next, _throw);\\n        }\\n      }\\n\\n      function _asyncToGenerator(fn) {\\n        return function () {\\n          var self = this,\\n              args = arguments;\\n          return new Promise(function (resolve, reject) {\\n            var gen = fn.apply(self, args);\\n\\n            function _next(value) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"next\\\", value);\\n            }\\n\\n            function _throw(err) {\\n              asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"throw\\\", err);\\n            }\\n\\n            _next(undefined);\\n          });\\n        };\\n      }\\n\\n      function resolveCall(_x, _x2) {\\n        return _resolveCall.apply(this, arguments);\\n      }\\n\\n      function _resolveCall() {\\n        _resolveCall = _asyncToGenerator(\\n        /*#__PURE__*/\\n        _regenerator.default.mark(function _callee(fn, args) {\\n          var thisArg,\\n              _args = arguments;\\n          return _regenerator.default.wrap(function _callee$(_context) {\\n            while (1) {\\n              switch (_context.prev = _context.next) {\\n                case 0:\\n                  thisArg = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\\n\\n                  if (fn) {\\n                    _context.next = 3;\\n                    break;\\n                  }\\n\\n                  return _context.abrupt(\\\"return\\\");\\n\\n                case 3:\\n                  return _context.abrupt(\\\"return\\\", fn.apply(thisArg, args));\\n\\n                case 4:\\n                case \\\"end\\\":\\n                  return _context.stop();\\n              }\\n            }\\n          }, _callee, this);\\n        }));\\n        return _resolveCall.apply(this, arguments);\\n      }\\n\\n      function wrapReason(reason) {\\n        if (_typeof(reason) !== 'object') {\\n          return reason;\\n        }\\n\\n        switch (reason.name) {\\n          case 'AbortException':\\n            return new _util.AbortException(reason.message);\\n\\n          case 'MissingPDFException':\\n            return new _util.MissingPDFException(reason.message);\\n\\n          case 'UnexpectedResponseException':\\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\\n\\n          default:\\n            return new _util.UnknownErrorException(reason.message, reason.details);\\n        }\\n      }\\n\\n      function makeReasonSerializable(reason) {\\n        if (!(reason instanceof Error) || reason instanceof _util.AbortException || reason instanceof _util.MissingPDFException || reason instanceof _util.UnexpectedResponseException || reason instanceof _util.UnknownErrorException) {\\n          return reason;\\n        }\\n\\n        return new _util.UnknownErrorException(reason.message, reason.toString());\\n      }\\n\\n      function resolveOrReject(capability, success, reason) {\\n        if (success) {\\n          capability.resolve();\\n        } else {\\n          capability.reject(reason);\\n        }\\n      }\\n\\n      function finalize(promise) {\\n        return Promise.resolve(promise).catch(function () {});\\n      }\\n\\n      function MessageHandler(sourceName, targetName, comObj) {\\n        var _this = this;\\n\\n        this.sourceName = sourceName;\\n        this.targetName = targetName;\\n        this.comObj = comObj;\\n        this.callbackId = 1;\\n        this.streamId = 1;\\n        this.postMessageTransfers = true;\\n        this.streamSinks = Object.create(null);\\n        this.streamControllers = Object.create(null);\\n        var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\\n        var ah = this.actionHandler = Object.create(null);\\n\\n        this._onComObjOnMessage = function (event) {\\n          var data = event.data;\\n\\n          if (data.targetName !== _this.sourceName) {\\n            return;\\n          }\\n\\n          if (data.stream) {\\n            _this._processStreamMessage(data);\\n          } else if (data.isReply) {\\n            var callbackId = data.callbackId;\\n\\n            if (data.callbackId in callbacksCapabilities) {\\n              var callback = callbacksCapabilities[callbackId];\\n              delete callbacksCapabilities[callbackId];\\n\\n              if ('error' in data) {\\n                callback.reject(wrapReason(data.error));\\n              } else {\\n                callback.resolve(data.data);\\n              }\\n            } else {\\n              throw new Error(\\\"Cannot resolve callback \\\".concat(callbackId));\\n            }\\n          } else if (data.action in ah) {\\n            var action = ah[data.action];\\n\\n            if (data.callbackId) {\\n              var _sourceName = _this.sourceName;\\n              var _targetName = data.sourceName;\\n              Promise.resolve().then(function () {\\n                return action[0].call(action[1], data.data);\\n              }).then(function (result) {\\n                comObj.postMessage({\\n                  sourceName: _sourceName,\\n                  targetName: _targetName,\\n                  isReply: true,\\n                  callbackId: data.callbackId,\\n                  data: result\\n                });\\n              }, function (reason) {\\n                comObj.postMessage({\\n                  sourceName: _sourceName,\\n                  targetName: _targetName,\\n                  isReply: true,\\n                  callbackId: data.callbackId,\\n                  error: makeReasonSerializable(reason)\\n                });\\n              });\\n            } else if (data.streamId) {\\n              _this._createStreamSink(data);\\n            } else {\\n              action[0].call(action[1], data.data);\\n            }\\n          } else {\\n            throw new Error(\\\"Unknown action from worker: \\\".concat(data.action));\\n          }\\n        };\\n\\n        comObj.addEventListener('message', this._onComObjOnMessage);\\n      }\\n\\n      MessageHandler.prototype = {\\n        on: function on(actionName, handler, scope) {\\n          var ah = this.actionHandler;\\n\\n          if (ah[actionName]) {\\n            throw new Error(\\\"There is already an actionName called \\\\\\\"\\\".concat(actionName, \\\"\\\\\\\"\\\"));\\n          }\\n\\n          ah[actionName] = [handler, scope];\\n        },\\n        send: function send(actionName, data, transfers) {\\n          var message = {\\n            sourceName: this.sourceName,\\n            targetName: this.targetName,\\n            action: actionName,\\n            data: data\\n          };\\n          this.postMessage(message, transfers);\\n        },\\n        sendWithPromise: function sendWithPromise(actionName, data, transfers) {\\n          var callbackId = this.callbackId++;\\n          var message = {\\n            sourceName: this.sourceName,\\n            targetName: this.targetName,\\n            action: actionName,\\n            data: data,\\n            callbackId: callbackId\\n          };\\n          var capability = (0, _util.createPromiseCapability)();\\n          this.callbacksCapabilities[callbackId] = capability;\\n\\n          try {\\n            this.postMessage(message, transfers);\\n          } catch (e) {\\n            capability.reject(e);\\n          }\\n\\n          return capability.promise;\\n        },\\n        sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\\n          var _this2 = this;\\n\\n          var streamId = this.streamId++;\\n          var sourceName = this.sourceName;\\n          var targetName = this.targetName;\\n          return new _util.ReadableStream({\\n            start: function start(controller) {\\n              var startCapability = (0, _util.createPromiseCapability)();\\n              _this2.streamControllers[streamId] = {\\n                controller: controller,\\n                startCall: startCapability,\\n                isClosed: false\\n              };\\n\\n              _this2.postMessage({\\n                sourceName: sourceName,\\n                targetName: targetName,\\n                action: actionName,\\n                streamId: streamId,\\n                data: data,\\n                desiredSize: controller.desiredSize\\n              });\\n\\n              return startCapability.promise;\\n            },\\n            pull: function pull(controller) {\\n              var pullCapability = (0, _util.createPromiseCapability)();\\n              _this2.streamControllers[streamId].pullCall = pullCapability;\\n\\n              _this2.postMessage({\\n                sourceName: sourceName,\\n                targetName: targetName,\\n                stream: 'pull',\\n                streamId: streamId,\\n                desiredSize: controller.desiredSize\\n              });\\n\\n              return pullCapability.promise;\\n            },\\n            cancel: function cancel(reason) {\\n              var cancelCapability = (0, _util.createPromiseCapability)();\\n              _this2.streamControllers[streamId].cancelCall = cancelCapability;\\n              _this2.streamControllers[streamId].isClosed = true;\\n\\n              _this2.postMessage({\\n                sourceName: sourceName,\\n                targetName: targetName,\\n                stream: 'cancel',\\n                reason: reason,\\n                streamId: streamId\\n              });\\n\\n              return cancelCapability.promise;\\n            }\\n          }, queueingStrategy);\\n        },\\n        _createStreamSink: function _createStreamSink(data) {\\n          var _this3 = this;\\n\\n          var self = this;\\n          var action = this.actionHandler[data.action];\\n          var streamId = data.streamId;\\n          var desiredSize = data.desiredSize;\\n          var sourceName = this.sourceName;\\n          var targetName = data.sourceName;\\n          var capability = (0, _util.createPromiseCapability)();\\n\\n          var sendStreamRequest = function sendStreamRequest(_ref) {\\n            var stream = _ref.stream,\\n                chunk = _ref.chunk,\\n                transfers = _ref.transfers,\\n                success = _ref.success,\\n                reason = _ref.reason;\\n\\n            _this3.postMessage({\\n              sourceName: sourceName,\\n              targetName: targetName,\\n              stream: stream,\\n              streamId: streamId,\\n              chunk: chunk,\\n              success: success,\\n              reason: reason\\n            }, transfers);\\n          };\\n\\n          var streamSink = {\\n            enqueue: function enqueue(chunk) {\\n              var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\\n              var transfers = arguments.length > 2 ? arguments[2] : undefined;\\n\\n              if (this.isCancelled) {\\n                return;\\n              }\\n\\n              var lastDesiredSize = this.desiredSize;\\n              this.desiredSize -= size;\\n\\n              if (lastDesiredSize > 0 && this.desiredSize <= 0) {\\n                this.sinkCapability = (0, _util.createPromiseCapability)();\\n                this.ready = this.sinkCapability.promise;\\n              }\\n\\n              sendStreamRequest({\\n                stream: 'enqueue',\\n                chunk: chunk,\\n                transfers: transfers\\n              });\\n            },\\n            close: function close() {\\n              if (this.isCancelled) {\\n                return;\\n              }\\n\\n              this.isCancelled = true;\\n              sendStreamRequest({\\n                stream: 'close'\\n              });\\n              delete self.streamSinks[streamId];\\n            },\\n            error: function error(reason) {\\n              if (this.isCancelled) {\\n                return;\\n              }\\n\\n              this.isCancelled = true;\\n              sendStreamRequest({\\n                stream: 'error',\\n                reason: reason\\n              });\\n            },\\n            sinkCapability: capability,\\n            onPull: null,\\n            onCancel: null,\\n            isCancelled: false,\\n            desiredSize: desiredSize,\\n            ready: null\\n          };\\n          streamSink.sinkCapability.resolve();\\n          streamSink.ready = streamSink.sinkCapability.promise;\\n          this.streamSinks[streamId] = streamSink;\\n          resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\\n            sendStreamRequest({\\n              stream: 'start_complete',\\n              success: true\\n            });\\n          }, function (reason) {\\n            sendStreamRequest({\\n              stream: 'start_complete',\\n              success: false,\\n              reason: reason\\n            });\\n          });\\n        },\\n        _processStreamMessage: function _processStreamMessage(data) {\\n          var _this4 = this;\\n\\n          var sourceName = this.sourceName;\\n          var targetName = data.sourceName;\\n          var streamId = data.streamId;\\n\\n          var sendStreamResponse = function sendStreamResponse(_ref2) {\\n            var stream = _ref2.stream,\\n                success = _ref2.success,\\n                reason = _ref2.reason;\\n\\n            _this4.comObj.postMessage({\\n              sourceName: sourceName,\\n              targetName: targetName,\\n              stream: stream,\\n              success: success,\\n              streamId: streamId,\\n              reason: reason\\n            });\\n          };\\n\\n          var deleteStreamController = function deleteStreamController() {\\n            Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\\n              return capability && finalize(capability.promise);\\n            })).then(function () {\\n              delete _this4.streamControllers[data.streamId];\\n            });\\n          };\\n\\n          switch (data.stream) {\\n            case 'start_complete':\\n              resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\\n              break;\\n\\n            case 'pull_complete':\\n              resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\\n              break;\\n\\n            case 'pull':\\n              if (!this.streamSinks[data.streamId]) {\\n                sendStreamResponse({\\n                  stream: 'pull_complete',\\n                  success: true\\n                });\\n                break;\\n              }\\n\\n              if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\\n                this.streamSinks[data.streamId].sinkCapability.resolve();\\n              }\\n\\n              this.streamSinks[data.streamId].desiredSize = data.desiredSize;\\n              resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\\n                sendStreamResponse({\\n                  stream: 'pull_complete',\\n                  success: true\\n                });\\n              }, function (reason) {\\n                sendStreamResponse({\\n                  stream: 'pull_complete',\\n                  success: false,\\n                  reason: reason\\n                });\\n              });\\n              break;\\n\\n            case 'enqueue':\\n              (0, _util.assert)(this.streamControllers[data.streamId], 'enqueue should have stream controller');\\n\\n              if (!this.streamControllers[data.streamId].isClosed) {\\n                this.streamControllers[data.streamId].controller.enqueue(data.chunk);\\n              }\\n\\n              break;\\n\\n            case 'close':\\n              (0, _util.assert)(this.streamControllers[data.streamId], 'close should have stream controller');\\n\\n              if (this.streamControllers[data.streamId].isClosed) {\\n                break;\\n              }\\n\\n              this.streamControllers[data.streamId].isClosed = true;\\n              this.streamControllers[data.streamId].controller.close();\\n              deleteStreamController();\\n              break;\\n\\n            case 'error':\\n              (0, _util.assert)(this.streamControllers[data.streamId], 'error should have stream controller');\\n              this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\\n              deleteStreamController();\\n              break;\\n\\n            case 'cancel_complete':\\n              resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\\n              deleteStreamController();\\n              break;\\n\\n            case 'cancel':\\n              if (!this.streamSinks[data.streamId]) {\\n                break;\\n              }\\n\\n              resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\\n                sendStreamResponse({\\n                  stream: 'cancel_complete',\\n                  success: true\\n                });\\n              }, function (reason) {\\n                sendStreamResponse({\\n                  stream: 'cancel_complete',\\n                  success: false,\\n                  reason: reason\\n                });\\n              });\\n              this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\\n              this.streamSinks[data.streamId].isCancelled = true;\\n              delete this.streamSinks[data.streamId];\\n              break;\\n\\n            default:\\n              throw new Error('Unexpected stream case');\\n          }\\n        },\\n        postMessage: function postMessage(message, transfers) {\\n          if (transfers && this.postMessageTransfers) {\\n            this.comObj.postMessage(message, transfers);\\n          } else {\\n            this.comObj.postMessage(message);\\n          }\\n        },\\n        destroy: function destroy() {\\n          this.comObj.removeEventListener('message', this._onComObjOnMessage);\\n        }\\n      };\\n      /***/\\n    }])\\n  );\\n});\",\"/*!\\n * The buffer module from node.js, for the browser.\\n *\\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\\n * @license  MIT\\n */\\n\\n/* eslint-disable no-proto */\\n'use strict';\\n\\nvar base64 = require('base64-js');\\n\\nvar ieee754 = require('ieee754');\\n\\nvar isArray = require('isarray');\\n\\nexports.Buffer = Buffer;\\nexports.SlowBuffer = SlowBuffer;\\nexports.INSPECT_MAX_BYTES = 50;\\n/**\\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\\n *   === true    Use Uint8Array implementation (fastest)\\n *   === false   Use Object implementation (most compatible, even IE6)\\n *\\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\\n * Opera 11.6+, iOS 4.2+.\\n *\\n * Due to various browser bugs, sometimes the Object implementation will be used even\\n * when the browser supports typed arrays.\\n *\\n * Note:\\n *\\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\\n *\\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\\n *\\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\\n *     incorrect length in some situations.\\n\\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\\n * get the Object implementation, which is slower but behaves correctly.\\n */\\n\\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\\n/*\\n * Export kMaxLength after typed array support is determined.\\n */\\n\\nexports.kMaxLength = kMaxLength();\\n\\nfunction typedArraySupport() {\\n  try {\\n    var arr = new Uint8Array(1);\\n    arr.__proto__ = {\\n      __proto__: Uint8Array.prototype,\\n      foo: function foo() {\\n        return 42;\\n      }\\n    };\\n    return arr.foo() === 42 && // typed array instances can be augmented\\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\\n  } catch (e) {\\n    return false;\\n  }\\n}\\n\\nfunction kMaxLength() {\\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\\n}\\n\\nfunction createBuffer(that, length) {\\n  if (kMaxLength() < length) {\\n    throw new RangeError('Invalid typed array length');\\n  }\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    // Return an augmented `Uint8Array` instance, for best performance\\n    that = new Uint8Array(length);\\n    that.__proto__ = Buffer.prototype;\\n  } else {\\n    // Fallback: Return an object instance of the Buffer class\\n    if (that === null) {\\n      that = new Buffer(length);\\n    }\\n\\n    that.length = length;\\n  }\\n\\n  return that;\\n}\\n/**\\n * The Buffer constructor returns instances of `Uint8Array` that have their\\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\\n * returns a single octet.\\n *\\n * The `Uint8Array` prototype remains unmodified.\\n */\\n\\n\\nfunction Buffer(arg, encodingOrOffset, length) {\\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\\n    return new Buffer(arg, encodingOrOffset, length);\\n  } // Common case.\\n\\n\\n  if (typeof arg === 'number') {\\n    if (typeof encodingOrOffset === 'string') {\\n      throw new Error('If encoding is specified then the first argument must be a string');\\n    }\\n\\n    return allocUnsafe(this, arg);\\n  }\\n\\n  return from(this, arg, encodingOrOffset, length);\\n}\\n\\nBuffer.poolSize = 8192; // not used by this implementation\\n// TODO: Legacy, not needed anymore. Remove in next major version.\\n\\nBuffer._augment = function (arr) {\\n  arr.__proto__ = Buffer.prototype;\\n  return arr;\\n};\\n\\nfunction from(that, value, encodingOrOffset, length) {\\n  if (typeof value === 'number') {\\n    throw new TypeError('\\\"value\\\" argument must not be a number');\\n  }\\n\\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\\n  }\\n\\n  if (typeof value === 'string') {\\n    return fromString(that, value, encodingOrOffset);\\n  }\\n\\n  return fromObject(that, value);\\n}\\n/**\\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\\n * if value is a number.\\n * Buffer.from(str[, encoding])\\n * Buffer.from(array)\\n * Buffer.from(buffer)\\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\\n **/\\n\\n\\nBuffer.from = function (value, encodingOrOffset, length) {\\n  return from(null, value, encodingOrOffset, length);\\n};\\n\\nif (Buffer.TYPED_ARRAY_SUPPORT) {\\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\\n  Buffer.__proto__ = Uint8Array;\\n\\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\\n    Object.defineProperty(Buffer, Symbol.species, {\\n      value: null,\\n      configurable: true\\n    });\\n  }\\n}\\n\\nfunction assertSize(size) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('\\\"size\\\" argument must be a number');\\n  } else if (size < 0) {\\n    throw new RangeError('\\\"size\\\" argument must not be negative');\\n  }\\n}\\n\\nfunction alloc(that, size, fill, encoding) {\\n  assertSize(size);\\n\\n  if (size <= 0) {\\n    return createBuffer(that, size);\\n  }\\n\\n  if (fill !== undefined) {\\n    // Only pay attention to encoding if it's a string. This\\n    // prevents accidentally sending in a number that would\\n    // be interpretted as a start offset.\\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\\n  }\\n\\n  return createBuffer(that, size);\\n}\\n/**\\n * Creates a new filled Buffer instance.\\n * alloc(size[, fill[, encoding]])\\n **/\\n\\n\\nBuffer.alloc = function (size, fill, encoding) {\\n  return alloc(null, size, fill, encoding);\\n};\\n\\nfunction allocUnsafe(that, size) {\\n  assertSize(size);\\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\\n\\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\\n    for (var i = 0; i < size; ++i) {\\n      that[i] = 0;\\n    }\\n  }\\n\\n  return that;\\n}\\n/**\\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\\n * */\\n\\n\\nBuffer.allocUnsafe = function (size) {\\n  return allocUnsafe(null, size);\\n};\\n/**\\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\\n */\\n\\n\\nBuffer.allocUnsafeSlow = function (size) {\\n  return allocUnsafe(null, size);\\n};\\n\\nfunction fromString(that, string, encoding) {\\n  if (typeof encoding !== 'string' || encoding === '') {\\n    encoding = 'utf8';\\n  }\\n\\n  if (!Buffer.isEncoding(encoding)) {\\n    throw new TypeError('\\\"encoding\\\" must be a valid string encoding');\\n  }\\n\\n  var length = byteLength(string, encoding) | 0;\\n  that = createBuffer(that, length);\\n  var actual = that.write(string, encoding);\\n\\n  if (actual !== length) {\\n    // Writing a hex string, for example, that contains invalid characters will\\n    // cause everything after the first invalid character to be ignored. (e.g.\\n    // 'abxxcd' will be treated as 'ab')\\n    that = that.slice(0, actual);\\n  }\\n\\n  return that;\\n}\\n\\nfunction fromArrayLike(that, array) {\\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\\n  that = createBuffer(that, length);\\n\\n  for (var i = 0; i < length; i += 1) {\\n    that[i] = array[i] & 255;\\n  }\\n\\n  return that;\\n}\\n\\nfunction fromArrayBuffer(that, array, byteOffset, length) {\\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\\n\\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\\n    throw new RangeError('\\\\'offset\\\\' is out of bounds');\\n  }\\n\\n  if (array.byteLength < byteOffset + (length || 0)) {\\n    throw new RangeError('\\\\'length\\\\' is out of bounds');\\n  }\\n\\n  if (byteOffset === undefined && length === undefined) {\\n    array = new Uint8Array(array);\\n  } else if (length === undefined) {\\n    array = new Uint8Array(array, byteOffset);\\n  } else {\\n    array = new Uint8Array(array, byteOffset, length);\\n  }\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    // Return an augmented `Uint8Array` instance, for best performance\\n    that = array;\\n    that.__proto__ = Buffer.prototype;\\n  } else {\\n    // Fallback: Return an object instance of the Buffer class\\n    that = fromArrayLike(that, array);\\n  }\\n\\n  return that;\\n}\\n\\nfunction fromObject(that, obj) {\\n  if (Buffer.isBuffer(obj)) {\\n    var len = checked(obj.length) | 0;\\n    that = createBuffer(that, len);\\n\\n    if (that.length === 0) {\\n      return that;\\n    }\\n\\n    obj.copy(that, 0, 0, len);\\n    return that;\\n  }\\n\\n  if (obj) {\\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\\n        return createBuffer(that, 0);\\n      }\\n\\n      return fromArrayLike(that, obj);\\n    }\\n\\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\\n      return fromArrayLike(that, obj.data);\\n    }\\n  }\\n\\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\\n}\\n\\nfunction checked(length) {\\n  // Note: cannot use `length < kMaxLength()` here because that fails when\\n  // length is NaN (which is otherwise coerced to zero.)\\n  if (length >= kMaxLength()) {\\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\\n  }\\n\\n  return length | 0;\\n}\\n\\nfunction SlowBuffer(length) {\\n  if (+length != length) {\\n    // eslint-disable-line eqeqeq\\n    length = 0;\\n  }\\n\\n  return Buffer.alloc(+length);\\n}\\n\\nBuffer.isBuffer = function isBuffer(b) {\\n  return !!(b != null && b._isBuffer);\\n};\\n\\nBuffer.compare = function compare(a, b) {\\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\\n    throw new TypeError('Arguments must be Buffers');\\n  }\\n\\n  if (a === b) return 0;\\n  var x = a.length;\\n  var y = b.length;\\n\\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\\n    if (a[i] !== b[i]) {\\n      x = a[i];\\n      y = b[i];\\n      break;\\n    }\\n  }\\n\\n  if (x < y) return -1;\\n  if (y < x) return 1;\\n  return 0;\\n};\\n\\nBuffer.isEncoding = function isEncoding(encoding) {\\n  switch (String(encoding).toLowerCase()) {\\n    case 'hex':\\n    case 'utf8':\\n    case 'utf-8':\\n    case 'ascii':\\n    case 'latin1':\\n    case 'binary':\\n    case 'base64':\\n    case 'ucs2':\\n    case 'ucs-2':\\n    case 'utf16le':\\n    case 'utf-16le':\\n      return true;\\n\\n    default:\\n      return false;\\n  }\\n};\\n\\nBuffer.concat = function concat(list, length) {\\n  if (!isArray(list)) {\\n    throw new TypeError('\\\"list\\\" argument must be an Array of Buffers');\\n  }\\n\\n  if (list.length === 0) {\\n    return Buffer.alloc(0);\\n  }\\n\\n  var i;\\n\\n  if (length === undefined) {\\n    length = 0;\\n\\n    for (i = 0; i < list.length; ++i) {\\n      length += list[i].length;\\n    }\\n  }\\n\\n  var buffer = Buffer.allocUnsafe(length);\\n  var pos = 0;\\n\\n  for (i = 0; i < list.length; ++i) {\\n    var buf = list[i];\\n\\n    if (!Buffer.isBuffer(buf)) {\\n      throw new TypeError('\\\"list\\\" argument must be an Array of Buffers');\\n    }\\n\\n    buf.copy(buffer, pos);\\n    pos += buf.length;\\n  }\\n\\n  return buffer;\\n};\\n\\nfunction byteLength(string, encoding) {\\n  if (Buffer.isBuffer(string)) {\\n    return string.length;\\n  }\\n\\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\\n    return string.byteLength;\\n  }\\n\\n  if (typeof string !== 'string') {\\n    string = '' + string;\\n  }\\n\\n  var len = string.length;\\n  if (len === 0) return 0; // Use a for loop to avoid recursion\\n\\n  var loweredCase = false;\\n\\n  for (;;) {\\n    switch (encoding) {\\n      case 'ascii':\\n      case 'latin1':\\n      case 'binary':\\n        return len;\\n\\n      case 'utf8':\\n      case 'utf-8':\\n      case undefined:\\n        return utf8ToBytes(string).length;\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return len * 2;\\n\\n      case 'hex':\\n        return len >>> 1;\\n\\n      case 'base64':\\n        return base64ToBytes(string).length;\\n\\n      default:\\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\\n\\n        encoding = ('' + encoding).toLowerCase();\\n        loweredCase = true;\\n    }\\n  }\\n}\\n\\nBuffer.byteLength = byteLength;\\n\\nfunction slowToString(encoding, start, end) {\\n  var loweredCase = false; // No need to verify that \\\"this.length <= MAX_UINT32\\\" since it's a read-only\\n  // property of a typed array.\\n  // This behaves neither like String nor Uint8Array in that we set start/end\\n  // to their upper/lower bounds if the value passed is out of range.\\n  // undefined is handled specially as per ECMA-262 6th Edition,\\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\\n\\n  if (start === undefined || start < 0) {\\n    start = 0;\\n  } // Return early if start > this.length. Done here to prevent potential uint32\\n  // coercion fail below.\\n\\n\\n  if (start > this.length) {\\n    return '';\\n  }\\n\\n  if (end === undefined || end > this.length) {\\n    end = this.length;\\n  }\\n\\n  if (end <= 0) {\\n    return '';\\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\\n\\n\\n  end >>>= 0;\\n  start >>>= 0;\\n\\n  if (end <= start) {\\n    return '';\\n  }\\n\\n  if (!encoding) encoding = 'utf8';\\n\\n  while (true) {\\n    switch (encoding) {\\n      case 'hex':\\n        return hexSlice(this, start, end);\\n\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8Slice(this, start, end);\\n\\n      case 'ascii':\\n        return asciiSlice(this, start, end);\\n\\n      case 'latin1':\\n      case 'binary':\\n        return latin1Slice(this, start, end);\\n\\n      case 'base64':\\n        return base64Slice(this, start, end);\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return utf16leSlice(this, start, end);\\n\\n      default:\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\\n        encoding = (encoding + '').toLowerCase();\\n        loweredCase = true;\\n    }\\n  }\\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\\n// Buffer instances.\\n\\n\\nBuffer.prototype._isBuffer = true;\\n\\nfunction swap(b, n, m) {\\n  var i = b[n];\\n  b[n] = b[m];\\n  b[m] = i;\\n}\\n\\nBuffer.prototype.swap16 = function swap16() {\\n  var len = this.length;\\n\\n  if (len % 2 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\\n  }\\n\\n  for (var i = 0; i < len; i += 2) {\\n    swap(this, i, i + 1);\\n  }\\n\\n  return this;\\n};\\n\\nBuffer.prototype.swap32 = function swap32() {\\n  var len = this.length;\\n\\n  if (len % 4 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\\n  }\\n\\n  for (var i = 0; i < len; i += 4) {\\n    swap(this, i, i + 3);\\n    swap(this, i + 1, i + 2);\\n  }\\n\\n  return this;\\n};\\n\\nBuffer.prototype.swap64 = function swap64() {\\n  var len = this.length;\\n\\n  if (len % 8 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\\n  }\\n\\n  for (var i = 0; i < len; i += 8) {\\n    swap(this, i, i + 7);\\n    swap(this, i + 1, i + 6);\\n    swap(this, i + 2, i + 5);\\n    swap(this, i + 3, i + 4);\\n  }\\n\\n  return this;\\n};\\n\\nBuffer.prototype.toString = function toString() {\\n  var length = this.length | 0;\\n  if (length === 0) return '';\\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\\n  return slowToString.apply(this, arguments);\\n};\\n\\nBuffer.prototype.equals = function equals(b) {\\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\\n  if (this === b) return true;\\n  return Buffer.compare(this, b) === 0;\\n};\\n\\nBuffer.prototype.inspect = function inspect() {\\n  var str = '';\\n  var max = exports.INSPECT_MAX_BYTES;\\n\\n  if (this.length > 0) {\\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\\n    if (this.length > max) str += ' ... ';\\n  }\\n\\n  return '<Buffer ' + str + '>';\\n};\\n\\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\\n  if (!Buffer.isBuffer(target)) {\\n    throw new TypeError('Argument must be a Buffer');\\n  }\\n\\n  if (start === undefined) {\\n    start = 0;\\n  }\\n\\n  if (end === undefined) {\\n    end = target ? target.length : 0;\\n  }\\n\\n  if (thisStart === undefined) {\\n    thisStart = 0;\\n  }\\n\\n  if (thisEnd === undefined) {\\n    thisEnd = this.length;\\n  }\\n\\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\\n    throw new RangeError('out of range index');\\n  }\\n\\n  if (thisStart >= thisEnd && start >= end) {\\n    return 0;\\n  }\\n\\n  if (thisStart >= thisEnd) {\\n    return -1;\\n  }\\n\\n  if (start >= end) {\\n    return 1;\\n  }\\n\\n  start >>>= 0;\\n  end >>>= 0;\\n  thisStart >>>= 0;\\n  thisEnd >>>= 0;\\n  if (this === target) return 0;\\n  var x = thisEnd - thisStart;\\n  var y = end - start;\\n  var len = Math.min(x, y);\\n  var thisCopy = this.slice(thisStart, thisEnd);\\n  var targetCopy = target.slice(start, end);\\n\\n  for (var i = 0; i < len; ++i) {\\n    if (thisCopy[i] !== targetCopy[i]) {\\n      x = thisCopy[i];\\n      y = targetCopy[i];\\n      break;\\n    }\\n  }\\n\\n  if (x < y) return -1;\\n  if (y < x) return 1;\\n  return 0;\\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\\n//\\n// Arguments:\\n// - buffer - a Buffer to search\\n// - val - a string, Buffer, or number\\n// - byteOffset - an index into `buffer`; will be clamped to an int32\\n// - encoding - an optional encoding, relevant is val is a string\\n// - dir - true for indexOf, false for lastIndexOf\\n\\n\\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\\n  // Empty buffer means no match\\n  if (buffer.length === 0) return -1; // Normalize byteOffset\\n\\n  if (typeof byteOffset === 'string') {\\n    encoding = byteOffset;\\n    byteOffset = 0;\\n  } else if (byteOffset > 0x7fffffff) {\\n    byteOffset = 0x7fffffff;\\n  } else if (byteOffset < -0x80000000) {\\n    byteOffset = -0x80000000;\\n  }\\n\\n  byteOffset = +byteOffset; // Coerce to Number.\\n\\n  if (isNaN(byteOffset)) {\\n    // byteOffset: it it's undefined, null, NaN, \\\"foo\\\", etc, search whole buffer\\n    byteOffset = dir ? 0 : buffer.length - 1;\\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\\n\\n\\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\\n\\n  if (byteOffset >= buffer.length) {\\n    if (dir) return -1;else byteOffset = buffer.length - 1;\\n  } else if (byteOffset < 0) {\\n    if (dir) byteOffset = 0;else return -1;\\n  } // Normalize val\\n\\n\\n  if (typeof val === 'string') {\\n    val = Buffer.from(val, encoding);\\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\\n\\n\\n  if (Buffer.isBuffer(val)) {\\n    // Special case: looking for empty string/buffer always fails\\n    if (val.length === 0) {\\n      return -1;\\n    }\\n\\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\\n  } else if (typeof val === 'number') {\\n    val = val & 0xFF; // Search for a byte value [0-255]\\n\\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\\n      if (dir) {\\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\\n      } else {\\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\\n      }\\n    }\\n\\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\\n  }\\n\\n  throw new TypeError('val must be string, number or Buffer');\\n}\\n\\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\\n  var indexSize = 1;\\n  var arrLength = arr.length;\\n  var valLength = val.length;\\n\\n  if (encoding !== undefined) {\\n    encoding = String(encoding).toLowerCase();\\n\\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\\n      if (arr.length < 2 || val.length < 2) {\\n        return -1;\\n      }\\n\\n      indexSize = 2;\\n      arrLength /= 2;\\n      valLength /= 2;\\n      byteOffset /= 2;\\n    }\\n  }\\n\\n  function read(buf, i) {\\n    if (indexSize === 1) {\\n      return buf[i];\\n    } else {\\n      return buf.readUInt16BE(i * indexSize);\\n    }\\n  }\\n\\n  var i;\\n\\n  if (dir) {\\n    var foundIndex = -1;\\n\\n    for (i = byteOffset; i < arrLength; i++) {\\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\\n        if (foundIndex === -1) foundIndex = i;\\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\\n      } else {\\n        if (foundIndex !== -1) i -= i - foundIndex;\\n        foundIndex = -1;\\n      }\\n    }\\n  } else {\\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\\n\\n    for (i = byteOffset; i >= 0; i--) {\\n      var found = true;\\n\\n      for (var j = 0; j < valLength; j++) {\\n        if (read(arr, i + j) !== read(val, j)) {\\n          found = false;\\n          break;\\n        }\\n      }\\n\\n      if (found) return i;\\n    }\\n  }\\n\\n  return -1;\\n}\\n\\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\\n  return this.indexOf(val, byteOffset, encoding) !== -1;\\n};\\n\\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\\n};\\n\\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\\n};\\n\\nfunction hexWrite(buf, string, offset, length) {\\n  offset = Number(offset) || 0;\\n  var remaining = buf.length - offset;\\n\\n  if (!length) {\\n    length = remaining;\\n  } else {\\n    length = Number(length);\\n\\n    if (length > remaining) {\\n      length = remaining;\\n    }\\n  } // must be an even number of digits\\n\\n\\n  var strLen = string.length;\\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\\n\\n  if (length > strLen / 2) {\\n    length = strLen / 2;\\n  }\\n\\n  for (var i = 0; i < length; ++i) {\\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\\n    if (isNaN(parsed)) return i;\\n    buf[offset + i] = parsed;\\n  }\\n\\n  return i;\\n}\\n\\nfunction utf8Write(buf, string, offset, length) {\\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\\n}\\n\\nfunction asciiWrite(buf, string, offset, length) {\\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\\n}\\n\\nfunction latin1Write(buf, string, offset, length) {\\n  return asciiWrite(buf, string, offset, length);\\n}\\n\\nfunction base64Write(buf, string, offset, length) {\\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\\n}\\n\\nfunction ucs2Write(buf, string, offset, length) {\\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\\n}\\n\\nBuffer.prototype.write = function write(string, offset, length, encoding) {\\n  // Buffer#write(string)\\n  if (offset === undefined) {\\n    encoding = 'utf8';\\n    length = this.length;\\n    offset = 0; // Buffer#write(string, encoding)\\n  } else if (length === undefined && typeof offset === 'string') {\\n    encoding = offset;\\n    length = this.length;\\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\\n  } else if (isFinite(offset)) {\\n    offset = offset | 0;\\n\\n    if (isFinite(length)) {\\n      length = length | 0;\\n      if (encoding === undefined) encoding = 'utf8';\\n    } else {\\n      encoding = length;\\n      length = undefined;\\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\\n\\n  } else {\\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\\n  }\\n\\n  var remaining = this.length - offset;\\n  if (length === undefined || length > remaining) length = remaining;\\n\\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\\n    throw new RangeError('Attempt to write outside buffer bounds');\\n  }\\n\\n  if (!encoding) encoding = 'utf8';\\n  var loweredCase = false;\\n\\n  for (;;) {\\n    switch (encoding) {\\n      case 'hex':\\n        return hexWrite(this, string, offset, length);\\n\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8Write(this, string, offset, length);\\n\\n      case 'ascii':\\n        return asciiWrite(this, string, offset, length);\\n\\n      case 'latin1':\\n      case 'binary':\\n        return latin1Write(this, string, offset, length);\\n\\n      case 'base64':\\n        // Warning: maxLength not taken into account in base64Write\\n        return base64Write(this, string, offset, length);\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return ucs2Write(this, string, offset, length);\\n\\n      default:\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\\n        encoding = ('' + encoding).toLowerCase();\\n        loweredCase = true;\\n    }\\n  }\\n};\\n\\nBuffer.prototype.toJSON = function toJSON() {\\n  return {\\n    type: 'Buffer',\\n    data: Array.prototype.slice.call(this._arr || this, 0)\\n  };\\n};\\n\\nfunction base64Slice(buf, start, end) {\\n  if (start === 0 && end === buf.length) {\\n    return base64.fromByteArray(buf);\\n  } else {\\n    return base64.fromByteArray(buf.slice(start, end));\\n  }\\n}\\n\\nfunction utf8Slice(buf, start, end) {\\n  end = Math.min(buf.length, end);\\n  var res = [];\\n  var i = start;\\n\\n  while (i < end) {\\n    var firstByte = buf[i];\\n    var codePoint = null;\\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\\n\\n    if (i + bytesPerSequence <= end) {\\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\\n\\n      switch (bytesPerSequence) {\\n        case 1:\\n          if (firstByte < 0x80) {\\n            codePoint = firstByte;\\n          }\\n\\n          break;\\n\\n        case 2:\\n          secondByte = buf[i + 1];\\n\\n          if ((secondByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\\n\\n            if (tempCodePoint > 0x7F) {\\n              codePoint = tempCodePoint;\\n            }\\n          }\\n\\n          break;\\n\\n        case 3:\\n          secondByte = buf[i + 1];\\n          thirdByte = buf[i + 2];\\n\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\\n\\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\\n              codePoint = tempCodePoint;\\n            }\\n          }\\n\\n          break;\\n\\n        case 4:\\n          secondByte = buf[i + 1];\\n          thirdByte = buf[i + 2];\\n          fourthByte = buf[i + 3];\\n\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\\n\\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\\n              codePoint = tempCodePoint;\\n            }\\n          }\\n\\n      }\\n    }\\n\\n    if (codePoint === null) {\\n      // we did not generate a valid codePoint so insert a\\n      // replacement char (U+FFFD) and advance only 1 byte\\n      codePoint = 0xFFFD;\\n      bytesPerSequence = 1;\\n    } else if (codePoint > 0xFFFF) {\\n      // encode to utf16 (surrogate pair dance)\\n      codePoint -= 0x10000;\\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\\n      codePoint = 0xDC00 | codePoint & 0x3FF;\\n    }\\n\\n    res.push(codePoint);\\n    i += bytesPerSequence;\\n  }\\n\\n  return decodeCodePointsArray(res);\\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\\n// the lowest limit is Chrome, with 0x10000 args.\\n// We go 1 magnitude less, for safety\\n\\n\\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\\n\\nfunction decodeCodePointsArray(codePoints) {\\n  var len = codePoints.length;\\n\\n  if (len <= MAX_ARGUMENTS_LENGTH) {\\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\\n  } // Decode in chunks to avoid \\\"call stack size exceeded\\\".\\n\\n\\n  var res = '';\\n  var i = 0;\\n\\n  while (i < len) {\\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\\n  }\\n\\n  return res;\\n}\\n\\nfunction asciiSlice(buf, start, end) {\\n  var ret = '';\\n  end = Math.min(buf.length, end);\\n\\n  for (var i = start; i < end; ++i) {\\n    ret += String.fromCharCode(buf[i] & 0x7F);\\n  }\\n\\n  return ret;\\n}\\n\\nfunction latin1Slice(buf, start, end) {\\n  var ret = '';\\n  end = Math.min(buf.length, end);\\n\\n  for (var i = start; i < end; ++i) {\\n    ret += String.fromCharCode(buf[i]);\\n  }\\n\\n  return ret;\\n}\\n\\nfunction hexSlice(buf, start, end) {\\n  var len = buf.length;\\n  if (!start || start < 0) start = 0;\\n  if (!end || end < 0 || end > len) end = len;\\n  var out = '';\\n\\n  for (var i = start; i < end; ++i) {\\n    out += toHex(buf[i]);\\n  }\\n\\n  return out;\\n}\\n\\nfunction utf16leSlice(buf, start, end) {\\n  var bytes = buf.slice(start, end);\\n  var res = '';\\n\\n  for (var i = 0; i < bytes.length; i += 2) {\\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\\n  }\\n\\n  return res;\\n}\\n\\nBuffer.prototype.slice = function slice(start, end) {\\n  var len = this.length;\\n  start = ~~start;\\n  end = end === undefined ? len : ~~end;\\n\\n  if (start < 0) {\\n    start += len;\\n    if (start < 0) start = 0;\\n  } else if (start > len) {\\n    start = len;\\n  }\\n\\n  if (end < 0) {\\n    end += len;\\n    if (end < 0) end = 0;\\n  } else if (end > len) {\\n    end = len;\\n  }\\n\\n  if (end < start) end = start;\\n  var newBuf;\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    newBuf = this.subarray(start, end);\\n    newBuf.__proto__ = Buffer.prototype;\\n  } else {\\n    var sliceLen = end - start;\\n    newBuf = new Buffer(sliceLen, undefined);\\n\\n    for (var i = 0; i < sliceLen; ++i) {\\n      newBuf[i] = this[i + start];\\n    }\\n  }\\n\\n  return newBuf;\\n};\\n/*\\n * Need to make sure that buffer isn't trying to write out of bounds.\\n */\\n\\n\\nfunction checkOffset(offset, ext, length) {\\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\\n}\\n\\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\\n  offset = offset | 0;\\n  byteLength = byteLength | 0;\\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\\n  var val = this[offset];\\n  var mul = 1;\\n  var i = 0;\\n\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    val += this[offset + i] * mul;\\n  }\\n\\n  return val;\\n};\\n\\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\\n  offset = offset | 0;\\n  byteLength = byteLength | 0;\\n\\n  if (!noAssert) {\\n    checkOffset(offset, byteLength, this.length);\\n  }\\n\\n  var val = this[offset + --byteLength];\\n  var mul = 1;\\n\\n  while (byteLength > 0 && (mul *= 0x100)) {\\n    val += this[offset + --byteLength] * mul;\\n  }\\n\\n  return val;\\n};\\n\\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 1, this.length);\\n  return this[offset];\\n};\\n\\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 2, this.length);\\n  return this[offset] | this[offset + 1] << 8;\\n};\\n\\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 2, this.length);\\n  return this[offset] << 8 | this[offset + 1];\\n};\\n\\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length);\\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\\n};\\n\\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length);\\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\\n};\\n\\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\\n  offset = offset | 0;\\n  byteLength = byteLength | 0;\\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\\n  var val = this[offset];\\n  var mul = 1;\\n  var i = 0;\\n\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    val += this[offset + i] * mul;\\n  }\\n\\n  mul *= 0x80;\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\\n  return val;\\n};\\n\\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\\n  offset = offset | 0;\\n  byteLength = byteLength | 0;\\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\\n  var i = byteLength;\\n  var mul = 1;\\n  var val = this[offset + --i];\\n\\n  while (i > 0 && (mul *= 0x100)) {\\n    val += this[offset + --i] * mul;\\n  }\\n\\n  mul *= 0x80;\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\\n  return val;\\n};\\n\\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 1, this.length);\\n  if (!(this[offset] & 0x80)) return this[offset];\\n  return (0xff - this[offset] + 1) * -1;\\n};\\n\\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 2, this.length);\\n  var val = this[offset] | this[offset + 1] << 8;\\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\\n};\\n\\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 2, this.length);\\n  var val = this[offset + 1] | this[offset] << 8;\\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\\n};\\n\\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length);\\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\\n};\\n\\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length);\\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\\n};\\n\\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length);\\n  return ieee754.read(this, offset, true, 23, 4);\\n};\\n\\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length);\\n  return ieee754.read(this, offset, false, 23, 4);\\n};\\n\\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 8, this.length);\\n  return ieee754.read(this, offset, true, 52, 8);\\n};\\n\\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 8, this.length);\\n  return ieee754.read(this, offset, false, 52, 8);\\n};\\n\\nfunction checkInt(buf, value, offset, ext, max, min) {\\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\\\"buffer\\\" argument must be a Buffer instance');\\n  if (value > max || value < min) throw new RangeError('\\\"value\\\" argument is out of bounds');\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\\n}\\n\\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  byteLength = byteLength | 0;\\n\\n  if (!noAssert) {\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\\n  }\\n\\n  var mul = 1;\\n  var i = 0;\\n  this[offset] = value & 0xFF;\\n\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    this[offset + i] = value / mul & 0xFF;\\n  }\\n\\n  return offset + byteLength;\\n};\\n\\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  byteLength = byteLength | 0;\\n\\n  if (!noAssert) {\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\\n  }\\n\\n  var i = byteLength - 1;\\n  var mul = 1;\\n  this[offset + i] = value & 0xFF;\\n\\n  while (--i >= 0 && (mul *= 0x100)) {\\n    this[offset + i] = value / mul & 0xFF;\\n  }\\n\\n  return offset + byteLength;\\n};\\n\\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\\n  this[offset] = value & 0xff;\\n  return offset + 1;\\n};\\n\\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\\n  if (value < 0) value = 0xffff + value + 1;\\n\\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\\n  }\\n}\\n\\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = value & 0xff;\\n    this[offset + 1] = value >>> 8;\\n  } else {\\n    objectWriteUInt16(this, value, offset, true);\\n  }\\n\\n  return offset + 2;\\n};\\n\\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = value >>> 8;\\n    this[offset + 1] = value & 0xff;\\n  } else {\\n    objectWriteUInt16(this, value, offset, false);\\n  }\\n\\n  return offset + 2;\\n};\\n\\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\\n  if (value < 0) value = 0xffffffff + value + 1;\\n\\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\\n  }\\n}\\n\\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset + 3] = value >>> 24;\\n    this[offset + 2] = value >>> 16;\\n    this[offset + 1] = value >>> 8;\\n    this[offset] = value & 0xff;\\n  } else {\\n    objectWriteUInt32(this, value, offset, true);\\n  }\\n\\n  return offset + 4;\\n};\\n\\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = value >>> 24;\\n    this[offset + 1] = value >>> 16;\\n    this[offset + 2] = value >>> 8;\\n    this[offset + 3] = value & 0xff;\\n  } else {\\n    objectWriteUInt32(this, value, offset, false);\\n  }\\n\\n  return offset + 4;\\n};\\n\\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n\\n  if (!noAssert) {\\n    var limit = Math.pow(2, 8 * byteLength - 1);\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\\n  }\\n\\n  var i = 0;\\n  var mul = 1;\\n  var sub = 0;\\n  this[offset] = value & 0xFF;\\n\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\\n      sub = 1;\\n    }\\n\\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\\n  }\\n\\n  return offset + byteLength;\\n};\\n\\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n\\n  if (!noAssert) {\\n    var limit = Math.pow(2, 8 * byteLength - 1);\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\\n  }\\n\\n  var i = byteLength - 1;\\n  var mul = 1;\\n  var sub = 0;\\n  this[offset + i] = value & 0xFF;\\n\\n  while (--i >= 0 && (mul *= 0x100)) {\\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\\n      sub = 1;\\n    }\\n\\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\\n  }\\n\\n  return offset + byteLength;\\n};\\n\\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\\n  if (value < 0) value = 0xff + value + 1;\\n  this[offset] = value & 0xff;\\n  return offset + 1;\\n};\\n\\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = value & 0xff;\\n    this[offset + 1] = value >>> 8;\\n  } else {\\n    objectWriteUInt16(this, value, offset, true);\\n  }\\n\\n  return offset + 2;\\n};\\n\\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = value >>> 8;\\n    this[offset + 1] = value & 0xff;\\n  } else {\\n    objectWriteUInt16(this, value, offset, false);\\n  }\\n\\n  return offset + 2;\\n};\\n\\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = value & 0xff;\\n    this[offset + 1] = value >>> 8;\\n    this[offset + 2] = value >>> 16;\\n    this[offset + 3] = value >>> 24;\\n  } else {\\n    objectWriteUInt32(this, value, offset, true);\\n  }\\n\\n  return offset + 4;\\n};\\n\\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\\n  value = +value;\\n  offset = offset | 0;\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\\n  if (value < 0) value = 0xffffffff + value + 1;\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = value >>> 24;\\n    this[offset + 1] = value >>> 16;\\n    this[offset + 2] = value >>> 8;\\n    this[offset + 3] = value & 0xff;\\n  } else {\\n    objectWriteUInt32(this, value, offset, false);\\n  }\\n\\n  return offset + 4;\\n};\\n\\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\\n  if (offset < 0) throw new RangeError('Index out of range');\\n}\\n\\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\\n  if (!noAssert) {\\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\\n  }\\n\\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\\n  return offset + 4;\\n}\\n\\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\\n  return writeFloat(this, value, offset, true, noAssert);\\n};\\n\\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\\n  return writeFloat(this, value, offset, false, noAssert);\\n};\\n\\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\\n  if (!noAssert) {\\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\\n  }\\n\\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\\n  return offset + 8;\\n}\\n\\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\\n  return writeDouble(this, value, offset, true, noAssert);\\n};\\n\\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\\n  return writeDouble(this, value, offset, false, noAssert);\\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\\n\\n\\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\\n  if (!start) start = 0;\\n  if (!end && end !== 0) end = this.length;\\n  if (targetStart >= target.length) targetStart = target.length;\\n  if (!targetStart) targetStart = 0;\\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\\n\\n  if (end === start) return 0;\\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\\n\\n  if (targetStart < 0) {\\n    throw new RangeError('targetStart out of bounds');\\n  }\\n\\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\\n\\n  if (end > this.length) end = this.length;\\n\\n  if (target.length - targetStart < end - start) {\\n    end = target.length - targetStart + start;\\n  }\\n\\n  var len = end - start;\\n  var i;\\n\\n  if (this === target && start < targetStart && targetStart < end) {\\n    // descending copy from end\\n    for (i = len - 1; i >= 0; --i) {\\n      target[i + targetStart] = this[i + start];\\n    }\\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\\n    // ascending copy from start\\n    for (i = 0; i < len; ++i) {\\n      target[i + targetStart] = this[i + start];\\n    }\\n  } else {\\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\\n  }\\n\\n  return len;\\n}; // Usage:\\n//    buffer.fill(number[, offset[, end]])\\n//    buffer.fill(buffer[, offset[, end]])\\n//    buffer.fill(string[, offset[, end]][, encoding])\\n\\n\\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\\n  // Handle string cases:\\n  if (typeof val === 'string') {\\n    if (typeof start === 'string') {\\n      encoding = start;\\n      start = 0;\\n      end = this.length;\\n    } else if (typeof end === 'string') {\\n      encoding = end;\\n      end = this.length;\\n    }\\n\\n    if (val.length === 1) {\\n      var code = val.charCodeAt(0);\\n\\n      if (code < 256) {\\n        val = code;\\n      }\\n    }\\n\\n    if (encoding !== undefined && typeof encoding !== 'string') {\\n      throw new TypeError('encoding must be a string');\\n    }\\n\\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\\n      throw new TypeError('Unknown encoding: ' + encoding);\\n    }\\n  } else if (typeof val === 'number') {\\n    val = val & 255;\\n  } // Invalid ranges are not set to a default, so can range check early.\\n\\n\\n  if (start < 0 || this.length < start || this.length < end) {\\n    throw new RangeError('Out of range index');\\n  }\\n\\n  if (end <= start) {\\n    return this;\\n  }\\n\\n  start = start >>> 0;\\n  end = end === undefined ? this.length : end >>> 0;\\n  if (!val) val = 0;\\n  var i;\\n\\n  if (typeof val === 'number') {\\n    for (i = start; i < end; ++i) {\\n      this[i] = val;\\n    }\\n  } else {\\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\\n    var len = bytes.length;\\n\\n    for (i = 0; i < end - start; ++i) {\\n      this[i + start] = bytes[i % len];\\n    }\\n  }\\n\\n  return this;\\n}; // HELPER FUNCTIONS\\n// ================\\n\\n\\nvar INVALID_BASE64_RE = /[^+\\\\/0-9A-Za-z-_]/g;\\n\\nfunction base64clean(str) {\\n  // Node strips out invalid characters like \\\\n and \\\\t from the string, base64-js does not\\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\\n\\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\\n\\n  while (str.length % 4 !== 0) {\\n    str = str + '=';\\n  }\\n\\n  return str;\\n}\\n\\nfunction stringtrim(str) {\\n  if (str.trim) return str.trim();\\n  return str.replace(/^\\\\s+|\\\\s+$/g, '');\\n}\\n\\nfunction toHex(n) {\\n  if (n < 16) return '0' + n.toString(16);\\n  return n.toString(16);\\n}\\n\\nfunction utf8ToBytes(string, units) {\\n  units = units || Infinity;\\n  var codePoint;\\n  var length = string.length;\\n  var leadSurrogate = null;\\n  var bytes = [];\\n\\n  for (var i = 0; i < length; ++i) {\\n    codePoint = string.charCodeAt(i); // is surrogate component\\n\\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\\n      // last char was a lead\\n      if (!leadSurrogate) {\\n        // no lead yet\\n        if (codePoint > 0xDBFF) {\\n          // unexpected trail\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\\n          continue;\\n        } else if (i + 1 === length) {\\n          // unpaired lead\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\\n          continue;\\n        } // valid lead\\n\\n\\n        leadSurrogate = codePoint;\\n        continue;\\n      } // 2 leads in a row\\n\\n\\n      if (codePoint < 0xDC00) {\\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\\n        leadSurrogate = codePoint;\\n        continue;\\n      } // valid surrogate pair\\n\\n\\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\\n    } else if (leadSurrogate) {\\n      // valid bmp char, but last char was a lead\\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\\n    }\\n\\n    leadSurrogate = null; // encode utf8\\n\\n    if (codePoint < 0x80) {\\n      if ((units -= 1) < 0) break;\\n      bytes.push(codePoint);\\n    } else if (codePoint < 0x800) {\\n      if ((units -= 2) < 0) break;\\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\\n    } else if (codePoint < 0x10000) {\\n      if ((units -= 3) < 0) break;\\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\\n    } else if (codePoint < 0x110000) {\\n      if ((units -= 4) < 0) break;\\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\\n    } else {\\n      throw new Error('Invalid code point');\\n    }\\n  }\\n\\n  return bytes;\\n}\\n\\nfunction asciiToBytes(str) {\\n  var byteArray = [];\\n\\n  for (var i = 0; i < str.length; ++i) {\\n    // Node's code seems to be doing this and not & 0x7F..\\n    byteArray.push(str.charCodeAt(i) & 0xFF);\\n  }\\n\\n  return byteArray;\\n}\\n\\nfunction utf16leToBytes(str, units) {\\n  var c, hi, lo;\\n  var byteArray = [];\\n\\n  for (var i = 0; i < str.length; ++i) {\\n    if ((units -= 2) < 0) break;\\n    c = str.charCodeAt(i);\\n    hi = c >> 8;\\n    lo = c % 256;\\n    byteArray.push(lo);\\n    byteArray.push(hi);\\n  }\\n\\n  return byteArray;\\n}\\n\\nfunction base64ToBytes(str) {\\n  return base64.toByteArray(base64clean(str));\\n}\\n\\nfunction blitBuffer(src, dst, offset, length) {\\n  for (var i = 0; i < length; ++i) {\\n    if (i + offset >= dst.length || i >= src.length) break;\\n    dst[i + offset] = src[i];\\n  }\\n\\n  return i;\\n}\\n\\nfunction isnan(val) {\\n  return val !== val; // eslint-disable-line no-self-compare\\n}\",\"'use strict';\\n\\nexports.byteLength = byteLength;\\nexports.toByteArray = toByteArray;\\nexports.fromByteArray = fromByteArray;\\nvar lookup = [];\\nvar revLookup = [];\\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n\\nfor (var i = 0, len = code.length; i < len; ++i) {\\n  lookup[i] = code[i];\\n  revLookup[code.charCodeAt(i)] = i;\\n} // Support decoding URL-safe base64 strings, as Node.js does.\\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\\n\\n\\nrevLookup['-'.charCodeAt(0)] = 62;\\nrevLookup['_'.charCodeAt(0)] = 63;\\n\\nfunction getLens(b64) {\\n  var len = b64.length;\\n\\n  if (len % 4 > 0) {\\n    throw new Error('Invalid string. Length must be a multiple of 4');\\n  } // Trim off extra bytes after placeholder bytes are found\\n  // See: https://github.com/beatgammit/base64-js/issues/42\\n\\n\\n  var validLen = b64.indexOf('=');\\n  if (validLen === -1) validLen = len;\\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\\n  return [validLen, placeHoldersLen];\\n} // base64 is 4/3 + up to two characters of the original data\\n\\n\\nfunction byteLength(b64) {\\n  var lens = getLens(b64);\\n  var validLen = lens[0];\\n  var placeHoldersLen = lens[1];\\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\\n}\\n\\nfunction _byteLength(b64, validLen, placeHoldersLen) {\\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\\n}\\n\\nfunction toByteArray(b64) {\\n  var tmp;\\n  var lens = getLens(b64);\\n  var validLen = lens[0];\\n  var placeHoldersLen = lens[1];\\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\\n\\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\\n\\n  for (var i = 0; i < len; i += 4) {\\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\\n    arr[curByte++] = tmp >> 16 & 0xFF;\\n    arr[curByte++] = tmp >> 8 & 0xFF;\\n    arr[curByte++] = tmp & 0xFF;\\n  }\\n\\n  if (placeHoldersLen === 2) {\\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\\n    arr[curByte++] = tmp & 0xFF;\\n  }\\n\\n  if (placeHoldersLen === 1) {\\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\\n    arr[curByte++] = tmp >> 8 & 0xFF;\\n    arr[curByte++] = tmp & 0xFF;\\n  }\\n\\n  return arr;\\n}\\n\\nfunction tripletToBase64(num) {\\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\\n}\\n\\nfunction encodeChunk(uint8, start, end) {\\n  var tmp;\\n  var output = [];\\n\\n  for (var i = start; i < end; i += 3) {\\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\\n    output.push(tripletToBase64(tmp));\\n  }\\n\\n  return output.join('');\\n}\\n\\nfunction fromByteArray(uint8) {\\n  var tmp;\\n  var len = uint8.length;\\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\\n\\n  var parts = [];\\n  var maxChunkLength = 16383; // must be multiple of 3\\n  // go through the array every three bytes, we'll deal with trailing stuff later\\n\\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\\n  } // pad the end with zeros, but make sure to not forget the extra bytes\\n\\n\\n  if (extraBytes === 1) {\\n    tmp = uint8[len - 1];\\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\\n  } else if (extraBytes === 2) {\\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\\n  }\\n\\n  return parts.join('');\\n}\",\"exports.read = function (buffer, offset, isLE, mLen, nBytes) {\\n  var e, m;\\n  var eLen = nBytes * 8 - mLen - 1;\\n  var eMax = (1 << eLen) - 1;\\n  var eBias = eMax >> 1;\\n  var nBits = -7;\\n  var i = isLE ? nBytes - 1 : 0;\\n  var d = isLE ? -1 : 1;\\n  var s = buffer[offset + i];\\n  i += d;\\n  e = s & (1 << -nBits) - 1;\\n  s >>= -nBits;\\n  nBits += eLen;\\n\\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  m = e & (1 << -nBits) - 1;\\n  e >>= -nBits;\\n  nBits += mLen;\\n\\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  if (e === 0) {\\n    e = 1 - eBias;\\n  } else if (e === eMax) {\\n    return m ? NaN : (s ? -1 : 1) * Infinity;\\n  } else {\\n    m = m + Math.pow(2, mLen);\\n    e = e - eBias;\\n  }\\n\\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\\n};\\n\\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\\n  var e, m, c;\\n  var eLen = nBytes * 8 - mLen - 1;\\n  var eMax = (1 << eLen) - 1;\\n  var eBias = eMax >> 1;\\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\\n  var i = isLE ? 0 : nBytes - 1;\\n  var d = isLE ? 1 : -1;\\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\\n  value = Math.abs(value);\\n\\n  if (isNaN(value) || value === Infinity) {\\n    m = isNaN(value) ? 1 : 0;\\n    e = eMax;\\n  } else {\\n    e = Math.floor(Math.log(value) / Math.LN2);\\n\\n    if (value * (c = Math.pow(2, -e)) < 1) {\\n      e--;\\n      c *= 2;\\n    }\\n\\n    if (e + eBias >= 1) {\\n      value += rt / c;\\n    } else {\\n      value += rt * Math.pow(2, 1 - eBias);\\n    }\\n\\n    if (value * c >= 2) {\\n      e++;\\n      c /= 2;\\n    }\\n\\n    if (e + eBias >= eMax) {\\n      m = 0;\\n      e = eMax;\\n    } else if (e + eBias >= 1) {\\n      m = (value * c - 1) * Math.pow(2, mLen);\\n      e = e + eBias;\\n    } else {\\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\\n      e = 0;\\n    }\\n  }\\n\\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\\n\\n  e = e << mLen | m;\\n  eLen += mLen;\\n\\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\\n\\n  buffer[offset + i - d] |= s * 128;\\n};\",\"var toString = {}.toString;\\n\\nmodule.exports = Array.isArray || function (arr) {\\n  return toString.call(arr) == '[object Array]';\\n};\",\"// shim for using process in browser\\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n  throw new Error('setTimeout has not been defined');\\n}\\n\\nfunction defaultClearTimeout() {\\n  throw new Error('clearTimeout has not been defined');\\n}\\n\\n(function () {\\n  try {\\n    if (typeof setTimeout === 'function') {\\n      cachedSetTimeout = setTimeout;\\n    } else {\\n      cachedSetTimeout = defaultSetTimout;\\n    }\\n  } catch (e) {\\n    cachedSetTimeout = defaultSetTimout;\\n  }\\n\\n  try {\\n    if (typeof clearTimeout === 'function') {\\n      cachedClearTimeout = clearTimeout;\\n    } else {\\n      cachedClearTimeout = defaultClearTimeout;\\n    }\\n  } catch (e) {\\n    cachedClearTimeout = defaultClearTimeout;\\n  }\\n})();\\n\\nfunction runTimeout(fun) {\\n  if (cachedSetTimeout === setTimeout) {\\n    //normal enviroments in sane situations\\n    return setTimeout(fun, 0);\\n  } // if setTimeout wasn't available but was latter defined\\n\\n\\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n    cachedSetTimeout = setTimeout;\\n    return setTimeout(fun, 0);\\n  }\\n\\n  try {\\n    // when when somebody has screwed with setTimeout but no I.E. maddness\\n    return cachedSetTimeout(fun, 0);\\n  } catch (e) {\\n    try {\\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n      return cachedSetTimeout.call(null, fun, 0);\\n    } catch (e) {\\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n      return cachedSetTimeout.call(this, fun, 0);\\n    }\\n  }\\n}\\n\\nfunction runClearTimeout(marker) {\\n  if (cachedClearTimeout === clearTimeout) {\\n    //normal enviroments in sane situations\\n    return clearTimeout(marker);\\n  } // if clearTimeout wasn't available but was latter defined\\n\\n\\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n    cachedClearTimeout = clearTimeout;\\n    return clearTimeout(marker);\\n  }\\n\\n  try {\\n    // when when somebody has screwed with setTimeout but no I.E. maddness\\n    return cachedClearTimeout(marker);\\n  } catch (e) {\\n    try {\\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n      return cachedClearTimeout.call(null, marker);\\n    } catch (e) {\\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n      return cachedClearTimeout.call(this, marker);\\n    }\\n  }\\n}\\n\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n  if (!draining || !currentQueue) {\\n    return;\\n  }\\n\\n  draining = false;\\n\\n  if (currentQueue.length) {\\n    queue = currentQueue.concat(queue);\\n  } else {\\n    queueIndex = -1;\\n  }\\n\\n  if (queue.length) {\\n    drainQueue();\\n  }\\n}\\n\\nfunction drainQueue() {\\n  if (draining) {\\n    return;\\n  }\\n\\n  var timeout = runTimeout(cleanUpNextTick);\\n  draining = true;\\n  var len = queue.length;\\n\\n  while (len) {\\n    currentQueue = queue;\\n    queue = [];\\n\\n    while (++queueIndex < len) {\\n      if (currentQueue) {\\n        currentQueue[queueIndex].run();\\n      }\\n    }\\n\\n    queueIndex = -1;\\n    len = queue.length;\\n  }\\n\\n  currentQueue = null;\\n  draining = false;\\n  runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n  var args = new Array(arguments.length - 1);\\n\\n  if (arguments.length > 1) {\\n    for (var i = 1; i < arguments.length; i++) {\\n      args[i - 1] = arguments[i];\\n    }\\n  }\\n\\n  queue.push(new Item(fun, args));\\n\\n  if (queue.length === 1 && !draining) {\\n    runTimeout(drainQueue);\\n  }\\n}; // v8 likes predictible objects\\n\\n\\nfunction Item(fun, array) {\\n  this.fun = fun;\\n  this.array = array;\\n}\\n\\nItem.prototype.run = function () {\\n  this.fun.apply(null, this.array);\\n};\\n\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\n\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\nprocess.prependListener = noop;\\nprocess.prependOnceListener = noop;\\n\\nprocess.listeners = function (name) {\\n  return [];\\n};\\n\\nprocess.binding = function (name) {\\n  throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () {\\n  return '/';\\n};\\n\\nprocess.chdir = function (dir) {\\n  throw new Error('process.chdir is not supported');\\n};\\n\\nprocess.umask = function () {\\n  return 0;\\n};\"]}","code":"!function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){\"undefined\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"===typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"/\",r(r.s=1)}([function(e,t){var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(a){\"object\"===typeof window&&(r=window)}e.exports=r},function(e,t,r){\"use strict\";(\"undefined\"!==typeof window?window:{}).pdfjsWorker=r(2)},function(e,t,r){(function(t,r,a){var n;n=function(){return function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){\"undefined\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"===typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";var a=r(1);t.WorkerMessageHandler=a.WorkerMessageHandler},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WorkerMessageHandler=t.WorkerTask=void 0;var a=l(r(2)),n=r(6),i=r(151),o=l(r(9)),s=r(189),c=r(155);function l(e){return e&&e.__esModule?e:{default:e}}function u(e){return(u=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function h(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(c){n=!0,i=c}finally{try{a||null==s.return||s.return()}finally{if(n)throw i}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function f(e,t,r,a,n,i,o){try{var s=e[i](o),c=s.value}catch(l){return void r(l)}s.done?t(c):Promise.resolve(c).then(a,n)}var d=function(){function e(e){this.name=e,this.terminated=!1,this._capability=(0,n.createPromiseCapability)()}return e.prototype={get finished(){return this._capability.promise},finish:function(){this._capability.resolve()},terminate:function(){this.terminated=!0},ensureNotTerminated:function(){if(this.terminated)throw new Error(\"Worker task was terminated\")}},e}();t.WorkerTask=d;var g,p=function(){function e(e){this._msgHandler=e,this._contentLength=null,this._fullRequestReader=null,this._rangeRequestReaders=[]}function t(e){var t=this;this._msgHandler=e,this._contentLength=null,this._isRangeSupported=!1,this._isStreamingSupported=!1;var r=this._msgHandler.sendWithStream(\"GetReader\");this._reader=r.getReader(),this._headersReady=this._msgHandler.sendWithPromise(\"ReaderHeadersReady\").then(function(e){t._isStreamingSupported=e.isStreamingSupported,t._isRangeSupported=e.isRangeSupported,t._contentLength=e.contentLength})}function r(e,t,r){this._msgHandler=r,this.onProgress=null;var a=this._msgHandler.sendWithStream(\"GetRangeReader\",{begin:e,end:t});this._reader=a.getReader()}return e.prototype={getFullReader:function(){return(0,n.assert)(!this._fullRequestReader),this._fullRequestReader=new t(this._msgHandler),this._fullRequestReader},getRangeReader:function(e,t){var a=new r(e,t,this._msgHandler);return this._rangeRequestReaders.push(a),a},cancelAllRequests:function(e){this._fullRequestReader&&this._fullRequestReader.cancel(e),this._rangeRequestReaders.slice(0).forEach(function(t){t.cancel(e)})}},t.prototype={get headersReady(){return this._headersReady},get contentLength(){return this._contentLength},get isStreamingSupported(){return this._isStreamingSupported},get isRangeSupported(){return this._isRangeSupported},read:function(){return this._reader.read().then(function(e){var t=e.value;return e.done?{value:void 0,done:!0}:{value:t.buffer,done:!1}})},cancel:function(e){this._reader.cancel(e)}},r.prototype={get isStreamingSupported(){return!1},read:function(){return this._reader.read().then(function(e){var t=e.value;return e.done?{value:void 0,done:!0}:{value:t.buffer,done:!1}})},cancel:function(e){this._reader.cancel(e)}},e}(),m={setup:function(e,t){var r=!1;e.on(\"test\",function(t){if(!r)if(r=!0,t instanceof Uint8Array){var a=255===t[0];e.postMessageTransfers=a;var n=new XMLHttpRequest,i=\"response\"in n;try{n.responseType}catch(o){i=!1}i?e.send(\"test\",{supportTypedArray:!0,supportTransfers:a}):e.send(\"test\",!1)}else e.send(\"test\",!1)}),e.on(\"configure\",function(e){(0,n.setVerbosityLevel)(e.verbosity)}),e.on(\"GetDocRequest\",function(e){return m.createDocumentHandler(e,t)})},createDocumentHandler:function(e,t){var r,o=!1,l=null,g=[],m=e.apiVersion;if(\"2.1.266\"!==m)throw new Error('The API version \"'.concat(m,'\" does not match ')+'the Worker version \"'.concat(\"2.1.266\",'\".'));var v=e.docId,b=e.docBaseUrl,y=e.docId+\"_worker\",w=new s.MessageHandler(y,v,t);function k(){if(o)throw new Error(\"Worker was terminated\")}function S(e){g.push(e)}function C(e){e.finish();var t=g.indexOf(e);g.splice(t,1)}function x(e){return A.apply(this,arguments)}function A(){var e;return e=a.default.mark(function e(t){var n,i,o,s;return a.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.ensureDoc(\"checkHeader\");case 2:return e.next=4,r.ensureDoc(\"parseStartXRef\");case 4:return e.next=6,r.ensureDoc(\"parse\",[t]);case 6:if(t){e.next=9;break}return e.next=9,r.ensureDoc(\"checkFirstPage\");case 9:return e.next=11,Promise.all([r.ensureDoc(\"numPages\"),r.ensureDoc(\"fingerprint\")]);case 11:return n=e.sent,i=h(n,2),o=i[0],s=i[1],e.abrupt(\"return\",{numPages:o,fingerprint:s});case 16:case\"end\":return e.stop()}},e,this)}),(A=function(){var t=this,r=arguments;return new Promise(function(a,n){var i=e.apply(t,r);function o(e){f(i,a,n,o,s,\"next\",e)}function s(e){f(i,a,n,o,s,\"throw\",e)}o(void 0)})}).apply(this,arguments)}function _(e,t){var r,a=(0,n.createPromiseCapability)(),o=e.source;if(o.data){try{r=new i.LocalPdfManager(v,o.data,o.password,t,b),a.resolve(r)}catch(f){a.reject(f)}return a.promise}var s,c=[];try{s=new p(w)}catch(f){return a.reject(f),a.promise}var u=s.getFullReader();u.headersReady.then(function(){if(u.isRangeSupported){var e=o.disableAutoFetch||u.isStreamingSupported;r=new i.NetworkPdfManager(v,s,{msgHandler:w,password:o.password,length:u.contentLength,disableAutoFetch:e,rangeChunkSize:o.rangeChunkSize},t,b);for(var n=0;n<c.length;n++)r.sendProgressiveData(c[n]);c=[],a.resolve(r),l=null}}).catch(function(e){a.reject(e),l=null});var h=0;return new Promise(function(e,s){u.read().then(function e(d){try{if(k(),d.done)return r||function(){var e=(0,n.arraysToBytes)(c);o.length&&e.length!==o.length&&(0,n.warn)(\"reported HTTP length is different from actual\");try{r=new i.LocalPdfManager(v,e,o.password,t,b),a.resolve(r)}catch(f){a.reject(f)}c=[]}(),void(l=null);var g=d.value;h+=(0,n.arrayByteLength)(g),u.isStreamingSupported||w.send(\"DocProgress\",{loaded:h,total:Math.max(h,u.contentLength||0)}),r?r.sendProgressiveData(g):c.push(g),u.read().then(e,s)}catch(p){s(p)}},s)}).catch(function(e){a.reject(e),l=null}),l=function(){s.cancelAllRequests(\"abort\")},a.promise}return w.postMessageTransfers=e.postMessageTransfers,w.on(\"GetPage\",function(e){return r.getPage(e.pageIndex).then(function(e){return Promise.all([r.ensure(e,\"rotate\"),r.ensure(e,\"ref\"),r.ensure(e,\"userUnit\"),r.ensure(e,\"view\")]).then(function(e){var t=h(e,4);return{rotate:t[0],ref:t[1],userUnit:t[2],view:t[3]}})})}),w.on(\"GetPageIndex\",function(e){var t=new c.Ref(e.ref.num,e.ref.gen);return r.pdfDocument.catalog.getPageIndex(t)}),w.on(\"GetDestinations\",function(e){return r.ensureCatalog(\"destinations\")}),w.on(\"GetDestination\",function(e){return r.ensureCatalog(\"getDestination\",[e.id])}),w.on(\"GetPageLabels\",function(e){return r.ensureCatalog(\"pageLabels\")}),w.on(\"GetPageMode\",function(e){return r.ensureCatalog(\"pageMode\")}),w.on(\"getOpenActionDestination\",function(e){return r.ensureCatalog(\"openActionDestination\")}),w.on(\"GetAttachments\",function(e){return r.ensureCatalog(\"attachments\")}),w.on(\"GetJavaScript\",function(e){return r.ensureCatalog(\"javaScript\")}),w.on(\"GetOutline\",function(e){return r.ensureCatalog(\"documentOutline\")}),w.on(\"GetPermissions\",function(e){return r.ensureCatalog(\"permissions\")}),w.on(\"GetMetadata\",function(e){return Promise.all([r.ensureDoc(\"documentInfo\"),r.ensureCatalog(\"metadata\")])}),w.on(\"GetData\",function(e){return r.requestLoadedStream(),r.onLoadedStream().then(function(e){return e.bytes})}),w.on(\"GetStats\",function(e){return r.pdfDocument.xref.stats}),w.on(\"GetAnnotations\",function(e){var t=e.pageIndex,a=e.intent;return r.getPage(t).then(function(e){return e.getAnnotationsData(a)})}),w.on(\"RenderPageRequest\",function(e){var t=e.pageIndex;r.getPage(t).then(function(r){var a=new d(\"RenderPageRequest: page \"+t);S(a);var i=t+1,o=Date.now();r.getOperatorList({handler:w,task:a,intent:e.intent,renderInteractiveForms:e.renderInteractiveForms}).then(function(e){C(a),(0,n.info)(\"page=\"+i+\" - getOperatorList: time=\"+(Date.now()-o)+\"ms, len=\"+e.totalLength)},function(t){if(C(a),!a.terminated){w.send(\"UnsupportedFeature\",{featureId:n.UNSUPPORTED_FEATURES.unknown});var r,o=\"worker.js: while trying to getPage() and getOperatorList()\";r=\"string\"===typeof t?{message:t,stack:o}:\"object\"===u(t)?{message:t.message||t.toString(),stack:t.stack||o}:{message:\"Unknown exception type: \"+u(t),stack:o},w.send(\"PageError\",{pageNum:i,error:r,intent:e.intent})}})})},this),w.on(\"GetTextContent\",function(e,t){var a=e.pageIndex;t.onPull=function(e){},t.onCancel=function(e){},r.getPage(a).then(function(r){var i=new d(\"GetTextContent: page \"+a);S(i);var o=a+1,s=Date.now();r.extractTextContent({handler:w,task:i,sink:t,normalizeWhitespace:e.normalizeWhitespace,combineTextItems:e.combineTextItems}).then(function(){C(i),(0,n.info)(\"text indexing: page=\"+o+\" - time=\"+(Date.now()-s)+\"ms\"),t.close()},function(e){if(C(i),!i.terminated)throw t.error(e),e})})}),w.on(\"FontFallback\",function(e){return r.fontFallback(e.id,w)}),w.on(\"Cleanup\",function(e){return r.cleanup()}),w.on(\"Terminate\",function(e){o=!0,r&&(r.terminate(),r=null),l&&l();var t=[];return g.forEach(function(e){t.push(e.finished),e.terminate()}),Promise.all(t).then(function(){w.destroy(),w=null})}),w.on(\"Ready\",function(t){!function(e){function t(e){k(),w.send(\"GetDoc\",{pdfInfo:e})}function a(e){if(k(),e instanceof n.PasswordException){var t=new d(\"PasswordException: response \"+e.code);S(t),w.sendWithPromise(\"PasswordRequest\",e).then(function(e){C(t),r.updatePassword(e.password),i()}).catch(function(e){C(t),w.send(\"PasswordException\",e)}.bind(null,e))}else e instanceof n.InvalidPDFException?w.send(\"InvalidPDF\",e):e instanceof n.MissingPDFException?w.send(\"MissingPDF\",e):e instanceof n.UnexpectedResponseException?w.send(\"UnexpectedResponse\",e):w.send(\"UnknownError\",new n.UnknownErrorException(e.message,e.toString()))}function i(){k(),x(!1).then(t,function(e){k(),e instanceof n.XRefParseException?(r.requestLoadedStream(),r.onLoadedStream().then(function(){k(),x(!0).then(t,a)})):a(e)},a)}k(),_(e,{forceDataSchema:e.disableCreateObjectURL,maxImageSize:e.maxImageSize,disableFontFace:e.disableFontFace,nativeImageDecoderSupport:e.nativeImageDecoderSupport,ignoreErrors:e.ignoreErrors,isEvalSupported:e.isEvalSupported}).then(function(e){if(o)throw e.terminate(),new Error(\"Worker was terminated\");(r=e).onLoadedStream().then(function(e){w.send(\"DataLoaded\",{length:e.bytes.byteLength})})}).then(i,a)}(e),e=null}),y},initializeFromPort:function(e){var t=new s.MessageHandler(\"worker\",\"main\",e);m.setup(t,e),t.send(\"ready\",null)}};t.WorkerMessageHandler=m,\"undefined\"===typeof window&&!(0,o.default)()&&\"undefined\"!==typeof self&&(\"function\"===typeof(g=self).postMessage&&\"onmessage\"in g)&&m.initializeFromPort(self)},function(e,t,r){\"use strict\";e.exports=r(3)},function(e,t,r){\"use strict\";function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var n=function(){return this||\"object\"===(\"undefined\"===typeof self?\"undefined\":a(self))&&self}()||Function(\"return this\")(),i=n.regeneratorRuntime&&Object.getOwnPropertyNames(n).indexOf(\"regeneratorRuntime\")>=0,o=i&&n.regeneratorRuntime;if(n.regeneratorRuntime=void 0,e.exports=r(4),i)n.regeneratorRuntime=o;else try{delete n.regeneratorRuntime}catch(s){n.regeneratorRuntime=void 0}},function(e,t,r){\"use strict\";(function(e){function t(e){return(t=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}!function(r){var a,n=Object.prototype,i=n.hasOwnProperty,o=\"function\"===typeof Symbol?Symbol:{},s=o.iterator||\"@@iterator\",c=o.asyncIterator||\"@@asyncIterator\",l=o.toStringTag||\"@@toStringTag\",u=\"object\"===t(e),h=r.regeneratorRuntime;if(h)u&&(e.exports=h);else{(h=r.regeneratorRuntime=u?e.exports:{}).wrap=k;var f=\"suspendedStart\",d=\"suspendedYield\",g=\"executing\",p=\"completed\",m={},v={};v[s]=function(){return this};var b=Object.getPrototypeOf,y=b&&b(b(F([])));y&&y!==n&&i.call(y,s)&&(v=y);var w=A.prototype=C.prototype=Object.create(v);x.prototype=w.constructor=A,A.constructor=x,A[l]=x.displayName=\"GeneratorFunction\",h.isGeneratorFunction=function(e){var t=\"function\"===typeof e&&e.constructor;return!!t&&(t===x||\"GeneratorFunction\"===(t.displayName||t.name))},h.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,A):(e.__proto__=A,l in e||(e[l]=\"GeneratorFunction\")),e.prototype=Object.create(w),e},h.awrap=function(e){return{__await:e}},_(P.prototype),P.prototype[c]=function(){return this},h.AsyncIterator=P,h.async=function(e,t,r,a){var n=new P(k(e,t,r,a));return h.isGeneratorFunction(t)?n:n.next().then(function(e){return e.done?e.value:n.next()})},_(w),w[l]=\"Generator\",w[s]=function(){return this},w.toString=function(){return\"[object Generator]\"},h.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var a=t.pop();if(a in e)return r.value=a,r.done=!1,r}return r.done=!0,r}},h.values=F,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=a,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=a,this.tryEntries.forEach(T),!e)for(var t in this)\"t\"===t.charAt(0)&&i.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=a)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,n){return s.type=\"throw\",s.arg=e,t.next=r,n&&(t.method=\"next\",t.arg=a),!!n}for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n],s=o.completion;if(\"root\"===o.tryLoc)return r(\"end\");if(o.tryLoc<=this.prev){var c=i.call(o,\"catchLoc\"),l=i.call(o,\"finallyLoc\");if(c&&l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!l)throw new Error(\"try statement without catch or finally\");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&i.call(a,\"finallyLoc\")&&this.prev<a.finallyLoc){var n=a;break}}n&&(\"break\"===e||\"continue\"===e)&&n.tryLoc<=t&&t<=n.finallyLoc&&(n=null);var o=n?n.completion:{};return o.type=e,o.arg=t,n?(this.method=\"next\",this.next=n.finallyLoc,m):this.complete(o)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),T(r),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var a=r.completion;if(\"throw\"===a.type){var n=a.arg;T(r)}return n}}throw new Error(\"illegal catch attempt\")},delegateYield:function(e,t,r){return this.delegate={iterator:F(e),resultName:t,nextLoc:r},\"next\"===this.method&&(this.arg=a),m}}}function k(e,t,r,a){var n=t&&t.prototype instanceof C?t:C,i=Object.create(n.prototype),o=new O(a||[]);return i._invoke=function(e,t,r){var a=f;return function(n,i){if(a===g)throw new Error(\"Generator is already running\");if(a===p){if(\"throw\"===n)throw i;return R()}for(r.method=n,r.arg=i;;){var o=r.delegate;if(o){var s=I(o,r);if(s){if(s===m)continue;return s}}if(\"next\"===r.method)r.sent=r._sent=r.arg;else if(\"throw\"===r.method){if(a===f)throw a=p,r.arg;r.dispatchException(r.arg)}else\"return\"===r.method&&r.abrupt(\"return\",r.arg);a=g;var c=S(e,t,r);if(\"normal\"===c.type){if(a=r.done?p:d,c.arg===m)continue;return{value:c.arg,done:r.done}}\"throw\"===c.type&&(a=p,r.method=\"throw\",r.arg=c.arg)}}}(e,r,o),i}function S(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(a){return{type:\"throw\",arg:a}}}function C(){}function x(){}function A(){}function _(e){[\"next\",\"throw\",\"return\"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function P(e){var r;this._invoke=function(a,n){function o(){return new Promise(function(r,o){!function r(a,n,o,s){var c=S(e[a],e,n);if(\"throw\"!==c.type){var l=c.arg,u=l.value;return u&&\"object\"===t(u)&&i.call(u,\"__await\")?Promise.resolve(u.__await).then(function(e){r(\"next\",e,o,s)},function(e){r(\"throw\",e,o,s)}):Promise.resolve(u).then(function(e){l.value=e,o(l)},function(e){return r(\"throw\",e,o,s)})}s(c.arg)}(a,n,r,o)})}return r=r?r.then(o,o):o()}}function I(e,t){var r=e.iterator[t.method];if(r===a){if(t.delegate=null,\"throw\"===t.method){if(e.iterator.return&&(t.method=\"return\",t.arg=a,I(e,t),\"throw\"===t.method))return m;t.method=\"throw\",t.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return m}var n=S(r,e.iterator,t.arg);if(\"throw\"===n.type)return t.method=\"throw\",t.arg=n.arg,t.delegate=null,m;var i=n.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,\"return\"!==t.method&&(t.method=\"next\",t.arg=a),t.delegate=null,m):i:(t.method=\"throw\",t.arg=new TypeError(\"iterator result is not an object\"),t.delegate=null,m)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(E,this),this.reset(!0)}function F(e){if(e){var t=e[s];if(t)return t.call(e);if(\"function\"===typeof e.next)return e;if(!isNaN(e.length)){var r=-1,n=function t(){for(;++r<e.length;)if(i.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=a,t.done=!0,t};return n.next=n}}return{next:R}}function R(){return{value:a,done:!0}}}(function(){return this||\"object\"===(\"undefined\"===typeof self?\"undefined\":t(self))&&self}()||Function(\"return this\")())}).call(this,r(5)(e))},function(e,t,r){\"use strict\";e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,\"loaded\",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,\"id\",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.toRomanNumerals=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];u(Number.isInteger(e)&&e>0,\"The number should be a positive integer.\");var r,a=[];for(;e>=1e3;)e-=1e3,a.push(\"M\");r=e/100|0,e%=100,a.push(A[r]),r=e/10|0,e%=10,a.push(A[10+r]),a.push(A[20+e]);var n=a.join(\"\");return t?n.toLowerCase():n},t.arrayByteLength=C,t.arraysToBytes=function(e){if(1===e.length&&e[0]instanceof Uint8Array)return e[0];var t,r,a,n=0,i=e.length;for(t=0;t<i;t++)r=e[t],a=C(r),n+=a;var o=0,s=new Uint8Array(n);for(t=0;t<i;t++)(r=e[t])instanceof Uint8Array||(r=\"string\"===typeof r?S(r):new Uint8Array(r)),a=r.byteLength,s.set(r,o),o+=a;return s},t.assert=u,t.bytesToString=function(e){u(null!==e&&\"object\"===i(e)&&void 0!==e.length,\"Invalid argument for bytesToString\");var t=e.length;if(t<8192)return String.fromCharCode.apply(null,e);for(var r=[],a=0;a<t;a+=8192){var n=Math.min(a+8192,t),o=e.subarray(a,n);r.push(String.fromCharCode.apply(null,o))}return r.join(\"\")},t.createPromiseCapability=function(){var e=Object.create(null),t=!1;return Object.defineProperty(e,\"settled\",{get:function(){return t}}),e.promise=new Promise(function(r,a){e.resolve=function(e){t=!0,r(e)},e.reject=function(e){t=!0,a(e)}}),e},t.deprecated=function(e){console.log(\"Deprecated API usage: \"+e)},t.getInheritableProperty=function(e){var t,r=e.dict,a=e.key,n=e.getArray,i=void 0!==n&&n,o=e.stopWhenFound,s=void 0===o||o,l=0;for(;r;){var u=i?r.getArray(a):r.get(a);if(void 0!==u){if(s)return u;t||(t=[]),t.push(u)}if(++l>100){c('getInheritableProperty: maximum loop count exceeded for \"'.concat(a,'\"'));break}r=r.get(\"Parent\")}return t},t.getLookupTableFactory=function(e){var t;return function(){return e&&(t=Object.create(null),e(t),e=null),t}},t.getVerbosityLevel=function(){return s},t.info=function(e){s>=o.INFOS&&console.log(\"Info: \"+e)},t.isArrayBuffer=function(e){return\"object\"===i(e)&&null!==e&&void 0!==e.byteLength},t.isBool=function(e){return\"boolean\"===typeof e},t.isEmptyObj=function(e){for(var t in e)return!1;return!0},t.isNum=function(e){return\"number\"===typeof e},t.isString=function(e){return\"string\"===typeof e},t.isSpace=function(e){return 32===e||9===e||13===e||10===e},t.isSameOrigin=function(e,t){try{var r=new n.URL(e);if(!r.origin||\"null\"===r.origin)return!1}catch(i){return!1}var a=new n.URL(t,r);return r.origin===a.origin},t.createValidAbsoluteUrl=function(e,t){if(!e)return null;try{var r=t?new n.URL(e,t):new n.URL(e);if(function(e){if(!e)return!1;switch(e.protocol){case\"http:\":case\"https:\":case\"ftp:\":case\"mailto:\":case\"tel:\":return!0;default:return!1}}(r))return r}catch(a){}return null},t.isLittleEndian=function(){var e=new Uint8Array(4);return e[0]=1,1===new Uint32Array(e.buffer,0,1)[0]},t.isEvalSupported=function(){try{return new Function(\"\"),!0}catch(e){return!1}},t.log2=function(e){if(e<=0)return 0;return Math.ceil(Math.log2(e))},t.readInt8=function(e,t){return e[t]<<24>>24},t.readUint16=function(e,t){return e[t]<<8|e[t+1]},t.readUint32=function(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0},t.removeNullCharacters=function(e){if(\"string\"!==typeof e)return c(\"The argument for removeNullCharacters must be a string.\"),e;return e.replace(k,\"\")},t.setVerbosityLevel=function(e){Number.isInteger(e)&&(s=e)},t.shadow=function(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!1}),r},t.string32=function(e){return String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e)},t.stringToBytes=S,t.stringToPDFString=function(e){var t,r=e.length,a=[];if(\"\\xfe\"===e[0]&&\"\\xff\"===e[1])for(t=2;t<r;t+=2)a.push(String.fromCharCode(e.charCodeAt(t)<<8|e.charCodeAt(t+1)));else for(t=0;t<r;++t){var n=_[e.charCodeAt(t)];a.push(n?String.fromCharCode(n):e.charAt(t))}return a.join(\"\")},t.stringToUTF8String=function(e){return decodeURIComponent(escape(e))},t.utf8StringToString=function(e){return unescape(encodeURIComponent(e))},t.warn=c,t.unreachable=l,Object.defineProperty(t,\"ReadableStream\",{enumerable:!0,get:function(){return a.ReadableStream}}),Object.defineProperty(t,\"URL\",{enumerable:!0,get:function(){return n.URL}}),t.createObjectURL=t.FormatError=t.XRefParseException=t.XRefEntryException=t.Util=t.UnknownErrorException=t.UnexpectedResponseException=t.TextRenderingMode=t.StreamType=t.PermissionFlag=t.PasswordResponses=t.PasswordException=t.NativeImageDecoding=t.MissingPDFException=t.MissingDataException=t.InvalidPDFException=t.AbortException=t.CMapCompressionType=t.ImageKind=t.FontType=t.AnnotationType=t.AnnotationFlag=t.AnnotationFieldFlag=t.AnnotationBorderStyleType=t.UNSUPPORTED_FEATURES=t.VerbosityLevel=t.OPS=t.IDENTITY_MATRIX=t.FONT_IDENTITY_MATRIX=void 0,r(7);var a=r(147),n=r(149);function i(e){return(i=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}t.IDENTITY_MATRIX=[1,0,0,1,0,0];t.FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0];t.NativeImageDecoding={NONE:\"none\",DECODE:\"decode\",DISPLAY:\"display\"};t.PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048};t.TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4};t.ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3};t.AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26};t.AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512};t.AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864};t.AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5};t.StreamType={UNKNOWN:0,FLATE:1,LZW:2,DCT:3,JPX:4,JBIG:5,A85:6,AHX:7,CCF:8,RL:9};t.FontType={UNKNOWN:0,TYPE1:1,TYPE1C:2,CIDFONTTYPE0:3,CIDFONTTYPE0C:4,TRUETYPE:5,CIDFONTTYPE2:6,TYPE3:7,OPENTYPE:8,TYPE0:9,MMTYPE1:10};var o={ERRORS:0,WARNINGS:1,INFOS:5};t.VerbosityLevel=o;t.CMapCompressionType={NONE:0,BINARY:1,STREAM:2};t.OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotations:78,endAnnotations:79,beginAnnotation:80,endAnnotation:81,paintJpegXObject:82,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91};t.UNSUPPORTED_FEATURES={unknown:\"unknown\",forms:\"forms\",javaScript:\"javaScript\",smask:\"smask\",shadingPattern:\"shadingPattern\",font:\"font\"};t.PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};var s=o.WARNINGS;function c(e){s>=o.WARNINGS&&console.log(\"Warning: \"+e)}function l(e){throw new Error(e)}function u(e,t){e||l(t)}var h=function(){function e(e,t){this.name=\"PasswordException\",this.message=e,this.code=t}return e.prototype=new Error,e.constructor=e,e}();t.PasswordException=h;var f=function(){function e(e,t){this.name=\"UnknownErrorException\",this.message=e,this.details=t}return e.prototype=new Error,e.constructor=e,e}();t.UnknownErrorException=f;var d=function(){function e(e){this.name=\"InvalidPDFException\",this.message=e}return e.prototype=new Error,e.constructor=e,e}();t.InvalidPDFException=d;var g=function(){function e(e){this.name=\"MissingPDFException\",this.message=e}return e.prototype=new Error,e.constructor=e,e}();t.MissingPDFException=g;var p=function(){function e(e,t){this.name=\"UnexpectedResponseException\",this.message=e,this.status=t}return e.prototype=new Error,e.constructor=e,e}();t.UnexpectedResponseException=p;var m=function(){function e(e,t){this.begin=e,this.end=t,this.message=\"Missing data [\"+e+\", \"+t+\")\"}return e.prototype=new Error,e.prototype.name=\"MissingDataException\",e.constructor=e,e}();t.MissingDataException=m;var v=function(){function e(e){this.message=e}return e.prototype=new Error,e.prototype.name=\"XRefEntryException\",e.constructor=e,e}();t.XRefEntryException=v;var b=function(){function e(e){this.message=e}return e.prototype=new Error,e.prototype.name=\"XRefParseException\",e.constructor=e,e}();t.XRefParseException=b;var y=function(){function e(e){this.message=e}return e.prototype=new Error,e.prototype.name=\"FormatError\",e.constructor=e,e}();t.FormatError=y;var w=function(){function e(e){this.name=\"AbortException\",this.message=e}return e.prototype=new Error,e.constructor=e,e}();t.AbortException=w;var k=/\\x00/g;function S(e){u(\"string\"===typeof e,\"Invalid argument for stringToBytes\");for(var t=e.length,r=new Uint8Array(t),a=0;a<t;++a)r[a]=255&e.charCodeAt(a);return r}function C(e){return void 0!==e.length?e.length:(u(void 0!==e.byteLength),e.byteLength)}var x=function(){function e(){}var t=[\"rgb(\",0,\",\",0,\",\",0,\")\"];return e.makeCssRgb=function(e,r,a){return t[1]=e,t[3]=r,t[5]=a,t.join(\"\")},e.transform=function(e,t){return[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]]},e.applyTransform=function(e,t){return[e[0]*t[0]+e[1]*t[2]+t[4],e[0]*t[1]+e[1]*t[3]+t[5]]},e.applyInverseTransform=function(e,t){var r=t[0]*t[3]-t[1]*t[2];return[(e[0]*t[3]-e[1]*t[2]+t[2]*t[5]-t[4]*t[3])/r,(-e[0]*t[1]+e[1]*t[0]+t[4]*t[1]-t[5]*t[0])/r]},e.getAxialAlignedBoundingBox=function(t,r){var a=e.applyTransform(t,r),n=e.applyTransform(t.slice(2,4),r),i=e.applyTransform([t[0],t[3]],r),o=e.applyTransform([t[2],t[1]],r);return[Math.min(a[0],n[0],i[0],o[0]),Math.min(a[1],n[1],i[1],o[1]),Math.max(a[0],n[0],i[0],o[0]),Math.max(a[1],n[1],i[1],o[1])]},e.inverseTransform=function(e){var t=e[0]*e[3]-e[1]*e[2];return[e[3]/t,-e[1]/t,-e[2]/t,e[0]/t,(e[2]*e[5]-e[4]*e[3])/t,(e[4]*e[1]-e[5]*e[0])/t]},e.apply3dTransform=function(e,t){return[e[0]*t[0]+e[1]*t[1]+e[2]*t[2],e[3]*t[0]+e[4]*t[1]+e[5]*t[2],e[6]*t[0]+e[7]*t[1]+e[8]*t[2]]},e.singularValueDecompose2dScale=function(e){var t=[e[0],e[2],e[1],e[3]],r=e[0]*t[0]+e[1]*t[2],a=e[0]*t[1]+e[1]*t[3],n=e[2]*t[0]+e[3]*t[2],i=e[2]*t[1]+e[3]*t[3],o=(r+i)/2,s=Math.sqrt((r+i)*(r+i)-4*(r*i-n*a))/2,c=o+s||1,l=o-s||1;return[Math.sqrt(c),Math.sqrt(l)]},e.normalizeRect=function(e){var t=e.slice(0);return e[0]>e[2]&&(t[0]=e[2],t[2]=e[0]),e[1]>e[3]&&(t[1]=e[3],t[3]=e[1]),t},e.intersect=function(t,r){function a(e,t){return e-t}var n=[t[0],t[2],r[0],r[2]].sort(a),i=[t[1],t[3],r[1],r[3]].sort(a),o=[];return t=e.normalizeRect(t),r=e.normalizeRect(r),(n[0]===t[0]&&n[1]===r[0]||n[0]===r[0]&&n[1]===t[0])&&(o[0]=n[1],o[2]=n[2],(i[0]===t[1]&&i[1]===r[1]||i[0]===r[1]&&i[1]===t[1])&&(o[1]=i[1],o[3]=i[2],o))},e}();t.Util=x;var A=[\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"];var _=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];var P=function(){var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";return function(t,r){if(!(arguments.length>2&&void 0!==arguments[2]&&arguments[2])&&n.URL.createObjectURL){var a=new Blob([t],{type:r});return n.URL.createObjectURL(a)}for(var i=\"data:\"+r+\";base64,\",o=0,s=t.length;o<s;o+=3){var c=255&t[o],l=255&t[o+1],u=255&t[o+2];i+=e[c>>2]+e[(3&c)<<4|l>>4]+e[o+1<s?(15&l)<<2|u>>6:64]+e[o+2<s?63&u:64]}return i}}();t.createObjectURL=P},function(e,r,a){\"use strict\";function n(e){return(n=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=a(8);if(!i._pdfjsCompatibilityChecked){i._pdfjsCompatibilityChecked=!0;var o=a(9),s=\"object\"===(\"undefined\"===typeof window?\"undefined\":n(window))&&\"object\"===(\"undefined\"===typeof document?\"undefined\":n(document));!i.btoa&&o()&&(i.btoa=function(e){return t.from(e,\"binary\").toString(\"base64\")}),!i.atob&&o()&&(i.atob=function(e){return t.from(e,\"base64\").toString(\"binary\")}),s&&\"undefined\"===typeof Element.prototype.remove&&(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)}),function(){if(s&&!o()){var e=document.createElement(\"div\");if(e.classList.add(\"testOne\",\"testTwo\"),!0!==e.classList.contains(\"testOne\")||!0!==e.classList.contains(\"testTwo\")){var t=DOMTokenList.prototype.add,r=DOMTokenList.prototype.remove;DOMTokenList.prototype.add=function(){for(var e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];for(var n=0;n<r.length;n++){var i=r[n];t.call(this,i)}},DOMTokenList.prototype.remove=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];for(var n=0;n<t.length;n++){var i=t[n];r.call(this,i)}}}}}(),s&&!o()&&!1!==document.createElement(\"div\").classList.toggle(\"test\",0)&&(DOMTokenList.prototype.toggle=function(e){var t=arguments.length>1?!!arguments[1]:!this.contains(e);return this[t?\"add\":\"remove\"](e),t}),String.prototype.startsWith||a(10),String.prototype.endsWith||a(40),String.prototype.includes||a(42),Array.prototype.includes||a(44),Array.from||a(51),Object.assign||a(74),Math.log2||(Math.log2=a(79)),Number.isNaN||(Number.isNaN=a(81)),Number.isInteger||(Number.isInteger=a(83)),i.Promise&&i.Promise.prototype&&i.Promise.prototype.finally||(i.Promise=a(86)),i.WeakMap||(i.WeakMap=a(106)),i.WeakSet||(i.WeakSet=a(123)),String.codePointAt||(String.codePointAt=a(127)),String.fromCodePoint||(String.fromCodePoint=a(129)),i.Symbol||a(131),String.prototype.padStart||a(138),String.prototype.padEnd||a(142),Object.values||(Object.values=a(144))}},function(e,t,a){\"use strict\";e.exports=\"undefined\"!==typeof window&&window.Math===Math?window:\"undefined\"!==typeof r&&r.Math===Math?r:\"undefined\"!==typeof self&&self.Math===Math?self:{}},function(e,t,r){\"use strict\";function n(e){return(n=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}e.exports=function(){return\"object\"===(\"undefined\"===typeof a?\"undefined\":n(a))&&a+\"\"===\"[object process]\"&&!a.versions.nw}},function(e,t,r){\"use strict\";r(11),e.exports=r(14).String.startsWith},function(e,t,r){\"use strict\";var a=r(12),n=r(30),i=r(32),o=\"\".startsWith;a(a.P+a.F*r(39)(\"startsWith\"),\"String\",{startsWith:function(e){var t=i(this,e,\"startsWith\"),r=n(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),a=String(e);return o?o.call(t,a,r):t.slice(r,r+a.length)===a}})},function(e,t,r){\"use strict\";var a=r(13),n=r(14),i=r(15),o=r(25),s=r(28),c=function e(t,r,c){var l,u,h,f,d=t&e.F,g=t&e.G,p=t&e.P,m=t&e.B,v=g?a:t&e.S?a[r]||(a[r]={}):(a[r]||{}).prototype,b=g?n:n[r]||(n[r]={}),y=b.prototype||(b.prototype={});for(l in g&&(c=r),c)h=((u=!d&&v&&void 0!==v[l])?v:c)[l],f=m&&u?s(h,a):p&&\"function\"==typeof h?s(Function.call,h):h,v&&o(v,l,h,t&e.U),b[l]!=h&&i(b,l,f),p&&y[l]!=h&&(y[l]=h)};a.core=n,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,t,r){\"use strict\";var a=e.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=a)},function(e,t,r){\"use strict\";var a=e.exports={version:\"2.6.2\"};\"number\"==typeof __e&&(__e=a)},function(e,t,r){\"use strict\";var a=r(16),n=r(24);e.exports=r(20)?function(e,t,r){return a.f(e,t,n(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){\"use strict\";var a=r(17),n=r(19),i=r(23),o=Object.defineProperty;t.f=r(20)?Object.defineProperty:function(e,t,r){if(a(e),t=i(t,!0),a(r),n)try{return o(e,t,r)}catch(s){}if(\"get\"in r||\"set\"in r)throw TypeError(\"Accessors not supported!\");return\"value\"in r&&(e[t]=r.value),e}},function(e,t,r){\"use strict\";var a=r(18);e.exports=function(e){if(!a(e))throw TypeError(e+\" is not an object!\");return e}},function(e,t,r){\"use strict\";function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}e.exports=function(e){return\"object\"===a(e)?null!==e:\"function\"===typeof e}},function(e,t,r){\"use strict\";e.exports=!r(20)&&!r(21)(function(){return 7!=Object.defineProperty(r(22)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(e,t,r){\"use strict\";e.exports=!r(21)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(e,t,r){\"use strict\";e.exports=function(e){try{return!!e()}catch(t){return!0}}},function(e,t,r){\"use strict\";var a=r(18),n=r(13).document,i=a(n)&&a(n.createElement);e.exports=function(e){return i?n.createElement(e):{}}},function(e,t,r){\"use strict\";var a=r(18);e.exports=function(e,t){if(!a(e))return e;var r,n;if(t&&\"function\"==typeof(r=e.toString)&&!a(n=r.call(e)))return n;if(\"function\"==typeof(r=e.valueOf)&&!a(n=r.call(e)))return n;if(!t&&\"function\"==typeof(r=e.toString)&&!a(n=r.call(e)))return n;throw TypeError(\"Can't convert object to primitive value\")}},function(e,t,r){\"use strict\";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){\"use strict\";var a=r(13),n=r(15),i=r(26),o=r(27)(\"src\"),s=Function.toString,c=(\"\"+s).split(\"toString\");r(14).inspectSource=function(e){return s.call(e)},(e.exports=function(e,t,r,s){var l=\"function\"==typeof r;l&&(i(r,\"name\")||n(r,\"name\",t)),e[t]!==r&&(l&&(i(r,o)||n(r,o,e[t]?\"\"+e[t]:c.join(String(t)))),e===a?e[t]=r:s?e[t]?e[t]=r:n(e,t,r):(delete e[t],n(e,t,r)))})(Function.prototype,\"toString\",function(){return\"function\"==typeof this&&this[o]||s.call(this)})},function(e,t,r){\"use strict\";var a={}.hasOwnProperty;e.exports=function(e,t){return a.call(e,t)}},function(e,t,r){\"use strict\";var a=0,n=Math.random();e.exports=function(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++a+n).toString(36))}},function(e,t,r){\"use strict\";var a=r(29);e.exports=function(e,t,r){if(a(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,a){return e.call(t,r,a)};case 3:return function(r,a,n){return e.call(t,r,a,n)}}return function(){return e.apply(t,arguments)}}},function(e,t,r){\"use strict\";e.exports=function(e){if(\"function\"!=typeof e)throw TypeError(e+\" is not a function!\");return e}},function(e,t,r){\"use strict\";var a=r(31),n=Math.min;e.exports=function(e){return e>0?n(a(e),9007199254740991):0}},function(e,t,r){\"use strict\";var a=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:a)(e)}},function(e,t,r){\"use strict\";var a=r(33),n=r(38);e.exports=function(e,t,r){if(a(t))throw TypeError(\"String#\"+r+\" doesn't accept regex!\");return String(n(e))}},function(e,t,r){\"use strict\";var a=r(18),n=r(34),i=r(35)(\"match\");e.exports=function(e){var t;return a(e)&&(void 0!==(t=e[i])?!!t:\"RegExp\"==n(e))}},function(e,t,r){\"use strict\";var a={}.toString;e.exports=function(e){return a.call(e).slice(8,-1)}},function(e,t,r){\"use strict\";var a=r(36)(\"wks\"),n=r(27),i=r(13).Symbol,o=\"function\"==typeof i;(e.exports=function(e){return a[e]||(a[e]=o&&i[e]||(o?i:n)(\"Symbol.\"+e))}).store=a},function(e,t,r){\"use strict\";var a=r(14),n=r(13),i=n[\"__core-js_shared__\"]||(n[\"__core-js_shared__\"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:a.version,mode:r(37)?\"pure\":\"global\",copyright:\"\\xa9 2019 Denis Pushkarev (zloirock.ru)\"})},function(e,t,r){\"use strict\";e.exports=!1},function(e,t,r){\"use strict\";e.exports=function(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}},function(e,t,r){\"use strict\";var a=r(35)(\"match\");e.exports=function(e){var t=/./;try{\"/./\"[e](t)}catch(r){try{return t[a]=!1,!\"/./\"[e](t)}catch(n){}}return!0}},function(e,t,r){\"use strict\";r(41),e.exports=r(14).String.endsWith},function(e,t,r){\"use strict\";var a=r(12),n=r(30),i=r(32),o=\"\".endsWith;a(a.P+a.F*r(39)(\"endsWith\"),\"String\",{endsWith:function(e){var t=i(this,e,\"endsWith\"),r=arguments.length>1?arguments[1]:void 0,a=n(t.length),s=void 0===r?a:Math.min(n(r),a),c=String(e);return o?o.call(t,c,s):t.slice(s-c.length,s)===c}})},function(e,t,r){\"use strict\";r(43),e.exports=r(14).String.includes},function(e,t,r){\"use strict\";var a=r(12),n=r(32);a(a.P+a.F*r(39)(\"includes\"),\"String\",{includes:function(e){return!!~n(this,e,\"includes\").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){\"use strict\";r(45),e.exports=r(14).Array.includes},function(e,t,r){\"use strict\";var a=r(12),n=r(46)(!0);a(a.P,\"Array\",{includes:function(e){return n(this,e,arguments.length>1?arguments[1]:void 0)}}),r(50)(\"includes\")},function(e,t,r){\"use strict\";var a=r(47),n=r(30),i=r(49);e.exports=function(e){return function(t,r,o){var s,c=a(t),l=n(c.length),u=i(o,l);if(e&&r!=r){for(;l>u;)if((s=c[u++])!=s)return!0}else for(;l>u;u++)if((e||u in c)&&c[u]===r)return e||u||0;return!e&&-1}}},function(e,t,r){\"use strict\";var a=r(48),n=r(38);e.exports=function(e){return a(n(e))}},function(e,t,r){\"use strict\";var a=r(34);e.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(e){return\"String\"==a(e)?e.split(\"\"):Object(e)}},function(e,t,r){\"use strict\";var a=r(31),n=Math.max,i=Math.min;e.exports=function(e,t){return(e=a(e))<0?n(e+t,0):i(e,t)}},function(e,t,r){\"use strict\";var a=r(35)(\"unscopables\"),n=Array.prototype;void 0==n[a]&&r(15)(n,a,{}),e.exports=function(e){n[a][e]=!0}},function(e,t,r){\"use strict\";r(52),r(67),e.exports=r(14).Array.from},function(e,t,r){\"use strict\";var a=r(53)(!0);r(54)(String,\"String\",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=a(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){\"use strict\";var a=r(31),n=r(38);e.exports=function(e){return function(t,r){var i,o,s=String(n(t)),c=a(r),l=s.length;return c<0||c>=l?e?\"\":void 0:(i=s.charCodeAt(c))<55296||i>56319||c+1===l||(o=s.charCodeAt(c+1))<56320||o>57343?e?s.charAt(c):i:e?s.slice(c,c+2):o-56320+(i-55296<<10)+65536}}},function(e,t,r){\"use strict\";var a=r(37),n=r(12),i=r(25),o=r(15),s=r(55),c=r(56),l=r(64),u=r(65),h=r(35)(\"iterator\"),f=!([].keys&&\"next\"in[].keys()),d=function(){return this};e.exports=function(e,t,r,g,p,m,v){c(r,t,g);var b,y,w,k=function(e){if(!f&&e in A)return A[e];switch(e){case\"keys\":case\"values\":return function(){return new r(this,e)}}return function(){return new r(this,e)}},S=t+\" Iterator\",C=\"values\"==p,x=!1,A=e.prototype,_=A[h]||A[\"@@iterator\"]||p&&A[p],P=_||k(p),I=p?C?k(\"entries\"):P:void 0,E=\"Array\"==t&&A.entries||_;if(E&&(w=u(E.call(new e)))!==Object.prototype&&w.next&&(l(w,S,!0),a||\"function\"==typeof w[h]||o(w,h,d)),C&&_&&\"values\"!==_.name&&(x=!0,P=function(){return _.call(this)}),a&&!v||!f&&!x&&A[h]||o(A,h,P),s[t]=P,s[S]=d,p)if(b={values:C?P:k(\"values\"),keys:m?P:k(\"keys\"),entries:I},v)for(y in b)y in A||i(A,y,b[y]);else n(n.P+n.F*(f||x),t,b);return b}},function(e,t,r){\"use strict\";e.exports={}},function(e,t,r){\"use strict\";var a=r(57),n=r(24),i=r(64),o={};r(15)(o,r(35)(\"iterator\"),function(){return this}),e.exports=function(e,t,r){e.prototype=a(o,{next:n(1,r)}),i(e,t+\" Iterator\")}},function(e,t,r){\"use strict\";var a=r(17),n=r(58),i=r(62),o=r(61)(\"IE_PROTO\"),s=function(){},c=function(){var e,t=r(22)(\"iframe\"),a=i.length;for(t.style.display=\"none\",r(63).appendChild(t),t.src=\"javascript:\",(e=t.contentWindow.document).open(),e.write(\"<script>document.F=Object<\\/script>\"),e.close(),c=e.F;a--;)delete c.prototype[i[a]];return c()};e.exports=Object.create||function(e,t){var r;return null!==e?(s.prototype=a(e),r=new s,s.prototype=null,r[o]=e):r=c(),void 0===t?r:n(r,t)}},function(e,t,r){\"use strict\";var a=r(16),n=r(17),i=r(59);e.exports=r(20)?Object.defineProperties:function(e,t){n(e);for(var r,o=i(t),s=o.length,c=0;s>c;)a.f(e,r=o[c++],t[r]);return e}},function(e,t,r){\"use strict\";var a=r(60),n=r(62);e.exports=Object.keys||function(e){return a(e,n)}},function(e,t,r){\"use strict\";var a=r(26),n=r(47),i=r(46)(!1),o=r(61)(\"IE_PROTO\");e.exports=function(e,t){var r,s=n(e),c=0,l=[];for(r in s)r!=o&&a(s,r)&&l.push(r);for(;t.length>c;)a(s,r=t[c++])&&(~i(l,r)||l.push(r));return l}},function(e,t,r){\"use strict\";var a=r(36)(\"keys\"),n=r(27);e.exports=function(e){return a[e]||(a[e]=n(e))}},function(e,t,r){\"use strict\";e.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(e,t,r){\"use strict\";var a=r(13).document;e.exports=a&&a.documentElement},function(e,t,r){\"use strict\";var a=r(16).f,n=r(26),i=r(35)(\"toStringTag\");e.exports=function(e,t,r){e&&!n(e=r?e:e.prototype,i)&&a(e,i,{configurable:!0,value:t})}},function(e,t,r){\"use strict\";var a=r(26),n=r(66),i=r(61)(\"IE_PROTO\"),o=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=n(e),a(e,i)?e[i]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?o:null}},function(e,t,r){\"use strict\";var a=r(38);e.exports=function(e){return Object(a(e))}},function(e,t,r){\"use strict\";var a=r(28),n=r(12),i=r(66),o=r(68),s=r(69),c=r(30),l=r(70),u=r(71);n(n.S+n.F*!r(73)(function(e){Array.from(e)}),\"Array\",{from:function(e){var t,r,n,h,f=i(e),d=\"function\"==typeof this?this:Array,g=arguments.length,p=g>1?arguments[1]:void 0,m=void 0!==p,v=0,b=u(f);if(m&&(p=a(p,g>2?arguments[2]:void 0,2)),void 0==b||d==Array&&s(b))for(r=new d(t=c(f.length));t>v;v++)l(r,v,m?p(f[v],v):f[v]);else for(h=b.call(f),r=new d;!(n=h.next()).done;v++)l(r,v,m?o(h,p,[n.value,v],!0):n.value);return r.length=v,r}})},function(e,t,r){\"use strict\";var a=r(17);e.exports=function(e,t,r,n){try{return n?t(a(r)[0],r[1]):t(r)}catch(o){var i=e.return;throw void 0!==i&&a(i.call(e)),o}}},function(e,t,r){\"use strict\";var a=r(55),n=r(35)(\"iterator\"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||i[n]===e)}},function(e,t,r){\"use strict\";var a=r(16),n=r(24);e.exports=function(e,t,r){t in e?a.f(e,t,n(0,r)):e[t]=r}},function(e,t,r){\"use strict\";var a=r(72),n=r(35)(\"iterator\"),i=r(55);e.exports=r(14).getIteratorMethod=function(e){if(void 0!=e)return e[n]||e[\"@@iterator\"]||i[a(e)]}},function(e,t,r){\"use strict\";var a=r(34),n=r(35)(\"toStringTag\"),i=\"Arguments\"==a(function(){return arguments}());e.exports=function(e){var t,r,o;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(r=function(e,t){try{return e[t]}catch(r){}}(t=Object(e),n))?r:i?a(t):\"Object\"==(o=a(t))&&\"function\"==typeof t.callee?\"Arguments\":o}},function(e,t,r){\"use strict\";var a=r(35)(\"iterator\"),n=!1;try{var i=[7][a]();i.return=function(){n=!0},Array.from(i,function(){throw 2})}catch(o){}e.exports=function(e,t){if(!t&&!n)return!1;var r=!1;try{var i=[7],s=i[a]();s.next=function(){return{done:r=!0}},i[a]=function(){return s},e(i)}catch(o){}return r}},function(e,t,r){\"use strict\";r(75),e.exports=r(14).Object.assign},function(e,t,r){\"use strict\";var a=r(12);a(a.S+a.F,\"Object\",{assign:r(76)})},function(e,t,r){\"use strict\";var a=r(59),n=r(77),i=r(78),o=r(66),s=r(48),c=Object.assign;e.exports=!c||r(21)(function(){var e={},t={},r=Symbol(),a=\"abcdefghijklmnopqrst\";return e[r]=7,a.split(\"\").forEach(function(e){t[e]=e}),7!=c({},e)[r]||Object.keys(c({},t)).join(\"\")!=a})?function(e,t){for(var r=o(e),c=arguments.length,l=1,u=n.f,h=i.f;c>l;)for(var f,d=s(arguments[l++]),g=u?a(d).concat(u(d)):a(d),p=g.length,m=0;p>m;)h.call(d,f=g[m++])&&(r[f]=d[f]);return r}:c},function(e,t,r){\"use strict\";t.f=Object.getOwnPropertySymbols},function(e,t,r){\"use strict\";t.f={}.propertyIsEnumerable},function(e,t,r){\"use strict\";r(80),e.exports=r(14).Math.log2},function(e,t,r){\"use strict\";var a=r(12);a(a.S,\"Math\",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,r){\"use strict\";r(82),e.exports=r(14).Number.isNaN},function(e,t,r){\"use strict\";var a=r(12);a(a.S,\"Number\",{isNaN:function(e){return e!=e}})},function(e,t,r){\"use strict\";r(84),e.exports=r(14).Number.isInteger},function(e,t,r){\"use strict\";var a=r(12);a(a.S,\"Number\",{isInteger:r(85)})},function(e,t,r){\"use strict\";var a=r(18),n=Math.floor;e.exports=function(e){return!a(e)&&isFinite(e)&&n(e)===e}},function(e,t,r){\"use strict\";r(87),r(52),r(88),r(91),r(104),r(105),e.exports=r(14).Promise},function(e,t,r){\"use strict\";var a=r(72),n={};n[r(35)(\"toStringTag\")]=\"z\",n+\"\"!=\"[object z]\"&&r(25)(Object.prototype,\"toString\",function(){return\"[object \"+a(this)+\"]\"},!0)},function(e,t,r){\"use strict\";for(var a=r(89),n=r(59),i=r(25),o=r(13),s=r(15),c=r(55),l=r(35),u=l(\"iterator\"),h=l(\"toStringTag\"),f=c.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},g=n(d),p=0;p<g.length;p++){var m,v=g[p],b=d[v],y=o[v],w=y&&y.prototype;if(w&&(w[u]||s(w,u,f),w[h]||s(w,h,v),c[v]=f,b))for(m in a)w[m]||i(w,m,a[m],!0)}},function(e,t,r){\"use strict\";var a=r(50),n=r(90),i=r(55),o=r(47);e.exports=r(54)(Array,\"Array\",function(e,t){this._t=o(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,n(1)):n(0,\"keys\"==t?r:\"values\"==t?e[r]:[r,e[r]])},\"values\"),i.Arguments=i.Array,a(\"keys\"),a(\"values\"),a(\"entries\")},function(e,t,r){\"use strict\";e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){\"use strict\";var a,n,i,o,s=r(37),c=r(13),l=r(28),u=r(72),h=r(12),f=r(18),d=r(29),g=r(92),p=r(93),m=r(94),v=r(95).set,b=r(97)(),y=r(98),w=r(99),k=r(100),S=r(101),C=c.TypeError,x=c.process,A=x&&x.versions,_=A&&A.v8||\"\",P=c.Promise,I=\"process\"==u(x),E=function(){},T=n=y.f,O=!!function(){try{var e=P.resolve(1),t=(e.constructor={})[r(35)(\"species\")]=function(e){e(E,E)};return(I||\"function\"==typeof PromiseRejectionEvent)&&e.then(E)instanceof t&&0!==_.indexOf(\"6.6\")&&-1===k.indexOf(\"Chrome/66\")}catch(a){}}(),F=function(e){var t;return!(!f(e)||\"function\"!=typeof(t=e.then))&&t},R=function(e,t){if(!e._n){e._n=!0;var r=e._c;b(function(){for(var a=e._v,n=1==e._s,i=0,o=function(t){var r,i,o,s=n?t.ok:t.fail,c=t.resolve,l=t.reject,u=t.domain;try{s?(n||(2==e._h&&D(e),e._h=1),!0===s?r=a:(u&&u.enter(),r=s(a),u&&(u.exit(),o=!0)),r===t.promise?l(C(\"Promise-chain cycle\")):(i=F(r))?i.call(r,c,l):c(r)):l(a)}catch(h){u&&!o&&u.exit(),l(h)}};r.length>i;)o(r[i++]);e._c=[],e._n=!1,t&&!e._h&&B(e)})}},B=function(e){v.call(c,function(){var t,r,a,n=e._v,i=M(e);if(i&&(t=w(function(){I?x.emit(\"unhandledRejection\",n,e):(r=c.onunhandledrejection)?r({promise:e,reason:n}):(a=c.console)&&a.error&&a.error(\"Unhandled promise rejection\",n)}),e._h=I||M(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},M=function(e){return 1!==e._h&&0===(e._a||e._c).length},D=function(e){v.call(c,function(){var t;I?x.emit(\"rejectionHandled\",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})})},L=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),R(t,!0))},N=function e(t){var r,a=this;if(!a._d){a._d=!0,a=a._w||a;try{if(a===t)throw C(\"Promise can't be resolved itself\");(r=F(t))?b(function(){var n={_w:a,_d:!1};try{r.call(t,l(e,n,1),l(L,n,1))}catch(i){L.call(n,i)}}):(a._v=t,a._s=1,R(a,!1))}catch(n){L.call({_w:a,_d:!1},n)}}};O||(P=function(e){g(this,P,\"Promise\",\"_h\"),d(e),a.call(this);try{e(l(N,this,1),l(L,this,1))}catch(t){L.call(this,t)}},(a=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(102)(P.prototype,{then:function(e,t){var r=T(m(this,P));return r.ok=\"function\"!=typeof e||e,r.fail=\"function\"==typeof t&&t,r.domain=I?x.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&R(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new a;this.promise=e,this.resolve=l(N,e,1),this.reject=l(L,e,1)},y.f=T=function(e){return e===P||e===o?new i(e):n(e)}),h(h.G+h.W+h.F*!O,{Promise:P}),r(64)(P,\"Promise\"),r(103)(\"Promise\"),o=r(14).Promise,h(h.S+h.F*!O,\"Promise\",{reject:function(e){var t=T(this);return(0,t.reject)(e),t.promise}}),h(h.S+h.F*(s||!O),\"Promise\",{resolve:function(e){return S(s&&this===o?P:this,e)}}),h(h.S+h.F*!(O&&r(73)(function(e){P.all(e).catch(E)})),\"Promise\",{all:function(e){var t=this,r=T(t),a=r.resolve,n=r.reject,i=w(function(){var r=[],i=0,o=1;p(e,!1,function(e){var s=i++,c=!1;r.push(void 0),o++,t.resolve(e).then(function(e){c||(c=!0,r[s]=e,--o||a(r))},n)}),--o||a(r)});return i.e&&n(i.v),r.promise},race:function(e){var t=this,r=T(t),a=r.reject,n=w(function(){p(e,!1,function(e){t.resolve(e).then(r.resolve,a)})});return n.e&&a(n.v),r.promise}})},function(e,t,r){\"use strict\";e.exports=function(e,t,r,a){if(!(e instanceof t)||void 0!==a&&a in e)throw TypeError(r+\": incorrect invocation!\");return e}},function(e,t,r){\"use strict\";var a=r(28),n=r(68),i=r(69),o=r(17),s=r(30),c=r(71),l={},u={},h=e.exports=function(e,t,r,h,f){var d,g,p,m,v=f?function(){return e}:c(e),b=a(r,h,t?2:1),y=0;if(\"function\"!=typeof v)throw TypeError(e+\" is not iterable!\");if(i(v)){for(d=s(e.length);d>y;y++)if((m=t?b(o(g=e[y])[0],g[1]):b(e[y]))===l||m===u)return m}else for(p=v.call(e);!(g=p.next()).done;)if((m=n(p,b,g.value,t))===l||m===u)return m};h.BREAK=l,h.RETURN=u},function(e,t,r){\"use strict\";var a=r(17),n=r(29),i=r(35)(\"species\");e.exports=function(e,t){var r,o=a(e).constructor;return void 0===o||void 0==(r=a(o)[i])?t:n(r)}},function(e,t,r){\"use strict\";var a,n,i,o=r(28),s=r(96),c=r(63),l=r(22),u=r(13),h=u.process,f=u.setImmediate,d=u.clearImmediate,g=u.MessageChannel,p=u.Dispatch,m=0,v={},b=function(){var e=+this;if(v.hasOwnProperty(e)){var t=v[e];delete v[e],t()}},y=function(e){b.call(e.data)};f&&d||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return v[++m]=function(){s(\"function\"==typeof e?e:Function(e),t)},a(m),m},d=function(e){delete v[e]},\"process\"==r(34)(h)?a=function(e){h.nextTick(o(b,e,1))}:p&&p.now?a=function(e){p.now(o(b,e,1))}:g?(i=(n=new g).port2,n.port1.onmessage=y,a=o(i.postMessage,i,1)):u.addEventListener&&\"function\"==typeof postMessage&&!u.importScripts?(a=function(e){u.postMessage(e+\"\",\"*\")},u.addEventListener(\"message\",y,!1)):a=\"onreadystatechange\"in l(\"script\")?function(e){c.appendChild(l(\"script\")).onreadystatechange=function(){c.removeChild(this),b.call(e)}}:function(e){setTimeout(o(b,e,1),0)}),e.exports={set:f,clear:d}},function(e,t,r){\"use strict\";e.exports=function(e,t,r){var a=void 0===r;switch(t.length){case 0:return a?e():e.call(r);case 1:return a?e(t[0]):e.call(r,t[0]);case 2:return a?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return a?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return a?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){\"use strict\";var a=r(13),n=r(95).set,i=a.MutationObserver||a.WebKitMutationObserver,o=a.process,s=a.Promise,c=\"process\"==r(34)(o);e.exports=function(){var e,t,r,l=function(){var a,n;for(c&&(a=o.domain)&&a.exit();e;){n=e.fn,e=e.next;try{n()}catch(i){throw e?r():t=void 0,i}}t=void 0,a&&a.enter()};if(c)r=function(){o.nextTick(l)};else if(!i||a.navigator&&a.navigator.standalone)if(s&&s.resolve){var u=s.resolve(void 0);r=function(){u.then(l)}}else r=function(){n.call(a,l)};else{var h=!0,f=document.createTextNode(\"\");new i(l).observe(f,{characterData:!0}),r=function(){f.data=h=!h}}return function(a){var n={fn:a,next:void 0};t&&(t.next=n),e||(e=n,r()),t=n}}},function(e,t,r){\"use strict\";var a=r(29);function n(e){var t,r;this.promise=new e(function(e,a){if(void 0!==t||void 0!==r)throw TypeError(\"Bad Promise constructor\");t=e,r=a}),this.resolve=a(t),this.reject=a(r)}e.exports.f=function(e){return new n(e)}},function(e,t,r){\"use strict\";e.exports=function(e){try{return{e:!1,v:e()}}catch(t){return{e:!0,v:t}}}},function(e,t,r){\"use strict\";var a=r(13).navigator;e.exports=a&&a.userAgent||\"\"},function(e,t,r){\"use strict\";var a=r(17),n=r(18),i=r(98);e.exports=function(e,t){if(a(e),n(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){\"use strict\";var a=r(25);e.exports=function(e,t,r){for(var n in t)a(e,n,t[n],r);return e}},function(e,t,r){\"use strict\";var a=r(13),n=r(16),i=r(20),o=r(35)(\"species\");e.exports=function(e){var t=a[e];i&&t&&!t[o]&&n.f(t,o,{configurable:!0,get:function(){return this}})}},function(e,t,r){\"use strict\";var a=r(12),n=r(14),i=r(13),o=r(94),s=r(101);a(a.P+a.R,\"Promise\",{finally:function(e){var t=o(this,n.Promise||i.Promise),r=\"function\"==typeof e;return this.then(r?function(r){return s(t,e()).then(function(){return r})}:e,r?function(r){return s(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){\"use strict\";var a=r(12),n=r(98),i=r(99);a(a.S,\"Promise\",{try:function(e){var t=n.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},function(e,t,r){\"use strict\";r(87),r(88),r(107),r(119),r(121),e.exports=r(14).WeakMap},function(e,t,r){\"use strict\";var a,n=r(108)(0),i=r(25),o=r(112),s=r(76),c=r(113),l=r(18),u=r(21),h=r(114),f=o.getWeak,d=Object.isExtensible,g=c.ufstore,p={},m=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},v={get:function(e){if(l(e)){var t=f(e);return!0===t?g(h(this,\"WeakMap\")).get(e):t?t[this._i]:void 0}},set:function(e,t){return c.def(h(this,\"WeakMap\"),e,t)}},b=e.exports=r(115)(\"WeakMap\",m,v,c,!0,!0);u(function(){return 7!=(new b).set((Object.freeze||Object)(p),7).get(p)})&&(s((a=c.getConstructor(m,\"WeakMap\")).prototype,v),o.NEED=!0,n([\"delete\",\"has\",\"get\",\"set\"],function(e){var t=b.prototype,r=t[e];i(t,e,function(t,n){if(l(t)&&!d(t)){this._f||(this._f=new a);var i=this._f[e](t,n);return\"set\"==e?this:i}return r.call(this,t,n)})}))},function(e,t,r){\"use strict\";var a=r(28),n=r(48),i=r(66),o=r(30),s=r(109);e.exports=function(e,t){var r=1==e,c=2==e,l=3==e,u=4==e,h=6==e,f=5==e||h,d=t||s;return function(t,s,g){for(var p,m,v=i(t),b=n(v),y=a(s,g,3),w=o(b.length),k=0,S=r?d(t,w):c?d(t,0):void 0;w>k;k++)if((f||k in b)&&(m=y(p=b[k],k,v),e))if(r)S[k]=m;else if(m)switch(e){case 3:return!0;case 5:return p;case 6:return k;case 2:S.push(p)}else if(u)return!1;return h?-1:l||u?u:S}}},function(e,t,r){\"use strict\";var a=r(110);e.exports=function(e,t){return new(a(e))(t)}},function(e,t,r){\"use strict\";var a=r(18),n=r(111),i=r(35)(\"species\");e.exports=function(e){var t;return n(e)&&(\"function\"!=typeof(t=e.constructor)||t!==Array&&!n(t.prototype)||(t=void 0),a(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},function(e,t,r){\"use strict\";var a=r(34);e.exports=Array.isArray||function(e){return\"Array\"==a(e)}},function(e,t,r){\"use strict\";function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var n=r(27)(\"meta\"),i=r(18),o=r(26),s=r(16).f,c=0,l=Object.isExtensible||function(){return!0},u=!r(21)(function(){return l(Object.preventExtensions({}))}),h=function(e){s(e,n,{value:{i:\"O\"+ ++c,w:{}}})},f=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!i(e))return\"symbol\"==a(e)?e:(\"string\"==typeof e?\"S\":\"P\")+e;if(!o(e,n)){if(!l(e))return\"F\";if(!t)return\"E\";h(e)}return e[n].i},getWeak:function(e,t){if(!o(e,n)){if(!l(e))return!0;if(!t)return!1;h(e)}return e[n].w},onFreeze:function(e){return u&&f.NEED&&l(e)&&!o(e,n)&&h(e),e}}},function(e,t,r){\"use strict\";var a=r(102),n=r(112).getWeak,i=r(17),o=r(18),s=r(92),c=r(93),l=r(108),u=r(26),h=r(114),f=l(5),d=l(6),g=0,p=function(e){return e._l||(e._l=new m)},m=function(){this.a=[]},v=function(e,t){return f(e.a,function(e){return e[0]===t})};m.prototype={get:function(e){var t=v(this,e);if(t)return t[1]},has:function(e){return!!v(this,e)},set:function(e,t){var r=v(this,e);r?r[1]=t:this.a.push([e,t])},delete:function(e){var t=d(this.a,function(t){return t[0]===e});return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,r,i){var l=e(function(e,a){s(e,l,t,\"_i\"),e._t=t,e._i=g++,e._l=void 0,void 0!=a&&c(a,r,e[i],e)});return a(l.prototype,{delete:function(e){if(!o(e))return!1;var r=n(e);return!0===r?p(h(this,t)).delete(e):r&&u(r,this._i)&&delete r[this._i]},has:function(e){if(!o(e))return!1;var r=n(e);return!0===r?p(h(this,t)).has(e):r&&u(r,this._i)}}),l},def:function(e,t,r){var a=n(i(t),!0);return!0===a?p(e).set(t,r):a[e._i]=r,e},ufstore:p}},function(e,t,r){\"use strict\";var a=r(18);e.exports=function(e,t){if(!a(e)||e._t!==t)throw TypeError(\"Incompatible receiver, \"+t+\" required!\");return e}},function(e,t,r){\"use strict\";var a=r(13),n=r(12),i=r(25),o=r(102),s=r(112),c=r(93),l=r(92),u=r(18),h=r(21),f=r(73),d=r(64),g=r(116);e.exports=function(e,t,r,p,m,v){var b=a[e],y=b,w=m?\"set\":\"add\",k=y&&y.prototype,S={},C=function(e){var t=k[e];i(k,e,\"delete\"==e?function(e){return!(v&&!u(e))&&t.call(this,0===e?0:e)}:\"has\"==e?function(e){return!(v&&!u(e))&&t.call(this,0===e?0:e)}:\"get\"==e?function(e){return v&&!u(e)?void 0:t.call(this,0===e?0:e)}:\"add\"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,r){return t.call(this,0===e?0:e,r),this})};if(\"function\"==typeof y&&(v||k.forEach&&!h(function(){(new y).entries().next()}))){var x=new y,A=x[w](v?{}:-0,1)!=x,_=h(function(){x.has(1)}),P=f(function(e){new y(e)}),I=!v&&h(function(){for(var e=new y,t=5;t--;)e[w](t,t);return!e.has(-0)});P||((y=t(function(t,r){l(t,y,e);var a=g(new b,t,y);return void 0!=r&&c(r,m,a[w],a),a})).prototype=k,k.constructor=y),(_||I)&&(C(\"delete\"),C(\"has\"),m&&C(\"get\")),(I||A)&&C(w),v&&k.clear&&delete k.clear}else y=p.getConstructor(t,e,m,w),o(y.prototype,r),s.NEED=!0;return d(y,e),S[e]=y,n(n.G+n.W+n.F*(y!=b),S),v||p.setStrong(y,e,m),y}},function(e,t,r){\"use strict\";var a=r(18),n=r(117).set;e.exports=function(e,t,r){var i,o=t.constructor;return o!==r&&\"function\"==typeof o&&(i=o.prototype)!==r.prototype&&a(i)&&n&&n(e,i),e}},function(e,t,r){\"use strict\";var a=r(18),n=r(17),i=function(e,t){if(n(e),!a(t)&&null!==t)throw TypeError(t+\": can't set as prototype!\")};e.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(e,t,a){try{(a=r(28)(Function.call,r(118).f(Object.prototype,\"__proto__\").set,2))(e,[]),t=!(e instanceof Array)}catch(n){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:a(e,r),e}}({},!1):void 0),check:i}},function(e,t,r){\"use strict\";var a=r(78),n=r(24),i=r(47),o=r(23),s=r(26),c=r(19),l=Object.getOwnPropertyDescriptor;t.f=r(20)?l:function(e,t){if(e=i(e),t=o(t,!0),c)try{return l(e,t)}catch(r){}if(s(e,t))return n(!a.f.call(e,t),e[t])}},function(e,t,r){\"use strict\";r(120)(\"WeakMap\")},function(e,t,r){\"use strict\";var a=r(12);e.exports=function(e){a(a.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},function(e,t,r){\"use strict\";r(122)(\"WeakMap\")},function(e,t,r){\"use strict\";var a=r(12),n=r(29),i=r(28),o=r(93);e.exports=function(e){a(a.S,e,{from:function(e){var t,r,a,s,c=arguments[1];return n(this),(t=void 0!==c)&&n(c),void 0==e?new this:(r=[],t?(a=0,s=i(c,arguments[2],2),o(e,!1,function(e){r.push(s(e,a++))})):o(e,!1,r.push,r),new this(r))}})}},function(e,t,r){\"use strict\";r(87),r(88),r(124),r(125),r(126),e.exports=r(14).WeakSet},function(e,t,r){\"use strict\";var a=r(113),n=r(114);r(115)(\"WeakSet\",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return a.def(n(this,\"WeakSet\"),e,!0)}},a,!1,!0)},function(e,t,r){\"use strict\";r(120)(\"WeakSet\")},function(e,t,r){\"use strict\";r(122)(\"WeakSet\")},function(e,t,r){\"use strict\";r(128),e.exports=r(14).String.codePointAt},function(e,t,r){\"use strict\";var a=r(12),n=r(53)(!1);a(a.P,\"String\",{codePointAt:function(e){return n(this,e)}})},function(e,t,r){\"use strict\";r(130),e.exports=r(14).String.fromCodePoint},function(e,t,r){\"use strict\";var a=r(12),n=r(49),i=String.fromCharCode,o=String.fromCodePoint;a(a.S+a.F*(!!o&&1!=o.length),\"String\",{fromCodePoint:function(e){for(var t,r=[],a=arguments.length,o=0;a>o;){if(t=+arguments[o++],n(t,1114111)!==t)throw RangeError(t+\" is not a valid code point\");r.push(t<65536?i(t):i(55296+((t-=65536)>>10),t%1024+56320))}return r.join(\"\")}})},function(e,t,r){\"use strict\";r(132),r(87),e.exports=r(14).Symbol},function(e,t,r){\"use strict\";function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var n=r(13),i=r(26),o=r(20),s=r(12),c=r(25),l=r(112).KEY,u=r(21),h=r(36),f=r(64),d=r(27),g=r(35),p=r(133),m=r(134),v=r(135),b=r(111),y=r(17),w=r(18),k=r(47),S=r(23),C=r(24),x=r(57),A=r(136),_=r(118),P=r(16),I=r(59),E=_.f,T=P.f,O=A.f,F=n.Symbol,R=n.JSON,B=R&&R.stringify,M=g(\"_hidden\"),D=g(\"toPrimitive\"),L={}.propertyIsEnumerable,N=h(\"symbol-registry\"),U=h(\"symbols\"),q=h(\"op-symbols\"),j=Object.prototype,z=\"function\"==typeof F,H=n.QObject,W=!H||!H.prototype||!H.prototype.findChild,G=o&&u(function(){return 7!=x(T({},\"a\",{get:function(){return T(this,\"a\",{value:7}).a}})).a})?function(e,t,r){var a=E(j,t);a&&delete j[t],T(e,t,r),a&&e!==j&&T(j,t,a)}:T,X=function(e){var t=U[e]=x(F.prototype);return t._k=e,t},V=z&&\"symbol\"==a(F.iterator)?function(e){return\"symbol\"==a(e)}:function(e){return e instanceof F},Y=function(e,t,r){return e===j&&Y(q,t,r),y(e),t=S(t,!0),y(r),i(U,t)?(r.enumerable?(i(e,M)&&e[M][t]&&(e[M][t]=!1),r=x(r,{enumerable:C(0,!1)})):(i(e,M)||T(e,M,C(1,{})),e[M][t]=!0),G(e,t,r)):T(e,t,r)},K=function(e,t){y(e);for(var r,a=v(t=k(t)),n=0,i=a.length;i>n;)Y(e,r=a[n++],t[r]);return e},J=function(e){var t=L.call(this,e=S(e,!0));return!(this===j&&i(U,e)&&!i(q,e))&&(!(t||!i(this,e)||!i(U,e)||i(this,M)&&this[M][e])||t)},Z=function(e,t){if(e=k(e),t=S(t,!0),e!==j||!i(U,t)||i(q,t)){var r=E(e,t);return!r||!i(U,t)||i(e,M)&&e[M][t]||(r.enumerable=!0),r}},Q=function(e){for(var t,r=O(k(e)),a=[],n=0;r.length>n;)i(U,t=r[n++])||t==M||t==l||a.push(t);return a},$=function(e){for(var t,r=e===j,a=O(r?q:k(e)),n=[],o=0;a.length>o;)!i(U,t=a[o++])||r&&!i(j,t)||n.push(U[t]);return n};z||(c((F=function(){if(this instanceof F)throw TypeError(\"Symbol is not a constructor!\");var e=d(arguments.length>0?arguments[0]:void 0);return o&&W&&G(j,e,{configurable:!0,set:function t(r){this===j&&t.call(q,r),i(this,M)&&i(this[M],e)&&(this[M][e]=!1),G(this,e,C(1,r))}}),X(e)}).prototype,\"toString\",function(){return this._k}),_.f=Z,P.f=Y,r(137).f=A.f=Q,r(78).f=J,r(77).f=$,o&&!r(37)&&c(j,\"propertyIsEnumerable\",J,!0),p.f=function(e){return X(g(e))}),s(s.G+s.W+s.F*!z,{Symbol:F});for(var ee=\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),te=0;ee.length>te;)g(ee[te++]);for(var re=I(g.store),ae=0;re.length>ae;)m(re[ae++]);s(s.S+s.F*!z,\"Symbol\",{for:function(e){return i(N,e+=\"\")?N[e]:N[e]=F(e)},keyFor:function(e){if(!V(e))throw TypeError(e+\" is not a symbol!\");for(var t in N)if(N[t]===e)return t},useSetter:function(){W=!0},useSimple:function(){W=!1}}),s(s.S+s.F*!z,\"Object\",{create:function(e,t){return void 0===t?x(e):K(x(e),t)},defineProperty:Y,defineProperties:K,getOwnPropertyDescriptor:Z,getOwnPropertyNames:Q,getOwnPropertySymbols:$}),R&&s(s.S+s.F*(!z||u(function(){var e=F();return\"[null]\"!=B([e])||\"{}\"!=B({a:e})||\"{}\"!=B(Object(e))})),\"JSON\",{stringify:function(e){for(var t,r,a=[e],n=1;arguments.length>n;)a.push(arguments[n++]);if(r=t=a[1],(w(t)||void 0!==e)&&!V(e))return b(t)||(t=function(e,t){if(\"function\"==typeof r&&(t=r.call(this,e,t)),!V(t))return t}),a[1]=t,B.apply(R,a)}}),F.prototype[D]||r(15)(F.prototype,D,F.prototype.valueOf),f(F,\"Symbol\"),f(Math,\"Math\",!0),f(n.JSON,\"JSON\",!0)},function(e,t,r){\"use strict\";t.f=r(35)},function(e,t,r){\"use strict\";var a=r(13),n=r(14),i=r(37),o=r(133),s=r(16).f;e.exports=function(e){var t=n.Symbol||(n.Symbol=i?{}:a.Symbol||{});\"_\"==e.charAt(0)||e in t||s(t,e,{value:o.f(e)})}},function(e,t,r){\"use strict\";var a=r(59),n=r(77),i=r(78);e.exports=function(e){var t=a(e),r=n.f;if(r)for(var o,s=r(e),c=i.f,l=0;s.length>l;)c.call(e,o=s[l++])&&t.push(o);return t}},function(e,t,r){\"use strict\";function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var n=r(47),i=r(137).f,o={}.toString,s=\"object\"==(\"undefined\"===typeof window?\"undefined\":a(window))&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&\"[object Window]\"==o.call(e)?function(e){try{return i(e)}catch(t){return s.slice()}}(e):i(n(e))}},function(e,t,r){\"use strict\";var a=r(60),n=r(62).concat(\"length\",\"prototype\");t.f=Object.getOwnPropertyNames||function(e){return a(e,n)}},function(e,t,r){\"use strict\";r(139),e.exports=r(14).String.padStart},function(e,t,r){\"use strict\";var a=r(12),n=r(140),i=r(100);a(a.P+a.F*/Version\\/10\\.\\d+(\\.\\d+)? Safari\\//.test(i),\"String\",{padStart:function(e){return n(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,r){\"use strict\";var a=r(30),n=r(141),i=r(38);e.exports=function(e,t,r,o){var s=String(i(e)),c=s.length,l=void 0===r?\" \":String(r),u=a(t);if(u<=c||\"\"==l)return s;var h=u-c,f=n.call(l,Math.ceil(h/l.length));return f.length>h&&(f=f.slice(0,h)),o?f+s:s+f}},function(e,t,r){\"use strict\";var a=r(31),n=r(38);e.exports=function(e){var t=String(n(this)),r=\"\",i=a(e);if(i<0||i==1/0)throw RangeError(\"Count can't be negative\");for(;i>0;(i>>>=1)&&(t+=t))1&i&&(r+=t);return r}},function(e,t,r){\"use strict\";r(143),e.exports=r(14).String.padEnd},function(e,t,r){\"use strict\";var a=r(12),n=r(140),i=r(100);a(a.P+a.F*/Version\\/10\\.\\d+(\\.\\d+)? Safari\\//.test(i),\"String\",{padEnd:function(e){return n(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,r){\"use strict\";r(145),e.exports=r(14).Object.values},function(e,t,r){\"use strict\";var a=r(12),n=r(146)(!1);a(a.S,\"Object\",{values:function(e){return n(e)}})},function(e,t,r){\"use strict\";var a=r(59),n=r(47),i=r(78).f;e.exports=function(e){return function(t){for(var r,o=n(t),s=a(o),c=s.length,l=0,u=[];c>l;)i.call(o,r=s[l++])&&u.push(e?[r,o[r]]:o[r]);return u}}},function(e,t,r){\"use strict\";var a=!1;if(\"undefined\"!==typeof ReadableStream)try{new ReadableStream({start:function(e){e.close()}}),a=!0}catch(n){}t.ReadableStream=a?ReadableStream:r(148).ReadableStream},function(e,t,r){\"use strict\";function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=7)}([function(e,t,r){var n=\"function\"===typeof Symbol&&\"symbol\"===a(Symbol.iterator)?function(e){return a(e)}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":a(e)},i=r(1).assert;function o(e){return\"string\"===typeof e||\"symbol\"===(\"undefined\"===typeof e?\"undefined\":n(e))}function s(e,t,r){if(\"function\"!==typeof e)throw new TypeError(\"Argument is not a function\");return Function.prototype.apply.call(e,t,r)}t.typeIsObject=function(e){return\"object\"===(\"undefined\"===typeof e?\"undefined\":n(e))&&null!==e||\"function\"===typeof e},t.createDataProperty=function(e,r,a){i(t.typeIsObject(e)),Object.defineProperty(e,r,{value:a,writable:!0,enumerable:!0,configurable:!0})},t.createArrayFromList=function(e){return e.slice()},t.ArrayBufferCopy=function(e,t,r,a,n){new Uint8Array(e).set(new Uint8Array(r,a,n),t)},t.CreateIterResultObject=function(e,t){i(\"boolean\"===typeof t);var r={};return Object.defineProperty(r,\"value\",{value:e,enumerable:!0,writable:!0,configurable:!0}),Object.defineProperty(r,\"done\",{value:t,enumerable:!0,writable:!0,configurable:!0}),r},t.IsFiniteNonNegativeNumber=function(e){return!Number.isNaN(e)&&(e!==1/0&&!(e<0))},t.InvokeOrNoop=function(e,t,r){i(void 0!==e),i(o(t)),i(Array.isArray(r));var a=e[t];if(void 0!==a)return s(a,e,r)},t.PromiseInvokeOrNoop=function(e,r,a){i(void 0!==e),i(o(r)),i(Array.isArray(a));try{return Promise.resolve(t.InvokeOrNoop(e,r,a))}catch(n){return Promise.reject(n)}},t.PromiseInvokeOrPerformFallback=function(e,t,r,a,n){i(void 0!==e),i(o(t)),i(Array.isArray(r)),i(Array.isArray(n));var c=void 0;try{c=e[t]}catch(l){return Promise.reject(l)}if(void 0===c)return a.apply(null,n);try{return Promise.resolve(s(c,e,r))}catch(u){return Promise.reject(u)}},t.TransferArrayBuffer=function(e){return e.slice()},t.ValidateAndNormalizeHighWaterMark=function(e){if(e=Number(e),Number.isNaN(e)||e<0)throw new RangeError(\"highWaterMark property of a queuing strategy must be non-negative and non-NaN\");return e},t.ValidateAndNormalizeQueuingStrategy=function(e,r){if(void 0!==e&&\"function\"!==typeof e)throw new TypeError(\"size property of a queuing strategy must be a function\");return{size:e,highWaterMark:r=t.ValidateAndNormalizeHighWaterMark(r)}}},function(e,t,r){function a(e){this.name=\"AssertionError\",this.message=e||\"\",this.stack=(new Error).stack}a.prototype=Object.create(Error.prototype),a.prototype.constructor=a,e.exports={rethrowAssertionErrorRejection:function(e){e&&e.constructor===a&&setTimeout(function(){throw e},0)},AssertionError:a,assert:function(e,t){if(!e)throw new a(t)}}},function(e,t,r){var a=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}();function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var i=r(0),o=i.InvokeOrNoop,s=i.PromiseInvokeOrNoop,c=i.ValidateAndNormalizeQueuingStrategy,l=i.typeIsObject,u=r(1),h=u.assert,f=u.rethrowAssertionErrorRejection,d=r(3),g=d.DequeueValue,p=d.EnqueueValueWithSize,m=d.PeekQueueValue,v=d.ResetQueue,b=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.size,i=r.highWaterMark,o=void 0===i?1:i;if(n(this,e),this._state=\"writable\",this._storedError=void 0,this._writer=void 0,this._writableStreamController=void 0,this._writeRequests=[],this._inFlightWriteRequest=void 0,this._closeRequest=void 0,this._inFlightCloseRequest=void 0,this._pendingAbortRequest=void 0,this._backpressure=!1,void 0!==t.type)throw new RangeError(\"Invalid type is specified\");this._writableStreamController=new N(this,t,a,o),this._writableStreamController.__startSteps()}return a(e,[{key:\"abort\",value:function(e){return!1===w(this)?Promise.reject(W(\"abort\")):!0===k(this)?Promise.reject(new TypeError(\"Cannot abort a stream that already has a writer\")):S(this,e)}},{key:\"getWriter\",value:function(){if(!1===w(this))throw W(\"getWriter\");return y(this)}},{key:\"locked\",get:function(){if(!1===w(this))throw W(\"locked\");return k(this)}}]),e}();function y(e){return new O(e)}function w(e){return!!l(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_writableStreamController\")}function k(e){return h(!0===w(e),\"IsWritableStreamLocked should only be used on known writable streams\"),void 0!==e._writer}function S(e,t){var r=e._state;if(\"closed\"===r)return Promise.resolve(void 0);if(\"errored\"===r)return Promise.reject(e._storedError);var a=new TypeError(\"Requested to abort\");if(void 0!==e._pendingAbortRequest)return Promise.reject(a);h(\"writable\"===r||\"erroring\"===r,\"state must be writable or erroring\");var n=!1;\"erroring\"===r&&(n=!0,t=void 0);var i=new Promise(function(r,a){e._pendingAbortRequest={_resolve:r,_reject:a,_reason:t,_wasAlreadyErroring:n}});return!1===n&&x(e,a),i}function C(e,t){var r=e._state;\"writable\"!==r?(h(\"erroring\"===r),A(e)):x(e,t)}function x(e,t){h(void 0===e._storedError,\"stream._storedError === undefined\"),h(\"writable\"===e._state,\"state must be writable\");var r=e._writableStreamController;h(void 0!==r,\"controller must not be undefined\"),e._state=\"erroring\",e._storedError=t;var a=e._writer;void 0!==a&&M(a,t),!1===I(e)&&!0===r._started&&A(e)}function A(e){h(\"erroring\"===e._state,\"stream._state === erroring\"),h(!1===I(e),\"WritableStreamHasOperationMarkedInFlight(stream) === false\"),e._state=\"errored\",e._writableStreamController.__errorSteps();for(var t=e._storedError,r=0;r<e._writeRequests.length;r++){e._writeRequests[r]._reject(t)}if(e._writeRequests=[],void 0!==e._pendingAbortRequest){var a=e._pendingAbortRequest;if(e._pendingAbortRequest=void 0,!0===a._wasAlreadyErroring)return a._reject(t),void E(e);e._writableStreamController.__abortSteps(a._reason).then(function(){a._resolve(),E(e)},function(t){a._reject(t),E(e)})}else E(e)}function _(e){h(void 0!==e._inFlightCloseRequest),e._inFlightCloseRequest._resolve(void 0),e._inFlightCloseRequest=void 0;var t=e._state;h(\"writable\"===t||\"erroring\"===t),\"erroring\"===t&&(e._storedError=void 0,void 0!==e._pendingAbortRequest&&(e._pendingAbortRequest._resolve(),e._pendingAbortRequest=void 0)),e._state=\"closed\";var r=e._writer;void 0!==r&&function(e){h(void 0!==e._closedPromise_resolve,\"writer._closedPromise_resolve !== undefined\"),h(void 0!==e._closedPromise_reject,\"writer._closedPromise_reject !== undefined\"),h(\"pending\"===e._closedPromiseState,\"writer._closedPromiseState is pending\"),e._closedPromise_resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"resolved\"}(r),h(void 0===e._pendingAbortRequest,\"stream._pendingAbortRequest === undefined\"),h(void 0===e._storedError,\"stream._storedError === undefined\")}function P(e){return void 0!==e._closeRequest||void 0!==e._inFlightCloseRequest}function I(e){return void 0!==e._inFlightWriteRequest||void 0!==e._inFlightCloseRequest}function E(e){h(\"errored\"===e._state,'_stream_.[[state]] is `\"errored\"`'),void 0!==e._closeRequest&&(h(void 0===e._inFlightCloseRequest),e._closeRequest._reject(e._storedError),e._closeRequest=void 0);var t=e._writer;void 0!==t&&(Y(t,e._storedError),t._closedPromise.catch(function(){}))}function T(e,t){h(\"writable\"===e._state),h(!1===P(e));var r=e._writer;void 0!==r&&t!==e._backpressure&&(!0===t?function(e){h(void 0===e._readyPromise_resolve,\"writer._readyPromise_resolve === undefined\"),h(void 0===e._readyPromise_reject,\"writer._readyPromise_reject === undefined\"),e._readyPromise=new Promise(function(t,r){e._readyPromise_resolve=t,e._readyPromise_reject=r}),e._readyPromiseState=\"pending\"}(r):(h(!1===t),Z(r))),e._backpressure=t}e.exports={AcquireWritableStreamDefaultWriter:y,IsWritableStream:w,IsWritableStreamLocked:k,WritableStream:b,WritableStreamAbort:S,WritableStreamDefaultControllerError:H,WritableStreamDefaultWriterCloseWithErrorPropagation:function(e){var t=e._ownerWritableStream;h(void 0!==t);var r=t._state;if(!0===P(t)||\"closed\"===r)return Promise.resolve();if(\"errored\"===r)return Promise.reject(t._storedError);return h(\"writable\"===r||\"erroring\"===r),R(e)},WritableStreamDefaultWriterRelease:D,WritableStreamDefaultWriterWrite:L,WritableStreamCloseQueuedOrInFlight:P};var O=function(){function e(t){if(n(this,e),!1===w(t))throw new TypeError(\"WritableStreamDefaultWriter can only be constructed with a WritableStream instance\");if(!0===k(t))throw new TypeError(\"This stream has already been locked for exclusive writing by another writer\");this._ownerWritableStream=t,t._writer=this;var r,a=t._state;if(\"writable\"===a)!1===P(t)&&!0===t._backpressure?((r=this)._readyPromise=new Promise(function(e,t){r._readyPromise_resolve=e,r._readyPromise_reject=t}),r._readyPromiseState=\"pending\"):J(this),V(this);else if(\"erroring\"===a)K(this,t._storedError),this._readyPromise.catch(function(){}),V(this);else if(\"closed\"===a)J(this),function(e){e._closedPromise=Promise.resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"resolved\"}(this);else{h(\"errored\"===a,\"state must be errored\");var i=t._storedError;K(this,i),this._readyPromise.catch(function(){}),function(e,t){e._closedPromise=Promise.reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"rejected\"}(this,i),this._closedPromise.catch(function(){})}}return a(e,[{key:\"abort\",value:function(e){return!1===F(this)?Promise.reject(G(\"abort\")):void 0===this._ownerWritableStream?Promise.reject(X(\"abort\")):function(e,t){var r=e._ownerWritableStream;return h(void 0!==r),S(r,t)}(this,e)}},{key:\"close\",value:function(){if(!1===F(this))return Promise.reject(G(\"close\"));var e=this._ownerWritableStream;return void 0===e?Promise.reject(X(\"close\")):!0===P(e)?Promise.reject(new TypeError(\"cannot close an already-closing stream\")):R(this)}},{key:\"releaseLock\",value:function(){if(!1===F(this))throw G(\"releaseLock\");var e=this._ownerWritableStream;void 0!==e&&(h(void 0!==e._writer),D(this))}},{key:\"write\",value:function(e){return!1===F(this)?Promise.reject(G(\"write\")):void 0===this._ownerWritableStream?Promise.reject(X(\"write to\")):L(this,e)}},{key:\"closed\",get:function(){return!1===F(this)?Promise.reject(G(\"closed\")):this._closedPromise}},{key:\"desiredSize\",get:function(){if(!1===F(this))throw G(\"desiredSize\");if(void 0===this._ownerWritableStream)throw X(\"desiredSize\");return function(e){var t=e._ownerWritableStream,r=t._state;if(\"errored\"===r||\"erroring\"===r)return null;if(\"closed\"===r)return 0;return U(t._writableStreamController)}(this)}},{key:\"ready\",get:function(){return!1===F(this)?Promise.reject(G(\"ready\")):this._readyPromise}}]),e}();function F(e){return!!l(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_ownerWritableStream\")}function R(e){var t=e._ownerWritableStream;h(void 0!==t);var r=t._state;if(\"closed\"===r||\"errored\"===r)return Promise.reject(new TypeError(\"The stream (in \"+r+\" state) is not in the writable state and cannot be closed\"));h(\"writable\"===r||\"erroring\"===r),h(!1===P(t));var a,n=new Promise(function(e,r){var a={_resolve:e,_reject:r};t._closeRequest=a});return!0===t._backpressure&&\"writable\"===r&&Z(e),a=t._writableStreamController,p(a,\"close\",0),q(a),n}function B(e,t){\"pending\"===e._closedPromiseState?Y(e,t):function(e,t){h(void 0===e._closedPromise_resolve,\"writer._closedPromise_resolve === undefined\"),h(void 0===e._closedPromise_reject,\"writer._closedPromise_reject === undefined\"),h(\"pending\"!==e._closedPromiseState,\"writer._closedPromiseState is not pending\"),e._closedPromise=Promise.reject(t),e._closedPromiseState=\"rejected\"}(e,t),e._closedPromise.catch(function(){})}function M(e,t){\"pending\"===e._readyPromiseState?function(e,t){h(void 0!==e._readyPromise_resolve,\"writer._readyPromise_resolve !== undefined\"),h(void 0!==e._readyPromise_reject,\"writer._readyPromise_reject !== undefined\"),e._readyPromise_reject(t),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"rejected\"}(e,t):function(e,t){h(void 0===e._readyPromise_resolve,\"writer._readyPromise_resolve === undefined\"),h(void 0===e._readyPromise_reject,\"writer._readyPromise_reject === undefined\"),e._readyPromise=Promise.reject(t),e._readyPromiseState=\"rejected\"}(e,t),e._readyPromise.catch(function(){})}function D(e){var t=e._ownerWritableStream;h(void 0!==t),h(t._writer===e);var r=new TypeError(\"Writer was released and can no longer be used to monitor the stream's closedness\");M(e,r),B(e,r),t._writer=void 0,e._ownerWritableStream=void 0}function L(e,t){var r=e._ownerWritableStream;h(void 0!==r);var a=r._writableStreamController,n=function(e,t){var r=e._strategySize;if(void 0===r)return 1;try{return r(t)}catch(a){return j(e,a),1}}(a,t);if(r!==e._ownerWritableStream)return Promise.reject(X(\"write to\"));var i=r._state;if(\"errored\"===i)return Promise.reject(r._storedError);if(!0===P(r)||\"closed\"===i)return Promise.reject(new TypeError(\"The stream is closing or closed and cannot be written to\"));if(\"erroring\"===i)return Promise.reject(r._storedError);h(\"writable\"===i);var o=function(e){return h(!0===k(e)),h(\"writable\"===e._state),new Promise(function(t,r){var a={_resolve:t,_reject:r};e._writeRequests.push(a)})}(r);return function(e,t,r){var a={chunk:t};try{p(e,a,r)}catch(o){return void j(e,o)}var n=e._controlledWritableStream;if(!1===P(n)&&\"writable\"===n._state){var i=z(e);T(n,i)}q(e)}(a,t,n),o}var N=function(){function e(t,r,a,i){if(n(this,e),!1===w(t))throw new TypeError(\"WritableStreamDefaultController can only be constructed with a WritableStream instance\");if(void 0!==t._writableStreamController)throw new TypeError(\"WritableStreamDefaultController instances can only be created by the WritableStream constructor\");this._controlledWritableStream=t,this._underlyingSink=r,this._queue=void 0,this._queueTotalSize=void 0,v(this),this._started=!1;var o=c(a,i);this._strategySize=o.size,this._strategyHWM=o.highWaterMark,T(t,z(this))}return a(e,[{key:\"error\",value:function(e){if(!1===function(e){if(!l(e))return!1;if(!Object.prototype.hasOwnProperty.call(e,\"_underlyingSink\"))return!1;return!0}(this))throw new TypeError(\"WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController\");\"writable\"===this._controlledWritableStream._state&&H(this,e)}},{key:\"__abortSteps\",value:function(e){return s(this._underlyingSink,\"abort\",[e])}},{key:\"__errorSteps\",value:function(){v(this)}},{key:\"__startSteps\",value:function(){var e=this,t=o(this._underlyingSink,\"start\",[this]),r=this._controlledWritableStream;Promise.resolve(t).then(function(){h(\"writable\"===r._state||\"erroring\"===r._state),e._started=!0,q(e)},function(t){h(\"writable\"===r._state||\"erroring\"===r._state),e._started=!0,C(r,t)}).catch(f)}}]),e}();function U(e){return e._strategyHWM-e._queueTotalSize}function q(e){var t=e._controlledWritableStream;if(!1!==e._started&&void 0===t._inFlightWriteRequest){var r=t._state;if(\"closed\"!==r&&\"errored\"!==r)if(\"erroring\"!==r){if(0!==e._queue.length){var a=m(e);\"close\"===a?function(e){var t=e._controlledWritableStream;(function(e){h(void 0===e._inFlightCloseRequest),h(void 0!==e._closeRequest),e._inFlightCloseRequest=e._closeRequest,e._closeRequest=void 0})(t),g(e),h(0===e._queue.length,\"queue must be empty once the final write record is dequeued\"),s(e._underlyingSink,\"close\",[]).then(function(){_(t)},function(e){!function(e,t){h(void 0!==e._inFlightCloseRequest),e._inFlightCloseRequest._reject(t),e._inFlightCloseRequest=void 0,h(\"writable\"===e._state||\"erroring\"===e._state),void 0!==e._pendingAbortRequest&&(e._pendingAbortRequest._reject(t),e._pendingAbortRequest=void 0),C(e,t)}(t,e)}).catch(f)}(e):function(e,t){var r=e._controlledWritableStream;(function(e){h(void 0===e._inFlightWriteRequest,\"there must be no pending write request\"),h(0!==e._writeRequests.length,\"writeRequests must not be empty\"),e._inFlightWriteRequest=e._writeRequests.shift()})(r),s(e._underlyingSink,\"write\",[t,e]).then(function(){!function(e){h(void 0!==e._inFlightWriteRequest),e._inFlightWriteRequest._resolve(void 0),e._inFlightWriteRequest=void 0}(r);var t=r._state;if(h(\"writable\"===t||\"erroring\"===t),g(e),!1===P(r)&&\"writable\"===t){var a=z(e);T(r,a)}q(e)},function(e){!function(e,t){h(void 0!==e._inFlightWriteRequest),e._inFlightWriteRequest._reject(t),e._inFlightWriteRequest=void 0,h(\"writable\"===e._state||\"erroring\"===e._state),C(e,t)}(r,e)}).catch(f)}(e,a.chunk)}}else A(t)}}function j(e,t){\"writable\"===e._controlledWritableStream._state&&H(e,t)}function z(e){return U(e)<=0}function H(e,t){var r=e._controlledWritableStream;h(\"writable\"===r._state),x(r,t)}function W(e){return new TypeError(\"WritableStream.prototype.\"+e+\" can only be used on a WritableStream\")}function G(e){return new TypeError(\"WritableStreamDefaultWriter.prototype.\"+e+\" can only be used on a WritableStreamDefaultWriter\")}function X(e){return new TypeError(\"Cannot \"+e+\" a stream using a released writer\")}function V(e){e._closedPromise=new Promise(function(t,r){e._closedPromise_resolve=t,e._closedPromise_reject=r,e._closedPromiseState=\"pending\"})}function Y(e,t){h(void 0!==e._closedPromise_resolve,\"writer._closedPromise_resolve !== undefined\"),h(void 0!==e._closedPromise_reject,\"writer._closedPromise_reject !== undefined\"),h(\"pending\"===e._closedPromiseState,\"writer._closedPromiseState is pending\"),e._closedPromise_reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState=\"rejected\"}function K(e,t){e._readyPromise=Promise.reject(t),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"rejected\"}function J(e){e._readyPromise=Promise.resolve(void 0),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"fulfilled\"}function Z(e){h(void 0!==e._readyPromise_resolve,\"writer._readyPromise_resolve !== undefined\"),h(void 0!==e._readyPromise_reject,\"writer._readyPromise_reject !== undefined\"),e._readyPromise_resolve(void 0),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState=\"fulfilled\"}},function(e,t,r){var a=r(0).IsFiniteNonNegativeNumber,n=r(1).assert;t.DequeueValue=function(e){n(\"_queue\"in e&&\"_queueTotalSize\"in e,\"Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].\"),n(e._queue.length>0,\"Spec-level failure: should never dequeue from an empty queue.\");var t=e._queue.shift();return e._queueTotalSize-=t.size,e._queueTotalSize<0&&(e._queueTotalSize=0),t.value},t.EnqueueValueWithSize=function(e,t,r){if(n(\"_queue\"in e&&\"_queueTotalSize\"in e,\"Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and [[queueTotalSize]].\"),r=Number(r),!a(r))throw new RangeError(\"Size must be a finite, non-NaN, non-negative number.\");e._queue.push({value:t,size:r}),e._queueTotalSize+=r},t.PeekQueueValue=function(e){return n(\"_queue\"in e&&\"_queueTotalSize\"in e,\"Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].\"),n(e._queue.length>0,\"Spec-level failure: should never peek at an empty queue.\"),e._queue[0].value},t.ResetQueue=function(e){n(\"_queue\"in e&&\"_queueTotalSize\"in e,\"Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].\"),e._queue=[],e._queueTotalSize=0}},function(e,t,r){var a=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}();function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var i=r(0),o=i.ArrayBufferCopy,s=i.CreateIterResultObject,c=i.IsFiniteNonNegativeNumber,l=i.InvokeOrNoop,u=i.PromiseInvokeOrNoop,h=i.TransferArrayBuffer,f=i.ValidateAndNormalizeQueuingStrategy,d=i.ValidateAndNormalizeHighWaterMark,g=r(0),p=g.createArrayFromList,m=g.createDataProperty,v=g.typeIsObject,b=r(1),y=b.assert,w=b.rethrowAssertionErrorRejection,k=r(3),S=k.DequeueValue,C=k.EnqueueValueWithSize,x=k.ResetQueue,A=r(2),_=A.AcquireWritableStreamDefaultWriter,P=A.IsWritableStream,I=A.IsWritableStreamLocked,E=A.WritableStreamAbort,T=A.WritableStreamDefaultWriterCloseWithErrorPropagation,O=A.WritableStreamDefaultWriterRelease,F=A.WritableStreamDefaultWriterWrite,R=A.WritableStreamCloseQueuedOrInFlight,B=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.size,i=r.highWaterMark;n(this,e),this._state=\"readable\",this._reader=void 0,this._storedError=void 0,this._disturbed=!1,this._readableStreamController=void 0;var o=t.type;if(\"bytes\"===String(o))void 0===i&&(i=0),this._readableStreamController=new fe(this,t,i);else{if(void 0!==o)throw new RangeError(\"Invalid type is specified\");void 0===i&&(i=1),this._readableStreamController=new ae(this,t,a,i)}}return a(e,[{key:\"cancel\",value:function(e){return!1===D(this)?Promise.reject(Ee(\"cancel\")):!0===L(this)?Promise.reject(new TypeError(\"Cannot cancel a stream that already has a reader\")):j(this,e)}},{key:\"getReader\",value:function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).mode;if(!1===D(this))throw Ee(\"getReader\");if(void 0===e)return M(this);if(\"byob\"===(e=String(e)))return new J(this);throw new RangeError(\"Invalid mode is specified\")}},{key:\"pipeThrough\",value:function(e,t){var r=e.writable,a=e.readable;return function(e){try{Promise.prototype.then.call(e,void 0,function(){})}catch(t){}}(this.pipeTo(r,t)),a}},{key:\"pipeTo\",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r.preventClose,n=r.preventAbort,i=r.preventCancel;if(!1===D(this))return Promise.reject(Ee(\"pipeTo\"));if(!1===P(e))return Promise.reject(new TypeError(\"ReadableStream.prototype.pipeTo's first argument must be a WritableStream\"));if(a=Boolean(a),n=Boolean(n),i=Boolean(i),!0===L(this))return Promise.reject(new TypeError(\"ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream\"));if(!0===I(e))return Promise.reject(new TypeError(\"ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream\"));var o=M(this),s=_(e),c=!1,l=Promise.resolve();return new Promise(function(r,u){var h,f,d;if(m(t,o._closedPromise,function(t){!1===n?v(function(){return E(e,t)},!0,t):b(!0,t)}),m(e,s._closedPromise,function(e){!1===i?v(function(){return j(t,e)},!0,e):b(!0,e)}),h=t,f=o._closedPromise,d=function(){!1===a?v(function(){return T(s)}):b()},\"closed\"===h._state?d():f.then(d).catch(w),!0===R(e)||\"closed\"===e._state){var g=new TypeError(\"the destination writable stream closed before all data could be piped to it\");!1===i?v(function(){return j(t,g)},!0,g):b(!0,g)}function p(){var e=l;return l.then(function(){return e!==l?p():void 0})}function m(e,t,r){\"errored\"===e._state?r(e._storedError):t.catch(r).catch(w)}function v(t,r,a){function n(){t().then(function(){return y(r,a)},function(e){return y(!0,e)}).catch(w)}!0!==c&&(c=!0,\"writable\"===e._state&&!1===R(e)?p().then(n):n())}function b(t,r){!0!==c&&(c=!0,\"writable\"===e._state&&!1===R(e)?p().then(function(){return y(t,r)}).catch(w):y(t,r))}function y(e,t){O(s),te(o),e?u(t):r(void 0)}(function e(){return l=Promise.resolve(),!0===c?Promise.resolve():s._readyPromise.then(function(){return re(o).then(function(e){var t=e.value;!0!==e.done&&(l=F(s,t).catch(function(){}))})}).then(e)})().catch(function(e){l=Promise.resolve(),w(e)})})}},{key:\"tee\",value:function(){if(!1===D(this))throw Ee(\"tee\");var e=N(this,!1);return p(e)}},{key:\"locked\",get:function(){if(!1===D(this))throw Ee(\"locked\");return L(this)}}]),e}();function M(e){return new K(e)}function D(e){return!!v(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_readableStreamController\")}function L(e){return y(!0===D(e),\"IsReadableStreamLocked should only be used on known readable streams\"),void 0!==e._reader}function N(e,t){y(!0===D(e)),y(\"boolean\"===typeof t);var r=M(e),a={closedOrErrored:!1,canceled1:!1,canceled2:!1,reason1:void 0,reason2:void 0};a.promise=new Promise(function(e){a._resolve=e});var n=function(){return function e(){var t=e._reader,r=e._branch1,a=e._branch2,n=e._teeState;return re(t).then(function(e){y(v(e));var t=e.value,i=e.done;if(y(\"boolean\"===typeof i),!0===i&&!1===n.closedOrErrored&&(!1===n.canceled1&&oe(r),!1===n.canceled2&&oe(a),n.closedOrErrored=!0),!0!==n.closedOrErrored){var o=t,s=t;!1===n.canceled1&&se(r,o),!1===n.canceled2&&se(a,s)}})}}();n._reader=r,n._teeState=a,n._cloneForBranch2=t;var i=function(){return function e(t){var r=e._stream,a=e._teeState;a.canceled1=!0;a.reason1=t;if(!0===a.canceled2){var n=p([a.reason1,a.reason2]),i=j(r,n);a._resolve(i)}return a.promise}}();i._stream=e,i._teeState=a;var o=function(){return function e(t){var r=e._stream,a=e._teeState;a.canceled2=!0;a.reason2=t;if(!0===a.canceled1){var n=p([a.reason1,a.reason2]),i=j(r,n);a._resolve(i)}return a.promise}}();o._stream=e,o._teeState=a;var s=Object.create(Object.prototype);m(s,\"pull\",n),m(s,\"cancel\",i);var c=new B(s),l=Object.create(Object.prototype);m(l,\"pull\",n),m(l,\"cancel\",o);var u=new B(l);return n._branch1=c._readableStreamController,n._branch2=u._readableStreamController,r._closedPromise.catch(function(e){!0!==a.closedOrErrored&&(ce(n._branch1,e),ce(n._branch2,e),a.closedOrErrored=!0)}),[c,u]}function U(e){return y(!0===Z(e._reader)),y(\"readable\"===e._state||\"closed\"===e._state),new Promise(function(t,r){var a={_resolve:t,_reject:r};e._reader._readIntoRequests.push(a)})}function q(e){return y(!0===Q(e._reader)),y(\"readable\"===e._state),new Promise(function(t,r){var a={_resolve:t,_reject:r};e._reader._readRequests.push(a)})}function j(e,t){return e._disturbed=!0,\"closed\"===e._state?Promise.resolve(void 0):\"errored\"===e._state?Promise.reject(e._storedError):(z(e),e._readableStreamController.__cancelSteps(t).then(function(){}))}function z(e){y(\"readable\"===e._state),e._state=\"closed\";var t=e._reader;if(void 0!==t){if(!0===Q(t)){for(var r=0;r<t._readRequests.length;r++){(0,t._readRequests[r]._resolve)(s(void 0,!0))}t._readRequests=[]}!function(e){y(void 0!==e._closedPromise_resolve),y(void 0!==e._closedPromise_reject),e._closedPromise_resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}(t)}}function H(e,t){y(!0===D(e),\"stream must be ReadableStream\"),y(\"readable\"===e._state,\"state must be readable\"),e._state=\"errored\",e._storedError=t;var r=e._reader;if(void 0!==r){if(!0===Q(r)){for(var a=0;a<r._readRequests.length;a++){r._readRequests[a]._reject(t)}r._readRequests=[]}else{y(Z(r),\"reader must be ReadableStreamBYOBReader\");for(var n=0;n<r._readIntoRequests.length;n++){r._readIntoRequests[n]._reject(t)}r._readIntoRequests=[]}Fe(r,t),r._closedPromise.catch(function(){})}}function W(e,t,r){var a=e._reader;y(a._readRequests.length>0),a._readRequests.shift()._resolve(s(t,r))}function G(e){return e._reader._readIntoRequests.length}function X(e){return e._reader._readRequests.length}function V(e){var t=e._reader;return void 0!==t&&!1!==Z(t)}function Y(e){var t=e._reader;return void 0!==t&&!1!==Q(t)}e.exports={ReadableStream:B,IsReadableStreamDisturbed:function(e){return y(!0===D(e),\"IsReadableStreamDisturbed should only be used on known readable streams\"),e._disturbed},ReadableStreamDefaultControllerClose:oe,ReadableStreamDefaultControllerEnqueue:se,ReadableStreamDefaultControllerError:ce,ReadableStreamDefaultControllerGetDesiredSize:ue};var K=function(){function e(t){if(n(this,e),!1===D(t))throw new TypeError(\"ReadableStreamDefaultReader can only be constructed with a ReadableStream instance\");if(!0===L(t))throw new TypeError(\"This stream has already been locked for exclusive reading by another reader\");$(this,t),this._readRequests=[]}return a(e,[{key:\"cancel\",value:function(e){return!1===Q(this)?Promise.reject(Oe(\"cancel\")):void 0===this._ownerReadableStream?Promise.reject(Te(\"cancel\")):ee(this,e)}},{key:\"read\",value:function(){return!1===Q(this)?Promise.reject(Oe(\"read\")):void 0===this._ownerReadableStream?Promise.reject(Te(\"read from\")):re(this)}},{key:\"releaseLock\",value:function(){if(!1===Q(this))throw Oe(\"releaseLock\");if(void 0!==this._ownerReadableStream){if(this._readRequests.length>0)throw new TypeError(\"Tried to release a reader lock when that reader has pending read() calls un-settled\");te(this)}}},{key:\"closed\",get:function(){return!1===Q(this)?Promise.reject(Oe(\"closed\")):this._closedPromise}}]),e}(),J=function(){function e(t){if(n(this,e),!D(t))throw new TypeError(\"ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a byte source\");if(!1===de(t._readableStreamController))throw new TypeError(\"Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source\");if(L(t))throw new TypeError(\"This stream has already been locked for exclusive reading by another reader\");$(this,t),this._readIntoRequests=[]}return a(e,[{key:\"cancel\",value:function(e){return Z(this)?void 0===this._ownerReadableStream?Promise.reject(Te(\"cancel\")):ee(this,e):Promise.reject(Re(\"cancel\"))}},{key:\"read\",value:function(e){return Z(this)?void 0===this._ownerReadableStream?Promise.reject(Te(\"read from\")):ArrayBuffer.isView(e)?0===e.byteLength?Promise.reject(new TypeError(\"view must have non-zero byteLength\")):function(e,t){var r=e._ownerReadableStream;if(y(void 0!==r),r._disturbed=!0,\"errored\"===r._state)return Promise.reject(r._storedError);return function(e,t){var r=e._controlledReadableStream,a=1;t.constructor!==DataView&&(a=t.constructor.BYTES_PER_ELEMENT);var n=t.constructor,i={buffer:t.buffer,byteOffset:t.byteOffset,byteLength:t.byteLength,bytesFilled:0,elementSize:a,ctor:n,readerType:\"byob\"};if(e._pendingPullIntos.length>0)return i.buffer=h(i.buffer),e._pendingPullIntos.push(i),U(r);if(\"closed\"===r._state){var o=new t.constructor(i.buffer,i.byteOffset,0);return Promise.resolve(s(o,!0))}if(e._queueTotalSize>0){if(!0===we(e,i)){var c=be(i);return Se(e),Promise.resolve(s(c,!1))}if(!0===e._closeRequested){var l=new TypeError(\"Insufficient bytes to fill elements in the given buffer\");return Pe(e,l),Promise.reject(l)}}i.buffer=h(i.buffer),e._pendingPullIntos.push(i);var u=U(r);return pe(e),u}(r._readableStreamController,t)}(this,e):Promise.reject(new TypeError(\"view must be an array buffer view\")):Promise.reject(Re(\"read\"))}},{key:\"releaseLock\",value:function(){if(!Z(this))throw Re(\"releaseLock\");if(void 0!==this._ownerReadableStream){if(this._readIntoRequests.length>0)throw new TypeError(\"Tried to release a reader lock when that reader has pending read() calls un-settled\");te(this)}}},{key:\"closed\",get:function(){return Z(this)?this._closedPromise:Promise.reject(Re(\"closed\"))}}]),e}();function Z(e){return!!v(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_readIntoRequests\")}function Q(e){return!!v(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_readRequests\")}function $(e,t){e._ownerReadableStream=t,t._reader=e,\"readable\"===t._state?function(e){e._closedPromise=new Promise(function(t,r){e._closedPromise_resolve=t,e._closedPromise_reject=r})}(e):\"closed\"===t._state?function(e){e._closedPromise=Promise.resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}(e):(y(\"errored\"===t._state,\"state must be errored\"),function(e,t){e._closedPromise=Promise.reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}(e,t._storedError),e._closedPromise.catch(function(){}))}function ee(e,t){var r=e._ownerReadableStream;return y(void 0!==r),j(r,t)}function te(e){y(void 0!==e._ownerReadableStream),y(e._ownerReadableStream._reader===e),\"readable\"===e._ownerReadableStream._state?Fe(e,new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\")):function(e,t){y(void 0===e._closedPromise_resolve),y(void 0===e._closedPromise_reject),e._closedPromise=Promise.reject(t)}(e,new TypeError(\"Reader was released and can no longer be used to monitor the stream's closedness\")),e._closedPromise.catch(function(){}),e._ownerReadableStream._reader=void 0,e._ownerReadableStream=void 0}function re(e){var t=e._ownerReadableStream;return y(void 0!==t),t._disturbed=!0,\"closed\"===t._state?Promise.resolve(s(void 0,!0)):\"errored\"===t._state?Promise.reject(t._storedError):(y(\"readable\"===t._state),t._readableStreamController.__pullSteps())}var ae=function(){function e(t,r,a,i){if(n(this,e),!1===D(t))throw new TypeError(\"ReadableStreamDefaultController can only be constructed with a ReadableStream instance\");if(void 0!==t._readableStreamController)throw new TypeError(\"ReadableStreamDefaultController instances can only be created by the ReadableStream constructor\");this._controlledReadableStream=t,this._underlyingSource=r,this._queue=void 0,this._queueTotalSize=void 0,x(this),this._started=!1,this._closeRequested=!1,this._pullAgain=!1,this._pulling=!1;var o=f(a,i);this._strategySize=o.size,this._strategyHWM=o.highWaterMark;var s=this,c=l(r,\"start\",[this]);Promise.resolve(c).then(function(){s._started=!0,y(!1===s._pulling),y(!1===s._pullAgain),ie(s)},function(e){le(s,e)}).catch(w)}return a(e,[{key:\"close\",value:function(){if(!1===ne(this))throw Be(\"close\");if(!0===this._closeRequested)throw new TypeError(\"The stream has already been closed; do not close it again!\");var e=this._controlledReadableStream._state;if(\"readable\"!==e)throw new TypeError(\"The stream (in \"+e+\" state) is not in the readable state and cannot be closed\");oe(this)}},{key:\"enqueue\",value:function(e){if(!1===ne(this))throw Be(\"enqueue\");if(!0===this._closeRequested)throw new TypeError(\"stream is closed or draining\");var t=this._controlledReadableStream._state;if(\"readable\"!==t)throw new TypeError(\"The stream (in \"+t+\" state) is not in the readable state and cannot be enqueued to\");return se(this,e)}},{key:\"error\",value:function(e){if(!1===ne(this))throw Be(\"error\");var t=this._controlledReadableStream;if(\"readable\"!==t._state)throw new TypeError(\"The stream is \"+t._state+\" and so cannot be errored\");ce(this,e)}},{key:\"__cancelSteps\",value:function(e){return x(this),u(this._underlyingSource,\"cancel\",[e])}},{key:\"__pullSteps\",value:function(){var e=this._controlledReadableStream;if(this._queue.length>0){var t=S(this);return!0===this._closeRequested&&0===this._queue.length?z(e):ie(this),Promise.resolve(s(t,!1))}var r=q(e);return ie(this),r}},{key:\"desiredSize\",get:function(){if(!1===ne(this))throw Be(\"desiredSize\");return ue(this)}}]),e}();function ne(e){return!!v(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_underlyingSource\")}function ie(e){!1!==function(e){var t=e._controlledReadableStream;if(\"closed\"===t._state||\"errored\"===t._state)return!1;if(!0===e._closeRequested)return!1;if(!1===e._started)return!1;if(!0===L(t)&&X(t)>0)return!0;if(ue(e)>0)return!0;return!1}(e)&&(!0!==e._pulling?(y(!1===e._pullAgain),e._pulling=!0,u(e._underlyingSource,\"pull\",[e]).then(function(){if(e._pulling=!1,!0===e._pullAgain)return e._pullAgain=!1,ie(e)},function(t){le(e,t)}).catch(w)):e._pullAgain=!0)}function oe(e){var t=e._controlledReadableStream;y(!1===e._closeRequested),y(\"readable\"===t._state),e._closeRequested=!0,0===e._queue.length&&z(t)}function se(e,t){var r=e._controlledReadableStream;if(y(!1===e._closeRequested),y(\"readable\"===r._state),!0===L(r)&&X(r)>0)W(r,t,!1);else{var a=1;if(void 0!==e._strategySize){var n=e._strategySize;try{a=n(t)}catch(i){throw le(e,i),i}}try{C(e,t,a)}catch(o){throw le(e,o),o}}ie(e)}function ce(e,t){var r=e._controlledReadableStream;y(\"readable\"===r._state),x(e),H(r,t)}function le(e,t){\"readable\"===e._controlledReadableStream._state&&ce(e,t)}function ue(e){var t=e._controlledReadableStream._state;return\"errored\"===t?null:\"closed\"===t?0:e._strategyHWM-e._queueTotalSize}var he=function(){function e(t,r){n(this,e),this._associatedReadableByteStreamController=t,this._view=r}return a(e,[{key:\"respond\",value:function(e){if(!1===ge(this))throw Me(\"respond\");if(void 0===this._associatedReadableByteStreamController)throw new TypeError(\"This BYOB request has been invalidated\");!function(e,t){if(t=Number(t),!1===c(t))throw new RangeError(\"bytesWritten must be a finite\");y(e._pendingPullIntos.length>0),Ae(e,t)}(this._associatedReadableByteStreamController,e)}},{key:\"respondWithNewView\",value:function(e){if(!1===ge(this))throw Me(\"respond\");if(void 0===this._associatedReadableByteStreamController)throw new TypeError(\"This BYOB request has been invalidated\");if(!ArrayBuffer.isView(e))throw new TypeError(\"You can only respond with array buffer views\");!function(e,t){y(e._pendingPullIntos.length>0);var r=e._pendingPullIntos[0];if(r.byteOffset+r.bytesFilled!==t.byteOffset)throw new RangeError(\"The region specified by view does not match byobRequest\");if(r.byteLength!==t.byteLength)throw new RangeError(\"The buffer of view has different capacity than byobRequest\");r.buffer=t.buffer,Ae(e,t.byteLength)}(this._associatedReadableByteStreamController,e)}},{key:\"view\",get:function(){return this._view}}]),e}(),fe=function(){function e(t,r,a){if(n(this,e),!1===D(t))throw new TypeError(\"ReadableByteStreamController can only be constructed with a ReadableStream instance given a byte source\");if(void 0!==t._readableStreamController)throw new TypeError(\"ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte source\");this._controlledReadableStream=t,this._underlyingByteSource=r,this._pullAgain=!1,this._pulling=!1,me(this),this._queue=this._queueTotalSize=void 0,x(this),this._closeRequested=!1,this._started=!1,this._strategyHWM=d(a);var i=r.autoAllocateChunkSize;if(void 0!==i&&(!1===Number.isInteger(i)||i<=0))throw new RangeError(\"autoAllocateChunkSize must be a positive integer\");this._autoAllocateChunkSize=i,this._pendingPullIntos=[];var o=this,s=l(r,\"start\",[this]);Promise.resolve(s).then(function(){o._started=!0,y(!1===o._pulling),y(!1===o._pullAgain),pe(o)},function(e){\"readable\"===t._state&&Pe(o,e)}).catch(w)}return a(e,[{key:\"close\",value:function(){if(!1===de(this))throw De(\"close\");if(!0===this._closeRequested)throw new TypeError(\"The stream has already been closed; do not close it again!\");var e=this._controlledReadableStream._state;if(\"readable\"!==e)throw new TypeError(\"The stream (in \"+e+\" state) is not in the readable state and cannot be closed\");!function(e){var t=e._controlledReadableStream;if(y(!1===e._closeRequested),y(\"readable\"===t._state),e._queueTotalSize>0)return void(e._closeRequested=!0);if(e._pendingPullIntos.length>0){var r=e._pendingPullIntos[0];if(r.bytesFilled>0){var a=new TypeError(\"Insufficient bytes to fill elements in the given buffer\");throw Pe(e,a),a}}z(t)}(this)}},{key:\"enqueue\",value:function(e){if(!1===de(this))throw De(\"enqueue\");if(!0===this._closeRequested)throw new TypeError(\"stream is closed or draining\");var t=this._controlledReadableStream._state;if(\"readable\"!==t)throw new TypeError(\"The stream (in \"+t+\" state) is not in the readable state and cannot be enqueued to\");if(!ArrayBuffer.isView(e))throw new TypeError(\"You can only enqueue array buffer views when using a ReadableByteStreamController\");!function(e,t){var r=e._controlledReadableStream;y(!1===e._closeRequested),y(\"readable\"===r._state);var a=t.buffer,n=t.byteOffset,i=t.byteLength,o=h(a);if(!0===Y(r))if(0===X(r))ye(e,o,n,i);else{y(0===e._queue.length);var s=new Uint8Array(o,n,i);W(r,s,!1)}else!0===V(r)?(ye(e,o,n,i),xe(e)):(y(!1===L(r),\"stream must not be locked\"),ye(e,o,n,i))}(this,e)}},{key:\"error\",value:function(e){if(!1===de(this))throw De(\"error\");var t=this._controlledReadableStream;if(\"readable\"!==t._state)throw new TypeError(\"The stream is \"+t._state+\" and so cannot be errored\");Pe(this,e)}},{key:\"__cancelSteps\",value:function(e){this._pendingPullIntos.length>0&&(this._pendingPullIntos[0].bytesFilled=0);return x(this),u(this._underlyingByteSource,\"cancel\",[e])}},{key:\"__pullSteps\",value:function(){var e=this._controlledReadableStream;if(y(!0===Y(e)),this._queueTotalSize>0){y(0===X(e));var t=this._queue.shift();this._queueTotalSize-=t.byteLength,Se(this);var r=void 0;try{r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}catch(c){return Promise.reject(c)}return Promise.resolve(s(r,!1))}var a=this._autoAllocateChunkSize;if(void 0!==a){var n=void 0;try{n=new ArrayBuffer(a)}catch(l){return Promise.reject(l)}var i={buffer:n,byteOffset:0,byteLength:a,bytesFilled:0,elementSize:1,ctor:Uint8Array,readerType:\"default\"};this._pendingPullIntos.push(i)}var o=q(e);return pe(this),o}},{key:\"byobRequest\",get:function(){if(!1===de(this))throw De(\"byobRequest\");if(void 0===this._byobRequest&&this._pendingPullIntos.length>0){var e=this._pendingPullIntos[0],t=new Uint8Array(e.buffer,e.byteOffset+e.bytesFilled,e.byteLength-e.bytesFilled);this._byobRequest=new he(this,t)}return this._byobRequest}},{key:\"desiredSize\",get:function(){if(!1===de(this))throw De(\"desiredSize\");return Ie(this)}}]),e}();function de(e){return!!v(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_underlyingByteSource\")}function ge(e){return!!v(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_associatedReadableByteStreamController\")}function pe(e){!1!==function(e){var t=e._controlledReadableStream;if(\"readable\"!==t._state)return!1;if(!0===e._closeRequested)return!1;if(!1===e._started)return!1;if(!0===Y(t)&&X(t)>0)return!0;if(!0===V(t)&&G(t)>0)return!0;if(Ie(e)>0)return!0;return!1}(e)&&(!0!==e._pulling?(y(!1===e._pullAgain),e._pulling=!0,u(e._underlyingByteSource,\"pull\",[e]).then(function(){e._pulling=!1,!0===e._pullAgain&&(e._pullAgain=!1,pe(e))},function(t){\"readable\"===e._controlledReadableStream._state&&Pe(e,t)}).catch(w)):e._pullAgain=!0)}function me(e){Ce(e),e._pendingPullIntos=[]}function ve(e,t){y(\"errored\"!==e._state,\"state must not be errored\");var r=!1;\"closed\"===e._state&&(y(0===t.bytesFilled),r=!0);var a=be(t);\"default\"===t.readerType?W(e,a,r):(y(\"byob\"===t.readerType),function(e,t,r){var a=e._reader;y(a._readIntoRequests.length>0),a._readIntoRequests.shift()._resolve(s(t,r))}(e,a,r))}function be(e){var t=e.bytesFilled,r=e.elementSize;return y(t<=e.byteLength),y(t%r===0),new e.ctor(e.buffer,e.byteOffset,t/r)}function ye(e,t,r,a){e._queue.push({buffer:t,byteOffset:r,byteLength:a}),e._queueTotalSize+=a}function we(e,t){var r=t.elementSize,a=t.bytesFilled-t.bytesFilled%r,n=Math.min(e._queueTotalSize,t.byteLength-t.bytesFilled),i=t.bytesFilled+n,s=i-i%r,c=n,l=!1;s>a&&(c=s-t.bytesFilled,l=!0);for(var u=e._queue;c>0;){var h=u[0],f=Math.min(c,h.byteLength),d=t.byteOffset+t.bytesFilled;o(t.buffer,d,h.buffer,h.byteOffset,f),h.byteLength===f?u.shift():(h.byteOffset+=f,h.byteLength-=f),e._queueTotalSize-=f,ke(e,f,t),c-=f}return!1===l&&(y(0===e._queueTotalSize,\"queue must be empty\"),y(t.bytesFilled>0),y(t.bytesFilled<t.elementSize)),l}function ke(e,t,r){y(0===e._pendingPullIntos.length||e._pendingPullIntos[0]===r),Ce(e),r.bytesFilled+=t}function Se(e){y(\"readable\"===e._controlledReadableStream._state),0===e._queueTotalSize&&!0===e._closeRequested?z(e._controlledReadableStream):pe(e)}function Ce(e){void 0!==e._byobRequest&&(e._byobRequest._associatedReadableByteStreamController=void 0,e._byobRequest._view=void 0,e._byobRequest=void 0)}function xe(e){for(y(!1===e._closeRequested);e._pendingPullIntos.length>0;){if(0===e._queueTotalSize)return;var t=e._pendingPullIntos[0];!0===we(e,t)&&(_e(e),ve(e._controlledReadableStream,t))}}function Ae(e,t){var r=e._pendingPullIntos[0],a=e._controlledReadableStream;if(\"closed\"===a._state){if(0!==t)throw new TypeError(\"bytesWritten must be 0 when calling respond() on a closed stream\");!function(e,t){t.buffer=h(t.buffer),y(0===t.bytesFilled,\"bytesFilled must be 0\");var r=e._controlledReadableStream;if(!0===V(r))for(;G(r)>0;)ve(r,_e(e))}(e,r)}else y(\"readable\"===a._state),function(e,t,r){if(r.bytesFilled+t>r.byteLength)throw new RangeError(\"bytesWritten out of range\");if(ke(e,t,r),!(r.bytesFilled<r.elementSize)){_e(e);var a=r.bytesFilled%r.elementSize;if(a>0){var n=r.byteOffset+r.bytesFilled,i=r.buffer.slice(n-a,n);ye(e,i,0,i.byteLength)}r.buffer=h(r.buffer),r.bytesFilled-=a,ve(e._controlledReadableStream,r),xe(e)}}(e,t,r)}function _e(e){var t=e._pendingPullIntos.shift();return Ce(e),t}function Pe(e,t){var r=e._controlledReadableStream;y(\"readable\"===r._state),me(e),x(e),H(r,t)}function Ie(e){var t=e._controlledReadableStream._state;return\"errored\"===t?null:\"closed\"===t?0:e._strategyHWM-e._queueTotalSize}function Ee(e){return new TypeError(\"ReadableStream.prototype.\"+e+\" can only be used on a ReadableStream\")}function Te(e){return new TypeError(\"Cannot \"+e+\" a stream using a released reader\")}function Oe(e){return new TypeError(\"ReadableStreamDefaultReader.prototype.\"+e+\" can only be used on a ReadableStreamDefaultReader\")}function Fe(e,t){y(void 0!==e._closedPromise_resolve),y(void 0!==e._closedPromise_reject),e._closedPromise_reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}function Re(e){return new TypeError(\"ReadableStreamBYOBReader.prototype.\"+e+\" can only be used on a ReadableStreamBYOBReader\")}function Be(e){return new TypeError(\"ReadableStreamDefaultController.prototype.\"+e+\" can only be used on a ReadableStreamDefaultController\")}function Me(e){return new TypeError(\"ReadableStreamBYOBRequest.prototype.\"+e+\" can only be used on a ReadableStreamBYOBRequest\")}function De(e){return new TypeError(\"ReadableByteStreamController.prototype.\"+e+\" can only be used on a ReadableByteStreamController\")}},function(e,t,r){var a=r(6),n=r(4),i=r(2);t.TransformStream=a.TransformStream,t.ReadableStream=n.ReadableStream,t.IsReadableStreamDisturbed=n.IsReadableStreamDisturbed,t.ReadableStreamDefaultControllerClose=n.ReadableStreamDefaultControllerClose,t.ReadableStreamDefaultControllerEnqueue=n.ReadableStreamDefaultControllerEnqueue,t.ReadableStreamDefaultControllerError=n.ReadableStreamDefaultControllerError,t.ReadableStreamDefaultControllerGetDesiredSize=n.ReadableStreamDefaultControllerGetDesiredSize,t.AcquireWritableStreamDefaultWriter=i.AcquireWritableStreamDefaultWriter,t.IsWritableStream=i.IsWritableStream,t.IsWritableStreamLocked=i.IsWritableStreamLocked,t.WritableStream=i.WritableStream,t.WritableStreamAbort=i.WritableStreamAbort,t.WritableStreamDefaultControllerError=i.WritableStreamDefaultControllerError,t.WritableStreamDefaultWriterCloseWithErrorPropagation=i.WritableStreamDefaultWriterCloseWithErrorPropagation,t.WritableStreamDefaultWriterRelease=i.WritableStreamDefaultWriterRelease,t.WritableStreamDefaultWriterWrite=i.WritableStreamDefaultWriterWrite},function(e,t,r){var a=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}();function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var i=r(1).assert,o=r(0),s=o.InvokeOrNoop,c=o.PromiseInvokeOrPerformFallback,l=o.PromiseInvokeOrNoop,u=o.typeIsObject,h=r(4),f=h.ReadableStream,d=h.ReadableStreamDefaultControllerClose,g=h.ReadableStreamDefaultControllerEnqueue,p=h.ReadableStreamDefaultControllerError,m=h.ReadableStreamDefaultControllerGetDesiredSize,v=r(2),b=v.WritableStream,y=v.WritableStreamDefaultControllerError;function w(e,t){if(!0===e._errored)throw new TypeError(\"TransformStream is already errored\");if(!0===e._readableClosed)throw new TypeError(\"Readable side is already closed\");var r=e._readableController;try{g(r,t)}catch(a){throw e._readableClosed=!0,S(e,a),e._storedError}!0===m(r)<=0&&!1===e._backpressure&&A(e,!0)}function k(e){i(!1===e._errored),i(!1===e._readableClosed);try{d(e._readableController)}catch(t){i(!1)}e._readableClosed=!0}function S(e,t){!1===e._errored&&C(e,t)}function C(e,t){i(!1===e._errored),e._errored=!0,e._storedError=t,!1===e._writableDone&&y(e._writableController,t),!1===e._readableClosed&&p(e._readableController,t)}function x(e){return i(void 0!==e._backpressureChangePromise,\"_backpressureChangePromise should have been initialized\"),!1===e._backpressure?Promise.resolve():(i(!0===e._backpressure,\"_backpressure should have been initialized\"),e._backpressureChangePromise)}function A(e,t){i(e._backpressure!==t,\"TransformStreamSetBackpressure() should be called only when backpressure is changed\"),void 0!==e._backpressureChangePromise&&e._backpressureChangePromise_resolve(t),e._backpressureChangePromise=new Promise(function(t){e._backpressureChangePromise_resolve=t}),e._backpressureChangePromise.then(function(e){i(e!==t,\"_backpressureChangePromise should be fulfilled only when backpressure is changed\")}),e._backpressure=t}function _(e,t){return w(t._controlledTransformStream,e),Promise.resolve()}function P(e){return!!u(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_controlledTransformStream\")}function I(e){return!!u(e)&&!!Object.prototype.hasOwnProperty.call(e,\"_transformStreamController\")}var E=function(){function e(t,r){n(this,e),this._transformStream=t,this._startPromise=r}return a(e,[{key:\"start\",value:function(e){var t=this._transformStream;return t._writableController=e,this._startPromise.then(function(){return x(t)})}},{key:\"write\",value:function(e){return function(e,t){i(!1===e._errored),i(!1===e._transforming),i(!1===e._backpressure),e._transforming=!0;var r=e._transformer,a=e._transformStreamController;return c(r,\"transform\",[t,a],_,[t,a]).then(function(){return e._transforming=!1,x(e)},function(t){return S(e,t),Promise.reject(t)})}(this._transformStream,e)}},{key:\"abort\",value:function(){var e=this._transformStream;e._writableDone=!0,C(e,new TypeError(\"Writable side aborted\"))}},{key:\"close\",value:function(){var e=this._transformStream;return i(!1===e._transforming),e._writableDone=!0,l(e._transformer,\"flush\",[e._transformStreamController]).then(function(){return!0===e._errored?Promise.reject(e._storedError):(!1===e._readableClosed&&k(e),Promise.resolve())}).catch(function(t){return S(e,t),Promise.reject(e._storedError)})}}]),e}(),T=function(){function e(t,r){n(this,e),this._transformStream=t,this._startPromise=r}return a(e,[{key:\"start\",value:function(e){var t=this._transformStream;return t._readableController=e,this._startPromise.then(function(){return i(void 0!==t._backpressureChangePromise,\"_backpressureChangePromise should have been initialized\"),!0===t._backpressure?Promise.resolve():(i(!1===t._backpressure,\"_backpressure should have been initialized\"),t._backpressureChangePromise)})}},{key:\"pull\",value:function(){var e=this._transformStream;return i(!0===e._backpressure,\"pull() should be never called while _backpressure is false\"),i(void 0!==e._backpressureChangePromise,\"_backpressureChangePromise should have been initialized\"),A(e,!1),e._backpressureChangePromise}},{key:\"cancel\",value:function(){var e=this._transformStream;e._readableClosed=!0,C(e,new TypeError(\"Readable side canceled\"))}}]),e}(),O=function(){function e(t){if(n(this,e),!1===I(t))throw new TypeError(\"TransformStreamDefaultController can only be constructed with a TransformStream instance\");if(void 0!==t._transformStreamController)throw new TypeError(\"TransformStreamDefaultController instances can only be created by the TransformStream constructor\");this._controlledTransformStream=t}return a(e,[{key:\"enqueue\",value:function(e){if(!1===P(this))throw R(\"enqueue\");w(this._controlledTransformStream,e)}},{key:\"close\",value:function(){if(!1===P(this))throw R(\"close\");!function(e){if(!0===e._errored)throw new TypeError(\"TransformStream is already errored\");if(!0===e._readableClosed)throw new TypeError(\"Readable side is already closed\");k(e)}(this._controlledTransformStream)}},{key:\"error\",value:function(e){if(!1===P(this))throw R(\"error\");!function(e,t){if(!0===e._errored)throw new TypeError(\"TransformStream is already errored\");C(e,t)}(this._controlledTransformStream,e)}},{key:\"desiredSize\",get:function(){if(!1===P(this))throw R(\"desiredSize\");var e=this._controlledTransformStream._readableController;return m(e)}}]),e}(),F=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};n(this,e),this._transformer=t;var r=t.readableStrategy,a=t.writableStrategy;this._transforming=!1,this._errored=!1,this._storedError=void 0,this._writableController=void 0,this._readableController=void 0,this._transformStreamController=void 0,this._writableDone=!1,this._readableClosed=!1,this._backpressure=void 0,this._backpressureChangePromise=void 0,this._backpressureChangePromise_resolve=void 0,this._transformStreamController=new O(this);var o=void 0,c=new Promise(function(e){o=e}),l=new T(this,c);this._readable=new f(l,r);var u=new E(this,c);this._writable=new b(u,a),i(void 0!==this._writableController),i(void 0!==this._readableController),A(this,m(this._readableController)<=0);var h=this,d=s(t,\"start\",[h._transformStreamController]);o(d),c.catch(function(e){!1===h._errored&&(h._errored=!0,h._storedError=e)})}return a(e,[{key:\"readable\",get:function(){if(!1===I(this))throw B(\"readable\");return this._readable}},{key:\"writable\",get:function(){if(!1===I(this))throw B(\"writable\");return this._writable}}]),e}();function R(e){return new TypeError(\"TransformStreamDefaultController.prototype.\"+e+\" can only be used on a TransformStreamDefaultController\")}function B(e){return new TypeError(\"TransformStream.prototype.\"+e+\" can only be used on a TransformStream\")}e.exports={TransformStream:F}},function(e,t,r){e.exports=r(5)}]))},function(e,t,r){\"use strict\";function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var n=!1;try{if(\"function\"===typeof URL&&\"object\"===a(URL.prototype)&&\"origin\"in URL.prototype){var i=new URL(\"b\",\"http://a\");i.pathname=\"c%20d\",n=\"http://a/c%20d\"===i.href}}catch(c){}if(n)t.URL=URL;else{var o=r(150).URL,s=r(8).URL;s&&(o.createObjectURL=function(e){return s.createObjectURL.apply(s,arguments)},o.revokeObjectURL=function(e){s.revokeObjectURL(e)}),t.URL=o}},function(e,t,r){\"use strict\";!function(){var e=Object.create(null);e.ftp=21,e.file=0,e.gopher=70,e.http=80,e.https=443,e.ws=80,e.wss=443;var r=Object.create(null);function a(t){return void 0!==e[t]}function n(){f.call(this),this._isInvalid=!0}function i(e){return\"\"===e&&n.call(this),e.toLowerCase()}function o(e){var t=e.charCodeAt(0);return t>32&&t<127&&-1===[34,35,60,62,63,96].indexOf(t)?e:encodeURIComponent(e)}function s(e){var t=e.charCodeAt(0);return t>32&&t<127&&-1===[34,35,60,62,96].indexOf(t)?e:encodeURIComponent(e)}r[\"%2e\"]=\".\",r[\".%2e\"]=\"..\",r[\"%2e.\"]=\"..\",r[\"%2e%2e\"]=\"..\";var c,l=/[a-zA-Z]/,u=/[a-zA-Z0-9\\+\\-\\.]/;function h(t,h,f){function d(e){y.push(e)}var g=h||\"scheme start\",p=0,m=\"\",v=!1,b=!1,y=[];e:for(;(t[p-1]!==c||0===p)&&!this._isInvalid;){var w=t[p];switch(g){case\"scheme start\":if(!w||!l.test(w)){if(h){d(\"Invalid scheme.\");break e}m=\"\",g=\"no scheme\";continue}m+=w.toLowerCase(),g=\"scheme\";break;case\"scheme\":if(w&&u.test(w))m+=w.toLowerCase();else{if(\":\"!==w){if(h){if(w===c)break e;d(\"Code point not allowed in scheme: \"+w);break e}m=\"\",p=0,g=\"no scheme\";continue}if(this._scheme=m,m=\"\",h)break e;a(this._scheme)&&(this._isRelative=!0),g=\"file\"===this._scheme?\"relative\":this._isRelative&&f&&f._scheme===this._scheme?\"relative or authority\":this._isRelative?\"authority first slash\":\"scheme data\"}break;case\"scheme data\":\"?\"===w?(this._query=\"?\",g=\"query\"):\"#\"===w?(this._fragment=\"#\",g=\"fragment\"):w!==c&&\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w&&(this._schemeData+=o(w));break;case\"no scheme\":if(f&&a(f._scheme)){g=\"relative\";continue}d(\"Missing scheme.\"),n.call(this);break;case\"relative or authority\":if(\"/\"!==w||\"/\"!==t[p+1]){d(\"Expected /, got: \"+w),g=\"relative\";continue}g=\"authority ignore slashes\";break;case\"relative\":if(this._isRelative=!0,\"file\"!==this._scheme&&(this._scheme=f._scheme),w===c){this._host=f._host,this._port=f._port,this._path=f._path.slice(),this._query=f._query,this._username=f._username,this._password=f._password;break e}if(\"/\"===w||\"\\\\\"===w)\"\\\\\"===w&&d(\"\\\\ is an invalid code point.\"),g=\"relative slash\";else if(\"?\"===w)this._host=f._host,this._port=f._port,this._path=f._path.slice(),this._query=\"?\",this._username=f._username,this._password=f._password,g=\"query\";else{if(\"#\"!==w){var k=t[p+1],S=t[p+2];(\"file\"!==this._scheme||!l.test(w)||\":\"!==k&&\"|\"!==k||S!==c&&\"/\"!==S&&\"\\\\\"!==S&&\"?\"!==S&&\"#\"!==S)&&(this._host=f._host,this._port=f._port,this._username=f._username,this._password=f._password,this._path=f._path.slice(),this._path.pop()),g=\"relative path\";continue}this._host=f._host,this._port=f._port,this._path=f._path.slice(),this._query=f._query,this._fragment=\"#\",this._username=f._username,this._password=f._password,g=\"fragment\"}break;case\"relative slash\":if(\"/\"!==w&&\"\\\\\"!==w){\"file\"!==this._scheme&&(this._host=f._host,this._port=f._port,this._username=f._username,this._password=f._password),g=\"relative path\";continue}\"\\\\\"===w&&d(\"\\\\ is an invalid code point.\"),g=\"file\"===this._scheme?\"file host\":\"authority ignore slashes\";break;case\"authority first slash\":if(\"/\"!==w){d(\"Expected '/', got: \"+w),g=\"authority ignore slashes\";continue}g=\"authority second slash\";break;case\"authority second slash\":if(g=\"authority ignore slashes\",\"/\"!==w){d(\"Expected '/', got: \"+w);continue}break;case\"authority ignore slashes\":if(\"/\"!==w&&\"\\\\\"!==w){g=\"authority\";continue}d(\"Expected authority, got: \"+w);break;case\"authority\":if(\"@\"===w){v&&(d(\"@ already seen.\"),m+=\"%40\"),v=!0;for(var C=0;C<m.length;C++){var x=m[C];if(\"\\t\"!==x&&\"\\n\"!==x&&\"\\r\"!==x)if(\":\"!==x||null!==this._password){var A=o(x);null!==this._password?this._password+=A:this._username+=A}else this._password=\"\";else d(\"Invalid whitespace in authority.\")}m=\"\"}else{if(w===c||\"/\"===w||\"\\\\\"===w||\"?\"===w||\"#\"===w){p-=m.length,m=\"\",g=\"host\";continue}m+=w}break;case\"file host\":if(w===c||\"/\"===w||\"\\\\\"===w||\"?\"===w||\"#\"===w){2!==m.length||!l.test(m[0])||\":\"!==m[1]&&\"|\"!==m[1]?0===m.length?g=\"relative path start\":(this._host=i.call(this,m),m=\"\",g=\"relative path start\"):g=\"relative path\";continue}\"\\t\"===w||\"\\n\"===w||\"\\r\"===w?d(\"Invalid whitespace in file host.\"):m+=w;break;case\"host\":case\"hostname\":if(\":\"!==w||b){if(w===c||\"/\"===w||\"\\\\\"===w||\"?\"===w||\"#\"===w){if(this._host=i.call(this,m),m=\"\",g=\"relative path start\",h)break e;continue}\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w?(\"[\"===w?b=!0:\"]\"===w&&(b=!1),m+=w):d(\"Invalid code point in host/hostname: \"+w)}else if(this._host=i.call(this,m),m=\"\",g=\"port\",\"hostname\"===h)break e;break;case\"port\":if(/[0-9]/.test(w))m+=w;else{if(w===c||\"/\"===w||\"\\\\\"===w||\"?\"===w||\"#\"===w||h){if(\"\"!==m){var _=parseInt(m,10);_!==e[this._scheme]&&(this._port=_+\"\"),m=\"\"}if(h)break e;g=\"relative path start\";continue}\"\\t\"===w||\"\\n\"===w||\"\\r\"===w?d(\"Invalid code point in port: \"+w):n.call(this)}break;case\"relative path start\":if(\"\\\\\"===w&&d(\"'\\\\' not allowed in path.\"),g=\"relative path\",\"/\"!==w&&\"\\\\\"!==w)continue;break;case\"relative path\":var P;if(w!==c&&\"/\"!==w&&\"\\\\\"!==w&&(h||\"?\"!==w&&\"#\"!==w))\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w&&(m+=o(w));else\"\\\\\"===w&&d(\"\\\\ not allowed in relative path.\"),(P=r[m.toLowerCase()])&&(m=P),\"..\"===m?(this._path.pop(),\"/\"!==w&&\"\\\\\"!==w&&this._path.push(\"\")):\".\"===m&&\"/\"!==w&&\"\\\\\"!==w?this._path.push(\"\"):\".\"!==m&&(\"file\"===this._scheme&&0===this._path.length&&2===m.length&&l.test(m[0])&&\"|\"===m[1]&&(m=m[0]+\":\"),this._path.push(m)),m=\"\",\"?\"===w?(this._query=\"?\",g=\"query\"):\"#\"===w&&(this._fragment=\"#\",g=\"fragment\");break;case\"query\":h||\"#\"!==w?w!==c&&\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w&&(this._query+=s(w)):(this._fragment=\"#\",g=\"fragment\");break;case\"fragment\":w!==c&&\"\\t\"!==w&&\"\\n\"!==w&&\"\\r\"!==w&&(this._fragment+=w)}p++}}function f(){this._scheme=\"\",this._schemeData=\"\",this._username=\"\",this._password=null,this._host=\"\",this._port=\"\",this._path=[],this._query=\"\",this._fragment=\"\",this._isInvalid=!1,this._isRelative=!1}function d(e,t){void 0===t||t instanceof d||(t=new d(String(t))),this._url=e,f.call(this);var r=e.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g,\"\");h.call(this,r,null,t)}d.prototype={toString:function(){return this.href},get href(){if(this._isInvalid)return this._url;var e=\"\";return\"\"===this._username&&null===this._password||(e=this._username+(null!==this._password?\":\"+this._password:\"\")+\"@\"),this.protocol+(this._isRelative?\"//\"+e+this.host:\"\")+this.pathname+this._query+this._fragment},set href(e){f.call(this),h.call(this,e)},get protocol(){return this._scheme+\":\"},set protocol(e){this._isInvalid||h.call(this,e+\":\",\"scheme start\")},get host(){return this._isInvalid?\"\":this._port?this._host+\":\"+this._port:this._host},set host(e){!this._isInvalid&&this._isRelative&&h.call(this,e,\"host\")},get hostname(){return this._host},set hostname(e){!this._isInvalid&&this._isRelative&&h.call(this,e,\"hostname\")},get port(){return this._port},set port(e){!this._isInvalid&&this._isRelative&&h.call(this,e,\"port\")},get pathname(){return this._isInvalid?\"\":this._isRelative?\"/\"+this._path.join(\"/\"):this._schemeData},set pathname(e){!this._isInvalid&&this._isRelative&&(this._path=[],h.call(this,e,\"relative path start\"))},get search(){return this._isInvalid||!this._query||\"?\"===this._query?\"\":this._query},set search(e){!this._isInvalid&&this._isRelative&&(this._query=\"?\",\"?\"===e[0]&&(e=e.slice(1)),h.call(this,e,\"query\"))},get hash(){return this._isInvalid||!this._fragment||\"#\"===this._fragment?\"\":this._fragment},set hash(e){this._isInvalid||(this._fragment=\"#\",\"#\"===e[0]&&(e=e.slice(1)),h.call(this,e,\"fragment\"))},get origin(){var e;if(this._isInvalid||!this._scheme)return\"\";switch(this._scheme){case\"data\":case\"file\":case\"javascript\":case\"mailto\":return\"null\";case\"blob\":try{return new d(this._schemeData).origin||\"null\"}catch(t){}return\"null\"}return(e=this.host)?this._scheme+\"://\"+e:\"\"}},t.URL=d}()},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.NetworkPdfManager=t.LocalPdfManager=void 0;var a,n=(a=r(2))&&a.__esModule?a:{default:a},i=r(6),o=r(152),s=r(153),c=r(157);function l(e){return(l=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function u(e,t){return!t||\"object\"!==l(t)&&\"function\"!==typeof t?g(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function p(e,t,r,a,n,i,o){try{var s=e[i](o),c=s.value}catch(l){return void r(l)}s.done?t(c):Promise.resolve(c).then(a,n)}function m(e){return function(){var t=this,r=arguments;return new Promise(function(a,n){var i=e.apply(t,r);function o(e){p(i,a,n,o,s,\"next\",e)}function s(e){p(i,a,n,o,s,\"throw\",e)}o(void 0)})}}function v(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function b(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function y(e,t,r){return t&&b(e.prototype,t),r&&b(e,r),e}var w=function(){function e(){v(this,e),this.constructor===e&&(0,i.unreachable)(\"Cannot initialize BasePdfManager.\")}return y(e,[{key:\"onLoadedStream\",value:function(){(0,i.unreachable)(\"Abstract method `onLoadedStream` called\")}},{key:\"ensureDoc\",value:function(e,t){return this.ensure(this.pdfDocument,e,t)}},{key:\"ensureXRef\",value:function(e,t){return this.ensure(this.pdfDocument.xref,e,t)}},{key:\"ensureCatalog\",value:function(e,t){return this.ensure(this.pdfDocument.catalog,e,t)}},{key:\"getPage\",value:function(e){return this.pdfDocument.getPage(e)}},{key:\"fontFallback\",value:function(e,t){return this.pdfDocument.fontFallback(e,t)}},{key:\"cleanup\",value:function(){return this.pdfDocument.cleanup()}},{key:\"ensure\",value:function(){var e=m(n.default.mark(function e(t,r,a){return n.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:(0,i.unreachable)(\"Abstract method `ensure` called\");case 1:case\"end\":return e.stop()}},e,this)}));return function(t,r,a){return e.apply(this,arguments)}}()},{key:\"requestRange\",value:function(e,t){(0,i.unreachable)(\"Abstract method `requestRange` called\")}},{key:\"requestLoadedStream\",value:function(){(0,i.unreachable)(\"Abstract method `requestLoadedStream` called\")}},{key:\"sendProgressiveData\",value:function(e){(0,i.unreachable)(\"Abstract method `sendProgressiveData` called\")}},{key:\"updatePassword\",value:function(e){this._password=e}},{key:\"terminate\",value:function(){(0,i.unreachable)(\"Abstract method `terminate` called\")}},{key:\"docId\",get:function(){return this._docId}},{key:\"password\",get:function(){return this._password}},{key:\"docBaseUrl\",get:function(){var e=null;if(this._docBaseUrl){var t=(0,i.createValidAbsoluteUrl)(this._docBaseUrl);t?e=t.href:(0,i.warn)('Invalid absolute docBaseUrl: \"'.concat(this._docBaseUrl,'\".'))}return(0,i.shadow)(this,\"docBaseUrl\",e)}}]),e}(),k=function(e){function t(e,r,a,n,i){var o;v(this,t),(o=u(this,h(t).call(this)))._docId=e,o._password=a,o._docBaseUrl=i,o.evaluatorOptions=n;var l=new c.Stream(r);return o.pdfDocument=new s.PDFDocument(g(g(o)),l),o._loadedStreamPromise=Promise.resolve(l),o}return f(t,w),y(t,[{key:\"ensure\",value:function(){var e=m(n.default.mark(function e(t,r,a){var i;return n.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(\"function\"!==typeof(i=t[r])){e.next=3;break}return e.abrupt(\"return\",i.apply(t,a));case 3:return e.abrupt(\"return\",i);case 4:case\"end\":return e.stop()}},e,this)}));return function(t,r,a){return e.apply(this,arguments)}}()},{key:\"requestRange\",value:function(e,t){return Promise.resolve()}},{key:\"requestLoadedStream\",value:function(){}},{key:\"onLoadedStream\",value:function(){return this._loadedStreamPromise}},{key:\"terminate\",value:function(){}}]),t}();t.LocalPdfManager=k;var S=function(e){function t(e,r,a,n,i){var c;return v(this,t),(c=u(this,h(t).call(this)))._docId=e,c._password=a.password,c._docBaseUrl=i,c.msgHandler=a.msgHandler,c.evaluatorOptions=n,c.streamManager=new o.ChunkedStreamManager(r,{msgHandler:a.msgHandler,length:a.length,disableAutoFetch:a.disableAutoFetch,rangeChunkSize:a.rangeChunkSize}),c.pdfDocument=new s.PDFDocument(g(g(c)),c.streamManager.getStream()),c}return f(t,w),y(t,[{key:\"ensure\",value:function(){var e=m(n.default.mark(function e(t,r,a){var o;return n.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,\"function\"!==typeof(o=t[r])){e.next=4;break}return e.abrupt(\"return\",o.apply(t,a));case 4:return e.abrupt(\"return\",o);case 7:if(e.prev=7,e.t0=e.catch(0),e.t0 instanceof i.MissingDataException){e.next=11;break}throw e.t0;case 11:return e.next=13,this.requestRange(e.t0.begin,e.t0.end);case 13:return e.abrupt(\"return\",this.ensure(t,r,a));case 14:case\"end\":return e.stop()}},e,this,[[0,7]])}));return function(t,r,a){return e.apply(this,arguments)}}()},{key:\"requestRange\",value:function(e,t){return this.streamManager.requestRange(e,t)}},{key:\"requestLoadedStream\",value:function(){this.streamManager.requestAllChunks()}},{key:\"sendProgressiveData\",value:function(e){this.streamManager.onReceiveData({chunk:e})}},{key:\"onLoadedStream\",value:function(){return this.streamManager.onLoadedStream()}},{key:\"terminate\",value:function(){this.streamManager.abort()}}]),t}();t.NetworkPdfManager=S},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkedStreamManager=t.ChunkedStream=void 0;var a=r(6);function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function o(e,t,r){return t&&i(e.prototype,t),r&&i(e,r),e}var s=function(){function e(t,r,a){n(this,e),this.bytes=new Uint8Array(t),this.start=0,this.pos=0,this.end=t,this.chunkSize=r,this.loadedChunks=[],this.numChunksLoaded=0,this.numChunks=Math.ceil(t/r),this.manager=a,this.progressiveDataLength=0,this.lastSuccessfulEnsureByteChunk=-1}return o(e,[{key:\"getMissingChunks\",value:function(){for(var e=[],t=0,r=this.numChunks;t<r;++t)this.loadedChunks[t]||e.push(t);return e}},{key:\"getBaseStreams\",value:function(){return[this]}},{key:\"allChunksLoaded\",value:function(){return this.numChunksLoaded===this.numChunks}},{key:\"onReceiveData\",value:function(e,t){var r=this.chunkSize;if(e%r!==0)throw new Error(\"Bad begin offset: \".concat(e));var a=e+t.byteLength;if(a%r!==0&&a!==this.bytes.length)throw new Error(\"Bad end offset: \".concat(a));this.bytes.set(new Uint8Array(t),e);for(var n=Math.floor(e/r),i=Math.floor((a-1)/r)+1,o=n;o<i;++o)this.loadedChunks[o]||(this.loadedChunks[o]=!0,++this.numChunksLoaded)}},{key:\"onReceiveProgressiveData\",value:function(e){var t=this.progressiveDataLength,r=Math.floor(t/this.chunkSize);this.bytes.set(new Uint8Array(e),t),t+=e.byteLength,this.progressiveDataLength=t;for(var a=t>=this.end?this.numChunks:Math.floor(t/this.chunkSize),n=r;n<a;++n)this.loadedChunks[n]||(this.loadedChunks[n]=!0,++this.numChunksLoaded)}},{key:\"ensureByte\",value:function(e){var t=Math.floor(e/this.chunkSize);if(t!==this.lastSuccessfulEnsureByteChunk){if(!this.loadedChunks[t])throw new a.MissingDataException(e,e+1);this.lastSuccessfulEnsureByteChunk=t}}},{key:\"ensureRange\",value:function(e,t){if(!(e>=t)&&!(t<=this.progressiveDataLength))for(var r=this.chunkSize,n=Math.floor(e/r),i=Math.floor((t-1)/r)+1,o=n;o<i;++o)if(!this.loadedChunks[o])throw new a.MissingDataException(e,t)}},{key:\"nextEmptyChunk\",value:function(e){for(var t=this.numChunks,r=0;r<t;++r){var a=(e+r)%t;if(!this.loadedChunks[a])return a}return null}},{key:\"hasChunk\",value:function(e){return!!this.loadedChunks[e]}},{key:\"getByte\",value:function(){var e=this.pos;return e>=this.end?-1:(this.ensureByte(e),this.bytes[this.pos++])}},{key:\"getUint16\",value:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t}},{key:\"getInt32\",value:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()}},{key:\"getBytes\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=this.bytes,a=this.pos,n=this.end;if(!e){this.ensureRange(a,n);var i=r.subarray(a,n);return t?new Uint8ClampedArray(i):i}var o=a+e;o>n&&(o=n),this.ensureRange(a,o),this.pos=o;var s=r.subarray(a,o);return t?new Uint8ClampedArray(s):s}},{key:\"peekByte\",value:function(){var e=this.getByte();return this.pos--,e}},{key:\"peekBytes\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=this.getBytes(e,t);return this.pos-=r.length,r}},{key:\"getByteRange\",value:function(e,t){return this.ensureRange(e,t),this.bytes.subarray(e,t)}},{key:\"skip\",value:function(e){e||(e=1),this.pos+=e}},{key:\"reset\",value:function(){this.pos=this.start}},{key:\"moveStart\",value:function(){this.start=this.pos}},{key:\"makeSubStream\",value:function(e,t,r){function a(){}this.ensureRange(e,e+t),a.prototype=Object.create(this),a.prototype.getMissingChunks=function(){for(var e=this.chunkSize,t=Math.floor(this.start/e),r=Math.floor((this.end-1)/e)+1,a=[],n=t;n<r;++n)this.loadedChunks[n]||a.push(n);return a};var n=new a;return n.pos=n.start=e,n.end=e+t||this.end,n.dict=r,n}},{key:\"length\",get:function(){return this.end-this.start}},{key:\"isEmpty\",get:function(){return 0===this.length}}]),e}();t.ChunkedStream=s;var c=function(){function e(t,r){n(this,e),this.length=r.length,this.chunkSize=r.rangeChunkSize,this.stream=new s(this.length,this.chunkSize,this),this.pdfNetworkStream=t,this.disableAutoFetch=r.disableAutoFetch,this.msgHandler=r.msgHandler,this.currRequestId=0,this.chunksNeededByRequest=Object.create(null),this.requestsByChunk=Object.create(null),this.promisesByRequest=Object.create(null),this.progressiveDataLength=0,this.aborted=!1,this._loadedStreamCapability=(0,a.createPromiseCapability)()}return o(e,[{key:\"onLoadedStream\",value:function(){return this._loadedStreamCapability.promise}},{key:\"sendRequest\",value:function(e,t){var r=this,n=this.pdfNetworkStream.getRangeReader(e,t);n.isStreamingSupported||(n.onProgress=this.onProgress.bind(this));var i=[],o=0;new Promise(function(e,t){n.read().then(function s(c){try{if(!c.done){var l=c.value;return i.push(l),o+=(0,a.arrayByteLength)(l),n.isStreamingSupported&&r.onProgress({loaded:o}),void n.read().then(s,t)}var u=(0,a.arraysToBytes)(i);i=null,e(u)}catch(h){t(h)}},t)}).then(function(t){r.aborted||r.onReceiveData({chunk:t,begin:e})})}},{key:\"requestAllChunks\",value:function(){var e=this.stream.getMissingChunks();return this._requestChunks(e),this._loadedStreamCapability.promise}},{key:\"_requestChunks\",value:function(e){var t=this.currRequestId++,r=Object.create(null);this.chunksNeededByRequest[t]=r;var n=!0,i=!1,o=void 0;try{for(var s,c=e[Symbol.iterator]();!(n=(s=c.next()).done);n=!0){var l=s.value;this.stream.hasChunk(l)||(r[l]=!0)}}catch(S){i=!0,o=S}finally{try{n||null==c.return||c.return()}finally{if(i)throw o}}if((0,a.isEmptyObj)(r))return Promise.resolve();var u=(0,a.createPromiseCapability)();this.promisesByRequest[t]=u;var h=[];for(var f in r)(f|=0)in this.requestsByChunk||(this.requestsByChunk[f]=[],h.push(f)),this.requestsByChunk[f].push(t);if(!h.length)return u.promise;var d=this.groupChunks(h),g=!0,p=!1,m=void 0;try{for(var v,b=d[Symbol.iterator]();!(g=(v=b.next()).done);g=!0){var y=v.value,w=y.beginChunk*this.chunkSize,k=Math.min(y.endChunk*this.chunkSize,this.length);this.sendRequest(w,k)}}catch(S){p=!0,m=S}finally{try{g||null==b.return||b.return()}finally{if(p)throw m}}return u.promise}},{key:\"getStream\",value:function(){return this.stream}},{key:\"requestRange\",value:function(e,t){t=Math.min(t,this.length);for(var r=this.getBeginChunk(e),a=this.getEndChunk(t),n=[],i=r;i<a;++i)n.push(i);return this._requestChunks(n)}},{key:\"requestRanges\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=[],r=!0,a=!1,n=void 0;try{for(var i,o=e[Symbol.iterator]();!(r=(i=o.next()).done);r=!0)for(var s=i.value,c=this.getBeginChunk(s.begin),l=this.getEndChunk(s.end),u=c;u<l;++u)t.includes(u)||t.push(u)}catch(h){a=!0,n=h}finally{try{r||null==o.return||o.return()}finally{if(a)throw n}}return t.sort(function(e,t){return e-t}),this._requestChunks(t)}},{key:\"groupChunks\",value:function(e){for(var t=[],r=-1,a=-1,n=0,i=e.length;n<i;++n){var o=e[n];r<0&&(r=o),a>=0&&a+1!==o&&(t.push({beginChunk:r,endChunk:a+1}),r=o),n+1===e.length&&t.push({beginChunk:r,endChunk:o+1}),a=o}return t}},{key:\"onProgress\",value:function(e){this.msgHandler.send(\"DocProgress\",{loaded:this.stream.numChunksLoaded*this.chunkSize+e.loaded,total:this.length})}},{key:\"onReceiveData\",value:function(e){var t=e.chunk,r=void 0===e.begin,n=r?this.progressiveDataLength:e.begin,i=n+t.byteLength,o=Math.floor(n/this.chunkSize),s=i<this.length?Math.floor(i/this.chunkSize):Math.ceil(i/this.chunkSize);r?(this.stream.onReceiveProgressiveData(t),this.progressiveDataLength=i):this.stream.onReceiveData(n,t),this.stream.allChunksLoaded()&&this._loadedStreamCapability.resolve(this.stream);for(var c=[],l=o;l<s;++l){var u=this.requestsByChunk[l]||[];delete this.requestsByChunk[l];var h=!0,f=!1,d=void 0;try{for(var g,p=u[Symbol.iterator]();!(h=(g=p.next()).done);h=!0){var m=g.value,v=this.chunksNeededByRequest[m];l in v&&delete v[l],(0,a.isEmptyObj)(v)&&c.push(m)}}catch(C){f=!0,d=C}finally{try{h||null==p.return||p.return()}finally{if(f)throw d}}}if(!this.disableAutoFetch&&(0,a.isEmptyObj)(this.requestsByChunk)){var b;if(1===this.stream.numChunksLoaded){var y=this.stream.numChunks-1;this.stream.hasChunk(y)||(b=y)}else b=this.stream.nextEmptyChunk(s);Number.isInteger(b)&&this._requestChunks([b])}for(var w=0;w<c.length;w++){var k=c[w],S=this.promisesByRequest[k];delete this.promisesByRequest[k],S.resolve()}this.msgHandler.send(\"DocProgress\",{loaded:this.stream.numChunksLoaded*this.chunkSize,total:this.length})}},{key:\"onError\",value:function(e){this._loadedStreamCapability.reject(e)}},{key:\"getBeginChunk\",value:function(e){return Math.floor(e/this.chunkSize)}},{key:\"getEndChunk\",value:function(e){return Math.floor((e-1)/this.chunkSize)+1}},{key:\"abort\",value:function(){for(var e in this.aborted=!0,this.pdfNetworkStream&&this.pdfNetworkStream.cancelAllRequests(\"abort\"),this.promisesByRequest)this.promisesByRequest[e].reject(new Error(\"Request was aborted\"))}}]),e}();t.ChunkedStreamManager=c},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFDocument=t.Page=void 0;var a=r(6),n=r(154),i=r(155),o=r(157),s=r(169),c=r(167),l=r(156),u=r(170),h=r(171),f=r(185);function d(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(c){n=!0,i=c}finally{try{a||null==s.return||s.return()}finally{if(n)throw i}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function g(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function p(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function m(e,t,r){return t&&p(e.prototype,t),r&&p(e,r),e}var v=[0,0,612,792];function b(e,t){return\"display\"===t&&e.viewable||\"print\"===t&&e.printable}var y=function(){function e(t){var r=t.pdfManager,a=t.xref,n=t.pageIndex,i=t.pageDict,o=t.ref,s=t.fontCache,c=t.builtInCMapCache,l=t.pdfFunctionFactory;g(this,e),this.pdfManager=r,this.pageIndex=n,this.pageDict=i,this.xref=a,this.ref=o,this.fontCache=s,this.builtInCMapCache=c,this.pdfFunctionFactory=l,this.evaluatorOptions=r.evaluatorOptions,this.resourcesPromise=null;var u=\"p\".concat(this.pageIndex,\"_\"),h={obj:0};this.idFactory={createObjId:function(){return u+ ++h.obj}}}return m(e,[{key:\"_getInheritableProperty\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=(0,a.getInheritableProperty)({dict:this.pageDict,key:e,getArray:t,stopWhenFound:!1});return Array.isArray(r)?1!==r.length&&(0,i.isDict)(r[0])?i.Dict.merge(this.xref,r):r[0]:r}},{key:\"getContentStream\",value:function(){var e,t=this.content;if(Array.isArray(t)){var r=this.xref,a=[],n=!0,s=!1,c=void 0;try{for(var l,u=t[Symbol.iterator]();!(n=(l=u.next()).done);n=!0){var h=l.value;a.push(r.fetchIfRef(h))}}catch(f){s=!0,c=f}finally{try{n||null==u.return||u.return()}finally{if(s)throw c}}e=new o.StreamsSequenceStream(a)}else e=(0,i.isStream)(t)?t:new o.NullStream;return e}},{key:\"loadResources\",value:function(e){var t=this;return this.resourcesPromise||(this.resourcesPromise=this.pdfManager.ensure(this,\"resources\")),this.resourcesPromise.then(function(){return new n.ObjectLoader(t.resources,e,t.xref).load()})}},{key:\"getOperatorList\",value:function(e){var t=this,r=e.handler,n=e.task,i=e.intent,o=e.renderInteractiveForms,s=this.pdfManager.ensure(this,\"getContentStream\"),c=this.loadResources([\"ExtGState\",\"ColorSpace\",\"Pattern\",\"Shading\",\"XObject\",\"Font\"]),l=new h.PartialEvaluator({pdfManager:this.pdfManager,xref:this.xref,handler:r,pageIndex:this.pageIndex,idFactory:this.idFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,options:this.evaluatorOptions,pdfFunctionFactory:this.pdfFunctionFactory}),f=Promise.all([s,c]).then(function(e){var a=d(e,1)[0],o=new u.OperatorList(i,r,t.pageIndex);return r.send(\"StartRenderPage\",{transparency:l.hasBlendModes(t.resources),pageIndex:t.pageIndex,intent:i}),l.getOperatorList({stream:a,task:n,resources:t.resources,operatorList:o}).then(function(){return o})});return Promise.all([f,this._parsedAnnotations]).then(function(e){var t=d(e,2),r=t[0],s=t[1];if(0===s.length)return r.flush(!0),r;var c=[],u=!0,h=!1,f=void 0;try{for(var g,p=s[Symbol.iterator]();!(u=(g=p.next()).done);u=!0){var m=g.value;b(m,i)&&c.push(m.getOperatorList(l,n,o))}}catch(v){h=!0,f=v}finally{try{u||null==p.return||p.return()}finally{if(h)throw f}}return Promise.all(c).then(function(e){r.addOp(a.OPS.beginAnnotations,[]);var t=!0,n=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(t=(o=s.next()).done);t=!0){var c=o.value;r.addOpList(c)}}catch(v){n=!0,i=v}finally{try{t||null==s.return||s.return()}finally{if(n)throw i}}return r.addOp(a.OPS.endAnnotations,[]),r.flush(!0),r})})}},{key:\"extractTextContent\",value:function(e){var t=this,r=e.handler,a=e.task,n=e.normalizeWhitespace,i=e.sink,o=e.combineTextItems,s=this.pdfManager.ensure(this,\"getContentStream\"),c=this.loadResources([\"ExtGState\",\"XObject\",\"Font\"]);return Promise.all([s,c]).then(function(e){var s=d(e,1)[0];return new h.PartialEvaluator({pdfManager:t.pdfManager,xref:t.xref,handler:r,pageIndex:t.pageIndex,idFactory:t.idFactory,fontCache:t.fontCache,builtInCMapCache:t.builtInCMapCache,options:t.evaluatorOptions,pdfFunctionFactory:t.pdfFunctionFactory}).getTextContent({stream:s,task:a,resources:t.resources,normalizeWhitespace:n,combineTextItems:o,sink:i})})}},{key:\"getAnnotationsData\",value:function(e){return this._parsedAnnotations.then(function(t){for(var r=[],a=0,n=t.length;a<n;a++)e&&!b(t[a],e)||r.push(t[a].data);return r})}},{key:\"content\",get:function(){return this.pageDict.get(\"Contents\")}},{key:\"resources\",get:function(){return(0,a.shadow)(this,\"resources\",this._getInheritableProperty(\"Resources\")||i.Dict.empty)}},{key:\"mediaBox\",get:function(){var e=this._getInheritableProperty(\"MediaBox\",!0);return Array.isArray(e)&&4===e.length?(0,a.shadow)(this,\"mediaBox\",e):(0,a.shadow)(this,\"mediaBox\",v)}},{key:\"cropBox\",get:function(){var e=this._getInheritableProperty(\"CropBox\",!0);return Array.isArray(e)&&4===e.length?(0,a.shadow)(this,\"cropBox\",e):(0,a.shadow)(this,\"cropBox\",this.mediaBox)}},{key:\"userUnit\",get:function(){var e=this.pageDict.get(\"UserUnit\");return(!(0,a.isNum)(e)||e<=0)&&(e=1),(0,a.shadow)(this,\"userUnit\",e)}},{key:\"view\",get:function(){var e=this.mediaBox,t=this.cropBox;if(e===t)return(0,a.shadow)(this,\"view\",e);var r=a.Util.intersect(t,e);return(0,a.shadow)(this,\"view\",r||e)}},{key:\"rotate\",get:function(){var e=this._getInheritableProperty(\"Rotate\")||0;return e%90!==0?e=0:e>=360?e%=360:e<0&&(e=(e%360+360)%360),(0,a.shadow)(this,\"rotate\",e)}},{key:\"annotations\",get:function(){return(0,a.shadow)(this,\"annotations\",this._getInheritableProperty(\"Annots\")||[])}},{key:\"_parsedAnnotations\",get:function(){var e=this,t=this.pdfManager.ensure(this,\"annotations\").then(function(){for(var t=e.annotations,r=[],n=0,i=t.length;n<i;n++)r.push(s.AnnotationFactory.create(e.xref,t[n],e.pdfManager,e.idFactory));return Promise.all(r).then(function(e){return e.filter(function(e){return!!e})},function(e){return(0,a.warn)('_parsedAnnotations: \"'.concat(e,'\".')),[]})});return(0,a.shadow)(this,\"_parsedAnnotations\",t)}}]),e}();t.Page=y;function w(e,t,r,a){var n=e.pos,i=e.end;n+r>i&&(r=i-n);for(var o=[],s=0;s<r;++s)o.push(String.fromCharCode(e.getByte()));var c=o.join(\"\");e.pos=n;var l=a?c.lastIndexOf(t):c.indexOf(t);return-1!==l&&(e.pos+=l,!0)}var k=function(){function e(t,r){var s;if(g(this,e),(0,i.isStream)(r))s=r;else{if(!(0,a.isArrayBuffer)(r))throw new Error(\"PDFDocument: Unknown argument type\");s=new o.Stream(r)}if(s.length<=0)throw new Error(\"PDFDocument: Stream must have data\");this.pdfManager=t,this.stream=s,this.xref=new n.XRef(s,t),this.pdfFunctionFactory=new f.PDFFunctionFactory({xref:this.xref,isEvalSupported:t.evaluatorOptions.isEvalSupported}),this._pagePromises=[]}return m(e,[{key:\"parse\",value:function(e){this.setup(e);var t=this.catalog.catDict.get(\"Version\");(0,i.isName)(t)&&(this.pdfFormatVersion=t.name);try{if(this.acroForm=this.catalog.catDict.get(\"AcroForm\"),this.acroForm){this.xfa=this.acroForm.get(\"XFA\");var r=this.acroForm.get(\"Fields\");r&&Array.isArray(r)&&0!==r.length||this.xfa||(this.acroForm=null)}}catch(n){if(n instanceof a.MissingDataException)throw n;(0,a.info)(\"Cannot fetch AcroForm entry; assuming no AcroForms are present\"),this.acroForm=null}}},{key:\"checkHeader\",value:function(){var e=this.stream;if(e.reset(),w(e,\"%PDF-\",1024)){e.moveStart();for(var t,r=\"\";(t=e.getByte())>32&&!(r.length>=12);)r+=String.fromCharCode(t);this.pdfFormatVersion||(this.pdfFormatVersion=r.substring(5))}}},{key:\"parseStartXRef\",value:function(){this.xref.setStartXRef(this.startXRef)}},{key:\"setup\",value:function(e){this.xref.parse(e),this.catalog=new n.Catalog(this.pdfManager,this.xref)}},{key:\"_getLinearizationPage\",value:function(e){var t=this.catalog,r=this.linearization;(0,a.assert)(r&&r.pageFirst===e);var n=new i.Ref(r.objectNumberFirst,0);return this.xref.fetchAsync(n).then(function(e){if((0,i.isDict)(e,\"Page\")||(0,i.isDict)(e)&&!e.has(\"Type\")&&e.has(\"Contents\"))return n&&!t.pageKidsCountCache.has(n)&&t.pageKidsCountCache.put(n,1),[e,n];throw new a.FormatError(\"The Linearization dictionary doesn't point to a valid Page dictionary.\")}).catch(function(r){return(0,a.info)(r),t.getPageDict(e)})}},{key:\"getPage\",value:function(e){var t=this;if(void 0!==this._pagePromises[e])return this._pagePromises[e];var r=this.catalog,a=this.linearization,n=a&&a.pageFirst===e?this._getLinearizationPage(e):r.getPageDict(e);return this._pagePromises[e]=n.then(function(a){var n=d(a,2),i=n[0],o=n[1];return new y({pdfManager:t.pdfManager,xref:t.xref,pageIndex:e,pageDict:i,ref:o,fontCache:r.fontCache,builtInCMapCache:r.builtInCMapCache,pdfFunctionFactory:t.pdfFunctionFactory})})}},{key:\"checkFirstPage\",value:function(){var e=this;return this.getPage(0).catch(function(t){if(t instanceof a.XRefEntryException)throw e._pagePromises.length=0,e.cleanup(),new a.XRefParseException})}},{key:\"fontFallback\",value:function(e,t){return this.catalog.fontFallback(e,t)}},{key:\"cleanup\",value:function(){return this.catalog.cleanup()}},{key:\"linearization\",get:function(){var e=null;try{e=l.Linearization.create(this.stream)}catch(t){if(t instanceof a.MissingDataException)throw t;(0,a.info)(t)}return(0,a.shadow)(this,\"linearization\",e)}},{key:\"startXRef\",get:function(){var e=this.stream,t=0;if(this.linearization)e.reset(),w(e,\"endobj\",1024)&&(t=e.pos+6);else{for(var r=\"startxref\".length,n=!1,i=e.end;!n&&i>0;)(i-=1024-r)<0&&(i=0),e.pos=i,n=w(e,\"startxref\",1024,!0);if(n){var o;e.skip(9);do{o=e.getByte()}while((0,a.isSpace)(o));for(var s=\"\";o>=32&&o<=57;)s+=String.fromCharCode(o),o=e.getByte();t=parseInt(s,10),isNaN(t)&&(t=0)}}return(0,a.shadow)(this,\"startXRef\",t)}},{key:\"numPages\",get:function(){var e=this.linearization,t=e?e.numPages:this.catalog.numPages;return(0,a.shadow)(this,\"numPages\",t)}},{key:\"documentInfo\",get:function(){var e,t={Title:a.isString,Author:a.isString,Subject:a.isString,Keywords:a.isString,Creator:a.isString,Producer:a.isString,CreationDate:a.isString,ModDate:a.isString,Trapped:i.isName},r={PDFFormatVersion:this.pdfFormatVersion,IsLinearized:!!this.linearization,IsAcroFormPresent:!!this.acroForm,IsXFAPresent:!!this.xfa};try{e=this.xref.trailer.get(\"Info\")}catch(d){if(d instanceof a.MissingDataException)throw d;(0,a.info)(\"The document information dictionary is invalid.\")}if((0,i.isDict)(e)){var n=!0,o=!1,s=void 0;try{for(var c,l=e.getKeys()[Symbol.iterator]();!(n=(c=l.next()).done);n=!0){var u=c.value,h=e.get(u);if(t[u])t[u](h)?r[u]=\"string\"!==typeof h?h:(0,a.stringToPDFString)(h):(0,a.info)('Bad value in document info for \"'.concat(u,'\".'));else if(\"string\"===typeof u){var f=void 0;if((0,a.isString)(h))f=(0,a.stringToPDFString)(h);else{if(!((0,i.isName)(h)||(0,a.isNum)(h)||(0,a.isBool)(h))){(0,a.info)('Unsupported value in document info for (custom) \"'.concat(u,'\".'));continue}f=h}r.Custom||(r.Custom=Object.create(null)),r.Custom[u]=f}}}catch(d){o=!0,s=d}finally{try{n||null==l.return||l.return()}finally{if(o)throw s}}}return(0,a.shadow)(this,\"documentInfo\",r)}},{key:\"fingerprint\",get:function(){var e,t=this.xref.trailer.get(\"ID\");Array.isArray(t)&&t[0]&&(0,a.isString)(t[0])&&\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"!==t[0]?e=(0,a.stringToBytes)(t[0]):(this.stream.ensureRange&&this.stream.ensureRange(0,Math.min(1024,this.stream.end)),e=(0,c.calculateMD5)(this.stream.bytes.subarray(0,1024),0,1024));for(var r=\"\",n=0,i=e.length;n<i;n++){var o=e[n].toString(16);r+=1===o.length?\"0\"+o:o}return(0,a.shadow)(this,\"fingerprint\",r)}}]),e}();t.PDFDocument=k},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.FileSpec=t.XRef=t.ObjectLoader=t.Catalog=void 0;var a,n=(a=r(2))&&a.__esModule?a:{default:a},i=r(6),o=r(155),s=r(156),c=r(152),l=r(167),u=r(168);function h(e,t){return!t||\"object\"!==b(t)&&\"function\"!==typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t,r,a,n,i,o){try{var s=e[i](o),c=s.value}catch(l){return void r(l)}s.done?t(c):Promise.resolve(c).then(a,n)}function m(e){return function(){var t=this,r=arguments;return new Promise(function(a,n){var i=e.apply(t,r);function o(e){p(i,a,n,o,s,\"next\",e)}function s(e){p(i,a,n,o,s,\"throw\",e)}o(void 0)})}}function v(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(c){n=!0,i=c}finally{try{a||null==s.return||s.return()}finally{if(n)throw i}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function b(e){return(b=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function y(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function w(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function k(e,t,r){return t&&w(e.prototype,t),r&&w(e,r),e}function S(e){return(0,o.isDict)(e)?e.get(\"D\"):e}var C=function(){function e(t,r){if(y(this,e),this.pdfManager=t,this.xref=r,this.catDict=r.getCatalogObj(),!(0,o.isDict)(this.catDict))throw new i.FormatError(\"Catalog object is not a dictionary.\");this.fontCache=new o.RefSetCache,this.builtInCMapCache=new Map,this.pageKidsCountCache=new o.RefSetCache}return k(e,[{key:\"_readDocumentOutline\",value:function(){var t=this.catDict.get(\"Outlines\");if(!(0,o.isDict)(t))return null;if(t=t.getRaw(\"First\"),!(0,o.isRef)(t))return null;var r={items:[]},a=[{obj:t,parent:r}],n=new o.RefSet;n.put(t);for(var s=this.xref,c=new Uint8ClampedArray(3);a.length>0;){var l=a.shift(),h=s.fetchIfRef(l.obj);if(null!==h){if(!h.has(\"Title\"))throw new i.FormatError(\"Invalid outline item encountered.\");var f={url:null,dest:null};e.parseDestDictionary({destDict:h,resultObj:f,docBaseUrl:this.pdfManager.docBaseUrl});var d=h.get(\"Title\"),g=h.get(\"F\")||0,p=h.getArray(\"C\"),m=c;!Array.isArray(p)||3!==p.length||0===p[0]&&0===p[1]&&0===p[2]||(m=u.ColorSpace.singletons.rgb.getRgb(p,0));var v={dest:f.dest,url:f.url,unsafeUrl:f.unsafeUrl,newWindow:f.newWindow,title:(0,i.stringToPDFString)(d),color:m,count:h.get(\"Count\"),bold:!!(2&g),italic:!!(1&g),items:[]};l.parent.items.push(v),t=h.getRaw(\"First\"),(0,o.isRef)(t)&&!n.has(t)&&(a.push({obj:t,parent:v}),n.put(t)),t=h.getRaw(\"Next\"),(0,o.isRef)(t)&&!n.has(t)&&(a.push({obj:t,parent:l.parent}),n.put(t))}}return r.items.length>0?r.items:null}},{key:\"_readPermissions\",value:function(){var e=this.xref.trailer.get(\"Encrypt\");if(!(0,o.isDict)(e))return null;var t=e.get(\"P\");if(!(0,i.isNum)(t))return null;t+=Math.pow(2,32);var r=[];for(var a in i.PermissionFlag){var n=i.PermissionFlag[a];t&n&&r.push(n)}return r}},{key:\"getDestination\",value:function(e){var t=this._readDests();return t instanceof _||t instanceof o.Dict?S(t.get(e)||null):null}},{key:\"_readDests\",value:function(){var e=this.catDict.get(\"Names\");return e&&e.has(\"Dests\")?new _(e.getRaw(\"Dests\"),this.xref):this.catDict.has(\"Dests\")?this.catDict.get(\"Dests\"):void 0}},{key:\"_readPageLabels\",value:function(){var e=this.catDict.getRaw(\"PageLabels\");if(!e)return null;for(var t=new Array(this.numPages),r=null,a=\"\",n=new P(e,this.xref).getAll(),s=\"\",c=1,l=0,u=this.numPages;l<u;l++){if(l in n){var h=n[l];if(!(0,o.isDict)(h))throw new i.FormatError(\"PageLabel is not a dictionary.\");if(h.has(\"Type\")&&!(0,o.isName)(h.get(\"Type\"),\"PageLabel\"))throw new i.FormatError(\"Invalid type in PageLabel dictionary.\");if(h.has(\"S\")){var f=h.get(\"S\");if(!(0,o.isName)(f))throw new i.FormatError(\"Invalid style in PageLabel dictionary.\");r=f.name}else r=null;if(h.has(\"P\")){var d=h.get(\"P\");if(!(0,i.isString)(d))throw new i.FormatError(\"Invalid prefix in PageLabel dictionary.\");a=(0,i.stringToPDFString)(d)}else a=\"\";if(h.has(\"St\")){var g=h.get(\"St\");if(!(Number.isInteger(g)&&g>=1))throw new i.FormatError(\"Invalid start in PageLabel dictionary.\");c=g}else c=1}switch(r){case\"D\":s=c;break;case\"R\":case\"r\":s=(0,i.toRomanNumerals)(c,\"r\"===r);break;case\"A\":case\"a\":for(var p=\"a\"===r?97:65,m=c-1,v=String.fromCharCode(p+m%26),b=[],y=0,w=m/26|0;y<=w;y++)b.push(v);s=b.join(\"\");break;default:if(r)throw new i.FormatError('Invalid style \"'.concat(r,'\" in PageLabel dictionary.'));s=\"\"}t[l]=a+s,c++}return t}},{key:\"fontFallback\",value:function(e,t){var r=[];return this.fontCache.forEach(function(e){r.push(e)}),Promise.all(r).then(function(r){var a=!0,n=!1,i=void 0;try{for(var o,s=r[Symbol.iterator]();!(a=(o=s.next()).done);a=!0){var c=o.value;if(c.loadedName===e)return void c.fallback(t)}}catch(l){n=!0,i=l}finally{try{a||null==s.return||s.return()}finally{if(n)throw i}}})}},{key:\"cleanup\",value:function(){var e=this;this.pageKidsCountCache.clear();var t=[];return this.fontCache.forEach(function(e){t.push(e)}),Promise.all(t).then(function(t){for(var r=0,a=t.length;r<a;r++){delete t[r].dict.translated}e.fontCache.clear(),e.builtInCMapCache.clear()})}},{key:\"getPageDict\",value:function(e){var t,r=(0,i.createPromiseCapability)(),a=[this.catDict.getRaw(\"Pages\")],n=this.xref,s=this.pageKidsCountCache,c=0;return function l(){for(var u=function(){var u=a.pop();if((0,o.isRef)(u))return(t=s.get(u))>0&&c+t<e?(c+=t,\"continue\"):(n.fetchAsync(u).then(function(t){(0,o.isDict)(t,\"Page\")||(0,o.isDict)(t)&&!t.has(\"Kids\")?e===c?(u&&!s.has(u)&&s.put(u,1),r.resolve([t,u])):(c++,l()):(a.push(t),l())},r.reject),{v:void 0});if(!(0,o.isDict)(u))return r.reject(new i.FormatError(\"Page dictionary kid reference points to wrong type of object.\")),{v:void 0};if(t=u.get(\"Count\"),Number.isInteger(t)&&t>=0){var h=u.objId;if(h&&!s.has(h)&&s.put(h,t),c+t<=e)return c+=t,\"continue\"}var f=u.get(\"Kids\");if(!Array.isArray(f))return(0,o.isName)(u.get(\"Type\"),\"Page\")||!u.has(\"Type\")&&u.has(\"Contents\")?c===e?(r.resolve([u,null]),{v:void 0}):(c++,\"continue\"):(r.reject(new i.FormatError(\"Page dictionary kids object is not an array.\")),{v:void 0});for(var d=f.length-1;d>=0;d--)a.push(f[d])};a.length;){var h=u();switch(h){case\"continue\":continue;default:if(\"object\"===b(h))return h.v}}r.reject(new Error(\"Page index \".concat(e,\" not found.\")))}(),r.promise}},{key:\"getPageIndex\",value:function(e){var t=this.xref;var r=0;return function a(n){return function(r){var a,n=0;return t.fetchAsync(r).then(function(t){if((0,o.isRefsEqual)(r,e)&&!(0,o.isDict)(t,\"Page\")&&(!(0,o.isDict)(t)||t.has(\"Type\")||!t.has(\"Contents\")))throw new i.FormatError(\"The reference does not point to a /Page dictionary.\");if(!t)return null;if(!(0,o.isDict)(t))throw new i.FormatError(\"Node must be a dictionary.\");return a=t.getRaw(\"Parent\"),t.getAsync(\"Parent\")}).then(function(e){if(!e)return null;if(!(0,o.isDict)(e))throw new i.FormatError(\"Parent must be a dictionary.\");return e.getAsync(\"Kids\")}).then(function(e){if(!e)return null;for(var s=[],c=!1,l=0,u=e.length;l<u;l++){var h=e[l];if(!(0,o.isRef)(h))throw new i.FormatError(\"Kid must be a reference.\");if((0,o.isRefsEqual)(h,r)){c=!0;break}s.push(t.fetchAsync(h).then(function(e){if(!(0,o.isDict)(e))throw new i.FormatError(\"Kid node must be a dictionary.\");e.has(\"Count\")?n+=e.get(\"Count\"):n++}))}if(!c)throw new i.FormatError(\"Kid reference not found in parent's kids.\");return Promise.all(s).then(function(){return[n,a]})})}(n).then(function(e){if(!e)return r;var t=v(e,2),n=t[0],i=t[1];return r+=n,a(i)})}(e)}},{key:\"metadata\",get:function(){var e=this.catDict.getRaw(\"Metadata\");if(!(0,o.isRef)(e))return(0,i.shadow)(this,\"metadata\",null);var t,r=!(this.xref.encrypt&&this.xref.encrypt.encryptMetadata),a=this.xref.fetch(e,r);if(a&&(0,o.isDict)(a.dict)){var n=a.dict.get(\"Type\"),s=a.dict.get(\"Subtype\");if((0,o.isName)(n,\"Metadata\")&&(0,o.isName)(s,\"XML\"))try{t=(0,i.stringToUTF8String)((0,i.bytesToString)(a.getBytes()))}catch(c){if(c instanceof i.MissingDataException)throw c;(0,i.info)(\"Skipping invalid metadata.\")}}return(0,i.shadow)(this,\"metadata\",t)}},{key:\"toplevelPagesDict\",get:function(){var e=this.catDict.get(\"Pages\");if(!(0,o.isDict)(e))throw new i.FormatError(\"Invalid top-level pages dictionary.\");return(0,i.shadow)(this,\"toplevelPagesDict\",e)}},{key:\"documentOutline\",get:function(){var e=null;try{e=this._readDocumentOutline()}catch(t){if(t instanceof i.MissingDataException)throw t;(0,i.warn)(\"Unable to read document outline.\")}return(0,i.shadow)(this,\"documentOutline\",e)}},{key:\"permissions\",get:function(){var e=null;try{e=this._readPermissions()}catch(t){if(t instanceof i.MissingDataException)throw t;(0,i.warn)(\"Unable to read permissions.\")}return(0,i.shadow)(this,\"permissions\",e)}},{key:\"numPages\",get:function(){var e=this.toplevelPagesDict.get(\"Count\");if(!Number.isInteger(e))throw new i.FormatError(\"Page count in top-level pages dictionary is not an integer.\");return(0,i.shadow)(this,\"numPages\",e)}},{key:\"destinations\",get:function(){var e=this._readDests(),t=Object.create(null);if(e instanceof _){var r=e.getAll();for(var a in r)t[a]=S(r[a])}else e instanceof o.Dict&&e.forEach(function(e,r){r&&(t[e]=S(r))});return(0,i.shadow)(this,\"destinations\",t)}},{key:\"pageLabels\",get:function(){var e=null;try{e=this._readPageLabels()}catch(t){if(t instanceof i.MissingDataException)throw t;(0,i.warn)(\"Unable to read page labels.\")}return(0,i.shadow)(this,\"pageLabels\",e)}},{key:\"pageMode\",get:function(){var e=this.catDict.get(\"PageMode\"),t=\"UseNone\";if((0,o.isName)(e))switch(e.name){case\"UseNone\":case\"UseOutlines\":case\"UseThumbs\":case\"FullScreen\":case\"UseOC\":case\"UseAttachments\":t=e.name}return(0,i.shadow)(this,\"pageMode\",t)}},{key:\"openActionDestination\",get:function(){var t=this.catDict.get(\"OpenAction\"),r=null;if((0,o.isDict)(t)){var a=new o.Dict(this.xref);a.set(\"A\",t);var n={url:null,dest:null};e.parseDestDictionary({destDict:a,resultObj:n}),Array.isArray(n.dest)&&(r=n.dest)}else Array.isArray(t)&&(r=t);return(0,i.shadow)(this,\"openActionDestination\",r)}},{key:\"attachments\",get:function(){var e=this.catDict.get(\"Names\"),t=null;if(e&&e.has(\"EmbeddedFiles\")){var r=new _(e.getRaw(\"EmbeddedFiles\"),this.xref).getAll();for(var a in r){var n=new I(r[a],this.xref);t||(t=Object.create(null)),t[(0,i.stringToPDFString)(a)]=n.serializable}}return(0,i.shadow)(this,\"attachments\",t)}},{key:\"javaScript\",get:function(){var e=this.catDict.get(\"Names\"),t=null;function r(e){var r=e.get(\"S\");if((0,o.isName)(r,\"JavaScript\")){var a=e.get(\"JS\");if((0,o.isStream)(a))a=(0,i.bytesToString)(a.getBytes());else if(!(0,i.isString)(a))return;t||(t=[]),t.push((0,i.stringToPDFString)(a))}}if(e&&e.has(\"JavaScript\")){var a=new _(e.getRaw(\"JavaScript\"),this.xref).getAll();for(var n in a){var s=a[n];(0,o.isDict)(s)&&r(s)}}var c=this.catDict.get(\"OpenAction\");if((0,o.isDict)(c,\"Action\")){var l=c.get(\"S\");if((0,o.isName)(l,\"Named\")){var u=c.get(\"N\");(0,o.isName)(u,\"Print\")&&(t||(t=[]),t.push(\"print({});\"))}else r(c)}return(0,i.shadow)(this,\"javaScript\",t)}}],[{key:\"parseDestDictionary\",value:function(e){var t=e.destDict;if((0,o.isDict)(t)){var r=e.resultObj;if(\"object\"===b(r)){var a,n,s=e.docBaseUrl||null,c=t.get(\"A\");if(!(0,o.isDict)(c)&&t.has(\"Dest\")&&(c=t.get(\"Dest\")),(0,o.isDict)(c)){var l=c.get(\"S\");if(!(0,o.isName)(l))return void(0,i.warn)(\"parseDestDictionary: Invalid type in Action dictionary.\");var u=l.name;switch(u){case\"URI\":a=c.get(\"URI\"),(0,o.isName)(a)?a=\"/\"+a.name:(0,i.isString)(a)&&(a=function(e){return e.startsWith(\"www.\")?\"http://\".concat(e):e}(a));break;case\"GoTo\":n=c.get(\"D\");break;case\"Launch\":case\"GoToR\":var h=c.get(\"F\");(0,o.isDict)(h)?a=h.get(\"F\")||null:(0,i.isString)(h)&&(a=h);var f=c.get(\"D\");if(f&&((0,o.isName)(f)&&(f=f.name),(0,i.isString)(a))){var d=a.split(\"#\")[0];(0,i.isString)(f)?a=d+\"#\"+f:Array.isArray(f)&&(a=d+\"#\"+JSON.stringify(f))}var g=c.get(\"NewWindow\");(0,i.isBool)(g)&&(r.newWindow=g);break;case\"Named\":var p=c.get(\"N\");(0,o.isName)(p)&&(r.action=p.name);break;case\"JavaScript\":var m,v=c.get(\"JS\");if((0,o.isStream)(v)?m=(0,i.bytesToString)(v.getBytes()):(0,i.isString)(v)&&(m=v),m){var y=new RegExp(\"^\\\\s*(\"+[\"app.launchURL\",\"window.open\"].join(\"|\").split(\".\").join(\"\\\\.\")+\")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\"i\").exec((0,i.stringToPDFString)(m));if(y&&y[2]){a=y[2],\"true\"===y[3]&&\"app.launchURL\"===y[1]&&(r.newWindow=!0);break}}default:(0,i.warn)('parseDestDictionary: unsupported action type \"'.concat(u,'\".'))}}else t.has(\"Dest\")&&(n=t.get(\"Dest\"));if((0,i.isString)(a)){a=function(e){try{return(0,i.stringToUTF8String)(e)}catch(t){return e}}(a);var w=(0,i.createValidAbsoluteUrl)(a,s);w&&(r.url=w.href),r.unsafeUrl=a}n&&((0,o.isName)(n)&&(n=n.name),((0,i.isString)(n)||Array.isArray(n))&&(r.dest=n))}else(0,i.warn)(\"parseDestDictionary: `resultObj` must be an object.\")}else(0,i.warn)(\"parseDestDictionary: `destDict` must be a dictionary.\")}}]),e}();t.Catalog=C;var x=function(){function e(e,t){this.stream=e,this.pdfManager=t,this.entries=[],this.xrefstms=Object.create(null),this.cache=[],this.stats={streamTypes:[],fontTypes:[]}}return e.prototype={setStartXRef:function(e){this.startXRefQueue=[e]},parse:function(e){var t,r,a;e?((0,i.warn)(\"Indexing all PDF objects\"),t=this.indexObjects()):t=this.readXRef(),t.assignXref(this),this.trailer=t;try{r=t.get(\"Encrypt\")}catch(c){if(c instanceof i.MissingDataException)throw c;(0,i.warn)('XRef.parse - Invalid \"Encrypt\" reference: \"'.concat(c,'\".'))}if((0,o.isDict)(r)){var n=t.get(\"ID\"),s=n&&n.length?n[0]:\"\";r.suppressEncryption=!0,this.encrypt=new l.CipherTransformFactory(r,s,this.pdfManager.password)}try{a=t.get(\"Root\")}catch(c){if(c instanceof i.MissingDataException)throw c;(0,i.warn)('XRef.parse - Invalid \"Root\" reference: \"'.concat(c,'\".'))}if(!(0,o.isDict)(a)||!a.has(\"Pages\")){if(!e)throw new i.XRefParseException;throw new i.FormatError(\"Invalid root reference\")}this.root=a},processXRefTable:function(e){\"tableState\"in this||(this.tableState={entryNum:0,streamPos:e.lexer.stream.pos,parserBuf1:e.buf1,parserBuf2:e.buf2});var t=this.readXRefTable(e);if(!(0,o.isCmd)(t,\"trailer\"))throw new i.FormatError(\"Invalid XRef table: could not find trailer dictionary\");var r=e.getObj();if(!(0,o.isDict)(r)&&r.dict&&(r=r.dict),!(0,o.isDict)(r))throw new i.FormatError(\"Invalid XRef table: could not parse trailer dictionary\");return delete this.tableState,r},readXRefTable:function(e){var t,r=e.lexer.stream,a=this.tableState;for(r.pos=a.streamPos,e.buf1=a.parserBuf1,e.buf2=a.parserBuf2;;){if(!(\"firstEntryNum\"in a)||!(\"entryCount\"in a)){if((0,o.isCmd)(t=e.getObj(),\"trailer\"))break;a.firstEntryNum=t,a.entryCount=e.getObj()}var n=a.firstEntryNum,s=a.entryCount;if(!Number.isInteger(n)||!Number.isInteger(s))throw new i.FormatError(\"Invalid XRef table: wrong types in subsection header\");for(var c=a.entryNum;c<s;c++){a.streamPos=r.pos,a.entryNum=c,a.parserBuf1=e.buf1,a.parserBuf2=e.buf2;var l={};l.offset=e.getObj(),l.gen=e.getObj();var u=e.getObj();if((0,o.isCmd)(u,\"f\")?l.free=!0:(0,o.isCmd)(u,\"n\")&&(l.uncompressed=!0),!Number.isInteger(l.offset)||!Number.isInteger(l.gen)||!l.free&&!l.uncompressed)throw new i.FormatError(\"Invalid entry in XRef subsection: \".concat(n,\", \").concat(s));0===c&&l.free&&1===n&&(n=0),this.entries[c+n]||(this.entries[c+n]=l)}a.entryNum=0,a.streamPos=r.pos,a.parserBuf1=e.buf1,a.parserBuf2=e.buf2,delete a.firstEntryNum,delete a.entryCount}if(this.entries[0]&&!this.entries[0].free)throw new i.FormatError(\"Invalid XRef table: unexpected first object\");return t},processXRefStream:function(e){if(!(\"streamState\"in this)){var t=e.dict,r=t.get(\"W\"),a=t.get(\"Index\");a||(a=[0,t.get(\"Size\")]),this.streamState={entryRanges:a,byteWidths:r,entryNum:0,streamPos:e.pos}}return this.readXRefStream(e),delete this.streamState,e.dict},readXRefStream:function(e){var t,r,a=this.streamState;e.pos=a.streamPos;for(var n=a.byteWidths,o=n[0],s=n[1],c=n[2],l=a.entryRanges;l.length>0;){var u=l[0],h=l[1];if(!Number.isInteger(u)||!Number.isInteger(h))throw new i.FormatError(\"Invalid XRef range fields: \".concat(u,\", \").concat(h));if(!Number.isInteger(o)||!Number.isInteger(s)||!Number.isInteger(c))throw new i.FormatError(\"Invalid XRef entry fields length: \".concat(u,\", \").concat(h));for(t=a.entryNum;t<h;++t){a.entryNum=t,a.streamPos=e.pos;var f=0,d=0,g=0;for(r=0;r<o;++r)f=f<<8|e.getByte();for(0===o&&(f=1),r=0;r<s;++r)d=d<<8|e.getByte();for(r=0;r<c;++r)g=g<<8|e.getByte();var p={};switch(p.offset=d,p.gen=g,f){case 0:p.free=!0;break;case 1:p.uncompressed=!0;break;case 2:break;default:throw new i.FormatError(\"Invalid XRef entry type: \".concat(f))}this.entries[u+t]||(this.entries[u+t]=p)}a.entryNum=0,a.streamPos=e.pos,l.splice(0,2)}},indexObjects:function(){var e=10,t=13,r=60;function a(a,n){for(var i=\"\",o=a[n];o!==e&&o!==t&&o!==r&&!(++n>=a.length);)i+=String.fromCharCode(o),o=a[n];return i}function n(e,t,r){for(var a=r.length,n=e.length,i=0;t<n;){for(var o=0;o<a&&e[t+o]===r[o];)++o;if(o>=a)break;t++,i++}return i}var c=/^(\\d+)\\s+(\\d+)\\s+obj\\b/,l=/\\bendobj[\\b\\s]$/,u=/\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/,h=new Uint8Array([116,114,97,105,108,101,114]),f=new Uint8Array([115,116,97,114,116,120,114,101,102]),d=new Uint8Array([111,98,106]),g=new Uint8Array([47,88,82,101,102]);this.entries.length=0;var p=this.stream;p.pos=0;for(var m,v,b,y=p.getBytes(),w=p.start,k=y.length,S=[],C=[];w<k;){var x=y[w];if(9!==x&&x!==e&&x!==t&&32!==x)if(37!==x){var A,_=a(y,w);if(_.startsWith(\"xref\")&&(4===_.length||/\\s/.test(_[4])))w+=n(y,w,h),S.push(w),w+=n(y,w,f);else if(A=c.exec(_)){var P=0|A[1],I=0|A[2];\"undefined\"===typeof this.entries[P]&&(this.entries[P]={offset:w-p.start,gen:I,uncompressed:!0});for(var E=void 0,T=w+_.length;T<y.length;){var O=T+n(y,T,d)+4;E=O-w;var F=Math.max(O-25,T),R=(0,i.bytesToString)(y.subarray(F,O));if(l.test(R))break;var B=u.exec(R);if(B&&B[1]){(0,i.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", caused by missing \"endobj\" -- trying to recover.'),E-=B[1].length;break}T=O}var M=y.subarray(w,w+E),D=n(M,0,g);D<E&&M[D+5]<64&&(C.push(w-p.start),this.xrefstms[w-p.start]=1),w+=E}else _.startsWith(\"trailer\")&&(7===_.length||/\\s/.test(_[7]))?(S.push(w),w+=n(y,w,f)):w+=_.length+1}else do{if(++w>=k)break;x=y[w]}while(x!==e&&x!==t);else++w}for(m=0,v=C.length;m<v;++m)this.startXRefQueue.push(C[m]),this.readXRef(!0);for(m=0,v=S.length;m<v;++m){p.pos=S[m];var L=new s.Parser(new s.Lexer(p),!0,this,!0),N=L.getObj();if((0,o.isCmd)(N,\"trailer\")){var U=L.getObj();if((0,o.isDict)(U)){var q=void 0;try{q=U.get(\"Root\")}catch(j){if(j instanceof i.MissingDataException)throw j;continue}if((0,o.isDict)(q)&&q.has(\"Pages\")){if(U.has(\"ID\"))return U;b=U}}}}if(b)return b;throw new i.InvalidPDFException(\"Invalid PDF structure\")},readXRef:function(e){var t=this.stream,r=Object.create(null);try{for(;this.startXRefQueue.length;){var a=this.startXRefQueue[0];if(r[a])(0,i.warn)(\"readXRef - skipping XRef table since it was already parsed.\"),this.startXRefQueue.shift();else{r[a]=!0,t.pos=a+t.start;var n,c=new s.Parser(new s.Lexer(t),!0,this),l=c.getObj();if((0,o.isCmd)(l,\"xref\")){if(n=this.processXRefTable(c),this.topDict||(this.topDict=n),l=n.get(\"XRefStm\"),Number.isInteger(l)){var u=l;u in this.xrefstms||(this.xrefstms[u]=1,this.startXRefQueue.push(u))}}else{if(!Number.isInteger(l))throw new i.FormatError(\"Invalid XRef stream header\");if(!Number.isInteger(c.getObj())||!(0,o.isCmd)(c.getObj(),\"obj\")||!(0,o.isStream)(l=c.getObj()))throw new i.FormatError(\"Invalid XRef stream\");if(n=this.processXRefStream(l),this.topDict||(this.topDict=n),!n)throw new i.FormatError(\"Failed to read XRef stream\")}l=n.get(\"Prev\"),Number.isInteger(l)?this.startXRefQueue.push(l):(0,o.isRef)(l)&&this.startXRefQueue.push(l.num),this.startXRefQueue.shift()}}return this.topDict}catch(h){if(h instanceof i.MissingDataException)throw h;(0,i.info)(\"(while reading XRef): \"+h)}if(!e)throw new i.XRefParseException},getEntry:function(e){var t=this.entries[e];return t&&!t.free&&t.offset?t:null},fetchIfRef:function(e,t){return(0,o.isRef)(e)?this.fetch(e,t):e},fetch:function(e,t){if(!(0,o.isRef)(e))throw new Error(\"ref object is not a reference\");var r=e.num;if(r in this.cache){var a=this.cache[r];return a instanceof o.Dict&&!a.objId&&(a.objId=e.toString()),a}var n=this.getEntry(r);return null===n?this.cache[r]=null:(n=n.uncompressed?this.fetchUncompressed(e,n,t):this.fetchCompressed(e,n,t),(0,o.isDict)(n)?n.objId=e.toString():(0,o.isStream)(n)&&(n.dict.objId=e.toString()),n)},fetchUncompressed:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=e.gen,n=e.num;if(t.gen!==a)throw new i.XRefEntryException(\"Inconsistent generation in XRef: \".concat(e));var c=this.stream.makeSubStream(t.offset+this.stream.start),l=new s.Parser(new s.Lexer(c),!0,this),u=l.getObj(),h=l.getObj(),f=l.getObj();if(Number.isInteger(u)||(u=parseInt(u,10)),Number.isInteger(h)||(h=parseInt(h,10)),u!==n||h!==a||!(0,o.isCmd)(f))throw new i.XRefEntryException(\"Bad (uncompressed) XRef entry: \".concat(e));if(\"obj\"!==f.cmd){if(f.cmd.startsWith(\"obj\")&&(n=parseInt(f.cmd.substring(3),10),!Number.isNaN(n)))return n;throw new i.XRefEntryException(\"Bad (uncompressed) XRef entry: \".concat(e))}return t=this.encrypt&&!r?l.getObj(this.encrypt.createCipherTransform(n,a)):l.getObj(),(0,o.isStream)(t)||(this.cache[n]=t),t},fetchCompressed:function(e,t){arguments.length>2&&void 0!==arguments[2]&&arguments[2];var r=t.offset,a=this.fetch(new o.Ref(r,0));if(!(0,o.isStream)(a))throw new i.FormatError(\"bad ObjStm stream\");var n=a.dict.get(\"First\"),c=a.dict.get(\"N\");if(!Number.isInteger(n)||!Number.isInteger(c))throw new i.FormatError(\"invalid first and n parameters for ObjStm stream\");var l=new s.Parser(new s.Lexer(a),!1,this);l.allowStreams=!0;var u,h,f=[],d=[];for(u=0;u<c;++u){if(h=l.getObj(),!Number.isInteger(h))throw new i.FormatError(\"invalid object number in the ObjStm stream: \".concat(h));d.push(h);var g=l.getObj();if(!Number.isInteger(g))throw new i.FormatError(\"invalid object offset in the ObjStm stream: \".concat(g))}for(u=0;u<c;++u){f.push(l.getObj()),(0,o.isCmd)(l.buf1,\"endobj\")&&l.shift(),h=d[u];var p=this.entries[h];p&&p.offset===r&&p.gen===u&&(this.cache[h]=f[u])}if(void 0===(t=f[t.gen]))throw new i.XRefEntryException(\"Bad (compressed) XRef entry: \".concat(e));return t},fetchIfRefAsync:function(){var e=m(n.default.mark(function e(t,r){return n.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if((0,o.isRef)(t)){e.next=2;break}return e.abrupt(\"return\",t);case 2:return e.abrupt(\"return\",this.fetchAsync(t,r));case 3:case\"end\":return e.stop()}},e,this)}));return function(t,r){return e.apply(this,arguments)}}(),fetchAsync:function(){var e=m(n.default.mark(function e(t,r){return n.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.abrupt(\"return\",this.fetch(t,r));case 4:if(e.prev=4,e.t0=e.catch(0),e.t0 instanceof i.MissingDataException){e.next=8;break}throw e.t0;case 8:return e.next=10,this.pdfManager.requestRange(e.t0.begin,e.t0.end);case 10:return e.abrupt(\"return\",this.fetchAsync(t,r));case 11:case\"end\":return e.stop()}},e,this,[[0,4]])}));return function(t,r){return e.apply(this,arguments)}}(),getCatalogObj:function(){return this.root}},e}();t.XRef=x;var A=function(){function e(t,r,a){y(this,e),this.constructor===e&&(0,i.unreachable)(\"Cannot initialize NameOrNumberTree.\"),this.root=t,this.xref=r,this._type=a}return k(e,[{key:\"getAll\",value:function(){var e=Object.create(null);if(!this.root)return e;var t=this.xref,r=new o.RefSet;r.put(this.root);for(var a=[this.root];a.length>0;){var n=t.fetchIfRef(a.shift());if((0,o.isDict)(n))if(n.has(\"Kids\"))for(var s=n.get(\"Kids\"),c=0,l=s.length;c<l;c++){var u=s[c];if(r.has(u))throw new i.FormatError('Duplicate entry in \"'.concat(this._type,'\" tree.'));a.push(u),r.put(u)}else{var h=n.get(this._type);if(Array.isArray(h))for(var f=0,d=h.length;f<d;f+=2)e[t.fetchIfRef(h[f])]=t.fetchIfRef(h[f+1])}}return e}},{key:\"get\",value:function(e){if(!this.root)return null;for(var t=this.xref,r=t.fetchIfRef(this.root),a=0;r.has(\"Kids\");){if(++a>10)return(0,i.warn)('Search depth limit reached for \"'.concat(this._type,'\" tree.')),null;var n=r.get(\"Kids\");if(!Array.isArray(n))return null;for(var o=0,s=n.length-1;o<=s;){var c=o+s>>1,l=t.fetchIfRef(n[c]).get(\"Limits\");if(e<t.fetchIfRef(l[0]))s=c-1;else{if(!(e>t.fetchIfRef(l[1]))){r=t.fetchIfRef(n[c]);break}o=c+1}}if(o>s)return null}var u=r.get(this._type);if(Array.isArray(u)){for(var h=0,f=u.length-2;h<=f;){var d=h+f>>1,g=d+(1&d),p=t.fetchIfRef(u[g]);if(e<p)f=g-2;else{if(!(e>p))return t.fetchIfRef(u[g+1]);h=g+2}}(0,i.info)('Falling back to an exhaustive search, for key \"'.concat(e,'\", ')+'in \"'.concat(this._type,'\" tree.'));for(var m=0,v=u.length;m<v;m+=2){if(t.fetchIfRef(u[m])===e)return(0,i.warn)('The \"'.concat(e,'\" key was found at an incorrect, ')+'i.e. out-of-order, position in \"'.concat(this._type,'\" tree.')),t.fetchIfRef(u[m+1])}}return null}}]),e}(),_=function(e){function t(e,r){return y(this,t),h(this,f(t).call(this,e,r,\"Names\"))}return d(t,A),t}(),P=function(e){function t(e,r){return y(this,t),h(this,f(t).call(this,e,r,\"Nums\"))}return d(t,A),t}(),I=function(){function e(e,t){e&&(0,o.isDict)(e)&&(this.xref=t,this.root=e,e.has(\"FS\")&&(this.fs=e.get(\"FS\")),this.description=e.has(\"Desc\")?(0,i.stringToPDFString)(e.get(\"Desc\")):\"\",e.has(\"RF\")&&(0,i.warn)(\"Related file specifications are not supported\"),this.contentAvailable=!0,e.has(\"EF\")||(this.contentAvailable=!1,(0,i.warn)(\"Non-embedded file specifications are not supported\")))}function t(e){return e.has(\"UF\")?e.get(\"UF\"):e.has(\"F\")?e.get(\"F\"):e.has(\"Unix\")?e.get(\"Unix\"):e.has(\"Mac\")?e.get(\"Mac\"):e.has(\"DOS\")?e.get(\"DOS\"):null}return e.prototype={get filename(){if(!this._filename&&this.root){var e=t(this.root)||\"unnamed\";this._filename=(0,i.stringToPDFString)(e).replace(/\\\\\\\\/g,\"\\\\\").replace(/\\\\\\//g,\"/\").replace(/\\\\/g,\"/\")}return this._filename},get content(){if(!this.contentAvailable)return null;!this.contentRef&&this.root&&(this.contentRef=t(this.root.get(\"EF\")));var e=null;if(this.contentRef){var r=this.xref.fetchIfRef(this.contentRef);r&&(0,o.isStream)(r)?e=r.getBytes():(0,i.warn)(\"Embedded file specification points to non-existing/invalid content\")}else(0,i.warn)(\"Embedded file specification does not have a content\");return e},get serializable(){return{filename:this.filename,content:this.content}}},e}();t.FileSpec=I;var E=function(){function e(e){return(0,o.isRef)(e)||(0,o.isDict)(e)||Array.isArray(e)||(0,o.isStream)(e)}function t(t,r){if((0,o.isDict)(t)||(0,o.isStream)(t))for(var a=(0,o.isDict)(t)?t:t.dict,n=a.getKeys(),i=0,s=n.length;i<s;i++){var c=a.getRaw(n[i]);e(c)&&r.push(c)}else if(Array.isArray(t))for(var l=0,u=t.length;l<u;l++){var h=t[l];e(h)&&r.push(h)}}function r(e,t,r){this.dict=e,this.keys=t,this.xref=r,this.refSet=null,this.capability=null}return r.prototype={load:function(){if(this.capability=(0,i.createPromiseCapability)(),!(this.xref.stream instanceof c.ChunkedStream)||0===this.xref.stream.getMissingChunks().length)return this.capability.resolve(),this.capability.promise;var e=this.keys,t=this.dict;this.refSet=new o.RefSet;for(var r=[],a=0,n=e.length;a<n;a++){var s=t.getRaw(e[a]);void 0!==s&&r.push(s)}return this._walk(r),this.capability.promise},_walk:function(e){for(var r=this,a=[],n=[];e.length;){var s=e.pop();if((0,o.isRef)(s)){if(this.refSet.has(s))continue;try{this.refSet.put(s),s=this.xref.fetch(s)}catch(d){if(!(d instanceof i.MissingDataException))throw d;a.push(s),n.push({begin:d.begin,end:d.end})}}if(s&&s.getBaseStreams){for(var c=s.getBaseStreams(),l=!1,u=0,h=c.length;u<h;u++){var f=c[u];f.getMissingChunks&&f.getMissingChunks().length&&(l=!0,n.push({begin:f.start,end:f.end}))}l&&a.push(s)}t(s,e)}n.length?this.xref.stream.manager.requestRanges(n).then(function(){for(var e=0,t=a.length;e<t;e++){var n=a[e];(0,o.isRef)(n)&&r.refSet.remove(n)}r._walk(a)},this.capability.reject):(this.refSet=null,this.capability.resolve())}},r}();t.ObjectLoader=E},function(e,t,r){\"use strict\";function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.isEOF=function(e){return e===n},t.isCmd=function(e,t){return e instanceof o&&(void 0===t||e.cmd===t)},t.isDict=f,t.isName=h,t.isRef=d,t.isRefsEqual=function(e,t){return e.num===t.num&&e.gen===t.gen},t.isStream=function(e){return\"object\"===a(e)&&null!==e&&void 0!==e.getBytes},t.RefSetCache=t.RefSet=t.Ref=t.Name=t.Dict=t.Cmd=t.EOF=void 0;var n={};t.EOF=n;var i=function(){function e(e){this.name=e}e.prototype={};var t=Object.create(null);return e.get=function(r){var a=t[r];return a||(t[r]=new e(r))},e}();t.Name=i;var o=function(){function e(e){this.cmd=e}e.prototype={};var t=Object.create(null);return e.get=function(r){var a=t[r];return a||(t[r]=new e(r))},e}();t.Cmd=o;var s=function(){var e=function(){return e};function t(t){this._map=Object.create(null),this.xref=t,this.objId=null,this.suppressEncryption=!1,this.__nonSerializable__=e}return t.prototype={assignXref:function(e){this.xref=e},get:function(e,t,r){var a,n=this.xref,i=this.suppressEncryption;return\"undefined\"!==typeof(a=this._map[e])||e in this._map||\"undefined\"===typeof t?n?n.fetchIfRef(a,i):a:\"undefined\"!==typeof(a=this._map[t])||t in this._map||\"undefined\"===typeof r?n?n.fetchIfRef(a,i):a:(a=this._map[r]||null,n?n.fetchIfRef(a,i):a)},getAsync:function(e,t,r){var a,n=this.xref,i=this.suppressEncryption;return\"undefined\"!==typeof(a=this._map[e])||e in this._map||\"undefined\"===typeof t?n?n.fetchIfRefAsync(a,i):Promise.resolve(a):\"undefined\"!==typeof(a=this._map[t])||t in this._map||\"undefined\"===typeof r?n?n.fetchIfRefAsync(a,i):Promise.resolve(a):(a=this._map[r]||null,n?n.fetchIfRefAsync(a,i):Promise.resolve(a))},getArray:function(e,t,r){var a=this.get(e,t,r),n=this.xref,i=this.suppressEncryption;if(!Array.isArray(a)||!n)return a;for(var o=0,s=(a=a.slice()).length;o<s;o++)d(a[o])&&(a[o]=n.fetch(a[o],i));return a},getRaw:function(e){return this._map[e]},getKeys:function(){return Object.keys(this._map)},set:function(e,t){this._map[e]=t},has:function(e){return e in this._map},forEach:function(e){for(var t in this._map)e(t,this.get(t))}},t.empty=new t(null),t.merge=function(e,r){for(var a=new t(e),n=0,i=r.length;n<i;n++){var o=r[n];if(f(o))for(var s in o._map)void 0===a._map[s]&&(a._map[s]=o._map[s])}return a},t}();t.Dict=s;var c=function(){function e(e,t){this.num=e,this.gen=t}return e.prototype={toString:function(){return 0!==this.gen?\"\".concat(this.num,\"R\").concat(this.gen):\"\".concat(this.num,\"R\")}},e}();t.Ref=c;var l=function(){function e(){this.dict=Object.create(null)}return e.prototype={has:function(e){return e.toString()in this.dict},put:function(e){this.dict[e.toString()]=!0},remove:function(e){delete this.dict[e.toString()]}},e}();t.RefSet=l;var u=function(){function e(){this.dict=Object.create(null)}return e.prototype={get:function(e){return this.dict[e.toString()]},has:function(e){return e.toString()in this.dict},put:function(e,t){this.dict[e.toString()]=t},putAlias:function(e,t){this.dict[e.toString()]=this.get(t)},forEach:function(e,t){for(var r in this.dict)e.call(t,this.dict[r])},clear:function(){this.dict=Object.create(null)}},e}();function h(e,t){return e instanceof i&&(void 0===t||e.name===t)}function f(e,t){return e instanceof s&&(void 0===t||h(e.get(\"Type\"),t))}function d(e){return e instanceof c}t.RefSetCache=u},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Parser=t.Linearization=t.Lexer=void 0;var a=r(157),n=r(6),i=r(155),o=r(158),s=r(160),c=r(163),l=r(165);function u(e){for(var t=e.length,r=1,a=0,n=0;n<t;++n)a+=r+=255&e[n];return a%65521<<16|r%65521}var h=function(){function e(e,t,r,a){this.lexer=e,this.allowStreams=t,this.xref=r,this.recoveryMode=a||!1,this.imageCache=Object.create(null),this.refill()}return e.prototype={refill:function(){this.buf1=this.lexer.getObj(),this.buf2=this.lexer.getObj()},shift:function(){(0,i.isCmd)(this.buf2,\"ID\")?(this.buf1=this.buf2,this.buf2=null):(this.buf1=this.buf2,this.buf2=this.lexer.getObj())},tryShift:function(){try{return this.shift(),!0}catch(e){if(e instanceof n.MissingDataException)throw e;return!1}},getObj:function(e){var t=this.buf1;if(this.shift(),t instanceof i.Cmd)switch(t.cmd){case\"BI\":return this.makeInlineImage(e);case\"[\":for(var r=[];!(0,i.isCmd)(this.buf1,\"]\")&&!(0,i.isEOF)(this.buf1);)r.push(this.getObj(e));if((0,i.isEOF)(this.buf1)){if(!this.recoveryMode)throw new n.FormatError(\"End of file inside array\");return r}return this.shift(),r;case\"<<\":for(var a=new i.Dict(this.xref);!(0,i.isCmd)(this.buf1,\">>\")&&!(0,i.isEOF)(this.buf1);)if((0,i.isName)(this.buf1)){var o=this.buf1.name;if(this.shift(),(0,i.isEOF)(this.buf1))break;a.set(o,this.getObj(e))}else(0,n.info)(\"Malformed dictionary: key must be a name object\"),this.shift();if((0,i.isEOF)(this.buf1)){if(!this.recoveryMode)throw new n.FormatError(\"End of file inside dictionary\");return a}return(0,i.isCmd)(this.buf2,\"stream\")?this.allowStreams?this.makeStream(a,e):a:(this.shift(),a);default:return t}if(Number.isInteger(t)){var s=t;if(Number.isInteger(this.buf1)&&(0,i.isCmd)(this.buf2,\"R\")){var c=new i.Ref(s,this.buf1);return this.shift(),this.shift(),c}return s}if((0,n.isString)(t)){var l=t;return e&&(l=e.decryptString(l)),l}return t},findDefaultInlineStreamEnd:function(e){for(var t,r,a=e.pos,i=0;-1!==(t=e.getByte());)if(0===i)i=69===t?1:0;else if(1===i)i=73===t?2:0;else if((0,n.assert)(2===i),32===t||10===t||13===t){r=e.pos;for(var o=e.peekBytes(10),s=0,c=o.length;s<c;s++)if((0!==(t=o[s])||0===o[s+1])&&10!==t&&13!==t&&(t<32||t>127)){i=0;break}if(2===i)break}else i=0;-1===t&&((0,n.warn)(\"findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker\"),r&&((0,n.warn)('... trying to recover by using the last \"EI\" occurrence.'),e.skip(-(e.pos-r))));var l=4;return e.skip(-l),t=e.peekByte(),e.skip(l),(0,n.isSpace)(t)||l--,e.pos-l-a},findDCTDecodeInlineStreamEnd:function(e){for(var t,r,a,i=e.pos,o=!1;-1!==(t=e.getByte());)if(255===t){switch(e.getByte()){case 0:break;case 255:e.skip(-1);break;case 217:o=!0;break;case 192:case 193:case 194:case 195:case 197:case 198:case 199:case 201:case 202:case 203:case 205:case 206:case 207:case 196:case 204:case 218:case 219:case 220:case 221:case 222:case 223:case 224:case 225:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 238:case 239:case 254:(r=e.getUint16())>2?e.skip(r-2):e.skip(-2)}if(o)break}return a=e.pos-i,-1===t?((0,n.warn)(\"Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead.\"),e.skip(-a),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),a)},findASCII85DecodeInlineStreamEnd:function(e){for(var t,r,a=e.pos;-1!==(t=e.getByte());)if(126===t&&62===e.peekByte()){e.skip();break}return r=e.pos-a,-1===t?((0,n.warn)(\"Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead.\"),e.skip(-r),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),r)},findASCIIHexDecodeInlineStreamEnd:function(e){for(var t,r,a=e.pos;-1!==(t=e.getByte())&&62!==t;);return r=e.pos-a,-1===t?((0,n.warn)(\"Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead.\"),e.skip(-r),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),r)},inlineStreamSkipEI:function(e){for(var t,r=0;-1!==(t=e.getByte());)if(0===r)r=69===t?1:0;else if(1===r)r=73===t?2:0;else if(2===r)break},makeInlineImage:function(e){for(var t,r=this.lexer,a=r.stream,o=new i.Dict(this.xref);!(0,i.isCmd)(this.buf1,\"ID\")&&!(0,i.isEOF)(this.buf1);){if(!(0,i.isName)(this.buf1))throw new n.FormatError(\"Dictionary key must be a name object\");var s=this.buf1.name;if(this.shift(),(0,i.isEOF)(this.buf1))break;o.set(s,this.getObj(e))}-1!==r.beginInlineImagePos&&(t=a.pos-r.beginInlineImagePos);var c,l=o.get(\"Filter\",\"F\");if((0,i.isName)(l))c=l.name;else if(Array.isArray(l)){var h=this.xref.fetchIfRef(l[0]);(0,i.isName)(h)&&(c=h.name)}var f,d=a.pos;f=\"DCTDecode\"===c||\"DCT\"===c?this.findDCTDecodeInlineStreamEnd(a):\"ASCII85Decode\"===c||\"A85\"===c?this.findASCII85DecodeInlineStreamEnd(a):\"ASCIIHexDecode\"===c||\"AHx\"===c?this.findASCIIHexDecodeInlineStreamEnd(a):this.findDefaultInlineStreamEnd(a);var g,p=a.makeSubStream(d,f,o);if(f<1e3&&t<5552){var m=p.getBytes();p.reset();var v=a.pos;a.pos=r.beginInlineImagePos;var b=a.getBytes(t);a.pos=v,g=u(m)+\"_\"+u(b);var y=this.imageCache[g];if(void 0!==y)return this.buf2=i.Cmd.get(\"EI\"),this.shift(),y.reset(),y}return e&&(p=e.createStream(p,f)),(p=this.filter(p,o,f)).dict=o,void 0!==g&&(p.cacheKey=\"inline_\"+f+\"_\"+g,this.imageCache[g]=p),this.buf2=i.Cmd.get(\"EI\"),this.shift(),p},_findStreamLength:function(e,t){var r=this.lexer.stream;r.pos=e;for(var a=t.length;r.pos<r.end;){var n=r.peekBytes(2048),i=n.length-a;if(i<=0)break;for(var o=0;o<i;){for(var s=0;s<a&&n[o+s]===t[s];)s++;if(s>=a)return r.pos+=o,r.pos-e;o++}r.pos+=i}return-1},makeStream:function(e,t){var r=this.lexer,a=r.stream;r.skipToNextLine();var o=a.pos-1,s=e.get(\"Length\");if(Number.isInteger(s)||((0,n.info)(\"Bad \"+s+\" attribute in stream\"),s=0),a.pos=o+s,r.nextChar(),this.tryShift()&&(0,i.isCmd)(this.buf2,\"endstream\"))this.shift();else{var c=new Uint8Array([101,110,100,115,116,114,101,97,109]),l=this._findStreamLength(o,c);if(l<0){for(var u=1;u<=1;u++){var h=c.length-u,f=c.slice(0,h),d=this._findStreamLength(o,f);if(d>=0){var g=a.peekBytes(h+1)[h];if(!(0,n.isSpace)(g))break;(0,n.info)('Found \"'.concat((0,n.bytesToString)(f),'\" when ')+\"searching for endstream command.\"),l=d;break}}if(l<0)throw new n.FormatError(\"Missing endstream command.\")}s=l,r.nextChar(),this.shift(),this.shift()}return this.shift(),a=a.makeSubStream(o,s,e),t&&(a=t.createStream(a,s)),(a=this.filter(a,e,s)).dict=e,a},filter:function(e,t,r){var a=t.get(\"Filter\",\"F\"),o=t.get(\"DecodeParms\",\"DP\");if((0,i.isName)(a))return Array.isArray(o)&&(0,n.warn)(\"/DecodeParms should not contain an Array, when /Filter contains a Name.\"),this.makeFilter(e,a.name,r,o);var s=r;if(Array.isArray(a))for(var c=a,l=o,u=0,h=c.length;u<h;++u){if(a=this.xref.fetchIfRef(c[u]),!(0,i.isName)(a))throw new n.FormatError(\"Bad filter name: \"+a);o=null,Array.isArray(l)&&u in l&&(o=this.xref.fetchIfRef(l[u])),e=this.makeFilter(e,a.name,s,o),s=null}return e},makeFilter:function(e,t,r,i){if(0===r)return(0,n.warn)('Empty \"'+t+'\" stream.'),new a.NullStream;try{var u=this.xref.stats.streamTypes;if(\"FlateDecode\"===t||\"Fl\"===t)return u[n.StreamType.FLATE]=!0,i?new a.PredictorStream(new a.FlateStream(e,r),r,i):new a.FlateStream(e,r);if(\"LZWDecode\"===t||\"LZW\"===t){u[n.StreamType.LZW]=!0;var h=1;return i?(i.has(\"EarlyChange\")&&(h=i.get(\"EarlyChange\")),new a.PredictorStream(new a.LZWStream(e,r,h),r,i)):new a.LZWStream(e,r,h)}return\"DCTDecode\"===t||\"DCT\"===t?(u[n.StreamType.DCT]=!0,new c.JpegStream(e,r,e.dict,i)):\"JPXDecode\"===t||\"JPX\"===t?(u[n.StreamType.JPX]=!0,new l.JpxStream(e,r,e.dict,i)):\"ASCII85Decode\"===t||\"A85\"===t?(u[n.StreamType.A85]=!0,new a.Ascii85Stream(e,r)):\"ASCIIHexDecode\"===t||\"AHx\"===t?(u[n.StreamType.AHX]=!0,new a.AsciiHexStream(e,r)):\"CCITTFaxDecode\"===t||\"CCF\"===t?(u[n.StreamType.CCF]=!0,new o.CCITTFaxStream(e,r,i)):\"RunLengthDecode\"===t||\"RL\"===t?(u[n.StreamType.RL]=!0,new a.RunLengthStream(e,r)):\"JBIG2Decode\"===t?(u[n.StreamType.JBIG]=!0,new s.Jbig2Stream(e,r,e.dict,i)):((0,n.warn)('filter \"'+t+'\" not supported yet'),e)}catch(f){if(f instanceof n.MissingDataException)throw f;return(0,n.warn)('Invalid stream: \"'+f+'\"'),new a.NullStream}}},e}();t.Parser=h;var f=function(){function e(e,t){this.stream=e,this.nextChar(),this.strBuf=[],this.knownCommands=t,this.beginInlineImagePos=-1}var t=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];function r(e){return e>=48&&e<=57?15&e:e>=65&&e<=70||e>=97&&e<=102?9+(15&e):-1}return e.prototype={nextChar:function(){return this.currentChar=this.stream.getByte()},peekChar:function(){return this.stream.peekByte()},getNumber:function(){var e=this.currentChar,t=!1,r=0,a=0;if(45===e?(a=-1,45===(e=this.nextChar())&&(e=this.nextChar())):43===e&&(a=1,e=this.nextChar()),10===e||13===e)do{e=this.nextChar()}while(10===e||13===e);if(46===e&&(r=10,e=this.nextChar()),e<48||e>57){if(10===r&&0===a&&((0,n.isSpace)(e)||-1===e))return(0,n.warn)(\"Lexer.getNumber - treating a single decimal point as zero.\"),0;throw new n.FormatError(\"Invalid number: \".concat(String.fromCharCode(e),\" (charCode \").concat(e,\")\"))}a=a||1;for(var i=e-48,o=0,s=1;(e=this.nextChar())>=0;)if(48<=e&&e<=57){var c=e-48;t?o=10*o+c:(0!==r&&(r*=10),i=10*i+c)}else if(46===e){if(0!==r)break;r=1}else if(45===e)(0,n.warn)(\"Badly formatted number\");else{if(69!==e&&101!==e)break;if(43===(e=this.peekChar())||45===e)s=45===e?-1:1,this.nextChar();else if(e<48||e>57)break;t=!0}return 0!==r&&(i/=r),t&&(i*=Math.pow(10,s*o)),a*i},getString:function(){var e=1,t=!1,r=this.strBuf;r.length=0;for(var a=this.nextChar();;){var i=!1;switch(0|a){case-1:(0,n.warn)(\"Unterminated string\"),t=!0;break;case 40:++e,r.push(\"(\");break;case 41:0===--e?(this.nextChar(),t=!0):r.push(\")\");break;case 92:switch(a=this.nextChar()){case-1:(0,n.warn)(\"Unterminated string\"),t=!0;break;case 110:r.push(\"\\n\");break;case 114:r.push(\"\\r\");break;case 116:r.push(\"\\t\");break;case 98:r.push(\"\\b\");break;case 102:r.push(\"\\f\");break;case 92:case 40:case 41:r.push(String.fromCharCode(a));break;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:var o=15&a;i=!0,(a=this.nextChar())>=48&&a<=55&&(o=(o<<3)+(15&a),(a=this.nextChar())>=48&&a<=55&&(i=!1,o=(o<<3)+(15&a))),r.push(String.fromCharCode(o));break;case 13:10===this.peekChar()&&this.nextChar();break;case 10:break;default:r.push(String.fromCharCode(a))}break;default:r.push(String.fromCharCode(a))}if(t)break;i||(a=this.nextChar())}return r.join(\"\")},getName:function(){var e,a,o=this.strBuf;for(o.length=0;(e=this.nextChar())>=0&&!t[e];)if(35===e){if(e=this.nextChar(),t[e]){(0,n.warn)(\"Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number.\"),o.push(\"#\");break}var s=r(e);if(-1!==s){a=e;var c=r(e=this.nextChar());if(-1===c){if((0,n.warn)(\"Lexer_getName: Illegal digit (\"+String.fromCharCode(e)+\") in hexadecimal number.\"),o.push(\"#\",String.fromCharCode(a)),t[e])break;o.push(String.fromCharCode(e));continue}o.push(String.fromCharCode(s<<4|c))}else o.push(\"#\",String.fromCharCode(e))}else o.push(String.fromCharCode(e));return o.length>127&&(0,n.warn)(\"name token is longer than allowed by the spec: \"+o.length),i.Name.get(o.join(\"\"))},getHexString:function(){var e=this.strBuf;e.length=0;for(var a,i,o=this.currentChar,s=!0;;){if(o<0){(0,n.warn)(\"Unterminated hex string\");break}if(62===o){this.nextChar();break}if(1!==t[o]){if(s){if(-1===(a=r(o))){(0,n.warn)('Ignoring invalid character \"'+o+'\" in hex string'),o=this.nextChar();continue}}else{if(-1===(i=r(o))){(0,n.warn)('Ignoring invalid character \"'+o+'\" in hex string'),o=this.nextChar();continue}e.push(String.fromCharCode(a<<4|i))}s=!s,o=this.nextChar()}else o=this.nextChar()}return e.join(\"\")},getObj:function(){for(var e=!1,r=this.currentChar;;){if(r<0)return i.EOF;if(e)10!==r&&13!==r||(e=!1);else if(37===r)e=!0;else if(1!==t[r])break;r=this.nextChar()}switch(0|r){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return this.getNumber();case 40:return this.getString();case 47:return this.getName();case 91:return this.nextChar(),i.Cmd.get(\"[\");case 93:return this.nextChar(),i.Cmd.get(\"]\");case 60:return 60===(r=this.nextChar())?(this.nextChar(),i.Cmd.get(\"<<\")):this.getHexString();case 62:return 62===(r=this.nextChar())?(this.nextChar(),i.Cmd.get(\">>\")):i.Cmd.get(\">\");case 123:return this.nextChar(),i.Cmd.get(\"{\");case 125:return this.nextChar(),i.Cmd.get(\"}\");case 41:throw this.nextChar(),new n.FormatError(\"Illegal character: \".concat(r))}for(var a=String.fromCharCode(r),o=this.knownCommands,s=o&&void 0!==o[a];(r=this.nextChar())>=0&&!t[r];){var c=a+String.fromCharCode(r);if(s&&void 0===o[c])break;if(128===a.length)throw new n.FormatError(\"Command token too long: \".concat(a.length));a=c,s=o&&void 0!==o[a]}return\"true\"===a||\"false\"!==a&&(\"null\"===a?null:(\"BI\"===a&&(this.beginInlineImagePos=this.stream.pos),i.Cmd.get(a)))},skipToNextLine:function(){for(var e=this.currentChar;e>=0;){if(13===e){10===(e=this.nextChar())&&this.nextChar();break}if(10===e){this.nextChar();break}e=this.nextChar()}}},e}();t.Lexer=f;var d={create:function(e){function t(e,t){var r=u.get(e);if(Number.isInteger(r)&&(t?r>=0:r>0))return r;throw new Error('The \"'+e+'\" parameter in the linearization dictionary is invalid.')}var r,a,o=new h(new f(e),!1,null),s=o.getObj(),c=o.getObj(),l=o.getObj(),u=o.getObj();if(!(Number.isInteger(s)&&Number.isInteger(c)&&(0,i.isCmd)(l,\"obj\")&&(0,i.isDict)(u)&&(0,n.isNum)(r=u.get(\"Linearized\"))&&r>0))return null;if((a=t(\"L\"))!==e.length)throw new Error('The \"L\" parameter in the linearization dictionary does not equal the stream length.');return{length:a,hints:function(){var e,t,r=u.get(\"H\");if(Array.isArray(r)&&(2===(e=r.length)||4===e)){for(var a=0;a<e;a++)if(!(Number.isInteger(t=r[a])&&t>0))throw new Error(\"Hint (\"+a+\") in the linearization dictionary is invalid.\");return r}throw new Error(\"Hint array in the linearization dictionary is invalid.\")}(),objectNumberFirst:t(\"O\"),endFirst:t(\"E\"),numPages:t(\"N\"),mainXRefEntriesOffset:t(\"T\"),pageFirst:u.has(\"P\")?t(\"P\",!0):0}}};t.Linearization=d},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.LZWStream=t.StringStream=t.StreamsSequenceStream=t.Stream=t.RunLengthStream=t.PredictorStream=t.NullStream=t.FlateStream=t.DecodeStream=t.DecryptStream=t.AsciiHexStream=t.Ascii85Stream=void 0;var a=r(6),n=r(155);function i(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}var o=function(){function e(e,t,r,a){this.bytes=e instanceof Uint8Array?e:new Uint8Array(e),this.start=t||0,this.pos=this.start,this.end=t+r||this.bytes.length,this.dict=a}return e.prototype={get length(){return this.end-this.start},get isEmpty(){return 0===this.length},getByte:function(){return this.pos>=this.end?-1:this.bytes[this.pos++]},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=this.bytes,a=this.pos,n=this.end;if(!e){var i=r.subarray(a,n);return t?new Uint8ClampedArray(i):i}var o=a+e;o>n&&(o=n),this.pos=o;var s=r.subarray(a,o);return t?new Uint8ClampedArray(s):s},peekByte:function(){var e=this.getByte();return this.pos--,e},peekBytes:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=this.getBytes(e,t);return this.pos-=r.length,r},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=this.start},moveStart:function(){this.start=this.pos},makeSubStream:function(t,r,a){return new e(this.bytes.buffer,t,r,a)}},e}();t.Stream=o;var s=function(){function e(e){var t=(0,a.stringToBytes)(e);o.call(this,t)}return e.prototype=o.prototype,e}();t.StringStream=s;var c=function(){var e=new Uint8Array(0);function t(t){if(this._rawMinBufferLength=t||0,this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=e,this.minBufferLength=512,t)for(;this.minBufferLength<t;)this.minBufferLength*=2}return t.prototype={get isEmpty(){for(;!this.eof&&0===this.bufferLength;)this.readBlock();return 0===this.bufferLength},ensureBuffer:function(e){var t=this.buffer;if(e<=t.byteLength)return t;for(var r=this.minBufferLength;r<e;)r*=2;var a=new Uint8Array(r);return a.set(t),this.buffer=a},getByte:function(){for(var e=this.pos;this.bufferLength<=e;){if(this.eof)return-1;this.readBlock()}return this.buffer[this.pos++]},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=this.pos;if(e){for(this.ensureBuffer(a+e),t=a+e;!this.eof&&this.bufferLength<t;)this.readBlock();var n=this.bufferLength;t>n&&(t=n)}else{for(;!this.eof;)this.readBlock();t=this.bufferLength}this.pos=t;var i=this.buffer.subarray(a,t);return!r||i instanceof Uint8ClampedArray?i:new Uint8ClampedArray(i)},peekByte:function(){var e=this.getByte();return this.pos--,e},peekBytes:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=this.getBytes(e,t);return this.pos-=r.length,r},makeSubStream:function(e,t,r){for(var a=e+t;this.bufferLength<=a&&!this.eof;)this.readBlock();return new o(this.buffer,e,t,r)},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=0},getBaseStreams:function(){return this.str&&this.str.getBaseStreams?this.str.getBaseStreams():[]}},t}();t.DecodeStream=c;var l=function(){function e(e){this.streams=e;for(var t=0,r=0,a=e.length;r<a;r++){var n=e[r];t+=n instanceof c?n._rawMinBufferLength:n.length}c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){var e=this.streams;if(0!==e.length){var t=e.shift().getBytes(),r=this.bufferLength,a=r+t.length;this.ensureBuffer(a).set(t,r),this.bufferLength=a}else this.eof=!0},e.prototype.getBaseStreams=function(){for(var e=[],t=0,r=this.streams.length;t<r;t++){var a=this.streams[t];a.getBaseStreams&&e.push.apply(e,i(a.getBaseStreams()))}return e},e}();t.StreamsSequenceStream=l;var u=function(){var e=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),t=new Int32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),r=new Int32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),n=[new Int32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],i=[new Int32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];function o(e,t){this.str=e,this.dict=e.dict;var r=e.getByte(),n=e.getByte();if(-1===r||-1===n)throw new a.FormatError(\"Invalid header in flate stream: \".concat(r,\", \").concat(n));if(8!==(15&r))throw new a.FormatError(\"Unknown compression method in flate stream: \".concat(r,\", \").concat(n));if(((r<<8)+n)%31!==0)throw new a.FormatError(\"Bad FCHECK in flate stream: \".concat(r,\", \").concat(n));if(32&n)throw new a.FormatError(\"FDICT bit set in flate stream: \".concat(r,\", \").concat(n));this.codeSize=0,this.codeBuf=0,c.call(this,t)}return o.prototype=Object.create(c.prototype),o.prototype.getBits=function(e){for(var t,r=this.str,n=this.codeSize,i=this.codeBuf;n<e;){if(-1===(t=r.getByte()))throw new a.FormatError(\"Bad encoding in flate stream\");i|=t<<n,n+=8}return t=i&(1<<e)-1,this.codeBuf=i>>e,this.codeSize=n-=e,t},o.prototype.getCode=function(e){for(var t,r=this.str,n=e[0],i=e[1],o=this.codeSize,s=this.codeBuf;o<i&&-1!==(t=r.getByte());)s|=t<<o,o+=8;var c=n[s&(1<<i)-1],l=c>>16,u=65535&c;if(l<1||o<l)throw new a.FormatError(\"Bad encoding in flate stream\");return this.codeBuf=s>>l,this.codeSize=o-l,u},o.prototype.generateHuffmanTable=function(e){var t,r=e.length,a=0;for(t=0;t<r;++t)e[t]>a&&(a=e[t]);for(var n=1<<a,i=new Int32Array(n),o=1,s=0,c=2;o<=a;++o,s<<=1,c<<=1)for(var l=0;l<r;++l)if(e[l]===o){var u=0,h=s;for(t=0;t<o;++t)u=u<<1|1&h,h>>=1;for(t=u;t<n;t+=c)i[t]=o<<16|l;++s}return[i,a]},o.prototype.readBlock=function(){var o,s,c=this.str,l=this.getBits(3);if(1&l&&(this.eof=!0),0!==(l>>=1)){var u,h;if(1===l)u=n,h=i;else{if(2!==l)throw new a.FormatError(\"Unknown block type in flate stream\");var f,d=this.getBits(5)+257,g=this.getBits(5)+1,p=this.getBits(4)+4,m=new Uint8Array(e.length);for(f=0;f<p;++f)m[e[f]]=this.getBits(3);var v=this.generateHuffmanTable(m);s=0,f=0;for(var b,y,w,k=d+g,S=new Uint8Array(k);f<k;){var C=this.getCode(v);if(16===C)b=2,y=3,w=s;else if(17===C)b=3,y=3,w=s=0;else{if(18!==C){S[f++]=s=C;continue}b=7,y=11,w=s=0}for(var x=this.getBits(b)+y;x-- >0;)S[f++]=w}u=this.generateHuffmanTable(S.subarray(0,d)),h=this.generateHuffmanTable(S.subarray(d,k))}for(var A=(o=this.buffer)?o.length:0,_=this.bufferLength;;){var P=this.getCode(u);if(P<256)_+1>=A&&(A=(o=this.ensureBuffer(_+1)).length),o[_++]=P;else{if(256===P)return void(this.bufferLength=_);var I=(P=t[P-=257])>>16;I>0&&(I=this.getBits(I)),s=(65535&P)+I,P=this.getCode(h),(I=(P=r[P])>>16)>0&&(I=this.getBits(I));var E=(65535&P)+I;_+s>=A&&(A=(o=this.ensureBuffer(_+s)).length);for(var T=0;T<s;++T,++_)o[_]=o[_-E]}}}else{var O;if(-1===(O=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");var F=O;if(-1===(O=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");if(F|=O<<8,-1===(O=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");var R=O;if(-1===(O=c.getByte()))throw new a.FormatError(\"Bad block header in flate stream\");if((R|=O<<8)!==(65535&~F)&&(0!==F||0!==R))throw new a.FormatError(\"Bad uncompressed block length in flate stream\");this.codeBuf=0,this.codeSize=0;var B=this.bufferLength;o=this.ensureBuffer(B+F);var M=B+F;if(this.bufferLength=M,0===F)-1===c.peekByte()&&(this.eof=!0);else for(var D=B;D<M;++D){if(-1===(O=c.getByte())){this.eof=!0;break}o[D]=O}}},o}();t.FlateStream=u;var h=function(){function e(e,t,r){if(!(0,n.isDict)(r))return e;var i=this.predictor=r.get(\"Predictor\")||1;if(i<=1)return e;if(2!==i&&(i<10||i>15))throw new a.FormatError(\"Unsupported predictor: \".concat(i));this.readBlock=2===i?this.readBlockTiff:this.readBlockPng,this.str=e,this.dict=e.dict;var o=this.colors=r.get(\"Colors\")||1,s=this.bits=r.get(\"BitsPerComponent\")||8,l=this.columns=r.get(\"Columns\")||1;return this.pixBytes=o*s+7>>3,this.rowBytes=l*o*s+7>>3,c.call(this,t),this}return e.prototype=Object.create(c.prototype),e.prototype.readBlockTiff=function(){var e=this.rowBytes,t=this.bufferLength,r=this.ensureBuffer(t+e),a=this.bits,n=this.colors,i=this.str.getBytes(e);if(this.eof=!i.length,!this.eof){var o,s=0,c=0,l=0,u=0,h=t;if(1===a&&1===n)for(o=0;o<e;++o){var f=i[o]^s;f^=f>>1,f^=f>>2,s=(1&(f^=f>>4))<<7,r[h++]=f}else if(8===a){for(o=0;o<n;++o)r[h++]=i[o];for(;o<e;++o)r[h]=r[h-n]+i[o],h++}else if(16===a){var d=2*n;for(o=0;o<d;++o)r[h++]=i[o];for(;o<e;o+=2){var g=((255&i[o])<<8)+(255&i[o+1])+((255&r[h-d])<<8)+(255&r[h-d+1]);r[h++]=g>>8&255,r[h++]=255&g}}else{var p=new Uint8Array(n+1),m=(1<<a)-1,v=0,b=t,y=this.columns;for(o=0;o<y;++o)for(var w=0;w<n;++w)l<a&&(s=s<<8|255&i[v++],l+=8),p[w]=p[w]+(s>>l-a)&m,l-=a,c=c<<a|p[w],(u+=a)>=8&&(r[b++]=c>>u-8&255,u-=8);u>0&&(r[b++]=(c<<8-u)+(s&(1<<8-u)-1))}this.bufferLength+=e}},e.prototype.readBlockPng=function(){var e=this.rowBytes,t=this.pixBytes,r=this.str.getByte(),n=this.str.getBytes(e);if(this.eof=!n.length,!this.eof){var i=this.bufferLength,o=this.ensureBuffer(i+e),s=o.subarray(i-e,i);0===s.length&&(s=new Uint8Array(e));var c,l,u,h=i;switch(r){case 0:for(c=0;c<e;++c)o[h++]=n[c];break;case 1:for(c=0;c<t;++c)o[h++]=n[c];for(;c<e;++c)o[h]=o[h-t]+n[c]&255,h++;break;case 2:for(c=0;c<e;++c)o[h++]=s[c]+n[c]&255;break;case 3:for(c=0;c<t;++c)o[h++]=(s[c]>>1)+n[c];for(;c<e;++c)o[h]=(s[c]+o[h-t]>>1)+n[c]&255,h++;break;case 4:for(c=0;c<t;++c)l=s[c],u=n[c],o[h++]=l+u;for(;c<e;++c){l=s[c];var f=s[c-t],d=o[h-t],g=d+l-f,p=g-d;p<0&&(p=-p);var m=g-l;m<0&&(m=-m);var v=g-f;v<0&&(v=-v),u=n[c],o[h++]=p<=m&&p<=v?d+u:m<=v?l+u:f+u}break;default:throw new a.FormatError(\"Unsupported predictor: \".concat(r))}this.bufferLength+=e}},e}();t.PredictorStream=h;var f=function(){function e(e,t,r){this.str=e,this.dict=e.dict,this.decrypt=r,this.nextChunk=null,this.initialized=!1,c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){var e;if(this.initialized?e=this.nextChunk:(e=this.str.getBytes(512),this.initialized=!0),e&&0!==e.length){this.nextChunk=this.str.getBytes(512);var t=this.nextChunk&&this.nextChunk.length>0;e=(0,this.decrypt)(e,!t);var r,a=this.bufferLength,n=e.length,i=this.ensureBuffer(a+n);for(r=0;r<n;r++)i[a++]=e[r];this.bufferLength=a}else this.eof=!0},e}();t.DecryptStream=f;var d=function(){function e(e,t){this.str=e,this.dict=e.dict,this.input=new Uint8Array(5),t&&(t*=.8),c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){for(var e=this.str,t=e.getByte();(0,a.isSpace)(t);)t=e.getByte();if(-1!==t&&126!==t){var r,n,i=this.bufferLength;if(122===t){for(r=this.ensureBuffer(i+4),n=0;n<4;++n)r[i+n]=0;this.bufferLength+=4}else{var o=this.input;for(o[0]=t,n=1;n<5;++n){for(t=e.getByte();(0,a.isSpace)(t);)t=e.getByte();if(o[n]=t,-1===t||126===t)break}if(r=this.ensureBuffer(i+n-1),this.bufferLength+=n-1,n<5){for(;n<5;++n)o[n]=117;this.eof=!0}var s=0;for(n=0;n<5;++n)s=85*s+(o[n]-33);for(n=3;n>=0;--n)r[i+n]=255&s,s>>=8}}else this.eof=!0},e}();t.Ascii85Stream=d;var g=function(){function e(e,t){this.str=e,this.dict=e.dict,this.firstDigit=-1,t&&(t*=.5),c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){var e=this.str.getBytes(8e3);if(e.length){for(var t=e.length+1>>1,r=this.ensureBuffer(this.bufferLength+t),a=this.bufferLength,n=this.firstDigit,i=0,o=e.length;i<o;i++){var s,c=e[i];if(c>=48&&c<=57)s=15&c;else{if(!(c>=65&&c<=70||c>=97&&c<=102)){if(62===c){this.eof=!0;break}continue}s=9+(15&c)}n<0?n=s:(r[a++]=n<<4|s,n=-1)}n>=0&&this.eof&&(r[a++]=n<<4,n=-1),this.firstDigit=n,this.bufferLength=a}else this.eof=!0},e}();t.AsciiHexStream=g;var p=function(){function e(e,t){this.str=e,this.dict=e.dict,c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){var e=this.str.getBytes(2);if(!e||e.length<2||128===e[0])this.eof=!0;else{var t,r=this.bufferLength,a=e[0];if(a<128){if((t=this.ensureBuffer(r+a+1))[r++]=e[1],a>0){var n=this.str.getBytes(a);t.set(n,r),r+=a}}else{a=257-a;var i=e[1];t=this.ensureBuffer(r+a+1);for(var o=0;o<a;o++)t[r++]=i}this.bufferLength=r}},e}();t.RunLengthStream=p;var m=function(){function e(e,t,r){this.str=e,this.dict=e.dict,this.cachedData=0,this.bitsCached=0;for(var a={earlyChange:r,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(4096),dictionaryLengths:new Uint16Array(4096),dictionaryPrevCodes:new Uint16Array(4096),currentSequence:new Uint8Array(4096),currentSequenceLength:0},n=0;n<256;++n)a.dictionaryValues[n]=n,a.dictionaryLengths[n]=1;this.lzwState=a,c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBits=function(e){for(var t=this.bitsCached,r=this.cachedData;t<e;){var a=this.str.getByte();if(-1===a)return this.eof=!0,null;r=r<<8|a,t+=8}return this.bitsCached=t-=e,this.cachedData=r,this.lastCode=null,r>>>t&(1<<e)-1},e.prototype.readBlock=function(){var e,t,r,a=1024,n=this.lzwState;if(n){var i=n.earlyChange,o=n.nextCode,s=n.dictionaryValues,c=n.dictionaryLengths,l=n.dictionaryPrevCodes,u=n.codeLength,h=n.prevCode,f=n.currentSequence,d=n.currentSequenceLength,g=0,p=this.bufferLength,m=this.ensureBuffer(this.bufferLength+a);for(e=0;e<512;e++){var v=this.readBits(u),b=d>0;if(v<256)f[0]=v,d=1;else{if(!(v>=258)){if(256===v){u=9,o=258,d=0;continue}this.eof=!0,delete this.lzwState;break}if(v<o)for(t=(d=c[v])-1,r=v;t>=0;t--)f[t]=s[r],r=l[r];else f[d++]=f[0]}if(b&&(l[o]=h,c[o]=c[h]+1,s[o]=f[0],u=++o+i&o+i-1?u:0|Math.min(Math.log(o+i)/.6931471805599453+1,12)),h=v,a<(g+=d)){do{a+=512}while(a<g);m=this.ensureBuffer(this.bufferLength+a)}for(t=0;t<d;t++)m[p++]=f[t]}n.nextCode=o,n.codeLength=u,n.prevCode=h,n.currentSequenceLength=d,this.bufferLength=p}},e}();t.LZWStream=m;var v=function(){function e(){o.call(this,new Uint8Array(0))}return e.prototype=o.prototype,e}();t.NullStream=v},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CCITTFaxStream=void 0;var a=r(155),n=r(159),i=r(157),o=function(){function e(e,t,r){this.str=e,this.dict=e.dict,(0,a.isDict)(r)||(r=a.Dict.empty);var o={next:function(){return e.getByte()}};this.ccittFaxDecoder=new n.CCITTFaxDecoder(o,{K:r.get(\"K\"),EndOfLine:r.get(\"EndOfLine\"),EncodedByteAlign:r.get(\"EncodedByteAlign\"),Columns:r.get(\"Columns\"),Rows:r.get(\"Rows\"),EndOfBlock:r.get(\"EndOfBlock\"),BlackIs1:r.get(\"BlackIs1\")}),i.DecodeStream.call(this,t)}return e.prototype=Object.create(i.DecodeStream.prototype),e.prototype.readBlock=function(){for(;!this.eof;){var e=this.ccittFaxDecoder.readNextChar();if(-1===e)return void(this.eof=!0);this.ensureBuffer(this.bufferLength+1),this.buffer[this.bufferLength++]=e}},e}();t.CCITTFaxStream=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CCITTFaxDecoder=void 0;var a=r(6),n=function(){var e=[[-1,-1],[-1,-1],[7,8],[7,7],[6,6],[6,6],[6,5],[6,5],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2]],t=[[-1,-1],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]],r=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]],n=[[-1,-1],[-1,-1],[12,-2],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]],i=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]],o=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];function s(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||\"function\"!==typeof e.next)throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');this.source=e,this.eof=!1,this.encoding=t.K||0,this.eoline=t.EndOfLine||!1,this.byteAlign=t.EncodedByteAlign||!1,this.columns=t.Columns||1728,this.rows=t.Rows||0;var r,a=t.EndOfBlock;for(null!==a&&void 0!==a||(a=!0),this.eoblock=a,this.black=t.BlackIs1||!1,this.codingLine=new Uint32Array(this.columns+1),this.refLine=new Uint32Array(this.columns+2),this.codingLine[0]=this.columns,this.codingPos=0,this.row=0,this.nextLine2D=this.encoding<0,this.inputBits=0,this.inputBuf=0,this.outputBits=0,this.rowsDone=!1;0===(r=this._lookBits(12));)this._eatBits(1);1===r&&this._eatBits(12),this.encoding>0&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1))}return s.prototype={readNextChar:function(){if(this.eof)return-1;var e,t,r,n,i,o=this.refLine,s=this.codingLine,c=this.columns;if(0===this.outputBits){if(this.rowsDone&&(this.eof=!0),this.eof)return-1;var l,u,h;if(this.err=!1,this.nextLine2D){for(n=0;s[n]<c;++n)o[n]=s[n];for(o[n++]=c,o[n]=c,s[0]=0,this.codingPos=0,e=0,t=0;s[this.codingPos]<c;)switch(l=this._getTwoDimCode()){case 0:this._addPixels(o[e+1],t),o[e+1]<c&&(e+=2);break;case 1:if(l=u=0,t){do{l+=h=this._getBlackCode()}while(h>=64);do{u+=h=this._getWhiteCode()}while(h>=64)}else{do{l+=h=this._getWhiteCode()}while(h>=64);do{u+=h=this._getBlackCode()}while(h>=64)}for(this._addPixels(s[this.codingPos]+l,t),s[this.codingPos]<c&&this._addPixels(s[this.codingPos]+u,1^t);o[e]<=s[this.codingPos]&&o[e]<c;)e+=2;break;case 7:if(this._addPixels(o[e]+3,t),t^=1,s[this.codingPos]<c)for(++e;o[e]<=s[this.codingPos]&&o[e]<c;)e+=2;break;case 5:if(this._addPixels(o[e]+2,t),t^=1,s[this.codingPos]<c)for(++e;o[e]<=s[this.codingPos]&&o[e]<c;)e+=2;break;case 3:if(this._addPixels(o[e]+1,t),t^=1,s[this.codingPos]<c)for(++e;o[e]<=s[this.codingPos]&&o[e]<c;)e+=2;break;case 2:if(this._addPixels(o[e],t),t^=1,s[this.codingPos]<c)for(++e;o[e]<=s[this.codingPos]&&o[e]<c;)e+=2;break;case 8:if(this._addPixelsNeg(o[e]-3,t),t^=1,s[this.codingPos]<c)for(e>0?--e:++e;o[e]<=s[this.codingPos]&&o[e]<c;)e+=2;break;case 6:if(this._addPixelsNeg(o[e]-2,t),t^=1,s[this.codingPos]<c)for(e>0?--e:++e;o[e]<=s[this.codingPos]&&o[e]<c;)e+=2;break;case 4:if(this._addPixelsNeg(o[e]-1,t),t^=1,s[this.codingPos]<c)for(e>0?--e:++e;o[e]<=s[this.codingPos]&&o[e]<c;)e+=2;break;case-1:this._addPixels(c,0),this.eof=!0;break;default:(0,a.info)(\"bad 2d code\"),this._addPixels(c,0),this.err=!0}}else for(s[0]=0,this.codingPos=0,t=0;s[this.codingPos]<c;){if(l=0,t)do{l+=h=this._getBlackCode()}while(h>=64);else do{l+=h=this._getWhiteCode()}while(h>=64);this._addPixels(s[this.codingPos]+l,t),t^=1}var f=!1;if(this.byteAlign&&(this.inputBits&=-8),this.eoblock||this.row!==this.rows-1){if(l=this._lookBits(12),this.eoline)for(;-1!==l&&1!==l;)this._eatBits(1),l=this._lookBits(12);else for(;0===l;)this._eatBits(1),l=this._lookBits(12);1===l?(this._eatBits(12),f=!0):-1===l&&(this.eof=!0)}else this.rowsDone=!0;if(!this.eof&&this.encoding>0&&!this.rowsDone&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1)),this.eoblock&&f&&this.byteAlign){if(1===(l=this._lookBits(12))){if(this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1)),this.encoding>=0)for(n=0;n<4;++n)1!==(l=this._lookBits(12))&&(0,a.info)(\"bad rtc code: \"+l),this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1));this.eof=!0}}else if(this.err&&this.eoline){for(;;){if(-1===(l=this._lookBits(13)))return this.eof=!0,-1;if(l>>1===1)break;this._eatBits(1)}this._eatBits(12),this.encoding>0&&(this._eatBits(1),this.nextLine2D=!(1&l))}s[0]>0?this.outputBits=s[this.codingPos=0]:this.outputBits=s[this.codingPos=1],this.row++}if(this.outputBits>=8)i=1&this.codingPos?0:255,this.outputBits-=8,0===this.outputBits&&s[this.codingPos]<c&&(this.codingPos++,this.outputBits=s[this.codingPos]-s[this.codingPos-1]);else{r=8,i=0;do{this.outputBits>r?(i<<=r,1&this.codingPos||(i|=255>>8-r),this.outputBits-=r,r=0):(i<<=this.outputBits,1&this.codingPos||(i|=255>>8-this.outputBits),r-=this.outputBits,this.outputBits=0,s[this.codingPos]<c?(this.codingPos++,this.outputBits=s[this.codingPos]-s[this.codingPos-1]):r>0&&(i<<=r,r=0))}while(r)}return this.black&&(i^=255),i},_addPixels:function(e,t){var r=this.codingLine,n=this.codingPos;e>r[n]&&(e>this.columns&&((0,a.info)(\"row is wrong length\"),this.err=!0,e=this.columns),1&n^t&&++n,r[n]=e),this.codingPos=n},_addPixelsNeg:function(e,t){var r=this.codingLine,n=this.codingPos;if(e>r[n])e>this.columns&&((0,a.info)(\"row is wrong length\"),this.err=!0,e=this.columns),1&n^t&&++n,r[n]=e;else if(e<r[n]){for(e<0&&((0,a.info)(\"invalid code\"),this.err=!0,e=0);n>0&&e<r[n-1];)--n;r[n]=e}this.codingPos=n},_findTableCode:function(e,t,r,a){for(var n=a||0,i=e;i<=t;++i){var o=this._lookBits(i);if(-1===o)return[!0,1,!1];if(i<t&&(o<<=t-i),!n||o>=n){var s=r[o-n];if(s[0]===i)return this._eatBits(i),[!0,s[1],!0]}}return[!1,0,!1]},_getTwoDimCode:function(){var t,r=0;if(this.eoblock){if(r=this._lookBits(7),(t=e[r])&&t[0]>0)return this._eatBits(t[0]),t[1]}else{var n=this._findTableCode(1,7,e);if(n[0]&&n[2])return n[1]}return(0,a.info)(\"Bad two dim code\"),-1},_getWhiteCode:function(){var e,n=0;if(this.eoblock){if(-1===(n=this._lookBits(12)))return 1;if((e=n>>5===0?t[n]:r[n>>3])[0]>0)return this._eatBits(e[0]),e[1]}else{var i=this._findTableCode(1,9,r);if(i[0])return i[1];if((i=this._findTableCode(11,12,t))[0])return i[1]}return(0,a.info)(\"bad white code\"),this._eatBits(1),1},_getBlackCode:function(){var e,t;if(this.eoblock){if(-1===(e=this._lookBits(13)))return 1;if((t=e>>7===0?n[e]:e>>9===0&&e>>7!==0?i[(e>>1)-64]:o[e>>7])[0]>0)return this._eatBits(t[0]),t[1]}else{var r=this._findTableCode(2,6,o);if(r[0])return r[1];if((r=this._findTableCode(7,12,i,64))[0])return r[1];if((r=this._findTableCode(10,13,n))[0])return r[1]}return(0,a.info)(\"bad black code\"),this._eatBits(1),1},_lookBits:function(e){for(var t;this.inputBits<e;){if(-1===(t=this.source.next()))return 0===this.inputBits?-1:this.inputBuf<<e-this.inputBits&65535>>16-e;this.inputBuf=this.inputBuf<<8|t,this.inputBits+=8}return this.inputBuf>>this.inputBits-e&65535>>16-e},_eatBits:function(e){(this.inputBits-=e)<0&&(this.inputBits=0)}},s}();t.CCITTFaxDecoder=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Jbig2Stream=void 0;var a=r(155),n=r(157),i=r(161),o=r(6),s=function(){function e(e,t,r,a){this.stream=e,this.maybeLength=t,this.dict=r,this.params=a,n.DecodeStream.call(this,t)}return e.prototype=Object.create(n.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,o.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new i.Jbig2Image,t=[];if((0,a.isDict)(this.params)){var r=this.params.get(\"JBIG2Globals\");if((0,a.isStream)(r)){var n=r.getBytes();t.push({data:n,start:0,end:n.length})}}t.push({data:this.bytes,start:0,end:this.bytes.length});for(var o=e.parseChunks(t),s=o.length,c=0;c<s;c++)o[c]^=255;this.buffer=o,this.bufferLength=s,this.eof=!0}},e}();t.Jbig2Stream=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Jbig2Image=void 0;var a=r(6),n=r(162),i=r(159),o=function(){function e(e){this.message=\"JBIG2 error: \"+e}return e.prototype=new Error,e.prototype.name=\"Jbig2Error\",e.constructor=e,e}(),s=function(){function e(){}function t(e,t,r){this.data=e,this.start=t,this.end=r}function r(e,t,r){var a=e.getContexts(t),n=1;function i(e){for(var t=0,i=0;i<e;i++){var o=r.readBit(a,n);n=n<256?n<<1|o:511&(n<<1|o)|256,t=t<<1|o}return t>>>0}var o=i(1),s=i(1)?i(1)?i(1)?i(1)?i(1)?i(32)+4436:i(12)+340:i(8)+84:i(6)+20:i(4)+4:i(2);return 0===o?s:s>0?-s:null}function s(e,t,r){for(var a=e.getContexts(\"IAID\"),n=1,i=0;i<r;i++){n=n<<1|t.readBit(a,n)}return r<31?n&(1<<r)-1:2147483647&n}e.prototype={getContexts:function(e){return e in this?this[e]:this[e]=new Int8Array(65536)}},t.prototype={get decoder(){var e=new n.ArithmeticDecoder(this.data,this.start,this.end);return(0,a.shadow)(this,\"decoder\",e)},get contextCache(){var t=new e;return(0,a.shadow)(this,\"contextCache\",t)}};var c=[\"SymbolDictionary\",null,null,null,\"IntermediateTextRegion\",null,\"ImmediateTextRegion\",\"ImmediateLosslessTextRegion\",null,null,null,null,null,null,null,null,\"PatternDictionary\",null,null,null,\"IntermediateHalftoneRegion\",null,\"ImmediateHalftoneRegion\",\"ImmediateLosslessHalftoneRegion\",null,null,null,null,null,null,null,null,null,null,null,null,\"IntermediateGenericRegion\",null,\"ImmediateGenericRegion\",\"ImmediateLosslessGenericRegion\",\"IntermediateGenericRefinementRegion\",null,\"ImmediateGenericRefinementRegion\",\"ImmediateLosslessGenericRefinementRegion\",null,null,null,null,\"PageInformation\",\"EndOfPage\",\"EndOfStripe\",\"EndOfFile\",\"Profiles\",\"Tables\",null,null,null,null,null,null,null,null,\"Extension\"],l=[[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:2,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-2,y:0},{x:-1,y:0}],[{x:-3,y:-1},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}]],u=[{coding:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]},{coding:[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:0,y:1},{x:1,y:1}]}],h=[39717,1941,229,405],f=[32,8];function d(e,t,r,a,n,i,o,s){if(e)return O(new I(s.data,s.start,s.end),t,r,!1);if(0===a&&!i&&!n&&4===o.length&&3===o[0].x&&-1===o[0].y&&-3===o[1].x&&-1===o[1].y&&2===o[2].x&&-2===o[2].y&&-2===o[3].x&&-2===o[3].y)return function(e,t,r){var a,n,i,o,s,c,l,u=r.decoder,h=r.contextCache.getContexts(\"GB\"),f=[];for(n=0;n<t;n++)for(s=f[n]=new Uint8Array(e),c=n<1?s:f[n-1],a=(l=n<2?s:f[n-2])[0]<<13|l[1]<<12|l[2]<<11|c[0]<<7|c[1]<<6|c[2]<<5|c[3]<<4,i=0;i<e;i++)s[i]=o=u.readBit(h,a),a=(31735&a)<<1|(i+3<e?l[i+3]<<11:0)|(i+4<e?c[i+4]<<4:0)|o;return f}(t,r,s);var c=!!i,u=l[a].concat(o);u.sort(function(e,t){return e.y-t.y||e.x-t.x});var f,d,g=u.length,p=new Int8Array(g),m=new Int8Array(g),v=[],b=0,y=0,w=0,k=0;for(d=0;d<g;d++)p[d]=u[d].x,m[d]=u[d].y,y=Math.min(y,u[d].x),w=Math.max(w,u[d].x),k=Math.min(k,u[d].y),d<g-1&&u[d].y===u[d+1].y&&u[d].x===u[d+1].x-1?b|=1<<g-1-d:v.push(d);var S=v.length,C=new Int8Array(S),x=new Int8Array(S),A=new Uint16Array(S);for(f=0;f<S;f++)d=v[f],C[f]=u[d].x,x[f]=u[d].y,A[f]=1<<g-1-d;for(var _,P,E,T,F,R=-y,B=-k,M=t-w,D=h[a],L=new Uint8Array(t),N=[],U=s.decoder,q=s.contextCache.getContexts(\"GB\"),j=0,z=0,H=0;H<r;H++){if(n)if(j^=U.readBit(q,D)){N.push(L);continue}for(L=new Uint8Array(L),N.push(L),_=0;_<t;_++)if(c&&i[H][_])L[_]=0;else{if(_>=R&&_<M&&H>=B)for(z=z<<1&b,d=0;d<S;d++)P=H+x[d],E=_+C[d],(T=N[P][E])&&(z|=T=A[d]);else for(z=0,F=g-1,d=0;d<g;d++,F--)(E=_+p[d])>=0&&E<t&&(P=H+m[d])>=0&&(T=N[P][E])&&(z|=T<<F);var W=U.readBit(q,z);L[_]=W}}return N}function g(e,t,r,a,n,i,s,c,l){var h=u[r].coding;0===r&&(h=h.concat([c[0]]));var d,g=h.length,p=new Int32Array(g),m=new Int32Array(g);for(d=0;d<g;d++)p[d]=h[d].x,m[d]=h[d].y;var v=u[r].reference;0===r&&(v=v.concat([c[1]]));var b=v.length,y=new Int32Array(b),w=new Int32Array(b);for(d=0;d<b;d++)y[d]=v[d].x,w[d]=v[d].y;for(var k=a[0].length,S=a.length,C=f[r],x=[],A=l.decoder,_=l.contextCache.getContexts(\"GR\"),P=0,I=0;I<t;I++){if(s)if(P^=A.readBit(_,C))throw new o(\"prediction is not supported\");var E=new Uint8Array(e);x.push(E);for(var T=0;T<e;T++){var O,F,R=0;for(d=0;d<g;d++)O=I+m[d],F=T+p[d],O<0||F<0||F>=e?R<<=1:R=R<<1|x[O][F];for(d=0;d<b;d++)O=I+w[d]-i,F=T+y[d]-n,O<0||O>=S||F<0||F>=k?R<<=1:R=R<<1|a[O][F];var B=A.readBit(_,R);E[T]=B}}return x}function p(e,t,a,n,i,c,l,u,h,f,d,p,m,v,b,y,w,k,S){if(e&&t)throw new o(\"refinement with Huffman is not supported\");var C,x,A=[];for(C=0;C<n;C++){if(x=new Uint8Array(a),i)for(var _=0;_<a;_++)x[_]=i;A.push(x)}var P=w.decoder,I=w.contextCache,E=e?-v.tableDeltaT.decode(S):-r(I,\"IADT\",P),T=0;for(C=0;C<c;){E+=e?v.tableDeltaT.decode(S):r(I,\"IADT\",P);for(var O=T+=e?v.tableFirstS.decode(S):r(I,\"IAFS\",P);;){var F=0;l>1&&(F=e?S.readBits(k):r(I,\"IAIT\",P));var R=l*E+F,B=e?v.symbolIDTable.decode(S):s(I,P,h),M=t&&(e?S.readBit():r(I,\"IARI\",P)),D=u[B],L=D[0].length,N=D.length;if(M){var U=r(I,\"IARDW\",P),q=r(I,\"IARDH\",P);D=g(L+=U,N+=q,b,D,(U>>1)+r(I,\"IARDX\",P),(q>>1)+r(I,\"IARDY\",P),!1,y,w)}var j,z,H,W=R-(1&p?0:N-1),G=O-(2&p?L-1:0);if(f){for(j=0;j<N;j++)if(x=A[G+j]){H=D[j];var X=Math.min(a-W,L);switch(m){case 0:for(z=0;z<X;z++)x[W+z]|=H[z];break;case 2:for(z=0;z<X;z++)x[W+z]^=H[z];break;default:throw new o(\"operator \".concat(m,\" is not supported\"))}}O+=N-1}else{for(z=0;z<N;z++)if(x=A[W+z])switch(H=D[z],m){case 0:for(j=0;j<L;j++)x[G+j]|=H[j];break;case 2:for(j=0;j<L;j++)x[G+j]^=H[j];break;default:throw new o(\"operator \".concat(m,\" is not supported\"))}O+=L-1}C++;var V=e?v.tableDeltaS.decode(S):r(I,\"IADS\",P);if(null===V)break;O+=V+d}}return A}function m(e,t){var r={};r.number=(0,a.readUint32)(e,t);var n=e[t+4],i=63&n;if(!c[i])throw new o(\"invalid segment type: \"+i);r.type=i,r.typeName=c[i],r.deferredNonRetain=!!(128&n);var s=!!(64&n),l=e[t+5],u=l>>5&7,h=[31&l],f=t+6;if(7===l){u=536870911&(0,a.readUint32)(e,f-1),f+=3;var d=u+7>>3;for(h[0]=e[f++];--d>0;)h.push(e[f++])}else if(5===l||6===l)throw new o(\"invalid referred-to flags\");r.retainBits=h;var g,p,m=r.number<=256?1:r.number<=65536?2:4,v=[];for(g=0;g<u;g++){var w=1===m?e[f]:2===m?(0,a.readUint16)(e,f):(0,a.readUint32)(e,f);v.push(w),f+=m}if(r.referredTo=v,s?(r.pageAssociation=(0,a.readUint32)(e,f),f+=4):r.pageAssociation=e[f++],r.length=(0,a.readUint32)(e,f),f+=4,4294967295===r.length){if(38!==i)throw new o(\"invalid unknown segment length\");var k=b(e,f),S=!!(1&e[f+y]),C=new Uint8Array(6);for(S||(C[0]=255,C[1]=172),C[2]=k.height>>>24&255,C[3]=k.height>>16&255,C[4]=k.height>>8&255,C[5]=255&k.height,g=f,p=e.length;g<p;g++){for(var x=0;x<6&&C[x]===e[g+x];)x++;if(6===x){r.length=g+6;break}}if(4294967295===r.length)throw new o(\"segment end was not found\")}return r.headerEnd=f,r}function v(e,t,r,a){for(var n=[],i=r;i<a;){var o=m(t,i);i=o.headerEnd;var s={header:o,data:t};if(e.randomAccess||(s.start=i,i+=o.length,s.end=i),n.push(s),51===o.type)break}if(e.randomAccess)for(var c=0,l=n.length;c<l;c++)n[c].start=i,i+=n[c].header.length,n[c].end=i;return n}function b(e,t){return{width:(0,a.readUint32)(e,t),height:(0,a.readUint32)(e,t+4),x:(0,a.readUint32)(e,t+8),y:(0,a.readUint32)(e,t+12),combinationOperator:7&e[t+16]}}var y=17;function w(e,t){var r,n,i,s,c=e.header,l=e.data,u=e.start,h=e.end;switch(c.type){case 0:var f={},d=(0,a.readUint16)(l,u);if(f.huffman=!!(1&d),f.refinement=!!(2&d),f.huffmanDHSelector=d>>2&3,f.huffmanDWSelector=d>>4&3,f.bitmapSizeSelector=d>>6&1,f.aggregationInstancesSelector=d>>7&1,f.bitmapCodingContextUsed=!!(256&d),f.bitmapCodingContextRetained=!!(512&d),f.template=d>>10&3,f.refinementTemplate=d>>12&1,u+=2,!f.huffman){for(s=0===f.template?4:1,n=[],i=0;i<s;i++)n.push({x:(0,a.readInt8)(l,u),y:(0,a.readInt8)(l,u+1)}),u+=2;f.at=n}if(f.refinement&&!f.refinementTemplate){for(n=[],i=0;i<2;i++)n.push({x:(0,a.readInt8)(l,u),y:(0,a.readInt8)(l,u+1)}),u+=2;f.refinementAt=n}f.numberOfExportedSymbols=(0,a.readUint32)(l,u),u+=4,f.numberOfNewSymbols=(0,a.readUint32)(l,u),u+=4,r=[f,c.number,c.referredTo,l,u,h];break;case 6:case 7:var g={};g.info=b(l,u),u+=y;var p=(0,a.readUint16)(l,u);if(u+=2,g.huffman=!!(1&p),g.refinement=!!(2&p),g.logStripSize=p>>2&3,g.stripSize=1<<g.logStripSize,g.referenceCorner=p>>4&3,g.transposed=!!(64&p),g.combinationOperator=p>>7&3,g.defaultPixelValue=p>>9&1,g.dsOffset=p<<17>>27,g.refinementTemplate=p>>15&1,g.huffman){var m=(0,a.readUint16)(l,u);u+=2,g.huffmanFS=3&m,g.huffmanDS=m>>2&3,g.huffmanDT=m>>4&3,g.huffmanRefinementDW=m>>6&3,g.huffmanRefinementDH=m>>8&3,g.huffmanRefinementDX=m>>10&3,g.huffmanRefinementDY=m>>12&3,g.huffmanRefinementSizeSelector=!!(16384&m)}if(g.refinement&&!g.refinementTemplate){for(n=[],i=0;i<2;i++)n.push({x:(0,a.readInt8)(l,u),y:(0,a.readInt8)(l,u+1)}),u+=2;g.refinementAt=n}g.numberOfSymbolInstances=(0,a.readUint32)(l,u),u+=4,r=[g,c.referredTo,l,u,h];break;case 16:var v={},w=l[u++];v.mmr=!!(1&w),v.template=w>>1&3,v.patternWidth=l[u++],v.patternHeight=l[u++],v.maxPatternIndex=(0,a.readUint32)(l,u),u+=4,r=[v,c.number,l,u,h];break;case 22:case 23:var k={};k.info=b(l,u),u+=y;var S=l[u++];k.mmr=!!(1&S),k.template=S>>1&3,k.enableSkip=!!(8&S),k.combinationOperator=S>>4&7,k.defaultPixelValue=S>>7&1,k.gridWidth=(0,a.readUint32)(l,u),u+=4,k.gridHeight=(0,a.readUint32)(l,u),u+=4,k.gridOffsetX=4294967295&(0,a.readUint32)(l,u),u+=4,k.gridOffsetY=4294967295&(0,a.readUint32)(l,u),u+=4,k.gridVectorX=(0,a.readUint16)(l,u),u+=2,k.gridVectorY=(0,a.readUint16)(l,u),u+=2,r=[k,c.referredTo,l,u,h];break;case 38:case 39:var C={};C.info=b(l,u),u+=y;var x=l[u++];if(C.mmr=!!(1&x),C.template=x>>1&3,C.prediction=!!(8&x),!C.mmr){for(s=0===C.template?4:1,n=[],i=0;i<s;i++)n.push({x:(0,a.readInt8)(l,u),y:(0,a.readInt8)(l,u+1)}),u+=2;C.at=n}r=[C,l,u,h];break;case 48:var A={width:(0,a.readUint32)(l,u),height:(0,a.readUint32)(l,u+4),resolutionX:(0,a.readUint32)(l,u+8),resolutionY:(0,a.readUint32)(l,u+12)};4294967295===A.height&&delete A.height;var _=l[u+16];(0,a.readUint16)(l,u+17),A.lossless=!!(1&_),A.refinement=!!(2&_),A.defaultPixelValue=_>>2&1,A.combinationOperator=_>>3&3,A.requiresBuffer=!!(32&_),A.combinationOperatorOverride=!!(64&_),r=[A];break;case 49:case 50:case 51:break;case 53:r=[c.number,l,u,h];break;case 62:break;default:throw new o(\"segment type \".concat(c.typeName,\"(\").concat(c.type,\")\")+\" is not implemented\")}var P=\"on\"+c.typeName;P in t&&t[P].apply(t,r)}function k(e,t){for(var r=0,a=e.length;r<a;r++)w(e[r],t)}function S(){}function C(e){2===e.length?(this.isOOB=!0,this.rangeLow=0,this.prefixLength=e[0],this.rangeLength=0,this.prefixCode=e[1],this.isLowerRange=!1):(this.isOOB=!1,this.rangeLow=e[0],this.prefixLength=e[1],this.rangeLength=e[2],this.prefixCode=e[3],this.isLowerRange=\"lower\"===e[4])}function x(e){this.children=[],e?(this.isLeaf=!0,this.rangeLength=e.rangeLength,this.rangeLow=e.rangeLow,this.isLowerRange=e.isLowerRange,this.isOOB=e.isOOB):this.isLeaf=!1}function A(e,t){t||this.assignPrefixCodes(e),this.rootNode=new x(null);var r,a,n=e.length;for(r=0;r<n;r++)(a=e[r]).prefixLength>0&&this.rootNode.buildTree(a,a.prefixLength-1)}S.prototype={onPageInformation:function(e){this.currentPageInfo=e;var t=e.width+7>>3,r=new Uint8ClampedArray(t*e.height);if(e.defaultPixelValue)for(var a=0,n=r.length;a<n;a++)r[a]=255;this.buffer=r},drawBitmap:function(e,t){var r,a,n,i,s=this.currentPageInfo,c=e.width,l=e.height,u=s.width+7>>3,h=s.combinationOperatorOverride?e.combinationOperator:s.combinationOperator,f=this.buffer,d=128>>(7&e.x),g=e.y*u+(e.x>>3);switch(h){case 0:for(r=0;r<l;r++){for(n=d,i=g,a=0;a<c;a++)t[r][a]&&(f[i]|=n),(n>>=1)||(n=128,i++);g+=u}break;case 2:for(r=0;r<l;r++){for(n=d,i=g,a=0;a<c;a++)t[r][a]&&(f[i]^=n),(n>>=1)||(n=128,i++);g+=u}break;default:throw new o(\"operator \".concat(h,\" is not supported\"))}},onImmediateGenericRegion:function(e,r,a,n){var i=e.info,o=new t(r,a,n),s=d(e.mmr,i.width,i.height,e.template,e.prediction,null,e.at,o);this.drawBitmap(i,s)},onImmediateLosslessGenericRegion:function(){this.onImmediateGenericRegion.apply(this,arguments)},onSymbolDictionary:function(e,n,i,c,l,u){var h,f;e.huffman&&(h=function(e,t,r){var a,n,i,s,c=0;switch(e.huffmanDHSelector){case 0:case 1:a=P(e.huffmanDHSelector+4);break;case 3:a=E(c,t,r),c++;break;default:throw new o(\"invalid Huffman DH selector\")}switch(e.huffmanDWSelector){case 0:case 1:n=P(e.huffmanDWSelector+2);break;case 3:n=E(c,t,r),c++;break;default:throw new o(\"invalid Huffman DW selector\")}e.bitmapSizeSelector?(i=E(c,t,r),c++):i=P(1);s=e.aggregationInstancesSelector?E(c,t,r):P(1);return{tableDeltaHeight:a,tableDeltaWidth:n,tableBitmapSize:i,tableAggregateInstances:s}}(e,i,this.customTables),f=new I(c,l,u));var m=this.symbols;m||(this.symbols=m={});for(var v=[],b=0,y=i.length;b<y;b++){var w=m[i[b]];w&&(v=v.concat(w))}var k=new t(c,l,u);m[n]=function(e,t,n,i,c,l,u,h,f,m,v,b){if(e&&t)throw new o(\"symbol refinement with Huffman is not supported\");var y,w,k=[],S=0,C=(0,a.log2)(n.length+i),x=v.decoder,A=v.contextCache;for(e&&(y=P(1),w=[],C=Math.max(C,1));k.length<i;){S+=e?l.tableDeltaHeight.decode(b):r(A,\"IADH\",x);for(var _=0,I=0,E=e?w.length:0;;){var F,R=e?l.tableDeltaWidth.decode(b):r(A,\"IADW\",x);if(null===R)break;if(I+=_+=R,t){var B=r(A,\"IAAI\",x);if(B>1)F=p(e,t,_,S,0,B,1,n.concat(k),C,0,0,1,0,l,f,m,v,0,b);else{var M=s(A,x,C),D=r(A,\"IARDX\",x),L=r(A,\"IARDY\",x);F=g(_,S,f,M<n.length?n[M]:k[M-n.length],D,L,!1,m,v)}k.push(F)}else e?w.push(_):(F=d(!1,_,S,u,!1,null,h,v),k.push(F))}if(e&&!t){var N=l.tableBitmapSize.decode(b);b.byteAlign();var U=void 0;if(0===N)U=T(b,I,S);else{var q=b.end,j=b.position+N;b.end=j,U=O(b,I,S,!1),b.end=q,b.position=j}var z=w.length;if(E===z-1)k.push(U);else{var H=void 0,W=void 0,G=0,X=void 0,V=void 0;for(H=E;H<z;H++){for(X=G+w[H],V=[],W=0;W<S;W++)V.push(U[W].subarray(G,X));k.push(V),G=X}}}}for(var Y=[],K=[],J=!1,Z=n.length+i;K.length<Z;){for(var Q=e?y.decode(b):r(A,\"IAEX\",x);Q--;)K.push(J);J=!J}for(var $=0,ee=n.length;$<ee;$++)K[$]&&Y.push(n[$]);for(var te=0;te<i;$++,te++)K[$]&&Y.push(k[te]);return Y}(e.huffman,e.refinement,v,e.numberOfNewSymbols,e.numberOfExportedSymbols,h,e.template,e.at,e.refinementTemplate,e.refinementAt,k,f)},onImmediateTextRegion:function(e,r,n,i,s){for(var c,l,u=e.info,h=this.symbols,f=[],d=0,g=r.length;d<g;d++){var m=h[r[d]];m&&(f=f.concat(m))}var v=(0,a.log2)(f.length);e.huffman&&(l=new I(n,i,s),c=function(e,t,r,a,n){var i,s,c=[];for(i=0;i<=34;i++)s=n.readBits(4),c.push(new C([i,s,0,0]));var l=new A(c,!1);for(c.length=0,i=0;i<a;)if((s=l.decode(n))>=32){var u=void 0,h=void 0,f=void 0;switch(s){case 32:if(0===i)throw new o(\"no previous value in symbol ID table\");h=n.readBits(2)+3,u=c[i-1].prefixLength;break;case 33:h=n.readBits(3)+3,u=0;break;case 34:h=n.readBits(7)+11,u=0;break;default:throw new o(\"invalid code length in symbol ID table\")}for(f=0;f<h;f++)c.push(new C([i,u,0,0])),i++}else c.push(new C([i,s,0,0])),i++;n.byteAlign();var d,g,p,m=new A(c,!1),v=0;switch(e.huffmanFS){case 0:case 1:d=P(e.huffmanFS+6);break;case 3:d=E(v,t,r),v++;break;default:throw new o(\"invalid Huffman FS selector\")}switch(e.huffmanDS){case 0:case 1:case 2:g=P(e.huffmanDS+8);break;case 3:g=E(v,t,r),v++;break;default:throw new o(\"invalid Huffman DS selector\")}switch(e.huffmanDT){case 0:case 1:case 2:p=P(e.huffmanDT+11);break;case 3:p=E(v,t,r),v++;break;default:throw new o(\"invalid Huffman DT selector\")}if(e.refinement)throw new o(\"refinement with Huffman is not supported\");return{symbolIDTable:m,tableFirstS:d,tableDeltaS:g,tableDeltaT:p}}(e,r,this.customTables,f.length,l));var b=new t(n,i,s),y=p(e.huffman,e.refinement,u.width,u.height,e.defaultPixelValue,e.numberOfSymbolInstances,e.stripSize,f,v,e.transposed,e.dsOffset,e.referenceCorner,e.combinationOperator,c,e.refinementTemplate,e.refinementAt,b,e.logStripSize,l);this.drawBitmap(u,y)},onImmediateLosslessTextRegion:function(){this.onImmediateTextRegion.apply(this,arguments)},onPatternDictionary:function(e,r,a,n,i){var o=this.patterns;o||(this.patterns=o={});var s=new t(a,n,i);o[r]=function(e,t,r,a,n,i){var o=[];e||(o.push({x:-t,y:0}),0===n&&(o.push({x:-3,y:-1}),o.push({x:2,y:-2}),o.push({x:-2,y:-2})));for(var s,c,l,u,h=d(e,(a+1)*t,r,n,!1,null,o,i),f=[],g=0;g<=a;){for(s=[],l=(c=t*g)+t,u=0;u<r;u++)s.push(h[u].subarray(c,l));f.push(s),g++}return f}(e.mmr,e.patternWidth,e.patternHeight,e.maxPatternIndex,e.template,s)},onImmediateHalftoneRegion:function(e,r,n,i,s){var c=this.patterns[r[0]],l=e.info,u=new t(n,i,s),h=function(e,t,r,n,i,s,c,l,u,h,f,g,p,m,v){if(c)throw new o(\"skip is not supported\");if(0!==l)throw new o(\"operator \"+l+\" is not supported in halftone region\");var b,y,w,k=[];for(b=0;b<i;b++){if(w=new Uint8Array(n),s)for(y=0;y<n;y++)w[y]=s;k.push(w)}var S=t.length,C=t[0],x=C[0].length,A=C.length,_=(0,a.log2)(S),P=[];e||(P.push({x:r<=1?3:2,y:-1}),0===r&&(P.push({x:-3,y:-1}),P.push({x:2,y:-2}),P.push({x:-2,y:-2})));var E,T,F,R,B,M,D,L,N,U,q,j=[];for(e&&(E=new I(v.data,v.start,v.end)),b=_-1;b>=0;b--)T=e?O(E,u,h,!0):d(!1,u,h,r,!1,null,P,v),j[b]=T;for(F=0;F<h;F++)for(R=0;R<u;R++){for(B=0,M=0,y=_-1;y>=0;y--)M|=(B=j[y][F][R]^B)<<y;if(D=t[M],N=g+F*p-R*m>>8,(L=f+F*m+R*p>>8)>=0&&L+x<=n&&N>=0&&N+A<=i)for(b=0;b<A;b++)for(q=k[N+b],U=D[b],y=0;y<x;y++)q[L+y]|=U[y];else{var z=void 0,H=void 0;for(b=0;b<A;b++)if(!((H=N+b)<0||H>=i))for(q=k[H],U=D[b],y=0;y<x;y++)(z=L+y)>=0&&z<n&&(q[z]|=U[y])}}return k}(e.mmr,c,e.template,l.width,l.height,e.defaultPixelValue,e.enableSkip,e.combinationOperator,e.gridWidth,e.gridHeight,e.gridOffsetX,e.gridOffsetY,e.gridVectorX,e.gridVectorY,u);this.drawBitmap(l,h)},onImmediateLosslessHalftoneRegion:function(){this.onImmediateHalftoneRegion.apply(this,arguments)},onTables:function(e,t,r,n){var i=this.customTables;i||(this.customTables=i={}),i[e]=function(e,t,r){var n,i,o=e[t],s=4294967295&(0,a.readUint32)(e,t+1),c=4294967295&(0,a.readUint32)(e,t+5),l=new I(e,t+9,r),u=1+(o>>1&7),h=1+(o>>4&7),f=[],d=s;do{n=l.readBits(u),i=l.readBits(h),f.push(new C([d,n,i,0])),d+=1<<i}while(d<c);n=l.readBits(u),f.push(new C([s-1,n,32,0,\"lower\"])),n=l.readBits(u),f.push(new C([c,n,32,0])),1&o&&(n=l.readBits(u),f.push(new C([n,0])));return new A(f,!1)}(t,r,n)}},x.prototype={buildTree:function(e,t){var r=e.prefixCode>>t&1;if(t<=0)this.children[r]=new x(e);else{var a=this.children[r];a||(this.children[r]=a=new x(null)),a.buildTree(e,t-1)}},decodeNode:function(e){if(this.isLeaf){if(this.isOOB)return null;var t=e.readBits(this.rangeLength);return this.rangeLow+(this.isLowerRange?-t:t)}var r=this.children[e.readBit()];if(!r)throw new o(\"invalid Huffman data\");return r.decodeNode(e)}},A.prototype={decode:function(e){return this.rootNode.decodeNode(e)},assignPrefixCodes:function(e){var t,r=e.length,a=0;for(t=0;t<r;t++)a=Math.max(a,e[t].prefixLength);var n=new Uint32Array(a+1);for(t=0;t<r;t++)n[e[t].prefixLength]++;var i,o,s,c=1,l=0;for(n[0]=0;c<=a;){for(i=l=l+n[c-1]<<1,o=0;o<r;)(s=e[o]).prefixLength===c&&(s.prefixCode=i,i++),o++;c++}}};var _={};function P(e){var t,r=_[e];if(r)return r;switch(e){case 1:t=[[0,1,4,0],[16,2,8,2],[272,3,16,6],[65808,3,32,7]];break;case 2:t=[[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[75,6,32,62],[6,63]];break;case 3:t=[[-256,8,8,254],[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[-257,8,32,255,\"lower\"],[75,7,32,126],[6,62]];break;case 4:t=[[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[76,5,32,31]];break;case 5:t=[[-255,7,8,126],[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[-256,7,32,127,\"lower\"],[76,6,32,62]];break;case 6:t=[[-2048,5,10,28],[-1024,4,9,8],[-512,4,8,9],[-256,4,7,10],[-128,5,6,29],[-64,5,5,30],[-32,4,5,11],[0,2,7,0],[128,3,7,2],[256,3,8,3],[512,4,9,12],[1024,4,10,13],[-2049,6,32,62,\"lower\"],[2048,6,32,63]];break;case 7:t=[[-1024,4,9,8],[-512,3,8,0],[-256,4,7,9],[-128,5,6,26],[-64,5,5,27],[-32,4,5,10],[0,4,5,11],[32,5,5,28],[64,5,6,29],[128,4,7,12],[256,3,8,1],[512,3,9,2],[1024,3,10,3],[-1025,5,32,30,\"lower\"],[2048,5,32,31]];break;case 8:t=[[-15,8,3,252],[-7,9,1,508],[-5,8,1,253],[-3,9,0,509],[-2,7,0,124],[-1,4,0,10],[0,2,1,0],[2,5,0,26],[3,6,0,58],[4,3,4,4],[20,6,1,59],[22,4,4,11],[38,4,5,12],[70,5,6,27],[134,5,7,28],[262,6,7,60],[390,7,8,125],[646,6,10,61],[-16,9,32,510,\"lower\"],[1670,9,32,511],[2,1]];break;case 9:t=[[-31,8,4,252],[-15,9,2,508],[-11,8,2,253],[-7,9,1,509],[-5,7,1,124],[-3,4,1,10],[-1,3,1,2],[1,3,1,3],[3,5,1,26],[5,6,1,58],[7,3,5,4],[39,6,2,59],[43,4,5,11],[75,4,6,12],[139,5,7,27],[267,5,8,28],[523,6,8,60],[779,7,9,125],[1291,6,11,61],[-32,9,32,510,\"lower\"],[3339,9,32,511],[2,0]];break;case 10:t=[[-21,7,4,122],[-5,8,0,252],[-4,7,0,123],[-3,5,0,24],[-2,2,2,0],[2,5,0,25],[3,6,0,54],[4,7,0,124],[5,8,0,253],[6,2,6,1],[70,5,5,26],[102,6,5,55],[134,6,6,56],[198,6,7,57],[326,6,8,58],[582,6,9,59],[1094,6,10,60],[2118,7,11,125],[-22,8,32,254,\"lower\"],[4166,8,32,255],[2,2]];break;case 11:t=[[1,1,0,0],[2,2,1,2],[4,4,0,12],[5,4,1,13],[7,5,1,28],[9,5,2,29],[13,6,2,60],[17,7,2,122],[21,7,3,123],[29,7,4,124],[45,7,5,125],[77,7,6,126],[141,7,32,127]];break;case 12:t=[[1,1,0,0],[2,2,0,2],[3,3,1,6],[5,5,0,28],[6,5,1,29],[8,6,1,60],[10,7,0,122],[11,7,1,123],[13,7,2,124],[17,7,3,125],[25,7,4,126],[41,8,5,254],[73,8,32,255]];break;case 13:t=[[1,1,0,0],[2,3,0,4],[3,4,0,12],[4,5,0,28],[5,4,1,13],[7,3,3,5],[15,6,1,58],[17,6,2,59],[21,6,3,60],[29,6,4,61],[45,6,5,62],[77,7,6,126],[141,7,32,127]];break;case 14:t=[[-2,3,0,4],[-1,3,0,5],[0,1,0,0],[1,3,0,6],[2,3,0,7]];break;case 15:t=[[-24,7,4,124],[-8,6,2,60],[-4,5,1,28],[-2,4,0,12],[-1,3,0,4],[0,1,0,0],[1,3,0,5],[2,4,0,13],[3,5,1,29],[5,6,2,61],[9,7,4,125],[-25,7,32,126,\"lower\"],[25,7,32,127]];break;default:throw new o(\"standard table B.\".concat(e,\" does not exist\"))}var a,n=t.length;for(a=0;a<n;a++)t[a]=new C(t[a]);return r=new A(t,!0),_[e]=r,r}function I(e,t,r){this.data=e,this.start=t,this.end=r,this.position=t,this.shift=-1,this.currentByte=0}function E(e,t,r){var a,n,i=0,s=t.length;for(a=0;a<s;a++)if(n=r[t[a]]){if(e===i)return n;i++}throw new o(\"can't find custom Huffman table\")}function T(e,t,r){var a,n,i,o=[];for(n=0;n<r;n++){for(i=new Uint8Array(t),o.push(i),a=0;a<t;a++)i[a]=e.readBit();e.byteAlign()}return o}function O(e,t,r,a){var n,o,s,c,l,u={K:-1,Columns:t,Rows:r,BlackIs1:!0,EndOfBlock:a},h=new i.CCITTFaxDecoder(e,u),f=[],d=!1;for(o=0;o<r;o++)for(s=new Uint8Array(t),f.push(s),l=-1,n=0;n<t;n++)l<0&&(-1===(c=h.readNextChar())&&(c=0,d=!0),l=7),s[n]=c>>l&1,l--;if(a&&!d)for(var g=0;g<5&&-1!==h.readNextChar();g++);return f}function F(){}return I.prototype={readBit:function(){if(this.shift<0){if(this.position>=this.end)throw new o(\"end of data while reading bit\");this.currentByte=this.data[this.position++],this.shift=7}var e=this.currentByte>>this.shift&1;return this.shift--,e},readBits:function(e){var t,r=0;for(t=e-1;t>=0;t--)r|=this.readBit()<<t;return r},byteAlign:function(){this.shift=-1},next:function(){return this.position>=this.end?-1:this.data[this.position++]}},F.prototype={parseChunks:function(e){return function(e){for(var t=new S,r=0,a=e.length;r<a;r++){var n=e[r];k(v({},n.data,n.start,n.end),t)}return t.buffer}(e)},parse:function(e){var t=function(e){var t=0,r=e.length;if(151!==e[t]||74!==e[t+1]||66!==e[t+2]||50!==e[t+3]||13!==e[t+4]||10!==e[t+5]||26!==e[t+6]||10!==e[t+7])throw new o(\"parseJbig2 - invalid header.\");var n=Object.create(null);t+=8;var i=e[t++];n.randomAccess=!(1&i),2&i||(n.numberOfPages=(0,a.readUint32)(e,t),t+=4);var s=v(n,e,t,r),c=new S;k(s,c);for(var l=c.currentPageInfo,u=l.width,h=l.height,f=c.buffer,d=new Uint8ClampedArray(u*h),g=0,p=0,m=0;m<h;m++)for(var b=0,y=void 0,w=0;w<u;w++)b||(b=128,y=f[p++]),d[g++]=y&b?0:255,b>>=1;return{imgData:d,width:u,height:h}}(e),r=t.imgData,n=t.width,i=t.height;return this.width=n,this.height=i,r}},F}();t.Jbig2Image=s},function(e,t,r){\"use strict\";function a(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.ArithmeticDecoder=void 0;var n=[{qe:22017,nmps:1,nlps:1,switchFlag:1},{qe:13313,nmps:2,nlps:6,switchFlag:0},{qe:6145,nmps:3,nlps:9,switchFlag:0},{qe:2753,nmps:4,nlps:12,switchFlag:0},{qe:1313,nmps:5,nlps:29,switchFlag:0},{qe:545,nmps:38,nlps:33,switchFlag:0},{qe:22017,nmps:7,nlps:6,switchFlag:1},{qe:21505,nmps:8,nlps:14,switchFlag:0},{qe:18433,nmps:9,nlps:14,switchFlag:0},{qe:14337,nmps:10,nlps:14,switchFlag:0},{qe:12289,nmps:11,nlps:17,switchFlag:0},{qe:9217,nmps:12,nlps:18,switchFlag:0},{qe:7169,nmps:13,nlps:20,switchFlag:0},{qe:5633,nmps:29,nlps:21,switchFlag:0},{qe:22017,nmps:15,nlps:14,switchFlag:1},{qe:21505,nmps:16,nlps:14,switchFlag:0},{qe:20737,nmps:17,nlps:15,switchFlag:0},{qe:18433,nmps:18,nlps:16,switchFlag:0},{qe:14337,nmps:19,nlps:17,switchFlag:0},{qe:13313,nmps:20,nlps:18,switchFlag:0},{qe:12289,nmps:21,nlps:19,switchFlag:0},{qe:10241,nmps:22,nlps:19,switchFlag:0},{qe:9217,nmps:23,nlps:20,switchFlag:0},{qe:8705,nmps:24,nlps:21,switchFlag:0},{qe:7169,nmps:25,nlps:22,switchFlag:0},{qe:6145,nmps:26,nlps:23,switchFlag:0},{qe:5633,nmps:27,nlps:24,switchFlag:0},{qe:5121,nmps:28,nlps:25,switchFlag:0},{qe:4609,nmps:29,nlps:26,switchFlag:0},{qe:4353,nmps:30,nlps:27,switchFlag:0},{qe:2753,nmps:31,nlps:28,switchFlag:0},{qe:2497,nmps:32,nlps:29,switchFlag:0},{qe:2209,nmps:33,nlps:30,switchFlag:0},{qe:1313,nmps:34,nlps:31,switchFlag:0},{qe:1089,nmps:35,nlps:32,switchFlag:0},{qe:673,nmps:36,nlps:33,switchFlag:0},{qe:545,nmps:37,nlps:34,switchFlag:0},{qe:321,nmps:38,nlps:35,switchFlag:0},{qe:273,nmps:39,nlps:36,switchFlag:0},{qe:133,nmps:40,nlps:37,switchFlag:0},{qe:73,nmps:41,nlps:38,switchFlag:0},{qe:37,nmps:42,nlps:39,switchFlag:0},{qe:21,nmps:43,nlps:40,switchFlag:0},{qe:9,nmps:44,nlps:41,switchFlag:0},{qe:5,nmps:45,nlps:42,switchFlag:0},{qe:1,nmps:45,nlps:43,switchFlag:0},{qe:22017,nmps:46,nlps:46,switchFlag:0}],i=function(){function e(t,r,a){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.data=t,this.bp=r,this.dataEnd=a,this.chigh=t[r],this.clow=0,this.byteIn(),this.chigh=this.chigh<<7&65535|this.clow>>9&127,this.clow=this.clow<<7&65535,this.ct-=7,this.a=32768}var t,r,i;return t=e,(r=[{key:\"byteIn\",value:function(){var e=this.data,t=this.bp;255===e[t]?e[t+1]>143?(this.clow+=65280,this.ct=8):(t++,this.clow+=e[t]<<9,this.ct=7,this.bp=t):(t++,this.clow+=t<this.dataEnd?e[t]<<8:65280,this.ct=8,this.bp=t),this.clow>65535&&(this.chigh+=this.clow>>16,this.clow&=65535)}},{key:\"readBit\",value:function(e,t){var r,a=e[t]>>1,i=1&e[t],o=n[a],s=o.qe,c=this.a-s;if(this.chigh<s)c<s?(c=s,r=i,a=o.nmps):(c=s,r=1^i,1===o.switchFlag&&(i=r),a=o.nlps);else{if(this.chigh-=s,0!==(32768&c))return this.a=c,i;c<s?(r=1^i,1===o.switchFlag&&(i=r),a=o.nlps):(r=i,a=o.nmps)}do{0===this.ct&&this.byteIn(),c<<=1,this.chigh=this.chigh<<1&65535|this.clow>>15&1,this.clow=this.clow<<1&65535,this.ct--}while(0===(32768&c));return this.a=c,e[t]=a<<1|i,r}}])&&a(t.prototype,r),i&&a(t,i),e}();t.ArithmeticDecoder=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpegStream=void 0;var a=r(6),n=r(157),i=r(155),o=r(164),s=function(){function e(e,t,r,a){for(var i;-1!==(i=e.getByte());)if(255===i){e.skip(-1);break}this.stream=e,this.maybeLength=t,this.dict=r,this.params=a,n.DecodeStream.call(this,t)}return e.prototype=Object.create(n.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,a.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e={decodeTransform:void 0,colorTransform:void 0},t=this.dict.getArray(\"Decode\",\"D\");if(this.forceRGB&&Array.isArray(t)){for(var r=this.dict.get(\"BitsPerComponent\")||8,a=t.length,n=new Int32Array(a),s=!1,c=(1<<r)-1,l=0;l<a;l+=2)n[l]=256*(t[l+1]-t[l])|0,n[l+1]=t[l]*c|0,256===n[l]&&0===n[l+1]||(s=!0);s&&(e.decodeTransform=n)}if((0,i.isDict)(this.params)){var u=this.params.get(\"ColorTransform\");Number.isInteger(u)&&(e.colorTransform=u)}var h=new o.JpegImage(e);h.parse(this.bytes);var f=h.getData({width:this.drawWidth,height:this.drawHeight,forceRGB:this.forceRGB,isSourcePDF:!0});this.buffer=f,this.bufferLength=f.length,this.eof=!0}},e.prototype.getIR=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(0,a.createObjectURL)(this.bytes,\"image/jpeg\",e)},e}();t.JpegStream=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpegImage=void 0;var a=r(6);function n(e){return(n=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=function(){function e(e){this.message=\"JPEG error: \"+e}return e.prototype=new Error,e.prototype.name=\"JpegError\",e.constructor=e,e}(),o=function(){function e(e,t){this.message=e,this.scanLines=t}return e.prototype=new Error,e.prototype.name=\"DNLMarkerError\",e.constructor=e,e}(),s=function(){function e(e){this.message=e}return e.prototype=new Error,e.prototype.name=\"EOIMarkerError\",e.constructor=e,e}(),c=function(){var e=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),t=4017,r=799,c=3406,l=2276,u=1567,h=3784,f=5793,d=2896;function g(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.decodeTransform,r=void 0===t?null:t,a=e.colorTransform,n=void 0===a?-1:a;this._decodeTransform=r,this._colorTransform=n}function p(e,t){for(var r,a,n=0,i=[],o=16;o>0&&!e[o-1];)o--;i.push({children:[],index:0});var s,c=i[0];for(r=0;r<o;r++){for(a=0;a<e[r];a++){for((c=i.pop()).children[c.index]=t[n];c.index>0;)c=i.pop();for(c.index++,i.push(c);i.length<=r;)i.push(s={children:[],index:0}),c.children[c.index]=s.children,c=s;n++}r+1<o&&(i.push(s={children:[],index:0}),c.children[c.index]=s.children,c=s)}return i[0].children}function m(e,t,r){return 64*((e.blocksPerLine+1)*t+r)}function v(t,r,c,l,u,h,f,d,g){var p=arguments.length>9&&void 0!==arguments[9]&&arguments[9],v=c.mcusPerLine,b=c.progressive,y=r,k=0,S=0;function C(){if(S>0)return k>>--S&1;if(255===(k=t[r++])){var e=t[r++];if(e){if(220===e&&p){r+=2;var a=t[r++]<<8|t[r++];if(a>0&&a!==c.scanLines)throw new o(\"Found DNL marker (0xFFDC) while parsing scan data\",a)}else if(217===e)throw new s(\"Found EOI marker (0xFFD9) while parsing scan data\");throw new i(\"unexpected marker \".concat((k<<8|e).toString(16)))}}return S=7,k>>>7}function x(e){for(var t=e;;){if(\"number\"===typeof(t=t[C()]))return t;if(\"object\"!==n(t))throw new i(\"invalid huffman sequence\")}}function A(e){for(var t=0;e>0;)t=t<<1|C(),e--;return t}function _(e){if(1===e)return 1===C()?1:-1;var t=A(e);return t>=1<<e-1?t:t+(-1<<e)+1}var P=0;var I,E=0;function T(e,t,r,a,n){var i=r%v;t(e,m(e,(r/v|0)*e.v+a,i*e.h+n))}function O(e,t,r){t(e,m(e,r/e.blocksPerLine|0,r%e.blocksPerLine))}var F,R,B,M,D,L,N=l.length;L=b?0===h?0===d?function(e,t){var r=x(e.huffmanTableDC),a=0===r?0:_(r)<<g;e.blockData[t]=e.pred+=a}:function(e,t){e.blockData[t]|=C()<<g}:0===d?function(t,r){if(P>0)P--;else for(var a=h,n=f;a<=n;){var i=x(t.huffmanTableAC),o=15&i,s=i>>4;if(0!==o){var c=e[a+=s];t.blockData[r+c]=_(o)*(1<<g),a++}else{if(s<15){P=A(s)+(1<<s)-1;break}a+=16}}}:function(t,r){for(var a,n,o=h,s=f,c=0;o<=s;){var l=r+e[o],u=t.blockData[l]<0?-1:1;switch(E){case 0:if(c=(n=x(t.huffmanTableAC))>>4,0===(a=15&n))c<15?(P=A(c)+(1<<c),E=4):(c=16,E=1);else{if(1!==a)throw new i(\"invalid ACn encoding\");I=_(a),E=c?2:3}continue;case 1:case 2:t.blockData[l]?t.blockData[l]+=u*(C()<<g):0===--c&&(E=2===E?3:0);break;case 3:t.blockData[l]?t.blockData[l]+=u*(C()<<g):(t.blockData[l]=I<<g,E=0);break;case 4:t.blockData[l]&&(t.blockData[l]+=u*(C()<<g))}o++}4===E&&0===--P&&(E=0)}:function(t,r){var a=x(t.huffmanTableDC),n=0===a?0:_(a);t.blockData[r]=t.pred+=n;for(var i=1;i<64;){var o=x(t.huffmanTableAC),s=15&o,c=o>>4;if(0!==s){var l=e[i+=c];t.blockData[r+l]=_(s),i++}else{if(c<15)break;i+=16}}};var U,q,j,z,H=0;for(q=1===N?l[0].blocksPerLine*l[0].blocksPerColumn:v*c.mcusPerColumn;H<q;){var W=u?Math.min(q-H,u):q;for(R=0;R<N;R++)l[R].pred=0;if(P=0,1===N)for(F=l[0],D=0;D<W;D++)O(F,L,H),H++;else for(D=0;D<W;D++){for(R=0;R<N;R++)for(j=(F=l[R]).h,z=F.v,B=0;B<z;B++)for(M=0;M<j;M++)T(F,L,H,B,M);H++}S=0,(U=w(t,r))&&U.invalid&&((0,a.warn)(\"decodeScan - unexpected MCU data, current marker is: \"+U.invalid),r=U.offset);var G=U&&U.marker;if(!G||G<=65280)throw new i(\"marker was not found\");if(!(G>=65488&&G<=65495))break;r+=2}return(U=w(t,r))&&U.invalid&&((0,a.warn)(\"decodeScan - unexpected Scan data, current marker is: \"+U.invalid),r=U.offset),r-y}function b(e,a,n){var o,s,g,p,m,v,b,y,w,k,S,C,x,A,_,P,I,E=e.quantizationTable,T=e.blockData;if(!E)throw new i(\"missing required Quantization Table.\");for(var O=0;O<64;O+=8)w=T[a+O],k=T[a+O+1],S=T[a+O+2],C=T[a+O+3],x=T[a+O+4],A=T[a+O+5],_=T[a+O+6],P=T[a+O+7],w*=E[O],0!==(k|S|C|x|A|_|P)?(k*=E[O+1],S*=E[O+2],C*=E[O+3],x*=E[O+4],A*=E[O+5],_*=E[O+6],P*=E[O+7],s=(o=(o=f*w+128>>8)+(s=f*x+128>>8)+1>>1)-s,I=(g=S)*h+(p=_)*u+128>>8,g=g*u-p*h+128>>8,b=(m=(m=d*(k-P)+128>>8)+(b=A<<4)+1>>1)-b,v=(y=(y=d*(k+P)+128>>8)+(v=C<<4)+1>>1)-v,p=(o=o+(p=I)+1>>1)-p,g=(s=s+g+1>>1)-g,I=m*l+y*c+2048>>12,m=m*c-y*l+2048>>12,y=I,I=v*r+b*t+2048>>12,v=v*t-b*r+2048>>12,b=I,n[O]=o+y,n[O+7]=o-y,n[O+1]=s+b,n[O+6]=s-b,n[O+2]=g+v,n[O+5]=g-v,n[O+3]=p+m,n[O+4]=p-m):(I=f*w+512>>10,n[O]=I,n[O+1]=I,n[O+2]=I,n[O+3]=I,n[O+4]=I,n[O+5]=I,n[O+6]=I,n[O+7]=I);for(var F=0;F<8;++F)w=n[F],0!==((k=n[F+8])|(S=n[F+16])|(C=n[F+24])|(x=n[F+32])|(A=n[F+40])|(_=n[F+48])|(P=n[F+56]))?(s=(o=4112+((o=f*w+2048>>12)+(s=f*x+2048>>12)+1>>1))-s,I=(g=S)*h+(p=_)*u+2048>>12,g=g*u-p*h+2048>>12,p=I,b=(m=(m=d*(k-P)+2048>>12)+(b=A)+1>>1)-b,v=(y=(y=d*(k+P)+2048>>12)+(v=C)+1>>1)-v,I=m*l+y*c+2048>>12,m=m*c-y*l+2048>>12,y=I,I=v*r+b*t+2048>>12,v=v*t-b*r+2048>>12,w=(w=(o=o+p+1>>1)+y)<16?0:w>=4080?255:w>>4,k=(k=(s=s+g+1>>1)+(b=I))<16?0:k>=4080?255:k>>4,S=(S=(g=s-g)+v)<16?0:S>=4080?255:S>>4,C=(C=(p=o-p)+m)<16?0:C>=4080?255:C>>4,x=(x=p-m)<16?0:x>=4080?255:x>>4,A=(A=g-v)<16?0:A>=4080?255:A>>4,_=(_=s-b)<16?0:_>=4080?255:_>>4,P=(P=o-y)<16?0:P>=4080?255:P>>4,T[a+F]=w,T[a+F+8]=k,T[a+F+16]=S,T[a+F+24]=C,T[a+F+32]=x,T[a+F+40]=A,T[a+F+48]=_,T[a+F+56]=P):(I=(I=f*w+8192>>14)<-2040?0:I>=2024?255:I+2056>>4,T[a+F]=I,T[a+F+8]=I,T[a+F+16]=I,T[a+F+24]=I,T[a+F+32]=I,T[a+F+40]=I,T[a+F+48]=I,T[a+F+56]=I)}function y(e,t){for(var r=t.blocksPerLine,a=t.blocksPerColumn,n=new Int16Array(64),i=0;i<a;i++)for(var o=0;o<r;o++){b(t,m(t,i,o),n)}return t.blockData}function w(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t;function a(t){return e[t]<<8|e[t+1]}var n=e.length-1,i=r<t?r:t;if(t>=n)return null;var o=a(t);if(o>=65472&&o<=65534)return{invalid:null,marker:o,offset:t};for(var s=a(i);!(s>=65472&&s<=65534);){if(++i>=n)return null;s=a(i)}return{invalid:o.toString(16),marker:s,offset:i}}return g.prototype={parse:function(t){var r=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).dnlScanLines,n=void 0===r?null:r;function c(){var e=t[d]<<8|t[d+1];return d+=2,e}function l(){var e=c(),r=d+e-2,n=w(t,r,d);n&&n.invalid&&((0,a.warn)(\"readDataBlock - incorrect length, current marker is: \"+n.invalid),r=n.offset);var i=t.subarray(d,r);return d+=i.length,i}function u(e){for(var t=Math.ceil(e.samplesPerLine/8/e.maxH),r=Math.ceil(e.scanLines/8/e.maxV),a=0;a<e.components.length;a++){X=e.components[a];var n=Math.ceil(Math.ceil(e.samplesPerLine/8)*X.h/e.maxH),i=Math.ceil(Math.ceil(e.scanLines/8)*X.v/e.maxV),o=t*X.h,s=64*(r*X.v)*(o+1);X.blockData=new Int16Array(s),X.blocksPerLine=n,X.blocksPerColumn=i}e.mcusPerLine=t,e.mcusPerColumn=r}var h,f,d=0,g=null,m=null,b=0,k=[],S=[],C=[],x=c();if(65496!==x)throw new i(\"SOI not found\");x=c();e:for(;65497!==x;){var A,_,P;switch(x){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var I=l();65504===x&&74===I[0]&&70===I[1]&&73===I[2]&&70===I[3]&&0===I[4]&&(g={version:{major:I[5],minor:I[6]},densityUnits:I[7],xDensity:I[8]<<8|I[9],yDensity:I[10]<<8|I[11],thumbWidth:I[12],thumbHeight:I[13],thumbData:I.subarray(14,14+3*I[12]*I[13])}),65518===x&&65===I[0]&&100===I[1]&&111===I[2]&&98===I[3]&&101===I[4]&&(m={version:I[5]<<8|I[6],flags0:I[7]<<8|I[8],flags1:I[9]<<8|I[10],transformCode:I[11]});break;case 65499:for(var E=c()+d-2;d<E;){var T=t[d++],O=new Uint16Array(64);if(T>>4===0)for(_=0;_<64;_++)O[e[_]]=t[d++];else{if(T>>4!==1)throw new i(\"DQT - invalid table spec\");for(_=0;_<64;_++)O[e[_]]=c()}k[15&T]=O}break;case 65472:case 65473:case 65474:if(h)throw new i(\"Only single frame JPEGs supported\");c(),(h={}).extended=65473===x,h.progressive=65474===x,h.precision=t[d++];var F=c();h.scanLines=n||F,h.samplesPerLine=c(),h.components=[],h.componentIds={};var R,B=t[d++],M=0,D=0;for(A=0;A<B;A++){R=t[d];var L=t[d+1]>>4,N=15&t[d+1];M<L&&(M=L),D<N&&(D=N);var U=t[d+2];P=h.components.push({h:L,v:N,quantizationId:U,quantizationTable:null}),h.componentIds[R]=P-1,d+=3}h.maxH=M,h.maxV=D,u(h);break;case 65476:var q=c();for(A=2;A<q;){var j=t[d++],z=new Uint8Array(16),H=0;for(_=0;_<16;_++,d++)H+=z[_]=t[d];var W=new Uint8Array(H);for(_=0;_<H;_++,d++)W[_]=t[d];A+=17+H,(j>>4===0?C:S)[15&j]=p(z,W)}break;case 65501:c(),f=c();break;case 65498:var G=1===++b&&!n;c();var X,V=t[d++],Y=[];for(A=0;A<V;A++){var K=h.componentIds[t[d++]];X=h.components[K];var J=t[d++];X.huffmanTableDC=C[J>>4],X.huffmanTableAC=S[15&J],Y.push(X)}var Z=t[d++],Q=t[d++],$=t[d++];try{var ee=v(t,d,h,Y,f,Z,Q,$>>4,15&$,G);d+=ee}catch(ae){if(ae instanceof o)return(0,a.warn)(\"\".concat(ae.message,\" -- attempting to re-parse the JPEG image.\")),this.parse(t,{dnlScanLines:ae.scanLines});if(ae instanceof s){(0,a.warn)(\"\".concat(ae.message,\" -- ignoring the rest of the image data.\"));break e}throw ae}break;case 65500:d+=4;break;case 65535:255!==t[d]&&d--;break;default:if(255===t[d-3]&&t[d-2]>=192&&t[d-2]<=254){d-=3;break}var te=w(t,d-2);if(te&&te.invalid){(0,a.warn)(\"JpegImage.parse - unexpected data, current marker is: \"+te.invalid),d=te.offset;break}throw new i(\"unknown marker \"+x.toString(16))}x=c()}for(this.width=h.samplesPerLine,this.height=h.scanLines,this.jfif=g,this.adobe=m,this.components=[],A=0;A<h.components.length;A++){var re=k[(X=h.components[A]).quantizationId];re&&(X.quantizationTable=re),this.components.push({output:y(0,X),scaleX:X.h/h.maxH,scaleY:X.v/h.maxV,blocksPerLine:X.blocksPerLine,blocksPerColumn:X.blocksPerColumn})}this.numComponents=this.components.length},_getLinearizedBlockData:function(e,t){var r,a,n,i,o,s,c,l,u,h,f,d=arguments.length>2&&void 0!==arguments[2]&&arguments[2],g=this.width/e,p=this.height/t,m=0,v=this.components.length,b=e*t*v,y=new Uint8ClampedArray(b),w=new Uint32Array(e);for(c=0;c<v;c++){for(a=(r=this.components[c]).scaleX*g,n=r.scaleY*p,m=c,f=r.output,i=r.blocksPerLine+1<<3,o=0;o<e;o++)l=0|o*a,w[o]=(4294967288&l)<<3|7&l;for(s=0;s<t;s++)for(h=i*(4294967288&(l=0|s*n))|(7&l)<<3,o=0;o<e;o++)y[m]=f[h+w[o]],m+=v}var k=this._decodeTransform;if(d||4!==v||k||(k=new Int32Array([-256,255,-256,255,-256,255,-256,255])),k)for(c=0;c<b;)for(l=0,u=0;l<v;l++,c++,u+=2)y[c]=(y[c]*k[u]>>8)+k[u+1];return y},get _isColorConversionNeeded(){return this.adobe?!!this.adobe.transformCode:3===this.numComponents?0!==this._colorTransform:1===this._colorTransform},_convertYccToRgb:function(e){for(var t,r,a,n=0,i=e.length;n<i;n+=3)t=e[n],r=e[n+1],a=e[n+2],e[n]=t-179.456+1.402*a,e[n+1]=t+135.459-.344*r-.714*a,e[n+2]=t-226.816+1.772*r;return e},_convertYcckToRgb:function(e){for(var t,r,a,n,i=0,o=0,s=e.length;o<s;o+=4)t=e[o],r=e[o+1],a=e[o+2],n=e[o+3],e[i++]=r*(-660635669420364e-19*r+.000437130475926232*a-54080610064599e-18*t+.00048449797120281*n-.154362151871126)-122.67195406894+a*(-.000957964378445773*a+.000817076911346625*t-.00477271405408747*n+1.53380253221734)+t*(.000961250184130688*t-.00266257332283933*n+.48357088451265)+n*(-.000336197177618394*n+.484791561490776),e[i++]=107.268039397724+r*(219927104525741e-19*r-.000640992018297945*a+.000659397001245577*t+.000426105652938837*n-.176491792462875)+a*(-.000778269941513683*a+.00130872261408275*t+.000770482631801132*n-.151051492775562)+t*(.00126935368114843*t-.00265090189010898*n+.25802910206845)+n*(-.000318913117588328*n-.213742400323665),e[i++]=r*(-.000570115196973677*r-263409051004589e-19*a+.0020741088115012*t-.00288260236853442*n+.814272968359295)-20.810012546947+a*(-153496057440975e-19*a-.000132689043961446*t+.000560833691242812*n-.195152027534049)+t*(.00174418132927582*t-.00255243321439347*n+.116935020465145)+n*(-.000343531996510555*n+.24165260232407);return e.subarray(0,i)},_convertYcckToCmyk:function(e){for(var t,r,a,n=0,i=e.length;n<i;n+=4)t=e[n],r=e[n+1],a=e[n+2],e[n]=434.456-t-1.402*a,e[n+1]=119.541-t+.344*r+.714*a,e[n+2]=481.816-t-1.772*r;return e},_convertCmykToRgb:function(e){for(var t,r,a,n,i=0,o=0,s=e.length;o<s;o+=4)t=e[o]*(1/255),r=e[o+1]*(1/255),a=e[o+2]*(1/255),n=e[o+3]*(1/255),e[i++]=255+t*(-4.387332384609988*t+54.48615194189176*r+18.82290502165302*a+212.25662451639585*n-285.2331026137004)+r*(1.7149763477362134*r-5.6096736904047315*a-17.873870861415444*n-5.497006427196366)+a*(-2.5217340131683033*a-21.248923337353073*n+17.5119270841813)-n*(21.86122147463605*n+189.48180835922747),e[i++]=255+t*(8.841041422036149*t+60.118027045597366*r+6.871425592049007*a+31.159100130055922*n-79.2970844816548)+r*(-15.310361306967817*r+17.575251261109482*a+131.35250912493976*n-190.9453302588951)+a*(4.444339102852739*a+9.8632861493405*n-24.86741582555878)-n*(20.737325471181034*n+187.80453709719578),e[i++]=255+t*(.8842522430003296*t+8.078677503112928*r+30.89978309703729*a-.23883238689178934*n-14.183576799673286)+r*(10.49593273432072*r+63.02378494754052*a+50.606957656360734*n-112.23884253719248)+a*(.03296041114873217*a+115.60384449646641*n-193.58209356861505)-n*(22.33816807309886*n+180.12613974708367);return e.subarray(0,i)},getData:function(e){var t=e.width,r=e.height,a=e.forceRGB,n=void 0!==a&&a,o=e.isSourcePDF,s=void 0!==o&&o;if(this.numComponents>4)throw new i(\"Unsupported color mode\");var c=this._getLinearizedBlockData(t,r,s);if(1===this.numComponents&&n){for(var l=c.length,u=new Uint8ClampedArray(3*l),h=0,f=0;f<l;f++){var d=c[f];u[h++]=d,u[h++]=d,u[h++]=d}return u}if(3===this.numComponents&&this._isColorConversionNeeded)return this._convertYccToRgb(c);if(4===this.numComponents){if(this._isColorConversionNeeded)return n?this._convertYcckToRgb(c):this._convertYcckToCmyk(c);if(n)return this._convertCmykToRgb(c)}return c}},g}();t.JpegImage=c},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpxStream=void 0;var a=r(157),n=r(166),i=r(6),o=function(){function e(e,t,r,n){this.stream=e,this.maybeLength=t,this.dict=r,this.params=n,a.DecodeStream.call(this,t)}return e.prototype=Object.create(a.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,i.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new n.JpxImage;e.parse(this.bytes);var t=e.width,r=e.height,a=e.componentsCount,i=e.tiles.length;if(1===i)this.buffer=e.tiles[0].items;else{for(var o=new Uint8ClampedArray(t*r*a),s=0;s<i;s++)for(var c=e.tiles[s],l=c.width,u=c.height,h=c.left,f=c.top,d=c.items,g=0,p=(t*f+h)*a,m=t*a,v=l*a,b=0;b<u;b++){var y=d.subarray(g,g+v);o.set(y,p),g+=v,p+=m}this.buffer=o}this.bufferLength=this.buffer.length,this.eof=!0}},e}();t.JpxStream=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpxImage=void 0;var a=r(6),n=r(162),i=function(){function e(e){this.message=\"JPX error: \"+e}return e.prototype=new Error,e.prototype.name=\"JpxError\",e.constructor=e,e}(),o=function(){var e={LL:0,LH:1,HL:1,HH:2};function t(){this.failOnCorruptedImage=!1}function r(e,t){e.x0=Math.ceil(t.XOsiz/e.XRsiz),e.x1=Math.ceil(t.Xsiz/e.XRsiz),e.y0=Math.ceil(t.YOsiz/e.YRsiz),e.y1=Math.ceil(t.Ysiz/e.YRsiz),e.width=e.x1-e.x0,e.height=e.y1-e.y0}function o(e,t){for(var r,a=e.SIZ,n=[],i=Math.ceil((a.Xsiz-a.XTOsiz)/a.XTsiz),o=Math.ceil((a.Ysiz-a.YTOsiz)/a.YTsiz),s=0;s<o;s++)for(var c=0;c<i;c++)(r={}).tx0=Math.max(a.XTOsiz+c*a.XTsiz,a.XOsiz),r.ty0=Math.max(a.YTOsiz+s*a.YTsiz,a.YOsiz),r.tx1=Math.min(a.XTOsiz+(c+1)*a.XTsiz,a.Xsiz),r.ty1=Math.min(a.YTOsiz+(s+1)*a.YTsiz,a.Ysiz),r.width=r.tx1-r.tx0,r.height=r.ty1-r.ty0,r.components=[],n.push(r);e.tiles=n;for(var l=0,u=a.Csiz;l<u;l++)for(var h=t[l],f=0,d=n.length;f<d;f++){var g={};r=n[f],g.tcx0=Math.ceil(r.tx0/h.XRsiz),g.tcy0=Math.ceil(r.ty0/h.YRsiz),g.tcx1=Math.ceil(r.tx1/h.XRsiz),g.tcy1=Math.ceil(r.ty1/h.YRsiz),g.width=g.tcx1-g.tcx0,g.height=g.tcy1-g.tcy0,r.components[l]=g}}function s(e,t,r){var a=t.codingStyleParameters,n={};return a.entropyCoderWithCustomPrecincts?(n.PPx=a.precinctsSizes[r].PPx,n.PPy=a.precinctsSizes[r].PPy):(n.PPx=15,n.PPy=15),n.xcb_=r>0?Math.min(a.xcb,n.PPx-1):Math.min(a.xcb,n.PPx),n.ycb_=r>0?Math.min(a.ycb,n.PPy-1):Math.min(a.ycb,n.PPy),n}function c(e,t,r){var a=1<<r.PPx,n=1<<r.PPy,i=0===t.resLevel,o=1<<r.PPx+(i?0:-1),s=1<<r.PPy+(i?0:-1),c=t.trx1>t.trx0?Math.ceil(t.trx1/a)-Math.floor(t.trx0/a):0,l=t.try1>t.try0?Math.ceil(t.try1/n)-Math.floor(t.try0/n):0,u=c*l;t.precinctParameters={precinctWidth:a,precinctHeight:n,numprecinctswide:c,numprecinctshigh:l,numprecincts:u,precinctWidthInSubband:o,precinctHeightInSubband:s}}function l(e,t,r){var a,n,i,o,s=r.xcb_,c=r.ycb_,l=1<<s,u=1<<c,h=t.tbx0>>s,f=t.tby0>>c,d=t.tbx1+l-1>>s,g=t.tby1+u-1>>c,p=t.resolution.precinctParameters,m=[],v=[];for(n=f;n<g;n++)for(a=h;a<d;a++){if((i={cbx:a,cby:n,tbx0:l*a,tby0:u*n,tbx1:l*(a+1),tby1:u*(n+1)}).tbx0_=Math.max(t.tbx0,i.tbx0),i.tby0_=Math.max(t.tby0,i.tby0),i.tbx1_=Math.min(t.tbx1,i.tbx1),i.tby1_=Math.min(t.tby1,i.tby1),o=Math.floor((i.tbx0_-t.tbx0)/p.precinctWidthInSubband)+Math.floor((i.tby0_-t.tby0)/p.precinctHeightInSubband)*p.numprecinctswide,i.precinctNumber=o,i.subbandType=t.type,i.Lblock=3,!(i.tbx1_<=i.tbx0_||i.tby1_<=i.tby0_)){m.push(i);var b=v[o];void 0!==b?(a<b.cbxMin?b.cbxMin=a:a>b.cbxMax&&(b.cbxMax=a),n<b.cbyMin?b.cbxMin=n:n>b.cbyMax&&(b.cbyMax=n)):v[o]=b={cbxMin:a,cbyMin:n,cbxMax:a,cbyMax:n},i.precinct=b}}t.codeblockParameters={codeblockWidth:s,codeblockHeight:c,numcodeblockwide:d-h+1,numcodeblockhigh:g-f+1},t.codeblocks=m,t.precincts=v}function u(e,t,r){for(var a=[],n=e.subbands,i=0,o=n.length;i<o;i++)for(var s=n[i].codeblocks,c=0,l=s.length;c<l;c++){var u=s[c];u.precinctNumber===t&&a.push(u)}return{layerNumber:r,codeblocks:a}}function h(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],n=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=0,c=0;c<o;c++)s=Math.max(s,a.components[c].codingStyleParameters.decompositionLevelsCount);var l=0,h=0,f=0,d=0;this.nextPacket=function(){for(;l<n;l++){for(;h<=s;h++){for(;f<o;f++){var e=a.components[f];if(!(h>e.codingStyleParameters.decompositionLevelsCount)){for(var t=e.resolutions[h],r=t.precinctParameters.numprecincts;d<r;){var c=u(t,d,l);return d++,c}d=0}}f=0}h=0}throw new i(\"Out of packets\")}}function f(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],n=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=0,c=0;c<o;c++)s=Math.max(s,a.components[c].codingStyleParameters.decompositionLevelsCount);var l=0,h=0,f=0,d=0;this.nextPacket=function(){for(;l<=s;l++){for(;h<n;h++){for(;f<o;f++){var e=a.components[f];if(!(l>e.codingStyleParameters.decompositionLevelsCount)){for(var t=e.resolutions[l],r=t.precinctParameters.numprecincts;d<r;){var c=u(t,d,h);return d++,c}d=0}}f=0}h=0}throw new i(\"Out of packets\")}}function d(e){var t,r,a,n,o=e.SIZ,s=e.currentTile.index,c=e.tiles[s],l=c.codingStyleDefaultParameters.layersCount,h=o.Csiz,f=0;for(a=0;a<h;a++){var d=c.components[a];f=Math.max(f,d.codingStyleParameters.decompositionLevelsCount)}var g=new Int32Array(f+1);for(r=0;r<=f;++r){var p=0;for(a=0;a<h;++a){var m=c.components[a].resolutions;r<m.length&&(p=Math.max(p,m[r].precinctParameters.numprecincts))}g[r]=p}t=0,r=0,a=0,n=0,this.nextPacket=function(){for(;r<=f;r++){for(;n<g[r];n++){for(;a<h;a++){var e=c.components[a];if(!(r>e.codingStyleParameters.decompositionLevelsCount)){var o=e.resolutions[r],s=o.precinctParameters.numprecincts;if(!(n>=s)){for(;t<l;){var d=u(o,n,t);return t++,d}t=0}}}a=0}n=0}throw new i(\"Out of packets\")}}function g(e){var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],n=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=v(a),c=s,l=0,h=0,f=0,d=0,g=0;this.nextPacket=function(){for(;g<c.maxNumHigh;g++){for(;d<c.maxNumWide;d++){for(;f<o;f++){for(var e=a.components[f],t=e.codingStyleParameters.decompositionLevelsCount;h<=t;h++){var r=e.resolutions[h],p=s.components[f].resolutions[h],v=m(d,g,p,c,r);if(null!==v){for(;l<n;){var b=u(r,v,l);return l++,b}l=0}}h=0}f=0}d=0}throw new i(\"Out of packets\")}}function p(e){var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],n=a.codingStyleDefaultParameters.layersCount,o=t.Csiz,s=v(a),c=0,l=0,h=0,f=0,d=0;this.nextPacket=function(){for(;h<o;++h){for(var e=a.components[h],t=s.components[h],r=e.codingStyleParameters.decompositionLevelsCount;d<t.maxNumHigh;d++){for(;f<t.maxNumWide;f++){for(;l<=r;l++){var g=e.resolutions[l],p=t.resolutions[l],v=m(f,d,p,t,g);if(null!==v){for(;c<n;){var b=u(g,v,c);return c++,b}c=0}}l=0}f=0}d=0}throw new i(\"Out of packets\")}}function m(e,t,r,a,n){var i=e*a.minWidth,o=t*a.minHeight;if(i%r.width!==0||o%r.height!==0)return null;var s=o/r.width*n.precinctParameters.numprecinctswide;return i/r.height+s}function v(e){for(var t=e.components.length,r=Number.MAX_VALUE,a=Number.MAX_VALUE,n=0,i=0,o=new Array(t),s=0;s<t;s++){for(var c=e.components[s],l=c.codingStyleParameters.decompositionLevelsCount,u=new Array(l+1),h=Number.MAX_VALUE,f=Number.MAX_VALUE,d=0,g=0,p=1,m=l;m>=0;--m){var v=c.resolutions[m],b=p*v.precinctParameters.precinctWidth,y=p*v.precinctParameters.precinctHeight;h=Math.min(h,b),f=Math.min(f,y),d=Math.max(d,v.precinctParameters.numprecinctswide),g=Math.max(g,v.precinctParameters.numprecinctshigh),u[m]={width:b,height:y},p<<=1}r=Math.min(r,h),a=Math.min(a,f),n=Math.max(n,d),i=Math.max(i,g),o[s]={resolutions:u,minWidth:h,minHeight:f,maxNumWide:d,maxNumHigh:g}}return{components:o,minWidth:r,minHeight:a,maxNumWide:n,maxNumHigh:i}}function b(e){for(var t=e.SIZ,r=e.currentTile.index,a=e.tiles[r],n=t.Csiz,o=0;o<n;o++){for(var u=a.components[o],m=u.codingStyleParameters.decompositionLevelsCount,v=[],b=[],y=0;y<=m;y++){var w,k=s(0,u,y),S={},C=1<<m-y;if(S.trx0=Math.ceil(u.tcx0/C),S.try0=Math.ceil(u.tcy0/C),S.trx1=Math.ceil(u.tcx1/C),S.try1=Math.ceil(u.tcy1/C),S.resLevel=y,c(0,S,k),v.push(S),0===y)(w={}).type=\"LL\",w.tbx0=Math.ceil(u.tcx0/C),w.tby0=Math.ceil(u.tcy0/C),w.tbx1=Math.ceil(u.tcx1/C),w.tby1=Math.ceil(u.tcy1/C),w.resolution=S,l(0,w,k),b.push(w),S.subbands=[w];else{var x=1<<m-y+1,A=[];(w={}).type=\"HL\",w.tbx0=Math.ceil(u.tcx0/x-.5),w.tby0=Math.ceil(u.tcy0/x),w.tbx1=Math.ceil(u.tcx1/x-.5),w.tby1=Math.ceil(u.tcy1/x),w.resolution=S,l(0,w,k),b.push(w),A.push(w),(w={}).type=\"LH\",w.tbx0=Math.ceil(u.tcx0/x),w.tby0=Math.ceil(u.tcy0/x-.5),w.tbx1=Math.ceil(u.tcx1/x),w.tby1=Math.ceil(u.tcy1/x-.5),w.resolution=S,l(0,w,k),b.push(w),A.push(w),(w={}).type=\"HH\",w.tbx0=Math.ceil(u.tcx0/x-.5),w.tby0=Math.ceil(u.tcy0/x-.5),w.tbx1=Math.ceil(u.tcx1/x-.5),w.tby1=Math.ceil(u.tcy1/x-.5),w.resolution=S,l(0,w,k),b.push(w),A.push(w),S.subbands=A}}u.resolutions=v,u.subbands=b}var _=a.codingStyleDefaultParameters.progressionOrder;switch(_){case 0:a.packetsIterator=new h(e);break;case 1:a.packetsIterator=new f(e);break;case 2:a.packetsIterator=new d(e);break;case 3:a.packetsIterator=new g(e);break;case 4:a.packetsIterator=new p(e);break;default:throw new i(\"Unsupported progression order \".concat(_))}}function y(e,t,r,n){var i,o=0,s=0,c=!1;function l(e){for(;s<e;){var a=t[r+o];o++,c?(i=i<<7|a,s+=7,c=!1):(i=i<<8|a,s+=8),255===a&&(c=!0)}return i>>>(s-=e)&(1<<e)-1}function u(e){return 255===t[r+o-1]&&t[r+o]===e?(h(1),!0):255===t[r+o]&&t[r+o+1]===e&&(h(2),!0)}function h(e){o+=e}function f(){s=0,c&&(o++,c=!1)}function d(){if(0===l(1))return 1;if(0===l(1))return 2;var e=l(2);return e<3?e+3:(e=l(5))<31?e+6:(e=l(7))+37}for(var g=e.currentTile.index,p=e.tiles[g],m=e.COD.sopMarkerUsed,v=e.COD.ephMarkerUsed,b=p.packetsIterator;o<n;){f(),m&&u(145)&&h(4);var y=b.nextPacket();if(l(1)){for(var w,k=y.layerNumber,S=[],A=0,_=y.codeblocks.length;A<_;A++){var P=(w=y.codeblocks[A]).precinct,I=w.cbx-P.cbxMin,E=w.cby-P.cbyMin,T=!1,O=!1;if(void 0!==w.included)T=!!l(1);else{var F,R;if(void 0!==(P=w.precinct).inclusionTree)F=P.inclusionTree;else{var B=P.cbxMax-P.cbxMin+1,M=P.cbyMax-P.cbyMin+1;F=new x(B,M,k),R=new C(B,M),P.inclusionTree=F,P.zeroBitPlanesTree=R}if(F.reset(I,E,k))for(;;){if(!l(1)){F.incrementValue(k);break}if(!F.nextLevel()){w.included=!0,T=O=!0;break}}}if(T){if(O){for((R=P.zeroBitPlanesTree).reset(I,E);;)if(l(1)){if(!R.nextLevel())break}else R.incrementValue();w.zeroBitPlanes=R.value}for(var D=d();l(1);)w.Lblock++;var L=(0,a.log2)(D),N=l((D<1<<L?L-1:L)+w.Lblock);S.push({codeblock:w,codingpasses:D,dataLength:N})}}for(f(),v&&u(146);S.length>0;){var U=S.shift();void 0===(w=U.codeblock).data&&(w.data=[]),w.data.push({data:t,start:r+o,end:r+o+U.dataLength,codingpasses:U.codingpasses}),o+=U.dataLength}}}return o}function w(e,t,r,a,i,o,s,c){for(var l=a.tbx0,u=a.tby0,h=a.tbx1-a.tbx0,f=a.codeblocks,d=\"H\"===a.type.charAt(0)?1:0,g=\"H\"===a.type.charAt(1)?t:0,p=0,m=f.length;p<m;++p){var v=f[p],b=v.tbx1_-v.tbx0_,y=v.tby1_-v.tby0_;if(0!==b&&0!==y&&void 0!==v.data){var w,k;w=new A(b,y,v.subbandType,v.zeroBitPlanes,o),k=2;var S,C,x,_=v.data,P=0,I=0;for(S=0,C=_.length;S<C;S++)P+=(x=_[S]).end-x.start,I+=x.codingpasses;var E=new Uint8Array(P),T=0;for(S=0,C=_.length;S<C;S++){var O=(x=_[S]).data.subarray(x.start,x.end);E.set(O,T),T+=O.length}var F=new n.ArithmeticDecoder(E,0,P);for(w.setDecoder(F),S=0;S<I;S++){switch(k){case 0:w.runSignificancePropagationPass();break;case 1:w.runMagnitudeRefinementPass();break;case 2:w.runCleanupPass(),c&&w.checkSegmentationSymbol()}k=(k+1)%3}var R,B,M,D=v.tbx0_-l+(v.tby0_-u)*h,L=w.coefficentsSign,N=w.coefficentsMagnitude,U=w.bitsDecoded,q=s?0:.5;T=0;var j=\"LL\"!==a.type;for(S=0;S<y;S++){var z=2*(D/h|0)*(t-h)+d+g;for(R=0;R<b;R++){if(0!==(B=N[T])){B=(B+q)*i,0!==L[T]&&(B=-B),M=U[T];var H=j?z+(D<<1):D;e[H]=s&&M>=o?B:B*(1<<o-M)}D++,T++}D+=h-b}}}}function k(t,r,a){for(var n=r.components[a],i=n.codingStyleParameters,o=n.quantizationParameters,s=i.decompositionLevelsCount,c=o.SPqcds,l=o.scalarExpounded,u=o.guardBits,h=i.segmentationSymbolUsed,f=t.components[a].precision,d=i.reversibleTransformation,g=d?new I:new P,p=[],m=0,v=0;v<=s;v++){for(var b=n.resolutions[v],y=b.trx1-b.trx0,k=b.try1-b.try0,S=new Float32Array(y*k),C=0,x=b.subbands.length;C<x;C++){var A,_;l?(A=c[m].mu,_=c[m].epsilon,m++):(A=c[0].mu,_=c[0].epsilon+(v>0?1-v:0));var E=b.subbands[C],T=e[E.type];w(S,y,0,E,d?1:Math.pow(2,f+T-_)*(1+A/2048),u+_-1,d,h)}p.push({width:y,height:k,items:S})}var O=g.calculate(p,n.tcx0,n.tcy0);return{left:n.tcx0,top:n.tcy0,width:O.width,height:O.height,items:O.items}}function S(e,t){for(var r=e.SIZ.Csiz,a=e.tiles[t],n=0;n<r;n++){var i=a.components[n],o=void 0!==e.currentTile.QCC[n]?e.currentTile.QCC[n]:e.currentTile.QCD;i.quantizationParameters=o;var s=void 0!==e.currentTile.COC[n]?e.currentTile.COC[n]:e.currentTile.COD;i.codingStyleParameters=s}a.codingStyleDefaultParameters=e.currentTile.COD}t.prototype={parse:function(e){if(65359!==(0,a.readUint16)(e,0))for(var t=0,r=e.length;t<r;){var n=8,o=(0,a.readUint32)(e,t),s=(0,a.readUint32)(e,t+4);if(t+=n,1===o&&(o=4294967296*(0,a.readUint32)(e,t)+(0,a.readUint32)(e,t+4),t+=8,n+=8),0===o&&(o=r-t+n),o<n)throw new i(\"Invalid box field size\");var c=o-n,l=!0;switch(s){case 1785737832:l=!1;break;case 1668246642:var u=e[t];if(1===u){var h=(0,a.readUint32)(e,t+3);switch(h){case 16:case 17:case 18:break;default:(0,a.warn)(\"Unknown colorspace \"+h)}}else 2===u&&(0,a.info)(\"ICC profile not supported\");break;case 1785737827:this.parseCodestream(e,t,t+c);break;case 1783636e3:218793738!==(0,a.readUint32)(e,t)&&(0,a.warn)(\"Invalid JP2 signature\");break;case 1783634458:case 1718909296:case 1920099697:case 1919251232:case 1768449138:break;default:var f=String.fromCharCode(s>>24&255,s>>16&255,s>>8&255,255&s);(0,a.warn)(\"Unsupported header type \"+s+\" (\"+f+\")\")}l&&(t+=c)}else this.parseCodestream(e,0,e.length)},parseImageProperties:function(e){for(var t=e.getByte();t>=0;){if(65361===(t<<8|(t=e.getByte()))){e.skip(4);var r=e.getInt32()>>>0,a=e.getInt32()>>>0,n=e.getInt32()>>>0,o=e.getInt32()>>>0;e.skip(16);var s=e.getUint16();return this.width=r-n,this.height=a-o,this.componentsCount=s,void(this.bitsPerComponent=8)}}throw new i(\"No size marker found in JPX stream\")},parseCodestream:function(e,t,n){var s={},c=!1;try{for(var l=t;l+1<n;){var u=(0,a.readUint16)(e,l);l+=2;var h,f,d,g,p,m,v=0;switch(u){case 65359:s.mainHeader=!0;break;case 65497:break;case 65361:v=(0,a.readUint16)(e,l);var w={};w.Xsiz=(0,a.readUint32)(e,l+4),w.Ysiz=(0,a.readUint32)(e,l+8),w.XOsiz=(0,a.readUint32)(e,l+12),w.YOsiz=(0,a.readUint32)(e,l+16),w.XTsiz=(0,a.readUint32)(e,l+20),w.YTsiz=(0,a.readUint32)(e,l+24),w.XTOsiz=(0,a.readUint32)(e,l+28),w.YTOsiz=(0,a.readUint32)(e,l+32);var C=(0,a.readUint16)(e,l+36);w.Csiz=C;var x=[];h=l+38;for(var A=0;A<C;A++){var _={precision:1+(127&e[h]),isSigned:!!(128&e[h]),XRsiz:e[h+1],YRsiz:e[h+2]};h+=3,r(_,w),x.push(_)}s.SIZ=w,s.components=x,o(s,x),s.QCC=[],s.COC=[];break;case 65372:v=(0,a.readUint16)(e,l);var P={};switch(h=l+2,31&(f=e[h++])){case 0:g=8,p=!0;break;case 1:g=16,p=!1;break;case 2:g=16,p=!0;break;default:throw new Error(\"Invalid SQcd value \"+f)}for(P.noQuantization=8===g,P.scalarExpounded=p,P.guardBits=f>>5,d=[];h<v+l;){var I={};8===g?(I.epsilon=e[h++]>>3,I.mu=0):(I.epsilon=e[h]>>3,I.mu=(7&e[h])<<8|e[h+1],h+=2),d.push(I)}P.SPqcds=d,s.mainHeader?s.QCD=P:(s.currentTile.QCD=P,s.currentTile.QCC=[]);break;case 65373:v=(0,a.readUint16)(e,l);var E,T={};switch(h=l+2,s.SIZ.Csiz<257?E=e[h++]:(E=(0,a.readUint16)(e,h),h+=2),31&(f=e[h++])){case 0:g=8,p=!0;break;case 1:g=16,p=!1;break;case 2:g=16,p=!0;break;default:throw new Error(\"Invalid SQcd value \"+f)}for(T.noQuantization=8===g,T.scalarExpounded=p,T.guardBits=f>>5,d=[];h<v+l;)I={},8===g?(I.epsilon=e[h++]>>3,I.mu=0):(I.epsilon=e[h]>>3,I.mu=(7&e[h])<<8|e[h+1],h+=2),d.push(I);T.SPqcds=d,s.mainHeader?s.QCC[E]=T:s.currentTile.QCC[E]=T;break;case 65362:v=(0,a.readUint16)(e,l);var O={};h=l+2;var F=e[h++];O.entropyCoderWithCustomPrecincts=!!(1&F),O.sopMarkerUsed=!!(2&F),O.ephMarkerUsed=!!(4&F),O.progressionOrder=e[h++],O.layersCount=(0,a.readUint16)(e,h),h+=2,O.multipleComponentTransform=e[h++],O.decompositionLevelsCount=e[h++],O.xcb=2+(15&e[h++]),O.ycb=2+(15&e[h++]);var R=e[h++];if(O.selectiveArithmeticCodingBypass=!!(1&R),O.resetContextProbabilities=!!(2&R),O.terminationOnEachCodingPass=!!(4&R),O.verticallyStripe=!!(8&R),O.predictableTermination=!!(16&R),O.segmentationSymbolUsed=!!(32&R),O.reversibleTransformation=e[h++],O.entropyCoderWithCustomPrecincts){for(var B=[];h<v+l;){var M=e[h++];B.push({PPx:15&M,PPy:M>>4})}O.precinctsSizes=B}var D=[];if(O.selectiveArithmeticCodingBypass&&D.push(\"selectiveArithmeticCodingBypass\"),O.resetContextProbabilities&&D.push(\"resetContextProbabilities\"),O.terminationOnEachCodingPass&&D.push(\"terminationOnEachCodingPass\"),O.verticallyStripe&&D.push(\"verticallyStripe\"),O.predictableTermination&&D.push(\"predictableTermination\"),D.length>0)throw c=!0,new Error(\"Unsupported COD options (\"+D.join(\", \")+\")\");s.mainHeader?s.COD=O:(s.currentTile.COD=O,s.currentTile.COC=[]);break;case 65424:v=(0,a.readUint16)(e,l),(m={}).index=(0,a.readUint16)(e,l+2),m.length=(0,a.readUint32)(e,l+4),m.dataEnd=m.length+l-2,m.partIndex=e[l+8],m.partsCount=e[l+9],s.mainHeader=!1,0===m.partIndex&&(m.COD=s.COD,m.COC=s.COC.slice(0),m.QCD=s.QCD,m.QCC=s.QCC.slice(0)),s.currentTile=m;break;case 65427:0===(m=s.currentTile).partIndex&&(S(s,m.index),b(s)),y(s,e,l,v=m.dataEnd-l);break;case 65365:case 65367:case 65368:case 65380:v=(0,a.readUint16)(e,l);break;case 65363:throw new Error(\"Codestream code 0xFF53 (COC) is not implemented\");default:throw new Error(\"Unknown codestream code: \"+u.toString(16))}l+=v}}catch(L){if(c||this.failOnCorruptedImage)throw new i(L.message);(0,a.warn)(\"JPX: Trying to recover from: \"+L.message)}this.tiles=function(e){for(var t=e.SIZ,r=e.components,a=t.Csiz,n=[],i=0,o=e.tiles.length;i<o;i++){var s,c=e.tiles[i],l=[];for(s=0;s<a;s++)l[s]=k(e,c,s);var u,h,f,d,g,p,m,v=l[0],b=new Uint8ClampedArray(v.items.length*a),y={left:v.left,top:v.top,width:v.width,height:v.height,items:b},w=0;if(c.codingStyleDefaultParameters.multipleComponentTransform){var S=4===a,C=l[0].items,x=l[1].items,A=l[2].items,_=S?l[3].items:null;u=r[0].precision-8,h=.5+(128<<u);var P=c.components[0],I=a-3;if(d=C.length,P.codingStyleParameters.reversibleTransformation)for(f=0;f<d;f++,w+=I){g=C[f]+h,p=x[f],m=A[f];var E=g-(m+p>>2);b[w++]=E+m>>u,b[w++]=E>>u,b[w++]=E+p>>u}else for(f=0;f<d;f++,w+=I)g=C[f]+h,p=x[f],m=A[f],b[w++]=g+1.402*m>>u,b[w++]=g-.34413*p-.71414*m>>u,b[w++]=g+1.772*p>>u;if(S)for(f=0,w=3;f<d;f++,w+=4)b[w]=_[f]+h>>u}else for(s=0;s<a;s++){var T=l[s].items;for(u=r[s].precision-8,h=.5+(128<<u),w=s,f=0,d=T.length;f<d;f++)b[w]=T[f]+h>>u,w+=a}n.push(y)}return n}(s),this.width=s.SIZ.Xsiz-s.SIZ.XOsiz,this.height=s.SIZ.Ysiz-s.SIZ.YOsiz,this.componentsCount=s.SIZ.Csiz}};var C=function(){function e(e,t){var r=(0,a.log2)(Math.max(e,t))+1;this.levels=[];for(var n=0;n<r;n++){var i={width:e,height:t,items:[]};this.levels.push(i),e=Math.ceil(e/2),t=Math.ceil(t/2)}}return e.prototype={reset:function(e,t){for(var r,a=0,n=0;a<this.levels.length;){var i=e+t*(r=this.levels[a]).width;if(void 0!==r.items[i]){n=r.items[i];break}r.index=i,e>>=1,t>>=1,a++}a--,(r=this.levels[a]).items[r.index]=n,this.currentLevel=a,delete this.value},incrementValue:function(){var e=this.levels[this.currentLevel];e.items[e.index]++},nextLevel:function(){var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];return--e<0?(this.value=r,!1):(this.currentLevel=e,(t=this.levels[e]).items[t.index]=r,!0)}},e}(),x=function(){function e(e,t,r){var n=(0,a.log2)(Math.max(e,t))+1;this.levels=[];for(var i=0;i<n;i++){for(var o=new Uint8Array(e*t),s=0,c=o.length;s<c;s++)o[s]=r;var l={width:e,height:t,items:o};this.levels.push(l),e=Math.ceil(e/2),t=Math.ceil(t/2)}}return e.prototype={reset:function(e,t,r){for(var a=0;a<this.levels.length;){var n=this.levels[a],i=e+t*n.width;n.index=i;var o=n.items[i];if(255===o)break;if(o>r)return this.currentLevel=a,this.propagateValues(),!1;e>>=1,t>>=1,a++}return this.currentLevel=a-1,!0},incrementValue:function(e){var t=this.levels[this.currentLevel];t.items[t.index]=e+1,this.propagateValues()},propagateValues:function(){for(var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];--e>=0;)(t=this.levels[e]).items[t.index]=r},nextLevel:function(){var e=this.currentLevel,t=this.levels[e],r=t.items[t.index];return t.items[t.index]=255,!(--e<0)&&(this.currentLevel=e,(t=this.levels[e]).items[t.index]=r,!0)}},e}(),A=function(){var e=new Uint8Array([0,5,8,0,3,7,8,0,4,7,8,0,0,0,0,0,1,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8]),t=new Uint8Array([0,3,4,0,5,7,7,0,8,8,8,0,0,0,0,0,1,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8]),r=new Uint8Array([0,1,2,0,1,2,2,0,2,2,2,0,0,0,0,0,3,4,5,0,4,5,5,0,5,5,5,0,0,0,0,0,6,7,7,0,7,7,7,0,7,7,7,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8]);function a(a,n,i,o,s){this.width=a,this.height=n,this.contextLabelTable=\"HH\"===i?r:\"HL\"===i?t:e;var c=a*n;this.neighborsSignificance=new Uint8Array(c),this.coefficentsSign=new Uint8Array(c),this.coefficentsMagnitude=s>14?new Uint32Array(c):s>6?new Uint16Array(c):new Uint8Array(c),this.processingFlags=new Uint8Array(c);var l=new Uint8Array(c);if(0!==o)for(var u=0;u<c;u++)l[u]=o;this.bitsDecoded=l,this.reset()}return a.prototype={setDecoder:function(e){this.decoder=e},reset:function(){this.contexts=new Int8Array(19),this.contexts[0]=8,this.contexts[17]=92,this.contexts[18]=6},setNeighborsSignificance:function(e,t,r){var a,n=this.neighborsSignificance,i=this.width,o=this.height,s=t>0,c=t+1<i;e>0&&(a=r-i,s&&(n[a-1]+=16),c&&(n[a+1]+=16),n[a]+=4),e+1<o&&(a=r+i,s&&(n[a-1]+=16),c&&(n[a+1]+=16),n[a]+=4),s&&(n[r-1]+=1),c&&(n[r+1]+=1),n[r]|=128},runSignificancePropagationPass:function(){for(var e=this.decoder,t=this.width,r=this.height,a=this.coefficentsMagnitude,n=this.coefficentsSign,i=this.neighborsSignificance,o=this.processingFlags,s=this.contexts,c=this.contextLabelTable,l=this.bitsDecoded,u=0;u<r;u+=4)for(var h=0;h<t;h++)for(var f=u*t+h,d=0;d<4;d++,f+=t){var g=u+d;if(g>=r)break;if(o[f]&=-2,!a[f]&&i[f]){var p=c[i[f]];if(e.readBit(s,p)){var m=this.decodeSignBit(g,h,f);n[f]=m,a[f]=1,this.setNeighborsSignificance(g,h,f),o[f]|=2}l[f]++,o[f]|=1}}},decodeSignBit:function(e,t,r){var a,n,i,o,s,c,l=this.width,u=this.height,h=this.coefficentsMagnitude,f=this.coefficentsSign;o=t>0&&0!==h[r-1],t+1<l&&0!==h[r+1]?(i=f[r+1],a=o?1-i-(n=f[r-1]):1-i-i):a=o?1-(n=f[r-1])-n:0;var d=3*a;return o=e>0&&0!==h[r-l],e+1<u&&0!==h[r+l]?(i=f[r+l],a=o?1-i-(n=f[r-l])+d:1-i-i+d):a=o?1-(n=f[r-l])-n+d:d,a>=0?(s=9+a,c=this.decoder.readBit(this.contexts,s)):(s=9-a,c=1^this.decoder.readBit(this.contexts,s)),c},runMagnitudeRefinementPass:function(){for(var e,t=this.decoder,r=this.width,a=this.height,n=this.coefficentsMagnitude,i=this.neighborsSignificance,o=this.contexts,s=this.bitsDecoded,c=this.processingFlags,l=r*a,u=4*r,h=0;h<l;h=e){e=Math.min(l,h+u);for(var f=0;f<r;f++)for(var d=h+f;d<e;d+=r)if(n[d]&&0===(1&c[d])){var g=16;if(0!==(2&c[d]))c[d]^=2,g=0===(127&i[d])?15:14;var p=t.readBit(o,g);n[d]=n[d]<<1|p,s[d]++,c[d]|=1}}},runCleanupPass:function(){for(var e,t=this.decoder,r=this.width,a=this.height,n=this.neighborsSignificance,i=this.coefficentsMagnitude,o=this.coefficentsSign,s=this.contexts,c=this.contextLabelTable,l=this.bitsDecoded,u=this.processingFlags,h=r,f=2*r,d=3*r,g=0;g<a;g=e){e=Math.min(g+4,a);for(var p=g*r,m=g+3<a,v=0;v<r;v++){var b,y=p+v,w=0,k=y,S=g;if(m&&0===u[y]&&0===u[y+h]&&0===u[y+f]&&0===u[y+d]&&0===n[y]&&0===n[y+h]&&0===n[y+f]&&0===n[y+d]){if(!t.readBit(s,18)){l[y]++,l[y+h]++,l[y+f]++,l[y+d]++;continue}0!==(w=t.readBit(s,17)<<1|t.readBit(s,17))&&(S=g+w,k+=w*r),b=this.decodeSignBit(S,v,k),o[k]=b,i[k]=1,this.setNeighborsSignificance(S,v,k),u[k]|=2,k=y;for(var C=g;C<=S;C++,k+=r)l[k]++;w++}for(S=g+w;S<e;S++,k+=r)if(!i[k]&&0===(1&u[k])){var x=c[n[k]];1===t.readBit(s,x)&&(b=this.decodeSignBit(S,v,k),o[k]=b,i[k]=1,this.setNeighborsSignificance(S,v,k),u[k]|=2),l[k]++}}}},checkSegmentationSymbol:function(){var e=this.decoder,t=this.contexts;if(10!==(e.readBit(t,17)<<3|e.readBit(t,17)<<2|e.readBit(t,17)<<1|e.readBit(t,17)))throw new i(\"Invalid segmentation symbol\")}},a}(),_=function(){function e(){}return e.prototype.calculate=function(e,t,r){for(var a=e[0],n=1,i=e.length;n<i;n++)a=this.iterate(a,e[n],t,r);return a},e.prototype.extend=function(e,t,r){var a=t-1,n=t+1,i=t+r-2,o=t+r;e[a--]=e[n++],e[o++]=e[i--],e[a--]=e[n++],e[o++]=e[i--],e[a--]=e[n++],e[o++]=e[i--],e[a]=e[n],e[o]=e[i]},e.prototype.iterate=function(e,t,r,a){var n,i,o,s,c,l,u=e.width,h=e.height,f=e.items,d=t.width,g=t.height,p=t.items;for(o=0,n=0;n<h;n++)for(s=2*n*d,i=0;i<u;i++,o++,s+=2)p[s]=f[o];f=e.items=null;var m=new Float32Array(d+8);if(1===d){if(0!==(1&r))for(l=0,o=0;l<g;l++,o+=d)p[o]*=.5}else for(l=0,o=0;l<g;l++,o+=d)m.set(p.subarray(o,o+d),4),this.extend(m,4,d),this.filter(m,4,d),p.set(m.subarray(4,4+d),o);var v=16,b=[];for(n=0;n<v;n++)b.push(new Float32Array(g+8));var y,w=0;if(e=4+g,1===g){if(0!==(1&a))for(c=0;c<d;c++)p[c]*=.5}else for(c=0;c<d;c++){if(0===w){for(v=Math.min(d-c,v),o=c,s=4;s<e;o+=d,s++)for(y=0;y<v;y++)b[y][s]=p[o+y];w=v}var k=b[--w];if(this.extend(k,4,g),this.filter(k,4,g),0===w)for(o=c-v+1,s=4;s<e;o+=d,s++)for(y=0;y<v;y++)p[o+y]=b[y][s]}return{width:d,height:g,items:p}},e}(),P=function(){function e(){_.call(this)}return e.prototype=Object.create(_.prototype),e.prototype.filter=function(e,t,r){var a,n,i,o,s=r>>1,c=-1.586134342059924,l=-.052980118572961,u=.882911075530934,h=.443506852043971,f=1.230174104914001;for(a=(t|=0)-3,n=s+4;n--;a+=2)e[a]*=.8128930661159609;for(i=h*e[(a=t-2)-1],n=s+3;n--&&(o=h*e[a+1],e[a]=f*e[a]-i-o,n--);a+=2)i=h*e[(a+=2)+1],e[a]=f*e[a]-i-o;for(i=u*e[(a=t-1)-1],n=s+2;n--&&(o=u*e[a+1],e[a]-=i+o,n--);a+=2)i=u*e[(a+=2)+1],e[a]-=i+o;for(i=l*e[(a=t)-1],n=s+1;n--&&(o=l*e[a+1],e[a]-=i+o,n--);a+=2)i=l*e[(a+=2)+1],e[a]-=i+o;if(0!==s)for(i=c*e[(a=t+1)-1],n=s;n--&&(o=c*e[a+1],e[a]-=i+o,n--);a+=2)i=c*e[(a+=2)+1],e[a]-=i+o},e}(),I=function(){function e(){_.call(this)}return e.prototype=Object.create(_.prototype),e.prototype.filter=function(e,t,r){var a,n,i=r>>1;for(a=t|=0,n=i+1;n--;a+=2)e[a]-=e[a-1]+e[a+1]+2>>2;for(a=t+1,n=i;n--;a+=2)e[a]+=e[a-1]+e[a+1]>>1},e}();return t}();t.JpxImage=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.calculateSHA512=t.calculateSHA384=t.calculateSHA256=t.calculateMD5=t.PDF20=t.PDF17=t.CipherTransformFactory=t.ARCFourCipher=t.AES256Cipher=t.AES128Cipher=void 0;var a=r(6),n=r(155),i=r(157);function o(e){return(o=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){return!t||\"object\"!==o(t)&&\"function\"!==typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function f(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function d(e,t,r){return t&&f(e.prototype,t),r&&f(e,r),e}var g=function(){function e(e){this.a=0,this.b=0;var t,r,a=new Uint8Array(256),n=0,i=e.length;for(t=0;t<256;++t)a[t]=t;for(t=0;t<256;++t)n=n+(r=a[t])+e[t%i]&255,a[t]=a[n],a[n]=r;this.s=a}return e.prototype={encryptBlock:function(e){var t,r,a,n=e.length,i=this.a,o=this.b,s=this.s,c=new Uint8Array(n);for(t=0;t<n;++t)a=s[o=o+(r=s[i=i+1&255])&255],s[i]=a,s[o]=r,c[t]=e[t]^s[r+a&255];return this.a=i,this.b=o,c}},e.prototype.decryptBlock=e.prototype.encryptBlock,e}();t.ARCFourCipher=g;var p=function(){var e=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]),t=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]);return function(r,a,n){var i,o,s,c=1732584193,l=-271733879,u=-1732584194,h=271733878,f=n+72&-64,d=new Uint8Array(f);for(i=0;i<n;++i)d[i]=r[a++];for(d[i++]=128,s=f-8;i<s;)d[i++]=0;d[i++]=n<<3&255,d[i++]=n>>5&255,d[i++]=n>>13&255,d[i++]=n>>21&255,d[i++]=n>>>29&255,d[i++]=0,d[i++]=0,d[i++]=0;var g=new Int32Array(16);for(i=0;i<f;){for(o=0;o<16;++o,i+=4)g[o]=d[i]|d[i+1]<<8|d[i+2]<<16|d[i+3]<<24;var p,m,v=c,b=l,y=u,w=h;for(o=0;o<64;++o){o<16?(p=b&y|~b&w,m=o):o<32?(p=w&b|~w&y,m=5*o+1&15):o<48?(p=b^y^w,m=3*o+5&15):(p=y^(b|~w),m=7*o&15);var k=w,S=v+p+t[o]+g[m]|0,C=e[o];w=y,y=b,b=b+(S<<C|S>>>32-C)|0,v=k}c=c+v|0,l=l+b|0,u=u+y|0,h=h+w|0}return new Uint8Array([255&c,c>>8&255,c>>16&255,c>>>24&255,255&l,l>>8&255,l>>16&255,l>>>24&255,255&u,u>>8&255,u>>16&255,u>>>24&255,255&h,h>>8&255,h>>16&255,h>>>24&255])}}();t.calculateMD5=p;var m=function(){function e(e,t){this.high=0|e,this.low=0|t}return e.prototype={and:function(e){this.high&=e.high,this.low&=e.low},xor:function(e){this.high^=e.high,this.low^=e.low},or:function(e){this.high|=e.high,this.low|=e.low},shiftRight:function(e){e>=32?(this.low=this.high>>>e-32|0,this.high=0):(this.low=this.low>>>e|this.high<<32-e,this.high=this.high>>>e|0)},shiftLeft:function(e){e>=32?(this.high=this.low<<e-32,this.low=0):(this.high=this.high<<e|this.low>>>32-e,this.low=this.low<<e)},rotateRight:function(e){var t,r;32&e?(r=this.low,t=this.high):(t=this.low,r=this.high),e&=31,this.low=t>>>e|r<<32-e,this.high=r>>>e|t<<32-e},not:function(){this.high=~this.high,this.low=~this.low},add:function(e){var t=(this.low>>>0)+(e.low>>>0),r=(this.high>>>0)+(e.high>>>0);t>4294967295&&(r+=1),this.low=0|t,this.high=0|r},copyTo:function(e,t){e[t]=this.high>>>24&255,e[t+1]=this.high>>16&255,e[t+2]=this.high>>8&255,e[t+3]=255&this.high,e[t+4]=this.low>>>24&255,e[t+5]=this.low>>16&255,e[t+6]=this.low>>8&255,e[t+7]=255&this.low},assign:function(e){this.high=e.high,this.low=e.low}},e}(),v=function(){function e(e,t){return e>>>t|e<<32-t}function t(e,t,r){return e&t^~e&r}function r(e,t,r){return e&t^e&r^t&r}function a(t){return e(t,2)^e(t,13)^e(t,22)}function n(t){return e(t,6)^e(t,11)^e(t,25)}function i(t){return e(t,7)^e(t,18)^t>>>3}var o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];return function(s,c,l){var u,h,f,d=1779033703,g=3144134277,p=1013904242,m=2773480762,v=1359893119,b=2600822924,y=528734635,w=1541459225,k=64*Math.ceil((l+9)/64),S=new Uint8Array(k);for(u=0;u<l;++u)S[u]=s[c++];for(S[u++]=128,f=k-8;u<f;)S[u++]=0;S[u++]=0,S[u++]=0,S[u++]=0,S[u++]=l>>>29&255,S[u++]=l>>21&255,S[u++]=l>>13&255,S[u++]=l>>5&255,S[u++]=l<<3&255;var C,x=new Uint32Array(64);for(u=0;u<k;){for(h=0;h<16;++h)x[h]=S[u]<<24|S[u+1]<<16|S[u+2]<<8|S[u+3],u+=4;for(h=16;h<64;++h)x[h]=0|(e(C=x[h-2],17)^e(C,19)^C>>>10)+x[h-7]+i(x[h-15])+x[h-16];var A,_,P=d,I=g,E=p,T=m,O=v,F=b,R=y,B=w;for(h=0;h<64;++h)A=B+n(O)+t(O,F,R)+o[h]+x[h],_=a(P)+r(P,I,E),B=R,R=F,F=O,O=T+A|0,T=E,E=I,I=P,P=A+_|0;d=d+P|0,g=g+I|0,p=p+E|0,m=m+T|0,v=v+O|0,b=b+F|0,y=y+R|0,w=w+B|0}return new Uint8Array([d>>24&255,d>>16&255,d>>8&255,255&d,g>>24&255,g>>16&255,g>>8&255,255&g,p>>24&255,p>>16&255,p>>8&255,255&p,m>>24&255,m>>16&255,m>>8&255,255&m,v>>24&255,v>>16&255,v>>8&255,255&v,b>>24&255,b>>16&255,b>>8&255,255&b,y>>24&255,y>>16&255,y>>8&255,255&y,w>>24&255,w>>16&255,w>>8&255,255&w])}}();t.calculateSHA256=v;var b=function(){function e(e,t,r,a,n){e.assign(t),e.and(r),n.assign(t),n.not(),n.and(a),e.xor(n)}function t(e,t,r,a,n){e.assign(t),e.and(r),n.assign(t),n.and(a),e.xor(n),n.assign(r),n.and(a),e.xor(n)}function r(e,t,r){e.assign(t),e.rotateRight(28),r.assign(t),r.rotateRight(34),e.xor(r),r.assign(t),r.rotateRight(39),e.xor(r)}function a(e,t,r){e.assign(t),e.rotateRight(14),r.assign(t),r.rotateRight(18),e.xor(r),r.assign(t),r.rotateRight(41),e.xor(r)}function n(e,t,r){e.assign(t),e.rotateRight(1),r.assign(t),r.rotateRight(8),e.xor(r),r.assign(t),r.shiftRight(7),e.xor(r)}function i(e,t,r){e.assign(t),e.rotateRight(19),r.assign(t),r.rotateRight(61),e.xor(r),r.assign(t),r.shiftRight(6),e.xor(r)}var o=[new m(1116352408,3609767458),new m(1899447441,602891725),new m(3049323471,3964484399),new m(3921009573,2173295548),new m(961987163,4081628472),new m(1508970993,3053834265),new m(2453635748,2937671579),new m(2870763221,3664609560),new m(3624381080,2734883394),new m(310598401,1164996542),new m(607225278,1323610764),new m(1426881987,3590304994),new m(1925078388,4068182383),new m(2162078206,991336113),new m(2614888103,633803317),new m(3248222580,3479774868),new m(3835390401,2666613458),new m(4022224774,944711139),new m(264347078,2341262773),new m(604807628,2007800933),new m(770255983,1495990901),new m(1249150122,1856431235),new m(1555081692,3175218132),new m(1996064986,2198950837),new m(2554220882,3999719339),new m(2821834349,766784016),new m(2952996808,2566594879),new m(3210313671,3203337956),new m(3336571891,1034457026),new m(3584528711,2466948901),new m(113926993,3758326383),new m(338241895,168717936),new m(666307205,1188179964),new m(773529912,1546045734),new m(1294757372,1522805485),new m(1396182291,2643833823),new m(1695183700,2343527390),new m(1986661051,1014477480),new m(2177026350,1206759142),new m(2456956037,344077627),new m(2730485921,1290863460),new m(2820302411,3158454273),new m(3259730800,3505952657),new m(3345764771,106217008),new m(3516065817,3606008344),new m(3600352804,1432725776),new m(4094571909,1467031594),new m(275423344,851169720),new m(430227734,3100823752),new m(506948616,1363258195),new m(659060556,3750685593),new m(883997877,3785050280),new m(958139571,3318307427),new m(1322822218,3812723403),new m(1537002063,2003034995),new m(1747873779,3602036899),new m(1955562222,1575990012),new m(2024104815,1125592928),new m(2227730452,2716904306),new m(2361852424,442776044),new m(2428436474,593698344),new m(2756734187,3733110249),new m(3204031479,2999351573),new m(3329325298,3815920427),new m(3391569614,3928383900),new m(3515267271,566280711),new m(3940187606,3454069534),new m(4118630271,4000239992),new m(116418474,1914138554),new m(174292421,2731055270),new m(289380356,3203993006),new m(460393269,320620315),new m(685471733,587496836),new m(852142971,1086792851),new m(1017036298,365543100),new m(1126000580,2618297676),new m(1288033470,3409855158),new m(1501505948,4234509866),new m(1607167915,987167468),new m(1816402316,1246189591)];return function(s,c,l,u){var h,f,d,g,p,v,b,y;(u=!!u)?(h=new m(3418070365,3238371032),f=new m(1654270250,914150663),d=new m(2438529370,812702999),g=new m(355462360,4144912697),p=new m(1731405415,4290775857),v=new m(2394180231,1750603025),b=new m(3675008525,1694076839),y=new m(1203062813,3204075428)):(h=new m(1779033703,4089235720),f=new m(3144134277,2227873595),d=new m(1013904242,4271175723),g=new m(2773480762,1595750129),p=new m(1359893119,2917565137),v=new m(2600822924,725511199),b=new m(528734635,4215389547),y=new m(1541459225,327033209));var w,k,S,C=128*Math.ceil((l+17)/128),x=new Uint8Array(C);for(w=0;w<l;++w)x[w]=s[c++];for(x[w++]=128,S=C-16;w<S;)x[w++]=0;x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=0,x[w++]=l>>>29&255,x[w++]=l>>21&255,x[w++]=l>>13&255,x[w++]=l>>5&255,x[w++]=l<<3&255;var A=new Array(80);for(w=0;w<80;w++)A[w]=new m(0,0);var _,P,I=new m(0,0),E=new m(0,0),T=new m(0,0),O=new m(0,0),F=new m(0,0),R=new m(0,0),B=new m(0,0),M=new m(0,0),D=new m(0,0),L=new m(0,0),N=new m(0,0),U=new m(0,0);for(w=0;w<C;){for(k=0;k<16;++k)A[k].high=x[w]<<24|x[w+1]<<16|x[w+2]<<8|x[w+3],A[k].low=x[w+4]<<24|x[w+5]<<16|x[w+6]<<8|x[w+7],w+=8;for(k=16;k<80;++k)i(_=A[k],A[k-2],U),_.add(A[k-7]),n(N,A[k-15],U),_.add(N),_.add(A[k-16]);for(I.assign(h),E.assign(f),T.assign(d),O.assign(g),F.assign(p),R.assign(v),B.assign(b),M.assign(y),k=0;k<80;++k)D.assign(M),a(N,F,U),D.add(N),e(N,F,R,B,U),D.add(N),D.add(o[k]),D.add(A[k]),r(L,I,U),t(N,I,E,T,U),L.add(N),_=M,M=B,B=R,R=F,O.add(D),F=O,O=T,T=E,E=I,_.assign(D),_.add(L),I=_;h.add(I),f.add(E),d.add(T),g.add(O),p.add(F),v.add(R),b.add(B),y.add(M)}return u?(P=new Uint8Array(48),h.copyTo(P,0),f.copyTo(P,8),d.copyTo(P,16),g.copyTo(P,24),p.copyTo(P,32),v.copyTo(P,40)):(P=new Uint8Array(64),h.copyTo(P,0),f.copyTo(P,8),d.copyTo(P,16),g.copyTo(P,24),p.copyTo(P,32),v.copyTo(P,40),b.copyTo(P,48),y.copyTo(P,56)),P}}();t.calculateSHA512=b;var y=function(){return function(e,t,r){return b(e,t,r,!0)}}();t.calculateSHA384=y;var w=function(){function e(){}return e.prototype={decryptBlock:function(e){return e}},e}(),k=function(){function e(){h(this,e),this.constructor===e&&(0,a.unreachable)(\"Cannot initialize AESBaseCipher.\"),this._s=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),this._inv_s=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),this._mix=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]),this._mixCol=new Uint8Array(256);for(var t=0;t<256;t++)this._mixCol[t]=t<128?t<<1:t<<1^27;this.buffer=new Uint8Array(16),this.bufferPosition=0}return d(e,[{key:\"_expandKey\",value:function(e){(0,a.unreachable)(\"Cannot call `_expandKey` on the base class\")}},{key:\"_decrypt\",value:function(e,t){var r,a,n,i=new Uint8Array(16);i.set(e);for(var o=0,s=this._keySize;o<16;++o,++s)i[o]^=t[s];for(var c=this._cyclesOfRepetition-1;c>=1;--c){r=i[13],i[13]=i[9],i[9]=i[5],i[5]=i[1],i[1]=r,r=i[14],a=i[10],i[14]=i[6],i[10]=i[2],i[6]=r,i[2]=a,r=i[15],a=i[11],n=i[7],i[15]=i[3],i[11]=r,i[7]=a,i[3]=n;for(var l=0;l<16;++l)i[l]=this._inv_s[i[l]];for(var u=0,h=16*c;u<16;++u,++h)i[u]^=t[h];for(var f=0;f<16;f+=4){var d=this._mix[i[f]],g=this._mix[i[f+1]],p=this._mix[i[f+2]],m=this._mix[i[f+3]];r=d^g>>>8^g<<24^p>>>16^p<<16^m>>>24^m<<8,i[f]=r>>>24&255,i[f+1]=r>>16&255,i[f+2]=r>>8&255,i[f+3]=255&r}}r=i[13],i[13]=i[9],i[9]=i[5],i[5]=i[1],i[1]=r,r=i[14],a=i[10],i[14]=i[6],i[10]=i[2],i[6]=r,i[2]=a,r=i[15],a=i[11],n=i[7],i[15]=i[3],i[11]=r,i[7]=a,i[3]=n;for(var v=0;v<16;++v)i[v]=this._inv_s[i[v]],i[v]^=t[v];return i}},{key:\"_encrypt\",value:function(e,t){var r,a,n,i=this._s,o=new Uint8Array(16);o.set(e);for(var s=0;s<16;++s)o[s]^=t[s];for(var c=1;c<this._cyclesOfRepetition;c++){for(var l=0;l<16;++l)o[l]=i[o[l]];n=o[1],o[1]=o[5],o[5]=o[9],o[9]=o[13],o[13]=n,n=o[2],a=o[6],o[2]=o[10],o[6]=o[14],o[10]=n,o[14]=a,n=o[3],a=o[7],r=o[11],o[3]=o[15],o[7]=n,o[11]=a,o[15]=r;for(var u=0;u<16;u+=4){var h=o[u+0],f=o[u+1],d=o[u+2],g=o[u+3];r=h^f^d^g,o[u+0]^=r^this._mixCol[h^f],o[u+1]^=r^this._mixCol[f^d],o[u+2]^=r^this._mixCol[d^g],o[u+3]^=r^this._mixCol[g^h]}for(var p=0,m=16*c;p<16;++p,++m)o[p]^=t[m]}for(var v=0;v<16;++v)o[v]=i[o[v]];n=o[1],o[1]=o[5],o[5]=o[9],o[9]=o[13],o[13]=n,n=o[2],a=o[6],o[2]=o[10],o[6]=o[14],o[10]=n,o[14]=a,n=o[3],a=o[7],r=o[11],o[3]=o[15],o[7]=n,o[11]=a,o[15]=r;for(var b=0,y=this._keySize;b<16;++b,++y)o[b]^=t[y];return o}},{key:\"_decryptBlock2\",value:function(e,t){for(var r=e.length,a=this.buffer,n=this.bufferPosition,i=[],o=this.iv,s=0;s<r;++s)if(a[n]=e[s],!(++n<16)){for(var c=this._decrypt(a,this._key),l=0;l<16;++l)c[l]^=o[l];o=a,i.push(c),a=new Uint8Array(16),n=0}if(this.buffer=a,this.bufferLength=n,this.iv=o,0===i.length)return new Uint8Array(0);var u=16*i.length;if(t){var h=i[i.length-1],f=h[15];if(f<=16){for(var d=15,g=16-f;d>=g;--d)if(h[d]!==f){f=0;break}u-=f,i[i.length-1]=h.subarray(0,16-f)}}for(var p=new Uint8Array(u),m=0,v=0,b=i.length;m<b;++m,v+=16)p.set(i[m],v);return p}},{key:\"decryptBlock\",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=e.length,n=this.buffer,i=this.bufferPosition;if(r)this.iv=r;else{for(var o=0;i<16&&o<a;++o,++i)n[i]=e[o];if(i<16)return this.bufferLength=i,new Uint8Array(0);this.iv=n,e=e.subarray(16)}return this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=this._decryptBlock2,this.decryptBlock(e,t)}},{key:\"encrypt\",value:function(e,t){var r=e.length,a=this.buffer,n=this.bufferPosition,i=[];t||(t=new Uint8Array(16));for(var o=0;o<r;++o)if(a[n]=e[o],!(++n<16)){for(var s=0;s<16;++s)a[s]^=t[s];var c=this._encrypt(a,this._key);t=c,i.push(c),a=new Uint8Array(16),n=0}if(this.buffer=a,this.bufferLength=n,this.iv=t,0===i.length)return new Uint8Array(0);for(var l=16*i.length,u=new Uint8Array(l),h=0,f=0,d=i.length;h<d;++h,f+=16)u.set(i[h],f);return u}}]),e}(),S=function(e){function t(e){var r;return h(this,t),(r=s(this,c(t).call(this)))._cyclesOfRepetition=10,r._keySize=160,r._rcon=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]),r._key=r._expandKey(e),r}return l(t,k),d(t,[{key:\"_expandKey\",value:function(e){var t=this._s,r=this._rcon,a=new Uint8Array(176);a.set(e);for(var n=16,i=1;n<176;++i){var o=a[n-3],s=a[n-2],c=a[n-1],l=a[n-4];o=t[o],s=t[s],c=t[c],l=t[l],o^=r[i];for(var u=0;u<4;++u)a[n]=o^=a[n-16],a[++n]=s^=a[n-16],a[++n]=c^=a[n-16],a[++n]=l^=a[n-16],n++}return a}}]),t}();t.AES128Cipher=S;var C=function(e){function t(e){var r;return h(this,t),(r=s(this,c(t).call(this)))._cyclesOfRepetition=14,r._keySize=224,r._key=r._expandKey(e),r}return l(t,k),d(t,[{key:\"_expandKey\",value:function(e){var t=this._s,r=new Uint8Array(240);r.set(e);for(var a,n,i,o,s=1,c=32,l=1;c<240;++l){c%32===16?(a=t[a],n=t[n],i=t[i],o=t[o]):c%32===0&&(a=r[c-3],n=r[c-2],i=r[c-1],o=r[c-4],a=t[a],n=t[n],i=t[i],o=t[o],a^=s,(s<<=1)>=256&&(s=255&(27^s)));for(var u=0;u<4;++u)r[c]=a^=r[c-32],r[++c]=n^=r[c-32],r[++c]=i^=r[c-32],r[++c]=o^=r[c-32],c++}return r}}]),t}();t.AES256Cipher=C;var x=function(){function e(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function t(){}return t.prototype={checkOwnerPassword:function(t,r,a,n){var i=new Uint8Array(t.length+56);return i.set(t,0),i.set(r,t.length),i.set(a,t.length+r.length),e(v(i,0,i.length),n)},checkUserPassword:function(t,r,a){var n=new Uint8Array(t.length+8);return n.set(t,0),n.set(r,t.length),e(v(n,0,n.length),a)},getOwnerKey:function(e,t,r,a){var n=new Uint8Array(e.length+56);n.set(e,0),n.set(t,e.length),n.set(r,e.length+t.length);var i=v(n,0,n.length);return new C(i).decryptBlock(a,!1,new Uint8Array(16))},getUserKey:function(e,t,r){var a=new Uint8Array(e.length+8);a.set(e,0),a.set(t,e.length);var n=v(a,0,a.length);return new C(n).decryptBlock(r,!1,new Uint8Array(16))}},t}();t.PDF17=x;var A=function(){function e(e,t){var r=new Uint8Array(e.length+t.length);return r.set(e,0),r.set(t,e.length),r}function t(t,r,a){for(var n=v(r,0,r.length).subarray(0,32),i=[0],o=0;o<64||i[i.length-1]>o-32;){var s=t.length+n.length+a.length,c=new Uint8Array(64*s),l=e(t,n);l=e(l,a);for(var u=0,h=0;u<64;u++,h+=s)c.set(l,h);i=new S(n.subarray(0,16)).encrypt(c,n.subarray(16,32));for(var f=0,d=0;d<16;d++)f*=1,f%=3,f+=(i[d]>>>0)%3,f%=3;0===f?n=v(i,0,i.length):1===f?n=y(i,0,i.length):2===f&&(n=b(i,0,i.length)),o++}return n.subarray(0,32)}function r(){}function a(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}return r.prototype={hash:function(e,r,a){return t(e,r,a)},checkOwnerPassword:function(e,r,n,i){var o=new Uint8Array(e.length+56);return o.set(e,0),o.set(r,e.length),o.set(n,e.length+r.length),a(t(e,o,n),i)},checkUserPassword:function(e,r,n){var i=new Uint8Array(e.length+8);return i.set(e,0),i.set(r,e.length),a(t(e,i,[]),n)},getOwnerKey:function(e,r,a,n){var i=new Uint8Array(e.length+56);i.set(e,0),i.set(r,e.length),i.set(a,e.length+r.length);var o=t(e,i,a);return new C(o).decryptBlock(n,!1,new Uint8Array(16))},getUserKey:function(e,r,a){var n=new Uint8Array(e.length+8);n.set(e,0),n.set(r,e.length);var i=t(e,n,[]);return new C(i).decryptBlock(a,!1,new Uint8Array(16))}},r}();t.PDF20=A;var _=function(){function e(e,t){this.StringCipherConstructor=e,this.StreamCipherConstructor=t}return e.prototype={createStream:function(e,t){var r=new this.StreamCipherConstructor;return new i.DecryptStream(e,t,function(e,t){return r.decryptBlock(e,t)})},decryptString:function(e){var t=new this.StringCipherConstructor,r=(0,a.stringToBytes)(e);return r=t.decryptBlock(r,!0),(0,a.bytesToString)(r)}},e}(),P=function(){var e=new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]);function t(t,r,a,n,i,o,s,c){var l,u,h=40+a.length+t.length,f=new Uint8Array(h),d=0;if(r)for(u=Math.min(32,r.length);d<u;++d)f[d]=r[d];for(l=0;d<32;)f[d++]=e[l++];for(l=0,u=a.length;l<u;++l)f[d++]=a[l];for(f[d++]=255&i,f[d++]=i>>8&255,f[d++]=i>>16&255,f[d++]=i>>>24&255,l=0,u=t.length;l<u;++l)f[d++]=t[l];o>=4&&!c&&(f[d++]=255,f[d++]=255,f[d++]=255,f[d++]=255);var m=p(f,0,d),v=s>>3;if(o>=3)for(l=0;l<50;++l)m=p(m,0,v);var b,y=m.subarray(0,v);if(o>=3){for(d=0;d<32;++d)f[d]=e[d];for(l=0,u=t.length;l<u;++l)f[d++]=t[l];b=new g(y).encryptBlock(p(f,0,d)),u=y.length;var w,k=new Uint8Array(u);for(l=1;l<=19;++l){for(w=0;w<u;++w)k[w]=y[w]^l;b=new g(k).encryptBlock(b)}for(l=0,u=b.length;l<u;++l)if(n[l]!==b[l])return null}else for(l=0,u=(b=new g(y).encryptBlock(e)).length;l<u;++l)if(n[l]!==b[l])return null;return y}var r=n.Name.get(\"Identity\");function i(i,o,s){var c=i.get(\"Filter\");if(!(0,n.isName)(c,\"Standard\"))throw new a.FormatError(\"unknown encryption method\");this.dict=i;var l=i.get(\"V\");if(!Number.isInteger(l)||1!==l&&2!==l&&4!==l&&5!==l)throw new a.FormatError(\"unsupported encryption algorithm\");this.algorithm=l;var u=i.get(\"Length\");if(!u)if(l<=3)u=40;else{var h=i.get(\"CF\"),f=i.get(\"StmF\");if((0,n.isDict)(h)&&(0,n.isName)(f)){h.suppressEncryption=!0;var d=h.get(f.name);(u=d&&d.get(\"Length\")||128)<40&&(u<<=3)}}if(!Number.isInteger(u)||u<40||u%8!==0)throw new a.FormatError(\"invalid key length\");var m=(0,a.stringToBytes)(i.get(\"O\")).subarray(0,32),v=(0,a.stringToBytes)(i.get(\"U\")).subarray(0,32),b=i.get(\"P\"),y=i.get(\"R\"),w=(4===l||5===l)&&!1!==i.get(\"EncryptMetadata\");this.encryptMetadata=w;var k,S,C=(0,a.stringToBytes)(o);if(s){if(6===y)try{s=(0,a.utf8StringToString)(s)}catch(B){(0,a.warn)(\"CipherTransformFactory: Unable to convert UTF8 encoded password.\")}k=(0,a.stringToBytes)(s)}if(5!==l)S=t(C,k,m,v,b,y,u,w);else{var _=(0,a.stringToBytes)(i.get(\"O\")).subarray(32,40),P=(0,a.stringToBytes)(i.get(\"O\")).subarray(40,48),I=(0,a.stringToBytes)(i.get(\"U\")).subarray(0,48),E=(0,a.stringToBytes)(i.get(\"U\")).subarray(32,40),T=(0,a.stringToBytes)(i.get(\"U\")).subarray(40,48),O=(0,a.stringToBytes)(i.get(\"OE\")),F=(0,a.stringToBytes)(i.get(\"UE\"));(0,a.stringToBytes)(i.get(\"Perms\"));S=function(e,t,r,a,n,i,o,s,c,l,u,h){if(t){var f=Math.min(127,t.length);t=t.subarray(0,f)}else t=[];var d;return(d=6===e?new A:new x).checkUserPassword(t,s,o)?d.getUserKey(t,c,u):t.length&&d.checkOwnerPassword(t,a,i,r)?d.getOwnerKey(t,n,i,l):null}(y,k,m,_,P,I,v,E,T,O,F)}if(!S&&!s)throw new a.PasswordException(\"No password given\",a.PasswordResponses.NEED_PASSWORD);if(!S&&s&&(S=t(C,function(t,r,a,n){var i,o,s=new Uint8Array(32),c=0;for(o=Math.min(32,t.length);c<o;++c)s[c]=t[c];for(i=0;c<32;)s[c++]=e[i++];var l,u=p(s,0,c),h=n>>3;if(a>=3)for(i=0;i<50;++i)u=p(u,0,u.length);if(a>=3){l=r;var f,d=new Uint8Array(h);for(i=19;i>=0;i--){for(f=0;f<h;++f)d[f]=u[f]^i;l=new g(d).encryptBlock(l)}}else l=new g(u.subarray(0,h)).encryptBlock(r);return l}(k,m,y,u),m,v,b,y,u,w)),!S)throw new a.PasswordException(\"Incorrect Password\",a.PasswordResponses.INCORRECT_PASSWORD);if(this.encryptionKey=S,l>=4){var R=i.get(\"CF\");(0,n.isDict)(R)&&(R.suppressEncryption=!0),this.cf=R,this.stmf=i.get(\"StmF\")||r,this.strf=i.get(\"StrF\")||r,this.eff=i.get(\"EFF\")||this.stmf}}function o(e,t,r,a){var n,i,o=new Uint8Array(r.length+9);for(n=0,i=r.length;n<i;++n)o[n]=r[n];return o[n++]=255&e,o[n++]=e>>8&255,o[n++]=e>>16&255,o[n++]=255&t,o[n++]=t>>8&255,a&&(o[n++]=115,o[n++]=65,o[n++]=108,o[n++]=84),p(o,0,n).subarray(0,Math.min(r.length+5,16))}function s(e,t,r,i,s){if(!(0,n.isName)(t))throw new a.FormatError(\"Invalid crypt filter name.\");var c,l=e.get(t.name);if(null!==l&&void 0!==l&&(c=l.get(\"CFM\")),!c||\"None\"===c.name)return function(){return new w};if(\"V2\"===c.name)return function(){return new g(o(r,i,s,!1))};if(\"AESV2\"===c.name)return function(){return new S(o(r,i,s,!0))};if(\"AESV3\"===c.name)return function(){return new C(s)};throw new a.FormatError(\"Unknown crypto method\")}return i.prototype={createCipherTransform:function(e,t){if(4===this.algorithm||5===this.algorithm)return new _(s(this.cf,this.stmf,e,t,this.encryptionKey),s(this.cf,this.strf,e,t,this.encryptionKey));var r=o(e,t,this.encryptionKey,!1),a=function(){return new g(r)};return new _(a,a)}},i}();t.CipherTransformFactory=P},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ColorSpace=void 0;var a=r(6),n=r(155);function i(e){return(i=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t){return!t||\"object\"!==i(t)&&\"function\"!==typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function h(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function f(e,t,r){return t&&h(e.prototype,t),r&&h(e,r),e}var d=function(){function e(t,r){u(this,e),this.constructor===e&&(0,a.unreachable)(\"Cannot initialize ColorSpace.\"),this.name=t,this.numComps=r}return f(e,[{key:\"getRgb\",value:function(e,t){var r=new Uint8ClampedArray(3);return this.getRgbItem(e,t,r,0),r}},{key:\"getRgbItem\",value:function(e,t,r,n){(0,a.unreachable)(\"Should not call ColorSpace.getRgbItem\")}},{key:\"getRgbBuffer\",value:function(e,t,r,n,i,o,s){(0,a.unreachable)(\"Should not call ColorSpace.getRgbBuffer\")}},{key:\"getOutputLength\",value:function(e,t){(0,a.unreachable)(\"Should not call ColorSpace.getOutputLength\")}},{key:\"isPassthrough\",value:function(e){return!1}},{key:\"isDefaultDecode\",value:function(t,r){return e.isDefaultDecode(t,this.numComps)}},{key:\"fillRgb\",value:function(e,t,r,a,n,i,o,s,c){var l=t*r,u=null,h=1<<o,f=r!==n||t!==a;if(this.isPassthrough(o))u=s;else if(1===this.numComps&&l>h&&\"DeviceGray\"!==this.name&&\"DeviceRGB\"!==this.name){for(var d=o<=8?new Uint8Array(h):new Uint16Array(h),g=0;g<h;g++)d[g]=g;var p=new Uint8ClampedArray(3*h);if(this.getRgbBuffer(d,0,h,p,0,o,0),f){u=new Uint8Array(3*l);for(var m=0,v=0;v<l;++v){var b=3*s[v];u[m++]=p[b],u[m++]=p[b+1],u[m++]=p[b+2]}}else for(var y=0,w=0;w<l;++w){var k=3*s[w];e[y++]=p[k],e[y++]=p[k+1],e[y++]=p[k+2],y+=c}}else f?(u=new Uint8ClampedArray(3*l),this.getRgbBuffer(s,0,l,u,0,o,0)):this.getRgbBuffer(s,0,a*i,e,0,o,c);if(u)if(f)!function(e,t,r,a,n,i,o){o=1!==o?0:o;for(var s,c=r/n,l=a/i,u=0,h=new Uint16Array(n),f=3*r,d=0;d<n;d++)h[d]=3*Math.floor(d*c);for(var g=0;g<i;g++)for(var p=Math.floor(g*l)*f,m=0;m<n;m++)s=p+h[m],t[u++]=e[s++],t[u++]=e[s++],t[u++]=e[s++],u+=o}(u,e,t,r,a,n,c);else for(var S=0,C=0,x=0,A=a*i;x<A;x++)e[S++]=u[C++],e[S++]=u[C++],e[S++]=u[C++],S+=c}},{key:\"usesZeroToOneRange\",get:function(){return(0,a.shadow)(this,\"usesZeroToOneRange\",!0)}}],[{key:\"parse\",value:function(e,t,r,a){var n=this.parseToIR(e,t,r,a);return this.fromIR(n)}},{key:\"fromIR\",value:function(e){var t,r,n,i=Array.isArray(e)?e[0]:e;switch(i){case\"DeviceGrayCS\":return this.singletons.gray;case\"DeviceRgbCS\":return this.singletons.rgb;case\"DeviceCmykCS\":return this.singletons.cmyk;case\"CalGrayCS\":return t=e[1],r=e[2],n=e[3],new w(t,r,n);case\"CalRGBCS\":t=e[1],r=e[2],n=e[3];var o=e[4];return new k(t,r,n,o);case\"PatternCS\":var s=e[1];return s&&(s=this.fromIR(s)),new p(s);case\"IndexedCS\":var c=e[1],l=e[2],u=e[3];return new m(this.fromIR(c),l,u);case\"AlternateCS\":var h=e[1],f=e[2],d=e[3];return new g(h,this.fromIR(f),d);case\"LabCS\":t=e[1],r=e[2];var v=e[3];return new S(t,r,v);default:throw new a.FormatError(\"Unknown colorspace name: \".concat(i))}}},{key:\"parseToIR\",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3?arguments[3]:void 0;if(e=t.fetchIfRef(e),(0,n.isName)(e))switch(e.name){case\"DeviceGray\":case\"G\":return\"DeviceGrayCS\";case\"DeviceRGB\":case\"RGB\":return\"DeviceRgbCS\";case\"DeviceCMYK\":case\"CMYK\":return\"DeviceCmykCS\";case\"Pattern\":return[\"PatternCS\",null];default:if((0,n.isDict)(r)){var o=r.get(\"ColorSpace\");if((0,n.isDict)(o)){var s=o.get(e.name);if(s){if((0,n.isName)(s))return this.parseToIR(s,t,r,i);e=s;break}}}throw new a.FormatError(\"unrecognized colorspace \".concat(e.name))}if(Array.isArray(e)){var c,l,u,h=t.fetchIfRef(e[0]).name;switch(h){case\"DeviceGray\":case\"G\":return\"DeviceGrayCS\";case\"DeviceRGB\":case\"RGB\":return\"DeviceRgbCS\";case\"DeviceCMYK\":case\"CMYK\":return\"DeviceCmykCS\";case\"CalGray\":return[\"CalGrayCS\",(l=t.fetchIfRef(e[1])).getArray(\"WhitePoint\"),l.getArray(\"BlackPoint\"),l.get(\"Gamma\")];case\"CalRGB\":return[\"CalRGBCS\",(l=t.fetchIfRef(e[1])).getArray(\"WhitePoint\"),l.getArray(\"BlackPoint\"),l.getArray(\"Gamma\"),l.getArray(\"Matrix\")];case\"ICCBased\":var f=t.fetchIfRef(e[1]).dict;if(c=f.get(\"N\"),u=f.get(\"Alternate\")){var d=this.parseToIR(u,t,r,i);if(this.fromIR(d,i).numComps===c)return d;(0,a.warn)(\"ICCBased color space: Ignoring incorrect /Alternate entry.\")}if(1===c)return\"DeviceGrayCS\";if(3===c)return\"DeviceRgbCS\";if(4===c)return\"DeviceCmykCS\";break;case\"Pattern\":var g=e[1]||null;return g&&(g=this.parseToIR(g,t,r,i)),[\"PatternCS\",g];case\"Indexed\":case\"I\":var p=this.parseToIR(e[1],t,r,i),m=t.fetchIfRef(e[2])+1,v=t.fetchIfRef(e[3]);return(0,n.isStream)(v)&&(v=v.getBytes()),[\"IndexedCS\",p,m,v];case\"Separation\":case\"DeviceN\":var b=t.fetchIfRef(e[1]);return[\"AlternateCS\",c=Array.isArray(b)?b.length:1,u=this.parseToIR(e[2],t,r,i),i.create(t.fetchIfRef(e[3]))];case\"Lab\":return[\"LabCS\",(l=t.fetchIfRef(e[1])).getArray(\"WhitePoint\"),l.getArray(\"BlackPoint\"),l.getArray(\"Range\")];default:throw new a.FormatError('unimplemented color space object \"'.concat(h,'\"'))}}throw new a.FormatError('unrecognized color space object: \"'.concat(e,'\"'))}},{key:\"isDefaultDecode\",value:function(e,t){if(!Array.isArray(e))return!0;if(2*t!==e.length)return(0,a.warn)(\"The decode map is not the correct length\"),!0;for(var r=0,n=e.length;r<n;r+=2)if(0!==e[r]||1!==e[r+1])return!1;return!0}},{key:\"singletons\",get:function(){return(0,a.shadow)(this,\"singletons\",{get gray(){return(0,a.shadow)(this,\"gray\",new v)},get rgb(){return(0,a.shadow)(this,\"rgb\",new b)},get cmyk(){return(0,a.shadow)(this,\"cmyk\",new y)}})}}]),e}();t.ColorSpace=d;var g=function(e){function t(e,r,a){var n;return u(this,t),(n=o(this,s(t).call(this,\"Alternate\",e))).base=r,n.tintFn=a,n.tmpBuf=new Float32Array(r.numComps),n}return c(t,d),f(t,[{key:\"getRgbItem\",value:function(e,t,r,a){var n=this.tmpBuf;this.tintFn(e,t,n,0),this.base.getRgbItem(n,0,r,a)}},{key:\"getRgbBuffer\",value:function(e,t,r,a,n,i,o){var s,c,l=this.tintFn,u=this.base,h=1/((1<<i)-1),f=u.numComps,d=u.usesZeroToOneRange,g=(u.isPassthrough(8)||!d)&&0===o,p=g?n:0,m=g?a:new Uint8ClampedArray(f*r),v=this.numComps,b=new Float32Array(v),y=new Float32Array(f);for(s=0;s<r;s++){for(c=0;c<v;c++)b[c]=e[t++]*h;if(l(b,0,y,0),d)for(c=0;c<f;c++)m[p++]=255*y[c];else u.getRgbItem(y,0,m,p),p+=f}g||u.getRgbBuffer(m,0,r,a,n,8,o)}},{key:\"getOutputLength\",value:function(e,t){return this.base.getOutputLength(e*this.base.numComps/this.numComps,t)}}]),t}(),p=function(e){function t(e){var r;return u(this,t),(r=o(this,s(t).call(this,\"Pattern\",null))).base=e,r}return c(t,d),f(t,[{key:\"isDefaultDecode\",value:function(e,t){(0,a.unreachable)(\"Should not call PatternCS.isDefaultDecode\")}}]),t}(),m=function(e){function t(e,r,i){var c;u(this,t),(c=o(this,s(t).call(this,\"Indexed\",1))).base=e,c.highVal=r;var l=e.numComps*r;if((0,n.isStream)(i)){c.lookup=new Uint8Array(l);var h=i.getBytes(l);c.lookup.set(h)}else if((0,a.isString)(i)){c.lookup=new Uint8Array(l);for(var f=0;f<l;++f)c.lookup[f]=i.charCodeAt(f)}else{if(!(i instanceof Uint8Array))throw new a.FormatError(\"Unrecognized lookup table: \".concat(i));c.lookup=i}return c}return c(t,d),f(t,[{key:\"getRgbItem\",value:function(e,t,r,a){var n=this.base.numComps,i=e[t]*n;this.base.getRgbBuffer(this.lookup,i,1,r,a,8,0)}},{key:\"getRgbBuffer\",value:function(e,t,r,a,n,i,o){for(var s=this.base,c=s.numComps,l=s.getOutputLength(c,o),u=this.lookup,h=0;h<r;++h){var f=e[t++]*c;s.getRgbBuffer(u,f,1,a,n,8,o),n+=l}}},{key:\"getOutputLength\",value:function(e,t){return this.base.getOutputLength(e*this.base.numComps,t)}},{key:\"isDefaultDecode\",value:function(e,t){return!Array.isArray(e)||(2!==e.length?((0,a.warn)(\"Decode map length is not correct\"),!0):!Number.isInteger(t)||t<1?((0,a.warn)(\"Bits per component is not correct\"),!0):0===e[0]&&e[1]===(1<<t)-1)}}]),t}(),v=function(e){function t(){return u(this,t),o(this,s(t).call(this,\"DeviceGray\",1))}return c(t,d),f(t,[{key:\"getRgbItem\",value:function(e,t,r,a){var n=255*e[t];r[a]=r[a+1]=r[a+2]=n}},{key:\"getRgbBuffer\",value:function(e,t,r,a,n,i,o){for(var s=255/((1<<i)-1),c=t,l=n,u=0;u<r;++u){var h=s*e[c++];a[l++]=h,a[l++]=h,a[l++]=h,l+=o}}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)}}]),t}(),b=function(e){function t(){return u(this,t),o(this,s(t).call(this,\"DeviceRGB\",3))}return c(t,d),f(t,[{key:\"getRgbItem\",value:function(e,t,r,a){r[a]=255*e[t],r[a+1]=255*e[t+1],r[a+2]=255*e[t+2]}},{key:\"getRgbBuffer\",value:function(e,t,r,a,n,i,o){if(8!==i||0!==o)for(var s=255/((1<<i)-1),c=t,l=n,u=0;u<r;++u)a[l++]=s*e[c++],a[l++]=s*e[c++],a[l++]=s*e[c++],l+=o;else a.set(e.subarray(t,t+3*r),n)}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)/3|0}},{key:\"isPassthrough\",value:function(e){return 8===e}}]),t}(),y=function(){function e(e,t,r,a,n){var i=e[t]*r,o=e[t+1]*r,s=e[t+2]*r,c=e[t+3]*r;a[n]=255+i*(-4.387332384609988*i+54.48615194189176*o+18.82290502165302*s+212.25662451639585*c-285.2331026137004)+o*(1.7149763477362134*o-5.6096736904047315*s+-17.873870861415444*c-5.497006427196366)+s*(-2.5217340131683033*s-21.248923337353073*c+17.5119270841813)+c*(-21.86122147463605*c-189.48180835922747),a[n+1]=255+i*(8.841041422036149*i+60.118027045597366*o+6.871425592049007*s+31.159100130055922*c-79.2970844816548)+o*(-15.310361306967817*o+17.575251261109482*s+131.35250912493976*c-190.9453302588951)+s*(4.444339102852739*s+9.8632861493405*c-24.86741582555878)+c*(-20.737325471181034*c-187.80453709719578),a[n+2]=255+i*(.8842522430003296*i+8.078677503112928*o+30.89978309703729*s-.23883238689178934*c-14.183576799673286)+o*(10.49593273432072*o+63.02378494754052*s+50.606957656360734*c-112.23884253719248)+s*(.03296041114873217*s+115.60384449646641*c-193.58209356861505)+c*(-22.33816807309886*c-180.12613974708367)}return function(t){function r(){return u(this,r),o(this,s(r).call(this,\"DeviceCMYK\",4))}return c(r,d),f(r,[{key:\"getRgbItem\",value:function(t,r,a,n){e(t,r,1,a,n)}},{key:\"getRgbBuffer\",value:function(t,r,a,n,i,o,s){for(var c=1/((1<<o)-1),l=0;l<a;l++)e(t,r,c,n,i),r+=4,i+=3+s}},{key:\"getOutputLength\",value:function(e,t){return e/4*(3+t)|0}}]),r}()}(),w=function(){function e(e,t,r,a,n,i){var o=t[r]*i,s=Math.pow(o,e.G),c=e.YW*s,l=Math.max(295.8*Math.pow(c,.3333333333333333)-40.8,0);a[n]=l,a[n+1]=l,a[n+2]=l}return function(t){function r(e,t,n){var i;if(u(this,r),i=o(this,s(r).call(this,\"CalGray\",1)),!e)throw new a.FormatError(\"WhitePoint missing - required for color space CalGray\");if(t=t||[0,0,0],n=n||1,i.XW=e[0],i.YW=e[1],i.ZW=e[2],i.XB=t[0],i.YB=t[1],i.ZB=t[2],i.G=n,i.XW<0||i.ZW<0||1!==i.YW)throw new a.FormatError(\"Invalid WhitePoint components for \".concat(i.name)+\", no fallback available\");return(i.XB<0||i.YB<0||i.ZB<0)&&((0,a.info)(\"Invalid BlackPoint for \".concat(i.name,\", falling back to default.\")),i.XB=i.YB=i.ZB=0),0===i.XB&&0===i.YB&&0===i.ZB||(0,a.warn)(\"\".concat(i.name,\", BlackPoint: XB: \").concat(i.XB,\", YB: \").concat(i.YB,\", \")+\"ZB: \".concat(i.ZB,\", only default values are supported.\")),i.G<1&&((0,a.info)(\"Invalid Gamma: \".concat(i.G,\" for \").concat(i.name,\", \")+\"falling back to default.\"),i.G=1),i}return c(r,d),f(r,[{key:\"getRgbItem\",value:function(t,r,a,n){e(this,t,r,a,n,1)}},{key:\"getRgbBuffer\",value:function(t,r,a,n,i,o,s){for(var c=1/((1<<o)-1),l=0;l<a;++l)e(this,t,r,n,i,c),r+=1,i+=3+s}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)}}]),r}()}(),k=function(){var e=new Float32Array([.8951,.2664,-.1614,-.7502,1.7135,.0367,.0389,-.0685,1.0296]),t=new Float32Array([.9869929,-.1470543,.1599627,.4323053,.5183603,.0492912,-.0085287,.0400428,.9684867]),r=new Float32Array([3.2404542,-1.5371385,-.4985314,-.969266,1.8760108,.041556,.0556434,-.2040259,1.0572252]),n=new Float32Array([1,1,1]),i=new Float32Array(3),l=new Float32Array(3),h=new Float32Array(3),g=Math.pow(24/116,3)/8;function p(e,t,r){r[0]=e[0]*t[0]+e[1]*t[1]+e[2]*t[2],r[1]=e[3]*t[0]+e[4]*t[1]+e[5]*t[2],r[2]=e[6]*t[0]+e[7]*t[1]+e[8]*t[2]}function m(e){return v(0,1,e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function v(e,t,r){return Math.max(e,Math.min(t,r))}function b(e){return e<0?-b(-e):e>8?Math.pow((e+16)/116,3):e*g}function y(a,o,s,c,u,f){var d=v(0,1,o[s]*f),g=v(0,1,o[s+1]*f),y=v(0,1,o[s+2]*f),w=Math.pow(d,a.GR),k=Math.pow(g,a.GG),S=Math.pow(y,a.GB),C=a.MXA*w+a.MXB*k+a.MXC*S,x=a.MYA*w+a.MYB*k+a.MYC*S,A=a.MZA*w+a.MZB*k+a.MZC*S,_=l;_[0]=C,_[1]=x,_[2]=A;var P=h;!function(r,a,n){if(1===r[0]&&1===r[2])return n[0]=a[0],n[1]=a[1],void(n[2]=a[2]);var o=n;p(e,a,o);var s=i;!function(e,t,r){r[0]=1*t[0]/e[0],r[1]=1*t[1]/e[1],r[2]=1*t[2]/e[2]}(r,o,s),p(t,s,n)}(a.whitePoint,_,P);var I=l;!function(e,t,r){if(0===e[0]&&0===e[1]&&0===e[2])return r[0]=t[0],r[1]=t[1],void(r[2]=t[2]);var a=b(0),n=(1-a)/(1-b(e[0])),i=1-n,o=(1-a)/(1-b(e[1])),s=1-o,c=(1-a)/(1-b(e[2])),l=1-c;r[0]=t[0]*n+i,r[1]=t[1]*o+s,r[2]=t[2]*c+l}(a.blackPoint,P,I);var E=h;!function(r,a,n){var o=n;p(e,a,o);var s=i;!function(e,t,r){r[0]=.95047*t[0]/e[0],r[1]=1*t[1]/e[1],r[2]=1.08883*t[2]/e[2]}(r,o,s),p(t,s,n)}(n,I,E);var T=l;p(r,E,T),c[u]=255*m(T[0]),c[u+1]=255*m(T[1]),c[u+2]=255*m(T[2])}return function(e){function t(e,r,n,i){var c;if(u(this,t),c=o(this,s(t).call(this,\"CalRGB\",3)),!e)throw new a.FormatError(\"WhitePoint missing - required for color space CalRGB\");r=r||new Float32Array(3),n=n||new Float32Array([1,1,1]),i=i||new Float32Array([1,0,0,0,1,0,0,0,1]);var l=e[0],h=e[1],f=e[2];c.whitePoint=e;var d=r[0],g=r[1],p=r[2];if(c.blackPoint=r,c.GR=n[0],c.GG=n[1],c.GB=n[2],c.MXA=i[0],c.MYA=i[1],c.MZA=i[2],c.MXB=i[3],c.MYB=i[4],c.MZB=i[5],c.MXC=i[6],c.MYC=i[7],c.MZC=i[8],l<0||f<0||1!==h)throw new a.FormatError(\"Invalid WhitePoint components for \".concat(c.name)+\", no fallback available\");return(d<0||g<0||p<0)&&((0,a.info)(\"Invalid BlackPoint for \".concat(c.name,\" [\").concat(d,\", \").concat(g,\", \").concat(p,\"], \")+\"falling back to default.\"),c.blackPoint=new Float32Array(3)),(c.GR<0||c.GG<0||c.GB<0)&&((0,a.info)(\"Invalid Gamma [\".concat(c.GR,\", \").concat(c.GG,\", \").concat(c.GB,\"] for \")+\"\".concat(c.name,\", falling back to default.\")),c.GR=c.GG=c.GB=1),c}return c(t,d),f(t,[{key:\"getRgbItem\",value:function(e,t,r,a){y(this,e,t,r,a,1)}},{key:\"getRgbBuffer\",value:function(e,t,r,a,n,i,o){for(var s=1/((1<<i)-1),c=0;c<r;++c)y(this,e,t,a,n,s),t+=3,n+=3+o}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)/3|0}}]),t}()}(),S=function(){function e(e){return e>=6/29?e*e*e:108/841*(e-4/29)}function t(e,t,r,a){return r+e*(a-r)/t}function r(r,a,n,i,o,s){var c=a[n],l=a[n+1],u=a[n+2];!1!==i&&(c=t(c,i,0,100),l=t(l,i,r.amin,r.amax),u=t(u,i,r.bmin,r.bmax));var h,f,d,g=(c+16)/116,p=g+(l=l>r.amax?r.amax:l<r.amin?r.amin:l)/500,m=g-(u=u>r.bmax?r.bmax:u<r.bmin?r.bmin:u)/200,v=r.XW*e(p),b=r.YW*e(g),y=r.ZW*e(m);r.ZW<1?(h=3.1339*v+-1.617*b+-.4906*y,f=-.9785*v+1.916*b+.0333*y,d=.072*v+-.229*b+1.4057*y):(h=3.2406*v+-1.5372*b+-.4986*y,f=-.9689*v+1.8758*b+.0415*y,d=.0557*v+-.204*b+1.057*y),o[s]=255*Math.sqrt(h),o[s+1]=255*Math.sqrt(f),o[s+2]=255*Math.sqrt(d)}return function(e){function t(e,r,n){var i;if(u(this,t),i=o(this,s(t).call(this,\"Lab\",3)),!e)throw new a.FormatError(\"WhitePoint missing - required for color space Lab\");if(r=r||[0,0,0],n=n||[-100,100,-100,100],i.XW=e[0],i.YW=e[1],i.ZW=e[2],i.amin=n[0],i.amax=n[1],i.bmin=n[2],i.bmax=n[3],i.XB=r[0],i.YB=r[1],i.ZB=r[2],i.XW<0||i.ZW<0||1!==i.YW)throw new a.FormatError(\"Invalid WhitePoint components, no fallback available\");return(i.XB<0||i.YB<0||i.ZB<0)&&((0,a.info)(\"Invalid BlackPoint, falling back to default\"),i.XB=i.YB=i.ZB=0),(i.amin>i.amax||i.bmin>i.bmax)&&((0,a.info)(\"Invalid Range, falling back to defaults\"),i.amin=-100,i.amax=100,i.bmin=-100,i.bmax=100),i}return c(t,d),f(t,[{key:\"getRgbItem\",value:function(e,t,a,n){r(this,e,t,!1,a,n)}},{key:\"getRgbBuffer\",value:function(e,t,a,n,i,o,s){for(var c=(1<<o)-1,l=0;l<a;l++)r(this,e,t,c,n,i),t+=3,i+=3+s}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)/3|0}},{key:\"isDefaultDecode\",value:function(e,t){return!0}},{key:\"usesZeroToOneRange\",get:function(){return(0,a.shadow)(this,\"usesZeroToOneRange\",!1)}}]),t}()}()},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.AnnotationFactory=t.AnnotationBorderStyle=t.Annotation=void 0;var a=r(6),n=r(154),i=r(155),o=r(168),s=r(170),c=r(157);function l(e){return(l=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function u(e,t){return!t||\"object\"!==l(t)&&\"function\"!==typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function h(e,t,r){return(h=\"undefined\"!==typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var a=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(a){var n=Object.getOwnPropertyDescriptor(a,t);return n.get?n.get.call(r):n.value}})(e,t,r||e)}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function m(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function v(e,t,r){return t&&m(e.prototype,t),r&&m(e,r),e}var b=function(){function e(){p(this,e)}return v(e,null,[{key:\"create\",value:function(e,t,r,a){return r.ensure(this,\"_create\",[e,t,r,a])}},{key:\"_create\",value:function(e,t,r,n){var o=e.fetchIfRef(t);if((0,i.isDict)(o)){var s=(0,i.isRef)(t)?t.toString():\"annot_\"+n.createObjId(),c=o.get(\"Subtype\");c=(0,i.isName)(c)?c.name:null;var l={xref:e,dict:o,ref:(0,i.isRef)(t)?t:null,subtype:c,id:s,pdfManager:r};switch(c){case\"Link\":return new _(l);case\"Text\":return new A(l);case\"Widget\":var u=(0,a.getInheritableProperty)({dict:o,key:\"FT\"});switch(u=(0,i.isName)(u)?u.name:null){case\"Tx\":return new S(l);case\"Btn\":return new C(l);case\"Ch\":return new x(l)}return(0,a.warn)('Unimplemented widget field type \"'+u+'\", falling back to base field type.'),new k(l);case\"Popup\":return new P(l);case\"Line\":return new I(l);case\"Square\":return new E(l);case\"Circle\":return new T(l);case\"PolyLine\":return new O(l);case\"Polygon\":return new F(l);case\"Ink\":return new R(l);case\"Highlight\":return new B(l);case\"Underline\":return new M(l);case\"Squiggly\":return new D(l);case\"StrikeOut\":return new L(l);case\"Stamp\":return new N(l);case\"FileAttachment\":return new U(l);default:return c?(0,a.warn)('Unimplemented annotation type \"'+c+'\", falling back to base annotation.'):(0,a.warn)(\"Annotation is missing the required /Subtype.\"),new y(l)}}}}]),e}();t.AnnotationFactory=b;var y=function(){function e(t){p(this,e);var r=t.dict;this.setFlags(r.get(\"F\")),this.setRectangle(r.getArray(\"Rect\")),this.setColor(r.getArray(\"C\")),this.setBorderStyle(r),this.setAppearance(r),this.data={annotationFlags:this.flags,borderStyle:this.borderStyle,color:this.color,hasAppearance:!!this.appearance,id:t.id,rect:this.rectangle,subtype:t.subtype}}return v(e,[{key:\"_hasFlag\",value:function(e,t){return!!(e&t)}},{key:\"_isViewable\",value:function(e){return!this._hasFlag(e,a.AnnotationFlag.INVISIBLE)&&!this._hasFlag(e,a.AnnotationFlag.HIDDEN)&&!this._hasFlag(e,a.AnnotationFlag.NOVIEW)}},{key:\"_isPrintable\",value:function(e){return this._hasFlag(e,a.AnnotationFlag.PRINT)&&!this._hasFlag(e,a.AnnotationFlag.INVISIBLE)&&!this._hasFlag(e,a.AnnotationFlag.HIDDEN)}},{key:\"setFlags\",value:function(e){this.flags=Number.isInteger(e)&&e>0?e:0}},{key:\"hasFlag\",value:function(e){return this._hasFlag(this.flags,e)}},{key:\"setRectangle\",value:function(e){Array.isArray(e)&&4===e.length?this.rectangle=a.Util.normalizeRect(e):this.rectangle=[0,0,0,0]}},{key:\"setColor\",value:function(e){var t=new Uint8ClampedArray(3);if(Array.isArray(e))switch(e.length){case 0:this.color=null;break;case 1:o.ColorSpace.singletons.gray.getRgbItem(e,0,t,0),this.color=t;break;case 3:o.ColorSpace.singletons.rgb.getRgbItem(e,0,t,0),this.color=t;break;case 4:o.ColorSpace.singletons.cmyk.getRgbItem(e,0,t,0),this.color=t;break;default:this.color=t}else this.color=t}},{key:\"setBorderStyle\",value:function(e){if(this.borderStyle=new w,(0,i.isDict)(e))if(e.has(\"BS\")){var t=e.get(\"BS\"),r=t.get(\"Type\");r&&!(0,i.isName)(r,\"Border\")||(this.borderStyle.setWidth(t.get(\"W\")),this.borderStyle.setStyle(t.get(\"S\")),this.borderStyle.setDashArray(t.getArray(\"D\")))}else if(e.has(\"Border\")){var a=e.getArray(\"Border\");Array.isArray(a)&&a.length>=3&&(this.borderStyle.setHorizontalCornerRadius(a[0]),this.borderStyle.setVerticalCornerRadius(a[1]),this.borderStyle.setWidth(a[2]),4===a.length&&this.borderStyle.setDashArray(a[3]))}else this.borderStyle.setWidth(0)}},{key:\"setAppearance\",value:function(e){this.appearance=null;var t=e.get(\"AP\");if((0,i.isDict)(t)){var r=t.get(\"N\");if((0,i.isStream)(r))this.appearance=r;else if((0,i.isDict)(r)){var a=e.get(\"AS\");(0,i.isName)(a)&&r.has(a.name)&&(this.appearance=r.get(a.name))}}}},{key:\"_preparePopup\",value:function(e){e.has(\"C\")||(this.data.color=null),this.data.hasPopup=e.has(\"Popup\"),this.data.title=(0,a.stringToPDFString)(e.get(\"T\")||\"\"),this.data.contents=(0,a.stringToPDFString)(e.get(\"Contents\")||\"\")}},{key:\"loadResources\",value:function(e){return this.appearance.dict.getAsync(\"Resources\").then(function(t){if(t)return new n.ObjectLoader(t,e,t.xref).load().then(function(){return t})})}},{key:\"getOperatorList\",value:function(e,t,r){var n=this;if(!this.appearance)return Promise.resolve(new s.OperatorList);var i=this.data,o=this.appearance.dict,c=this.loadResources([\"ExtGState\",\"ColorSpace\",\"Pattern\",\"Shading\",\"XObject\",\"Font\"]),l=o.getArray(\"BBox\")||[0,0,1,1],u=o.getArray(\"Matrix\")||[1,0,0,1,0,0],h=function(e,t,r){var n=a.Util.getAxialAlignedBoundingBox(t,r),i=n[0],o=n[1],s=n[2],c=n[3];if(i===s||o===c)return[1,0,0,1,e[0],e[1]];var l=(e[2]-e[0])/(s-i),u=(e[3]-e[1])/(c-o);return[l,0,0,u,e[0]-i*l,e[1]-o*u]}(i.rect,l,u);return c.then(function(r){var o=new s.OperatorList;return o.addOp(a.OPS.beginAnnotation,[i.rect,h,u]),e.getOperatorList({stream:n.appearance,task:t,resources:r,operatorList:o}).then(function(){return o.addOp(a.OPS.endAnnotation,[]),n.appearance.reset(),o})})}},{key:\"viewable\",get:function(){return 0===this.flags||this._isViewable(this.flags)}},{key:\"printable\",get:function(){return 0!==this.flags&&this._isPrintable(this.flags)}}]),e}();t.Annotation=y;var w=function(){function e(){p(this,e),this.width=1,this.style=a.AnnotationBorderStyleType.SOLID,this.dashArray=[3],this.horizontalCornerRadius=0,this.verticalCornerRadius=0}return v(e,[{key:\"setWidth\",value:function(e){(0,i.isName)(e)?this.width=0:Number.isInteger(e)&&(this.width=e)}},{key:\"setStyle\",value:function(e){if((0,i.isName)(e))switch(e.name){case\"S\":this.style=a.AnnotationBorderStyleType.SOLID;break;case\"D\":this.style=a.AnnotationBorderStyleType.DASHED;break;case\"B\":this.style=a.AnnotationBorderStyleType.BEVELED;break;case\"I\":this.style=a.AnnotationBorderStyleType.INSET;break;case\"U\":this.style=a.AnnotationBorderStyleType.UNDERLINE}}},{key:\"setDashArray\",value:function(e){if(Array.isArray(e)&&e.length>0){for(var t=!0,r=!0,a=0,n=e.length;a<n;a++){var i=e[a];if(!(+i>=0)){t=!1;break}i>0&&(r=!1)}t&&!r?this.dashArray=e:this.width=0}else e&&(this.width=0)}},{key:\"setHorizontalCornerRadius\",value:function(e){Number.isInteger(e)&&(this.horizontalCornerRadius=e)}},{key:\"setVerticalCornerRadius\",value:function(e){Number.isInteger(e)&&(this.verticalCornerRadius=e)}}]),e}();t.AnnotationBorderStyle=w;var k=function(e){function t(e){var r;p(this,t),r=u(this,f(t).call(this,e));var n=e.dict,o=r.data;o.annotationType=a.AnnotationType.WIDGET,o.fieldName=r._constructFieldName(n),o.fieldValue=(0,a.getInheritableProperty)({dict:n,key:\"V\",getArray:!0}),o.alternativeText=(0,a.stringToPDFString)(n.get(\"TU\")||\"\"),o.defaultAppearance=(0,a.getInheritableProperty)({dict:n,key:\"DA\"})||\"\";var s=(0,a.getInheritableProperty)({dict:n,key:\"FT\"});return o.fieldType=(0,i.isName)(s)?s.name:null,r.fieldResources=(0,a.getInheritableProperty)({dict:n,key:\"DR\"})||i.Dict.empty,o.fieldFlags=(0,a.getInheritableProperty)({dict:n,key:\"Ff\"}),(!Number.isInteger(o.fieldFlags)||o.fieldFlags<0)&&(o.fieldFlags=0),o.readOnly=r.hasFieldFlag(a.AnnotationFieldFlag.READONLY),\"Sig\"===o.fieldType&&(o.fieldValue=null,r.setFlags(a.AnnotationFlag.HIDDEN)),r}return d(t,y),v(t,[{key:\"_constructFieldName\",value:function(e){if(!e.has(\"T\")&&!e.has(\"Parent\"))return(0,a.warn)(\"Unknown field name, falling back to empty field name.\"),\"\";if(!e.has(\"Parent\"))return(0,a.stringToPDFString)(e.get(\"T\"));var t=[];e.has(\"T\")&&t.unshift((0,a.stringToPDFString)(e.get(\"T\")));for(var r=e;r.has(\"Parent\")&&(r=r.get(\"Parent\"),(0,i.isDict)(r));)r.has(\"T\")&&t.unshift((0,a.stringToPDFString)(r.get(\"T\")));return t.join(\".\")}},{key:\"hasFieldFlag\",value:function(e){return!!(this.data.fieldFlags&e)}},{key:\"getOperatorList\",value:function(e,r,a){return a?Promise.resolve(new s.OperatorList):h(f(t.prototype),\"getOperatorList\",this).call(this,e,r,a)}}]),t}(),S=function(e){function t(e){var r;p(this,t),r=u(this,f(t).call(this,e));var n=e.dict;r.data.fieldValue=(0,a.stringToPDFString)(r.data.fieldValue||\"\");var i=(0,a.getInheritableProperty)({dict:n,key:\"Q\"});(!Number.isInteger(i)||i<0||i>2)&&(i=null),r.data.textAlignment=i;var o=(0,a.getInheritableProperty)({dict:n,key:\"MaxLen\"});return(!Number.isInteger(o)||o<0)&&(o=null),r.data.maxLen=o,r.data.multiLine=r.hasFieldFlag(a.AnnotationFieldFlag.MULTILINE),r.data.comb=r.hasFieldFlag(a.AnnotationFieldFlag.COMB)&&!r.hasFieldFlag(a.AnnotationFieldFlag.MULTILINE)&&!r.hasFieldFlag(a.AnnotationFieldFlag.PASSWORD)&&!r.hasFieldFlag(a.AnnotationFieldFlag.FILESELECT)&&null!==r.data.maxLen,r}return d(t,k),v(t,[{key:\"getOperatorList\",value:function(e,r,n){if(n||this.appearance)return h(f(t.prototype),\"getOperatorList\",this).call(this,e,r,n);var i=new s.OperatorList;if(!this.data.defaultAppearance)return Promise.resolve(i);var o=new c.Stream((0,a.stringToBytes)(this.data.defaultAppearance));return e.getOperatorList({stream:o,task:r,resources:this.fieldResources,operatorList:i}).then(function(){return i})}}]),t}(),C=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.checkBox=!r.hasFieldFlag(a.AnnotationFieldFlag.RADIO)&&!r.hasFieldFlag(a.AnnotationFieldFlag.PUSHBUTTON),r.data.radioButton=r.hasFieldFlag(a.AnnotationFieldFlag.RADIO)&&!r.hasFieldFlag(a.AnnotationFieldFlag.PUSHBUTTON),r.data.pushButton=r.hasFieldFlag(a.AnnotationFieldFlag.PUSHBUTTON),r.data.checkBox?r._processCheckBox(e):r.data.radioButton?r._processRadioButton(e):r.data.pushButton?r._processPushButton(e):(0,a.warn)(\"Invalid field flags for button widget annotation\"),r}return d(t,k),v(t,[{key:\"_processCheckBox\",value:function(e){(0,i.isName)(this.data.fieldValue)&&(this.data.fieldValue=this.data.fieldValue.name);var t=e.dict.get(\"AP\");if((0,i.isDict)(t)){var r=t.get(\"D\");if((0,i.isDict)(r)){var a=r.getKeys();2===a.length&&(this.data.exportValue=\"Off\"===a[0]?a[1]:a[0])}}}},{key:\"_processRadioButton\",value:function(e){this.data.fieldValue=this.data.buttonValue=null;var t=e.dict.get(\"Parent\");if((0,i.isDict)(t)&&t.has(\"V\")){var r=t.get(\"V\");(0,i.isName)(r)&&(this.data.fieldValue=r.name)}var a=e.dict.get(\"AP\");if((0,i.isDict)(a)){var n=a.get(\"N\");if((0,i.isDict)(n))for(var o=n.getKeys(),s=0,c=o.length;s<c;s++)if(\"Off\"!==o[s]){this.data.buttonValue=o[s];break}}}},{key:\"_processPushButton\",value:function(e){e.dict.has(\"A\")?n.Catalog.parseDestDictionary({destDict:e.dict,resultObj:this.data,docBaseUrl:e.pdfManager.docBaseUrl}):(0,a.warn)(\"Push buttons without action dictionaries are not supported\")}}]),t}(),x=function(e){function t(e){var r;p(this,t),(r=u(this,f(t).call(this,e))).data.options=[];var n=(0,a.getInheritableProperty)({dict:e.dict,key:\"Opt\"});if(Array.isArray(n))for(var i=e.xref,o=0,s=n.length;o<s;o++){var c=i.fetchIfRef(n[o]),l=Array.isArray(c);r.data.options[o]={exportValue:l?i.fetchIfRef(c[0]):c,displayValue:(0,a.stringToPDFString)(l?i.fetchIfRef(c[1]):c)}}return Array.isArray(r.data.fieldValue)||(r.data.fieldValue=[r.data.fieldValue]),r.data.combo=r.hasFieldFlag(a.AnnotationFieldFlag.COMBO),r.data.multiSelect=r.hasFieldFlag(a.AnnotationFieldFlag.MULTISELECT),r}return d(t,k),t}(),A=function(e){function t(e){var r;p(this,t);return(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.TEXT,r.data.hasAppearance?r.data.name=\"NoIcon\":(r.data.rect[1]=r.data.rect[3]-22,r.data.rect[2]=r.data.rect[0]+22,r.data.name=e.dict.has(\"Name\")?e.dict.get(\"Name\").name:\"Note\"),r._preparePopup(e.dict),r}return d(t,y),t}(),_=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.LINK,n.Catalog.parseDestDictionary({destDict:e.dict,resultObj:r.data,docBaseUrl:e.pdfManager.docBaseUrl}),r}return d(t,y),t}(),P=function(e){function t(e){var r;p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.POPUP;var n=e.dict,o=n.get(\"Parent\");if(!o)return(0,a.warn)(\"Popup annotation has a missing or invalid parent annotation.\"),u(r);var s=o.get(\"Subtype\");if(r.data.parentType=(0,i.isName)(s)?s.name:null,r.data.parentId=n.getRaw(\"Parent\").toString(),r.data.title=(0,a.stringToPDFString)(o.get(\"T\")||\"\"),r.data.contents=(0,a.stringToPDFString)(o.get(\"Contents\")||\"\"),o.has(\"C\")?(r.setColor(o.getArray(\"C\")),r.data.color=r.color):r.data.color=null,!r.viewable){var c=o.get(\"F\");r._isViewable(c)&&r.setFlags(c)}return r}return d(t,y),t}(),I=function(e){function t(e){var r;p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.LINE;var n=e.dict;return r.data.lineCoordinates=a.Util.normalizeRect(n.getArray(\"L\")),r._preparePopup(n),r}return d(t,y),t}(),E=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.SQUARE,r._preparePopup(e.dict),r}return d(t,y),t}(),T=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.CIRCLE,r._preparePopup(e.dict),r}return d(t,y),t}(),O=function(e){function t(e){var r;p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.POLYLINE;var n=e.dict,i=n.getArray(\"Vertices\");r.data.vertices=[];for(var o=0,s=i.length;o<s;o+=2)r.data.vertices.push({x:i[o],y:i[o+1]});return r._preparePopup(n),r}return d(t,y),t}(),F=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.POLYGON,r}return d(t,O),t}(),R=function(e){function t(e){var r;p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.INK;var n=e.dict,i=e.xref,o=n.getArray(\"InkList\");r.data.inkLists=[];for(var s=0,c=o.length;s<c;++s){r.data.inkLists.push([]);for(var l=0,h=o[s].length;l<h;l+=2)r.data.inkLists[s].push({x:i.fetchIfRef(o[s][l]),y:i.fetchIfRef(o[s][l+1])})}return r._preparePopup(n),r}return d(t,y),t}(),B=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.HIGHLIGHT,r._preparePopup(e.dict),r}return d(t,y),t}(),M=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.UNDERLINE,r._preparePopup(e.dict),r}return d(t,y),t}(),D=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.SQUIGGLY,r._preparePopup(e.dict),r}return d(t,y),t}(),L=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.STRIKEOUT,r._preparePopup(e.dict),r}return d(t,y),t}(),N=function(e){function t(e){var r;return p(this,t),(r=u(this,f(t).call(this,e))).data.annotationType=a.AnnotationType.STAMP,r._preparePopup(e.dict),r}return d(t,y),t}(),U=function(e){function t(e){var r;p(this,t),r=u(this,f(t).call(this,e));var i=new n.FileSpec(e.dict.get(\"FS\"),e.xref);return r.data.annotationType=a.AnnotationType.FILEATTACHMENT,r.data.file=i.serializable,r._preparePopup(e.dict),r}return d(t,y),t}()},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.OperatorList=void 0;var a=r(6),n=function(){function e(e,t,r,a,n){for(var i=e,o=0,s=t.length-1;o<s;o++){var c=t[o];i=i[c]||(i[c]=[])}i[t[t.length-1]]={checkFn:r,iterateFn:a,processFn:n}}var t=[];function r(e){this.queue=e,this.state=null,this.context={iCurr:0,fnArray:e.fnArray,argsArray:e.argsArray},this.match=null,this.lastProcessed=0}return e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintInlineImageXObject,a.OPS.restore],null,function(e,t){var r=e.fnArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:return r[t]===a.OPS.transform;case 2:return r[t]===a.OPS.paintInlineImageXObject;case 3:return r[t]===a.OPS.restore}},function(e,t){var r=e.fnArray,n=e.argsArray,i=e.iCurr,o=i-3,s=i-2,c=i-1,l=Math.min(Math.floor((t-o)/4),200);if(l<10)return t-(t-o)%4;var u,h=0,f=[],d=0,g=1,p=1;for(u=0;u<l;u++){var m=n[s+(u<<2)],v=n[c+(u<<2)][0];g+v.width>1e3&&(h=Math.max(h,g),p+=d+2,g=0,d=0),f.push({transform:m,x:g,y:p,w:v.width,h:v.height}),g+=v.width+2,d=Math.max(d,v.height)}var b=Math.max(h,g)+1,y=p+d+1,w=new Uint8ClampedArray(b*y*4),k=b<<2;for(u=0;u<l;u++){var S=n[c+(u<<2)][0].data,C=f[u].w<<2,x=0,A=f[u].x+f[u].y*b<<2;w.set(S.subarray(0,C),A-k);for(var _=0,P=f[u].h;_<P;_++)w.set(S.subarray(x,x+C),A),x+=C,A+=k;for(w.set(S.subarray(x-C,x),A);A>=0;)S[A-4]=S[A],S[A-3]=S[A+1],S[A-2]=S[A+2],S[A-1]=S[A+3],S[A+C]=S[A+C-4],S[A+C+1]=S[A+C-3],S[A+C+2]=S[A+C-2],S[A+C+3]=S[A+C-1],A-=k}return r.splice(o,4*l,a.OPS.paintInlineImageXObjectGroup),n.splice(o,4*l,[{width:b,height:y,kind:a.ImageKind.RGBA_32BPP,data:w},f]),o+1}),e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintImageMaskXObject,a.OPS.restore],null,function(e,t){var r=e.fnArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:return r[t]===a.OPS.transform;case 2:return r[t]===a.OPS.paintImageMaskXObject;case 3:return r[t]===a.OPS.restore}},function(e,t){var r,n=e.fnArray,i=e.argsArray,o=e.iCurr,s=o-3,c=o-2,l=o-1,u=Math.floor((t-s)/4);if((u=function(e,t,r,n){for(var i=e+2,o=0;o<t;o++){var s=n[i+4*o],c=1===s.length&&s[0];if(!c||1!==c.width||1!==c.height||c.data.length&&(1!==c.data.length||0!==c.data[0]))break;r[i+4*o]=a.OPS.paintSolidColorImageMask}return t-o}(s,u,n,i))<10)return t-(t-s)%4;var h,f,d=!1,g=i[l][0];if(0===i[c][1]&&0===i[c][2]){d=!0;var p=i[c][0],m=i[c][3];h=c+4;var v=l+4;for(r=1;r<u;r++,h+=4,v+=4)if(f=i[h],i[v][0]!==g||f[0]!==p||0!==f[1]||0!==f[2]||f[3]!==m){r<10?d=!1:u=r;break}}if(d){u=Math.min(u,1e3);var b=new Float32Array(2*u);for(h=c,r=0;r<u;r++,h+=4)f=i[h],b[r<<1]=f[4],b[1+(r<<1)]=f[5];n.splice(s,4*u,a.OPS.paintImageMaskXObjectRepeat),i.splice(s,4*u,[g,p,m,b])}else{u=Math.min(u,100);var y=[];for(r=0;r<u;r++){f=i[c+(r<<2)];var w=i[l+(r<<2)][0];y.push({data:w.data,width:w.width,height:w.height,transform:f})}n.splice(s,4*u,a.OPS.paintImageMaskXObjectGroup),i.splice(s,4*u,[y])}return s+1}),e(t,[a.OPS.save,a.OPS.transform,a.OPS.paintImageXObject,a.OPS.restore],function(e){var t=e.argsArray,r=e.iCurr-2;return 0===t[r][1]&&0===t[r][2]},function(e,t){var r=e.fnArray,n=e.argsArray;switch((t-(e.iCurr-3))%4){case 0:return r[t]===a.OPS.save;case 1:if(r[t]!==a.OPS.transform)return!1;var i=e.iCurr-2,o=n[i][0],s=n[i][3];return n[t][0]===o&&0===n[t][1]&&0===n[t][2]&&n[t][3]===s;case 2:if(r[t]!==a.OPS.paintImageXObject)return!1;var c=n[e.iCurr-1][0];return n[t][0]===c;case 3:return r[t]===a.OPS.restore}},function(e,t){var r=e.fnArray,n=e.argsArray,i=e.iCurr,o=i-3,s=i-2,c=n[i-1][0],l=n[s][0],u=n[s][3],h=Math.min(Math.floor((t-o)/4),1e3);if(h<3)return t-(t-o)%4;for(var f=new Float32Array(2*h),d=s,g=0;g<h;g++,d+=4){var p=n[d];f[g<<1]=p[4],f[1+(g<<1)]=p[5]}var m=[c,l,u,f];return r.splice(o,4*h,a.OPS.paintImageXObjectRepeat),n.splice(o,4*h,m),o+1}),e(t,[a.OPS.beginText,a.OPS.setFont,a.OPS.setTextMatrix,a.OPS.showText,a.OPS.endText],null,function(e,t){var r=e.fnArray,n=e.argsArray;switch((t-(e.iCurr-4))%5){case 0:return r[t]===a.OPS.beginText;case 1:return r[t]===a.OPS.setFont;case 2:return r[t]===a.OPS.setTextMatrix;case 3:if(r[t]!==a.OPS.showText)return!1;var i=e.iCurr-3,o=n[i][0],s=n[i][1];return n[t][0]===o&&n[t][1]===s;case 4:return r[t]===a.OPS.endText}},function(e,t){var r=e.fnArray,a=e.argsArray,n=e.iCurr,i=n-4,o=n-3,s=n-2,c=n-1,l=n,u=a[o][0],h=a[o][1],f=Math.min(Math.floor((t-i)/5),1e3);if(f<3)return t-(t-i)%5;var d=i;i>=4&&r[i-4]===r[o]&&r[i-3]===r[s]&&r[i-2]===r[c]&&r[i-1]===r[l]&&a[i-4][0]===u&&a[i-4][1]===h&&(f++,d-=5);for(var g=d+4,p=1;p<f;p++)r.splice(g,3),a.splice(g,3),g+=2;return g+1}),r.prototype={_optimize:function(){var e=this.queue.fnArray,r=this.lastProcessed,a=e.length,n=this.state,i=this.match;if(n||i||r+1!==a||t[e[r]]){for(var o=this.context;r<a;){if(i){if((0,i.iterateFn)(o,r)){r++;continue}if(r=(0,i.processFn)(o,r+1),i=null,n=null,r>=(a=e.length))break}(n=(n||t)[e[r]])&&!Array.isArray(n)?(o.iCurr=r,r++,!n.checkFn||(0,n.checkFn)(o)?(i=n,n=null):n=null):r++}this.state=n,this.match=i,this.lastProcessed=r}else this.lastProcessed=a},push:function(e,t){this.queue.fnArray.push(e),this.queue.argsArray.push(t),this._optimize()},flush:function(){for(;this.match;){var e=this.queue.fnArray.length;this.lastProcessed=(0,this.match.processFn)(this.context,e),this.match=null,this.state=null,this._optimize()}},reset:function(){this.state=null,this.match=null,this.lastProcessed=0}},r}(),i=function(){function e(e){this.queue=e}return e.prototype={push:function(e,t){this.queue.fnArray.push(e),this.queue.argsArray.push(t)},flush:function(){}},e}(),o=function(){function e(e,t,r){this.messageHandler=t,this.fnArray=[],this.argsArray=[],t&&\"oplist\"!==this.intent?this.optimizer=new n(this):this.optimizer=new i(this),this.dependencies=Object.create(null),this._totalLength=0,this.pageIndex=r,this.intent=e,this.weight=0}return e.prototype={get length(){return this.argsArray.length},get totalLength(){return this._totalLength+this.length},addOp:function(e,t){this.optimizer.push(e,t),this.weight++,this.messageHandler&&(this.weight>=1e3?this.flush():this.weight>=995&&(e===a.OPS.restore||e===a.OPS.endText)&&this.flush())},addDependency:function(e){e in this.dependencies||(this.dependencies[e]=!0,this.addOp(a.OPS.dependency,[e]))},addDependencies:function(e){for(var t in e)this.addDependency(t)},addOpList:function(e){Object.assign(this.dependencies,e.dependencies);for(var t=0,r=e.length;t<r;t++)this.addOp(e.fnArray[t],e.argsArray[t])},getIR:function(){return{fnArray:this.fnArray,argsArray:this.argsArray,length:this.length}},flush:function(e){this.optimizer.flush();var t=function(e){for(var t=[],r=e.fnArray,n=e.argsArray,i=0,o=e.length;i<o;i++)switch(r[i]){case a.OPS.paintInlineImageXObject:case a.OPS.paintInlineImageXObjectGroup:case a.OPS.paintImageMaskXObject:var s=n[i][0];s.cached||t.push(s.data.buffer)}return t}(this),r=this.length;this._totalLength+=r,this.messageHandler.send(\"RenderPageChunk\",{operatorList:{fnArray:this.fnArray,argsArray:this.argsArray,lastChunk:e,length:r},pageIndex:this.pageIndex,intent:this.intent},t),this.dependencies=Object.create(null),this.fnArray.length=0,this.argsArray.length=0,this.weight=0,this.optimizer.reset()}},e}();t.OperatorList=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PartialEvaluator=void 0;var a,n=(a=r(2))&&a.__esModule?a:{default:a},i=r(6),o=r(172),s=r(157),c=r(155),l=r(173),u=r(176),h=r(179),f=r(178),d=r(182),g=r(156),p=r(183),m=r(168),v=r(177),b=r(184),y=r(185),w=r(163),k=r(187),S=r(170),C=r(188);function x(e,t,r,a,n,i,o){try{var s=e[i](o),c=s.value}catch(l){return void r(l)}s.done?t(c):Promise.resolve(c).then(a,n)}var A=function(){var e={forceDataSchema:!1,maxImageSize:-1,disableFontFace:!1,nativeImageDecoderSupport:i.NativeImageDecoding.DECODE,ignoreErrors:!1,isEvalSupported:!0};function t(e){var t=e.xref,r=e.resources,a=e.handler,n=e.forceDataSchema,i=void 0!==n&&n,o=e.pdfFunctionFactory;this.xref=t,this.resources=r,this.handler=a,this.forceDataSchema=i,this.pdfFunctionFactory=o}function r(t){var r=this,a=t.pdfManager,o=t.xref,s=t.handler,c=t.pageIndex,l=t.idFactory,u=t.fontCache,h=t.builtInCMapCache,f=t.options,d=void 0===f?null:f,g=t.pdfFunctionFactory;this.pdfManager=a,this.xref=o,this.handler=s,this.pageIndex=c,this.idFactory=l,this.fontCache=u,this.builtInCMapCache=h,this.options=d||e,this.pdfFunctionFactory=g,this.fetchBuiltInCMap=function(){var e,t=(e=n.default.mark(function e(t){var a;return n.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!r.builtInCMapCache.has(t)){e.next=2;break}return e.abrupt(\"return\",r.builtInCMapCache.get(t));case 2:return e.next=4,r.handler.sendWithPromise(\"FetchBuiltInCMap\",{name:t});case 4:return(a=e.sent).compressionType!==i.CMapCompressionType.NONE&&r.builtInCMapCache.set(t,a),e.abrupt(\"return\",a);case 7:case\"end\":return e.stop()}},e,this)}),function(){var t=this,r=arguments;return new Promise(function(a,n){var i=e.apply(t,r);function o(e){x(i,a,n,o,s,\"next\",e)}function s(e){x(i,a,n,o,s,\"throw\",e)}o(void 0)})});return function(e){return t.apply(this,arguments)}}()}t.prototype={canDecode:function(e){return e instanceof w.JpegStream&&t.isDecodable(e,this.xref,this.resources,this.pdfFunctionFactory)},decode:function(e){var t=e.dict.get(\"ColorSpace\",\"CS\");return t=m.ColorSpace.parse(t,this.xref,this.resources,this.pdfFunctionFactory),this.handler.sendWithPromise(\"JpegDecode\",[e.getIR(this.forceDataSchema),t.numComps]).then(function(t){var r=t.data;t.width,t.height;return new s.Stream(r,0,r.length,e.dict)})}},t.isSupported=function(e,t,r,a){var n=e.dict;if(n.has(\"DecodeParms\")||n.has(\"DP\"))return!1;var i=m.ColorSpace.parse(n.get(\"ColorSpace\",\"CS\"),t,r,a);return(\"DeviceGray\"===i.name||\"DeviceRGB\"===i.name)&&i.isDefaultDecode(n.getArray(\"Decode\",\"D\"))},t.isDecodable=function(e,t,r,a){var n=e.dict;if(n.has(\"DecodeParms\")||n.has(\"DP\"))return!1;var i=m.ColorSpace.parse(n.get(\"ColorSpace\",\"CS\"),t,r,a),o=n.get(\"BitsPerComponent\",\"BPC\")||1;return(1===i.numComps||3===i.numComps)&&i.isDefaultDecode(n.getArray(\"Decode\",\"D\"),o)};function a(){this.reset()}function g(e){if(!(0,c.isName)(e))return\"source-over\";switch(e.name){case\"Normal\":case\"Compatible\":return\"source-over\";case\"Multiply\":return\"multiply\";case\"Screen\":return\"screen\";case\"Overlay\":return\"overlay\";case\"Darken\":return\"darken\";case\"Lighten\":return\"lighten\";case\"ColorDodge\":return\"color-dodge\";case\"ColorBurn\":return\"color-burn\";case\"HardLight\":return\"hard-light\";case\"SoftLight\":return\"soft-light\";case\"Difference\":return\"difference\";case\"Exclusion\":return\"exclusion\";case\"Hue\":return\"hue\";case\"Saturation\":return\"saturation\";case\"Color\":return\"color\";case\"Luminosity\":return\"luminosity\"}return(0,i.warn)(\"Unsupported blend mode: \"+e.name),\"source-over\"}a.prototype={check:function(){return!(++this.checked<100)&&(this.checked=0,this.endTime<=Date.now())},reset:function(){this.endTime=Date.now()+20,this.checked=0}};var A=Promise.resolve();return r.prototype={clone:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=Object.create(this);return r.options=t,r},hasBlendModes:function(e){if(!(0,c.isDict)(e))return!1;var t=Object.create(null);e.objId&&(t[e.objId]=!0);for(var r=[e],a=this.xref;r.length;){var n,i,o,s=r.shift(),l=s.get(\"ExtGState\");if((0,c.isDict)(l)){var u=l.getKeys();for(i=0,o=u.length;i<o;i++){n=u[i];var h=l.get(n).get(\"BM\");if((0,c.isName)(h)&&\"Normal\"!==h.name)return!0}}var f=s.get(\"XObject\");if((0,c.isDict)(f)){var d=f.getKeys();for(i=0,o=d.length;i<o;i++){n=d[i];var g=f.getRaw(n);if((0,c.isRef)(g)){if(t[g.toString()])continue;g=a.fetch(g)}if((0,c.isStream)(g)){if(g.dict.objId){if(t[g.dict.objId])continue;t[g.dict.objId]=!0}var p=g.dict.get(\"Resources\");!(0,c.isDict)(p)||p.objId&&t[p.objId]||(r.push(p),p.objId&&(t[p.objId]=!0))}}}}return!1},buildFormXObject:function(e,t,r,a,n,o){var s=t.dict,l=s.getArray(\"Matrix\"),u=s.getArray(\"BBox\");u=Array.isArray(u)&&4===u.length?i.Util.normalizeRect(u):null;var h=s.get(\"Group\");if(h){var f={matrix:l,bbox:u,smask:r,isolated:!1,knockout:!1},d=h.get(\"S\"),g=null;(0,c.isName)(d,\"Transparency\")&&(f.isolated=h.get(\"I\")||!1,f.knockout=h.get(\"K\")||!1,h.has(\"CS\")&&(g=m.ColorSpace.parse(h.get(\"CS\"),this.xref,e,this.pdfFunctionFactory))),r&&r.backdrop&&(g=g||m.ColorSpace.singletons.rgb,r.backdrop=g.getRgb(r.backdrop,0)),a.addOp(i.OPS.beginGroup,[f])}return a.addOp(i.OPS.paintFormXObjectBegin,[l,u]),this.getOperatorList({stream:t,task:n,resources:s.get(\"Resources\")||e,operatorList:a,initialState:o}).then(function(){a.addOp(i.OPS.paintFormXObjectEnd,[]),h&&a.addOp(i.OPS.endGroup,[f])})},buildPaintImageXObject:function(e){var r=this,a=e.resources,n=e.image,o=e.isInline,c=void 0!==o&&o,l=e.operatorList,u=e.cacheKey,h=e.imageCache,f=e.forceDisableNativeImageDecoder,d=void 0!==f&&f,g=n.dict,p=g.get(\"Width\",\"W\"),m=g.get(\"Height\",\"H\");if(!p||!(0,i.isNum)(p)||!m||!(0,i.isNum)(m))return(0,i.warn)(\"Image dimensions are missing, or not numbers.\"),Promise.resolve();var v,b,y=this.options.maxImageSize;if(-1!==y&&p*m>y)return(0,i.warn)(\"Image exceeded maximum allowed size and was removed.\"),Promise.resolve();if(g.get(\"ImageMask\",\"IM\")||!1){var k=g.get(\"Width\",\"W\"),S=g.get(\"Height\",\"H\"),x=k+7>>3,A=n.getBytes(x*S,!0),_=g.getArray(\"Decode\",\"D\");return(v=C.PDFImage.createMask({imgArray:A,width:k,height:S,imageIsFromDecodeStream:n instanceof s.DecodeStream,inverseDecode:!!_&&_[0]>0})).cached=!0,b=[v],l.addOp(i.OPS.paintImageMaskXObject,b),u&&(h[u]={fn:i.OPS.paintImageMaskXObject,args:b}),Promise.resolve()}var P=g.get(\"SMask\",\"SM\")||!1,I=g.get(\"Mask\")||!1;if(c&&!P&&!I&&!(n instanceof w.JpegStream)&&p+m<200)return v=new C.PDFImage({xref:this.xref,res:a,image:n,isInline:c,pdfFunctionFactory:this.pdfFunctionFactory}).createImageData(!0),l.addOp(i.OPS.paintInlineImageXObject,[v]),Promise.resolve();var E=d?i.NativeImageDecoding.NONE:this.options.nativeImageDecoderSupport,T=\"img_\"+this.idFactory.createObjId();if(E!==i.NativeImageDecoding.NONE&&!P&&!I&&n instanceof w.JpegStream&&t.isSupported(n,this.xref,a,this.pdfFunctionFactory))return this.handler.sendWithPromise(\"obj\",[T,this.pageIndex,\"JpegStream\",n.getIR(this.options.forceDataSchema)]).then(function(){l.addDependency(T),b=[T,p,m],l.addOp(i.OPS.paintJpegXObject,b),u&&(h[u]={fn:i.OPS.paintJpegXObject,args:b})},function(e){return(0,i.warn)(\"Native JPEG decoding failed -- trying to recover: \"+(e&&e.message)),r.buildPaintImageXObject({resources:a,image:n,isInline:c,operatorList:l,cacheKey:u,imageCache:h,forceDisableNativeImageDecoder:!0})});var O=null;return E===i.NativeImageDecoding.DECODE&&(n instanceof w.JpegStream||I instanceof w.JpegStream||P instanceof w.JpegStream)&&(O=new t({xref:this.xref,resources:a,handler:this.handler,forceDataSchema:this.options.forceDataSchema,pdfFunctionFactory:this.pdfFunctionFactory})),l.addDependency(T),b=[T,p,m],C.PDFImage.buildImage({handler:this.handler,xref:this.xref,res:a,image:n,isInline:c,nativeDecoder:O,pdfFunctionFactory:this.pdfFunctionFactory}).then(function(e){var t=e.createImageData(!1);r.handler.send(\"obj\",[T,r.pageIndex,\"Image\",t],[t.data.buffer])}).catch(function(e){(0,i.warn)(\"Unable to decode image: \"+e),r.handler.send(\"obj\",[T,r.pageIndex,\"Image\",null])}),l.addOp(i.OPS.paintImageXObject,b),u&&(h[u]={fn:i.OPS.paintImageXObject,args:b}),Promise.resolve()},handleSMask:function(e,t,r,a,n){var i=e.get(\"G\"),o={subtype:e.get(\"S\").name,backdrop:e.get(\"BC\")},s=e.get(\"TR\");if((0,y.isPDFFunction)(s)){for(var c=this.pdfFunctionFactory.create(s),l=new Uint8Array(256),u=new Float32Array(1),h=0;h<256;h++)u[0]=h/255,c(u,0,u,0),l[h]=255*u[0]|0;o.transferMap=l}return this.buildFormXObject(t,i,o,r,a,n.state.clone())},handleTilingType:function(e,t,r,a,n,o,s){var l=this,u=new S.OperatorList,h=[n.get(\"Resources\"),r],f=c.Dict.merge(this.xref,h);return this.getOperatorList({stream:a,task:s,resources:f,operatorList:u}).then(function(){return(0,d.getTilingPatternIR)({fnArray:u.fnArray,argsArray:u.argsArray},n,t)}).then(function(t){o.addDependencies(u.dependencies),o.addOp(e,t)},function(e){if(l.options.ignoreErrors)return l.handler.send(\"UnsupportedFeature\",{featureId:i.UNSUPPORTED_FEATURES.unknown}),void(0,i.warn)('handleTilingType - ignoring pattern: \"'.concat(e,'\".'));throw e})},handleSetFont:function(e,t,r,a,n,o){var s,c=this;return t&&(s=(t=t.slice())[0].name),this.loadFont(s,r,e).then(function(t){return t.font.isType3Font?t.loadType3Data(c,e,a,n).then(function(){return t}).catch(function(e){return c.handler.send(\"UnsupportedFeature\",{featureId:i.UNSUPPORTED_FEATURES.font}),new _(\"g_font_error\",new l.ErrorFont(\"Type3 font load error: \"+e),t.font)}):t}).then(function(e){return o.font=e.font,e.send(c.handler),e.loadedName})},handleText:function(e,t){var a=t.font,n=a.charsToGlyphs(e);a.data&&((!!(t.textRenderingMode&i.TextRenderingMode.ADD_TO_PATH_FLAG)||\"Pattern\"===t.fillColorSpace.name||a.disableFontFace||this.options.disableFontFace)&&r.buildFontPaths(a,n,this.handler));return n},setGState:function(e,t,r,a,n){for(var o=this,s=[],l=t.getKeys(),u=Promise.resolve(),h=function(){var h=l[f],d=t.get(h);switch(h){case\"Type\":break;case\"LW\":case\"LC\":case\"LJ\":case\"ML\":case\"D\":case\"RI\":case\"FL\":case\"CA\":case\"ca\":s.push([h,d]);break;case\"Font\":u=u.then(function(){return o.handleSetFont(e,null,d[0],r,a,n.state).then(function(e){r.addDependency(e),s.push([h,[e,d[1]]])})});break;case\"BM\":s.push([h,g(d)]);break;case\"SMask\":if((0,c.isName)(d,\"None\")){s.push([h,!1]);break}(0,c.isDict)(d)?(u=u.then(function(){return o.handleSMask(d,e,r,a,n)}),s.push([h,!0])):(0,i.warn)(\"Unsupported SMask type\");break;case\"OP\":case\"op\":case\"OPM\":case\"BG\":case\"BG2\":case\"UCR\":case\"UCR2\":case\"TR\":case\"TR2\":case\"HT\":case\"SM\":case\"SA\":case\"AIS\":case\"TK\":(0,i.info)(\"graphic state operator \"+h);break;default:(0,i.info)(\"Unknown graphic state operator \"+h)}},f=0,d=l.length;f<d;f++)h();return u.then(function(){s.length>0&&r.addOp(i.OPS.setGState,[s])})},loadFont:function(e,t,r){var a=this;function n(){return Promise.resolve(new _(\"g_font_error\",new l.ErrorFont(\"Font \"+e+\" is not available\"),t))}var o,s=this.xref;if(t){if(!(0,c.isRef)(t))throw new Error('The \"font\" object should be a reference.');o=t}else{var u=r.get(\"Font\");if(!u)return(0,i.warn)(\"fontRes not available\"),n();o=u.getRaw(e)}if(!o)return(0,i.warn)(\"fontRef not available\"),n();if(this.fontCache.has(o))return this.fontCache.get(o);if(t=s.fetchIfRef(o),!(0,c.isDict)(t))return n();if(t.translated)return t.translated;var h,f,d=(0,i.createPromiseCapability)(),g=this.preEvaluateFont(t),p=g.descriptor,m=(0,c.isRef)(o);if(m&&(h=o.toString()),(0,c.isDict)(p)){p.fontAliases||(p.fontAliases=Object.create(null));var v=p.fontAliases,b=g.hash;if(v[b]){var y=v[b].aliasRef;if(m&&y&&this.fontCache.has(y))return this.fontCache.putAlias(o,y),this.fontCache.get(o)}else v[b]={fontID:l.Font.getFontID()};m&&(v[b].aliasRef=o),h=v[b].fontID}m?this.fontCache.put(o,d.promise):(h||(h=this.idFactory.createObjId()),this.fontCache.put(\"id_\"+h,d.promise)),(0,i.assert)(h,'The \"fontID\" must be defined.'),t.loadedName=\"g_\"+this.pdfManager.docId+\"_f\"+h,t.translated=d.promise;try{f=this.translateFont(g)}catch(w){f=Promise.reject(w)}return f.then(function(e){void 0!==e.fontType&&(s.stats.fontTypes[e.fontType]=!0);d.resolve(new _(t.loadedName,e,t))}).catch(function(e){a.handler.send(\"UnsupportedFeature\",{featureId:i.UNSUPPORTED_FEATURES.font});try{var r=g.descriptor,n=r&&r.get(\"FontFile3\"),o=n&&n.get(\"Subtype\"),c=(0,l.getFontType)(g.type,o&&o.name);s.stats.fontTypes[c]=!0}catch(u){}d.resolve(new _(t.loadedName,new l.ErrorFont(e instanceof Error?e.message:e),t))}),d.promise},buildPath:function(e,t,r){var a=e.length-1;if(r||(r=[]),a<0||e.fnArray[a]!==i.OPS.constructPath)e.addOp(i.OPS.constructPath,[[t],r]);else{var n=e.argsArray[a];n[0].push(t),Array.prototype.push.apply(n[1],r)}},handleColorN:function(e,t,r,a,n,i,o){var s,l=r[r.length-1];if((0,c.isName)(l)&&(s=n.get(l.name))){var u=(0,c.isStream)(s)?s.dict:s,h=u.get(\"PatternType\");if(1===h){var f=a.base?a.base.getRgb(r,0):null;return this.handleTilingType(t,f,i,s,u,e,o)}if(2===h){var g=u.get(\"Shading\"),p=u.getArray(\"Matrix\");return s=d.Pattern.parseShading(g,p,this.xref,i,this.handler,this.pdfFunctionFactory),e.addOp(t,s.getIR()),Promise.resolve()}return Promise.reject(new Error(\"Unknown PatternType: \"+h))}return e.addOp(t,r),Promise.resolve()},getOperatorList:function(e){var t=this,r=e.stream,n=e.task,o=e.resources,s=e.operatorList,l=e.initialState,u=void 0===l?null:l;if(o=o||c.Dict.empty,u=u||new E,!s)throw new Error('getOperatorList: missing \"operatorList\" parameter');var h=this,f=this.xref,g=Object.create(null),p=o.get(\"XObject\")||c.Dict.empty,v=o.get(\"Pattern\")||c.Dict.empty,b=new P(u),y=new T(r,f,b),w=new a;function k(e){for(var t=0,r=y.savedStatesDepth;t<r;t++)s.addOp(i.OPS.restore,[])}return new Promise(function e(t,r){var a=function(a){a.then(function(){try{e(t,r)}catch(a){r(a)}},r)};n.ensureNotTerminated(),w.reset();for(var l,u,S,C,x={};!(l=w.check())&&(x.args=null,y.read(x));){var _=x.args,P=x.fn;switch(0|P){case i.OPS.paintXObject:var I=_[0].name;if(I&&void 0!==g[I]){s.addOp(g[I].fn,g[I].args),_=null;continue}return void a(new Promise(function(e,t){if(!I)throw new i.FormatError(\"XObject must be referred to by name.\");var r=p.get(I);if(!r)return s.addOp(P,_),void e();if(!(0,c.isStream)(r))throw new i.FormatError(\"XObject should be a stream\");var a=r.dict.get(\"Subtype\");if(!(0,c.isName)(a))throw new i.FormatError(\"XObject should have a Name subtype\");if(\"Form\"===a.name)return b.save(),void h.buildFormXObject(o,r,null,s,n,b.state.clone()).then(function(){b.restore(),e()},t);if(\"Image\"!==a.name){if(\"PS\"!==a.name)throw new i.FormatError(\"Unhandled XObject subtype \".concat(a.name));(0,i.info)(\"Ignored XObject subtype PS\"),e()}else h.buildPaintImageXObject({resources:o,image:r,operatorList:s,cacheKey:I,imageCache:g}).then(e,t)}).catch(function(e){if(h.options.ignoreErrors)return h.handler.send(\"UnsupportedFeature\",{featureId:i.UNSUPPORTED_FEATURES.unknown}),void(0,i.warn)('getOperatorList - ignoring XObject: \"'.concat(e,'\".'));throw e}));case i.OPS.setFont:var E=_[1];return void a(h.handleSetFont(o,_,null,s,n,b.state).then(function(e){s.addDependency(e),s.addOp(i.OPS.setFont,[e,E])}));case i.OPS.endInlineImage:var T=_[0].cacheKey;if(T){var O=g[T];if(void 0!==O){s.addOp(O.fn,O.args),_=null;continue}}return void a(h.buildPaintImageXObject({resources:o,image:_[0],isInline:!0,operatorList:s,cacheKey:T,imageCache:g}));case i.OPS.showText:_[0]=h.handleText(_[0],b.state);break;case i.OPS.showSpacedText:var F=_[0],R=[],B=F.length,M=b.state;for(u=0;u<B;++u){var D=F[u];(0,i.isString)(D)?Array.prototype.push.apply(R,h.handleText(D,M)):(0,i.isNum)(D)&&R.push(D)}_[0]=R,P=i.OPS.showText;break;case i.OPS.nextLineShowText:s.addOp(i.OPS.nextLine),_[0]=h.handleText(_[0],b.state),P=i.OPS.showText;break;case i.OPS.nextLineSetSpacingShowText:s.addOp(i.OPS.nextLine),s.addOp(i.OPS.setWordSpacing,[_.shift()]),s.addOp(i.OPS.setCharSpacing,[_.shift()]),_[0]=h.handleText(_[0],b.state),P=i.OPS.showText;break;case i.OPS.setTextRenderingMode:b.state.textRenderingMode=_[0];break;case i.OPS.setFillColorSpace:b.state.fillColorSpace=m.ColorSpace.parse(_[0],f,o,h.pdfFunctionFactory);continue;case i.OPS.setStrokeColorSpace:b.state.strokeColorSpace=m.ColorSpace.parse(_[0],f,o,h.pdfFunctionFactory);continue;case i.OPS.setFillColor:C=b.state.fillColorSpace,_=C.getRgb(_,0),P=i.OPS.setFillRGBColor;break;case i.OPS.setStrokeColor:C=b.state.strokeColorSpace,_=C.getRgb(_,0),P=i.OPS.setStrokeRGBColor;break;case i.OPS.setFillGray:b.state.fillColorSpace=m.ColorSpace.singletons.gray,_=m.ColorSpace.singletons.gray.getRgb(_,0),P=i.OPS.setFillRGBColor;break;case i.OPS.setStrokeGray:b.state.strokeColorSpace=m.ColorSpace.singletons.gray,_=m.ColorSpace.singletons.gray.getRgb(_,0),P=i.OPS.setStrokeRGBColor;break;case i.OPS.setFillCMYKColor:b.state.fillColorSpace=m.ColorSpace.singletons.cmyk,_=m.ColorSpace.singletons.cmyk.getRgb(_,0),P=i.OPS.setFillRGBColor;break;case i.OPS.setStrokeCMYKColor:b.state.strokeColorSpace=m.ColorSpace.singletons.cmyk,_=m.ColorSpace.singletons.cmyk.getRgb(_,0),P=i.OPS.setStrokeRGBColor;break;case i.OPS.setFillRGBColor:b.state.fillColorSpace=m.ColorSpace.singletons.rgb,_=m.ColorSpace.singletons.rgb.getRgb(_,0);break;case i.OPS.setStrokeRGBColor:b.state.strokeColorSpace=m.ColorSpace.singletons.rgb,_=m.ColorSpace.singletons.rgb.getRgb(_,0);break;case i.OPS.setFillColorN:if(\"Pattern\"===(C=b.state.fillColorSpace).name)return void a(h.handleColorN(s,i.OPS.setFillColorN,_,C,v,o,n));_=C.getRgb(_,0),P=i.OPS.setFillRGBColor;break;case i.OPS.setStrokeColorN:if(\"Pattern\"===(C=b.state.strokeColorSpace).name)return void a(h.handleColorN(s,i.OPS.setStrokeColorN,_,C,v,o,n));_=C.getRgb(_,0),P=i.OPS.setStrokeRGBColor;break;case i.OPS.shadingFill:var L=o.get(\"Shading\");if(!L)throw new i.FormatError(\"No shading resource found\");var N=L.get(_[0].name);if(!N)throw new i.FormatError(\"No shading object found\");var U=d.Pattern.parseShading(N,null,f,o,h.handler,h.pdfFunctionFactory).getIR();_=[U],P=i.OPS.shadingFill;break;case i.OPS.setGState:var q=_[0],j=o.get(\"ExtGState\");if(!(0,c.isDict)(j)||!j.has(q.name))break;var z=j.get(q.name);return void a(h.setGState(o,z,s,n,b));case i.OPS.moveTo:case i.OPS.lineTo:case i.OPS.curveTo:case i.OPS.curveTo2:case i.OPS.curveTo3:case i.OPS.closePath:case i.OPS.rectangle:h.buildPath(s,P,_);continue;case i.OPS.markPoint:case i.OPS.markPointProps:case i.OPS.beginMarkedContent:case i.OPS.beginMarkedContentProps:case i.OPS.endMarkedContent:case i.OPS.beginCompat:case i.OPS.endCompat:continue;default:if(null!==_){for(u=0,S=_.length;u<S&&!(_[u]instanceof c.Dict);u++);if(u<S){(0,i.warn)(\"getOperatorList - ignoring operator: \"+P);continue}}}s.addOp(P,_)}l?a(A):(k(),t())}).catch(function(e){if(t.options.ignoreErrors)return t.handler.send(\"UnsupportedFeature\",{featureId:i.UNSUPPORTED_FEATURES.unknown}),(0,i.warn)('getOperatorList - ignoring errors during \"'.concat(n.name,'\" ')+'task: \"'.concat(e,'\".')),void k();throw e})},getTextContent:function(e){var t=this,r=e.stream,n=e.task,o=e.resources,s=e.stateManager,l=void 0===s?null:s,u=e.normalizeWhitespace,f=void 0!==u&&u,d=e.combineTextItems,g=void 0!==d&&d,m=e.sink,v=e.seenStyles,b=void 0===v?Object.create(null):v;o=o||c.Dict.empty,l=l||new P(new I);var y,w=/\\s/g,k={items:[],styles:Object.create(null)},S={initialized:!1,str:[],width:0,height:0,vertical:!1,lastAdvanceWidth:0,lastAdvanceHeight:0,textAdvanceScale:0,spaceWidth:0,fakeSpaceMin:1/0,fakeMultiSpaceMin:1/0,fakeMultiSpaceMax:-0,textRunBreakAllowed:!1,transform:null,fontName:null},C=.3,x=1.5,_=4,E=this,O=this.xref,F=null,R=Object.create(null),B=new T(r,O,l);function M(){if(S.initialized)return S;var e=y.font;e.loadedName in b||(b[e.loadedName]=!0,k.styles[e.loadedName]={fontFamily:e.fallbackName,ascent:e.ascent,descent:e.descent,vertical:!!e.vertical}),S.fontName=e.loadedName;var t=[y.fontSize*y.textHScale,0,0,y.fontSize,0,y.textRise];if(e.isType3Font&&y.fontMatrix!==i.FONT_IDENTITY_MATRIX&&1===y.fontSize){var r=e.bbox[3]-e.bbox[1];r>0&&(r*=y.fontMatrix[3],t[3]*=r)}var a=i.Util.transform(y.ctm,i.Util.transform(y.textMatrix,t));S.transform=a,e.vertical?(S.width=Math.sqrt(a[0]*a[0]+a[1]*a[1]),S.height=0,S.vertical=!0):(S.width=0,S.height=Math.sqrt(a[2]*a[2]+a[3]*a[3]),S.vertical=!1);var n=y.textLineMatrix[0],o=y.textLineMatrix[1],s=Math.sqrt(n*n+o*o);n=y.ctm[0],o=y.ctm[1];var c=Math.sqrt(n*n+o*o);S.textAdvanceScale=c*s,S.lastAdvanceWidth=0,S.lastAdvanceHeight=0;var l=e.spaceWidth/1e3*y.fontSize;return l?(S.spaceWidth=l,S.fakeSpaceMin=l*C,S.fakeMultiSpaceMin=l*x,S.fakeMultiSpaceMax=l*_,S.textRunBreakAllowed=!e.isMonospace):(S.spaceWidth=0,S.fakeSpaceMin=1/0,S.fakeMultiSpaceMin=1/0,S.fakeMultiSpaceMax=0,S.textRunBreakAllowed=!1),S.initialized=!0,S}function D(e){for(var t,r=0,a=e.length;r<a&&(t=e.charCodeAt(r))>=32&&t<=127;)r++;return r<a?e.replace(w,\" \"):e}function L(e,t){return E.loadFont(e,t,o).then(function(e){y.font=e.font,y.fontMatrix=e.font.fontMatrix||i.FONT_IDENTITY_MATRIX})}function N(e){for(var t=y.font,r=M(),a=0,n=0,i=t.charsToGlyphs(e),o=0;o<i.length;o++){var s=i[o],c=null;c=t.vertical&&s.vmetric?s.vmetric[0]:s.width;var l=s.unicode,u=(0,h.getNormalizedUnicodes)();void 0!==u[l]&&(l=u[l]),l=(0,h.reverseIfRtl)(l);var f=y.charSpacing;if(s.isSpace){var d=y.wordSpacing;f+=d,d>0&&U(d,r.str)}var g=0,p=0;if(t.vertical)n+=p=c*y.fontMatrix[0]*y.fontSize+f;else a+=g=(c*y.fontMatrix[0]*y.fontSize+f)*y.textHScale;y.translateTextMatrix(g,p),r.str.push(l)}return t.vertical?(r.lastAdvanceHeight=n,r.height+=Math.abs(n)):(r.lastAdvanceWidth=a,r.width+=a),r}function U(e,t){if(!(e<S.fakeSpaceMin))if(e<S.fakeMultiSpaceMin)t.push(\" \");else for(var r=Math.round(e/S.spaceWidth);r-- >0;)t.push(\" \")}function q(){S.initialized&&(S.vertical?S.height*=S.textAdvanceScale:S.width*=S.textAdvanceScale,k.items.push(function(e){var t=e.str.join(\"\"),r=(0,p.bidi)(t,-1,e.vertical);return{str:f?D(r.str):r.str,dir:r.dir,width:e.width,height:e.height,transform:e.transform,fontName:e.fontName}}(S)),S.initialized=!1,S.str.length=0)}function j(){var e=k.items.length;e>0&&(m.enqueue(k,e),k.items=[],k.styles=Object.create(null))}var z=new a;return new Promise(function e(t,r){var a=function(a){j(),Promise.all([a,m.ready]).then(function(){try{e(t,r)}catch(a){r(a)}},r)};n.ensureNotTerminated(),z.reset();for(var s,u={},h=[];!(s=z.check())&&(h.length=0,u.args=h,B.read(u));){y=l.state;var d,p=u.fn;switch(h=u.args,0|p){case i.OPS.setFont:var v=h[0].name,w=h[1];if(y.font&&v===y.fontName&&w===y.fontSize)break;return q(),y.fontName=v,y.fontSize=w,void a(L(v,null));case i.OPS.setTextRise:q(),y.textRise=h[0];break;case i.OPS.setHScale:q(),y.textHScale=h[0]/100;break;case i.OPS.setLeading:q(),y.leading=h[0];break;case i.OPS.moveText:var C=!!y.font&&0===(y.font.vertical?h[0]:h[1]);if(d=h[0]-h[1],g&&C&&S.initialized&&d>0&&d<=S.fakeMultiSpaceMax){y.translateTextLineMatrix(h[0],h[1]),S.width+=h[0]-S.lastAdvanceWidth,S.height+=h[1]-S.lastAdvanceHeight,U(h[0]-S.lastAdvanceWidth-(h[1]-S.lastAdvanceHeight),S.str);break}q(),y.translateTextLineMatrix(h[0],h[1]),y.textMatrix=y.textLineMatrix.slice();break;case i.OPS.setLeadingMoveText:q(),y.leading=-h[1],y.translateTextLineMatrix(h[0],h[1]),y.textMatrix=y.textLineMatrix.slice();break;case i.OPS.nextLine:q(),y.carriageReturn();break;case i.OPS.setTextMatrix:if(d=y.calcTextLineMatrixAdvance(h[0],h[1],h[2],h[3],h[4],h[5]),g&&null!==d&&S.initialized&&d.value>0&&d.value<=S.fakeMultiSpaceMax){y.translateTextLineMatrix(d.width,d.height),S.width+=d.width-S.lastAdvanceWidth,S.height+=d.height-S.lastAdvanceHeight,U(d.width-S.lastAdvanceWidth-(d.height-S.lastAdvanceHeight),S.str);break}q(),y.setTextMatrix(h[0],h[1],h[2],h[3],h[4],h[5]),y.setTextLineMatrix(h[0],h[1],h[2],h[3],h[4],h[5]);break;case i.OPS.setCharSpacing:y.charSpacing=h[0];break;case i.OPS.setWordSpacing:y.wordSpacing=h[0];break;case i.OPS.beginText:q(),y.textMatrix=i.IDENTITY_MATRIX.slice(),y.textLineMatrix=i.IDENTITY_MATRIX.slice();break;case i.OPS.showSpacedText:for(var x,_=h[0],I=0,T=_.length;I<T;I++)if(\"string\"===typeof _[I])N(_[I]);else if((0,i.isNum)(_[I])){M(),d=_[I]*y.fontSize/1e3;var O=!1;y.font.vertical?(x=d,y.translateTextMatrix(0,x),(O=S.textRunBreakAllowed&&d>S.fakeMultiSpaceMax)||(S.height+=x)):(x=(d=-d)*y.textHScale,y.translateTextMatrix(x,0),(O=S.textRunBreakAllowed&&d>S.fakeMultiSpaceMax)||(S.width+=x)),O?q():d>0&&U(d,S.str)}break;case i.OPS.showText:N(h[0]);break;case i.OPS.nextLineShowText:q(),y.carriageReturn(),N(h[0]);break;case i.OPS.nextLineSetSpacingShowText:q(),y.wordSpacing=h[0],y.charSpacing=h[1],y.carriageReturn(),N(h[2]);break;case i.OPS.paintXObject:q(),F||(F=o.get(\"XObject\")||c.Dict.empty);var D=h[0].name;if(D&&void 0!==R[D])break;return void a(new Promise(function(e,t){if(!D)throw new i.FormatError(\"XObject must be referred to by name.\");var r=F.get(D);if(r){if(!(0,c.isStream)(r))throw new i.FormatError(\"XObject should be a stream\");var a=r.dict.get(\"Subtype\");if(!(0,c.isName)(a))throw new i.FormatError(\"XObject should have a Name subtype\");if(\"Form\"!==a.name)return R[D]=!0,void e();var s=l.state.clone(),u=new P(s),h=r.dict.getArray(\"Matrix\");Array.isArray(h)&&6===h.length&&u.transform(h),j();var d={enqueueInvoked:!1,enqueue:function(e,t){this.enqueueInvoked=!0,m.enqueue(e,t)},get desiredSize(){return m.desiredSize},get ready(){return m.ready}};E.getTextContent({stream:r,task:n,resources:r.dict.get(\"Resources\")||o,stateManager:u,normalizeWhitespace:f,combineTextItems:g,sink:d,seenStyles:b}).then(function(){d.enqueueInvoked||(R[D]=!0),e()},t)}else e()}).catch(function(e){if(!(e instanceof i.AbortException)){if(!E.options.ignoreErrors)throw e;(0,i.warn)('getTextContent - ignoring XObject: \"'.concat(e,'\".'))}}));case i.OPS.setGState:q();var H=h[0],W=o.get(\"ExtGState\");if(!(0,c.isDict)(W)||!(0,c.isName)(H))break;var G=W.get(H.name);if(!(0,c.isDict)(G))break;var X=G.get(\"Font\");if(X)return y.fontName=null,y.fontSize=X[1],void a(L(null,X[0]))}if(k.items.length>=m.desiredSize){s=!0;break}}s?a(A):(q(),j(),t())}).catch(function(e){if(!(e instanceof i.AbortException)){if(t.options.ignoreErrors)return(0,i.warn)('getTextContent - ignoring errors during \"'.concat(n.name,'\" ')+'task: \"'.concat(e,'\".')),q(),void j();throw e}})},extractDataStructures:function(e,t,r){var a=this,n=this.xref,o=e.get(\"ToUnicode\")||t.get(\"ToUnicode\"),s=o?this.readToUnicode(o):Promise.resolve(void 0);if(r.composite){var h=e.get(\"CIDSystemInfo\");(0,c.isDict)(h)&&(r.cidSystemInfo={registry:(0,i.stringToPDFString)(h.get(\"Registry\")),ordering:(0,i.stringToPDFString)(h.get(\"Ordering\")),supplement:h.get(\"Supplement\")});var f=e.get(\"CIDToGIDMap\");(0,c.isStream)(f)&&(r.cidToGidMap=this.readCidToGidMap(f))}var d,g=[],p=null;if(e.has(\"Encoding\")){if(d=e.get(\"Encoding\"),(0,c.isDict)(d)){if(p=d.get(\"BaseEncoding\"),p=(0,c.isName)(p)?p.name:null,d.has(\"Differences\"))for(var m=d.get(\"Differences\"),v=0,b=0,y=m.length;b<y;b++){var w=n.fetchIfRef(m[b]);if((0,i.isNum)(w))v=w;else{if(!(0,c.isName)(w))throw new i.FormatError(\"Invalid entry in 'Differences' array: \".concat(w));g[v++]=w.name}}}else{if(!(0,c.isName)(d))throw new i.FormatError(\"Encoding is not a Name nor a Dict\");p=d.name}\"MacRomanEncoding\"!==p&&\"MacExpertEncoding\"!==p&&\"WinAnsiEncoding\"!==p&&(p=null)}if(p)r.defaultEncoding=(0,u.getEncoding)(p).slice();else{var k=!!(r.flags&l.FontFlags.Symbolic),S=!!(r.flags&l.FontFlags.Nonsymbolic);d=u.StandardEncoding,\"TrueType\"!==r.type||S||(d=u.WinAnsiEncoding),k&&(d=u.MacRomanEncoding,r.file||(/Symbol/i.test(r.name)?d=u.SymbolSetEncoding:/Dingbats/i.test(r.name)&&(d=u.ZapfDingbatsEncoding))),r.defaultEncoding=d}return r.differences=g,r.baseEncodingName=p,r.hasEncoding=!!p||g.length>0,r.dict=e,s.then(function(e){return r.toUnicode=e,a.buildToUnicode(r)}).then(function(e){return r.toUnicode=e,r})},_buildSimpleFontToUnicode:function(e){(0,i.assert)(!e.composite,\"Must be a simple font.\");var t,r,a=[],n=e.defaultEncoding.slice(),o=e.baseEncodingName,s=e.differences;for(t in s)\".notdef\"!==(r=s[t])&&(n[t]=r);var c=(0,v.getGlyphsUnicode)();for(t in n)if(\"\"!==(r=n[t]))if(void 0!==c[r])a[t]=String.fromCharCode(c[r]);else{var f=0;switch(r[0]){case\"G\":3===r.length&&(f=parseInt(r.substring(1),16));break;case\"g\":5===r.length&&(f=parseInt(r.substring(1),16));break;case\"C\":case\"c\":r.length>=3&&(f=+r.substring(1));break;default:var d=(0,h.getUnicodeForGlyph)(r,c);-1!==d&&(f=d)}if(f){if(o&&f===+t){var g=(0,u.getEncoding)(o);if(g&&(r=g[t])){a[t]=String.fromCharCode(c[r]);continue}}a[t]=String.fromCodePoint(f)}}return new l.ToUnicodeMap(a)},buildToUnicode:function(e){if(e.hasIncludedToUnicodeMap=!!e.toUnicode&&e.toUnicode.length>0,e.hasIncludedToUnicodeMap)return!e.composite&&e.hasEncoding&&(e.fallbackToUnicode=this._buildSimpleFontToUnicode(e)),Promise.resolve(e.toUnicode);if(!e.composite)return Promise.resolve(this._buildSimpleFontToUnicode(e));if(e.composite&&(e.cMap.builtInCMap&&!(e.cMap instanceof o.IdentityCMap)||\"Adobe\"===e.cidSystemInfo.registry&&(\"GB1\"===e.cidSystemInfo.ordering||\"CNS1\"===e.cidSystemInfo.ordering||\"Japan1\"===e.cidSystemInfo.ordering||\"Korea1\"===e.cidSystemInfo.ordering))){var t=e.cidSystemInfo.registry,r=e.cidSystemInfo.ordering,a=c.Name.get(t+\"-\"+r+\"-UCS2\");return o.CMapFactory.create({encoding:a,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(t){var r=e.cMap,a=[];return r.forEach(function(e,r){if(r>65535)throw new i.FormatError(\"Max size of CID is 65,535\");var n=t.lookup(r);n&&(a[e]=String.fromCharCode((n.charCodeAt(0)<<8)+n.charCodeAt(1)))}),new l.ToUnicodeMap(a)})}return Promise.resolve(new l.IdentityToUnicodeMap(e.firstChar,e.lastChar))},readToUnicode:function(e){var t=e;return(0,c.isName)(t)?o.CMapFactory.create({encoding:t,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){return e instanceof o.IdentityCMap?new l.IdentityToUnicodeMap(0,65535):new l.ToUnicodeMap(e.getMap())}):(0,c.isStream)(t)?o.CMapFactory.create({encoding:t,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){if(e instanceof o.IdentityCMap)return new l.IdentityToUnicodeMap(0,65535);var t=new Array(e.length);return e.forEach(function(e,r){for(var a=[],n=0;n<r.length;n+=2){var i=r.charCodeAt(n)<<8|r.charCodeAt(n+1);if(55296===(63488&i)){n+=2;var o=r.charCodeAt(n)<<8|r.charCodeAt(n+1);a.push(((1023&i)<<10)+(1023&o)+65536)}else a.push(i)}t[e]=String.fromCodePoint.apply(String,a)}),new l.ToUnicodeMap(t)}):Promise.resolve(null)},readCidToGidMap:function(e){for(var t=e.getBytes(),r=[],a=0,n=t.length;a<n;a++){var i=t[a++]<<8|t[a];if(0!==i)r[a>>1]=i}return r},extractWidths:function(e,t,r){var a,n,i,o,s,u,h,f,d=this.xref,g=[],p=0,m=[];if(r.composite){if(p=e.has(\"DW\")?e.get(\"DW\"):1e3,f=e.get(\"W\"))for(n=0,i=f.length;n<i;n++)if(u=d.fetchIfRef(f[n++]),h=d.fetchIfRef(f[n]),Array.isArray(h))for(o=0,s=h.length;o<s;o++)g[u++]=d.fetchIfRef(h[o]);else{var v=d.fetchIfRef(f[++n]);for(o=u;o<=h;o++)g[o]=v}if(r.vertical){var b=e.getArray(\"DW2\")||[880,-1e3];if(a=[b[1],.5*p,b[0]],b=e.get(\"W2\"))for(n=0,i=b.length;n<i;n++)if(u=d.fetchIfRef(b[n++]),h=d.fetchIfRef(b[n]),Array.isArray(h))for(o=0,s=h.length;o<s;o++)m[u++]=[d.fetchIfRef(h[o++]),d.fetchIfRef(h[o++]),d.fetchIfRef(h[o])];else{var y=[d.fetchIfRef(b[++n]),d.fetchIfRef(b[++n]),d.fetchIfRef(b[++n])];for(o=u;o<=h;o++)m[o]=y}}}else{var w=r.firstChar;if(f=e.get(\"Widths\")){for(o=w,n=0,i=f.length;n<i;n++)g[o++]=d.fetchIfRef(f[n]);p=parseFloat(t.get(\"MissingWidth\"))||0}else{var k=e.get(\"BaseFont\");if((0,c.isName)(k)){var S=this.getBaseFontMetrics(k.name);g=this.buildCharCodeToWidth(S.widths,r),p=S.defaultWidth}}}var C=!0,x=p;for(var A in g){var _=g[A];if(_)if(x){if(x!==_){C=!1;break}}else x=_}C&&(r.flags|=l.FontFlags.FixedPitch),r.defaultWidth=p,r.widths=g,r.defaultVMetrics=a,r.vmetrics=m},isSerifFont:function(e){var t=e.split(\"-\")[0];return t in(0,f.getSerifFonts)()||-1!==t.search(/serif/gi)},getBaseFontMetrics:function(e){var t=0,r=[],a=!1,n=(0,f.getStdFontMap)()[e]||e,o=(0,b.getMetrics)();n in o||(n=this.isSerifFont(e)?\"Times-Roman\":\"Helvetica\");var s=o[n];return(0,i.isNum)(s)?(t=s,a=!0):r=s(),{defaultWidth:t,monospace:a,widths:r}},buildCharCodeToWidth:function(e,t){for(var r=Object.create(null),a=t.differences,n=t.defaultEncoding,i=0;i<256;i++)i in a&&e[a[i]]?r[i]=e[a[i]]:i in n&&e[n[i]]&&(r[i]=e[n[i]]);return r},preEvaluateFont:function(e){var t=e,r=e.get(\"Subtype\");if(!(0,c.isName)(r))throw new i.FormatError(\"invalid font Subtype\");var a,n=!1;if(\"Type0\"===r.name){var o=e.get(\"DescendantFonts\");if(!o)throw new i.FormatError(\"Descendant fonts are not specified\");if(r=(e=Array.isArray(o)?this.xref.fetchIfRef(o[0]):o).get(\"Subtype\"),!(0,c.isName)(r))throw new i.FormatError(\"invalid font Subtype\");n=!0}var s=e.get(\"FontDescriptor\");if(s){var l=new k.MurmurHash3_64,u=t.getRaw(\"Encoding\");if((0,c.isName)(u))l.update(u.name);else if((0,c.isRef)(u))l.update(u.toString());else if((0,c.isDict)(u))for(var h=u.getKeys(),f=0,d=h.length;f<d;f++){var g=u.getRaw(h[f]);if((0,c.isName)(g))l.update(g.name);else if((0,c.isRef)(g))l.update(g.toString());else if(Array.isArray(g)){for(var p=g.length,m=new Array(p),v=0;v<p;v++){var b=g[v];(0,c.isName)(b)?m[v]=b.name:((0,i.isNum)(b)||(0,c.isRef)(b))&&(m[v]=b.toString())}l.update(m.join())}}var y=e.get(\"ToUnicode\")||t.get(\"ToUnicode\");if((0,c.isStream)(y)){var w=y.str||y;a=w.buffer?new Uint8Array(w.buffer.buffer,0,w.bufferLength):new Uint8Array(w.bytes.buffer,w.start,w.end-w.start),l.update(a)}else(0,c.isName)(y)&&l.update(y.name);var S=e.get(\"Widths\")||t.get(\"Widths\");S&&(a=new Uint8Array(new Uint32Array(S).buffer),l.update(a))}return{descriptor:s,dict:e,baseDict:t,composite:n,type:r.name,hash:l?l.hexdigest():\"\"}},translateFont:function(e){var t,r=this,a=e.baseDict,n=e.dict,s=e.composite,u=e.descriptor,h=e.type,d=s?65535:255;if(!u){if(\"Type3\"!==h){var g=n.get(\"BaseFont\");if(!(0,c.isName)(g))throw new i.FormatError(\"Base font is not specified\");g=g.name.replace(/[,_]/g,\"-\");var p=this.getBaseFontMetrics(g),m=g.split(\"-\")[0],v=(this.isSerifFont(m)?l.FontFlags.Serif:0)|(p.monospace?l.FontFlags.FixedPitch:0)|((0,f.getSymbolsFonts)()[m]?l.FontFlags.Symbolic:l.FontFlags.Nonsymbolic);return t={type:h,name:g,widths:p.widths,defaultWidth:p.defaultWidth,flags:v,firstChar:0,lastChar:d},this.extractDataStructures(n,n,t).then(function(e){return e.widths=r.buildCharCodeToWidth(p.widths,e),new l.Font(g,null,e)})}(u=new c.Dict(null)).set(\"FontName\",c.Name.get(h)),u.set(\"FontBBox\",n.getArray(\"FontBBox\"))}var b=n.get(\"FirstChar\")||0,y=n.get(\"LastChar\")||d,w=u.get(\"FontName\"),k=n.get(\"BaseFont\");if((0,i.isString)(w)&&(w=c.Name.get(w)),(0,i.isString)(k)&&(k=c.Name.get(k)),\"Type3\"!==h){var S=w&&w.name,C=k&&k.name;S!==C&&((0,i.info)(\"The FontDescriptor's FontName is \\\"\".concat(S,'\" but ')+\"should be the same as the Font's BaseFont \\\"\".concat(C,'\".')),S&&C&&C.startsWith(S)&&(w=k))}if(w=w||k,!(0,c.isName)(w))throw new i.FormatError(\"invalid font name\");var x,A=u.get(\"FontFile\",\"FontFile2\",\"FontFile3\");if(A&&A.dict){var _=A.dict.get(\"Subtype\");_&&(_=_.name);var P=A.dict.get(\"Length1\"),I=A.dict.get(\"Length2\"),E=A.dict.get(\"Length3\")}if(t={type:h,name:w.name,subtype:_,file:A,length1:P,length2:I,length3:E,loadedName:a.loadedName,composite:s,wideChars:s,fixedPitch:!1,fontMatrix:n.getArray(\"FontMatrix\")||i.FONT_IDENTITY_MATRIX,firstChar:b||0,lastChar:y||d,bbox:u.getArray(\"FontBBox\"),ascent:u.get(\"Ascent\"),descent:u.get(\"Descent\"),xHeight:u.get(\"XHeight\"),capHeight:u.get(\"CapHeight\"),flags:u.get(\"Flags\"),italicAngle:u.get(\"ItalicAngle\"),isType3Font:!1},s){var T=a.get(\"Encoding\");(0,c.isName)(T)&&(t.cidEncoding=T.name),x=o.CMapFactory.create({encoding:T,fetchBuiltInCMap:this.fetchBuiltInCMap,useCMap:null}).then(function(e){t.cMap=e,t.vertical=t.cMap.vertical})}else x=Promise.resolve(void 0);return x.then(function(){return r.extractDataStructures(n,a,t)}).then(function(e){return r.extractWidths(n,u,e),\"Type3\"===h&&(e.isType3Font=!0),new l.Font(w.name,A,e)})}},r.buildFontPaths=function(e,t,r){function a(t){e.renderer.hasBuiltPath(t)||r.send(\"commonobj\",[\"\".concat(e.loadedName,\"_path_\").concat(t),\"FontPath\",e.renderer.getPathJs(t)])}var n=!0,i=!1,o=void 0;try{for(var s,c=t[Symbol.iterator]();!(n=(s=c.next()).done);n=!0){var l=s.value;a(l.fontChar);var u=l.accent;u&&u.fontChar&&a(u.fontChar)}}catch(h){i=!0,o=h}finally{try{n||null==c.return||c.return()}finally{if(i)throw o}}},r}();t.PartialEvaluator=A;var _=function(){function e(e,t,r){this.loadedName=e,this.font=t,this.dict=r,this.type3Loaded=null,this.sent=!1}return e.prototype={send:function(e){this.sent||(this.sent=!0,e.send(\"commonobj\",[this.loadedName,\"Font\",this.font.exportData()]))},fallback:function(e){if(this.font.data){this.font.disableFontFace=!0;var t=this.font.glyphCacheValues;A.buildFontPaths(this.font,t,e)}},loadType3Data:function(e,t,r,a){if(!this.font.isType3Font)throw new Error(\"Must be a Type3 font.\");if(this.type3Loaded)return this.type3Loaded;var n=Object.create(e.options);n.ignoreErrors=!1;for(var o=e.clone(n),s=this.font,c=Promise.resolve(),l=this.dict.get(\"CharProcs\"),u=this.dict.get(\"Resources\")||t,h=l.getKeys(),f=Object.create(null),d=function(){var e=h[g];c=c.then(function(){var t=l.get(e),n=new S.OperatorList;return o.getOperatorList({stream:t,task:a,resources:u,operatorList:n}).then(function(){f[e]=n.getIR(),r.addDependencies(n.dependencies)}).catch(function(t){(0,i.warn)('Type3 font resource \"'.concat(e,'\" is not available.'));var r=new S.OperatorList;f[e]=r.getIR()})})},g=0,p=h.length;g<p;++g)d();return this.type3Loaded=c.then(function(){s.charProcOperatorList=f}),this.type3Loaded}},e}(),P=function(){function e(e){this.state=e,this.stateStack=[]}return e.prototype={save:function(){var e=this.state;this.stateStack.push(this.state),this.state=e.clone()},restore:function(){var e=this.stateStack.pop();e&&(this.state=e)},transform:function(e){this.state.ctm=i.Util.transform(this.state.ctm,e)}},e}(),I=function(){function e(){this.ctm=new Float32Array(i.IDENTITY_MATRIX),this.fontName=null,this.fontSize=0,this.font=null,this.fontMatrix=i.FONT_IDENTITY_MATRIX,this.textMatrix=i.IDENTITY_MATRIX.slice(),this.textLineMatrix=i.IDENTITY_MATRIX.slice(),this.charSpacing=0,this.wordSpacing=0,this.leading=0,this.textHScale=1,this.textRise=0}return e.prototype={setTextMatrix:function(e,t,r,a,n,i){var o=this.textMatrix;o[0]=e,o[1]=t,o[2]=r,o[3]=a,o[4]=n,o[5]=i},setTextLineMatrix:function(e,t,r,a,n,i){var o=this.textLineMatrix;o[0]=e,o[1]=t,o[2]=r,o[3]=a,o[4]=n,o[5]=i},translateTextMatrix:function(e,t){var r=this.textMatrix;r[4]=r[0]*e+r[2]*t+r[4],r[5]=r[1]*e+r[3]*t+r[5]},translateTextLineMatrix:function(e,t){var r=this.textLineMatrix;r[4]=r[0]*e+r[2]*t+r[4],r[5]=r[1]*e+r[3]*t+r[5]},calcTextLineMatrixAdvance:function(e,t,r,a,n,i){var o=this.font;if(!o)return null;var s=this.textLineMatrix;if(e!==s[0]||t!==s[1]||r!==s[2]||a!==s[3])return null;var c=n-s[4],l=i-s[5];if(o.vertical&&0!==c||!o.vertical&&0!==l)return null;var u,h,f=e*a-t*r;return o.vertical?(u=-l*r/f,h=l*e/f):(u=c*a/f,h=-c*t/f),{width:u,height:h,value:o.vertical?h:u}},calcRenderMatrix:function(e){var t=[this.fontSize*this.textHScale,0,0,this.fontSize,0,this.textRise];return i.Util.transform(e,i.Util.transform(this.textMatrix,t))},carriageReturn:function(){this.translateTextLineMatrix(0,-this.leading),this.textMatrix=this.textLineMatrix.slice()},clone:function(){var e=Object.create(this);return e.textMatrix=this.textMatrix.slice(),e.textLineMatrix=this.textLineMatrix.slice(),e.fontMatrix=this.fontMatrix.slice(),e}},e}(),E=function(){function e(){this.ctm=new Float32Array(i.IDENTITY_MATRIX),this.font=null,this.textRenderingMode=i.TextRenderingMode.FILL,this.fillColorSpace=m.ColorSpace.singletons.gray,this.strokeColorSpace=m.ColorSpace.singletons.gray}return e.prototype={clone:function(){return Object.create(this)}},e}(),T=function(){var e=(0,i.getLookupTableFactory)(function(e){e.w={id:i.OPS.setLineWidth,numArgs:1,variableArgs:!1},e.J={id:i.OPS.setLineCap,numArgs:1,variableArgs:!1},e.j={id:i.OPS.setLineJoin,numArgs:1,variableArgs:!1},e.M={id:i.OPS.setMiterLimit,numArgs:1,variableArgs:!1},e.d={id:i.OPS.setDash,numArgs:2,variableArgs:!1},e.ri={id:i.OPS.setRenderingIntent,numArgs:1,variableArgs:!1},e.i={id:i.OPS.setFlatness,numArgs:1,variableArgs:!1},e.gs={id:i.OPS.setGState,numArgs:1,variableArgs:!1},e.q={id:i.OPS.save,numArgs:0,variableArgs:!1},e.Q={id:i.OPS.restore,numArgs:0,variableArgs:!1},e.cm={id:i.OPS.transform,numArgs:6,variableArgs:!1},e.m={id:i.OPS.moveTo,numArgs:2,variableArgs:!1},e.l={id:i.OPS.lineTo,numArgs:2,variableArgs:!1},e.c={id:i.OPS.curveTo,numArgs:6,variableArgs:!1},e.v={id:i.OPS.curveTo2,numArgs:4,variableArgs:!1},e.y={id:i.OPS.curveTo3,numArgs:4,variableArgs:!1},e.h={id:i.OPS.closePath,numArgs:0,variableArgs:!1},e.re={id:i.OPS.rectangle,numArgs:4,variableArgs:!1},e.S={id:i.OPS.stroke,numArgs:0,variableArgs:!1},e.s={id:i.OPS.closeStroke,numArgs:0,variableArgs:!1},e.f={id:i.OPS.fill,numArgs:0,variableArgs:!1},e.F={id:i.OPS.fill,numArgs:0,variableArgs:!1},e[\"f*\"]={id:i.OPS.eoFill,numArgs:0,variableArgs:!1},e.B={id:i.OPS.fillStroke,numArgs:0,variableArgs:!1},e[\"B*\"]={id:i.OPS.eoFillStroke,numArgs:0,variableArgs:!1},e.b={id:i.OPS.closeFillStroke,numArgs:0,variableArgs:!1},e[\"b*\"]={id:i.OPS.closeEOFillStroke,numArgs:0,variableArgs:!1},e.n={id:i.OPS.endPath,numArgs:0,variableArgs:!1},e.W={id:i.OPS.clip,numArgs:0,variableArgs:!1},e[\"W*\"]={id:i.OPS.eoClip,numArgs:0,variableArgs:!1},e.BT={id:i.OPS.beginText,numArgs:0,variableArgs:!1},e.ET={id:i.OPS.endText,numArgs:0,variableArgs:!1},e.Tc={id:i.OPS.setCharSpacing,numArgs:1,variableArgs:!1},e.Tw={id:i.OPS.setWordSpacing,numArgs:1,variableArgs:!1},e.Tz={id:i.OPS.setHScale,numArgs:1,variableArgs:!1},e.TL={id:i.OPS.setLeading,numArgs:1,variableArgs:!1},e.Tf={id:i.OPS.setFont,numArgs:2,variableArgs:!1},e.Tr={id:i.OPS.setTextRenderingMode,numArgs:1,variableArgs:!1},e.Ts={id:i.OPS.setTextRise,numArgs:1,variableArgs:!1},e.Td={id:i.OPS.moveText,numArgs:2,variableArgs:!1},e.TD={id:i.OPS.setLeadingMoveText,numArgs:2,variableArgs:!1},e.Tm={id:i.OPS.setTextMatrix,numArgs:6,variableArgs:!1},e[\"T*\"]={id:i.OPS.nextLine,numArgs:0,variableArgs:!1},e.Tj={id:i.OPS.showText,numArgs:1,variableArgs:!1},e.TJ={id:i.OPS.showSpacedText,numArgs:1,variableArgs:!1},e[\"'\"]={id:i.OPS.nextLineShowText,numArgs:1,variableArgs:!1},e['\"']={id:i.OPS.nextLineSetSpacingShowText,numArgs:3,variableArgs:!1},e.d0={id:i.OPS.setCharWidth,numArgs:2,variableArgs:!1},e.d1={id:i.OPS.setCharWidthAndBounds,numArgs:6,variableArgs:!1},e.CS={id:i.OPS.setStrokeColorSpace,numArgs:1,variableArgs:!1},e.cs={id:i.OPS.setFillColorSpace,numArgs:1,variableArgs:!1},e.SC={id:i.OPS.setStrokeColor,numArgs:4,variableArgs:!0},e.SCN={id:i.OPS.setStrokeColorN,numArgs:33,variableArgs:!0},e.sc={id:i.OPS.setFillColor,numArgs:4,variableArgs:!0},e.scn={id:i.OPS.setFillColorN,numArgs:33,variableArgs:!0},e.G={id:i.OPS.setStrokeGray,numArgs:1,variableArgs:!1},e.g={id:i.OPS.setFillGray,numArgs:1,variableArgs:!1},e.RG={id:i.OPS.setStrokeRGBColor,numArgs:3,variableArgs:!1},e.rg={id:i.OPS.setFillRGBColor,numArgs:3,variableArgs:!1},e.K={id:i.OPS.setStrokeCMYKColor,numArgs:4,variableArgs:!1},e.k={id:i.OPS.setFillCMYKColor,numArgs:4,variableArgs:!1},e.sh={id:i.OPS.shadingFill,numArgs:1,variableArgs:!1},e.BI={id:i.OPS.beginInlineImage,numArgs:0,variableArgs:!1},e.ID={id:i.OPS.beginImageData,numArgs:0,variableArgs:!1},e.EI={id:i.OPS.endInlineImage,numArgs:1,variableArgs:!1},e.Do={id:i.OPS.paintXObject,numArgs:1,variableArgs:!1},e.MP={id:i.OPS.markPoint,numArgs:1,variableArgs:!1},e.DP={id:i.OPS.markPointProps,numArgs:2,variableArgs:!1},e.BMC={id:i.OPS.beginMarkedContent,numArgs:1,variableArgs:!1},e.BDC={id:i.OPS.beginMarkedContentProps,numArgs:2,variableArgs:!1},e.EMC={id:i.OPS.endMarkedContent,numArgs:0,variableArgs:!1},e.BX={id:i.OPS.beginCompat,numArgs:0,variableArgs:!1},e.EX={id:i.OPS.endCompat,numArgs:0,variableArgs:!1},e.BM=null,e.BD=null,e.true=null,e.fa=null,e.fal=null,e.fals=null,e.false=null,e.nu=null,e.nul=null,e.null=null});function t(t,r,a){this.opMap=e(),this.parser=new g.Parser(new g.Lexer(t,this.opMap),!1,r),this.stateManager=a,this.nonProcessedArgs=[],this._numInvalidPathOPS=0}return t.prototype={get savedStatesDepth(){return this.stateManager.stateStack.length},read:function(e){for(var t=e.args;;){var r=this.parser.getObj();if((0,c.isCmd)(r)){var a=r.cmd,n=this.opMap[a];if(!n){(0,i.warn)('Unknown command \"'.concat(a,'\".'));continue}var o=n.id,s=n.numArgs,l=null!==t?t.length:0;if(n.variableArgs)l>s&&(0,i.info)(\"Command \".concat(a,\": expected [0, \").concat(s,\"] args, \")+\"but received \".concat(l,\" args.\"));else{if(l!==s){for(var u=this.nonProcessedArgs;l>s;)u.push(t.shift()),l--;for(;l<s&&0!==u.length;)null===t&&(t=[]),t.unshift(u.pop()),l++}if(l<s){var h=\"command \".concat(a,\": expected \").concat(s,\" args, \")+\"but received \".concat(l,\" args.\");if(o>=i.OPS.moveTo&&o<=i.OPS.endPath&&++this._numInvalidPathOPS>20)throw new i.FormatError(\"Invalid \".concat(h));(0,i.warn)(\"Skipping \".concat(h)),null!==t&&(t.length=0);continue}}return this.preprocessCommand(o,t),e.fn=o,e.args=t,!0}if((0,c.isEOF)(r))return!1;if(null!==r&&(null===t&&(t=[]),t.push(r),t.length>33))throw new i.FormatError(\"Too many arguments\")}},preprocessCommand:function(e,t){switch(0|e){case i.OPS.save:this.stateManager.save();break;case i.OPS.restore:this.stateManager.restore();break;case i.OPS.transform:this.stateManager.transform(t)}}},t}()},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CMapFactory=t.IdentityCMap=t.CMap=void 0;var a=r(6),n=r(155),i=r(156),o=r(157);function s(e){return(s=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){return!t||\"object\"!==s(t)&&\"function\"!==typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function f(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function d(e,t,r){return t&&f(e.prototype,t),r&&f(e,r),e}var g=[\"Adobe-GB1-UCS2\",\"Adobe-CNS1-UCS2\",\"Adobe-Japan1-UCS2\",\"Adobe-Korea1-UCS2\",\"78-EUC-H\",\"78-EUC-V\",\"78-H\",\"78-RKSJ-H\",\"78-RKSJ-V\",\"78-V\",\"78ms-RKSJ-H\",\"78ms-RKSJ-V\",\"83pv-RKSJ-H\",\"90ms-RKSJ-H\",\"90ms-RKSJ-V\",\"90msp-RKSJ-H\",\"90msp-RKSJ-V\",\"90pv-RKSJ-H\",\"90pv-RKSJ-V\",\"Add-H\",\"Add-RKSJ-H\",\"Add-RKSJ-V\",\"Add-V\",\"Adobe-CNS1-0\",\"Adobe-CNS1-1\",\"Adobe-CNS1-2\",\"Adobe-CNS1-3\",\"Adobe-CNS1-4\",\"Adobe-CNS1-5\",\"Adobe-CNS1-6\",\"Adobe-GB1-0\",\"Adobe-GB1-1\",\"Adobe-GB1-2\",\"Adobe-GB1-3\",\"Adobe-GB1-4\",\"Adobe-GB1-5\",\"Adobe-Japan1-0\",\"Adobe-Japan1-1\",\"Adobe-Japan1-2\",\"Adobe-Japan1-3\",\"Adobe-Japan1-4\",\"Adobe-Japan1-5\",\"Adobe-Japan1-6\",\"Adobe-Korea1-0\",\"Adobe-Korea1-1\",\"Adobe-Korea1-2\",\"B5-H\",\"B5-V\",\"B5pc-H\",\"B5pc-V\",\"CNS-EUC-H\",\"CNS-EUC-V\",\"CNS1-H\",\"CNS1-V\",\"CNS2-H\",\"CNS2-V\",\"ETHK-B5-H\",\"ETHK-B5-V\",\"ETen-B5-H\",\"ETen-B5-V\",\"ETenms-B5-H\",\"ETenms-B5-V\",\"EUC-H\",\"EUC-V\",\"Ext-H\",\"Ext-RKSJ-H\",\"Ext-RKSJ-V\",\"Ext-V\",\"GB-EUC-H\",\"GB-EUC-V\",\"GB-H\",\"GB-V\",\"GBK-EUC-H\",\"GBK-EUC-V\",\"GBK2K-H\",\"GBK2K-V\",\"GBKp-EUC-H\",\"GBKp-EUC-V\",\"GBT-EUC-H\",\"GBT-EUC-V\",\"GBT-H\",\"GBT-V\",\"GBTpc-EUC-H\",\"GBTpc-EUC-V\",\"GBpc-EUC-H\",\"GBpc-EUC-V\",\"H\",\"HKdla-B5-H\",\"HKdla-B5-V\",\"HKdlb-B5-H\",\"HKdlb-B5-V\",\"HKgccs-B5-H\",\"HKgccs-B5-V\",\"HKm314-B5-H\",\"HKm314-B5-V\",\"HKm471-B5-H\",\"HKm471-B5-V\",\"HKscs-B5-H\",\"HKscs-B5-V\",\"Hankaku\",\"Hiragana\",\"KSC-EUC-H\",\"KSC-EUC-V\",\"KSC-H\",\"KSC-Johab-H\",\"KSC-Johab-V\",\"KSC-V\",\"KSCms-UHC-H\",\"KSCms-UHC-HW-H\",\"KSCms-UHC-HW-V\",\"KSCms-UHC-V\",\"KSCpc-EUC-H\",\"KSCpc-EUC-V\",\"Katakana\",\"NWP-H\",\"NWP-V\",\"RKSJ-H\",\"RKSJ-V\",\"Roman\",\"UniCNS-UCS2-H\",\"UniCNS-UCS2-V\",\"UniCNS-UTF16-H\",\"UniCNS-UTF16-V\",\"UniCNS-UTF32-H\",\"UniCNS-UTF32-V\",\"UniCNS-UTF8-H\",\"UniCNS-UTF8-V\",\"UniGB-UCS2-H\",\"UniGB-UCS2-V\",\"UniGB-UTF16-H\",\"UniGB-UTF16-V\",\"UniGB-UTF32-H\",\"UniGB-UTF32-V\",\"UniGB-UTF8-H\",\"UniGB-UTF8-V\",\"UniJIS-UCS2-H\",\"UniJIS-UCS2-HW-H\",\"UniJIS-UCS2-HW-V\",\"UniJIS-UCS2-V\",\"UniJIS-UTF16-H\",\"UniJIS-UTF16-V\",\"UniJIS-UTF32-H\",\"UniJIS-UTF32-V\",\"UniJIS-UTF8-H\",\"UniJIS-UTF8-V\",\"UniJIS2004-UTF16-H\",\"UniJIS2004-UTF16-V\",\"UniJIS2004-UTF32-H\",\"UniJIS2004-UTF32-V\",\"UniJIS2004-UTF8-H\",\"UniJIS2004-UTF8-V\",\"UniJISPro-UCS2-HW-V\",\"UniJISPro-UCS2-V\",\"UniJISPro-UTF8-V\",\"UniJISX0213-UTF32-H\",\"UniJISX0213-UTF32-V\",\"UniJISX02132004-UTF32-H\",\"UniJISX02132004-UTF32-V\",\"UniKS-UCS2-H\",\"UniKS-UCS2-V\",\"UniKS-UTF16-H\",\"UniKS-UTF16-V\",\"UniKS-UTF32-H\",\"UniKS-UTF32-V\",\"UniKS-UTF8-H\",\"UniKS-UTF8-V\",\"V\",\"WP-Symbol\"],p=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];h(this,e),this.codespaceRanges=[[],[],[],[]],this.numCodespaceRanges=0,this._map=[],this.name=\"\",this.vertical=!1,this.useCMap=null,this.builtInCMap=t}return d(e,[{key:\"addCodespaceRange\",value:function(e,t,r){this.codespaceRanges[e-1].push(t,r),this.numCodespaceRanges++}},{key:\"mapCidRange\",value:function(e,t,r){for(;e<=t;)this._map[e++]=r++}},{key:\"mapBfRange\",value:function(e,t,r){for(var a=r.length-1;e<=t;)this._map[e++]=r,r=r.substring(0,a)+String.fromCharCode(r.charCodeAt(a)+1)}},{key:\"mapBfRangeToArray\",value:function(e,t,r){for(var a=0,n=r.length;e<=t&&a<n;)this._map[e]=r[a++],++e}},{key:\"mapOne\",value:function(e,t){this._map[e]=t}},{key:\"lookup\",value:function(e){return this._map[e]}},{key:\"contains\",value:function(e){return void 0!==this._map[e]}},{key:\"forEach\",value:function(e){var t=this._map,r=t.length;if(r<=65536)for(var a=0;a<r;a++)void 0!==t[a]&&e(a,t[a]);else for(var n in t)e(n,t[n])}},{key:\"charCodeOf\",value:function(e){var t=this._map;if(t.length<=65536)return t.indexOf(e);for(var r in t)if(t[r]===e)return 0|r;return-1}},{key:\"getMap\",value:function(){return this._map}},{key:\"readCharCode\",value:function(e,t,r){for(var a=0,n=this.codespaceRanges,i=0,o=n.length;i<o;i++){a=(a<<8|e.charCodeAt(t+i))>>>0;for(var s=n[i],c=0,l=s.length;c<l;){var u=s[c++],h=s[c++];if(a>=u&&a<=h)return r.charcode=a,void(r.length=i+1)}}r.charcode=0,r.length=1}},{key:\"length\",get:function(){return this._map.length}},{key:\"isIdentityCMap\",get:function(){if(\"Identity-H\"!==this.name&&\"Identity-V\"!==this.name)return!1;if(65536!==this._map.length)return!1;for(var e=0;e<65536;e++)if(this._map[e]!==e)return!1;return!0}}]),e}();t.CMap=p;var m=function(e){function t(e,r){var a;return h(this,t),(a=c(this,l(t).call(this))).vertical=e,a.addCodespaceRange(r,0,65535),a}return function(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(t,p),d(t,[{key:\"mapCidRange\",value:function(e,t,r){(0,a.unreachable)(\"should not call mapCidRange\")}},{key:\"mapBfRange\",value:function(e,t,r){(0,a.unreachable)(\"should not call mapBfRange\")}},{key:\"mapBfRangeToArray\",value:function(e,t,r){(0,a.unreachable)(\"should not call mapBfRangeToArray\")}},{key:\"mapOne\",value:function(e,t){(0,a.unreachable)(\"should not call mapCidOne\")}},{key:\"lookup\",value:function(e){return Number.isInteger(e)&&e<=65535?e:void 0}},{key:\"contains\",value:function(e){return Number.isInteger(e)&&e<=65535}},{key:\"forEach\",value:function(e){for(var t=0;t<=65535;t++)e(t,t)}},{key:\"charCodeOf\",value:function(e){return Number.isInteger(e)&&e<=65535?e:-1}},{key:\"getMap\",value:function(){for(var e=new Array(65536),t=0;t<=65535;t++)e[t]=t;return e}},{key:\"length\",get:function(){return 65536}},{key:\"isIdentityCMap\",get:function(){(0,a.unreachable)(\"should not access .isIdentityCMap\")}}]),t}();t.IdentityCMap=m;var v=function(){function e(e,t){for(var r=0,a=0;a<=t;a++)r=r<<8|e[a];return r>>>0}function t(e,t){return 1===t?String.fromCharCode(e[0],e[1]):3===t?String.fromCharCode(e[0],e[1],e[2],e[3]):String.fromCharCode.apply(null,e.subarray(0,t+1))}function r(e,t,r){for(var a=0,n=r;n>=0;n--)a+=e[n]+t[n],e[n]=255&a,a>>=8}function n(e,t){for(var r=1,a=t;a>=0&&r>0;a--)r+=e[a],e[a]=255&r,r>>=8}var i=16,o=19;function s(e){this.buffer=e,this.pos=0,this.end=e.length,this.tmpBuf=new Uint8Array(o)}function c(){}return s.prototype={readByte:function(){return this.pos>=this.end?-1:this.buffer[this.pos++]},readNumber:function(){var e,t=0;do{var r=this.readByte();if(r<0)throw new a.FormatError(\"unexpected EOF in bcmap\");e=!(128&r),t=t<<7|127&r}while(!e);return t},readSigned:function(){var e=this.readNumber();return 1&e?~(e>>>1):e>>>1},readHex:function(e,t){e.set(this.buffer.subarray(this.pos,this.pos+t+1)),this.pos+=t+1},readHexNumber:function(e,t){var r,n=this.tmpBuf,i=0;do{var o=this.readByte();if(o<0)throw new a.FormatError(\"unexpected EOF in bcmap\");r=!(128&o),n[i++]=127&o}while(!r);for(var s=t,c=0,l=0;s>=0;){for(;l<8&&n.length>0;)c=n[--i]<<l|c,l+=7;e[s]=255&c,s--,c>>=8,l-=8}},readHexSigned:function(e,t){this.readHexNumber(e,t);for(var r=1&e[t]?255:0,a=0,n=0;n<=t;n++)a=(1&a)<<8|e[n],e[n]=a>>1^r},readString:function(){for(var e=this.readNumber(),t=\"\",r=0;r<e;r++)t+=String.fromCharCode(this.readNumber());return t}},c.prototype={process:function(a,o,c){return new Promise(function(l,u){var h=new s(a),f=h.readByte();o.vertical=!!(1&f);for(var d,g,p=null,m=new Uint8Array(i),v=new Uint8Array(i),b=new Uint8Array(i),y=new Uint8Array(i),w=new Uint8Array(i);(g=h.readByte())>=0;){var k=g>>5;if(7!==k){var S=!!(16&g),C=15&g;if(C+1>i)throw new Error(\"processBinaryCMap: Invalid dataSize.\");var x,A=h.readNumber();switch(k){case 0:for(h.readHex(m,C),h.readHexNumber(v,C),r(v,m,C),o.addCodespaceRange(C+1,e(m,C),e(v,C)),x=1;x<A;x++)n(v,C),h.readHexNumber(m,C),r(m,v,C),h.readHexNumber(v,C),r(v,m,C),o.addCodespaceRange(C+1,e(m,C),e(v,C));break;case 1:for(h.readHex(m,C),h.readHexNumber(v,C),r(v,m,C),h.readNumber(),x=1;x<A;x++)n(v,C),h.readHexNumber(m,C),r(m,v,C),h.readHexNumber(v,C),r(v,m,C),h.readNumber();break;case 2:for(h.readHex(b,C),d=h.readNumber(),o.mapOne(e(b,C),d),x=1;x<A;x++)n(b,C),S||(h.readHexNumber(w,C),r(b,w,C)),d=h.readSigned()+(d+1),o.mapOne(e(b,C),d);break;case 3:for(h.readHex(m,C),h.readHexNumber(v,C),r(v,m,C),d=h.readNumber(),o.mapCidRange(e(m,C),e(v,C),d),x=1;x<A;x++)n(v,C),S?m.set(v):(h.readHexNumber(m,C),r(m,v,C)),h.readHexNumber(v,C),r(v,m,C),d=h.readNumber(),o.mapCidRange(e(m,C),e(v,C),d);break;case 4:for(h.readHex(b,1),h.readHex(y,C),o.mapOne(e(b,1),t(y,C)),x=1;x<A;x++)n(b,1),S||(h.readHexNumber(w,1),r(b,w,1)),n(y,C),h.readHexSigned(w,C),r(y,w,C),o.mapOne(e(b,1),t(y,C));break;case 5:for(h.readHex(m,1),h.readHexNumber(v,1),r(v,m,1),h.readHex(y,C),o.mapBfRange(e(m,1),e(v,1),t(y,C)),x=1;x<A;x++)n(v,1),S?m.set(v):(h.readHexNumber(m,1),r(m,v,1)),h.readHexNumber(v,1),r(v,m,1),h.readHex(y,C),o.mapBfRange(e(m,1),e(v,1),t(y,C));break;default:return void u(new Error(\"processBinaryCMap: Unknown type: \"+k))}}else switch(31&g){case 0:h.readString();break;case 1:p=h.readString()}}l(p?c(p):o)})}},c}(),b=function(){function e(e){for(var t=0,r=0;r<e.length;r++)t=t<<8|e.charCodeAt(r);return t>>>0}function t(e){if(!(0,a.isString)(e))throw new a.FormatError(\"Malformed CMap: expected string.\")}function r(e){if(!Number.isInteger(e))throw new a.FormatError(\"Malformed CMap: expected int.\")}function s(r,a){for(;;){var i=a.getObj();if((0,n.isEOF)(i))break;if((0,n.isCmd)(i,\"endbfchar\"))return;t(i);var o=e(i);t(i=a.getObj());var s=i;r.mapOne(o,s)}}function c(r,i){for(;;){var o=i.getObj();if((0,n.isEOF)(o))break;if((0,n.isCmd)(o,\"endbfrange\"))return;t(o);var s=e(o);t(o=i.getObj());var c=e(o);if(o=i.getObj(),Number.isInteger(o)||(0,a.isString)(o)){var l=Number.isInteger(o)?String.fromCharCode(o):o;r.mapBfRange(s,c,l)}else{if(!(0,n.isCmd)(o,\"[\"))break;o=i.getObj();for(var u=[];!(0,n.isCmd)(o,\"]\")&&!(0,n.isEOF)(o);)u.push(o),o=i.getObj();r.mapBfRangeToArray(s,c,u)}}throw new a.FormatError(\"Invalid bf range.\")}function l(a,i){for(;;){var o=i.getObj();if((0,n.isEOF)(o))break;if((0,n.isCmd)(o,\"endcidchar\"))return;t(o);var s=e(o);r(o=i.getObj());var c=o;a.mapOne(s,c)}}function u(a,i){for(;;){var o=i.getObj();if((0,n.isEOF)(o))break;if((0,n.isCmd)(o,\"endcidrange\"))return;t(o);var s=e(o);t(o=i.getObj());var c=e(o);r(o=i.getObj());var l=o;a.mapCidRange(s,c,l)}}function h(t,r){for(;;){var i=r.getObj();if((0,n.isEOF)(i))break;if((0,n.isCmd)(i,\"endcodespacerange\"))return;if(!(0,a.isString)(i))break;var o=e(i);if(i=r.getObj(),!(0,a.isString)(i))break;var s=e(i);t.addCodespaceRange(i.length,o,s)}throw new a.FormatError(\"Invalid codespace range.\")}function f(e,t){var r=t.getObj();Number.isInteger(r)&&(e.vertical=!!r)}function d(e,t){var r=t.getObj();(0,n.isName)(r)&&(0,a.isString)(r.name)&&(e.name=r.name)}function b(e,t,r,i){var o,g;e:for(;;)try{var p=t.getObj();if((0,n.isEOF)(p))break;if((0,n.isName)(p))\"WMode\"===p.name?f(e,t):\"CMapName\"===p.name&&d(e,t),o=p;else if((0,n.isCmd)(p))switch(p.cmd){case\"endcmap\":break e;case\"usecmap\":(0,n.isName)(o)&&(g=o.name);break;case\"begincodespacerange\":h(e,t);break;case\"beginbfchar\":s(e,t);break;case\"begincidchar\":l(e,t);break;case\"beginbfrange\":c(e,t);break;case\"begincidrange\":u(e,t)}}catch(m){if(m instanceof a.MissingDataException)throw m;(0,a.warn)(\"Invalid cMap data: \"+m);continue}return!i&&g&&(i=g),i?y(e,r,i):Promise.resolve(e)}function y(e,t,r){return w(r,t).then(function(t){if(e.useCMap=t,0===e.numCodespaceRanges){for(var r=e.useCMap.codespaceRanges,a=0;a<r.length;a++)e.codespaceRanges[a]=r[a].slice();e.numCodespaceRanges=e.useCMap.numCodespaceRanges}return e.useCMap.forEach(function(t,r){e.contains(t)||e.mapOne(t,e.useCMap.lookup(t))}),e})}function w(e,t){return\"Identity-H\"===e?Promise.resolve(new m(!1,2)):\"Identity-V\"===e?Promise.resolve(new m(!0,2)):g.includes(e)?t?t(e).then(function(e){var r=e.cMapData,n=e.compressionType,s=new p(!0);if(n===a.CMapCompressionType.BINARY)return(new v).process(r,s,function(e){return y(s,t,e)});if(n===a.CMapCompressionType.NONE){var c=new i.Lexer(new o.Stream(r));return b(s,c,t,null)}return Promise.reject(new Error(\"TODO: Only BINARY/NONE CMap compression is currently supported.\"))}):Promise.reject(new Error(\"Built-in CMap parameters are not provided.\")):Promise.reject(new Error(\"Unknown CMap name: \"+e))}return{create:function(e){var t=e.encoding,r=e.fetchBuiltInCMap,a=e.useCMap;return(0,n.isName)(t)?w(t.name,r):(0,n.isStream)(t)?b(new p,new i.Lexer(t),r,a).then(function(e){return e.isIdentityCMap?w(e.name,r):e}):Promise.reject(new Error(\"Encoding required.\"))}}}();t.CMapFactory=b},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getFontType=w,t.IdentityToUnicodeMap=t.ToUnicodeMap=t.FontFlags=t.Font=t.ErrorFont=t.SEAC_ANALYSIS_ENABLED=void 0;var a=r(6),n=r(174),i=r(177),o=r(176),s=r(178),c=r(179),l=r(180),u=r(172),h=r(157),f=r(181);function d(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(c){n=!0,i=c}finally{try{a||null==s.return||s.return()}finally{if(n)throw i}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}var g=[[57344,63743],[1048576,1114109]],p=1e3,m=!0;t.SEAC_ANALYSIS_ENABLED=m;var v={FixedPitch:1,Serif:2,Symbolic:4,Script:8,Nonsymbolic:32,Italic:64,AllCap:65536,SmallCap:131072,ForceBold:262144};t.FontFlags=v;var b=[\".notdef\",\".null\",\"nonmarkingreturn\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"nonbreakingspace\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"Lslash\",\"lslash\",\"Scaron\",\"scaron\",\"Zcaron\",\"zcaron\",\"brokenbar\",\"Eth\",\"eth\",\"Yacute\",\"yacute\",\"Thorn\",\"thorn\",\"minus\",\"multiply\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"onehalf\",\"onequarter\",\"threequarters\",\"franc\",\"Gbreve\",\"gbreve\",\"Idotaccent\",\"Scedilla\",\"scedilla\",\"Cacute\",\"cacute\",\"Ccaron\",\"ccaron\",\"dcroat\"];function y(e){if(e.fontMatrix&&e.fontMatrix[0]!==a.FONT_IDENTITY_MATRIX[0]){var t=.001/e.fontMatrix[0],r=e.widths;for(var n in r)r[n]*=t;e.defaultWidth*=t}}function w(e,t){switch(e){case\"Type1\":return\"Type1C\"===t?a.FontType.TYPE1C:a.FontType.TYPE1;case\"CIDFontType0\":return\"CIDFontType0C\"===t?a.FontType.CIDFONTTYPE0C:a.FontType.CIDFONTTYPE0;case\"OpenType\":return a.FontType.OPENTYPE;case\"TrueType\":return a.FontType.TRUETYPE;case\"CIDFontType2\":return a.FontType.CIDFONTTYPE2;case\"MMType1\":return a.FontType.MMTYPE1;case\"Type0\":return a.FontType.TYPE0;default:return a.FontType.UNKNOWN}}function k(e,t){if(void 0!==t[e])return e;var r=(0,c.getUnicodeForGlyph)(e,t);if(-1!==r)for(var n in t)if(t[n]===r)return n;return(0,a.info)(\"Unable to recover a standard glyph name for: \"+e),e}var S=function(){function e(e,t,r,a,n,i,o,s){this.fontChar=e,this.unicode=t,this.accent=r,this.width=a,this.vmetric=n,this.operatorListId=i,this.isSpace=o,this.isInFont=s}return e.prototype.matchesForCache=function(e,t,r,a,n,i,o,s){return this.fontChar===e&&this.unicode===t&&this.accent===r&&this.width===a&&this.vmetric===n&&this.operatorListId===i&&this.isSpace===o&&this.isInFont===s},e}(),C=function(){function e(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this._map=e}return e.prototype={get length(){return this._map.length},forEach:function(e){for(var t in this._map)e(t,this._map[t].charCodeAt(0))},has:function(e){return void 0!==this._map[e]},get:function(e){return this._map[e]},charCodeOf:function(e){var t=this._map;if(t.length<=65536)return t.indexOf(e);for(var r in t)if(t[r]===e)return 0|r;return-1},amend:function(e){for(var t in e)this._map[t]=e[t]}},e}();t.ToUnicodeMap=C;var x=function(){function e(e,t){this.firstChar=e,this.lastChar=t}return e.prototype={get length(){return this.lastChar+1-this.firstChar},forEach:function(e){for(var t=this.firstChar,r=this.lastChar;t<=r;t++)e(t,t)},has:function(e){return this.firstChar<=e&&e<=this.lastChar},get:function(e){if(this.firstChar<=e&&e<=this.lastChar)return String.fromCharCode(e)},charCodeOf:function(e){return Number.isInteger(e)&&e>=this.firstChar&&e<=this.lastChar?e:-1},amend:function(e){(0,a.unreachable)(\"Should not call amend()\")}},e}();t.IdentityToUnicodeMap=x;var A=function(){function e(e,t,r){e[t]=r>>8&255,e[t+1]=255&r}function t(e,t,r){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r}function r(e,t,r){var a,n;if(r instanceof Uint8Array)e.set(r,t);else if(\"string\"===typeof r)for(a=0,n=r.length;a<n;a++)e[t++]=255&r.charCodeAt(a);else for(a=0,n=r.length;a<n;a++)e[t++]=255&r[a]}function n(e){this.sfnt=e,this.tables=Object.create(null)}n.getSearchParams=function(e,t){for(var r=1,a=0;(r^e)>r;)r<<=1,a++;var n=r*t;return{range:n,entry:a,rangeShift:t*e-n}};return n.prototype={toArray:function(){var i=this.sfnt,o=this.tables,s=Object.keys(o);s.sort();var c,l,u,h,f,d=s.length,g=12+16*d,p=[g];for(c=0;c<d;c++){g+=((h=o[s[c]]).length+3&-4)>>>0,p.push(g)}var m=new Uint8Array(g);for(c=0;c<d;c++)h=o[s[c]],r(m,p[c],h);\"true\"===i&&(i=(0,a.string32)(65536)),m[0]=255&i.charCodeAt(0),m[1]=255&i.charCodeAt(1),m[2]=255&i.charCodeAt(2),m[3]=255&i.charCodeAt(3),e(m,4,d);var v=n.getSearchParams(d,16);for(e(m,6,v.range),e(m,8,v.entry),e(m,10,v.rangeShift),g=12,c=0;c<d;c++){f=s[c],m[g]=255&f.charCodeAt(0),m[g+1]=255&f.charCodeAt(1),m[g+2]=255&f.charCodeAt(2),m[g+3]=255&f.charCodeAt(3);var b=0;for(l=p[c],u=p[c+1];l<u;l+=4){b=b+(0,a.readUint32)(m,l)>>>0}t(m,g+4,b),t(m,g+8,p[c]),t(m,g+12,o[f].length),g+=16}return m},addTable:function(e,t){if(e in this.tables)throw new Error(\"Table \"+e+\" already exists\");this.tables[e]=t}},n}(),_=function(){function e(e,t,r){var n;this.name=e,this.loadedName=r.loadedName,this.isType3Font=r.isType3Font,this.sizes=[],this.missingFile=!1,this.glyphCache=Object.create(null),this.isSerifFont=!!(r.flags&v.Serif),this.isSymbolicFont=!!(r.flags&v.Symbolic),this.isMonospace=!!(r.flags&v.FixedPitch);var i=r.type,o=r.subtype;if(this.type=i,this.subtype=o,this.fallbackName=this.isMonospace?\"monospace\":this.isSerifFont?\"serif\":\"sans-serif\",this.differences=r.differences,this.widths=r.widths,this.defaultWidth=r.defaultWidth,this.composite=r.composite,this.wideChars=r.wideChars,this.cMap=r.cMap,this.ascent=r.ascent/p,this.descent=r.descent/p,this.fontMatrix=r.fontMatrix,this.bbox=r.bbox,this.defaultEncoding=r.defaultEncoding,this.toUnicode=r.toUnicode,this.fallbackToUnicode=r.fallbackToUnicode||new C,this.toFontChar=[],\"Type3\"!==r.type){if(this.cidEncoding=r.cidEncoding,this.vertical=r.vertical,this.vertical&&(this.vmetrics=r.vmetrics,this.defaultVMetrics=r.defaultVMetrics),!t||t.isEmpty)return t&&(0,a.warn)('Font file is empty in \"'+e+'\" ('+this.loadedName+\")\"),void this.fallbackToSystemFont();var s=d(function(e,t){var r,n,i=t.type,o=t.subtype,s=t.composite;(function(e){var t=e.peekBytes(4);return 65536===(0,a.readUint32)(t,0)||\"true\"===(0,a.bytesToString)(t)})(e)||P(e)?r=s?\"CIDFontType2\":\"TrueType\":!function(e){var t=e.peekBytes(4);return\"OTTO\"===(0,a.bytesToString)(t)}(e)?!function(e){var t=e.peekBytes(2);if(37===t[0]&&33===t[1])return!0;if(128===t[0]&&1===t[1])return!0;return!1}(e)?!function(e){var t=e.peekBytes(4);if(t[0]>=1&&t[3]>=1&&t[3]<=4)return!0;return!1}(e)?((0,a.warn)(\"getFontFileType: Unable to detect correct font file Type/Subtype.\"),r=i,n=o):s?(r=\"CIDFontType0\",n=\"CIDFontType0C\"):(r=\"MMType1\"===i?\"MMType1\":\"Type1\",n=\"Type1C\"):r=s?\"CIDFontType0\":\"MMType1\"===i?\"MMType1\":\"Type1\":r=s?\"CIDFontType2\":\"OpenType\";return[r,n]}(t,r),2);i=s[0],o=s[1],i===this.type&&o===this.subtype||(0,a.info)(\"Inconsistent font file Type/SubType, expected: \"+\"\".concat(this.type,\"/\").concat(this.subtype,\" but found: \").concat(i,\"/\").concat(o,\".\"));try{var c;switch(i){case\"MMType1\":(0,a.info)(\"MMType1 font (\"+e+\"), falling back to Type1.\");case\"Type1\":case\"CIDFontType0\":this.mimetype=\"font/opentype\";var l=\"Type1C\"===o||\"CIDFontType0C\"===o?new T(t,r):new E(e,t,r);y(r),c=this.convert(e,l,r);break;case\"OpenType\":case\"TrueType\":case\"CIDFontType2\":this.mimetype=\"font/opentype\",c=this.checkAndRepair(e,t,r),this.isOpenType&&(y(r),i=\"OpenType\");break;default:throw new a.FormatError(\"Font \".concat(i,\" is not supported\"))}}catch(u){return(0,a.warn)(u),void this.fallbackToSystemFont()}this.data=c,this.fontType=w(i,o),this.fontMatrix=r.fontMatrix,this.widths=r.widths,this.defaultWidth=r.defaultWidth,this.toUnicode=r.toUnicode,this.encoding=r.baseEncoding,this.seacMap=r.seacMap}else{for(n=0;n<256;n++)this.toFontChar[n]=this.differences[n]||r.defaultEncoding[n];this.fontType=a.FontType.TYPE3}}function t(e,t){return(e<<8)+t}function r(e,t){var r=(e<<8)+t;return 32768&r?r-65536:r}function f(e){return String.fromCharCode(e>>8&255,255&e)}function _(e){return e=e>32767?32767:e<-32768?-32768:e,String.fromCharCode(e>>8&255,255&e)}function P(e){var t=e.peekBytes(4);return\"ttcf\"===(0,a.bytesToString)(t)}function I(e,t,r){for(var a,n=[],i=0,o=e.length;i<o;i++)-1!==(a=(0,c.getUnicodeForGlyph)(e[i],t))&&(n[i]=a);for(var s in r)-1!==(a=(0,c.getUnicodeForGlyph)(r[s],t))&&(n[+s]=a);return n}function O(e,t,r){var n=Object.create(null),i=[],o=0,s=g[o][0],c=g[o][1];for(var l in e){var u=e[l|=0];if(t(u)){if(s>c){if(++o>=g.length){(0,a.warn)(\"Ran out of space in font private use area.\");break}s=g[o][0],c=g[o][1]}var h=s++;0===u&&(u=r),n[h]=u,i[l]=h}}return{toFontChar:i,charCodeToGlyphId:n,nextAvailableFontCharCode:s}}function F(e,t){var r,n,i,o,s=function(e,t){var r=[];for(var a in e)e[a]>=t||r.push({fontCharCode:0|a,glyphId:e[a]});0===r.length&&r.push({fontCharCode:0,glyphId:0}),r.sort(function(e,t){return e.fontCharCode-t.fontCharCode});for(var n=[],i=r.length,o=0;o<i;){var s=r[o].fontCharCode,c=[r[o].glyphId];++o;for(var l=s;o<i&&l+1===r[o].fontCharCode&&(c.push(r[o].glyphId),++o,65535!==++l););n.push([s,l,c])}return n}(e,t),c=s[s.length-1][1]>65535?2:1,l=\"\\0\\0\"+f(c)+\"\\0\\x03\\0\\x01\"+(0,a.string32)(4+8*c);for(r=s.length-1;r>=0&&!(s[r][0]<=65535);--r);var u=r+1;s[r][0]<65535&&65535===s[r][1]&&(s[r][1]=65534);var h,d,g,p,m=s[r][1]<65535?1:0,v=u+m,b=A.getSearchParams(v,2),y=\"\",w=\"\",k=\"\",S=\"\",C=\"\",x=0;for(r=0,n=u;r<n;r++){d=(h=s[r])[0],g=h[1],y+=f(d),w+=f(g);var _=!0;for(i=1,o=(p=h[2]).length;i<o;++i)if(p[i]!==p[i-1]+1){_=!1;break}if(_){k+=f(p[0]-d&65535),S+=f(0)}else{var P=2*(v-r)+2*x;for(x+=g-d+1,k+=f(0),S+=f(P),i=0,o=p.length;i<o;++i)C+=f(p[i])}}m>0&&(w+=\"\\xff\\xff\",y+=\"\\xff\\xff\",k+=\"\\0\\x01\",S+=\"\\0\\0\");var I=\"\\0\\0\"+f(2*v)+f(b.range)+f(b.entry)+f(b.rangeShift)+w+\"\\0\\0\"+y+k+S+C,E=\"\",T=\"\";if(c>1){for(l+=\"\\0\\x03\\0\\n\"+(0,a.string32)(4+8*c+4+I.length),E=\"\",r=0,n=s.length;r<n;r++){d=(h=s[r])[0];var O=(p=h[2])[0];for(i=1,o=p.length;i<o;++i)p[i]!==p[i-1]+1&&(g=h[0]+i-1,E+=(0,a.string32)(d)+(0,a.string32)(g)+(0,a.string32)(O),d=g+1,O=p[i]);E+=(0,a.string32)(d)+(0,a.string32)(h[1])+(0,a.string32)(O)}T=\"\\0\\f\\0\\0\"+(0,a.string32)(E.length+16)+\"\\0\\0\\0\\0\"+(0,a.string32)(E.length/12)}return l+\"\\0\\x04\"+f(I.length+4)+I+T+E}function R(e,t,r){r=r||{unitsPerEm:0,yMax:0,yMin:0,ascent:0,descent:0};var n=0,i=0,o=0,s=0,l=null,u=0;if(t){for(var h in t){(l>(h|=0)||!l)&&(l=h),u<h&&(u=h);var d=(0,c.getUnicodeRangeFor)(h);if(d<32)n|=1<<d;else if(d<64)i|=1<<d-32;else if(d<96)o|=1<<d-64;else{if(!(d<123))throw new a.FormatError(\"Unicode ranges Bits > 123 are reserved for internal usage\");s|=1<<d-96}}u>65535&&(u=65535)}else l=0,u=255;var g=e.bbox||[0,0,0,0],m=r.unitsPerEm||1/(e.fontMatrix||a.FONT_IDENTITY_MATRIX)[0],v=e.ascentScaled?1:m/p,b=r.ascent||Math.round(v*(e.ascent||g[3])),y=r.descent||Math.round(v*(e.descent||g[1]));y>0&&e.descent>0&&g[1]<0&&(y=-y);var w=r.yMax||b,k=-r.yMin||-y;return\"\\0\\x03\\x02$\\x01\\xf4\\0\\x05\\0\\0\\x02\\x8a\\x02\\xbb\\0\\0\\0\\x8c\\x02\\x8a\\x02\\xbb\\0\\0\\x01\\xdf\\x001\\x01\\x02\\0\\0\\0\\0\\x06\"+String.fromCharCode(e.fixedPitch?9:0)+\"\\0\\0\\0\\0\\0\\0\"+(0,a.string32)(n)+(0,a.string32)(i)+(0,a.string32)(o)+(0,a.string32)(s)+\"*21*\"+f(e.italicAngle?1:0)+f(l||e.firstChar)+f(u||e.lastChar)+f(b)+f(y)+\"\\0d\"+f(w)+f(k)+\"\\0\\0\\0\\0\\0\\0\\0\\0\"+f(e.xHeight)+f(e.capHeight)+f(0)+f(l||e.firstChar)+\"\\0\\x03\"}function B(e){var t=Math.floor(e.italicAngle*Math.pow(2,16));return\"\\0\\x03\\0\\0\"+(0,a.string32)(t)+\"\\0\\0\\0\\0\"+(0,a.string32)(e.fixedPitch)+\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"}function M(e,t){t||(t=[[],[]]);var r,a,n,i,o,s=[t[0][0]||\"Original licence\",t[0][1]||e,t[0][2]||\"Unknown\",t[0][3]||\"uniqueID\",t[0][4]||e,t[0][5]||\"Version 0.11\",t[0][6]||\"\",t[0][7]||\"Unknown\",t[0][8]||\"Unknown\",t[0][9]||\"Unknown\"],c=[];for(r=0,a=s.length;r<a;r++){var l=[];for(n=0,i=(o=t[1][r]||s[r]).length;n<i;n++)l.push(f(o.charCodeAt(n)));c.push(l.join(\"\"))}var u=[s,c],h=[\"\\0\\x01\",\"\\0\\x03\"],d=[\"\\0\\0\",\"\\0\\x01\"],g=[\"\\0\\0\",\"\\x04\\t\"],p=s.length*h.length,m=\"\\0\\0\"+f(p)+f(12*p+6),v=0;for(r=0,a=h.length;r<a;r++){var b=u[r];for(n=0,i=b.length;n<i;n++){o=b[n],m+=h[r]+d[r]+g[r]+f(n)+f(o.length)+f(v),v+=o.length}}return m+=s.join(\"\")+c.join(\"\")}return e.getFontID=function(){var e=1;return function(){return String(e++)}}(),e.prototype={name:null,font:null,mimetype:null,encoding:null,disableFontFace:!1,get renderer(){var e=l.FontRendererFactory.create(this,m);return(0,a.shadow)(this,\"renderer\",e)},exportData:function(){var e={};for(var t in this)this.hasOwnProperty(t)&&(e[t]=this[t]);return e},fallbackToSystemFont:function(){var e,t,r=this;this.missingFile=!0;var n=this.name,l=this.type,u=this.subtype,h=n.replace(/[,_]/g,\"-\"),f=(0,s.getStdFontMap)(),d=(0,s.getNonStdFontMap)(),g=!!f[h]||!(!d[h]||!f[d[h]]);if(h=f[h]||d[h]||h,this.bold=-1!==h.search(/bold/gi),this.italic=-1!==h.search(/oblique/gi)||-1!==h.search(/italic/gi),this.black=-1!==n.search(/Black/g),this.remeasure=Object.keys(this.widths).length>0,g&&\"CIDFontType2\"===l&&this.cidEncoding.startsWith(\"Identity-\")){var p=(0,s.getGlyphMapForStandardFonts)(),m=[];for(e in p)m[+e]=p[e];if(/Arial-?Black/i.test(n)){var v=(0,s.getSupplementalGlyphMapForArialBlack)();for(e in v)m[+e]=v[e]}else if(/Calibri/i.test(n)){var b=(0,s.getSupplementalGlyphMapForCalibri)();for(e in b)m[+e]=b[e]}this.toUnicode instanceof x||this.toUnicode.forEach(function(e,t){m[+e]=t}),this.toFontChar=m,this.toUnicode=new C(m)}else if(/Symbol/i.test(h))this.toFontChar=I(o.SymbolSetEncoding,(0,i.getGlyphsUnicode)(),this.differences);else if(/Dingbats/i.test(h))/Wingdings/i.test(n)&&(0,a.warn)(\"Non-embedded Wingdings font, falling back to ZapfDingbats.\"),this.toFontChar=I(o.ZapfDingbatsEncoding,(0,i.getDingbatsGlyphsUnicode)(),this.differences);else if(g)this.toFontChar=I(this.defaultEncoding,(0,i.getGlyphsUnicode)(),this.differences);else{var y=(0,i.getGlyphsUnicode)();this.toUnicode.forEach(function(e,a){if(!r.composite){var n=r.differences[e]||r.defaultEncoding[e];-1!==(t=(0,c.getUnicodeForGlyph)(n,y))&&(a=t)}r.toFontChar[e]=a})}this.loadedName=h.split(\"-\")[0],this.fontType=w(l,u)},checkAndRepair:function(e,s,c){var l=[\"OS/2\",\"cmap\",\"head\",\"hhea\",\"hmtx\",\"maxp\",\"name\",\"post\",\"loca\",\"glyf\",\"fpgm\",\"prep\",\"cvt \",\"CFF \"];function f(e,t){var r=Object.create(null);r[\"OS/2\"]=null,r.cmap=null,r.head=null,r.hhea=null,r.hmtx=null,r.maxp=null,r.name=null,r.post=null;for(var a=0;a<t;a++){var n=d(s);l.includes(n.tag)&&(0!==n.length&&(r[n.tag]=n))}return r}function d(e){var t=(0,a.bytesToString)(e.getBytes(4)),r=e.getInt32()>>>0,n=e.getInt32()>>>0,i=e.getInt32()>>>0,o=e.pos;e.pos=e.start?e.start:0,e.skip(n);var s=e.getBytes(i);return e.pos=o,\"head\"===t&&(s[8]=s[9]=s[10]=s[11]=0,s[17]|=32),{tag:t,checksum:r,length:i,offset:n,data:s}}function g(e){return{version:(0,a.bytesToString)(e.getBytes(4)),numTables:e.getUint16(),searchRange:e.getUint16(),entrySelector:e.getUint16(),rangeShift:e.getUint16()}}function p(e,t,a,n,i,o){var s={length:0,sizeOfInstructions:0};if(a-t<=12)return s;var c,l,u,h=e.subarray(t,a),f=r(h[0],h[1]);if(f<0)return u=f=-1,(c=h)[(l=0)+1]=u,c[l]=u>>>8,n.set(h,i),s.length=h.length,s;var d,g=10,p=0;for(d=0;d<f;d++){p=(h[g]<<8|h[g+1])+1,g+=2}var m=g,v=h[g]<<8|h[g+1];s.sizeOfInstructions=v;var b=g+=2+v,y=0;for(d=0;d<p;d++){var w=h[g++];192&w&&(h[g-1]=63&w);var k=(2&w?1:16&w?0:2)+(4&w?1:32&w?0:2);if(y+=k,8&w){var S=h[g++];d+=S,y+=S*k}}if(0===y)return s;var C=g+y;return C>h.length?s:!o&&v>0?(n.set(h.subarray(0,m),i),n.set([0,0],i+m),n.set(h.subarray(b,C),i+m+2),C-=v,h.length-C>3&&(C=C+3&-4),s.length=C,s):h.length-C>3?(C=C+3&-4,n.set(h.subarray(0,C),i),s.length=C,s):(n.set(h,i),s.length=h.length,s)}function v(e){var t=(s.start?s.start:0)+e.offset;s.pos=t;var r=[[],[]],n=e.length,i=t+n;if(0!==s.getUint16()||n<6)return r;var o,c,l=s.getUint16(),u=s.getUint16(),h=[];for(o=0;o<l&&s.pos+12<=i;o++){var f={platform:s.getUint16(),encoding:s.getUint16(),language:s.getUint16(),name:s.getUint16(),length:s.getUint16(),offset:s.getUint16()};(1===f.platform&&0===f.encoding&&0===f.language||3===f.platform&&1===f.encoding&&1033===f.language)&&h.push(f)}for(o=0,c=h.length;o<c;o++){var d=h[o];if(!(d.length<=0)){var g=t+u+d.offset;if(!(g+d.length>i)){s.pos=g;var p=d.name;if(d.encoding){for(var m=\"\",v=0,b=d.length;v<b;v+=2)m+=String.fromCharCode(s.getUint16());r[1][p]=m}else r[0][p]=(0,a.bytesToString)(s.getBytes(d.length))}}}return r}var w,S,C,x,_=[0,0,0,0,0,0,0,0,-2,-2,-2,-2,0,0,-2,-5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,-1,-1,1,-1,-999,0,1,0,-1,-2,0,-1,-2,-1,-1,0,-1,-1,0,0,-999,-999,-1,-1,-1,-1,-2,-999,-2,-2,-999,0,-2,-2,0,0,-2,0,-2,0,0,0,-2,-1,-1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,0,-999,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-999,-999,-999,-999,-999,-1,-1,-2,-2,0,0,0,0,-1,-1,-999,-2,-2,0,0,-1,-2,-2,0,0,0,-1,-1,-1,-2];function I(e,t){for(var r,n,i,o,s,c=e.data,l=0,u=0,h=0,f=[],d=[],g=[],p=t.tooComplexToFollowFunctions,m=!1,v=0,b=0,y=c.length;l<y;){var w=c[l++];if(64===w)if(n=c[l++],m||b)l+=n;else for(r=0;r<n;r++)f.push(c[l++]);else if(65===w)if(n=c[l++],m||b)l+=2*n;else for(r=0;r<n;r++)i=c[l++],f.push(i<<8|c[l++]);else if(176===(248&w))if(n=w-176+1,m||b)l+=n;else for(r=0;r<n;r++)f.push(c[l++]);else if(184===(248&w))if(n=w-184+1,m||b)l+=2*n;else for(r=0;r<n;r++)i=c[l++],f.push(i<<8|c[l++]);else if(43!==w||p)if(44!==w||p){if(45===w)if(m)m=!1,u=l;else{if(!(s=d.pop()))return(0,a.warn)(\"TT: ENDF bad stack\"),void(t.hintsValid=!1);o=g.pop(),c=s.data,l=s.i,t.functionsStackDeltas[o]=f.length-s.stackTop}else if(137===w)(m||b)&&((0,a.warn)(\"TT: nested IDEFs not allowed\"),p=!0),m=!0,h=l;else if(88===w)++v;else if(27===w)b=v;else if(89===w)b===v&&(b=0),--v;else if(28===w&&!m&&!b){var k=f[f.length-1];k>0&&(l+=k-1)}}else(m||b)&&((0,a.warn)(\"TT: nested FDEFs not allowed\"),p=!0),m=!0,h=l,o=f.pop(),t.functionsDefined[o]={data:c,i:l};else if(!m&&!b)if(o=f[f.length-1],isNaN(o))(0,a.info)(\"TT: CALL empty stack (or invalid entry).\");else if(t.functionsUsed[o]=!0,o in t.functionsStackDeltas){var S=f.length+t.functionsStackDeltas[o];if(S<0)return(0,a.warn)(\"TT: CALL invalid functions stack delta.\"),void(t.hintsValid=!1);f.length=S}else if(o in t.functionsDefined&&!g.includes(o)){if(d.push({data:c,i:l,stackTop:f.length-1}),g.push(o),!(s=t.functionsDefined[o]))return(0,a.warn)(\"TT: CALL non-existent function\"),void(t.hintsValid=!1);c=s.data,l=s.i}if(!m&&!b){var C=w<=142?_[w]:w>=192&&w<=223?-1:w>=224?-2:0;for(w>=113&&w<=117&&(n=f.pop(),isNaN(n)||(C=2*-n));C<0&&f.length>0;)f.pop(),C++;for(;C>0;)f.push(NaN),C--}}t.tooComplexToFollowFunctions=p;var x=[c];l>c.length&&x.push(new Uint8Array(l-c.length)),h>u&&((0,a.warn)(\"TT: complementing a missing function tail\"),x.push(new Uint8Array([34,45]))),function(e,t){if(t.length>1){var r,a,n=0;for(r=0,a=t.length;r<a;r++)n+=t[r].length;n=n+3&-4;var i=new Uint8Array(n),o=0;for(r=0,a=t.length;r<a;r++)i.set(t[r],o),o+=t[r].length;e.data=i,e.length=n}}(e,x)}if(P(s=new h.Stream(new Uint8Array(s.getBytes())))){var E=function(e,t){for(var r=function(e){var t=(0,a.bytesToString)(e.getBytes(4));(0,a.assert)(\"ttcf\"===t,\"Must be a TrueType Collection font.\");for(var r=e.getUint16(),n=e.getUint16(),i=e.getInt32()>>>0,o=[],s=0;s<i;s++)o.push(e.getInt32()>>>0);var c={ttcTag:t,majorVersion:r,minorVersion:n,numFonts:i,offsetTable:o};switch(r){case 1:return c;case 2:return c.dsigTag=e.getInt32()>>>0,c.dsigLength=e.getInt32()>>>0,c.dsigOffset=e.getInt32()>>>0,c}throw new a.FormatError(\"Invalid TrueType Collection majorVersion: \".concat(r,\".\"))}(e),n=r.numFonts,i=r.offsetTable,o=0;o<n;o++){e.pos=(e.start||0)+i[o];var s=g(e),c=f(0,s.numTables);if(!c.name)throw new a.FormatError('TrueType Collection font must contain a \"name\" table.');for(var l=v(c.name),u=0,h=l.length;u<h;u++)for(var d=0,p=l[u].length;d<p;d++){var m=l[u][d];if(m&&m.replace(/\\s/g,\"\")===t)return{header:s,tables:c}}}throw new a.FormatError('TrueType Collection does not contain \"'.concat(t,'\" font.'))}(s,this.name);w=E.header,S=E.tables}else S=f(0,(w=g(s)).numTables);var D=!S[\"CFF \"];if(D){if(!S.loca)throw new a.FormatError('Required \"loca\" table is not found');S.glyf||((0,a.warn)('Required \"glyf\" table is not found -- trying to recover.'),S.glyf={tag:\"glyf\",data:new Uint8Array(0)}),this.isOpenType=!1}else{var L=c.composite&&((c.cidToGidMap||[]).length>0||!(c.cMap instanceof u.IdentityCMap));if(\"OTTO\"===w.version&&!L||!S.head||!S.hhea||!S.maxp||!S.post)return x=new h.Stream(S[\"CFF \"].data),C=new T(x,c),y(c),this.convert(e,C,c);delete S.glyf,delete S.loca,delete S.fpgm,delete S.prep,delete S[\"cvt \"],this.isOpenType=!0}if(!S.maxp)throw new a.FormatError('Required \"maxp\" table is not found');s.pos=(s.start||0)+S.maxp.offset;var N=s.getInt32(),U=s.getUint16(),q=U+1,j=!0;q>65535&&(j=!1,q=U,(0,a.warn)(\"Not enough space in glyfs to duplicate first glyph.\"));var z=0,H=0;N>=65536&&S.maxp.length>=22&&(s.pos+=8,s.getUint16()>2&&(S.maxp.data[14]=0,S.maxp.data[15]=2),s.pos+=4,z=s.getUint16(),s.pos+=4,H=s.getUint16());S.maxp.data[4]=q>>8,S.maxp.data[5]=255&q;var W=function(e,t,r,n){var i={functionsDefined:[],functionsUsed:[],functionsStackDeltas:[],tooComplexToFollowFunctions:!1,hintsValid:!0};if(e&&I(e,i),t&&I(t,i),e&&function(e,t){if(!e.tooComplexToFollowFunctions){if(e.functionsDefined.length>t)return(0,a.warn)(\"TT: more functions defined than expected\"),void(e.hintsValid=!1);for(var r=0,n=e.functionsUsed.length;r<n;r++){if(r>t)return(0,a.warn)(\"TT: invalid function id: \"+r),void(e.hintsValid=!1);if(e.functionsUsed[r]&&!e.functionsDefined[r])return(0,a.warn)(\"TT: undefined function: \"+r),void(e.hintsValid=!1)}}}(i,n),r&&1&r.length){var o=new Uint8Array(r.length+1);o.set(r.data),r.data=o}return i.hintsValid}(S.fpgm,S.prep,S[\"cvt \"],z);if(W||(delete S.fpgm,delete S.prep,delete S[\"cvt \"]),function(e,t,r,n){if(t){e.pos=(e.start?e.start:0)+t.offset,e.pos+=4,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=8,e.pos+=2;var i=e.getUint16();i>n&&((0,a.info)(\"The numOfMetrics (\"+i+\") should not be greater than the numGlyphs (\"+n+\")\"),i=n,t.data[34]=(65280&i)>>8,t.data[35]=255&i);var o=n-i-(r.length-4*i>>1);if(o>0){var s=new Uint8Array(r.length+2*o);s.set(r.data),r.data=s}}else r&&(r.data=null)}(s,S.hhea,S.hmtx,q),!S.head)throw new a.FormatError('Required \"head\" table is not found');!function(e,r,n){var i,o,s,c,l=e.data,u=(i=l[0],o=l[1],s=l[2],c=l[3],(i<<24)+(o<<16)+(s<<8)+c);u>>16!==1&&((0,a.info)(\"Attempting to fix invalid version in head table: \"+u),l[0]=0,l[1]=1,l[2]=0,l[3]=0);var h=t(l[50],l[51]);if(h<0||h>1){(0,a.info)(\"Attempting to fix invalid indexToLocFormat in head table: \"+h);var f=r+1;if(n===f<<1)l[50]=0,l[51]=0;else{if(n!==f<<2)throw new a.FormatError(\"Could not fix indexToLocFormat: \"+h);l[50]=0,l[51]=1}}}(S.head,U,D?S.loca.length:0);var G=Object.create(null);if(D){var X=t(S.head.data[50],S.head.data[51]),V=function(e,t,r,a,n,i,o){var s,c,l;a?(s=4,c=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]},l=function(e,t,r){e[t]=r>>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r}):(s=2,c=function(e,t){return e[t]<<9|e[t+1]<<1},l=function(e,t,r){e[t]=r>>9&255,e[t+1]=r>>1&255});var u=i?r+1:r,h=e.data,f=s*(1+u);(h=new Uint8Array(f)).set(e.data.subarray(0,f)),e.data=h;var d,g,m=t.data,v=m.length,b=new Uint8Array(v),y=c(h,0),w=0,k=Object.create(null);for(l(h,0,w),d=0,g=s;d<r;d++,g+=s){var S=c(h,g);0===S&&(S=y),S>v&&(v+3&-4)===S&&(S=v),S>v&&(y=S);var C=p(m,y,S,b,w,n),x=C.length;0===x&&(k[d]=!0),C.sizeOfInstructions>o&&(o=C.sizeOfInstructions),l(h,g,w+=x),y=S}if(0===w){var A=new Uint8Array([0,1,0,0,0,0,0,0,0,0,0,0,0,0,49,0]);for(d=0,g=s;d<u;d++,g+=s)l(h,g,A.length);t.data=A}else if(i){var _=c(h,s);b.length>_+w?t.data=b.subarray(0,_+w):(t.data=new Uint8Array(_+w),t.data.set(b.subarray(0,w))),t.data.set(b.subarray(0,_),w),l(e.data,h.length-s,w+_)}else t.data=b.subarray(0,w);return{missingGlyphs:k,maxSizeOfInstructions:o}}(S.loca,S.glyf,U,X,W,j,H);G=V.missingGlyphs,N>=65536&&S.maxp.length>=22&&(S.maxp.data[26]=V.maxSizeOfInstructions>>8,S.maxp.data[27]=255&V.maxSizeOfInstructions)}if(!S.hhea)throw new a.FormatError('Required \"hhea\" table is not found');0===S.hhea.data[10]&&0===S.hhea.data[11]&&(S.hhea.data[10]=255,S.hhea.data[11]=255);var Y={unitsPerEm:t(S.head.data[18],S.head.data[19]),yMax:t(S.head.data[42],S.head.data[43]),yMin:r(S.head.data[38],S.head.data[39]),ascent:t(S.hhea.data[4],S.hhea.data[5]),descent:r(S.hhea.data[6],S.hhea.data[7])};this.ascent=Y.ascent/Y.unitsPerEm,this.descent=Y.descent/Y.unitsPerEm,S.post&&function(e,t,r){var n=(s.start?s.start:0)+e.offset;s.pos=n;var i,o=n+e.length,c=s.getInt32();s.getBytes(28);var l,u=!0;switch(c){case 65536:i=b;break;case 131072:var h=s.getUint16();if(h!==r){u=!1;break}var f=[];for(l=0;l<h;++l){var d=s.getUint16();if(d>=32768){u=!1;break}f.push(d)}if(!u)break;for(var g=[],p=[];s.pos<o;){var m=s.getByte();for(p.length=m,l=0;l<m;++l)p[l]=String.fromCharCode(s.getByte());g.push(p.join(\"\"))}for(i=[],l=0;l<h;++l){var v=f[l];v<258?i.push(b[v]):i.push(g[v-258])}break;case 196608:break;default:(0,a.warn)(\"Unknown/unsupported post table version \"+c),u=!1,t.defaultEncoding&&(i=t.defaultEncoding)}t.glyphNames=i}(S.post,c,U),S.post={tag:\"post\",data:B(c)};var K,J=[];function Z(e){return!G[e]}if(c.composite){var Q=c.cidToGidMap||[],$=0===Q.length;c.cMap.forEach(function(e,t){if(t>65535)throw new a.FormatError(\"Max size of CID is 65,535\");var r=-1;$?r=t:void 0!==Q[t]&&(r=Q[t]),r>=0&&r<U&&Z(r)&&(J[e]=r)})}else{var ee=function(e,t,r,n){if(!e)return(0,a.warn)(\"No cmap table available.\"),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var i,o=(t.start?t.start:0)+e.offset;t.pos=o,t.getUint16();for(var s,c=t.getUint16(),l=!1,u=0;u<c;u++){var h=t.getUint16(),f=t.getUint16(),d=t.getInt32()>>>0,g=!1;if((!s||s.platformId!==h||s.encodingId!==f)&&(0===h&&0===f?g=!0:1===h&&0===f?g=!0:3!==h||1!==f||!n&&s?r&&3===h&&0===f&&(g=!0,l=!0):(g=!0,r||(l=!0)),g&&(s={platformId:h,encodingId:f,offset:d}),l))break}if(s&&(t.pos=o+s.offset),!s||-1===t.peekByte())return(0,a.warn)(\"Could not find a preferred cmap table.\"),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var p=t.getUint16();t.getUint16(),t.getUint16();var m,v,b=!1,y=[];if(0===p){for(m=0;m<256;m++){var w=t.getByte();w&&y.push({charCode:m,glyphId:w})}b=!0}else if(4===p){var k=t.getUint16()>>1;t.getBytes(6);var S,C=[];for(S=0;S<k;S++)C.push({end:t.getUint16()});for(t.getUint16(),S=0;S<k;S++)C[S].start=t.getUint16();for(S=0;S<k;S++)C[S].delta=t.getUint16();var x=0;for(S=0;S<k;S++){i=C[S];var A=t.getUint16();if(A){var _=(A>>1)-(k-S);i.offsetIndex=_,x=Math.max(x,_+i.end-i.start+1)}else i.offsetIndex=-1}var P=[];for(m=0;m<x;m++)P.push(t.getUint16());for(S=0;S<k;S++){o=(i=C[S]).start;var I=i.end,E=i.delta;for(_=i.offsetIndex,m=o;m<=I;m++)65535!==m&&(v=(v=_<0?m:P[_+m-o])+E&65535,y.push({charCode:m,glyphId:v}))}}else{if(6!==p)return(0,a.warn)(\"cmap table has unsupported format: \"+p),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var T=t.getUint16(),O=t.getUint16();for(m=0;m<O;m++){v=t.getUint16();var F=T+m;y.push({charCode:F,glyphId:v})}}for(y.sort(function(e,t){return e.charCode-t.charCode}),u=1;u<y.length;u++)y[u-1].charCode===y[u].charCode&&(y.splice(u,1),u--);return{platformId:s.platformId,encodingId:s.encodingId,mappings:y,hasShortCmap:b}}(S.cmap,s,this.isSymbolicFont,c.hasEncoding),te=ee.platformId,re=ee.encodingId,ae=ee.mappings,ne=ae.length;if(c.hasEncoding&&(3===te&&1===re||1===te&&0===re)||-1===te&&-1===re&&(0,o.getEncoding)(c.baseEncodingName)){var ie=[];\"MacRomanEncoding\"!==c.baseEncodingName&&\"WinAnsiEncoding\"!==c.baseEncodingName||(ie=(0,o.getEncoding)(c.baseEncodingName));var oe=(0,i.getGlyphsUnicode)();for(K=0;K<256;K++){var se,ce;if(se=this.differences&&K in this.differences?this.differences[K]:K in ie&&\"\"!==ie[K]?ie[K]:o.StandardEncoding[K]){var le;ce=k(se,oe),3===te&&1===re?le=oe[ce]:1===te&&0===re&&(le=o.MacRomanEncoding.indexOf(ce));for(var ue=!1,he=0;he<ne;++he)if(ae[he].charCode===le){J[K]=ae[he].glyphId,ue=!0;break}if(!ue&&c.glyphNames){var fe=c.glyphNames.indexOf(se);-1===fe&&ce!==se&&(fe=c.glyphNames.indexOf(ce)),fe>0&&Z(fe)&&(J[K]=fe)}}}}else if(0===te&&0===re)for(var de=0;de<ne;++de)J[ae[de].charCode]=ae[de].glyphId;else for(var ge=0;ge<ne;++ge)K=ae[ge].charCode,3===te&&K>=61440&&K<=61695&&(K&=255),J[K]=ae[ge].glyphId}0===J.length&&(J[0]=0);var pe=q-1;j||(pe=0);var me=O(J,Z,pe);if(this.toFontChar=me.toFontChar,S.cmap={tag:\"cmap\",data:F(me.charCodeToGlyphId,q)},S[\"OS/2\"]&&function(e){var t=new h.Stream(e.data),r=t.getUint16();t.getBytes(60);var a=t.getUint16();return!(r<4&&768&a)&&!(t.getUint16()>t.getUint16())&&(t.getBytes(6),0!==t.getUint16()&&(e.data[8]=e.data[9]=0,!0))}(S[\"OS/2\"])||(S[\"OS/2\"]={tag:\"OS/2\",data:R(c,me.charCodeToGlyphId,Y)}),!D)try{x=new h.Stream(S[\"CFF \"].data),(C=new n.CFFParser(x,c,m).parse()).duplicateFirstGlyph();var ve=new n.CFFCompiler(C);S[\"CFF \"].data=ve.compile()}catch(ke){(0,a.warn)(\"Failed to compile font \"+c.loadedName)}if(S.name){var be=v(S.name);S.name.data=M(e,be)}else S.name={tag:\"name\",data:M(this.name)};var ye=new A(w.version);for(var we in S)ye.addTable(we,S[we].data);return ye.toArray()},convert:function(e,t,r){r.fixedPitch=!1,r.builtInEncoding&&function(e,t){if(!e.hasIncludedToUnicodeMap&&!e.hasEncoding&&t!==e.defaultEncoding&&!(e.toUnicode instanceof x)){var r=[],a=(0,i.getGlyphsUnicode)();for(var n in t){var o=t[n],s=(0,c.getUnicodeForGlyph)(o,a);-1!==s&&(r[n]=String.fromCharCode(s))}e.toUnicode.amend(r)}}(r,r.builtInEncoding);var n=1;t instanceof T&&(n=t.numGlyphs-1);var s=t.getGlyphMapping(r),l=O(s,t.hasGlyphId.bind(t),n);this.toFontChar=l.toFontChar;var u=t.numGlyphs;function h(e,t){var r=null;for(var a in e)t===e[a]&&(r||(r=[]),r.push(0|a));return r}function d(e,t){for(var r in e)if(t===e[r])return 0|r;return l.charCodeToGlyphId[l.nextAvailableFontCharCode]=t,l.nextAvailableFontCharCode++}var g=t.seacs;if(m&&g&&g.length){var p=r.fontMatrix||a.FONT_IDENTITY_MATRIX,v=t.getCharset(),b=Object.create(null);for(var y in g){var w=g[y|=0],k=o.StandardEncoding[w[2]],S=o.StandardEncoding[w[3]],C=v.indexOf(k),P=v.indexOf(S);if(!(C<0||P<0)){var I={x:w[0]*p[0]+w[1]*p[2]+p[4],y:w[0]*p[1]+w[1]*p[3]+p[5]},E=h(s,y);if(E)for(var D=0,L=E.length;D<L;D++){var N=E[D],U=l.charCodeToGlyphId,q=d(U,C),j=d(U,P);b[N]={baseFontCharCode:q,accentFontCharCode:j,accentOffset:I}}}}r.seacMap=b}var z=1/(r.fontMatrix||a.FONT_IDENTITY_MATRIX)[0],H=new A(\"OTTO\");return H.addTable(\"CFF \",t.data),H.addTable(\"OS/2\",R(r,l.charCodeToGlyphId)),H.addTable(\"cmap\",F(l.charCodeToGlyphId,u)),H.addTable(\"head\",\"\\0\\x01\\0\\0\\0\\0\\x10\\0\\0\\0\\0\\0_\\x0f<\\xf5\\0\\0\"+_(z)+\"\\0\\0\\0\\0\\x9e\\v~'\\0\\0\\0\\0\\x9e\\v~'\\0\\0\"+_(r.descent)+\"\\x0f\\xff\"+_(r.ascent)+f(r.italicAngle?2:0)+\"\\0\\x11\\0\\0\\0\\0\\0\\0\"),H.addTable(\"hhea\",\"\\0\\x01\\0\\0\"+_(r.ascent)+_(r.descent)+\"\\0\\0\\xff\\xff\\0\\0\\0\\0\\0\\0\"+_(r.capHeight)+_(Math.tan(r.italicAngle)*r.xHeight)+\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"+f(u)),H.addTable(\"hmtx\",function(){for(var e=t.charstrings,r=t.cff?t.cff.widths:null,a=\"\\0\\0\\0\\0\",n=1,i=u;n<i;n++){var o=0;if(e){var s=e[n-1];o=\"width\"in s?s.width:0}else r&&(o=Math.ceil(r[n]||0));a+=f(o)+f(0)}return a}()),H.addTable(\"maxp\",\"\\0\\0P\\0\"+f(u)),H.addTable(\"name\",M(e)),H.addTable(\"post\",B(r)),H.toArray()},get spaceWidth(){if(\"_shadowWidth\"in this)return this._shadowWidth;for(var e,t=[\"space\",\"minus\",\"one\",\"i\",\"I\"],r=0,a=t.length;r<a;r++){var n=t[r];if(n in this.widths){e=this.widths[n];break}var o=(0,i.getGlyphsUnicode)()[n],s=0;if(this.composite&&this.cMap.contains(o)&&(s=this.cMap.lookup(o)),!s&&this.toUnicode&&(s=this.toUnicode.charCodeOf(o)),s<=0&&(s=o),e=this.widths[s])break}return e=e||this.defaultWidth,this._shadowWidth=e,e},charToGlyph:function(e,t){var r,n,i,o=e;this.cMap&&this.cMap.contains(e)&&(o=this.cMap.lookup(e)),n=this.widths[o],n=(0,a.isNum)(n)?n:this.defaultWidth;var s=this.vmetrics&&this.vmetrics[o],l=this.toUnicode.get(e)||this.fallbackToUnicode.get(e)||e;\"number\"===typeof l&&(l=String.fromCharCode(l));var u=e in this.toFontChar;r=this.toFontChar[e]||e,this.missingFile&&(r=(0,c.mapSpecialUnicodeValues)(r)),this.isType3Font&&(i=r);var h=null;if(this.seacMap&&this.seacMap[e]){u=!0;var f=this.seacMap[e];r=f.baseFontCharCode,h={fontChar:String.fromCodePoint(f.accentFontCharCode),offset:f.accentOffset}}var d=\"number\"===typeof r?String.fromCodePoint(r):\"\",g=this.glyphCache[e];return g&&g.matchesForCache(d,l,h,n,s,i,t,u)||(g=new S(d,l,h,n,s,i,t,u),this.glyphCache[e]=g),g},charsToGlyphs:function(e){var t,r,a,n=this.charsCache;if(n&&(t=n[e]))return t;n||(n=this.charsCache=Object.create(null)),t=[];var i,o=e,s=0;if(this.cMap)for(var c=Object.create(null);s<e.length;){this.cMap.readCharCode(e,s,c),a=c.charcode;var l=c.length;s+=l;var u=1===l&&32===e.charCodeAt(s-1);r=this.charToGlyph(a,u),t.push(r)}else for(s=0,i=e.length;s<i;++s)a=e.charCodeAt(s),r=this.charToGlyph(a,32===a),t.push(r);return n[o]=t},get glyphCacheValues(){return Object.values(this.glyphCache)}},e}();t.Font=_;var P=function(){function e(e){this.error=e,this.loadedName=\"g_font_error\",this.missingFile=!0}return e.prototype={charsToGlyphs:function(){return[]},exportData:function(){return{error:this.error}}},e}();function I(e,t,r){var a,n,s,c=Object.create(null),l=!!(e.flags&v.Symbolic);if(e.baseEncodingName)for(s=(0,o.getEncoding)(e.baseEncodingName),n=0;n<s.length;n++)a=r.indexOf(s[n]),c[n]=a>=0?a:0;else if(l)for(n in t)c[n]=t[n];else for(s=o.StandardEncoding,n=0;n<s.length;n++)a=r.indexOf(s[n]),c[n]=a>=0?a:0;var u,h=e.differences;if(h)for(n in h){var f=h[n];if(-1===(a=r.indexOf(f))){u||(u=(0,i.getGlyphsUnicode)());var d=k(f,u);d!==f&&(a=r.indexOf(d))}c[n]=a>=0?a:0}return c}t.ErrorFont=P;var E=function(){function e(e,t,r){for(var n,i=e.length,o=t.length,s=i-o,c=r,l=!1;c<s;){for(n=0;n<o&&e[c+n]===t[n];)n++;if(n>=o){for(c+=n;c<i&&(0,a.isSpace)(e[c]);)c++;l=!0;break}c++}return{found:l,length:c}}function t(t,r,n){var i=n.length1,o=(n.length2,r.peekBytes(6)),s=128===o[0]&&1===o[1];s&&(r.skip(6),i=o[5]<<24|o[4]<<16|o[3]<<8|o[2]);var c=function(t,r){var n,i,o,s,c=[101,101,120,101,99],l=t.pos;try{i=(n=t.getBytes(r)).length}catch(u){if(u instanceof a.MissingDataException)throw u}if(i===r&&(o=e(n,c,r-2*c.length)).found&&o.length===r)return{stream:new h.Stream(n),length:r};for((0,a.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.'),t.pos=l;0!==(o=e(t.peekBytes(2048),c,0)).length;)if(t.pos+=o.length,o.found){s=t.pos-l;break}return t.pos=l,s?{stream:new h.Stream(t.getBytes(s)),length:s}:((0,a.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.'),{stream:new h.Stream(t.getBytes(r)),length:r})}(r,i);new f.Type1Parser(c.stream,!1,m).extractFontHeader(n),s&&((o=r.getBytes(6))[5],o[4],o[3],o[2]);var l=function(e,t){var r=e.getBytes();return{stream:new h.Stream(r),length:r.length}}(r),u=new f.Type1Parser(l.stream,!0,m).extractFontProgram();for(var d in u.properties)n[d]=u.properties[d];var g=u.charstrings,p=this.getType2Charstrings(g),v=this.getType2Subrs(u.subrs);this.charstrings=g,this.data=this.wrap(t,p,this.charstrings,v,n),this.seacs=this.getSeacs(u.charstrings)}return t.prototype={get numGlyphs(){return this.charstrings.length+1},getCharset:function(){for(var e=[\".notdef\"],t=this.charstrings,r=0;r<t.length;r++)e.push(t[r].glyphName);return e},getGlyphMapping:function(e){var t,r=this.charstrings,a=[\".notdef\"];for(t=0;t<r.length;t++)a.push(r[t].glyphName);var n=e.builtInEncoding;if(n){var i=Object.create(null);for(var o in n)(t=a.indexOf(n[o]))>=0&&(i[o]=t)}return I(e,i,a)},hasGlyphId:function(e){return!(e<0||e>=this.numGlyphs)&&(0===e||this.charstrings[e-1].charstring.length>0)},getSeacs:function(e){var t,r,a=[];for(t=0,r=e.length;t<r;t++){var n=e[t];n.seac&&(a[t+1]=n.seac)}return a},getType2Charstrings:function(e){for(var t=[],r=0,a=e.length;r<a;r++)t.push(e[r].charstring);return t},getType2Subrs:function(e){var t=0,r=e.length;t=r<1133?107:r<33769?1131:32768;var a,n=[];for(a=0;a<t;a++)n.push([11]);for(a=0;a<r;a++)n.push(e[a]);return n},wrap:function(e,t,r,a,i){var o=new n.CFF;o.header=new n.CFFHeader(1,0,4,4),o.names=[e];var s=new n.CFFTopDict;s.setByName(\"version\",391),s.setByName(\"Notice\",392),s.setByName(\"FullName\",393),s.setByName(\"FamilyName\",394),s.setByName(\"Weight\",395),s.setByName(\"Encoding\",null),s.setByName(\"FontMatrix\",i.fontMatrix),s.setByName(\"FontBBox\",i.bbox),s.setByName(\"charset\",null),s.setByName(\"CharStrings\",null),s.setByName(\"Private\",null),o.topDict=s;var c=new n.CFFStrings;c.add(\"Version 0.11\"),c.add(\"See original notice\"),c.add(e),c.add(e),c.add(\"Medium\"),o.strings=c,o.globalSubrIndex=new n.CFFIndex;var l,u,h=t.length,f=[0];for(l=0;l<h;l++){var d=n.CFFStandardStrings.indexOf(r[l].glyphName);-1===d&&(d=0),f.push(d>>8&255,255&d)}o.charset=new n.CFFCharset(!1,0,[],f);var g=new n.CFFIndex;for(g.add([139,14]),l=0;l<h;l++)g.add(t[l]);o.charStrings=g;var p=new n.CFFPrivateDict;p.setByName(\"Subrs\",null);var m=[\"BlueValues\",\"OtherBlues\",\"FamilyBlues\",\"FamilyOtherBlues\",\"StemSnapH\",\"StemSnapV\",\"BlueShift\",\"BlueFuzz\",\"BlueScale\",\"LanguageGroup\",\"ExpansionFactor\",\"ForceBold\",\"StdHW\",\"StdVW\"];for(l=0,u=m.length;l<u;l++){var v=m[l];if(v in i.privateData){var b=i.privateData[v];if(Array.isArray(b))for(var y=b.length-1;y>0;y--)b[y]-=b[y-1];p.setByName(v,b)}}o.topDict.privateDict=p;var w=new n.CFFIndex;for(l=0,u=a.length;l<u;l++)w.add(a[l]);return p.subrsIndex=w,new n.CFFCompiler(o).compile()}},t}(),T=function(){function e(e,t){this.properties=t;var r=new n.CFFParser(e,t,m);this.cff=r.parse(),this.cff.duplicateFirstGlyph();var i=new n.CFFCompiler(this.cff);this.seacs=this.cff.seacs;try{this.data=i.compile()}catch(o){(0,a.warn)(\"Failed to compile font \"+t.loadedName),this.data=e}}return e.prototype={get numGlyphs(){return this.cff.charStrings.count},getCharset:function(){return this.cff.charset.charset},getGlyphMapping:function(){var e,t,r=this.cff,a=this.properties,n=r.charset.charset;if(a.composite){if(e=Object.create(null),r.isCIDFont)for(t=0;t<n.length;t++){var i=n[t];e[a.cMap.charCodeOf(i)]=t}else for(t=0;t<r.charStrings.count;t++)e[t]=t;return e}return e=I(a,r.encoding?r.encoding.encoding:null,n)},hasGlyphId:function(e){return this.cff.hasGlyphId(e)}},e}()},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CFFFDSelect=t.CFFCompiler=t.CFFPrivateDict=t.CFFTopDict=t.CFFCharset=t.CFFIndex=t.CFFStrings=t.CFFHeader=t.CFF=t.CFFParser=t.CFFStandardStrings=void 0;var a=r(6),n=r(175),i=r(176),o=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\",\"001.000\",\"001.001\",\"001.002\",\"001.003\",\"Black\",\"Bold\",\"Book\",\"Light\",\"Medium\",\"Regular\",\"Roman\",\"Semibold\"];t.CFFStandardStrings=o;var s=function(){var e=[null,{id:\"hstem\",min:2,stackClearing:!0,stem:!0},null,{id:\"vstem\",min:2,stackClearing:!0,stem:!0},{id:\"vmoveto\",min:1,stackClearing:!0},{id:\"rlineto\",min:2,resetStack:!0},{id:\"hlineto\",min:1,resetStack:!0},{id:\"vlineto\",min:1,resetStack:!0},{id:\"rrcurveto\",min:6,resetStack:!0},null,{id:\"callsubr\",min:1,undefStack:!0},{id:\"return\",min:0,undefStack:!0},null,null,{id:\"endchar\",min:0,stackClearing:!0},null,null,null,{id:\"hstemhm\",min:2,stackClearing:!0,stem:!0},{id:\"hintmask\",min:0,stackClearing:!0},{id:\"cntrmask\",min:0,stackClearing:!0},{id:\"rmoveto\",min:2,stackClearing:!0},{id:\"hmoveto\",min:1,stackClearing:!0},{id:\"vstemhm\",min:2,stackClearing:!0,stem:!0},{id:\"rcurveline\",min:8,resetStack:!0},{id:\"rlinecurve\",min:8,resetStack:!0},{id:\"vvcurveto\",min:4,resetStack:!0},{id:\"hhcurveto\",min:4,resetStack:!0},null,{id:\"callgsubr\",min:1,undefStack:!0},{id:\"vhcurveto\",min:4,resetStack:!0},{id:\"hvcurveto\",min:4,resetStack:!0}],t=[null,null,null,{id:\"and\",min:2,stackDelta:-1},{id:\"or\",min:2,stackDelta:-1},{id:\"not\",min:1,stackDelta:0},null,null,null,{id:\"abs\",min:1,stackDelta:0},{id:\"add\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]+e[t-1]}},{id:\"sub\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]-e[t-1]}},{id:\"div\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]/e[t-1]}},null,{id:\"neg\",min:1,stackDelta:0,stackFn:function(e,t){e[t-1]=-e[t-1]}},{id:\"eq\",min:2,stackDelta:-1},null,null,{id:\"drop\",min:1,stackDelta:-1},null,{id:\"put\",min:2,stackDelta:-2},{id:\"get\",min:1,stackDelta:0},{id:\"ifelse\",min:4,stackDelta:-3},{id:\"random\",min:0,stackDelta:1},{id:\"mul\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]*e[t-1]}},null,{id:\"sqrt\",min:1,stackDelta:0},{id:\"dup\",min:1,stackDelta:1},{id:\"exch\",min:2,stackDelta:0},{id:\"index\",min:2,stackDelta:0},{id:\"roll\",min:3,stackDelta:-2},null,null,null,{id:\"hflex\",min:7,resetStack:!0},{id:\"flex\",min:13,resetStack:!0},{id:\"hflex1\",min:9,resetStack:!0},{id:\"flex1\",min:11,resetStack:!0}];function r(e,t,r){this.bytes=e.getBytes(),this.properties=t,this.seacAnalysisEnabled=!!r}return r.prototype={parse:function(){var e=this.properties,t=new c;this.cff=t;var r=this.parseHeader(),a=this.parseIndex(r.endPos),n=this.parseIndex(a.endPos),i=this.parseIndex(n.endPos),o=this.parseIndex(i.endPos),s=this.parseDict(n.obj.get(0)),l=this.createDict(d,s,t.strings);t.header=r.obj,t.names=this.parseNameIndex(a.obj),t.strings=this.parseStringIndex(i.obj),t.topDict=l,t.globalSubrIndex=o.obj,this.parsePrivateDict(t.topDict),t.isCIDFont=l.hasName(\"ROS\");var u=l.getByName(\"CharStrings\"),h=this.parseIndex(u).obj,f=l.getByName(\"FontMatrix\");f&&(e.fontMatrix=f);var g,p,m=l.getByName(\"FontBBox\");if(m&&(e.ascent=Math.max(m[3],m[1]),e.descent=Math.min(m[1],m[3]),e.ascentScaled=!0),t.isCIDFont){for(var v=this.parseIndex(l.getByName(\"FDArray\")).obj,b=0,y=v.count;b<y;++b){var w=v.get(b),k=this.createDict(d,this.parseDict(w),t.strings);this.parsePrivateDict(k),t.fdArray.push(k)}p=null,g=this.parseCharsets(l.getByName(\"charset\"),h.count,t.strings,!0),t.fdSelect=this.parseFDSelect(l.getByName(\"FDSelect\"),h.count)}else g=this.parseCharsets(l.getByName(\"charset\"),h.count,t.strings,!1),p=this.parseEncoding(l.getByName(\"Encoding\"),e,t.strings,g.charset);t.charset=g,t.encoding=p;var S=this.parseCharStrings({charStrings:h,localSubrIndex:l.privateDict.subrsIndex,globalSubrIndex:o.obj,fdSelect:t.fdSelect,fdArray:t.fdArray,privateDict:l.privateDict});return t.charStrings=S.charStrings,t.seacs=S.seacs,t.widths=S.widths,t},parseHeader:function(){for(var e=this.bytes,t=e.length,r=0;r<t&&1!==e[r];)++r;if(r>=t)throw new a.FormatError(\"Invalid CFF header\");0!==r&&((0,a.info)(\"cff data is shifted\"),e=e.subarray(r),this.bytes=e);var n=e[0],i=e[1],o=e[2],s=e[3];return{obj:new l(n,i,o,s),endPos:o}},parseDict:function(e){var t=0;function r(){var r=e[t++];return 30===r?function(){var r=\"\",a=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\".\",\"E\",\"E-\",null,\"-\"],n=e.length;for(;t<n;){var i=e[t++],o=i>>4,s=15&i;if(15===o)break;if(r+=a[o],15===s)break;r+=a[s]}return parseFloat(r)}():28===r?r=((r=e[t++])<<24|e[t++]<<16)>>16:29===r?r=(r=(r=(r=e[t++])<<8|e[t++])<<8|e[t++])<<8|e[t++]:r>=32&&r<=246?r-139:r>=247&&r<=250?256*(r-247)+e[t++]+108:r>=251&&r<=254?-256*(r-251)-e[t++]-108:((0,a.warn)('CFFParser_parseDict: \"'+r+'\" is a reserved command.'),NaN)}var n=[],i=[];t=0;for(var o=e.length;t<o;){var s=e[t];s<=21?(12===s&&(s=s<<8|e[++t]),i.push([s,n]),n=[],++t):n.push(r())}return i},parseIndex:function(e){var t,r,a=new h,n=this.bytes,i=n[e++]<<8|n[e++],o=[],s=e;if(0!==i){var c=n[e++],l=e+(i+1)*c-1;for(t=0,r=i+1;t<r;++t){for(var u=0,f=0;f<c;++f)u<<=8,u+=n[e++];o.push(l+u)}s=o[i]}for(t=0,r=o.length-1;t<r;++t){var d=o[t],g=o[t+1];a.add(n.subarray(d,g))}return{obj:a,endPos:s}},parseNameIndex:function(e){for(var t=[],r=0,n=e.count;r<n;++r){var i=e.get(r);t.push((0,a.bytesToString)(i))}return t},parseStringIndex:function(e){for(var t=new u,r=0,n=e.count;r<n;++r){var i=e.get(r);t.add((0,a.bytesToString)(i))}return t},createDict:function(e,t,r){for(var a=new e(r),n=0,i=t.length;n<i;++n){var o=t[n],s=o[0],c=o[1];a.setByKey(s,c)}return a},parseCharString:function(r,n,i,o){if(!n||r.callDepth>10)return!1;for(var s=r.stackSize,c=r.stack,l=n.length,u=0;u<l;){var h=n[u++],f=null;if(12===h){var d=n[u++];0===d?(n[u-2]=139,n[u-1]=22,s=0):f=t[d]}else if(28===h)c[s]=(n[u]<<24|n[u+1]<<16)>>16,u+=2,s++;else if(14===h){if(s>=4&&(s-=4,this.seacAnalysisEnabled))return r.seac=c.slice(s,s+4),!1;f=e[h]}else if(h>=32&&h<=246)c[s]=h-139,s++;else if(h>=247&&h<=254)c[s]=h<251?(h-247<<8)+n[u]+108:-(h-251<<8)-n[u]-108,u++,s++;else if(255===h)c[s]=(n[u]<<24|n[u+1]<<16|n[u+2]<<8|n[u+3])/65536,u+=4,s++;else if(19===h||20===h)r.hints+=s>>1,u+=r.hints+7>>3,s%=2,f=e[h];else{if(10===h||29===h){var g;if(!(g=10===h?i:o))return f=e[h],(0,a.warn)(\"Missing subrsIndex for \"+f.id),!1;var p=32768;g.count<1240?p=107:g.count<33900&&(p=1131);var m=c[--s]+p;if(m<0||m>=g.count||isNaN(m))return f=e[h],(0,a.warn)(\"Out of bounds subrIndex for \"+f.id),!1;if(r.stackSize=s,r.callDepth++,!this.parseCharString(r,g.get(m),i,o))return!1;r.callDepth--,s=r.stackSize;continue}if(11===h)return r.stackSize=s,!0;f=e[h]}if(f){if(f.stem&&(r.hints+=s>>1,3===h||23===h?r.hasVStems=!0:!r.hasVStems||1!==h&&18!==h||((0,a.warn)(\"CFF stem hints are in wrong order\"),n[u-1]=1===h?3:23)),\"min\"in f&&!r.undefStack&&s<f.min)return(0,a.warn)(\"Not enough parameters for \"+f.id+\"; actual: \"+s+\", expected: \"+f.min),!1;r.firstStackClearing&&f.stackClearing&&(r.firstStackClearing=!1,(s-=f.min)>=2&&f.stem?s%=2:s>1&&(0,a.warn)(\"Found too many parameters for stack-clearing command\"),s>0&&c[s-1]>=0&&(r.width=c[s-1])),\"stackDelta\"in f?(\"stackFn\"in f&&f.stackFn(c,s),s+=f.stackDelta):f.stackClearing?s=0:f.resetStack?(s=0,r.undefStack=!1):f.undefStack&&(s=0,r.undefStack=!0,r.firstStackClearing=!1)}}return r.stackSize=s,!0},parseCharStrings:function(e){for(var t=e.charStrings,r=e.localSubrIndex,n=e.globalSubrIndex,i=e.fdSelect,o=e.fdArray,s=e.privateDict,c=[],l=[],u=t.count,h=0;h<u;h++){var f=t.get(h),d={callDepth:0,stackSize:0,stack:[],undefStack:!0,hints:0,firstStackClearing:!0,seac:null,width:null,hasVStems:!1},g=!0,p=null,m=s;if(i&&o.length){var v=i.getFDIndex(h);-1===v&&((0,a.warn)(\"Glyph index is not in fd select.\"),g=!1),v>=o.length&&((0,a.warn)(\"Invalid fd index for glyph index.\"),g=!1),g&&(p=(m=o[v].privateDict).subrsIndex)}else r&&(p=r);if(g&&(g=this.parseCharString(d,f,p,n)),null!==d.width){var b=m.getByName(\"nominalWidthX\");l[h]=b+d.width}else{var y=m.getByName(\"defaultWidthX\");l[h]=y}null!==d.seac&&(c[h]=d.seac),g||t.set(h,new Uint8Array([14]))}return{charStrings:t,seacs:c,widths:l}},emptyPrivateDictionary:function(e){var t=this.createDict(g,[],e.strings);e.setByKey(18,[0,0]),e.privateDict=t},parsePrivateDict:function(e){if(e.hasName(\"Private\")){var t=e.getByName(\"Private\");if(Array.isArray(t)&&2===t.length){var r=t[0],a=t[1];if(0===r||a>=this.bytes.length)this.emptyPrivateDictionary(e);else{var n=a+r,i=this.bytes.subarray(a,n),o=this.parseDict(i),s=this.createDict(g,o,e.strings);if(e.privateDict=s,s.getByName(\"Subrs\")){var c=s.getByName(\"Subrs\"),l=a+c;if(0===c||l>=this.bytes.length)this.emptyPrivateDictionary(e);else{var u=this.parseIndex(l);s.subrsIndex=u.obj}}}}else e.removeByName(\"Private\")}else this.emptyPrivateDictionary(e)},parseCharsets:function(e,t,r,i){if(0===e)return new m(!0,p.ISO_ADOBE,n.ISOAdobeCharset);if(1===e)return new m(!0,p.EXPERT,n.ExpertCharset);if(2===e)return new m(!0,p.EXPERT_SUBSET,n.ExpertSubsetCharset);var o,s,c,l=this.bytes,u=e,h=l[e++],f=[\".notdef\"];switch(t-=1,h){case 0:for(c=0;c<t;c++)o=l[e++]<<8|l[e++],f.push(i?o:r.get(o));break;case 1:for(;f.length<=t;)for(o=l[e++]<<8|l[e++],s=l[e++],c=0;c<=s;c++)f.push(i?o++:r.get(o++));break;case 2:for(;f.length<=t;)for(o=l[e++]<<8|l[e++],s=l[e++]<<8|l[e++],c=0;c<=s;c++)f.push(i?o++:r.get(o++));break;default:throw new a.FormatError(\"Unknown charset format\")}var d=e,g=l.subarray(u,d);return new m(!1,h,f,g)},parseEncoding:function(e,t,r,n){var o,s,c,l=Object.create(null),u=this.bytes,h=!1,f=null;if(0===e||1===e){h=!0,o=e;var d=e?i.ExpertEncoding:i.StandardEncoding;for(s=0,c=n.length;s<c;s++){var g=d.indexOf(n[s]);-1!==g&&(l[g]=s)}}else{var p=e;switch(127&(o=u[e++])){case 0:var m=u[e++];for(s=1;s<=m;s++)l[u[e++]]=s;break;case 1:var b=u[e++],y=1;for(s=0;s<b;s++)for(var w=u[e++],k=u[e++],S=w;S<=w+k;S++)l[S]=y++;break;default:throw new a.FormatError(\"Unknown encoding format: \".concat(o,\" in CFF\"))}var C=e;128&o&&(u[p]&=127,function(){var t=u[e++];for(s=0;s<t;s++){var a=u[e++],i=(u[e++]<<8)+(255&u[e++]);l[a]=n.indexOf(r.get(i))}}()),f=u.subarray(p,C)}return new v(h,o&=127,l,f)},parseFDSelect:function(e,t){var r,n=this.bytes,i=n[e++],o=[];switch(i){case 0:for(r=0;r<t;++r){var s=n[e++];o.push(s)}break;case 3:var c=n[e++]<<8|n[e++];for(r=0;r<c;++r){var l=n[e++]<<8|n[e++];0===r&&0!==l&&((0,a.warn)(\"parseFDSelect: The first range must have a first GID of 0 -- trying to recover.\"),l=0);for(var u=n[e++],h=n[e]<<8|n[e+1],f=l;f<h;++f)o.push(u)}e+=2;break;default:throw new a.FormatError('parseFDSelect: Unknown format \"'.concat(i,'\".'))}if(o.length!==t)throw new a.FormatError(\"parseFDSelect: Invalid font data.\");return new b(i,o)}},r}();t.CFFParser=s;var c=function(){function e(){this.header=null,this.names=[],this.topDict=null,this.strings=new u,this.globalSubrIndex=null,this.encoding=null,this.charset=null,this.charStrings=null,this.fdArray=[],this.fdSelect=null,this.isCIDFont=!1}return e.prototype={duplicateFirstGlyph:function(){if(this.charStrings.count>=65535)(0,a.warn)(\"Not enough space in charstrings to duplicate first glyph.\");else{var e=this.charStrings.get(0);this.charStrings.add(e),this.isCIDFont&&this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0])}},hasGlyphId:function(e){return!(e<0||e>=this.charStrings.count)&&this.charStrings.get(e).length>0}},e}();t.CFF=c;var l=function(){return function(e,t,r,a){this.major=e,this.minor=t,this.hdrSize=r,this.offSize=a}}();t.CFFHeader=l;var u=function(){function e(){this.strings=[]}return e.prototype={get:function(e){return e>=0&&e<=390?o[e]:e-391<=this.strings.length?this.strings[e-391]:o[0]},add:function(e){this.strings.push(e)},get count(){return this.strings.length}},e}();t.CFFStrings=u;var h=function(){function e(){this.objects=[],this.length=0}return e.prototype={add:function(e){this.length+=e.length,this.objects.push(e)},set:function(e,t){this.length+=t.length-this.objects[e].length,this.objects[e]=t},get:function(e){return this.objects[e]},get count(){return this.objects.length}},e}();t.CFFIndex=h;var f=function(){function e(e,t){this.keyToNameMap=e.keyToNameMap,this.nameToKeyMap=e.nameToKeyMap,this.defaults=e.defaults,this.types=e.types,this.opcodes=e.opcodes,this.order=e.order,this.strings=t,this.values=Object.create(null)}return e.prototype={setByKey:function(e,t){if(!(e in this.keyToNameMap))return!1;var r=t.length;if(0===r)return!0;for(var n=0;n<r;n++)if(isNaN(t[n]))return(0,a.warn)('Invalid CFFDict value: \"'+t+'\" for key \"'+e+'\".'),!0;var i=this.types[e];return\"num\"!==i&&\"sid\"!==i&&\"offset\"!==i||(t=t[0]),this.values[e]=t,!0},setByName:function(e,t){if(!(e in this.nameToKeyMap))throw new a.FormatError('Invalid dictionary name \"'.concat(e,'\"'));this.values[this.nameToKeyMap[e]]=t},hasName:function(e){return this.nameToKeyMap[e]in this.values},getByName:function(e){if(!(e in this.nameToKeyMap))throw new a.FormatError(\"Invalid dictionary name \".concat(e,'\"'));var t=this.nameToKeyMap[e];return t in this.values?this.values[t]:this.defaults[t]},removeByName:function(e){delete this.values[this.nameToKeyMap[e]]}},e.createTables=function(e){for(var t={keyToNameMap:{},nameToKeyMap:{},defaults:{},types:{},opcodes:{},order:[]},r=0,a=e.length;r<a;++r){var n=e[r],i=Array.isArray(n[0])?(n[0][0]<<8)+n[0][1]:n[0];t.keyToNameMap[i]=n[1],t.nameToKeyMap[n[1]]=i,t.types[i]=n[2],t.defaults[i]=n[3],t.opcodes[i]=Array.isArray(n[0])?n[0]:[n[0]],t.order.push(i)}return t},e}(),d=function(){var e=[[[12,30],\"ROS\",[\"sid\",\"sid\",\"num\"],null],[[12,20],\"SyntheticBase\",\"num\",null],[0,\"version\",\"sid\",null],[1,\"Notice\",\"sid\",null],[[12,0],\"Copyright\",\"sid\",null],[2,\"FullName\",\"sid\",null],[3,\"FamilyName\",\"sid\",null],[4,\"Weight\",\"sid\",null],[[12,1],\"isFixedPitch\",\"num\",0],[[12,2],\"ItalicAngle\",\"num\",0],[[12,3],\"UnderlinePosition\",\"num\",-100],[[12,4],\"UnderlineThickness\",\"num\",50],[[12,5],\"PaintType\",\"num\",0],[[12,6],\"CharstringType\",\"num\",2],[[12,7],\"FontMatrix\",[\"num\",\"num\",\"num\",\"num\",\"num\",\"num\"],[.001,0,0,.001,0,0]],[13,\"UniqueID\",\"num\",null],[5,\"FontBBox\",[\"num\",\"num\",\"num\",\"num\"],[0,0,0,0]],[[12,8],\"StrokeWidth\",\"num\",0],[14,\"XUID\",\"array\",null],[15,\"charset\",\"offset\",0],[16,\"Encoding\",\"offset\",0],[17,\"CharStrings\",\"offset\",0],[18,\"Private\",[\"offset\",\"offset\"],null],[[12,21],\"PostScript\",\"sid\",null],[[12,22],\"BaseFontName\",\"sid\",null],[[12,23],\"BaseFontBlend\",\"delta\",null],[[12,31],\"CIDFontVersion\",\"num\",0],[[12,32],\"CIDFontRevision\",\"num\",0],[[12,33],\"CIDFontType\",\"num\",0],[[12,34],\"CIDCount\",\"num\",8720],[[12,35],\"UIDBase\",\"num\",null],[[12,37],\"FDSelect\",\"offset\",null],[[12,36],\"FDArray\",\"offset\",null],[[12,38],\"FontName\",\"sid\",null]],t=null;function r(r){null===t&&(t=f.createTables(e)),f.call(this,t,r),this.privateDict=null}return r.prototype=Object.create(f.prototype),r}();t.CFFTopDict=d;var g=function(){var e=[[6,\"BlueValues\",\"delta\",null],[7,\"OtherBlues\",\"delta\",null],[8,\"FamilyBlues\",\"delta\",null],[9,\"FamilyOtherBlues\",\"delta\",null],[[12,9],\"BlueScale\",\"num\",.039625],[[12,10],\"BlueShift\",\"num\",7],[[12,11],\"BlueFuzz\",\"num\",1],[10,\"StdHW\",\"num\",null],[11,\"StdVW\",\"num\",null],[[12,12],\"StemSnapH\",\"delta\",null],[[12,13],\"StemSnapV\",\"delta\",null],[[12,14],\"ForceBold\",\"num\",0],[[12,17],\"LanguageGroup\",\"num\",0],[[12,18],\"ExpansionFactor\",\"num\",.06],[[12,19],\"initialRandomSeed\",\"num\",0],[20,\"defaultWidthX\",\"num\",0],[21,\"nominalWidthX\",\"num\",0],[19,\"Subrs\",\"offset\",null]],t=null;function r(r){null===t&&(t=f.createTables(e)),f.call(this,t,r),this.subrsIndex=null}return r.prototype=Object.create(f.prototype),r}();t.CFFPrivateDict=g;var p={ISO_ADOBE:0,EXPERT:1,EXPERT_SUBSET:2},m=function(){return function(e,t,r,a){this.predefined=e,this.format=t,this.charset=r,this.raw=a}}();t.CFFCharset=m;var v=function(){return function(e,t,r,a){this.predefined=e,this.format=t,this.encoding=r,this.raw=a}}(),b=function(){function e(e,t){this.format=e,this.fdSelect=t}return e.prototype={getFDIndex:function(e){return e<0||e>=this.fdSelect.length?-1:this.fdSelect[e]}},e}();t.CFFFDSelect=b;var y=function(){function e(){this.offsets=Object.create(null)}return e.prototype={isTracking:function(e){return e in this.offsets},track:function(e,t){if(e in this.offsets)throw new a.FormatError(\"Already tracking location of \".concat(e));this.offsets[e]=t},offset:function(e){for(var t in this.offsets)this.offsets[t]+=e},setEntryLocation:function(e,t,r){if(!(e in this.offsets))throw new a.FormatError(\"Not tracking location of \".concat(e));for(var n=r.data,i=this.offsets[e],o=0,s=t.length;o<s;++o){var c=5*o+i,l=c+1,u=c+2,h=c+3,f=c+4;if(29!==n[c]||0!==n[l]||0!==n[u]||0!==n[h]||0!==n[f])throw new a.FormatError(\"writing to an offset that is not empty\");var d=t[o];n[c]=29,n[l]=d>>24&255,n[u]=d>>16&255,n[h]=d>>8&255,n[f]=255&d}}},e}(),w=function(){function e(e){this.cff=e}return e.prototype={compile:function(){var e=this.cff,t={data:[],length:0,add:function(e){this.data=this.data.concat(e),this.length=this.data.length}},r=this.compileHeader(e.header);t.add(r);var n=this.compileNameIndex(e.names);if(t.add(n),e.isCIDFont&&e.topDict.hasName(\"FontMatrix\")){var i=e.topDict.getByName(\"FontMatrix\");e.topDict.removeByName(\"FontMatrix\");for(var o=0,s=e.fdArray.length;o<s;o++){var c=e.fdArray[o],l=i.slice(0);c.hasName(\"FontMatrix\")&&(l=a.Util.transform(l,c.getByName(\"FontMatrix\"))),c.setByName(\"FontMatrix\",l)}}e.topDict.setByName(\"charset\",0);var u=this.compileTopDicts([e.topDict],t.length,e.isCIDFont);t.add(u.output);var h=u.trackers[0],f=this.compileStringIndex(e.strings.strings);t.add(f);var d=this.compileIndex(e.globalSubrIndex);if(t.add(d),e.encoding&&e.topDict.hasName(\"Encoding\"))if(e.encoding.predefined)h.setEntryLocation(\"Encoding\",[e.encoding.format],t);else{var g=this.compileEncoding(e.encoding);h.setEntryLocation(\"Encoding\",[t.length],t),t.add(g)}var p=this.compileCharset(e.charset);h.setEntryLocation(\"charset\",[t.length],t),t.add(p);var m=this.compileCharStrings(e.charStrings);if(h.setEntryLocation(\"CharStrings\",[t.length],t),t.add(m),e.isCIDFont){h.setEntryLocation(\"FDSelect\",[t.length],t);var v=this.compileFDSelect(e.fdSelect);t.add(v),u=this.compileTopDicts(e.fdArray,t.length,!0),h.setEntryLocation(\"FDArray\",[t.length],t),t.add(u.output);var b=u.trackers;this.compilePrivateDicts(e.fdArray,b,t)}return this.compilePrivateDicts([e.topDict],[h],t),t.add([0]),t.data},encodeNumber:function(e){return parseFloat(e)!==parseInt(e,10)||isNaN(e)?this.encodeFloat(e):this.encodeInteger(e)},encodeFloat:function(e){var t=e.toString(),r=/\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(t);if(r){var a=parseFloat(\"1e\"+((r[2]?+r[2]:0)+r[1].length));t=(Math.round(e*a)/a).toString()}var n,i,o=\"\";for(n=0,i=t.length;n<i;++n){var s=t[n];o+=\"e\"===s?\"-\"===t[++n]?\"c\":\"b\":\".\"===s?\"a\":\"-\"===s?\"e\":s}var c=[30];for(n=0,i=(o+=1&o.length?\"f\":\"ff\").length;n<i;n+=2)c.push(parseInt(o.substring(n,n+2),16));return c},encodeInteger:function(e){return e>=-107&&e<=107?[e+139]:e>=108&&e<=1131?[247+((e-=108)>>8),255&e]:e>=-1131&&e<=-108?[251+((e=-e-108)>>8),255&e]:e>=-32768&&e<=32767?[28,e>>8&255,255&e]:[29,e>>24&255,e>>16&255,e>>8&255,255&e]},compileHeader:function(e){return[e.major,e.minor,e.hdrSize,e.offSize]},compileNameIndex:function(e){for(var t=new h,r=0,n=e.length;r<n;++r){for(var i=e[r],o=Math.min(i.length,127),s=new Array(o),c=0;c<o;c++){var l=i[c];(l<\"!\"||l>\"~\"||\"[\"===l||\"]\"===l||\"(\"===l||\")\"===l||\"{\"===l||\"}\"===l||\"<\"===l||\">\"===l||\"/\"===l||\"%\"===l)&&(l=\"_\"),s[c]=l}\"\"===(s=s.join(\"\"))&&(s=\"Bad_Font_Name\"),t.add((0,a.stringToBytes)(s))}return this.compileIndex(t)},compileTopDicts:function(e,t,r){for(var a=[],n=new h,i=0,o=e.length;i<o;++i){var s=e[i];r&&(s.removeByName(\"CIDFontVersion\"),s.removeByName(\"CIDFontRevision\"),s.removeByName(\"CIDFontType\"),s.removeByName(\"CIDCount\"),s.removeByName(\"UIDBase\"));var c=new y,l=this.compileDict(s,c);a.push(c),n.add(l),c.offset(t)}return{trackers:a,output:n=this.compileIndex(n,a)}},compilePrivateDicts:function(e,t,r){for(var n=0,i=e.length;n<i;++n){var o=e[n],s=o.privateDict;if(!s||!o.hasName(\"Private\"))throw new a.FormatError(\"There must be a private dictionary.\");var c=new y,l=this.compileDict(s,c),u=r.length;if(c.offset(u),l.length||(u=0),t[n].setEntryLocation(\"Private\",[l.length,u],r),r.add(l),s.subrsIndex&&s.hasName(\"Subrs\")){var h=this.compileIndex(s.subrsIndex);c.setEntryLocation(\"Subrs\",[l.length],r),r.add(h)}}},compileDict:function(e,t){for(var r=[],n=e.order,i=0;i<n.length;++i){var o=n[i];if(o in e.values){var s=e.values[o],c=e.types[o];if(Array.isArray(c)||(c=[c]),Array.isArray(s)||(s=[s]),0!==s.length){for(var l=0,u=c.length;l<u;++l){var h=c[l],f=s[l];switch(h){case\"num\":case\"sid\":r=r.concat(this.encodeNumber(f));break;case\"offset\":var d=e.keyToNameMap[o];t.isTracking(d)||t.track(d,r.length),r=r.concat([29,0,0,0,0]);break;case\"array\":case\"delta\":r=r.concat(this.encodeNumber(f));for(var g=1,p=s.length;g<p;++g)r=r.concat(this.encodeNumber(s[g]));break;default:throw new a.FormatError(\"Unknown data type of \".concat(h))}}r=r.concat(e.opcodes[o])}}}return r},compileStringIndex:function(e){for(var t=new h,r=0,n=e.length;r<n;++r)t.add((0,a.stringToBytes)(e[r]));return this.compileIndex(t)},compileGlobalSubrIndex:function(){var e=this.cff.globalSubrIndex;this.out.writeByteArray(this.compileIndex(e))},compileCharStrings:function(e){for(var t=new h,r=0;r<e.count;r++){var a=e.get(r);0!==a.length?t.add(a):t.add(new Uint8Array([139,14]))}return this.compileIndex(t)},compileCharset:function(e){var t=1+2*(this.cff.charStrings.count-1),r=new Uint8Array(t);return this.compileTypedArray(r)},compileEncoding:function(e){return this.compileTypedArray(e.raw)},compileFDSelect:function(e){var t,r,a=e.format;switch(a){case 0:for((t=new Uint8Array(1+e.fdSelect.length))[0]=a,r=0;r<e.fdSelect.length;r++)t[r+1]=e.fdSelect[r];break;case 3:var n=e.fdSelect[0],i=[a,0,0,0,0,n];for(r=1;r<e.fdSelect.length;r++){var o=e.fdSelect[r];o!==n&&(i.push(r>>8&255,255&r,o),n=o)}var s=(i.length-3)/3;i[1]=s>>8&255,i[2]=255&s,i.push(r>>8&255,255&r),t=new Uint8Array(i)}return this.compileTypedArray(t)},compileTypedArray:function(e){for(var t=[],r=0,a=e.length;r<a;++r)t[r]=e[r];return t},compileIndex:function(e,t){t=t||[];var r=e.objects,a=r.length;if(0===a)return[0,0,0];var n,i,o=[a>>8&255,255&a],s=1;for(n=0;n<a;++n)s+=r[n].length;i=s<256?1:s<65536?2:s<16777216?3:4,o.push(i);var c=1;for(n=0;n<a+1;n++)1===i?o.push(255&c):2===i?o.push(c>>8&255,255&c):3===i?o.push(c>>16&255,c>>8&255,255&c):o.push(c>>>24&255,c>>16&255,c>>8&255,255&c),r[n]&&(c+=r[n].length);for(n=0;n<a;n++){t[n]&&t[n].offset(o.length);for(var l=0,u=r[n].length;l<u;l++)o.push(r[n][l])}return o}},e}();t.CFFCompiler=w},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ExpertSubsetCharset=t.ExpertCharset=t.ISOAdobeCharset=void 0;t.ISOAdobeCharset=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\"];t.ExpertCharset=[\".notdef\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"];t.ExpertSubsetCharset=[\".notdef\",\"space\",\"dollaroldstyle\",\"dollarsuperior\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"hyphensuperior\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"centoldstyle\",\"figuredash\",\"hypheninferior\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\"]},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getEncoding=function(e){switch(e){case\"WinAnsiEncoding\":return s;case\"StandardEncoding\":return o;case\"MacRomanEncoding\":return i;case\"SymbolSetEncoding\":return c;case\"ZapfDingbatsEncoding\":return l;case\"ExpertEncoding\":return a;case\"MacExpertEncoding\":return n;default:return null}},t.ExpertEncoding=t.ZapfDingbatsEncoding=t.SymbolSetEncoding=t.MacRomanEncoding=t.StandardEncoding=t.WinAnsiEncoding=void 0;var a=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"\",\"\",\"\",\"isuperior\",\"\",\"\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"\",\"\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"\",\"\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"\",\"Dotaccentsmall\",\"\",\"\",\"Macronsmall\",\"\",\"\",\"figuredash\",\"hypheninferior\",\"\",\"\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"];t.ExpertEncoding=a;var n=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"centoldstyle\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"\",\"threequartersemdash\",\"\",\"questionsmall\",\"\",\"\",\"\",\"\",\"Ethsmall\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"\",\"\",\"\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hypheninferior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"asuperior\",\"centsuperior\",\"\",\"\",\"\",\"\",\"Aacutesmall\",\"Agravesmall\",\"Acircumflexsmall\",\"Adieresissmall\",\"Atildesmall\",\"Aringsmall\",\"Ccedillasmall\",\"Eacutesmall\",\"Egravesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Iacutesmall\",\"Igravesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ntildesmall\",\"Oacutesmall\",\"Ogravesmall\",\"Ocircumflexsmall\",\"Odieresissmall\",\"Otildesmall\",\"Uacutesmall\",\"Ugravesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"\",\"eightsuperior\",\"fourinferior\",\"threeinferior\",\"sixinferior\",\"eightinferior\",\"seveninferior\",\"Scaronsmall\",\"\",\"centinferior\",\"twoinferior\",\"\",\"Dieresissmall\",\"\",\"Caronsmall\",\"osuperior\",\"fiveinferior\",\"\",\"commainferior\",\"periodinferior\",\"Yacutesmall\",\"\",\"dollarinferior\",\"\",\"\",\"Thornsmall\",\"\",\"nineinferior\",\"zeroinferior\",\"Zcaronsmall\",\"AEsmall\",\"Oslashsmall\",\"questiondownsmall\",\"oneinferior\",\"Lslashsmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"Cedillasmall\",\"\",\"\",\"\",\"\",\"\",\"OEsmall\",\"figuredash\",\"hyphensuperior\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"\",\"Ydieresissmall\",\"\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"ninesuperior\",\"zerosuperior\",\"\",\"esuperior\",\"rsuperior\",\"tsuperior\",\"\",\"\",\"isuperior\",\"ssuperior\",\"dsuperior\",\"\",\"\",\"\",\"\",\"\",\"lsuperior\",\"Ogoneksmall\",\"Brevesmall\",\"Macronsmall\",\"bsuperior\",\"nsuperior\",\"msuperior\",\"commasuperior\",\"periodsuperior\",\"Dotaccentsmall\",\"Ringsmall\",\"\",\"\",\"\",\"\"],i=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"space\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\"];t.MacRomanEncoding=i;var o=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"\",\"questiondown\",\"\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"\",\"ring\",\"cedilla\",\"\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"AE\",\"\",\"ordfeminine\",\"\",\"\",\"\",\"\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"\",\"\",\"\",\"\",\"\",\"ae\",\"\",\"\",\"\",\"dotlessi\",\"\",\"\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"\",\"\",\"\",\"\"];t.StandardEncoding=o;var s=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"bullet\",\"Euro\",\"bullet\",\"quotesinglbase\",\"florin\",\"quotedblbase\",\"ellipsis\",\"dagger\",\"daggerdbl\",\"circumflex\",\"perthousand\",\"Scaron\",\"guilsinglleft\",\"OE\",\"bullet\",\"Zcaron\",\"bullet\",\"bullet\",\"quoteleft\",\"quoteright\",\"quotedblleft\",\"quotedblright\",\"bullet\",\"endash\",\"emdash\",\"tilde\",\"trademark\",\"scaron\",\"guilsinglright\",\"oe\",\"bullet\",\"zcaron\",\"Ydieresis\",\"space\",\"exclamdown\",\"cent\",\"sterling\",\"currency\",\"yen\",\"brokenbar\",\"section\",\"dieresis\",\"copyright\",\"ordfeminine\",\"guillemotleft\",\"logicalnot\",\"hyphen\",\"registered\",\"macron\",\"degree\",\"plusminus\",\"twosuperior\",\"threesuperior\",\"acute\",\"mu\",\"paragraph\",\"periodcentered\",\"cedilla\",\"onesuperior\",\"ordmasculine\",\"guillemotright\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondown\",\"Agrave\",\"Aacute\",\"Acircumflex\",\"Atilde\",\"Adieresis\",\"Aring\",\"AE\",\"Ccedilla\",\"Egrave\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Igrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Eth\",\"Ntilde\",\"Ograve\",\"Oacute\",\"Ocircumflex\",\"Otilde\",\"Odieresis\",\"multiply\",\"Oslash\",\"Ugrave\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Yacute\",\"Thorn\",\"germandbls\",\"agrave\",\"aacute\",\"acircumflex\",\"atilde\",\"adieresis\",\"aring\",\"ae\",\"ccedilla\",\"egrave\",\"eacute\",\"ecircumflex\",\"edieresis\",\"igrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"eth\",\"ntilde\",\"ograve\",\"oacute\",\"ocircumflex\",\"otilde\",\"odieresis\",\"divide\",\"oslash\",\"ugrave\",\"uacute\",\"ucircumflex\",\"udieresis\",\"yacute\",\"thorn\",\"ydieresis\"];t.WinAnsiEncoding=s;var c=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"universal\",\"numbersign\",\"existential\",\"percent\",\"ampersand\",\"suchthat\",\"parenleft\",\"parenright\",\"asteriskmath\",\"plus\",\"comma\",\"minus\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"congruent\",\"Alpha\",\"Beta\",\"Chi\",\"Delta\",\"Epsilon\",\"Phi\",\"Gamma\",\"Eta\",\"Iota\",\"theta1\",\"Kappa\",\"Lambda\",\"Mu\",\"Nu\",\"Omicron\",\"Pi\",\"Theta\",\"Rho\",\"Sigma\",\"Tau\",\"Upsilon\",\"sigma1\",\"Omega\",\"Xi\",\"Psi\",\"Zeta\",\"bracketleft\",\"therefore\",\"bracketright\",\"perpendicular\",\"underscore\",\"radicalex\",\"alpha\",\"beta\",\"chi\",\"delta\",\"epsilon\",\"phi\",\"gamma\",\"eta\",\"iota\",\"phi1\",\"kappa\",\"lambda\",\"mu\",\"nu\",\"omicron\",\"pi\",\"theta\",\"rho\",\"sigma\",\"tau\",\"upsilon\",\"omega1\",\"omega\",\"xi\",\"psi\",\"zeta\",\"braceleft\",\"bar\",\"braceright\",\"similar\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Euro\",\"Upsilon1\",\"minute\",\"lessequal\",\"fraction\",\"infinity\",\"florin\",\"club\",\"diamond\",\"heart\",\"spade\",\"arrowboth\",\"arrowleft\",\"arrowup\",\"arrowright\",\"arrowdown\",\"degree\",\"plusminus\",\"second\",\"greaterequal\",\"multiply\",\"proportional\",\"partialdiff\",\"bullet\",\"divide\",\"notequal\",\"equivalence\",\"approxequal\",\"ellipsis\",\"arrowvertex\",\"arrowhorizex\",\"carriagereturn\",\"aleph\",\"Ifraktur\",\"Rfraktur\",\"weierstrass\",\"circlemultiply\",\"circleplus\",\"emptyset\",\"intersection\",\"union\",\"propersuperset\",\"reflexsuperset\",\"notsubset\",\"propersubset\",\"reflexsubset\",\"element\",\"notelement\",\"angle\",\"gradient\",\"registerserif\",\"copyrightserif\",\"trademarkserif\",\"product\",\"radical\",\"dotmath\",\"logicalnot\",\"logicaland\",\"logicalor\",\"arrowdblboth\",\"arrowdblleft\",\"arrowdblup\",\"arrowdblright\",\"arrowdbldown\",\"lozenge\",\"angleleft\",\"registersans\",\"copyrightsans\",\"trademarksans\",\"summation\",\"parenlefttp\",\"parenleftex\",\"parenleftbt\",\"bracketlefttp\",\"bracketleftex\",\"bracketleftbt\",\"bracelefttp\",\"braceleftmid\",\"braceleftbt\",\"braceex\",\"\",\"angleright\",\"integral\",\"integraltp\",\"integralex\",\"integralbt\",\"parenrighttp\",\"parenrightex\",\"parenrightbt\",\"bracketrighttp\",\"bracketrightex\",\"bracketrightbt\",\"bracerighttp\",\"bracerightmid\",\"bracerightbt\",\"\"];t.SymbolSetEncoding=c;var l=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"a1\",\"a2\",\"a202\",\"a3\",\"a4\",\"a5\",\"a119\",\"a118\",\"a117\",\"a11\",\"a12\",\"a13\",\"a14\",\"a15\",\"a16\",\"a105\",\"a17\",\"a18\",\"a19\",\"a20\",\"a21\",\"a22\",\"a23\",\"a24\",\"a25\",\"a26\",\"a27\",\"a28\",\"a6\",\"a7\",\"a8\",\"a9\",\"a10\",\"a29\",\"a30\",\"a31\",\"a32\",\"a33\",\"a34\",\"a35\",\"a36\",\"a37\",\"a38\",\"a39\",\"a40\",\"a41\",\"a42\",\"a43\",\"a44\",\"a45\",\"a46\",\"a47\",\"a48\",\"a49\",\"a50\",\"a51\",\"a52\",\"a53\",\"a54\",\"a55\",\"a56\",\"a57\",\"a58\",\"a59\",\"a60\",\"a61\",\"a62\",\"a63\",\"a64\",\"a65\",\"a66\",\"a67\",\"a68\",\"a69\",\"a70\",\"a71\",\"a72\",\"a73\",\"a74\",\"a203\",\"a75\",\"a204\",\"a76\",\"a77\",\"a78\",\"a79\",\"a81\",\"a82\",\"a83\",\"a84\",\"a97\",\"a98\",\"a99\",\"a100\",\"\",\"a89\",\"a90\",\"a93\",\"a94\",\"a91\",\"a92\",\"a205\",\"a85\",\"a206\",\"a86\",\"a87\",\"a88\",\"a95\",\"a96\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"a101\",\"a102\",\"a103\",\"a104\",\"a106\",\"a107\",\"a108\",\"a112\",\"a111\",\"a110\",\"a109\",\"a120\",\"a121\",\"a122\",\"a123\",\"a124\",\"a125\",\"a126\",\"a127\",\"a128\",\"a129\",\"a130\",\"a131\",\"a132\",\"a133\",\"a134\",\"a135\",\"a136\",\"a137\",\"a138\",\"a139\",\"a140\",\"a141\",\"a142\",\"a143\",\"a144\",\"a145\",\"a146\",\"a147\",\"a148\",\"a149\",\"a150\",\"a151\",\"a152\",\"a153\",\"a154\",\"a155\",\"a156\",\"a157\",\"a158\",\"a159\",\"a160\",\"a161\",\"a163\",\"a164\",\"a196\",\"a165\",\"a192\",\"a166\",\"a167\",\"a168\",\"a169\",\"a170\",\"a171\",\"a172\",\"a173\",\"a162\",\"a174\",\"a175\",\"a176\",\"a177\",\"a178\",\"a179\",\"a193\",\"a180\",\"a199\",\"a181\",\"a200\",\"a182\",\"\",\"a201\",\"a183\",\"a184\",\"a197\",\"a185\",\"a194\",\"a198\",\"a186\",\"a195\",\"a187\",\"a188\",\"a189\",\"a190\",\"a191\",\"\"];t.ZapfDingbatsEncoding=l},function(e,t,r){var a=r(6).getLookupTableFactory,n=a(function(e){e.A=65,e.AE=198,e.AEacute=508,e.AEmacron=482,e.AEsmall=63462,e.Aacute=193,e.Aacutesmall=63457,e.Abreve=258,e.Abreveacute=7854,e.Abrevecyrillic=1232,e.Abrevedotbelow=7862,e.Abrevegrave=7856,e.Abrevehookabove=7858,e.Abrevetilde=7860,e.Acaron=461,e.Acircle=9398,e.Acircumflex=194,e.Acircumflexacute=7844,e.Acircumflexdotbelow=7852,e.Acircumflexgrave=7846,e.Acircumflexhookabove=7848,e.Acircumflexsmall=63458,e.Acircumflextilde=7850,e.Acute=63177,e.Acutesmall=63412,e.Acyrillic=1040,e.Adblgrave=512,e.Adieresis=196,e.Adieresiscyrillic=1234,e.Adieresismacron=478,e.Adieresissmall=63460,e.Adotbelow=7840,e.Adotmacron=480,e.Agrave=192,e.Agravesmall=63456,e.Ahookabove=7842,e.Aiecyrillic=1236,e.Ainvertedbreve=514,e.Alpha=913,e.Alphatonos=902,e.Amacron=256,e.Amonospace=65313,e.Aogonek=260,e.Aring=197,e.Aringacute=506,e.Aringbelow=7680,e.Aringsmall=63461,e.Asmall=63329,e.Atilde=195,e.Atildesmall=63459,e.Aybarmenian=1329,e.B=66,e.Bcircle=9399,e.Bdotaccent=7682,e.Bdotbelow=7684,e.Becyrillic=1041,e.Benarmenian=1330,e.Beta=914,e.Bhook=385,e.Blinebelow=7686,e.Bmonospace=65314,e.Brevesmall=63220,e.Bsmall=63330,e.Btopbar=386,e.C=67,e.Caarmenian=1342,e.Cacute=262,e.Caron=63178,e.Caronsmall=63221,e.Ccaron=268,e.Ccedilla=199,e.Ccedillaacute=7688,e.Ccedillasmall=63463,e.Ccircle=9400,e.Ccircumflex=264,e.Cdot=266,e.Cdotaccent=266,e.Cedillasmall=63416,e.Chaarmenian=1353,e.Cheabkhasiancyrillic=1212,e.Checyrillic=1063,e.Chedescenderabkhasiancyrillic=1214,e.Chedescendercyrillic=1206,e.Chedieresiscyrillic=1268,e.Cheharmenian=1347,e.Chekhakassiancyrillic=1227,e.Cheverticalstrokecyrillic=1208,e.Chi=935,e.Chook=391,e.Circumflexsmall=63222,e.Cmonospace=65315,e.Coarmenian=1361,e.Csmall=63331,e.D=68,e.DZ=497,e.DZcaron=452,e.Daarmenian=1332,e.Dafrican=393,e.Dcaron=270,e.Dcedilla=7696,e.Dcircle=9401,e.Dcircumflexbelow=7698,e.Dcroat=272,e.Ddotaccent=7690,e.Ddotbelow=7692,e.Decyrillic=1044,e.Deicoptic=1006,e.Delta=8710,e.Deltagreek=916,e.Dhook=394,e.Dieresis=63179,e.DieresisAcute=63180,e.DieresisGrave=63181,e.Dieresissmall=63400,e.Digammagreek=988,e.Djecyrillic=1026,e.Dlinebelow=7694,e.Dmonospace=65316,e.Dotaccentsmall=63223,e.Dslash=272,e.Dsmall=63332,e.Dtopbar=395,e.Dz=498,e.Dzcaron=453,e.Dzeabkhasiancyrillic=1248,e.Dzecyrillic=1029,e.Dzhecyrillic=1039,e.E=69,e.Eacute=201,e.Eacutesmall=63465,e.Ebreve=276,e.Ecaron=282,e.Ecedillabreve=7708,e.Echarmenian=1333,e.Ecircle=9402,e.Ecircumflex=202,e.Ecircumflexacute=7870,e.Ecircumflexbelow=7704,e.Ecircumflexdotbelow=7878,e.Ecircumflexgrave=7872,e.Ecircumflexhookabove=7874,e.Ecircumflexsmall=63466,e.Ecircumflextilde=7876,e.Ecyrillic=1028,e.Edblgrave=516,e.Edieresis=203,e.Edieresissmall=63467,e.Edot=278,e.Edotaccent=278,e.Edotbelow=7864,e.Efcyrillic=1060,e.Egrave=200,e.Egravesmall=63464,e.Eharmenian=1335,e.Ehookabove=7866,e.Eightroman=8551,e.Einvertedbreve=518,e.Eiotifiedcyrillic=1124,e.Elcyrillic=1051,e.Elevenroman=8554,e.Emacron=274,e.Emacronacute=7702,e.Emacrongrave=7700,e.Emcyrillic=1052,e.Emonospace=65317,e.Encyrillic=1053,e.Endescendercyrillic=1186,e.Eng=330,e.Enghecyrillic=1188,e.Enhookcyrillic=1223,e.Eogonek=280,e.Eopen=400,e.Epsilon=917,e.Epsilontonos=904,e.Ercyrillic=1056,e.Ereversed=398,e.Ereversedcyrillic=1069,e.Escyrillic=1057,e.Esdescendercyrillic=1194,e.Esh=425,e.Esmall=63333,e.Eta=919,e.Etarmenian=1336,e.Etatonos=905,e.Eth=208,e.Ethsmall=63472,e.Etilde=7868,e.Etildebelow=7706,e.Euro=8364,e.Ezh=439,e.Ezhcaron=494,e.Ezhreversed=440,e.F=70,e.Fcircle=9403,e.Fdotaccent=7710,e.Feharmenian=1366,e.Feicoptic=996,e.Fhook=401,e.Fitacyrillic=1138,e.Fiveroman=8548,e.Fmonospace=65318,e.Fourroman=8547,e.Fsmall=63334,e.G=71,e.GBsquare=13191,e.Gacute=500,e.Gamma=915,e.Gammaafrican=404,e.Gangiacoptic=1002,e.Gbreve=286,e.Gcaron=486,e.Gcedilla=290,e.Gcircle=9404,e.Gcircumflex=284,e.Gcommaaccent=290,e.Gdot=288,e.Gdotaccent=288,e.Gecyrillic=1043,e.Ghadarmenian=1346,e.Ghemiddlehookcyrillic=1172,e.Ghestrokecyrillic=1170,e.Gheupturncyrillic=1168,e.Ghook=403,e.Gimarmenian=1331,e.Gjecyrillic=1027,e.Gmacron=7712,e.Gmonospace=65319,e.Grave=63182,e.Gravesmall=63328,e.Gsmall=63335,e.Gsmallhook=667,e.Gstroke=484,e.H=72,e.H18533=9679,e.H18543=9642,e.H18551=9643,e.H22073=9633,e.HPsquare=13259,e.Haabkhasiancyrillic=1192,e.Hadescendercyrillic=1202,e.Hardsigncyrillic=1066,e.Hbar=294,e.Hbrevebelow=7722,e.Hcedilla=7720,e.Hcircle=9405,e.Hcircumflex=292,e.Hdieresis=7718,e.Hdotaccent=7714,e.Hdotbelow=7716,e.Hmonospace=65320,e.Hoarmenian=1344,e.Horicoptic=1e3,e.Hsmall=63336,e.Hungarumlaut=63183,e.Hungarumlautsmall=63224,e.Hzsquare=13200,e.I=73,e.IAcyrillic=1071,e.IJ=306,e.IUcyrillic=1070,e.Iacute=205,e.Iacutesmall=63469,e.Ibreve=300,e.Icaron=463,e.Icircle=9406,e.Icircumflex=206,e.Icircumflexsmall=63470,e.Icyrillic=1030,e.Idblgrave=520,e.Idieresis=207,e.Idieresisacute=7726,e.Idieresiscyrillic=1252,e.Idieresissmall=63471,e.Idot=304,e.Idotaccent=304,e.Idotbelow=7882,e.Iebrevecyrillic=1238,e.Iecyrillic=1045,e.Ifraktur=8465,e.Igrave=204,e.Igravesmall=63468,e.Ihookabove=7880,e.Iicyrillic=1048,e.Iinvertedbreve=522,e.Iishortcyrillic=1049,e.Imacron=298,e.Imacroncyrillic=1250,e.Imonospace=65321,e.Iniarmenian=1339,e.Iocyrillic=1025,e.Iogonek=302,e.Iota=921,e.Iotaafrican=406,e.Iotadieresis=938,e.Iotatonos=906,e.Ismall=63337,e.Istroke=407,e.Itilde=296,e.Itildebelow=7724,e.Izhitsacyrillic=1140,e.Izhitsadblgravecyrillic=1142,e.J=74,e.Jaarmenian=1345,e.Jcircle=9407,e.Jcircumflex=308,e.Jecyrillic=1032,e.Jheharmenian=1355,e.Jmonospace=65322,e.Jsmall=63338,e.K=75,e.KBsquare=13189,e.KKsquare=13261,e.Kabashkircyrillic=1184,e.Kacute=7728,e.Kacyrillic=1050,e.Kadescendercyrillic=1178,e.Kahookcyrillic=1219,e.Kappa=922,e.Kastrokecyrillic=1182,e.Kaverticalstrokecyrillic=1180,e.Kcaron=488,e.Kcedilla=310,e.Kcircle=9408,e.Kcommaaccent=310,e.Kdotbelow=7730,e.Keharmenian=1364,e.Kenarmenian=1343,e.Khacyrillic=1061,e.Kheicoptic=998,e.Khook=408,e.Kjecyrillic=1036,e.Klinebelow=7732,e.Kmonospace=65323,e.Koppacyrillic=1152,e.Koppagreek=990,e.Ksicyrillic=1134,e.Ksmall=63339,e.L=76,e.LJ=455,e.LL=63167,e.Lacute=313,e.Lambda=923,e.Lcaron=317,e.Lcedilla=315,e.Lcircle=9409,e.Lcircumflexbelow=7740,e.Lcommaaccent=315,e.Ldot=319,e.Ldotaccent=319,e.Ldotbelow=7734,e.Ldotbelowmacron=7736,e.Liwnarmenian=1340,e.Lj=456,e.Ljecyrillic=1033,e.Llinebelow=7738,e.Lmonospace=65324,e.Lslash=321,e.Lslashsmall=63225,e.Lsmall=63340,e.M=77,e.MBsquare=13190,e.Macron=63184,e.Macronsmall=63407,e.Macute=7742,e.Mcircle=9410,e.Mdotaccent=7744,e.Mdotbelow=7746,e.Menarmenian=1348,e.Mmonospace=65325,e.Msmall=63341,e.Mturned=412,e.Mu=924,e.N=78,e.NJ=458,e.Nacute=323,e.Ncaron=327,e.Ncedilla=325,e.Ncircle=9411,e.Ncircumflexbelow=7754,e.Ncommaaccent=325,e.Ndotaccent=7748,e.Ndotbelow=7750,e.Nhookleft=413,e.Nineroman=8552,e.Nj=459,e.Njecyrillic=1034,e.Nlinebelow=7752,e.Nmonospace=65326,e.Nowarmenian=1350,e.Nsmall=63342,e.Ntilde=209,e.Ntildesmall=63473,e.Nu=925,e.O=79,e.OE=338,e.OEsmall=63226,e.Oacute=211,e.Oacutesmall=63475,e.Obarredcyrillic=1256,e.Obarreddieresiscyrillic=1258,e.Obreve=334,e.Ocaron=465,e.Ocenteredtilde=415,e.Ocircle=9412,e.Ocircumflex=212,e.Ocircumflexacute=7888,e.Ocircumflexdotbelow=7896,e.Ocircumflexgrave=7890,e.Ocircumflexhookabove=7892,e.Ocircumflexsmall=63476,e.Ocircumflextilde=7894,e.Ocyrillic=1054,e.Odblacute=336,e.Odblgrave=524,e.Odieresis=214,e.Odieresiscyrillic=1254,e.Odieresissmall=63478,e.Odotbelow=7884,e.Ogoneksmall=63227,e.Ograve=210,e.Ogravesmall=63474,e.Oharmenian=1365,e.Ohm=8486,e.Ohookabove=7886,e.Ohorn=416,e.Ohornacute=7898,e.Ohorndotbelow=7906,e.Ohorngrave=7900,e.Ohornhookabove=7902,e.Ohorntilde=7904,e.Ohungarumlaut=336,e.Oi=418,e.Oinvertedbreve=526,e.Omacron=332,e.Omacronacute=7762,e.Omacrongrave=7760,e.Omega=8486,e.Omegacyrillic=1120,e.Omegagreek=937,e.Omegaroundcyrillic=1146,e.Omegatitlocyrillic=1148,e.Omegatonos=911,e.Omicron=927,e.Omicrontonos=908,e.Omonospace=65327,e.Oneroman=8544,e.Oogonek=490,e.Oogonekmacron=492,e.Oopen=390,e.Oslash=216,e.Oslashacute=510,e.Oslashsmall=63480,e.Osmall=63343,e.Ostrokeacute=510,e.Otcyrillic=1150,e.Otilde=213,e.Otildeacute=7756,e.Otildedieresis=7758,e.Otildesmall=63477,e.P=80,e.Pacute=7764,e.Pcircle=9413,e.Pdotaccent=7766,e.Pecyrillic=1055,e.Peharmenian=1354,e.Pemiddlehookcyrillic=1190,e.Phi=934,e.Phook=420,e.Pi=928,e.Piwrarmenian=1363,e.Pmonospace=65328,e.Psi=936,e.Psicyrillic=1136,e.Psmall=63344,e.Q=81,e.Qcircle=9414,e.Qmonospace=65329,e.Qsmall=63345,e.R=82,e.Raarmenian=1356,e.Racute=340,e.Rcaron=344,e.Rcedilla=342,e.Rcircle=9415,e.Rcommaaccent=342,e.Rdblgrave=528,e.Rdotaccent=7768,e.Rdotbelow=7770,e.Rdotbelowmacron=7772,e.Reharmenian=1360,e.Rfraktur=8476,e.Rho=929,e.Ringsmall=63228,e.Rinvertedbreve=530,e.Rlinebelow=7774,e.Rmonospace=65330,e.Rsmall=63346,e.Rsmallinverted=641,e.Rsmallinvertedsuperior=694,e.S=83,e.SF010000=9484,e.SF020000=9492,e.SF030000=9488,e.SF040000=9496,e.SF050000=9532,e.SF060000=9516,e.SF070000=9524,e.SF080000=9500,e.SF090000=9508,e.SF100000=9472,e.SF110000=9474,e.SF190000=9569,e.SF200000=9570,e.SF210000=9558,e.SF220000=9557,e.SF230000=9571,e.SF240000=9553,e.SF250000=9559,e.SF260000=9565,e.SF270000=9564,e.SF280000=9563,e.SF360000=9566,e.SF370000=9567,e.SF380000=9562,e.SF390000=9556,e.SF400000=9577,e.SF410000=9574,e.SF420000=9568,e.SF430000=9552,e.SF440000=9580,e.SF450000=9575,e.SF460000=9576,e.SF470000=9572,e.SF480000=9573,e.SF490000=9561,e.SF500000=9560,e.SF510000=9554,e.SF520000=9555,e.SF530000=9579,e.SF540000=9578,e.Sacute=346,e.Sacutedotaccent=7780,e.Sampigreek=992,e.Scaron=352,e.Scarondotaccent=7782,e.Scaronsmall=63229,e.Scedilla=350,e.Schwa=399,e.Schwacyrillic=1240,e.Schwadieresiscyrillic=1242,e.Scircle=9416,e.Scircumflex=348,e.Scommaaccent=536,e.Sdotaccent=7776,e.Sdotbelow=7778,e.Sdotbelowdotaccent=7784,e.Seharmenian=1357,e.Sevenroman=8550,e.Shaarmenian=1351,e.Shacyrillic=1064,e.Shchacyrillic=1065,e.Sheicoptic=994,e.Shhacyrillic=1210,e.Shimacoptic=1004,e.Sigma=931,e.Sixroman=8549,e.Smonospace=65331,e.Softsigncyrillic=1068,e.Ssmall=63347,e.Stigmagreek=986,e.T=84,e.Tau=932,e.Tbar=358,e.Tcaron=356,e.Tcedilla=354,e.Tcircle=9417,e.Tcircumflexbelow=7792,e.Tcommaaccent=354,e.Tdotaccent=7786,e.Tdotbelow=7788,e.Tecyrillic=1058,e.Tedescendercyrillic=1196,e.Tenroman=8553,e.Tetsecyrillic=1204,e.Theta=920,e.Thook=428,e.Thorn=222,e.Thornsmall=63486,e.Threeroman=8546,e.Tildesmall=63230,e.Tiwnarmenian=1359,e.Tlinebelow=7790,e.Tmonospace=65332,e.Toarmenian=1337,e.Tonefive=444,e.Tonesix=388,e.Tonetwo=423,e.Tretroflexhook=430,e.Tsecyrillic=1062,e.Tshecyrillic=1035,e.Tsmall=63348,e.Twelveroman=8555,e.Tworoman=8545,e.U=85,e.Uacute=218,e.Uacutesmall=63482,e.Ubreve=364,e.Ucaron=467,e.Ucircle=9418,e.Ucircumflex=219,e.Ucircumflexbelow=7798,e.Ucircumflexsmall=63483,e.Ucyrillic=1059,e.Udblacute=368,e.Udblgrave=532,e.Udieresis=220,e.Udieresisacute=471,e.Udieresisbelow=7794,e.Udieresiscaron=473,e.Udieresiscyrillic=1264,e.Udieresisgrave=475,e.Udieresismacron=469,e.Udieresissmall=63484,e.Udotbelow=7908,e.Ugrave=217,e.Ugravesmall=63481,e.Uhookabove=7910,e.Uhorn=431,e.Uhornacute=7912,e.Uhorndotbelow=7920,e.Uhorngrave=7914,e.Uhornhookabove=7916,e.Uhorntilde=7918,e.Uhungarumlaut=368,e.Uhungarumlautcyrillic=1266,e.Uinvertedbreve=534,e.Ukcyrillic=1144,e.Umacron=362,e.Umacroncyrillic=1262,e.Umacrondieresis=7802,e.Umonospace=65333,e.Uogonek=370,e.Upsilon=933,e.Upsilon1=978,e.Upsilonacutehooksymbolgreek=979,e.Upsilonafrican=433,e.Upsilondieresis=939,e.Upsilondieresishooksymbolgreek=980,e.Upsilonhooksymbol=978,e.Upsilontonos=910,e.Uring=366,e.Ushortcyrillic=1038,e.Usmall=63349,e.Ustraightcyrillic=1198,e.Ustraightstrokecyrillic=1200,e.Utilde=360,e.Utildeacute=7800,e.Utildebelow=7796,e.V=86,e.Vcircle=9419,e.Vdotbelow=7806,e.Vecyrillic=1042,e.Vewarmenian=1358,e.Vhook=434,e.Vmonospace=65334,e.Voarmenian=1352,e.Vsmall=63350,e.Vtilde=7804,e.W=87,e.Wacute=7810,e.Wcircle=9420,e.Wcircumflex=372,e.Wdieresis=7812,e.Wdotaccent=7814,e.Wdotbelow=7816,e.Wgrave=7808,e.Wmonospace=65335,e.Wsmall=63351,e.X=88,e.Xcircle=9421,e.Xdieresis=7820,e.Xdotaccent=7818,e.Xeharmenian=1341,e.Xi=926,e.Xmonospace=65336,e.Xsmall=63352,e.Y=89,e.Yacute=221,e.Yacutesmall=63485,e.Yatcyrillic=1122,e.Ycircle=9422,e.Ycircumflex=374,e.Ydieresis=376,e.Ydieresissmall=63487,e.Ydotaccent=7822,e.Ydotbelow=7924,e.Yericyrillic=1067,e.Yerudieresiscyrillic=1272,e.Ygrave=7922,e.Yhook=435,e.Yhookabove=7926,e.Yiarmenian=1349,e.Yicyrillic=1031,e.Yiwnarmenian=1362,e.Ymonospace=65337,e.Ysmall=63353,e.Ytilde=7928,e.Yusbigcyrillic=1130,e.Yusbigiotifiedcyrillic=1132,e.Yuslittlecyrillic=1126,e.Yuslittleiotifiedcyrillic=1128,e.Z=90,e.Zaarmenian=1334,e.Zacute=377,e.Zcaron=381,e.Zcaronsmall=63231,e.Zcircle=9423,e.Zcircumflex=7824,e.Zdot=379,e.Zdotaccent=379,e.Zdotbelow=7826,e.Zecyrillic=1047,e.Zedescendercyrillic=1176,e.Zedieresiscyrillic=1246,e.Zeta=918,e.Zhearmenian=1338,e.Zhebrevecyrillic=1217,e.Zhecyrillic=1046,e.Zhedescendercyrillic=1174,e.Zhedieresiscyrillic=1244,e.Zlinebelow=7828,e.Zmonospace=65338,e.Zsmall=63354,e.Zstroke=437,e.a=97,e.aabengali=2438,e.aacute=225,e.aadeva=2310,e.aagujarati=2694,e.aagurmukhi=2566,e.aamatragurmukhi=2622,e.aarusquare=13059,e.aavowelsignbengali=2494,e.aavowelsigndeva=2366,e.aavowelsigngujarati=2750,e.abbreviationmarkarmenian=1375,e.abbreviationsigndeva=2416,e.abengali=2437,e.abopomofo=12570,e.abreve=259,e.abreveacute=7855,e.abrevecyrillic=1233,e.abrevedotbelow=7863,e.abrevegrave=7857,e.abrevehookabove=7859,e.abrevetilde=7861,e.acaron=462,e.acircle=9424,e.acircumflex=226,e.acircumflexacute=7845,e.acircumflexdotbelow=7853,e.acircumflexgrave=7847,e.acircumflexhookabove=7849,e.acircumflextilde=7851,e.acute=180,e.acutebelowcmb=791,e.acutecmb=769,e.acutecomb=769,e.acutedeva=2388,e.acutelowmod=719,e.acutetonecmb=833,e.acyrillic=1072,e.adblgrave=513,e.addakgurmukhi=2673,e.adeva=2309,e.adieresis=228,e.adieresiscyrillic=1235,e.adieresismacron=479,e.adotbelow=7841,e.adotmacron=481,e.ae=230,e.aeacute=509,e.aekorean=12624,e.aemacron=483,e.afii00208=8213,e.afii08941=8356,e.afii10017=1040,e.afii10018=1041,e.afii10019=1042,e.afii10020=1043,e.afii10021=1044,e.afii10022=1045,e.afii10023=1025,e.afii10024=1046,e.afii10025=1047,e.afii10026=1048,e.afii10027=1049,e.afii10028=1050,e.afii10029=1051,e.afii10030=1052;e.afii10031=1053,e.afii10032=1054,e.afii10033=1055,e.afii10034=1056,e.afii10035=1057,e.afii10036=1058,e.afii10037=1059,e.afii10038=1060,e.afii10039=1061,e.afii10040=1062,e.afii10041=1063,e.afii10042=1064,e.afii10043=1065,e.afii10044=1066,e.afii10045=1067,e.afii10046=1068,e.afii10047=1069,e.afii10048=1070,e.afii10049=1071,e.afii10050=1168,e.afii10051=1026,e.afii10052=1027,e.afii10053=1028,e.afii10054=1029,e.afii10055=1030,e.afii10056=1031,e.afii10057=1032,e.afii10058=1033,e.afii10059=1034,e.afii10060=1035,e.afii10061=1036,e.afii10062=1038,e.afii10063=63172,e.afii10064=63173,e.afii10065=1072,e.afii10066=1073,e.afii10067=1074,e.afii10068=1075,e.afii10069=1076,e.afii10070=1077,e.afii10071=1105,e.afii10072=1078,e.afii10073=1079,e.afii10074=1080,e.afii10075=1081,e.afii10076=1082,e.afii10077=1083,e.afii10078=1084,e.afii10079=1085,e.afii10080=1086,e.afii10081=1087,e.afii10082=1088,e.afii10083=1089,e.afii10084=1090,e.afii10085=1091,e.afii10086=1092,e.afii10087=1093,e.afii10088=1094,e.afii10089=1095,e.afii10090=1096,e.afii10091=1097,e.afii10092=1098,e.afii10093=1099,e.afii10094=1100,e.afii10095=1101,e.afii10096=1102,e.afii10097=1103,e.afii10098=1169,e.afii10099=1106,e.afii10100=1107,e.afii10101=1108,e.afii10102=1109,e.afii10103=1110,e.afii10104=1111,e.afii10105=1112,e.afii10106=1113,e.afii10107=1114,e.afii10108=1115,e.afii10109=1116,e.afii10110=1118,e.afii10145=1039,e.afii10146=1122,e.afii10147=1138,e.afii10148=1140,e.afii10192=63174,e.afii10193=1119,e.afii10194=1123,e.afii10195=1139,e.afii10196=1141,e.afii10831=63175,e.afii10832=63176,e.afii10846=1241,e.afii299=8206,e.afii300=8207,e.afii301=8205,e.afii57381=1642,e.afii57388=1548,e.afii57392=1632,e.afii57393=1633,e.afii57394=1634,e.afii57395=1635,e.afii57396=1636,e.afii57397=1637,e.afii57398=1638,e.afii57399=1639,e.afii57400=1640,e.afii57401=1641,e.afii57403=1563,e.afii57407=1567,e.afii57409=1569,e.afii57410=1570,e.afii57411=1571,e.afii57412=1572,e.afii57413=1573,e.afii57414=1574,e.afii57415=1575,e.afii57416=1576,e.afii57417=1577,e.afii57418=1578,e.afii57419=1579,e.afii57420=1580,e.afii57421=1581,e.afii57422=1582,e.afii57423=1583,e.afii57424=1584,e.afii57425=1585,e.afii57426=1586,e.afii57427=1587,e.afii57428=1588,e.afii57429=1589,e.afii57430=1590,e.afii57431=1591,e.afii57432=1592,e.afii57433=1593,e.afii57434=1594,e.afii57440=1600,e.afii57441=1601,e.afii57442=1602,e.afii57443=1603,e.afii57444=1604,e.afii57445=1605,e.afii57446=1606,e.afii57448=1608,e.afii57449=1609,e.afii57450=1610,e.afii57451=1611,e.afii57452=1612,e.afii57453=1613,e.afii57454=1614,e.afii57455=1615,e.afii57456=1616,e.afii57457=1617,e.afii57458=1618,e.afii57470=1607,e.afii57505=1700,e.afii57506=1662,e.afii57507=1670,e.afii57508=1688,e.afii57509=1711,e.afii57511=1657,e.afii57512=1672,e.afii57513=1681,e.afii57514=1722,e.afii57519=1746,e.afii57534=1749,e.afii57636=8362,e.afii57645=1470,e.afii57658=1475,e.afii57664=1488,e.afii57665=1489,e.afii57666=1490,e.afii57667=1491,e.afii57668=1492,e.afii57669=1493,e.afii57670=1494,e.afii57671=1495,e.afii57672=1496,e.afii57673=1497,e.afii57674=1498,e.afii57675=1499,e.afii57676=1500,e.afii57677=1501,e.afii57678=1502,e.afii57679=1503,e.afii57680=1504,e.afii57681=1505,e.afii57682=1506,e.afii57683=1507,e.afii57684=1508,e.afii57685=1509,e.afii57686=1510,e.afii57687=1511,e.afii57688=1512,e.afii57689=1513,e.afii57690=1514,e.afii57694=64298,e.afii57695=64299,e.afii57700=64331,e.afii57705=64287,e.afii57716=1520,e.afii57717=1521,e.afii57718=1522,e.afii57723=64309,e.afii57793=1460,e.afii57794=1461,e.afii57795=1462,e.afii57796=1467,e.afii57797=1464,e.afii57798=1463,e.afii57799=1456,e.afii57800=1458,e.afii57801=1457,e.afii57802=1459,e.afii57803=1474,e.afii57804=1473,e.afii57806=1465,e.afii57807=1468,e.afii57839=1469,e.afii57841=1471,e.afii57842=1472,e.afii57929=700,e.afii61248=8453,e.afii61289=8467,e.afii61352=8470,e.afii61573=8236,e.afii61574=8237,e.afii61575=8238,e.afii61664=8204,e.afii63167=1645,e.afii64937=701,e.agrave=224,e.agujarati=2693,e.agurmukhi=2565,e.ahiragana=12354,e.ahookabove=7843,e.aibengali=2448,e.aibopomofo=12574,e.aideva=2320,e.aiecyrillic=1237,e.aigujarati=2704,e.aigurmukhi=2576,e.aimatragurmukhi=2632,e.ainarabic=1593,e.ainfinalarabic=65226,e.aininitialarabic=65227,e.ainmedialarabic=65228,e.ainvertedbreve=515,e.aivowelsignbengali=2504,e.aivowelsigndeva=2376,e.aivowelsigngujarati=2760,e.akatakana=12450,e.akatakanahalfwidth=65393,e.akorean=12623,e.alef=1488,e.alefarabic=1575,e.alefdageshhebrew=64304,e.aleffinalarabic=65166,e.alefhamzaabovearabic=1571,e.alefhamzaabovefinalarabic=65156,e.alefhamzabelowarabic=1573,e.alefhamzabelowfinalarabic=65160,e.alefhebrew=1488,e.aleflamedhebrew=64335,e.alefmaddaabovearabic=1570,e.alefmaddaabovefinalarabic=65154,e.alefmaksuraarabic=1609,e.alefmaksurafinalarabic=65264,e.alefmaksurainitialarabic=65267,e.alefmaksuramedialarabic=65268,e.alefpatahhebrew=64302,e.alefqamatshebrew=64303,e.aleph=8501,e.allequal=8780,e.alpha=945,e.alphatonos=940,e.amacron=257,e.amonospace=65345,e.ampersand=38,e.ampersandmonospace=65286,e.ampersandsmall=63270,e.amsquare=13250,e.anbopomofo=12578,e.angbopomofo=12580,e.angbracketleft=12296,e.angbracketright=12297,e.angkhankhuthai=3674,e.angle=8736,e.anglebracketleft=12296,e.anglebracketleftvertical=65087,e.anglebracketright=12297,e.anglebracketrightvertical=65088,e.angleleft=9001,e.angleright=9002,e.angstrom=8491,e.anoteleia=903,e.anudattadeva=2386,e.anusvarabengali=2434,e.anusvaradeva=2306,e.anusvaragujarati=2690,e.aogonek=261,e.apaatosquare=13056,e.aparen=9372,e.apostrophearmenian=1370,e.apostrophemod=700,e.apple=63743,e.approaches=8784,e.approxequal=8776,e.approxequalorimage=8786,e.approximatelyequal=8773,e.araeaekorean=12686,e.araeakorean=12685,e.arc=8978,e.arighthalfring=7834,e.aring=229,e.aringacute=507,e.aringbelow=7681,e.arrowboth=8596,e.arrowdashdown=8675,e.arrowdashleft=8672,e.arrowdashright=8674,e.arrowdashup=8673,e.arrowdblboth=8660,e.arrowdbldown=8659,e.arrowdblleft=8656,e.arrowdblright=8658,e.arrowdblup=8657,e.arrowdown=8595,e.arrowdownleft=8601,e.arrowdownright=8600,e.arrowdownwhite=8681,e.arrowheaddownmod=709,e.arrowheadleftmod=706,e.arrowheadrightmod=707,e.arrowheadupmod=708,e.arrowhorizex=63719,e.arrowleft=8592,e.arrowleftdbl=8656,e.arrowleftdblstroke=8653,e.arrowleftoverright=8646,e.arrowleftwhite=8678,e.arrowright=8594,e.arrowrightdblstroke=8655,e.arrowrightheavy=10142,e.arrowrightoverleft=8644,e.arrowrightwhite=8680,e.arrowtableft=8676,e.arrowtabright=8677,e.arrowup=8593,e.arrowupdn=8597,e.arrowupdnbse=8616,e.arrowupdownbase=8616,e.arrowupleft=8598,e.arrowupleftofdown=8645,e.arrowupright=8599,e.arrowupwhite=8679,e.arrowvertex=63718,e.asciicircum=94,e.asciicircummonospace=65342,e.asciitilde=126,e.asciitildemonospace=65374,e.ascript=593,e.ascriptturned=594,e.asmallhiragana=12353,e.asmallkatakana=12449,e.asmallkatakanahalfwidth=65383,e.asterisk=42,e.asteriskaltonearabic=1645,e.asteriskarabic=1645,e.asteriskmath=8727,e.asteriskmonospace=65290,e.asterisksmall=65121,e.asterism=8258,e.asuperior=63209,e.asymptoticallyequal=8771,e.at=64,e.atilde=227,e.atmonospace=65312,e.atsmall=65131,e.aturned=592,e.aubengali=2452,e.aubopomofo=12576,e.audeva=2324,e.augujarati=2708,e.augurmukhi=2580,e.aulengthmarkbengali=2519,e.aumatragurmukhi=2636,e.auvowelsignbengali=2508,e.auvowelsigndeva=2380,e.auvowelsigngujarati=2764,e.avagrahadeva=2365,e.aybarmenian=1377,e.ayin=1506,e.ayinaltonehebrew=64288,e.ayinhebrew=1506,e.b=98,e.babengali=2476,e.backslash=92,e.backslashmonospace=65340,e.badeva=2348,e.bagujarati=2732,e.bagurmukhi=2604,e.bahiragana=12400,e.bahtthai=3647,e.bakatakana=12496,e.bar=124,e.barmonospace=65372,e.bbopomofo=12549,e.bcircle=9425,e.bdotaccent=7683,e.bdotbelow=7685,e.beamedsixteenthnotes=9836,e.because=8757,e.becyrillic=1073,e.beharabic=1576,e.behfinalarabic=65168,e.behinitialarabic=65169,e.behiragana=12409,e.behmedialarabic=65170,e.behmeeminitialarabic=64671,e.behmeemisolatedarabic=64520,e.behnoonfinalarabic=64621,e.bekatakana=12505,e.benarmenian=1378,e.bet=1489,e.beta=946,e.betasymbolgreek=976,e.betdagesh=64305,e.betdageshhebrew=64305,e.bethebrew=1489,e.betrafehebrew=64332,e.bhabengali=2477,e.bhadeva=2349,e.bhagujarati=2733,e.bhagurmukhi=2605,e.bhook=595,e.bihiragana=12403,e.bikatakana=12499,e.bilabialclick=664,e.bindigurmukhi=2562,e.birusquare=13105,e.blackcircle=9679,e.blackdiamond=9670,e.blackdownpointingtriangle=9660,e.blackleftpointingpointer=9668,e.blackleftpointingtriangle=9664,e.blacklenticularbracketleft=12304,e.blacklenticularbracketleftvertical=65083,e.blacklenticularbracketright=12305,e.blacklenticularbracketrightvertical=65084,e.blacklowerlefttriangle=9699,e.blacklowerrighttriangle=9698,e.blackrectangle=9644,e.blackrightpointingpointer=9658,e.blackrightpointingtriangle=9654,e.blacksmallsquare=9642,e.blacksmilingface=9787,e.blacksquare=9632,e.blackstar=9733,e.blackupperlefttriangle=9700,e.blackupperrighttriangle=9701,e.blackuppointingsmalltriangle=9652,e.blackuppointingtriangle=9650,e.blank=9251,e.blinebelow=7687,e.block=9608,e.bmonospace=65346,e.bobaimaithai=3610,e.bohiragana=12412,e.bokatakana=12508,e.bparen=9373,e.bqsquare=13251,e.braceex=63732,e.braceleft=123,e.braceleftbt=63731,e.braceleftmid=63730,e.braceleftmonospace=65371,e.braceleftsmall=65115,e.bracelefttp=63729,e.braceleftvertical=65079,e.braceright=125,e.bracerightbt=63742,e.bracerightmid=63741,e.bracerightmonospace=65373,e.bracerightsmall=65116,e.bracerighttp=63740,e.bracerightvertical=65080,e.bracketleft=91,e.bracketleftbt=63728,e.bracketleftex=63727,e.bracketleftmonospace=65339,e.bracketlefttp=63726,e.bracketright=93,e.bracketrightbt=63739,e.bracketrightex=63738,e.bracketrightmonospace=65341,e.bracketrighttp=63737,e.breve=728,e.brevebelowcmb=814,e.brevecmb=774,e.breveinvertedbelowcmb=815,e.breveinvertedcmb=785,e.breveinverteddoublecmb=865,e.bridgebelowcmb=810,e.bridgeinvertedbelowcmb=826,e.brokenbar=166,e.bstroke=384,e.bsuperior=63210,e.btopbar=387,e.buhiragana=12406,e.bukatakana=12502,e.bullet=8226,e.bulletinverse=9688,e.bulletoperator=8729,e.bullseye=9678,e.c=99,e.caarmenian=1390,e.cabengali=2458,e.cacute=263,e.cadeva=2330,e.cagujarati=2714,e.cagurmukhi=2586,e.calsquare=13192,e.candrabindubengali=2433,e.candrabinducmb=784,e.candrabindudeva=2305,e.candrabindugujarati=2689,e.capslock=8682,e.careof=8453,e.caron=711,e.caronbelowcmb=812,e.caroncmb=780,e.carriagereturn=8629,e.cbopomofo=12568,e.ccaron=269,e.ccedilla=231,e.ccedillaacute=7689,e.ccircle=9426,e.ccircumflex=265,e.ccurl=597,e.cdot=267,e.cdotaccent=267,e.cdsquare=13253,e.cedilla=184,e.cedillacmb=807,e.cent=162,e.centigrade=8451,e.centinferior=63199,e.centmonospace=65504,e.centoldstyle=63394,e.centsuperior=63200,e.chaarmenian=1401,e.chabengali=2459,e.chadeva=2331,e.chagujarati=2715,e.chagurmukhi=2587,e.chbopomofo=12564,e.cheabkhasiancyrillic=1213,e.checkmark=10003,e.checyrillic=1095,e.chedescenderabkhasiancyrillic=1215,e.chedescendercyrillic=1207,e.chedieresiscyrillic=1269,e.cheharmenian=1395,e.chekhakassiancyrillic=1228,e.cheverticalstrokecyrillic=1209,e.chi=967,e.chieuchacirclekorean=12919,e.chieuchaparenkorean=12823,e.chieuchcirclekorean=12905,e.chieuchkorean=12618,e.chieuchparenkorean=12809,e.chochangthai=3594,e.chochanthai=3592,e.chochingthai=3593,e.chochoethai=3596,e.chook=392,e.cieucacirclekorean=12918,e.cieucaparenkorean=12822,e.cieuccirclekorean=12904,e.cieuckorean=12616,e.cieucparenkorean=12808,e.cieucuparenkorean=12828,e.circle=9675,e.circlecopyrt=169,e.circlemultiply=8855,e.circleot=8857,e.circleplus=8853,e.circlepostalmark=12342,e.circlewithlefthalfblack=9680,e.circlewithrighthalfblack=9681,e.circumflex=710,e.circumflexbelowcmb=813,e.circumflexcmb=770,e.clear=8999,e.clickalveolar=450,e.clickdental=448,e.clicklateral=449,e.clickretroflex=451,e.club=9827,e.clubsuitblack=9827,e.clubsuitwhite=9831,e.cmcubedsquare=13220,e.cmonospace=65347,e.cmsquaredsquare=13216,e.coarmenian=1409,e.colon=58,e.colonmonetary=8353,e.colonmonospace=65306,e.colonsign=8353,e.colonsmall=65109,e.colontriangularhalfmod=721,e.colontriangularmod=720,e.comma=44,e.commaabovecmb=787,e.commaaboverightcmb=789,e.commaaccent=63171,e.commaarabic=1548,e.commaarmenian=1373,e.commainferior=63201,e.commamonospace=65292,e.commareversedabovecmb=788,e.commareversedmod=701,e.commasmall=65104,e.commasuperior=63202,e.commaturnedabovecmb=786,e.commaturnedmod=699,e.compass=9788,e.congruent=8773,e.contourintegral=8750,e.control=8963,e.controlACK=6,e.controlBEL=7,e.controlBS=8,e.controlCAN=24,e.controlCR=13,e.controlDC1=17,e.controlDC2=18,e.controlDC3=19,e.controlDC4=20,e.controlDEL=127,e.controlDLE=16,e.controlEM=25,e.controlENQ=5,e.controlEOT=4,e.controlESC=27,e.controlETB=23,e.controlETX=3,e.controlFF=12,e.controlFS=28,e.controlGS=29,e.controlHT=9,e.controlLF=10,e.controlNAK=21,e.controlNULL=0,e.controlRS=30,e.controlSI=15,e.controlSO=14,e.controlSOT=2,e.controlSTX=1,e.controlSUB=26,e.controlSYN=22,e.controlUS=31,e.controlVT=11,e.copyright=169,e.copyrightsans=63721,e.copyrightserif=63193,e.cornerbracketleft=12300,e.cornerbracketlefthalfwidth=65378,e.cornerbracketleftvertical=65089,e.cornerbracketright=12301,e.cornerbracketrighthalfwidth=65379,e.cornerbracketrightvertical=65090,e.corporationsquare=13183,e.cosquare=13255,e.coverkgsquare=13254,e.cparen=9374,e.cruzeiro=8354,e.cstretched=663,e.curlyand=8911,e.curlyor=8910,e.currency=164,e.cyrBreve=63185,e.cyrFlex=63186,e.cyrbreve=63188,e.cyrflex=63189,e.d=100,e.daarmenian=1380,e.dabengali=2470,e.dadarabic=1590,e.dadeva=2342,e.dadfinalarabic=65214,e.dadinitialarabic=65215,e.dadmedialarabic=65216,e.dagesh=1468,e.dageshhebrew=1468,e.dagger=8224,e.daggerdbl=8225,e.dagujarati=2726,e.dagurmukhi=2598,e.dahiragana=12384,e.dakatakana=12480,e.dalarabic=1583,e.dalet=1491,e.daletdagesh=64307,e.daletdageshhebrew=64307,e.dalethebrew=1491,e.dalfinalarabic=65194,e.dammaarabic=1615,e.dammalowarabic=1615,e.dammatanaltonearabic=1612,e.dammatanarabic=1612,e.danda=2404,e.dargahebrew=1447,e.dargalefthebrew=1447,e.dasiapneumatacyrilliccmb=1157,e.dblGrave=63187,e.dblanglebracketleft=12298,e.dblanglebracketleftvertical=65085,e.dblanglebracketright=12299,e.dblanglebracketrightvertical=65086,e.dblarchinvertedbelowcmb=811,e.dblarrowleft=8660,e.dblarrowright=8658,e.dbldanda=2405,e.dblgrave=63190,e.dblgravecmb=783,e.dblintegral=8748,e.dbllowline=8215,e.dbllowlinecmb=819,e.dbloverlinecmb=831,e.dblprimemod=698,e.dblverticalbar=8214,e.dblverticallineabovecmb=782,e.dbopomofo=12553,e.dbsquare=13256,e.dcaron=271,e.dcedilla=7697,e.dcircle=9427,e.dcircumflexbelow=7699,e.dcroat=273,e.ddabengali=2465,e.ddadeva=2337,e.ddagujarati=2721,e.ddagurmukhi=2593,e.ddalarabic=1672,e.ddalfinalarabic=64393,e.dddhadeva=2396,e.ddhabengali=2466,e.ddhadeva=2338,e.ddhagujarati=2722,e.ddhagurmukhi=2594,e.ddotaccent=7691,e.ddotbelow=7693,e.decimalseparatorarabic=1643,e.decimalseparatorpersian=1643,e.decyrillic=1076,e.degree=176,e.dehihebrew=1453,e.dehiragana=12391,e.deicoptic=1007,e.dekatakana=12487,e.deleteleft=9003,e.deleteright=8998,e.delta=948,e.deltaturned=397,e.denominatorminusonenumeratorbengali=2552,e.dezh=676,e.dhabengali=2471,e.dhadeva=2343,e.dhagujarati=2727,e.dhagurmukhi=2599,e.dhook=599,e.dialytikatonos=901,e.dialytikatonoscmb=836,e.diamond=9830,e.diamondsuitwhite=9826,e.dieresis=168,e.dieresisacute=63191,e.dieresisbelowcmb=804,e.dieresiscmb=776,e.dieresisgrave=63192,e.dieresistonos=901,e.dihiragana=12386,e.dikatakana=12482,e.dittomark=12291,e.divide=247,e.divides=8739,e.divisionslash=8725,e.djecyrillic=1106,e.dkshade=9619,e.dlinebelow=7695,e.dlsquare=13207,e.dmacron=273,e.dmonospace=65348,e.dnblock=9604,e.dochadathai=3598,e.dodekthai=3604,e.dohiragana=12393,e.dokatakana=12489,e.dollar=36;e.dollarinferior=63203,e.dollarmonospace=65284,e.dollaroldstyle=63268,e.dollarsmall=65129,e.dollarsuperior=63204,e.dong=8363,e.dorusquare=13094,e.dotaccent=729,e.dotaccentcmb=775,e.dotbelowcmb=803,e.dotbelowcomb=803,e.dotkatakana=12539,e.dotlessi=305,e.dotlessj=63166,e.dotlessjstrokehook=644,e.dotmath=8901,e.dottedcircle=9676,e.doubleyodpatah=64287,e.doubleyodpatahhebrew=64287,e.downtackbelowcmb=798,e.downtackmod=725,e.dparen=9375,e.dsuperior=63211,e.dtail=598,e.dtopbar=396,e.duhiragana=12389,e.dukatakana=12485,e.dz=499,e.dzaltone=675,e.dzcaron=454,e.dzcurl=677,e.dzeabkhasiancyrillic=1249,e.dzecyrillic=1109,e.dzhecyrillic=1119,e.e=101,e.eacute=233,e.earth=9793,e.ebengali=2447,e.ebopomofo=12572,e.ebreve=277,e.ecandradeva=2317,e.ecandragujarati=2701,e.ecandravowelsigndeva=2373,e.ecandravowelsigngujarati=2757,e.ecaron=283,e.ecedillabreve=7709,e.echarmenian=1381,e.echyiwnarmenian=1415,e.ecircle=9428,e.ecircumflex=234,e.ecircumflexacute=7871,e.ecircumflexbelow=7705,e.ecircumflexdotbelow=7879,e.ecircumflexgrave=7873,e.ecircumflexhookabove=7875,e.ecircumflextilde=7877,e.ecyrillic=1108,e.edblgrave=517,e.edeva=2319,e.edieresis=235,e.edot=279,e.edotaccent=279,e.edotbelow=7865,e.eegurmukhi=2575,e.eematragurmukhi=2631,e.efcyrillic=1092,e.egrave=232,e.egujarati=2703,e.eharmenian=1383,e.ehbopomofo=12573,e.ehiragana=12360,e.ehookabove=7867,e.eibopomofo=12575,e.eight=56,e.eightarabic=1640,e.eightbengali=2542,e.eightcircle=9319,e.eightcircleinversesansserif=10129,e.eightdeva=2414,e.eighteencircle=9329,e.eighteenparen=9349,e.eighteenperiod=9369,e.eightgujarati=2798,e.eightgurmukhi=2670,e.eighthackarabic=1640,e.eighthangzhou=12328,e.eighthnotebeamed=9835,e.eightideographicparen=12839,e.eightinferior=8328,e.eightmonospace=65304,e.eightoldstyle=63288,e.eightparen=9339,e.eightperiod=9359,e.eightpersian=1784,e.eightroman=8567,e.eightsuperior=8312,e.eightthai=3672,e.einvertedbreve=519,e.eiotifiedcyrillic=1125,e.ekatakana=12456,e.ekatakanahalfwidth=65396,e.ekonkargurmukhi=2676,e.ekorean=12628,e.elcyrillic=1083,e.element=8712,e.elevencircle=9322,e.elevenparen=9342,e.elevenperiod=9362,e.elevenroman=8570,e.ellipsis=8230,e.ellipsisvertical=8942,e.emacron=275,e.emacronacute=7703,e.emacrongrave=7701,e.emcyrillic=1084,e.emdash=8212,e.emdashvertical=65073,e.emonospace=65349,e.emphasismarkarmenian=1371,e.emptyset=8709,e.enbopomofo=12579,e.encyrillic=1085,e.endash=8211,e.endashvertical=65074,e.endescendercyrillic=1187,e.eng=331,e.engbopomofo=12581,e.enghecyrillic=1189,e.enhookcyrillic=1224,e.enspace=8194,e.eogonek=281,e.eokorean=12627,e.eopen=603,e.eopenclosed=666,e.eopenreversed=604,e.eopenreversedclosed=606,e.eopenreversedhook=605,e.eparen=9376,e.epsilon=949,e.epsilontonos=941,e.equal=61,e.equalmonospace=65309,e.equalsmall=65126,e.equalsuperior=8316,e.equivalence=8801,e.erbopomofo=12582,e.ercyrillic=1088,e.ereversed=600,e.ereversedcyrillic=1101,e.escyrillic=1089,e.esdescendercyrillic=1195,e.esh=643,e.eshcurl=646,e.eshortdeva=2318,e.eshortvowelsigndeva=2374,e.eshreversedloop=426,e.eshsquatreversed=645,e.esmallhiragana=12359,e.esmallkatakana=12455,e.esmallkatakanahalfwidth=65386,e.estimated=8494,e.esuperior=63212,e.eta=951,e.etarmenian=1384,e.etatonos=942,e.eth=240,e.etilde=7869,e.etildebelow=7707,e.etnahtafoukhhebrew=1425,e.etnahtafoukhlefthebrew=1425,e.etnahtahebrew=1425,e.etnahtalefthebrew=1425,e.eturned=477,e.eukorean=12641,e.euro=8364,e.evowelsignbengali=2503,e.evowelsigndeva=2375,e.evowelsigngujarati=2759,e.exclam=33,e.exclamarmenian=1372,e.exclamdbl=8252,e.exclamdown=161,e.exclamdownsmall=63393,e.exclammonospace=65281,e.exclamsmall=63265,e.existential=8707,e.ezh=658,e.ezhcaron=495,e.ezhcurl=659,e.ezhreversed=441,e.ezhtail=442,e.f=102,e.fadeva=2398,e.fagurmukhi=2654,e.fahrenheit=8457,e.fathaarabic=1614,e.fathalowarabic=1614,e.fathatanarabic=1611,e.fbopomofo=12552,e.fcircle=9429,e.fdotaccent=7711,e.feharabic=1601,e.feharmenian=1414,e.fehfinalarabic=65234,e.fehinitialarabic=65235,e.fehmedialarabic=65236,e.feicoptic=997,e.female=9792,e.ff=64256,e.ffi=64259,e.ffl=64260,e.fi=64257,e.fifteencircle=9326,e.fifteenparen=9346,e.fifteenperiod=9366,e.figuredash=8210,e.filledbox=9632,e.filledrect=9644,e.finalkaf=1498,e.finalkafdagesh=64314,e.finalkafdageshhebrew=64314,e.finalkafhebrew=1498,e.finalmem=1501,e.finalmemhebrew=1501,e.finalnun=1503,e.finalnunhebrew=1503,e.finalpe=1507,e.finalpehebrew=1507,e.finaltsadi=1509,e.finaltsadihebrew=1509,e.firsttonechinese=713,e.fisheye=9673,e.fitacyrillic=1139,e.five=53,e.fivearabic=1637,e.fivebengali=2539,e.fivecircle=9316,e.fivecircleinversesansserif=10126,e.fivedeva=2411,e.fiveeighths=8541,e.fivegujarati=2795,e.fivegurmukhi=2667,e.fivehackarabic=1637,e.fivehangzhou=12325,e.fiveideographicparen=12836,e.fiveinferior=8325,e.fivemonospace=65301,e.fiveoldstyle=63285,e.fiveparen=9336,e.fiveperiod=9356,e.fivepersian=1781,e.fiveroman=8564,e.fivesuperior=8309,e.fivethai=3669,e.fl=64258,e.florin=402,e.fmonospace=65350,e.fmsquare=13209,e.fofanthai=3615,e.fofathai=3613,e.fongmanthai=3663,e.forall=8704,e.four=52,e.fourarabic=1636,e.fourbengali=2538,e.fourcircle=9315,e.fourcircleinversesansserif=10125,e.fourdeva=2410,e.fourgujarati=2794,e.fourgurmukhi=2666,e.fourhackarabic=1636,e.fourhangzhou=12324,e.fourideographicparen=12835,e.fourinferior=8324,e.fourmonospace=65300,e.fournumeratorbengali=2551,e.fouroldstyle=63284,e.fourparen=9335,e.fourperiod=9355,e.fourpersian=1780,e.fourroman=8563,e.foursuperior=8308,e.fourteencircle=9325,e.fourteenparen=9345,e.fourteenperiod=9365,e.fourthai=3668,e.fourthtonechinese=715,e.fparen=9377,e.fraction=8260,e.franc=8355,e.g=103,e.gabengali=2455,e.gacute=501,e.gadeva=2327,e.gafarabic=1711,e.gaffinalarabic=64403,e.gafinitialarabic=64404,e.gafmedialarabic=64405,e.gagujarati=2711,e.gagurmukhi=2583,e.gahiragana=12364,e.gakatakana=12460,e.gamma=947,e.gammalatinsmall=611,e.gammasuperior=736,e.gangiacoptic=1003,e.gbopomofo=12557,e.gbreve=287,e.gcaron=487,e.gcedilla=291,e.gcircle=9430,e.gcircumflex=285,e.gcommaaccent=291,e.gdot=289,e.gdotaccent=289,e.gecyrillic=1075,e.gehiragana=12370,e.gekatakana=12466,e.geometricallyequal=8785,e.gereshaccenthebrew=1436,e.gereshhebrew=1523,e.gereshmuqdamhebrew=1437,e.germandbls=223,e.gershayimaccenthebrew=1438,e.gershayimhebrew=1524,e.getamark=12307,e.ghabengali=2456,e.ghadarmenian=1394,e.ghadeva=2328,e.ghagujarati=2712,e.ghagurmukhi=2584,e.ghainarabic=1594,e.ghainfinalarabic=65230,e.ghaininitialarabic=65231,e.ghainmedialarabic=65232,e.ghemiddlehookcyrillic=1173,e.ghestrokecyrillic=1171,e.gheupturncyrillic=1169,e.ghhadeva=2394,e.ghhagurmukhi=2650,e.ghook=608,e.ghzsquare=13203,e.gihiragana=12366,e.gikatakana=12462,e.gimarmenian=1379,e.gimel=1490,e.gimeldagesh=64306,e.gimeldageshhebrew=64306,e.gimelhebrew=1490,e.gjecyrillic=1107,e.glottalinvertedstroke=446,e.glottalstop=660,e.glottalstopinverted=662,e.glottalstopmod=704,e.glottalstopreversed=661,e.glottalstopreversedmod=705,e.glottalstopreversedsuperior=740,e.glottalstopstroke=673,e.glottalstopstrokereversed=674,e.gmacron=7713,e.gmonospace=65351,e.gohiragana=12372,e.gokatakana=12468,e.gparen=9378,e.gpasquare=13228,e.gradient=8711,e.grave=96,e.gravebelowcmb=790,e.gravecmb=768,e.gravecomb=768,e.gravedeva=2387,e.gravelowmod=718,e.gravemonospace=65344,e.gravetonecmb=832,e.greater=62,e.greaterequal=8805,e.greaterequalorless=8923,e.greatermonospace=65310,e.greaterorequivalent=8819,e.greaterorless=8823,e.greateroverequal=8807,e.greatersmall=65125,e.gscript=609,e.gstroke=485,e.guhiragana=12368,e.guillemotleft=171,e.guillemotright=187,e.guilsinglleft=8249,e.guilsinglright=8250,e.gukatakana=12464,e.guramusquare=13080,e.gysquare=13257,e.h=104,e.haabkhasiancyrillic=1193,e.haaltonearabic=1729,e.habengali=2489,e.hadescendercyrillic=1203,e.hadeva=2361,e.hagujarati=2745,e.hagurmukhi=2617,e.haharabic=1581,e.hahfinalarabic=65186,e.hahinitialarabic=65187,e.hahiragana=12399,e.hahmedialarabic=65188,e.haitusquare=13098,e.hakatakana=12495,e.hakatakanahalfwidth=65418,e.halantgurmukhi=2637,e.hamzaarabic=1569,e.hamzalowarabic=1569,e.hangulfiller=12644,e.hardsigncyrillic=1098,e.harpoonleftbarbup=8636,e.harpoonrightbarbup=8640,e.hasquare=13258,e.hatafpatah=1458,e.hatafpatah16=1458,e.hatafpatah23=1458,e.hatafpatah2f=1458,e.hatafpatahhebrew=1458,e.hatafpatahnarrowhebrew=1458,e.hatafpatahquarterhebrew=1458,e.hatafpatahwidehebrew=1458,e.hatafqamats=1459,e.hatafqamats1b=1459,e.hatafqamats28=1459,e.hatafqamats34=1459,e.hatafqamatshebrew=1459,e.hatafqamatsnarrowhebrew=1459,e.hatafqamatsquarterhebrew=1459,e.hatafqamatswidehebrew=1459,e.hatafsegol=1457,e.hatafsegol17=1457,e.hatafsegol24=1457,e.hatafsegol30=1457,e.hatafsegolhebrew=1457,e.hatafsegolnarrowhebrew=1457,e.hatafsegolquarterhebrew=1457,e.hatafsegolwidehebrew=1457,e.hbar=295,e.hbopomofo=12559,e.hbrevebelow=7723,e.hcedilla=7721,e.hcircle=9431,e.hcircumflex=293,e.hdieresis=7719,e.hdotaccent=7715,e.hdotbelow=7717,e.he=1492,e.heart=9829,e.heartsuitblack=9829,e.heartsuitwhite=9825,e.hedagesh=64308,e.hedageshhebrew=64308,e.hehaltonearabic=1729,e.heharabic=1607,e.hehebrew=1492,e.hehfinalaltonearabic=64423,e.hehfinalalttwoarabic=65258,e.hehfinalarabic=65258,e.hehhamzaabovefinalarabic=64421,e.hehhamzaaboveisolatedarabic=64420,e.hehinitialaltonearabic=64424,e.hehinitialarabic=65259,e.hehiragana=12408,e.hehmedialaltonearabic=64425,e.hehmedialarabic=65260,e.heiseierasquare=13179,e.hekatakana=12504,e.hekatakanahalfwidth=65421,e.hekutaarusquare=13110,e.henghook=615,e.herutusquare=13113,e.het=1495,e.hethebrew=1495,e.hhook=614,e.hhooksuperior=689,e.hieuhacirclekorean=12923,e.hieuhaparenkorean=12827,e.hieuhcirclekorean=12909,e.hieuhkorean=12622,e.hieuhparenkorean=12813,e.hihiragana=12402,e.hikatakana=12498,e.hikatakanahalfwidth=65419,e.hiriq=1460,e.hiriq14=1460,e.hiriq21=1460,e.hiriq2d=1460,e.hiriqhebrew=1460,e.hiriqnarrowhebrew=1460,e.hiriqquarterhebrew=1460,e.hiriqwidehebrew=1460,e.hlinebelow=7830,e.hmonospace=65352,e.hoarmenian=1392,e.hohipthai=3627,e.hohiragana=12411,e.hokatakana=12507,e.hokatakanahalfwidth=65422,e.holam=1465,e.holam19=1465,e.holam26=1465,e.holam32=1465,e.holamhebrew=1465,e.holamnarrowhebrew=1465,e.holamquarterhebrew=1465,e.holamwidehebrew=1465,e.honokhukthai=3630,e.hookabovecomb=777,e.hookcmb=777,e.hookpalatalizedbelowcmb=801,e.hookretroflexbelowcmb=802,e.hoonsquare=13122,e.horicoptic=1001,e.horizontalbar=8213,e.horncmb=795,e.hotsprings=9832,e.house=8962,e.hparen=9379,e.hsuperior=688,e.hturned=613,e.huhiragana=12405,e.huiitosquare=13107,e.hukatakana=12501,e.hukatakanahalfwidth=65420,e.hungarumlaut=733,e.hungarumlautcmb=779,e.hv=405,e.hyphen=45,e.hypheninferior=63205,e.hyphenmonospace=65293,e.hyphensmall=65123,e.hyphensuperior=63206,e.hyphentwo=8208,e.i=105,e.iacute=237,e.iacyrillic=1103,e.ibengali=2439,e.ibopomofo=12583,e.ibreve=301,e.icaron=464,e.icircle=9432,e.icircumflex=238,e.icyrillic=1110,e.idblgrave=521,e.ideographearthcircle=12943,e.ideographfirecircle=12939,e.ideographicallianceparen=12863,e.ideographiccallparen=12858,e.ideographiccentrecircle=12965,e.ideographicclose=12294,e.ideographiccomma=12289,e.ideographiccommaleft=65380,e.ideographiccongratulationparen=12855,e.ideographiccorrectcircle=12963,e.ideographicearthparen=12847,e.ideographicenterpriseparen=12861,e.ideographicexcellentcircle=12957,e.ideographicfestivalparen=12864,e.ideographicfinancialcircle=12950,e.ideographicfinancialparen=12854,e.ideographicfireparen=12843,e.ideographichaveparen=12850,e.ideographichighcircle=12964,e.ideographiciterationmark=12293,e.ideographiclaborcircle=12952,e.ideographiclaborparen=12856,e.ideographicleftcircle=12967,e.ideographiclowcircle=12966,e.ideographicmedicinecircle=12969,e.ideographicmetalparen=12846,e.ideographicmoonparen=12842,e.ideographicnameparen=12852,e.ideographicperiod=12290,e.ideographicprintcircle=12958,e.ideographicreachparen=12867,e.ideographicrepresentparen=12857,e.ideographicresourceparen=12862,e.ideographicrightcircle=12968,e.ideographicsecretcircle=12953,e.ideographicselfparen=12866,e.ideographicsocietyparen=12851,e.ideographicspace=12288,e.ideographicspecialparen=12853,e.ideographicstockparen=12849,e.ideographicstudyparen=12859,e.ideographicsunparen=12848,e.ideographicsuperviseparen=12860,e.ideographicwaterparen=12844,e.ideographicwoodparen=12845,e.ideographiczero=12295,e.ideographmetalcircle=12942,e.ideographmooncircle=12938,e.ideographnamecircle=12948,e.ideographsuncircle=12944,e.ideographwatercircle=12940,e.ideographwoodcircle=12941,e.ideva=2311,e.idieresis=239,e.idieresisacute=7727,e.idieresiscyrillic=1253,e.idotbelow=7883,e.iebrevecyrillic=1239,e.iecyrillic=1077,e.ieungacirclekorean=12917,e.ieungaparenkorean=12821,e.ieungcirclekorean=12903,e.ieungkorean=12615,e.ieungparenkorean=12807,e.igrave=236,e.igujarati=2695,e.igurmukhi=2567,e.ihiragana=12356,e.ihookabove=7881,e.iibengali=2440,e.iicyrillic=1080,e.iideva=2312,e.iigujarati=2696,e.iigurmukhi=2568,e.iimatragurmukhi=2624,e.iinvertedbreve=523,e.iishortcyrillic=1081,e.iivowelsignbengali=2496,e.iivowelsigndeva=2368,e.iivowelsigngujarati=2752,e.ij=307,e.ikatakana=12452,e.ikatakanahalfwidth=65394,e.ikorean=12643,e.ilde=732,e.iluyhebrew=1452,e.imacron=299,e.imacroncyrillic=1251,e.imageorapproximatelyequal=8787,e.imatragurmukhi=2623,e.imonospace=65353,e.increment=8710,e.infinity=8734,e.iniarmenian=1387,e.integral=8747,e.integralbottom=8993,e.integralbt=8993,e.integralex=63733,e.integraltop=8992,e.integraltp=8992,e.intersection=8745,e.intisquare=13061,e.invbullet=9688,e.invcircle=9689,e.invsmileface=9787,e.iocyrillic=1105,e.iogonek=303,e.iota=953,e.iotadieresis=970,e.iotadieresistonos=912,e.iotalatin=617,e.iotatonos=943,e.iparen=9380,e.irigurmukhi=2674,e.ismallhiragana=12355,e.ismallkatakana=12451,e.ismallkatakanahalfwidth=65384,e.issharbengali=2554,e.istroke=616,e.isuperior=63213,e.iterationhiragana=12445,e.iterationkatakana=12541,e.itilde=297,e.itildebelow=7725,e.iubopomofo=12585,e.iucyrillic=1102,e.ivowelsignbengali=2495,e.ivowelsigndeva=2367,e.ivowelsigngujarati=2751,e.izhitsacyrillic=1141,e.izhitsadblgravecyrillic=1143,e.j=106,e.jaarmenian=1393,e.jabengali=2460,e.jadeva=2332,e.jagujarati=2716,e.jagurmukhi=2588,e.jbopomofo=12560,e.jcaron=496,e.jcircle=9433,e.jcircumflex=309,e.jcrossedtail=669,e.jdotlessstroke=607,e.jecyrillic=1112,e.jeemarabic=1580,e.jeemfinalarabic=65182,e.jeeminitialarabic=65183,e.jeemmedialarabic=65184,e.jeharabic=1688,e.jehfinalarabic=64395,e.jhabengali=2461,e.jhadeva=2333,e.jhagujarati=2717,e.jhagurmukhi=2589,e.jheharmenian=1403,e.jis=12292,e.jmonospace=65354,e.jparen=9381,e.jsuperior=690,e.k=107,e.kabashkircyrillic=1185,e.kabengali=2453,e.kacute=7729,e.kacyrillic=1082,e.kadescendercyrillic=1179,e.kadeva=2325,e.kaf=1499,e.kafarabic=1603,e.kafdagesh=64315,e.kafdageshhebrew=64315,e.kaffinalarabic=65242,e.kafhebrew=1499,e.kafinitialarabic=65243,e.kafmedialarabic=65244,e.kafrafehebrew=64333,e.kagujarati=2709,e.kagurmukhi=2581,e.kahiragana=12363,e.kahookcyrillic=1220,e.kakatakana=12459,e.kakatakanahalfwidth=65398,e.kappa=954,e.kappasymbolgreek=1008,e.kapyeounmieumkorean=12657,e.kapyeounphieuphkorean=12676,e.kapyeounpieupkorean=12664,e.kapyeounssangpieupkorean=12665,e.karoriisquare=13069,e.kashidaautoarabic=1600,e.kashidaautonosidebearingarabic=1600,e.kasmallkatakana=12533,e.kasquare=13188,e.kasraarabic=1616,e.kasratanarabic=1613,e.kastrokecyrillic=1183,e.katahiraprolongmarkhalfwidth=65392,e.kaverticalstrokecyrillic=1181,e.kbopomofo=12558,e.kcalsquare=13193,e.kcaron=489,e.kcedilla=311,e.kcircle=9434,e.kcommaaccent=311,e.kdotbelow=7731,e.keharmenian=1412,e.kehiragana=12369,e.kekatakana=12465,e.kekatakanahalfwidth=65401,e.kenarmenian=1391,e.kesmallkatakana=12534,e.kgreenlandic=312,e.khabengali=2454,e.khacyrillic=1093,e.khadeva=2326,e.khagujarati=2710,e.khagurmukhi=2582,e.khaharabic=1582,e.khahfinalarabic=65190,e.khahinitialarabic=65191,e.khahmedialarabic=65192,e.kheicoptic=999,e.khhadeva=2393,e.khhagurmukhi=2649,e.khieukhacirclekorean=12920,e.khieukhaparenkorean=12824,e.khieukhcirclekorean=12906,e.khieukhkorean=12619,e.khieukhparenkorean=12810,e.khokhaithai=3586,e.khokhonthai=3589,e.khokhuatthai=3587,e.khokhwaithai=3588,e.khomutthai=3675,e.khook=409,e.khorakhangthai=3590,e.khzsquare=13201,e.kihiragana=12365,e.kikatakana=12461,e.kikatakanahalfwidth=65399,e.kiroguramusquare=13077,e.kiromeetorusquare=13078,e.kirosquare=13076,e.kiyeokacirclekorean=12910,e.kiyeokaparenkorean=12814,e.kiyeokcirclekorean=12896,e.kiyeokkorean=12593,e.kiyeokparenkorean=12800,e.kiyeoksioskorean=12595,e.kjecyrillic=1116,e.klinebelow=7733,e.klsquare=13208,e.kmcubedsquare=13222,e.kmonospace=65355;e.kmsquaredsquare=13218,e.kohiragana=12371,e.kohmsquare=13248,e.kokaithai=3585,e.kokatakana=12467,e.kokatakanahalfwidth=65402,e.kooposquare=13086,e.koppacyrillic=1153,e.koreanstandardsymbol=12927,e.koroniscmb=835,e.kparen=9382,e.kpasquare=13226,e.ksicyrillic=1135,e.ktsquare=13263,e.kturned=670,e.kuhiragana=12367,e.kukatakana=12463,e.kukatakanahalfwidth=65400,e.kvsquare=13240,e.kwsquare=13246,e.l=108,e.labengali=2482,e.lacute=314,e.ladeva=2354,e.lagujarati=2738,e.lagurmukhi=2610,e.lakkhangyaothai=3653,e.lamaleffinalarabic=65276,e.lamalefhamzaabovefinalarabic=65272,e.lamalefhamzaaboveisolatedarabic=65271,e.lamalefhamzabelowfinalarabic=65274,e.lamalefhamzabelowisolatedarabic=65273,e.lamalefisolatedarabic=65275,e.lamalefmaddaabovefinalarabic=65270,e.lamalefmaddaaboveisolatedarabic=65269,e.lamarabic=1604,e.lambda=955,e.lambdastroke=411,e.lamed=1500,e.lameddagesh=64316,e.lameddageshhebrew=64316,e.lamedhebrew=1500,e.lamfinalarabic=65246,e.lamhahinitialarabic=64714,e.laminitialarabic=65247,e.lamjeeminitialarabic=64713,e.lamkhahinitialarabic=64715,e.lamlamhehisolatedarabic=65010,e.lammedialarabic=65248,e.lammeemhahinitialarabic=64904,e.lammeeminitialarabic=64716,e.largecircle=9711,e.lbar=410,e.lbelt=620,e.lbopomofo=12556,e.lcaron=318,e.lcedilla=316,e.lcircle=9435,e.lcircumflexbelow=7741,e.lcommaaccent=316,e.ldot=320,e.ldotaccent=320,e.ldotbelow=7735,e.ldotbelowmacron=7737,e.leftangleabovecmb=794,e.lefttackbelowcmb=792,e.less=60,e.lessequal=8804,e.lessequalorgreater=8922,e.lessmonospace=65308,e.lessorequivalent=8818,e.lessorgreater=8822,e.lessoverequal=8806,e.lesssmall=65124,e.lezh=622,e.lfblock=9612,e.lhookretroflex=621,e.lira=8356,e.liwnarmenian=1388,e.lj=457,e.ljecyrillic=1113,e.ll=63168,e.lladeva=2355,e.llagujarati=2739,e.llinebelow=7739,e.llladeva=2356,e.llvocalicbengali=2529,e.llvocalicdeva=2401,e.llvocalicvowelsignbengali=2531,e.llvocalicvowelsigndeva=2403,e.lmiddletilde=619,e.lmonospace=65356,e.lmsquare=13264,e.lochulathai=3628,e.logicaland=8743,e.logicalnot=172,e.logicalnotreversed=8976,e.logicalor=8744,e.lolingthai=3621,e.longs=383,e.lowlinecenterline=65102,e.lowlinecmb=818,e.lowlinedashed=65101,e.lozenge=9674,e.lparen=9383,e.lslash=322,e.lsquare=8467,e.lsuperior=63214,e.ltshade=9617,e.luthai=3622,e.lvocalicbengali=2444,e.lvocalicdeva=2316,e.lvocalicvowelsignbengali=2530,e.lvocalicvowelsigndeva=2402,e.lxsquare=13267,e.m=109,e.mabengali=2478,e.macron=175,e.macronbelowcmb=817,e.macroncmb=772,e.macronlowmod=717,e.macronmonospace=65507,e.macute=7743,e.madeva=2350,e.magujarati=2734,e.magurmukhi=2606,e.mahapakhhebrew=1444,e.mahapakhlefthebrew=1444,e.mahiragana=12414,e.maichattawalowleftthai=63637,e.maichattawalowrightthai=63636,e.maichattawathai=3659,e.maichattawaupperleftthai=63635,e.maieklowleftthai=63628,e.maieklowrightthai=63627,e.maiekthai=3656,e.maiekupperleftthai=63626,e.maihanakatleftthai=63620,e.maihanakatthai=3633,e.maitaikhuleftthai=63625,e.maitaikhuthai=3655,e.maitholowleftthai=63631,e.maitholowrightthai=63630,e.maithothai=3657,e.maithoupperleftthai=63629,e.maitrilowleftthai=63634,e.maitrilowrightthai=63633,e.maitrithai=3658,e.maitriupperleftthai=63632,e.maiyamokthai=3654,e.makatakana=12510,e.makatakanahalfwidth=65423,e.male=9794,e.mansyonsquare=13127,e.maqafhebrew=1470,e.mars=9794,e.masoracirclehebrew=1455,e.masquare=13187,e.mbopomofo=12551,e.mbsquare=13268,e.mcircle=9436,e.mcubedsquare=13221,e.mdotaccent=7745,e.mdotbelow=7747,e.meemarabic=1605,e.meemfinalarabic=65250,e.meeminitialarabic=65251,e.meemmedialarabic=65252,e.meemmeeminitialarabic=64721,e.meemmeemisolatedarabic=64584,e.meetorusquare=13133,e.mehiragana=12417,e.meizierasquare=13182,e.mekatakana=12513,e.mekatakanahalfwidth=65426,e.mem=1502,e.memdagesh=64318,e.memdageshhebrew=64318,e.memhebrew=1502,e.menarmenian=1396,e.merkhahebrew=1445,e.merkhakefulahebrew=1446,e.merkhakefulalefthebrew=1446,e.merkhalefthebrew=1445,e.mhook=625,e.mhzsquare=13202,e.middledotkatakanahalfwidth=65381,e.middot=183,e.mieumacirclekorean=12914,e.mieumaparenkorean=12818,e.mieumcirclekorean=12900,e.mieumkorean=12609,e.mieumpansioskorean=12656,e.mieumparenkorean=12804,e.mieumpieupkorean=12654,e.mieumsioskorean=12655,e.mihiragana=12415,e.mikatakana=12511,e.mikatakanahalfwidth=65424,e.minus=8722,e.minusbelowcmb=800,e.minuscircle=8854,e.minusmod=727,e.minusplus=8723,e.minute=8242,e.miribaarusquare=13130,e.mirisquare=13129,e.mlonglegturned=624,e.mlsquare=13206,e.mmcubedsquare=13219,e.mmonospace=65357,e.mmsquaredsquare=13215,e.mohiragana=12418,e.mohmsquare=13249,e.mokatakana=12514,e.mokatakanahalfwidth=65427,e.molsquare=13270,e.momathai=3617,e.moverssquare=13223,e.moverssquaredsquare=13224,e.mparen=9384,e.mpasquare=13227,e.mssquare=13235,e.msuperior=63215,e.mturned=623,e.mu=181,e.mu1=181,e.muasquare=13186,e.muchgreater=8811,e.muchless=8810,e.mufsquare=13196,e.mugreek=956,e.mugsquare=13197,e.muhiragana=12416,e.mukatakana=12512,e.mukatakanahalfwidth=65425,e.mulsquare=13205,e.multiply=215,e.mumsquare=13211,e.munahhebrew=1443,e.munahlefthebrew=1443,e.musicalnote=9834,e.musicalnotedbl=9835,e.musicflatsign=9837,e.musicsharpsign=9839,e.mussquare=13234,e.muvsquare=13238,e.muwsquare=13244,e.mvmegasquare=13241,e.mvsquare=13239,e.mwmegasquare=13247,e.mwsquare=13245,e.n=110,e.nabengali=2472,e.nabla=8711,e.nacute=324,e.nadeva=2344,e.nagujarati=2728,e.nagurmukhi=2600,e.nahiragana=12394,e.nakatakana=12490,e.nakatakanahalfwidth=65413,e.napostrophe=329,e.nasquare=13185,e.nbopomofo=12555,e.nbspace=160,e.ncaron=328,e.ncedilla=326,e.ncircle=9437,e.ncircumflexbelow=7755,e.ncommaaccent=326,e.ndotaccent=7749,e.ndotbelow=7751,e.nehiragana=12397,e.nekatakana=12493,e.nekatakanahalfwidth=65416,e.newsheqelsign=8362,e.nfsquare=13195,e.ngabengali=2457,e.ngadeva=2329,e.ngagujarati=2713,e.ngagurmukhi=2585,e.ngonguthai=3591,e.nhiragana=12435,e.nhookleft=626,e.nhookretroflex=627,e.nieunacirclekorean=12911,e.nieunaparenkorean=12815,e.nieuncieuckorean=12597,e.nieuncirclekorean=12897,e.nieunhieuhkorean=12598,e.nieunkorean=12596,e.nieunpansioskorean=12648,e.nieunparenkorean=12801,e.nieunsioskorean=12647,e.nieuntikeutkorean=12646,e.nihiragana=12395,e.nikatakana=12491,e.nikatakanahalfwidth=65414,e.nikhahitleftthai=63641,e.nikhahitthai=3661,e.nine=57,e.ninearabic=1641,e.ninebengali=2543,e.ninecircle=9320,e.ninecircleinversesansserif=10130,e.ninedeva=2415,e.ninegujarati=2799,e.ninegurmukhi=2671,e.ninehackarabic=1641,e.ninehangzhou=12329,e.nineideographicparen=12840,e.nineinferior=8329,e.ninemonospace=65305,e.nineoldstyle=63289,e.nineparen=9340,e.nineperiod=9360,e.ninepersian=1785,e.nineroman=8568,e.ninesuperior=8313,e.nineteencircle=9330,e.nineteenparen=9350,e.nineteenperiod=9370,e.ninethai=3673,e.nj=460,e.njecyrillic=1114,e.nkatakana=12531,e.nkatakanahalfwidth=65437,e.nlegrightlong=414,e.nlinebelow=7753,e.nmonospace=65358,e.nmsquare=13210,e.nnabengali=2467,e.nnadeva=2339,e.nnagujarati=2723,e.nnagurmukhi=2595,e.nnnadeva=2345,e.nohiragana=12398,e.nokatakana=12494,e.nokatakanahalfwidth=65417,e.nonbreakingspace=160,e.nonenthai=3603,e.nonuthai=3609,e.noonarabic=1606,e.noonfinalarabic=65254,e.noonghunnaarabic=1722,e.noonghunnafinalarabic=64415,e.nooninitialarabic=65255,e.noonjeeminitialarabic=64722,e.noonjeemisolatedarabic=64587,e.noonmedialarabic=65256,e.noonmeeminitialarabic=64725,e.noonmeemisolatedarabic=64590,e.noonnoonfinalarabic=64653,e.notcontains=8716,e.notelement=8713,e.notelementof=8713,e.notequal=8800,e.notgreater=8815,e.notgreaternorequal=8817,e.notgreaternorless=8825,e.notidentical=8802,e.notless=8814,e.notlessnorequal=8816,e.notparallel=8742,e.notprecedes=8832,e.notsubset=8836,e.notsucceeds=8833,e.notsuperset=8837,e.nowarmenian=1398,e.nparen=9385,e.nssquare=13233,e.nsuperior=8319,e.ntilde=241,e.nu=957,e.nuhiragana=12396,e.nukatakana=12492,e.nukatakanahalfwidth=65415,e.nuktabengali=2492,e.nuktadeva=2364,e.nuktagujarati=2748,e.nuktagurmukhi=2620,e.numbersign=35,e.numbersignmonospace=65283,e.numbersignsmall=65119,e.numeralsigngreek=884,e.numeralsignlowergreek=885,e.numero=8470,e.nun=1504,e.nundagesh=64320,e.nundageshhebrew=64320,e.nunhebrew=1504,e.nvsquare=13237,e.nwsquare=13243,e.nyabengali=2462,e.nyadeva=2334,e.nyagujarati=2718,e.nyagurmukhi=2590,e.o=111,e.oacute=243,e.oangthai=3629,e.obarred=629,e.obarredcyrillic=1257,e.obarreddieresiscyrillic=1259,e.obengali=2451,e.obopomofo=12571,e.obreve=335,e.ocandradeva=2321,e.ocandragujarati=2705,e.ocandravowelsigndeva=2377,e.ocandravowelsigngujarati=2761,e.ocaron=466,e.ocircle=9438,e.ocircumflex=244,e.ocircumflexacute=7889,e.ocircumflexdotbelow=7897,e.ocircumflexgrave=7891,e.ocircumflexhookabove=7893,e.ocircumflextilde=7895,e.ocyrillic=1086,e.odblacute=337,e.odblgrave=525,e.odeva=2323,e.odieresis=246,e.odieresiscyrillic=1255,e.odotbelow=7885,e.oe=339,e.oekorean=12634,e.ogonek=731,e.ogonekcmb=808,e.ograve=242,e.ogujarati=2707,e.oharmenian=1413,e.ohiragana=12362,e.ohookabove=7887,e.ohorn=417,e.ohornacute=7899,e.ohorndotbelow=7907,e.ohorngrave=7901,e.ohornhookabove=7903,e.ohorntilde=7905,e.ohungarumlaut=337,e.oi=419,e.oinvertedbreve=527,e.okatakana=12458,e.okatakanahalfwidth=65397,e.okorean=12631,e.olehebrew=1451,e.omacron=333,e.omacronacute=7763,e.omacrongrave=7761,e.omdeva=2384,e.omega=969,e.omega1=982,e.omegacyrillic=1121,e.omegalatinclosed=631,e.omegaroundcyrillic=1147,e.omegatitlocyrillic=1149,e.omegatonos=974,e.omgujarati=2768,e.omicron=959,e.omicrontonos=972,e.omonospace=65359,e.one=49,e.onearabic=1633,e.onebengali=2535,e.onecircle=9312,e.onecircleinversesansserif=10122,e.onedeva=2407,e.onedotenleader=8228,e.oneeighth=8539,e.onefitted=63196,e.onegujarati=2791,e.onegurmukhi=2663,e.onehackarabic=1633,e.onehalf=189,e.onehangzhou=12321,e.oneideographicparen=12832,e.oneinferior=8321,e.onemonospace=65297,e.onenumeratorbengali=2548,e.oneoldstyle=63281,e.oneparen=9332,e.oneperiod=9352,e.onepersian=1777,e.onequarter=188,e.oneroman=8560,e.onesuperior=185,e.onethai=3665,e.onethird=8531,e.oogonek=491,e.oogonekmacron=493,e.oogurmukhi=2579,e.oomatragurmukhi=2635,e.oopen=596,e.oparen=9386,e.openbullet=9702,e.option=8997,e.ordfeminine=170,e.ordmasculine=186,e.orthogonal=8735,e.oshortdeva=2322,e.oshortvowelsigndeva=2378,e.oslash=248,e.oslashacute=511,e.osmallhiragana=12361,e.osmallkatakana=12457,e.osmallkatakanahalfwidth=65387,e.ostrokeacute=511,e.osuperior=63216,e.otcyrillic=1151,e.otilde=245,e.otildeacute=7757,e.otildedieresis=7759,e.oubopomofo=12577,e.overline=8254,e.overlinecenterline=65098,e.overlinecmb=773,e.overlinedashed=65097,e.overlinedblwavy=65100,e.overlinewavy=65099,e.overscore=175,e.ovowelsignbengali=2507,e.ovowelsigndeva=2379,e.ovowelsigngujarati=2763,e.p=112,e.paampssquare=13184,e.paasentosquare=13099,e.pabengali=2474,e.pacute=7765,e.padeva=2346,e.pagedown=8671,e.pageup=8670,e.pagujarati=2730,e.pagurmukhi=2602,e.pahiragana=12401,e.paiyannoithai=3631,e.pakatakana=12497,e.palatalizationcyrilliccmb=1156,e.palochkacyrillic=1216,e.pansioskorean=12671,e.paragraph=182,e.parallel=8741,e.parenleft=40,e.parenleftaltonearabic=64830,e.parenleftbt=63725,e.parenleftex=63724,e.parenleftinferior=8333,e.parenleftmonospace=65288,e.parenleftsmall=65113,e.parenleftsuperior=8317,e.parenlefttp=63723,e.parenleftvertical=65077,e.parenright=41,e.parenrightaltonearabic=64831,e.parenrightbt=63736,e.parenrightex=63735,e.parenrightinferior=8334,e.parenrightmonospace=65289,e.parenrightsmall=65114,e.parenrightsuperior=8318,e.parenrighttp=63734,e.parenrightvertical=65078,e.partialdiff=8706,e.paseqhebrew=1472,e.pashtahebrew=1433,e.pasquare=13225,e.patah=1463,e.patah11=1463,e.patah1d=1463,e.patah2a=1463,e.patahhebrew=1463,e.patahnarrowhebrew=1463,e.patahquarterhebrew=1463,e.patahwidehebrew=1463,e.pazerhebrew=1441,e.pbopomofo=12550,e.pcircle=9439,e.pdotaccent=7767,e.pe=1508,e.pecyrillic=1087,e.pedagesh=64324,e.pedageshhebrew=64324,e.peezisquare=13115,e.pefinaldageshhebrew=64323,e.peharabic=1662,e.peharmenian=1402,e.pehebrew=1508,e.pehfinalarabic=64343,e.pehinitialarabic=64344,e.pehiragana=12410,e.pehmedialarabic=64345,e.pekatakana=12506,e.pemiddlehookcyrillic=1191,e.perafehebrew=64334,e.percent=37,e.percentarabic=1642,e.percentmonospace=65285,e.percentsmall=65130,e.period=46,e.periodarmenian=1417,e.periodcentered=183,e.periodhalfwidth=65377,e.periodinferior=63207,e.periodmonospace=65294,e.periodsmall=65106,e.periodsuperior=63208,e.perispomenigreekcmb=834,e.perpendicular=8869,e.perthousand=8240,e.peseta=8359,e.pfsquare=13194,e.phabengali=2475,e.phadeva=2347,e.phagujarati=2731,e.phagurmukhi=2603,e.phi=966,e.phi1=981,e.phieuphacirclekorean=12922,e.phieuphaparenkorean=12826,e.phieuphcirclekorean=12908,e.phieuphkorean=12621,e.phieuphparenkorean=12812,e.philatin=632,e.phinthuthai=3642,e.phisymbolgreek=981,e.phook=421,e.phophanthai=3614,e.phophungthai=3612,e.phosamphaothai=3616,e.pi=960,e.pieupacirclekorean=12915,e.pieupaparenkorean=12819,e.pieupcieuckorean=12662,e.pieupcirclekorean=12901,e.pieupkiyeokkorean=12658,e.pieupkorean=12610,e.pieupparenkorean=12805,e.pieupsioskiyeokkorean=12660,e.pieupsioskorean=12612,e.pieupsiostikeutkorean=12661,e.pieupthieuthkorean=12663,e.pieuptikeutkorean=12659,e.pihiragana=12404,e.pikatakana=12500,e.pisymbolgreek=982,e.piwrarmenian=1411,e.plus=43,e.plusbelowcmb=799,e.pluscircle=8853,e.plusminus=177,e.plusmod=726,e.plusmonospace=65291,e.plussmall=65122,e.plussuperior=8314,e.pmonospace=65360,e.pmsquare=13272,e.pohiragana=12413,e.pointingindexdownwhite=9759,e.pointingindexleftwhite=9756,e.pointingindexrightwhite=9758,e.pointingindexupwhite=9757,e.pokatakana=12509,e.poplathai=3611,e.postalmark=12306,e.postalmarkface=12320,e.pparen=9387,e.precedes=8826,e.prescription=8478,e.primemod=697,e.primereversed=8245,e.product=8719,e.projective=8965,e.prolongedkana=12540,e.propellor=8984,e.propersubset=8834,e.propersuperset=8835,e.proportion=8759,e.proportional=8733,e.psi=968,e.psicyrillic=1137,e.psilipneumatacyrilliccmb=1158,e.pssquare=13232,e.puhiragana=12407,e.pukatakana=12503,e.pvsquare=13236,e.pwsquare=13242,e.q=113,e.qadeva=2392,e.qadmahebrew=1448,e.qafarabic=1602,e.qaffinalarabic=65238,e.qafinitialarabic=65239,e.qafmedialarabic=65240,e.qamats=1464,e.qamats10=1464,e.qamats1a=1464,e.qamats1c=1464,e.qamats27=1464,e.qamats29=1464,e.qamats33=1464,e.qamatsde=1464,e.qamatshebrew=1464,e.qamatsnarrowhebrew=1464,e.qamatsqatanhebrew=1464,e.qamatsqatannarrowhebrew=1464,e.qamatsqatanquarterhebrew=1464,e.qamatsqatanwidehebrew=1464,e.qamatsquarterhebrew=1464,e.qamatswidehebrew=1464,e.qarneyparahebrew=1439,e.qbopomofo=12561,e.qcircle=9440,e.qhook=672,e.qmonospace=65361,e.qof=1511,e.qofdagesh=64327,e.qofdageshhebrew=64327,e.qofhebrew=1511,e.qparen=9388,e.quarternote=9833,e.qubuts=1467,e.qubuts18=1467,e.qubuts25=1467,e.qubuts31=1467,e.qubutshebrew=1467,e.qubutsnarrowhebrew=1467,e.qubutsquarterhebrew=1467,e.qubutswidehebrew=1467,e.question=63,e.questionarabic=1567,e.questionarmenian=1374,e.questiondown=191,e.questiondownsmall=63423,e.questiongreek=894,e.questionmonospace=65311,e.questionsmall=63295,e.quotedbl=34,e.quotedblbase=8222,e.quotedblleft=8220,e.quotedblmonospace=65282,e.quotedblprime=12318,e.quotedblprimereversed=12317,e.quotedblright=8221,e.quoteleft=8216,e.quoteleftreversed=8219,e.quotereversed=8219,e.quoteright=8217,e.quoterightn=329,e.quotesinglbase=8218,e.quotesingle=39,e.quotesinglemonospace=65287,e.r=114,e.raarmenian=1404,e.rabengali=2480,e.racute=341,e.radeva=2352,e.radical=8730,e.radicalex=63717,e.radoverssquare=13230,e.radoverssquaredsquare=13231,e.radsquare=13229,e.rafe=1471,e.rafehebrew=1471,e.ragujarati=2736,e.ragurmukhi=2608,e.rahiragana=12425,e.rakatakana=12521,e.rakatakanahalfwidth=65431,e.ralowerdiagonalbengali=2545,e.ramiddlediagonalbengali=2544,e.ramshorn=612,e.ratio=8758,e.rbopomofo=12566,e.rcaron=345,e.rcedilla=343,e.rcircle=9441,e.rcommaaccent=343,e.rdblgrave=529,e.rdotaccent=7769,e.rdotbelow=7771,e.rdotbelowmacron=7773,e.referencemark=8251,e.reflexsubset=8838,e.reflexsuperset=8839,e.registered=174,e.registersans=63720,e.registerserif=63194,e.reharabic=1585,e.reharmenian=1408,e.rehfinalarabic=65198,e.rehiragana=12428,e.rekatakana=12524,e.rekatakanahalfwidth=65434,e.resh=1512,e.reshdageshhebrew=64328,e.reshhebrew=1512,e.reversedtilde=8765,e.reviahebrew=1431,e.reviamugrashhebrew=1431;e.revlogicalnot=8976,e.rfishhook=638,e.rfishhookreversed=639,e.rhabengali=2525,e.rhadeva=2397,e.rho=961,e.rhook=637,e.rhookturned=635,e.rhookturnedsuperior=693,e.rhosymbolgreek=1009,e.rhotichookmod=734,e.rieulacirclekorean=12913,e.rieulaparenkorean=12817,e.rieulcirclekorean=12899,e.rieulhieuhkorean=12608,e.rieulkiyeokkorean=12602,e.rieulkiyeoksioskorean=12649,e.rieulkorean=12601,e.rieulmieumkorean=12603,e.rieulpansioskorean=12652,e.rieulparenkorean=12803,e.rieulphieuphkorean=12607,e.rieulpieupkorean=12604,e.rieulpieupsioskorean=12651,e.rieulsioskorean=12605,e.rieulthieuthkorean=12606,e.rieultikeutkorean=12650,e.rieulyeorinhieuhkorean=12653,e.rightangle=8735,e.righttackbelowcmb=793,e.righttriangle=8895,e.rihiragana=12426,e.rikatakana=12522,e.rikatakanahalfwidth=65432,e.ring=730,e.ringbelowcmb=805,e.ringcmb=778,e.ringhalfleft=703,e.ringhalfleftarmenian=1369,e.ringhalfleftbelowcmb=796,e.ringhalfleftcentered=723,e.ringhalfright=702,e.ringhalfrightbelowcmb=825,e.ringhalfrightcentered=722,e.rinvertedbreve=531,e.rittorusquare=13137,e.rlinebelow=7775,e.rlongleg=636,e.rlonglegturned=634,e.rmonospace=65362,e.rohiragana=12429,e.rokatakana=12525,e.rokatakanahalfwidth=65435,e.roruathai=3619,e.rparen=9389,e.rrabengali=2524,e.rradeva=2353,e.rragurmukhi=2652,e.rreharabic=1681,e.rrehfinalarabic=64397,e.rrvocalicbengali=2528,e.rrvocalicdeva=2400,e.rrvocalicgujarati=2784,e.rrvocalicvowelsignbengali=2500,e.rrvocalicvowelsigndeva=2372,e.rrvocalicvowelsigngujarati=2756,e.rsuperior=63217,e.rtblock=9616,e.rturned=633,e.rturnedsuperior=692,e.ruhiragana=12427,e.rukatakana=12523,e.rukatakanahalfwidth=65433,e.rupeemarkbengali=2546,e.rupeesignbengali=2547,e.rupiah=63197,e.ruthai=3620,e.rvocalicbengali=2443,e.rvocalicdeva=2315,e.rvocalicgujarati=2699,e.rvocalicvowelsignbengali=2499,e.rvocalicvowelsigndeva=2371,e.rvocalicvowelsigngujarati=2755,e.s=115,e.sabengali=2488,e.sacute=347,e.sacutedotaccent=7781,e.sadarabic=1589,e.sadeva=2360,e.sadfinalarabic=65210,e.sadinitialarabic=65211,e.sadmedialarabic=65212,e.sagujarati=2744,e.sagurmukhi=2616,e.sahiragana=12373,e.sakatakana=12469,e.sakatakanahalfwidth=65403,e.sallallahoualayhewasallamarabic=65018,e.samekh=1505,e.samekhdagesh=64321,e.samekhdageshhebrew=64321,e.samekhhebrew=1505,e.saraaathai=3634,e.saraaethai=3649,e.saraaimaimalaithai=3652,e.saraaimaimuanthai=3651,e.saraamthai=3635,e.saraathai=3632,e.saraethai=3648,e.saraiileftthai=63622,e.saraiithai=3637,e.saraileftthai=63621,e.saraithai=3636,e.saraothai=3650,e.saraueeleftthai=63624,e.saraueethai=3639,e.saraueleftthai=63623,e.sarauethai=3638,e.sarauthai=3640,e.sarauuthai=3641,e.sbopomofo=12569,e.scaron=353,e.scarondotaccent=7783,e.scedilla=351,e.schwa=601,e.schwacyrillic=1241,e.schwadieresiscyrillic=1243,e.schwahook=602,e.scircle=9442,e.scircumflex=349,e.scommaaccent=537,e.sdotaccent=7777,e.sdotbelow=7779,e.sdotbelowdotaccent=7785,e.seagullbelowcmb=828,e.second=8243,e.secondtonechinese=714,e.section=167,e.seenarabic=1587,e.seenfinalarabic=65202,e.seeninitialarabic=65203,e.seenmedialarabic=65204,e.segol=1462,e.segol13=1462,e.segol1f=1462,e.segol2c=1462,e.segolhebrew=1462,e.segolnarrowhebrew=1462,e.segolquarterhebrew=1462,e.segoltahebrew=1426,e.segolwidehebrew=1462,e.seharmenian=1405,e.sehiragana=12379,e.sekatakana=12475,e.sekatakanahalfwidth=65406,e.semicolon=59,e.semicolonarabic=1563,e.semicolonmonospace=65307,e.semicolonsmall=65108,e.semivoicedmarkkana=12444,e.semivoicedmarkkanahalfwidth=65439,e.sentisquare=13090,e.sentosquare=13091,e.seven=55,e.sevenarabic=1639,e.sevenbengali=2541,e.sevencircle=9318,e.sevencircleinversesansserif=10128,e.sevendeva=2413,e.seveneighths=8542,e.sevengujarati=2797,e.sevengurmukhi=2669,e.sevenhackarabic=1639,e.sevenhangzhou=12327,e.sevenideographicparen=12838,e.seveninferior=8327,e.sevenmonospace=65303,e.sevenoldstyle=63287,e.sevenparen=9338,e.sevenperiod=9358,e.sevenpersian=1783,e.sevenroman=8566,e.sevensuperior=8311,e.seventeencircle=9328,e.seventeenparen=9348,e.seventeenperiod=9368,e.seventhai=3671,e.sfthyphen=173,e.shaarmenian=1399,e.shabengali=2486,e.shacyrillic=1096,e.shaddaarabic=1617,e.shaddadammaarabic=64609,e.shaddadammatanarabic=64606,e.shaddafathaarabic=64608,e.shaddakasraarabic=64610,e.shaddakasratanarabic=64607,e.shade=9618,e.shadedark=9619,e.shadelight=9617,e.shademedium=9618,e.shadeva=2358,e.shagujarati=2742,e.shagurmukhi=2614,e.shalshelethebrew=1427,e.shbopomofo=12565,e.shchacyrillic=1097,e.sheenarabic=1588,e.sheenfinalarabic=65206,e.sheeninitialarabic=65207,e.sheenmedialarabic=65208,e.sheicoptic=995,e.sheqel=8362,e.sheqelhebrew=8362,e.sheva=1456,e.sheva115=1456,e.sheva15=1456,e.sheva22=1456,e.sheva2e=1456,e.shevahebrew=1456,e.shevanarrowhebrew=1456,e.shevaquarterhebrew=1456,e.shevawidehebrew=1456,e.shhacyrillic=1211,e.shimacoptic=1005,e.shin=1513,e.shindagesh=64329,e.shindageshhebrew=64329,e.shindageshshindot=64300,e.shindageshshindothebrew=64300,e.shindageshsindot=64301,e.shindageshsindothebrew=64301,e.shindothebrew=1473,e.shinhebrew=1513,e.shinshindot=64298,e.shinshindothebrew=64298,e.shinsindot=64299,e.shinsindothebrew=64299,e.shook=642,e.sigma=963,e.sigma1=962,e.sigmafinal=962,e.sigmalunatesymbolgreek=1010,e.sihiragana=12375,e.sikatakana=12471,e.sikatakanahalfwidth=65404,e.siluqhebrew=1469,e.siluqlefthebrew=1469,e.similar=8764,e.sindothebrew=1474,e.siosacirclekorean=12916,e.siosaparenkorean=12820,e.sioscieuckorean=12670,e.sioscirclekorean=12902,e.sioskiyeokkorean=12666,e.sioskorean=12613,e.siosnieunkorean=12667,e.siosparenkorean=12806,e.siospieupkorean=12669,e.siostikeutkorean=12668,e.six=54,e.sixarabic=1638,e.sixbengali=2540,e.sixcircle=9317,e.sixcircleinversesansserif=10127,e.sixdeva=2412,e.sixgujarati=2796,e.sixgurmukhi=2668,e.sixhackarabic=1638,e.sixhangzhou=12326,e.sixideographicparen=12837,e.sixinferior=8326,e.sixmonospace=65302,e.sixoldstyle=63286,e.sixparen=9337,e.sixperiod=9357,e.sixpersian=1782,e.sixroman=8565,e.sixsuperior=8310,e.sixteencircle=9327,e.sixteencurrencydenominatorbengali=2553,e.sixteenparen=9347,e.sixteenperiod=9367,e.sixthai=3670,e.slash=47,e.slashmonospace=65295,e.slong=383,e.slongdotaccent=7835,e.smileface=9786,e.smonospace=65363,e.sofpasuqhebrew=1475,e.softhyphen=173,e.softsigncyrillic=1100,e.sohiragana=12381,e.sokatakana=12477,e.sokatakanahalfwidth=65407,e.soliduslongoverlaycmb=824,e.solidusshortoverlaycmb=823,e.sorusithai=3625,e.sosalathai=3624,e.sosothai=3595,e.sosuathai=3626,e.space=32,e.spacehackarabic=32,e.spade=9824,e.spadesuitblack=9824,e.spadesuitwhite=9828,e.sparen=9390,e.squarebelowcmb=827,e.squarecc=13252,e.squarecm=13213,e.squarediagonalcrosshatchfill=9641,e.squarehorizontalfill=9636,e.squarekg=13199,e.squarekm=13214,e.squarekmcapital=13262,e.squareln=13265,e.squarelog=13266,e.squaremg=13198,e.squaremil=13269,e.squaremm=13212,e.squaremsquared=13217,e.squareorthogonalcrosshatchfill=9638,e.squareupperlefttolowerrightfill=9639,e.squareupperrighttolowerleftfill=9640,e.squareverticalfill=9637,e.squarewhitewithsmallblack=9635,e.srsquare=13275,e.ssabengali=2487,e.ssadeva=2359,e.ssagujarati=2743,e.ssangcieuckorean=12617,e.ssanghieuhkorean=12677,e.ssangieungkorean=12672,e.ssangkiyeokkorean=12594,e.ssangnieunkorean=12645,e.ssangpieupkorean=12611,e.ssangsioskorean=12614,e.ssangtikeutkorean=12600,e.ssuperior=63218,e.sterling=163,e.sterlingmonospace=65505,e.strokelongoverlaycmb=822,e.strokeshortoverlaycmb=821,e.subset=8834,e.subsetnotequal=8842,e.subsetorequal=8838,e.succeeds=8827,e.suchthat=8715,e.suhiragana=12377,e.sukatakana=12473,e.sukatakanahalfwidth=65405,e.sukunarabic=1618,e.summation=8721,e.sun=9788,e.superset=8835,e.supersetnotequal=8843,e.supersetorequal=8839,e.svsquare=13276,e.syouwaerasquare=13180,e.t=116,e.tabengali=2468,e.tackdown=8868,e.tackleft=8867,e.tadeva=2340,e.tagujarati=2724,e.tagurmukhi=2596,e.taharabic=1591,e.tahfinalarabic=65218,e.tahinitialarabic=65219,e.tahiragana=12383,e.tahmedialarabic=65220,e.taisyouerasquare=13181,e.takatakana=12479,e.takatakanahalfwidth=65408,e.tatweelarabic=1600,e.tau=964,e.tav=1514,e.tavdages=64330,e.tavdagesh=64330,e.tavdageshhebrew=64330,e.tavhebrew=1514,e.tbar=359,e.tbopomofo=12554,e.tcaron=357,e.tccurl=680,e.tcedilla=355,e.tcheharabic=1670,e.tchehfinalarabic=64379,e.tchehinitialarabic=64380,e.tchehmedialarabic=64381,e.tcircle=9443,e.tcircumflexbelow=7793,e.tcommaaccent=355,e.tdieresis=7831,e.tdotaccent=7787,e.tdotbelow=7789,e.tecyrillic=1090,e.tedescendercyrillic=1197,e.teharabic=1578,e.tehfinalarabic=65174,e.tehhahinitialarabic=64674,e.tehhahisolatedarabic=64524,e.tehinitialarabic=65175,e.tehiragana=12390,e.tehjeeminitialarabic=64673,e.tehjeemisolatedarabic=64523,e.tehmarbutaarabic=1577,e.tehmarbutafinalarabic=65172,e.tehmedialarabic=65176,e.tehmeeminitialarabic=64676,e.tehmeemisolatedarabic=64526,e.tehnoonfinalarabic=64627,e.tekatakana=12486,e.tekatakanahalfwidth=65411,e.telephone=8481,e.telephoneblack=9742,e.telishagedolahebrew=1440,e.telishaqetanahebrew=1449,e.tencircle=9321,e.tenideographicparen=12841,e.tenparen=9341,e.tenperiod=9361,e.tenroman=8569,e.tesh=679,e.tet=1496,e.tetdagesh=64312,e.tetdageshhebrew=64312,e.tethebrew=1496,e.tetsecyrillic=1205,e.tevirhebrew=1435,e.tevirlefthebrew=1435,e.thabengali=2469,e.thadeva=2341,e.thagujarati=2725,e.thagurmukhi=2597,e.thalarabic=1584,e.thalfinalarabic=65196,e.thanthakhatlowleftthai=63640,e.thanthakhatlowrightthai=63639,e.thanthakhatthai=3660,e.thanthakhatupperleftthai=63638,e.theharabic=1579,e.thehfinalarabic=65178,e.thehinitialarabic=65179,e.thehmedialarabic=65180,e.thereexists=8707,e.therefore=8756,e.theta=952,e.theta1=977,e.thetasymbolgreek=977,e.thieuthacirclekorean=12921,e.thieuthaparenkorean=12825,e.thieuthcirclekorean=12907,e.thieuthkorean=12620,e.thieuthparenkorean=12811,e.thirteencircle=9324,e.thirteenparen=9344,e.thirteenperiod=9364,e.thonangmonthothai=3601,e.thook=429,e.thophuthaothai=3602,e.thorn=254,e.thothahanthai=3607,e.thothanthai=3600,e.thothongthai=3608,e.thothungthai=3606,e.thousandcyrillic=1154,e.thousandsseparatorarabic=1644,e.thousandsseparatorpersian=1644,e.three=51,e.threearabic=1635,e.threebengali=2537,e.threecircle=9314,e.threecircleinversesansserif=10124,e.threedeva=2409,e.threeeighths=8540,e.threegujarati=2793,e.threegurmukhi=2665,e.threehackarabic=1635,e.threehangzhou=12323,e.threeideographicparen=12834,e.threeinferior=8323,e.threemonospace=65299,e.threenumeratorbengali=2550,e.threeoldstyle=63283,e.threeparen=9334,e.threeperiod=9354,e.threepersian=1779,e.threequarters=190,e.threequartersemdash=63198,e.threeroman=8562,e.threesuperior=179,e.threethai=3667,e.thzsquare=13204,e.tihiragana=12385,e.tikatakana=12481,e.tikatakanahalfwidth=65409,e.tikeutacirclekorean=12912,e.tikeutaparenkorean=12816,e.tikeutcirclekorean=12898,e.tikeutkorean=12599,e.tikeutparenkorean=12802,e.tilde=732,e.tildebelowcmb=816,e.tildecmb=771,e.tildecomb=771,e.tildedoublecmb=864,e.tildeoperator=8764,e.tildeoverlaycmb=820,e.tildeverticalcmb=830,e.timescircle=8855,e.tipehahebrew=1430,e.tipehalefthebrew=1430,e.tippigurmukhi=2672,e.titlocyrilliccmb=1155,e.tiwnarmenian=1407,e.tlinebelow=7791,e.tmonospace=65364,e.toarmenian=1385,e.tohiragana=12392,e.tokatakana=12488,e.tokatakanahalfwidth=65412,e.tonebarextrahighmod=741,e.tonebarextralowmod=745,e.tonebarhighmod=742,e.tonebarlowmod=744,e.tonebarmidmod=743,e.tonefive=445,e.tonesix=389,e.tonetwo=424,e.tonos=900,e.tonsquare=13095,e.topatakthai=3599,e.tortoiseshellbracketleft=12308,e.tortoiseshellbracketleftsmall=65117,e.tortoiseshellbracketleftvertical=65081,e.tortoiseshellbracketright=12309,e.tortoiseshellbracketrightsmall=65118,e.tortoiseshellbracketrightvertical=65082,e.totaothai=3605,e.tpalatalhook=427,e.tparen=9391,e.trademark=8482,e.trademarksans=63722,e.trademarkserif=63195,e.tretroflexhook=648,e.triagdn=9660,e.triaglf=9668,e.triagrt=9658,e.triagup=9650,e.ts=678,e.tsadi=1510,e.tsadidagesh=64326,e.tsadidageshhebrew=64326,e.tsadihebrew=1510,e.tsecyrillic=1094,e.tsere=1461,e.tsere12=1461,e.tsere1e=1461,e.tsere2b=1461,e.tserehebrew=1461,e.tserenarrowhebrew=1461,e.tserequarterhebrew=1461,e.tserewidehebrew=1461,e.tshecyrillic=1115,e.tsuperior=63219,e.ttabengali=2463,e.ttadeva=2335,e.ttagujarati=2719,e.ttagurmukhi=2591,e.tteharabic=1657,e.ttehfinalarabic=64359,e.ttehinitialarabic=64360,e.ttehmedialarabic=64361,e.tthabengali=2464,e.tthadeva=2336,e.tthagujarati=2720,e.tthagurmukhi=2592,e.tturned=647,e.tuhiragana=12388,e.tukatakana=12484,e.tukatakanahalfwidth=65410,e.tusmallhiragana=12387,e.tusmallkatakana=12483,e.tusmallkatakanahalfwidth=65391,e.twelvecircle=9323,e.twelveparen=9343,e.twelveperiod=9363,e.twelveroman=8571,e.twentycircle=9331,e.twentyhangzhou=21316,e.twentyparen=9351,e.twentyperiod=9371,e.two=50,e.twoarabic=1634,e.twobengali=2536,e.twocircle=9313,e.twocircleinversesansserif=10123,e.twodeva=2408,e.twodotenleader=8229,e.twodotleader=8229,e.twodotleadervertical=65072,e.twogujarati=2792,e.twogurmukhi=2664,e.twohackarabic=1634,e.twohangzhou=12322,e.twoideographicparen=12833,e.twoinferior=8322,e.twomonospace=65298,e.twonumeratorbengali=2549,e.twooldstyle=63282,e.twoparen=9333,e.twoperiod=9353,e.twopersian=1778,e.tworoman=8561,e.twostroke=443,e.twosuperior=178,e.twothai=3666,e.twothirds=8532,e.u=117,e.uacute=250,e.ubar=649,e.ubengali=2441,e.ubopomofo=12584,e.ubreve=365,e.ucaron=468,e.ucircle=9444,e.ucircumflex=251,e.ucircumflexbelow=7799,e.ucyrillic=1091,e.udattadeva=2385,e.udblacute=369,e.udblgrave=533,e.udeva=2313,e.udieresis=252,e.udieresisacute=472,e.udieresisbelow=7795,e.udieresiscaron=474,e.udieresiscyrillic=1265,e.udieresisgrave=476,e.udieresismacron=470,e.udotbelow=7909,e.ugrave=249,e.ugujarati=2697,e.ugurmukhi=2569,e.uhiragana=12358,e.uhookabove=7911,e.uhorn=432,e.uhornacute=7913,e.uhorndotbelow=7921,e.uhorngrave=7915,e.uhornhookabove=7917,e.uhorntilde=7919,e.uhungarumlaut=369,e.uhungarumlautcyrillic=1267,e.uinvertedbreve=535,e.ukatakana=12454,e.ukatakanahalfwidth=65395,e.ukcyrillic=1145,e.ukorean=12636,e.umacron=363,e.umacroncyrillic=1263,e.umacrondieresis=7803,e.umatragurmukhi=2625,e.umonospace=65365,e.underscore=95,e.underscoredbl=8215,e.underscoremonospace=65343,e.underscorevertical=65075,e.underscorewavy=65103,e.union=8746,e.universal=8704,e.uogonek=371,e.uparen=9392,e.upblock=9600,e.upperdothebrew=1476,e.upsilon=965,e.upsilondieresis=971,e.upsilondieresistonos=944,e.upsilonlatin=650,e.upsilontonos=973,e.uptackbelowcmb=797,e.uptackmod=724,e.uragurmukhi=2675,e.uring=367,e.ushortcyrillic=1118,e.usmallhiragana=12357,e.usmallkatakana=12453,e.usmallkatakanahalfwidth=65385,e.ustraightcyrillic=1199,e.ustraightstrokecyrillic=1201,e.utilde=361,e.utildeacute=7801,e.utildebelow=7797,e.uubengali=2442,e.uudeva=2314,e.uugujarati=2698,e.uugurmukhi=2570,e.uumatragurmukhi=2626,e.uuvowelsignbengali=2498,e.uuvowelsigndeva=2370,e.uuvowelsigngujarati=2754,e.uvowelsignbengali=2497,e.uvowelsigndeva=2369,e.uvowelsigngujarati=2753,e.v=118,e.vadeva=2357,e.vagujarati=2741,e.vagurmukhi=2613,e.vakatakana=12535,e.vav=1493,e.vavdagesh=64309,e.vavdagesh65=64309,e.vavdageshhebrew=64309,e.vavhebrew=1493,e.vavholam=64331,e.vavholamhebrew=64331,e.vavvavhebrew=1520,e.vavyodhebrew=1521,e.vcircle=9445,e.vdotbelow=7807,e.vecyrillic=1074,e.veharabic=1700,e.vehfinalarabic=64363,e.vehinitialarabic=64364,e.vehmedialarabic=64365,e.vekatakana=12537,e.venus=9792,e.verticalbar=124,e.verticallineabovecmb=781,e.verticallinebelowcmb=809,e.verticallinelowmod=716,e.verticallinemod=712,e.vewarmenian=1406,e.vhook=651,e.vikatakana=12536,e.viramabengali=2509,e.viramadeva=2381,e.viramagujarati=2765,e.visargabengali=2435,e.visargadeva=2307,e.visargagujarati=2691,e.vmonospace=65366,e.voarmenian=1400,e.voicediterationhiragana=12446,e.voicediterationkatakana=12542,e.voicedmarkkana=12443,e.voicedmarkkanahalfwidth=65438,e.vokatakana=12538,e.vparen=9393,e.vtilde=7805,e.vturned=652,e.vuhiragana=12436,e.vukatakana=12532,e.w=119,e.wacute=7811,e.waekorean=12633,e.wahiragana=12431,e.wakatakana=12527,e.wakatakanahalfwidth=65436,e.wakorean=12632,e.wasmallhiragana=12430,e.wasmallkatakana=12526,e.wattosquare=13143,e.wavedash=12316,e.wavyunderscorevertical=65076,e.wawarabic=1608,e.wawfinalarabic=65262,e.wawhamzaabovearabic=1572,e.wawhamzaabovefinalarabic=65158,e.wbsquare=13277,e.wcircle=9446,e.wcircumflex=373,e.wdieresis=7813,e.wdotaccent=7815,e.wdotbelow=7817,e.wehiragana=12433,e.weierstrass=8472,e.wekatakana=12529,e.wekorean=12638,e.weokorean=12637,e.wgrave=7809,e.whitebullet=9702,e.whitecircle=9675,e.whitecircleinverse=9689,e.whitecornerbracketleft=12302,e.whitecornerbracketleftvertical=65091,e.whitecornerbracketright=12303,e.whitecornerbracketrightvertical=65092,e.whitediamond=9671,e.whitediamondcontainingblacksmalldiamond=9672,e.whitedownpointingsmalltriangle=9663,e.whitedownpointingtriangle=9661,e.whiteleftpointingsmalltriangle=9667,e.whiteleftpointingtriangle=9665,e.whitelenticularbracketleft=12310,e.whitelenticularbracketright=12311,e.whiterightpointingsmalltriangle=9657,e.whiterightpointingtriangle=9655;e.whitesmallsquare=9643,e.whitesmilingface=9786,e.whitesquare=9633,e.whitestar=9734,e.whitetelephone=9743,e.whitetortoiseshellbracketleft=12312,e.whitetortoiseshellbracketright=12313,e.whiteuppointingsmalltriangle=9653,e.whiteuppointingtriangle=9651,e.wihiragana=12432,e.wikatakana=12528,e.wikorean=12639,e.wmonospace=65367,e.wohiragana=12434,e.wokatakana=12530,e.wokatakanahalfwidth=65382,e.won=8361,e.wonmonospace=65510,e.wowaenthai=3623,e.wparen=9394,e.wring=7832,e.wsuperior=695,e.wturned=653,e.wynn=447,e.x=120,e.xabovecmb=829,e.xbopomofo=12562,e.xcircle=9447,e.xdieresis=7821,e.xdotaccent=7819,e.xeharmenian=1389,e.xi=958,e.xmonospace=65368,e.xparen=9395,e.xsuperior=739,e.y=121,e.yaadosquare=13134,e.yabengali=2479,e.yacute=253,e.yadeva=2351,e.yaekorean=12626,e.yagujarati=2735,e.yagurmukhi=2607,e.yahiragana=12420,e.yakatakana=12516,e.yakatakanahalfwidth=65428,e.yakorean=12625,e.yamakkanthai=3662,e.yasmallhiragana=12419,e.yasmallkatakana=12515,e.yasmallkatakanahalfwidth=65388,e.yatcyrillic=1123,e.ycircle=9448,e.ycircumflex=375,e.ydieresis=255,e.ydotaccent=7823,e.ydotbelow=7925,e.yeharabic=1610,e.yehbarreearabic=1746,e.yehbarreefinalarabic=64431,e.yehfinalarabic=65266,e.yehhamzaabovearabic=1574,e.yehhamzaabovefinalarabic=65162,e.yehhamzaaboveinitialarabic=65163,e.yehhamzaabovemedialarabic=65164,e.yehinitialarabic=65267,e.yehmedialarabic=65268,e.yehmeeminitialarabic=64733,e.yehmeemisolatedarabic=64600,e.yehnoonfinalarabic=64660,e.yehthreedotsbelowarabic=1745,e.yekorean=12630,e.yen=165,e.yenmonospace=65509,e.yeokorean=12629,e.yeorinhieuhkorean=12678,e.yerahbenyomohebrew=1450,e.yerahbenyomolefthebrew=1450,e.yericyrillic=1099,e.yerudieresiscyrillic=1273,e.yesieungkorean=12673,e.yesieungpansioskorean=12675,e.yesieungsioskorean=12674,e.yetivhebrew=1434,e.ygrave=7923,e.yhook=436,e.yhookabove=7927,e.yiarmenian=1397,e.yicyrillic=1111,e.yikorean=12642,e.yinyang=9775,e.yiwnarmenian=1410,e.ymonospace=65369,e.yod=1497,e.yoddagesh=64313,e.yoddageshhebrew=64313,e.yodhebrew=1497,e.yodyodhebrew=1522,e.yodyodpatahhebrew=64287,e.yohiragana=12424,e.yoikorean=12681,e.yokatakana=12520,e.yokatakanahalfwidth=65430,e.yokorean=12635,e.yosmallhiragana=12423,e.yosmallkatakana=12519,e.yosmallkatakanahalfwidth=65390,e.yotgreek=1011,e.yoyaekorean=12680,e.yoyakorean=12679,e.yoyakthai=3618,e.yoyingthai=3597,e.yparen=9396,e.ypogegrammeni=890,e.ypogegrammenigreekcmb=837,e.yr=422,e.yring=7833,e.ysuperior=696,e.ytilde=7929,e.yturned=654,e.yuhiragana=12422,e.yuikorean=12684,e.yukatakana=12518,e.yukatakanahalfwidth=65429,e.yukorean=12640,e.yusbigcyrillic=1131,e.yusbigiotifiedcyrillic=1133,e.yuslittlecyrillic=1127,e.yuslittleiotifiedcyrillic=1129,e.yusmallhiragana=12421,e.yusmallkatakana=12517,e.yusmallkatakanahalfwidth=65389,e.yuyekorean=12683,e.yuyeokorean=12682,e.yyabengali=2527,e.yyadeva=2399,e.z=122,e.zaarmenian=1382,e.zacute=378,e.zadeva=2395,e.zagurmukhi=2651,e.zaharabic=1592,e.zahfinalarabic=65222,e.zahinitialarabic=65223,e.zahiragana=12374,e.zahmedialarabic=65224,e.zainarabic=1586,e.zainfinalarabic=65200,e.zakatakana=12470,e.zaqefgadolhebrew=1429,e.zaqefqatanhebrew=1428,e.zarqahebrew=1432,e.zayin=1494,e.zayindagesh=64310,e.zayindageshhebrew=64310,e.zayinhebrew=1494,e.zbopomofo=12567,e.zcaron=382,e.zcircle=9449,e.zcircumflex=7825,e.zcurl=657,e.zdot=380,e.zdotaccent=380,e.zdotbelow=7827,e.zecyrillic=1079,e.zedescendercyrillic=1177,e.zedieresiscyrillic=1247,e.zehiragana=12380,e.zekatakana=12476,e.zero=48,e.zeroarabic=1632,e.zerobengali=2534,e.zerodeva=2406,e.zerogujarati=2790,e.zerogurmukhi=2662,e.zerohackarabic=1632,e.zeroinferior=8320,e.zeromonospace=65296,e.zerooldstyle=63280,e.zeropersian=1776,e.zerosuperior=8304,e.zerothai=3664,e.zerowidthjoiner=65279,e.zerowidthnonjoiner=8204,e.zerowidthspace=8203,e.zeta=950,e.zhbopomofo=12563,e.zhearmenian=1386,e.zhebrevecyrillic=1218,e.zhecyrillic=1078,e.zhedescendercyrillic=1175,e.zhedieresiscyrillic=1245,e.zihiragana=12376,e.zikatakana=12472,e.zinorhebrew=1454,e.zlinebelow=7829,e.zmonospace=65370,e.zohiragana=12382,e.zokatakana=12478,e.zparen=9397,e.zretroflexhook=656,e.zstroke=438,e.zuhiragana=12378,e.zukatakana=12474,e[\".notdef\"]=0,e.angbracketleftbig=9001,e.angbracketleftBig=9001,e.angbracketleftbigg=9001,e.angbracketleftBigg=9001,e.angbracketrightBig=9002,e.angbracketrightbig=9002,e.angbracketrightBigg=9002,e.angbracketrightbigg=9002,e.arrowhookleft=8618,e.arrowhookright=8617,e.arrowlefttophalf=8636,e.arrowleftbothalf=8637,e.arrownortheast=8599,e.arrownorthwest=8598,e.arrowrighttophalf=8640,e.arrowrightbothalf=8641,e.arrowsoutheast=8600,e.arrowsouthwest=8601,e.backslashbig=8726,e.backslashBig=8726,e.backslashBigg=8726,e.backslashbigg=8726,e.bardbl=8214,e.bracehtipdownleft=65079,e.bracehtipdownright=65079,e.bracehtipupleft=65080,e.bracehtipupright=65080,e.braceleftBig=123,e.braceleftbig=123,e.braceleftbigg=123,e.braceleftBigg=123,e.bracerightBig=125,e.bracerightbig=125,e.bracerightbigg=125,e.bracerightBigg=125,e.bracketleftbig=91,e.bracketleftBig=91,e.bracketleftbigg=91,e.bracketleftBigg=91,e.bracketrightBig=93,e.bracketrightbig=93,e.bracketrightbigg=93,e.bracketrightBigg=93,e.ceilingleftbig=8968,e.ceilingleftBig=8968,e.ceilingleftBigg=8968,e.ceilingleftbigg=8968,e.ceilingrightbig=8969,e.ceilingrightBig=8969,e.ceilingrightbigg=8969,e.ceilingrightBigg=8969,e.circledotdisplay=8857,e.circledottext=8857,e.circlemultiplydisplay=8855,e.circlemultiplytext=8855,e.circleplusdisplay=8853,e.circleplustext=8853,e.contintegraldisplay=8750,e.contintegraltext=8750,e.coproductdisplay=8720,e.coproducttext=8720,e.floorleftBig=8970,e.floorleftbig=8970,e.floorleftbigg=8970,e.floorleftBigg=8970,e.floorrightbig=8971,e.floorrightBig=8971,e.floorrightBigg=8971,e.floorrightbigg=8971,e.hatwide=770,e.hatwider=770,e.hatwidest=770,e.intercal=7488,e.integraldisplay=8747,e.integraltext=8747,e.intersectiondisplay=8898,e.intersectiontext=8898,e.logicalanddisplay=8743,e.logicalandtext=8743,e.logicalordisplay=8744,e.logicalortext=8744,e.parenleftBig=40,e.parenleftbig=40,e.parenleftBigg=40,e.parenleftbigg=40,e.parenrightBig=41,e.parenrightbig=41,e.parenrightBigg=41,e.parenrightbigg=41,e.prime=8242,e.productdisplay=8719,e.producttext=8719,e.radicalbig=8730,e.radicalBig=8730,e.radicalBigg=8730,e.radicalbigg=8730,e.radicalbt=8730,e.radicaltp=8730,e.radicalvertex=8730,e.slashbig=47,e.slashBig=47,e.slashBigg=47,e.slashbigg=47,e.summationdisplay=8721,e.summationtext=8721,e.tildewide=732,e.tildewider=732,e.tildewidest=732,e.uniondisplay=8899,e.unionmultidisplay=8846,e.unionmultitext=8846,e.unionsqdisplay=8852,e.unionsqtext=8852,e.uniontext=8899,e.vextenddouble=8741,e.vextendsingle=8739}),i=a(function(e){e.space=32,e.a1=9985,e.a2=9986,e.a202=9987,e.a3=9988,e.a4=9742,e.a5=9990,e.a119=9991,e.a118=9992,e.a117=9993,e.a11=9755,e.a12=9758,e.a13=9996,e.a14=9997,e.a15=9998,e.a16=9999,e.a105=1e4,e.a17=10001,e.a18=10002,e.a19=10003,e.a20=10004,e.a21=10005,e.a22=10006,e.a23=10007,e.a24=10008,e.a25=10009,e.a26=10010,e.a27=10011,e.a28=10012,e.a6=10013,e.a7=10014,e.a8=10015,e.a9=10016,e.a10=10017,e.a29=10018,e.a30=10019,e.a31=10020,e.a32=10021,e.a33=10022,e.a34=10023,e.a35=9733,e.a36=10025,e.a37=10026,e.a38=10027,e.a39=10028,e.a40=10029,e.a41=10030,e.a42=10031,e.a43=10032,e.a44=10033,e.a45=10034,e.a46=10035,e.a47=10036,e.a48=10037,e.a49=10038,e.a50=10039,e.a51=10040,e.a52=10041,e.a53=10042,e.a54=10043,e.a55=10044,e.a56=10045,e.a57=10046,e.a58=10047,e.a59=10048,e.a60=10049,e.a61=10050,e.a62=10051,e.a63=10052,e.a64=10053,e.a65=10054,e.a66=10055,e.a67=10056,e.a68=10057,e.a69=10058,e.a70=10059,e.a71=9679,e.a72=10061,e.a73=9632,e.a74=10063,e.a203=10064,e.a75=10065,e.a204=10066,e.a76=9650,e.a77=9660,e.a78=9670,e.a79=10070,e.a81=9687,e.a82=10072,e.a83=10073,e.a84=10074,e.a97=10075,e.a98=10076,e.a99=10077,e.a100=10078,e.a101=10081,e.a102=10082,e.a103=10083,e.a104=10084,e.a106=10085,e.a107=10086,e.a108=10087,e.a112=9827,e.a111=9830,e.a110=9829,e.a109=9824,e.a120=9312,e.a121=9313,e.a122=9314,e.a123=9315,e.a124=9316,e.a125=9317,e.a126=9318,e.a127=9319,e.a128=9320,e.a129=9321,e.a130=10102,e.a131=10103,e.a132=10104,e.a133=10105,e.a134=10106,e.a135=10107,e.a136=10108,e.a137=10109,e.a138=10110,e.a139=10111,e.a140=10112,e.a141=10113,e.a142=10114,e.a143=10115,e.a144=10116,e.a145=10117,e.a146=10118,e.a147=10119,e.a148=10120,e.a149=10121,e.a150=10122,e.a151=10123,e.a152=10124,e.a153=10125,e.a154=10126,e.a155=10127,e.a156=10128,e.a157=10129,e.a158=10130,e.a159=10131,e.a160=10132,e.a161=8594,e.a163=8596,e.a164=8597,e.a196=10136,e.a165=10137,e.a192=10138,e.a166=10139,e.a167=10140,e.a168=10141,e.a169=10142,e.a170=10143,e.a171=10144,e.a172=10145,e.a173=10146,e.a162=10147,e.a174=10148,e.a175=10149,e.a176=10150,e.a177=10151,e.a178=10152,e.a179=10153,e.a193=10154,e.a180=10155,e.a199=10156,e.a181=10157,e.a200=10158,e.a182=10159,e.a201=10161,e.a183=10162,e.a184=10163,e.a197=10164,e.a185=10165,e.a194=10166,e.a198=10167,e.a186=10168,e.a195=10169,e.a187=10170,e.a188=10171,e.a189=10172,e.a190=10173,e.a191=10174,e.a89=10088,e.a90=10089,e.a93=10090,e.a94=10091,e.a91=10092,e.a92=10093,e.a205=10094,e.a85=10095,e.a206=10096,e.a86=10097,e.a87=10098,e.a88=10099,e.a95=10100,e.a96=10101,e[\".notdef\"]=0});t.getGlyphsUnicode=n,t.getDingbatsGlyphsUnicode=i},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getSupplementalGlyphMapForCalibri=t.getSupplementalGlyphMapForArialBlack=t.getGlyphMapForStandardFonts=t.getSymbolsFonts=t.getSerifFonts=t.getNonStdFontMap=t.getStdFontMap=void 0;var a=r(6),n=(0,a.getLookupTableFactory)(function(e){e.ArialNarrow=\"Helvetica\",e[\"ArialNarrow-Bold\"]=\"Helvetica-Bold\",e[\"ArialNarrow-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"ArialNarrow-Italic\"]=\"Helvetica-Oblique\",e.ArialBlack=\"Helvetica\",e[\"ArialBlack-Bold\"]=\"Helvetica-Bold\",e[\"ArialBlack-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"ArialBlack-Italic\"]=\"Helvetica-Oblique\",e[\"Arial-Black\"]=\"Helvetica\",e[\"Arial-Black-Bold\"]=\"Helvetica-Bold\",e[\"Arial-Black-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Arial-Black-Italic\"]=\"Helvetica-Oblique\",e.Arial=\"Helvetica\",e[\"Arial-Bold\"]=\"Helvetica-Bold\",e[\"Arial-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Arial-Italic\"]=\"Helvetica-Oblique\",e[\"Arial-BoldItalicMT\"]=\"Helvetica-BoldOblique\",e[\"Arial-BoldMT\"]=\"Helvetica-Bold\",e[\"Arial-ItalicMT\"]=\"Helvetica-Oblique\",e.ArialMT=\"Helvetica\",e[\"Courier-Bold\"]=\"Courier-Bold\",e[\"Courier-BoldItalic\"]=\"Courier-BoldOblique\",e[\"Courier-Italic\"]=\"Courier-Oblique\",e.CourierNew=\"Courier\",e[\"CourierNew-Bold\"]=\"Courier-Bold\",e[\"CourierNew-BoldItalic\"]=\"Courier-BoldOblique\",e[\"CourierNew-Italic\"]=\"Courier-Oblique\",e[\"CourierNewPS-BoldItalicMT\"]=\"Courier-BoldOblique\",e[\"CourierNewPS-BoldMT\"]=\"Courier-Bold\",e[\"CourierNewPS-ItalicMT\"]=\"Courier-Oblique\",e.CourierNewPSMT=\"Courier\",e.Helvetica=\"Helvetica\",e[\"Helvetica-Bold\"]=\"Helvetica-Bold\",e[\"Helvetica-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Helvetica-BoldOblique\"]=\"Helvetica-BoldOblique\",e[\"Helvetica-Italic\"]=\"Helvetica-Oblique\",e[\"Helvetica-Oblique\"]=\"Helvetica-Oblique\",e.SegoeUISymbol=\"Helvetica\",e[\"Symbol-Bold\"]=\"Symbol\",e[\"Symbol-BoldItalic\"]=\"Symbol\",e[\"Symbol-Italic\"]=\"Symbol\",e.TimesNewRoman=\"Times-Roman\",e[\"TimesNewRoman-Bold\"]=\"Times-Bold\",e[\"TimesNewRoman-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRoman-Italic\"]=\"Times-Italic\",e.TimesNewRomanPS=\"Times-Roman\",e[\"TimesNewRomanPS-Bold\"]=\"Times-Bold\",e[\"TimesNewRomanPS-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPS-BoldItalicMT\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPS-BoldMT\"]=\"Times-Bold\",e[\"TimesNewRomanPS-Italic\"]=\"Times-Italic\",e[\"TimesNewRomanPS-ItalicMT\"]=\"Times-Italic\",e.TimesNewRomanPSMT=\"Times-Roman\",e[\"TimesNewRomanPSMT-Bold\"]=\"Times-Bold\",e[\"TimesNewRomanPSMT-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPSMT-Italic\"]=\"Times-Italic\"});t.getStdFontMap=n;var i=(0,a.getLookupTableFactory)(function(e){e.Calibri=\"Helvetica\",e[\"Calibri-Bold\"]=\"Helvetica-Bold\",e[\"Calibri-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Calibri-Italic\"]=\"Helvetica-Oblique\",e.CenturyGothic=\"Helvetica\",e[\"CenturyGothic-Bold\"]=\"Helvetica-Bold\",e[\"CenturyGothic-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"CenturyGothic-Italic\"]=\"Helvetica-Oblique\",e.ComicSansMS=\"Comic Sans MS\",e[\"ComicSansMS-Bold\"]=\"Comic Sans MS-Bold\",e[\"ComicSansMS-BoldItalic\"]=\"Comic Sans MS-BoldItalic\",e[\"ComicSansMS-Italic\"]=\"Comic Sans MS-Italic\",e.LucidaConsole=\"Courier\",e[\"LucidaConsole-Bold\"]=\"Courier-Bold\",e[\"LucidaConsole-BoldItalic\"]=\"Courier-BoldOblique\",e[\"LucidaConsole-Italic\"]=\"Courier-Oblique\",e[\"LucidaSans-Demi\"]=\"Helvetica-Bold\",e[\"MS-Gothic\"]=\"MS Gothic\",e[\"MS-Gothic-Bold\"]=\"MS Gothic-Bold\",e[\"MS-Gothic-BoldItalic\"]=\"MS Gothic-BoldItalic\",e[\"MS-Gothic-Italic\"]=\"MS Gothic-Italic\",e[\"MS-Mincho\"]=\"MS Mincho\",e[\"MS-Mincho-Bold\"]=\"MS Mincho-Bold\",e[\"MS-Mincho-BoldItalic\"]=\"MS Mincho-BoldItalic\",e[\"MS-Mincho-Italic\"]=\"MS Mincho-Italic\",e[\"MS-PGothic\"]=\"MS PGothic\",e[\"MS-PGothic-Bold\"]=\"MS PGothic-Bold\",e[\"MS-PGothic-BoldItalic\"]=\"MS PGothic-BoldItalic\",e[\"MS-PGothic-Italic\"]=\"MS PGothic-Italic\",e[\"MS-PMincho\"]=\"MS PMincho\",e[\"MS-PMincho-Bold\"]=\"MS PMincho-Bold\",e[\"MS-PMincho-BoldItalic\"]=\"MS PMincho-BoldItalic\",e[\"MS-PMincho-Italic\"]=\"MS PMincho-Italic\",e.NuptialScript=\"Times-Italic\",e.Wingdings=\"ZapfDingbats\"});t.getNonStdFontMap=i;var o=(0,a.getLookupTableFactory)(function(e){e[\"Adobe Jenson\"]=!0,e[\"Adobe Text\"]=!0,e.Albertus=!0,e.Aldus=!0,e.Alexandria=!0,e.Algerian=!0,e[\"American Typewriter\"]=!0,e.Antiqua=!0,e.Apex=!0,e.Arno=!0,e.Aster=!0,e.Aurora=!0,e.Baskerville=!0,e.Bell=!0,e.Bembo=!0,e[\"Bembo Schoolbook\"]=!0,e.Benguiat=!0,e[\"Berkeley Old Style\"]=!0,e[\"Bernhard Modern\"]=!0,e[\"Berthold City\"]=!0,e.Bodoni=!0,e[\"Bauer Bodoni\"]=!0,e[\"Book Antiqua\"]=!0,e.Bookman=!0,e[\"Bordeaux Roman\"]=!0,e[\"Californian FB\"]=!0,e.Calisto=!0,e.Calvert=!0,e.Capitals=!0,e.Cambria=!0,e.Cartier=!0,e.Caslon=!0,e.Catull=!0,e.Centaur=!0,e[\"Century Old Style\"]=!0,e[\"Century Schoolbook\"]=!0,e.Chaparral=!0,e[\"Charis SIL\"]=!0,e.Cheltenham=!0,e[\"Cholla Slab\"]=!0,e.Clarendon=!0,e.Clearface=!0,e.Cochin=!0,e.Colonna=!0,e[\"Computer Modern\"]=!0,e[\"Concrete Roman\"]=!0,e.Constantia=!0,e[\"Cooper Black\"]=!0,e.Corona=!0,e.Ecotype=!0,e.Egyptienne=!0,e.Elephant=!0,e.Excelsior=!0,e.Fairfield=!0,e[\"FF Scala\"]=!0,e.Folkard=!0,e.Footlight=!0,e.FreeSerif=!0,e[\"Friz Quadrata\"]=!0,e.Garamond=!0,e.Gentium=!0,e.Georgia=!0,e.Gloucester=!0,e[\"Goudy Old Style\"]=!0,e[\"Goudy Schoolbook\"]=!0,e[\"Goudy Pro Font\"]=!0,e.Granjon=!0,e[\"Guardian Egyptian\"]=!0,e.Heather=!0,e.Hercules=!0,e[\"High Tower Text\"]=!0,e.Hiroshige=!0,e[\"Hoefler Text\"]=!0,e[\"Humana Serif\"]=!0,e.Imprint=!0,e[\"Ionic No. 5\"]=!0,e.Janson=!0,e.Joanna=!0,e.Korinna=!0,e.Lexicon=!0,e[\"Liberation Serif\"]=!0,e[\"Linux Libertine\"]=!0,e.Literaturnaya=!0,e.Lucida=!0,e[\"Lucida Bright\"]=!0,e.Melior=!0,e.Memphis=!0,e.Miller=!0,e.Minion=!0,e.Modern=!0,e[\"Mona Lisa\"]=!0,e[\"Mrs Eaves\"]=!0,e[\"MS Serif\"]=!0,e[\"Museo Slab\"]=!0,e[\"New York\"]=!0,e[\"Nimbus Roman\"]=!0,e[\"NPS Rawlinson Roadway\"]=!0,e.NuptialScript=!0,e.Palatino=!0,e.Perpetua=!0,e.Plantin=!0,e[\"Plantin Schoolbook\"]=!0,e.Playbill=!0,e[\"Poor Richard\"]=!0,e[\"Rawlinson Roadway\"]=!0,e.Renault=!0,e.Requiem=!0,e.Rockwell=!0,e.Roman=!0,e[\"Rotis Serif\"]=!0,e.Sabon=!0,e.Scala=!0,e.Seagull=!0,e.Sistina=!0,e.Souvenir=!0,e.STIX=!0,e[\"Stone Informal\"]=!0,e[\"Stone Serif\"]=!0,e.Sylfaen=!0,e.Times=!0,e.Trajan=!0,e[\"Trinit\\xe9\"]=!0,e[\"Trump Mediaeval\"]=!0,e.Utopia=!0,e[\"Vale Type\"]=!0,e[\"Bitstream Vera\"]=!0,e[\"Vera Serif\"]=!0,e.Versailles=!0,e.Wanted=!0,e.Weiss=!0,e[\"Wide Latin\"]=!0,e.Windsor=!0,e.XITS=!0});t.getSerifFonts=o;var s=(0,a.getLookupTableFactory)(function(e){e.Dingbats=!0,e.Symbol=!0,e.ZapfDingbats=!0});t.getSymbolsFonts=s;var c=(0,a.getLookupTableFactory)(function(e){e[2]=10,e[3]=32,e[4]=33,e[5]=34,e[6]=35,e[7]=36,e[8]=37,e[9]=38,e[10]=39,e[11]=40,e[12]=41,e[13]=42,e[14]=43,e[15]=44,e[16]=45,e[17]=46,e[18]=47,e[19]=48,e[20]=49,e[21]=50,e[22]=51,e[23]=52,e[24]=53,e[25]=54,e[26]=55,e[27]=56,e[28]=57,e[29]=58,e[30]=894,e[31]=60,e[32]=61,e[33]=62,e[34]=63,e[35]=64,e[36]=65,e[37]=66,e[38]=67,e[39]=68,e[40]=69,e[41]=70,e[42]=71,e[43]=72,e[44]=73,e[45]=74,e[46]=75,e[47]=76,e[48]=77,e[49]=78,e[50]=79,e[51]=80,e[52]=81,e[53]=82,e[54]=83,e[55]=84,e[56]=85,e[57]=86,e[58]=87,e[59]=88,e[60]=89,e[61]=90,e[62]=91,e[63]=92,e[64]=93,e[65]=94,e[66]=95,e[67]=96,e[68]=97,e[69]=98,e[70]=99,e[71]=100,e[72]=101,e[73]=102,e[74]=103,e[75]=104,e[76]=105,e[77]=106,e[78]=107,e[79]=108,e[80]=109,e[81]=110,e[82]=111,e[83]=112,e[84]=113,e[85]=114,e[86]=115,e[87]=116,e[88]=117,e[89]=118,e[90]=119,e[91]=120,e[92]=121,e[93]=122,e[94]=123,e[95]=124,e[96]=125,e[97]=126,e[98]=196,e[99]=197,e[100]=199,e[101]=201,e[102]=209,e[103]=214,e[104]=220,e[105]=225,e[106]=224,e[107]=226,e[108]=228,e[109]=227,e[110]=229,e[111]=231,e[112]=233,e[113]=232,e[114]=234,e[115]=235,e[116]=237,e[117]=236,e[118]=238,e[119]=239,e[120]=241,e[121]=243,e[122]=242,e[123]=244,e[124]=246,e[125]=245,e[126]=250,e[127]=249,e[128]=251,e[129]=252,e[130]=8224,e[131]=176,e[132]=162,e[133]=163,e[134]=167,e[135]=8226,e[136]=182,e[137]=223,e[138]=174,e[139]=169,e[140]=8482,e[141]=180,e[142]=168,e[143]=8800,e[144]=198,e[145]=216,e[146]=8734,e[147]=177,e[148]=8804,e[149]=8805,e[150]=165,e[151]=181,e[152]=8706,e[153]=8721,e[154]=8719,e[156]=8747,e[157]=170,e[158]=186,e[159]=8486,e[160]=230,e[161]=248,e[162]=191,e[163]=161,e[164]=172,e[165]=8730,e[166]=402,e[167]=8776,e[168]=8710,e[169]=171,e[170]=187,e[171]=8230,e[210]=218,e[223]=711,e[224]=321,e[225]=322,e[227]=353,e[229]=382,e[234]=253,e[252]=263,e[253]=268,e[254]=269,e[258]=258,e[260]=260,e[261]=261,e[265]=280,e[266]=281,e[268]=283,e[269]=313,e[275]=323,e[276]=324,e[278]=328,e[284]=345,e[285]=346,e[286]=347,e[292]=367,e[295]=377,e[296]=378,e[298]=380,e[305]=963,e[306]=964,e[307]=966,e[308]=8215,e[309]=8252,e[310]=8319,e[311]=8359,e[312]=8592,e[313]=8593,e[337]=9552,e[493]=1039,e[494]=1040,e[705]=1524,e[706]=8362,e[710]=64288,e[711]=64298,e[759]=1617,e[761]=1776,e[763]=1778,e[775]=1652,e[777]=1764,e[778]=1780,e[779]=1781,e[780]=1782,e[782]=771,e[783]=64726,e[786]=8363,e[788]=8532,e[790]=768,e[791]=769,e[792]=768,e[795]=803,e[797]=64336,e[798]=64337,e[799]=64342,e[800]=64343,e[801]=64344,e[802]=64345,e[803]=64362,e[804]=64363,e[805]=64364,e[2424]=7821,e[2425]=7822,e[2426]=7823,e[2427]=7824,e[2428]=7825,e[2429]=7826,e[2430]=7827,e[2433]=7682,e[2678]=8045,e[2679]=8046,e[2830]=1552,e[2838]=686,e[2840]=751,e[2842]=753,e[2843]=754,e[2844]=755,e[2846]=757,e[2856]=767,e[2857]=848,e[2858]=849,e[2862]=853,e[2863]=854,e[2864]=855,e[2865]=861,e[2866]=862,e[2906]=7460,e[2908]=7462,e[2909]=7463,e[2910]=7464,e[2912]=7466,e[2913]=7467,e[2914]=7468,e[2916]=7470,e[2917]=7471,e[2918]=7472,e[2920]=7474,e[2921]=7475,e[2922]=7476,e[2924]=7478,e[2925]=7479,e[2926]=7480,e[2928]=7482,e[2929]=7483,e[2930]=7484,e[2932]=7486,e[2933]=7487,e[2934]=7488,e[2936]=7490,e[2937]=7491,e[2938]=7492,e[2940]=7494,e[2941]=7495,e[2942]=7496,e[2944]=7498,e[2946]=7500,e[2948]=7502,e[2950]=7504,e[2951]=7505,e[2952]=7506,e[2954]=7508,e[2955]=7509,e[2956]=7510,e[2958]=7512,e[2959]=7513,e[2960]=7514,e[2962]=7516,e[2963]=7517,e[2964]=7518,e[2966]=7520,e[2967]=7521,e[2968]=7522,e[2970]=7524,e[2971]=7525,e[2972]=7526,e[2974]=7528,e[2975]=7529,e[2976]=7530,e[2978]=1537,e[2979]=1538,e[2980]=1539,e[2982]=1549,e[2983]=1551,e[2984]=1552,e[2986]=1554,e[2987]=1555,e[2988]=1556,e[2990]=1623,e[2991]=1624,e[2995]=1775,e[2999]=1791,e[3002]=64290,e[3003]=64291,e[3004]=64292,e[3006]=64294,e[3007]=64295,e[3008]=64296,e[3011]=1900,e[3014]=8223,e[3015]=8244,e[3017]=7532,e[3018]=7533,e[3019]=7534,e[3075]=7590,e[3076]=7591,e[3079]=7594,e[3080]=7595,e[3083]=7598,e[3084]=7599,e[3087]=7602,e[3088]=7603,e[3091]=7606,e[3092]=7607,e[3095]=7610,e[3096]=7611,e[3099]=7614,e[3100]=7615,e[3103]=7618,e[3104]=7619,e[3107]=8337,e[3108]=8338,e[3116]=1884,e[3119]=1885,e[3120]=1885,e[3123]=1886,e[3124]=1886,e[3127]=1887,e[3128]=1887,e[3131]=1888,e[3132]=1888,e[3135]=1889,e[3136]=1889,e[3139]=1890,e[3140]=1890,e[3143]=1891,e[3144]=1891,e[3147]=1892,e[3148]=1892,e[3153]=580,e[3154]=581,e[3157]=584,e[3158]=585,e[3161]=588,e[3162]=589,e[3165]=891,e[3166]=892,e[3169]=1274,e[3170]=1275,e[3173]=1278,e[3174]=1279,e[3181]=7622,e[3182]=7623,e[3282]=11799,e[3316]=578,e[3379]=42785,e[3393]=1159,e[3416]=8377});t.getGlyphMapForStandardFonts=c;var l=(0,a.getLookupTableFactory)(function(e){e[227]=322,e[264]=261,e[291]=346});t.getSupplementalGlyphMapForArialBlack=l;var u=(0,a.getLookupTableFactory)(function(e){e[1]=32,e[4]=65,e[17]=66,e[18]=67,e[24]=68,e[28]=69,e[38]=70,e[39]=71,e[44]=72,e[47]=73,e[58]=74,e[60]=75,e[62]=76,e[68]=77,e[69]=78,e[75]=79,e[87]=80,e[89]=81,e[90]=82,e[94]=83,e[100]=84,e[104]=85,e[115]=86,e[116]=87,e[121]=88,e[122]=89,e[127]=90,e[258]=97,e[268]=261,e[271]=98,e[272]=99,e[273]=263,e[282]=100,e[286]=101,e[295]=281,e[296]=102,e[336]=103,e[346]=104,e[349]=105,e[361]=106,e[364]=107,e[367]=108,e[371]=322,e[373]=109,e[374]=110,e[381]=111,e[383]=243,e[393]=112,e[395]=113,e[396]=114,e[400]=115,e[401]=347,e[410]=116,e[437]=117,e[448]=118,e[449]=119,e[454]=120,e[455]=121,e[460]=122,e[463]=380,e[853]=44,e[855]=58,e[856]=46,e[876]=47,e[878]=45,e[882]=45,e[894]=40,e[895]=41,e[896]=91,e[897]=93,e[923]=64,e[1004]=48,e[1005]=49,e[1006]=50,e[1007]=51,e[1008]=52,e[1009]=53,e[1010]=54,e[1011]=55,e[1012]=56,e[1013]=57,e[1081]=37,e[1085]=43,e[1086]=45});t.getSupplementalGlyphMapForCalibri=u},function(e,t,r){var a=r(6).getLookupTableFactory,n=a(function(e){e[63721]=169,e[63193]=169,e[63720]=174,e[63194]=174,e[63722]=8482,e[63195]=8482,e[63729]=9127,e[63730]=9128,e[63731]=9129,e[63740]=9131,e[63741]=9132,e[63742]=9133,e[63726]=9121,e[63727]=9122,e[63728]=9123,e[63737]=9124,e[63738]=9125,e[63739]=9126,e[63723]=9115,e[63724]=9116,e[63725]=9117,e[63734]=9118,e[63735]=9119,e[63736]=9120});var i=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}];var o=a(function(e){e[\"\\xa8\"]=\" \\u0308\",e[\"\\xaf\"]=\" \\u0304\",e[\"\\xb4\"]=\" \\u0301\",e[\"\\xb5\"]=\"\\u03bc\",e[\"\\xb8\"]=\" \\u0327\",e[\"\\u0132\"]=\"IJ\",e[\"\\u0133\"]=\"ij\",e[\"\\u013f\"]=\"L\\xb7\",e[\"\\u0140\"]=\"l\\xb7\",e[\"\\u0149\"]=\"\\u02bcn\",e[\"\\u017f\"]=\"s\",e[\"\\u01c4\"]=\"D\\u017d\",e[\"\\u01c5\"]=\"D\\u017e\",e[\"\\u01c6\"]=\"d\\u017e\",e[\"\\u01c7\"]=\"LJ\",e[\"\\u01c8\"]=\"Lj\",e[\"\\u01c9\"]=\"lj\",e[\"\\u01ca\"]=\"NJ\",e[\"\\u01cb\"]=\"Nj\",e[\"\\u01cc\"]=\"nj\",e[\"\\u01f1\"]=\"DZ\",e[\"\\u01f2\"]=\"Dz\",e[\"\\u01f3\"]=\"dz\",e[\"\\u02d8\"]=\" \\u0306\",e[\"\\u02d9\"]=\" \\u0307\",e[\"\\u02da\"]=\" \\u030a\",e[\"\\u02db\"]=\" \\u0328\",e[\"\\u02dc\"]=\" \\u0303\",e[\"\\u02dd\"]=\" \\u030b\",e[\"\\u037a\"]=\" \\u0345\",e[\"\\u0384\"]=\" \\u0301\",e[\"\\u03d0\"]=\"\\u03b2\",e[\"\\u03d1\"]=\"\\u03b8\",e[\"\\u03d2\"]=\"\\u03a5\",e[\"\\u03d5\"]=\"\\u03c6\",e[\"\\u03d6\"]=\"\\u03c0\",e[\"\\u03f0\"]=\"\\u03ba\",e[\"\\u03f1\"]=\"\\u03c1\",e[\"\\u03f2\"]=\"\\u03c2\",e[\"\\u03f4\"]=\"\\u0398\",e[\"\\u03f5\"]=\"\\u03b5\",e[\"\\u03f9\"]=\"\\u03a3\",e[\"\\u0587\"]=\"\\u0565\\u0582\",e[\"\\u0675\"]=\"\\u0627\\u0674\",e[\"\\u0676\"]=\"\\u0648\\u0674\",e[\"\\u0677\"]=\"\\u06c7\\u0674\",e[\"\\u0678\"]=\"\\u064a\\u0674\",e[\"\\u0e33\"]=\"\\u0e4d\\u0e32\",e[\"\\u0eb3\"]=\"\\u0ecd\\u0eb2\",e[\"\\u0edc\"]=\"\\u0eab\\u0e99\",e[\"\\u0edd\"]=\"\\u0eab\\u0ea1\",e[\"\\u0f77\"]=\"\\u0fb2\\u0f81\",e[\"\\u0f79\"]=\"\\u0fb3\\u0f81\",e[\"\\u1e9a\"]=\"a\\u02be\",e[\"\\u1fbd\"]=\" \\u0313\",e[\"\\u1fbf\"]=\" \\u0313\",e[\"\\u1fc0\"]=\" \\u0342\",e[\"\\u1ffe\"]=\" \\u0314\",e[\"\\u2002\"]=\" \",e[\"\\u2003\"]=\" \",e[\"\\u2004\"]=\" \",e[\"\\u2005\"]=\" \",e[\"\\u2006\"]=\" \",e[\"\\u2008\"]=\" \",e[\"\\u2009\"]=\" \",e[\"\\u200a\"]=\" \",e[\"\\u2017\"]=\" \\u0333\",e[\"\\u2024\"]=\".\",e[\"\\u2025\"]=\"..\",e[\"\\u2026\"]=\"...\",e[\"\\u2033\"]=\"\\u2032\\u2032\",e[\"\\u2034\"]=\"\\u2032\\u2032\\u2032\",e[\"\\u2036\"]=\"\\u2035\\u2035\",e[\"\\u2037\"]=\"\\u2035\\u2035\\u2035\",e[\"\\u203c\"]=\"!!\",e[\"\\u203e\"]=\" \\u0305\",e[\"\\u2047\"]=\"??\",e[\"\\u2048\"]=\"?!\",e[\"\\u2049\"]=\"!?\",e[\"\\u2057\"]=\"\\u2032\\u2032\\u2032\\u2032\",e[\"\\u205f\"]=\" \",e[\"\\u20a8\"]=\"Rs\",e[\"\\u2100\"]=\"a/c\",e[\"\\u2101\"]=\"a/s\",e[\"\\u2103\"]=\"\\xb0C\",e[\"\\u2105\"]=\"c/o\",e[\"\\u2106\"]=\"c/u\",e[\"\\u2107\"]=\"\\u0190\",e[\"\\u2109\"]=\"\\xb0F\",e[\"\\u2116\"]=\"No\",e[\"\\u2121\"]=\"TEL\",e[\"\\u2135\"]=\"\\u05d0\",e[\"\\u2136\"]=\"\\u05d1\",e[\"\\u2137\"]=\"\\u05d2\",e[\"\\u2138\"]=\"\\u05d3\",e[\"\\u213b\"]=\"FAX\",e[\"\\u2160\"]=\"I\",e[\"\\u2161\"]=\"II\",e[\"\\u2162\"]=\"III\",e[\"\\u2163\"]=\"IV\",e[\"\\u2164\"]=\"V\",e[\"\\u2165\"]=\"VI\",e[\"\\u2166\"]=\"VII\",e[\"\\u2167\"]=\"VIII\",e[\"\\u2168\"]=\"IX\",e[\"\\u2169\"]=\"X\",e[\"\\u216a\"]=\"XI\",e[\"\\u216b\"]=\"XII\",e[\"\\u216c\"]=\"L\",e[\"\\u216d\"]=\"C\",e[\"\\u216e\"]=\"D\",e[\"\\u216f\"]=\"M\",e[\"\\u2170\"]=\"i\",e[\"\\u2171\"]=\"ii\",e[\"\\u2172\"]=\"iii\",e[\"\\u2173\"]=\"iv\",e[\"\\u2174\"]=\"v\",e[\"\\u2175\"]=\"vi\",e[\"\\u2176\"]=\"vii\",e[\"\\u2177\"]=\"viii\",e[\"\\u2178\"]=\"ix\",e[\"\\u2179\"]=\"x\",e[\"\\u217a\"]=\"xi\",e[\"\\u217b\"]=\"xii\",e[\"\\u217c\"]=\"l\",e[\"\\u217d\"]=\"c\",e[\"\\u217e\"]=\"d\",e[\"\\u217f\"]=\"m\",e[\"\\u222c\"]=\"\\u222b\\u222b\",e[\"\\u222d\"]=\"\\u222b\\u222b\\u222b\",e[\"\\u222f\"]=\"\\u222e\\u222e\",e[\"\\u2230\"]=\"\\u222e\\u222e\\u222e\",e[\"\\u2474\"]=\"(1)\",e[\"\\u2475\"]=\"(2)\",e[\"\\u2476\"]=\"(3)\",e[\"\\u2477\"]=\"(4)\",e[\"\\u2478\"]=\"(5)\",e[\"\\u2479\"]=\"(6)\",e[\"\\u247a\"]=\"(7)\",e[\"\\u247b\"]=\"(8)\",e[\"\\u247c\"]=\"(9)\",e[\"\\u247d\"]=\"(10)\",e[\"\\u247e\"]=\"(11)\",e[\"\\u247f\"]=\"(12)\",e[\"\\u2480\"]=\"(13)\",e[\"\\u2481\"]=\"(14)\",e[\"\\u2482\"]=\"(15)\",e[\"\\u2483\"]=\"(16)\",e[\"\\u2484\"]=\"(17)\",e[\"\\u2485\"]=\"(18)\",e[\"\\u2486\"]=\"(19)\",e[\"\\u2487\"]=\"(20)\",e[\"\\u2488\"]=\"1.\",e[\"\\u2489\"]=\"2.\",e[\"\\u248a\"]=\"3.\",e[\"\\u248b\"]=\"4.\",e[\"\\u248c\"]=\"5.\",e[\"\\u248d\"]=\"6.\",e[\"\\u248e\"]=\"7.\",e[\"\\u248f\"]=\"8.\",e[\"\\u2490\"]=\"9.\",e[\"\\u2491\"]=\"10.\",e[\"\\u2492\"]=\"11.\",e[\"\\u2493\"]=\"12.\",e[\"\\u2494\"]=\"13.\",e[\"\\u2495\"]=\"14.\",e[\"\\u2496\"]=\"15.\",e[\"\\u2497\"]=\"16.\",e[\"\\u2498\"]=\"17.\",e[\"\\u2499\"]=\"18.\",e[\"\\u249a\"]=\"19.\",e[\"\\u249b\"]=\"20.\",e[\"\\u249c\"]=\"(a)\",e[\"\\u249d\"]=\"(b)\",e[\"\\u249e\"]=\"(c)\",e[\"\\u249f\"]=\"(d)\",e[\"\\u24a0\"]=\"(e)\",e[\"\\u24a1\"]=\"(f)\",e[\"\\u24a2\"]=\"(g)\",e[\"\\u24a3\"]=\"(h)\",e[\"\\u24a4\"]=\"(i)\",e[\"\\u24a5\"]=\"(j)\",e[\"\\u24a6\"]=\"(k)\",e[\"\\u24a7\"]=\"(l)\",e[\"\\u24a8\"]=\"(m)\",e[\"\\u24a9\"]=\"(n)\",e[\"\\u24aa\"]=\"(o)\",e[\"\\u24ab\"]=\"(p)\",e[\"\\u24ac\"]=\"(q)\",e[\"\\u24ad\"]=\"(r)\",e[\"\\u24ae\"]=\"(s)\",e[\"\\u24af\"]=\"(t)\",e[\"\\u24b0\"]=\"(u)\",e[\"\\u24b1\"]=\"(v)\",e[\"\\u24b2\"]=\"(w)\",e[\"\\u24b3\"]=\"(x)\",e[\"\\u24b4\"]=\"(y)\",e[\"\\u24b5\"]=\"(z)\",e[\"\\u2a0c\"]=\"\\u222b\\u222b\\u222b\\u222b\",e[\"\\u2a74\"]=\"::=\",e[\"\\u2a75\"]=\"==\",e[\"\\u2a76\"]=\"===\",e[\"\\u2e9f\"]=\"\\u6bcd\",e[\"\\u2ef3\"]=\"\\u9f9f\",e[\"\\u2f00\"]=\"\\u4e00\",e[\"\\u2f01\"]=\"\\u4e28\",e[\"\\u2f02\"]=\"\\u4e36\",e[\"\\u2f03\"]=\"\\u4e3f\",e[\"\\u2f04\"]=\"\\u4e59\",e[\"\\u2f05\"]=\"\\u4e85\",e[\"\\u2f06\"]=\"\\u4e8c\",e[\"\\u2f07\"]=\"\\u4ea0\",e[\"\\u2f08\"]=\"\\u4eba\",e[\"\\u2f09\"]=\"\\u513f\",e[\"\\u2f0a\"]=\"\\u5165\",e[\"\\u2f0b\"]=\"\\u516b\",e[\"\\u2f0c\"]=\"\\u5182\",e[\"\\u2f0d\"]=\"\\u5196\",e[\"\\u2f0e\"]=\"\\u51ab\",e[\"\\u2f0f\"]=\"\\u51e0\",e[\"\\u2f10\"]=\"\\u51f5\",e[\"\\u2f11\"]=\"\\u5200\",e[\"\\u2f12\"]=\"\\u529b\",e[\"\\u2f13\"]=\"\\u52f9\",e[\"\\u2f14\"]=\"\\u5315\",e[\"\\u2f15\"]=\"\\u531a\",e[\"\\u2f16\"]=\"\\u5338\",e[\"\\u2f17\"]=\"\\u5341\",e[\"\\u2f18\"]=\"\\u535c\",e[\"\\u2f19\"]=\"\\u5369\",e[\"\\u2f1a\"]=\"\\u5382\",e[\"\\u2f1b\"]=\"\\u53b6\",e[\"\\u2f1c\"]=\"\\u53c8\",e[\"\\u2f1d\"]=\"\\u53e3\",e[\"\\u2f1e\"]=\"\\u56d7\",e[\"\\u2f1f\"]=\"\\u571f\",e[\"\\u2f20\"]=\"\\u58eb\",e[\"\\u2f21\"]=\"\\u5902\",e[\"\\u2f22\"]=\"\\u590a\",e[\"\\u2f23\"]=\"\\u5915\",e[\"\\u2f24\"]=\"\\u5927\",e[\"\\u2f25\"]=\"\\u5973\",e[\"\\u2f26\"]=\"\\u5b50\",e[\"\\u2f27\"]=\"\\u5b80\",e[\"\\u2f28\"]=\"\\u5bf8\",e[\"\\u2f29\"]=\"\\u5c0f\",e[\"\\u2f2a\"]=\"\\u5c22\",e[\"\\u2f2b\"]=\"\\u5c38\",e[\"\\u2f2c\"]=\"\\u5c6e\",e[\"\\u2f2d\"]=\"\\u5c71\",e[\"\\u2f2e\"]=\"\\u5ddb\",e[\"\\u2f2f\"]=\"\\u5de5\",e[\"\\u2f30\"]=\"\\u5df1\",e[\"\\u2f31\"]=\"\\u5dfe\",e[\"\\u2f32\"]=\"\\u5e72\",e[\"\\u2f33\"]=\"\\u5e7a\",e[\"\\u2f34\"]=\"\\u5e7f\",e[\"\\u2f35\"]=\"\\u5ef4\",e[\"\\u2f36\"]=\"\\u5efe\",e[\"\\u2f37\"]=\"\\u5f0b\",e[\"\\u2f38\"]=\"\\u5f13\",e[\"\\u2f39\"]=\"\\u5f50\",e[\"\\u2f3a\"]=\"\\u5f61\",e[\"\\u2f3b\"]=\"\\u5f73\",e[\"\\u2f3c\"]=\"\\u5fc3\",e[\"\\u2f3d\"]=\"\\u6208\",e[\"\\u2f3e\"]=\"\\u6236\",e[\"\\u2f3f\"]=\"\\u624b\",e[\"\\u2f40\"]=\"\\u652f\",e[\"\\u2f41\"]=\"\\u6534\",e[\"\\u2f42\"]=\"\\u6587\",e[\"\\u2f43\"]=\"\\u6597\",e[\"\\u2f44\"]=\"\\u65a4\",e[\"\\u2f45\"]=\"\\u65b9\",e[\"\\u2f46\"]=\"\\u65e0\",e[\"\\u2f47\"]=\"\\u65e5\",e[\"\\u2f48\"]=\"\\u66f0\",e[\"\\u2f49\"]=\"\\u6708\",e[\"\\u2f4a\"]=\"\\u6728\",e[\"\\u2f4b\"]=\"\\u6b20\",e[\"\\u2f4c\"]=\"\\u6b62\",e[\"\\u2f4d\"]=\"\\u6b79\",e[\"\\u2f4e\"]=\"\\u6bb3\",e[\"\\u2f4f\"]=\"\\u6bcb\",e[\"\\u2f50\"]=\"\\u6bd4\",e[\"\\u2f51\"]=\"\\u6bdb\",e[\"\\u2f52\"]=\"\\u6c0f\",e[\"\\u2f53\"]=\"\\u6c14\",e[\"\\u2f54\"]=\"\\u6c34\",e[\"\\u2f55\"]=\"\\u706b\",e[\"\\u2f56\"]=\"\\u722a\",e[\"\\u2f57\"]=\"\\u7236\",e[\"\\u2f58\"]=\"\\u723b\",e[\"\\u2f59\"]=\"\\u723f\",e[\"\\u2f5a\"]=\"\\u7247\",e[\"\\u2f5b\"]=\"\\u7259\",e[\"\\u2f5c\"]=\"\\u725b\",e[\"\\u2f5d\"]=\"\\u72ac\",e[\"\\u2f5e\"]=\"\\u7384\",e[\"\\u2f5f\"]=\"\\u7389\",e[\"\\u2f60\"]=\"\\u74dc\",e[\"\\u2f61\"]=\"\\u74e6\",e[\"\\u2f62\"]=\"\\u7518\",e[\"\\u2f63\"]=\"\\u751f\",e[\"\\u2f64\"]=\"\\u7528\",e[\"\\u2f65\"]=\"\\u7530\",e[\"\\u2f66\"]=\"\\u758b\",e[\"\\u2f67\"]=\"\\u7592\",e[\"\\u2f68\"]=\"\\u7676\",e[\"\\u2f69\"]=\"\\u767d\",e[\"\\u2f6a\"]=\"\\u76ae\",e[\"\\u2f6b\"]=\"\\u76bf\",e[\"\\u2f6c\"]=\"\\u76ee\",e[\"\\u2f6d\"]=\"\\u77db\",e[\"\\u2f6e\"]=\"\\u77e2\",e[\"\\u2f6f\"]=\"\\u77f3\",e[\"\\u2f70\"]=\"\\u793a\",e[\"\\u2f71\"]=\"\\u79b8\",e[\"\\u2f72\"]=\"\\u79be\",e[\"\\u2f73\"]=\"\\u7a74\",e[\"\\u2f74\"]=\"\\u7acb\",e[\"\\u2f75\"]=\"\\u7af9\",e[\"\\u2f76\"]=\"\\u7c73\",e[\"\\u2f77\"]=\"\\u7cf8\",e[\"\\u2f78\"]=\"\\u7f36\",e[\"\\u2f79\"]=\"\\u7f51\",e[\"\\u2f7a\"]=\"\\u7f8a\",e[\"\\u2f7b\"]=\"\\u7fbd\",e[\"\\u2f7c\"]=\"\\u8001\",e[\"\\u2f7d\"]=\"\\u800c\",e[\"\\u2f7e\"]=\"\\u8012\",e[\"\\u2f7f\"]=\"\\u8033\",e[\"\\u2f80\"]=\"\\u807f\",e[\"\\u2f81\"]=\"\\u8089\",e[\"\\u2f82\"]=\"\\u81e3\",e[\"\\u2f83\"]=\"\\u81ea\",e[\"\\u2f84\"]=\"\\u81f3\",e[\"\\u2f85\"]=\"\\u81fc\",e[\"\\u2f86\"]=\"\\u820c\",e[\"\\u2f87\"]=\"\\u821b\",e[\"\\u2f88\"]=\"\\u821f\",e[\"\\u2f89\"]=\"\\u826e\",e[\"\\u2f8a\"]=\"\\u8272\",e[\"\\u2f8b\"]=\"\\u8278\",e[\"\\u2f8c\"]=\"\\u864d\",e[\"\\u2f8d\"]=\"\\u866b\",e[\"\\u2f8e\"]=\"\\u8840\",e[\"\\u2f8f\"]=\"\\u884c\",e[\"\\u2f90\"]=\"\\u8863\",e[\"\\u2f91\"]=\"\\u897e\",e[\"\\u2f92\"]=\"\\u898b\",e[\"\\u2f93\"]=\"\\u89d2\",e[\"\\u2f94\"]=\"\\u8a00\",e[\"\\u2f95\"]=\"\\u8c37\",e[\"\\u2f96\"]=\"\\u8c46\",e[\"\\u2f97\"]=\"\\u8c55\",e[\"\\u2f98\"]=\"\\u8c78\",e[\"\\u2f99\"]=\"\\u8c9d\",e[\"\\u2f9a\"]=\"\\u8d64\",e[\"\\u2f9b\"]=\"\\u8d70\",e[\"\\u2f9c\"]=\"\\u8db3\",e[\"\\u2f9d\"]=\"\\u8eab\",e[\"\\u2f9e\"]=\"\\u8eca\",e[\"\\u2f9f\"]=\"\\u8f9b\",e[\"\\u2fa0\"]=\"\\u8fb0\",e[\"\\u2fa1\"]=\"\\u8fb5\",e[\"\\u2fa2\"]=\"\\u9091\",e[\"\\u2fa3\"]=\"\\u9149\",e[\"\\u2fa4\"]=\"\\u91c6\",e[\"\\u2fa5\"]=\"\\u91cc\",e[\"\\u2fa6\"]=\"\\u91d1\",e[\"\\u2fa7\"]=\"\\u9577\",e[\"\\u2fa8\"]=\"\\u9580\",e[\"\\u2fa9\"]=\"\\u961c\",e[\"\\u2faa\"]=\"\\u96b6\",e[\"\\u2fab\"]=\"\\u96b9\",e[\"\\u2fac\"]=\"\\u96e8\",e[\"\\u2fad\"]=\"\\u9751\",e[\"\\u2fae\"]=\"\\u975e\",e[\"\\u2faf\"]=\"\\u9762\",e[\"\\u2fb0\"]=\"\\u9769\",e[\"\\u2fb1\"]=\"\\u97cb\",e[\"\\u2fb2\"]=\"\\u97ed\",e[\"\\u2fb3\"]=\"\\u97f3\",e[\"\\u2fb4\"]=\"\\u9801\",e[\"\\u2fb5\"]=\"\\u98a8\",e[\"\\u2fb6\"]=\"\\u98db\",e[\"\\u2fb7\"]=\"\\u98df\",e[\"\\u2fb8\"]=\"\\u9996\",e[\"\\u2fb9\"]=\"\\u9999\",e[\"\\u2fba\"]=\"\\u99ac\",e[\"\\u2fbb\"]=\"\\u9aa8\",e[\"\\u2fbc\"]=\"\\u9ad8\",e[\"\\u2fbd\"]=\"\\u9adf\",e[\"\\u2fbe\"]=\"\\u9b25\",e[\"\\u2fbf\"]=\"\\u9b2f\",e[\"\\u2fc0\"]=\"\\u9b32\",e[\"\\u2fc1\"]=\"\\u9b3c\",e[\"\\u2fc2\"]=\"\\u9b5a\",e[\"\\u2fc3\"]=\"\\u9ce5\",e[\"\\u2fc4\"]=\"\\u9e75\",e[\"\\u2fc5\"]=\"\\u9e7f\",e[\"\\u2fc6\"]=\"\\u9ea5\",e[\"\\u2fc7\"]=\"\\u9ebb\",e[\"\\u2fc8\"]=\"\\u9ec3\",e[\"\\u2fc9\"]=\"\\u9ecd\",e[\"\\u2fca\"]=\"\\u9ed1\",e[\"\\u2fcb\"]=\"\\u9ef9\",e[\"\\u2fcc\"]=\"\\u9efd\",e[\"\\u2fcd\"]=\"\\u9f0e\",e[\"\\u2fce\"]=\"\\u9f13\",e[\"\\u2fcf\"]=\"\\u9f20\",e[\"\\u2fd0\"]=\"\\u9f3b\",e[\"\\u2fd1\"]=\"\\u9f4a\",e[\"\\u2fd2\"]=\"\\u9f52\",e[\"\\u2fd3\"]=\"\\u9f8d\",e[\"\\u2fd4\"]=\"\\u9f9c\",e[\"\\u2fd5\"]=\"\\u9fa0\",e[\"\\u3036\"]=\"\\u3012\",e[\"\\u3038\"]=\"\\u5341\",e[\"\\u3039\"]=\"\\u5344\",e[\"\\u303a\"]=\"\\u5345\",e[\"\\u309b\"]=\" \\u3099\",e[\"\\u309c\"]=\" \\u309a\",e[\"\\u3131\"]=\"\\u1100\",e[\"\\u3132\"]=\"\\u1101\",e[\"\\u3133\"]=\"\\u11aa\",e[\"\\u3134\"]=\"\\u1102\",e[\"\\u3135\"]=\"\\u11ac\",e[\"\\u3136\"]=\"\\u11ad\",e[\"\\u3137\"]=\"\\u1103\",e[\"\\u3138\"]=\"\\u1104\",e[\"\\u3139\"]=\"\\u1105\",e[\"\\u313a\"]=\"\\u11b0\",e[\"\\u313b\"]=\"\\u11b1\",e[\"\\u313c\"]=\"\\u11b2\",e[\"\\u313d\"]=\"\\u11b3\",e[\"\\u313e\"]=\"\\u11b4\",e[\"\\u313f\"]=\"\\u11b5\",e[\"\\u3140\"]=\"\\u111a\",e[\"\\u3141\"]=\"\\u1106\",e[\"\\u3142\"]=\"\\u1107\",e[\"\\u3143\"]=\"\\u1108\",e[\"\\u3144\"]=\"\\u1121\",e[\"\\u3145\"]=\"\\u1109\",e[\"\\u3146\"]=\"\\u110a\",e[\"\\u3147\"]=\"\\u110b\",e[\"\\u3148\"]=\"\\u110c\",e[\"\\u3149\"]=\"\\u110d\",e[\"\\u314a\"]=\"\\u110e\",e[\"\\u314b\"]=\"\\u110f\",e[\"\\u314c\"]=\"\\u1110\",e[\"\\u314d\"]=\"\\u1111\",e[\"\\u314e\"]=\"\\u1112\",e[\"\\u314f\"]=\"\\u1161\",e[\"\\u3150\"]=\"\\u1162\",e[\"\\u3151\"]=\"\\u1163\",e[\"\\u3152\"]=\"\\u1164\",e[\"\\u3153\"]=\"\\u1165\",e[\"\\u3154\"]=\"\\u1166\",e[\"\\u3155\"]=\"\\u1167\",e[\"\\u3156\"]=\"\\u1168\",e[\"\\u3157\"]=\"\\u1169\",e[\"\\u3158\"]=\"\\u116a\",e[\"\\u3159\"]=\"\\u116b\",e[\"\\u315a\"]=\"\\u116c\",e[\"\\u315b\"]=\"\\u116d\",e[\"\\u315c\"]=\"\\u116e\",e[\"\\u315d\"]=\"\\u116f\",e[\"\\u315e\"]=\"\\u1170\",e[\"\\u315f\"]=\"\\u1171\",e[\"\\u3160\"]=\"\\u1172\",e[\"\\u3161\"]=\"\\u1173\",e[\"\\u3162\"]=\"\\u1174\",e[\"\\u3163\"]=\"\\u1175\",e[\"\\u3164\"]=\"\\u1160\",e[\"\\u3165\"]=\"\\u1114\",e[\"\\u3166\"]=\"\\u1115\",e[\"\\u3167\"]=\"\\u11c7\",e[\"\\u3168\"]=\"\\u11c8\",e[\"\\u3169\"]=\"\\u11cc\",e[\"\\u316a\"]=\"\\u11ce\",e[\"\\u316b\"]=\"\\u11d3\",e[\"\\u316c\"]=\"\\u11d7\",e[\"\\u316d\"]=\"\\u11d9\",e[\"\\u316e\"]=\"\\u111c\",e[\"\\u316f\"]=\"\\u11dd\",e[\"\\u3170\"]=\"\\u11df\",e[\"\\u3171\"]=\"\\u111d\",e[\"\\u3172\"]=\"\\u111e\",e[\"\\u3173\"]=\"\\u1120\",e[\"\\u3174\"]=\"\\u1122\",e[\"\\u3175\"]=\"\\u1123\",e[\"\\u3176\"]=\"\\u1127\",e[\"\\u3177\"]=\"\\u1129\",e[\"\\u3178\"]=\"\\u112b\",e[\"\\u3179\"]=\"\\u112c\",e[\"\\u317a\"]=\"\\u112d\",e[\"\\u317b\"]=\"\\u112e\",e[\"\\u317c\"]=\"\\u112f\",e[\"\\u317d\"]=\"\\u1132\",e[\"\\u317e\"]=\"\\u1136\",e[\"\\u317f\"]=\"\\u1140\",e[\"\\u3180\"]=\"\\u1147\",e[\"\\u3181\"]=\"\\u114c\",e[\"\\u3182\"]=\"\\u11f1\",e[\"\\u3183\"]=\"\\u11f2\",e[\"\\u3184\"]=\"\\u1157\",e[\"\\u3185\"]=\"\\u1158\",e[\"\\u3186\"]=\"\\u1159\",e[\"\\u3187\"]=\"\\u1184\",e[\"\\u3188\"]=\"\\u1185\",e[\"\\u3189\"]=\"\\u1188\",e[\"\\u318a\"]=\"\\u1191\",e[\"\\u318b\"]=\"\\u1192\",e[\"\\u318c\"]=\"\\u1194\",e[\"\\u318d\"]=\"\\u119e\",e[\"\\u318e\"]=\"\\u11a1\",e[\"\\u3200\"]=\"(\\u1100)\",e[\"\\u3201\"]=\"(\\u1102)\",e[\"\\u3202\"]=\"(\\u1103)\",e[\"\\u3203\"]=\"(\\u1105)\",e[\"\\u3204\"]=\"(\\u1106)\",e[\"\\u3205\"]=\"(\\u1107)\",e[\"\\u3206\"]=\"(\\u1109)\",e[\"\\u3207\"]=\"(\\u110b)\",e[\"\\u3208\"]=\"(\\u110c)\",e[\"\\u3209\"]=\"(\\u110e)\",e[\"\\u320a\"]=\"(\\u110f)\",e[\"\\u320b\"]=\"(\\u1110)\",e[\"\\u320c\"]=\"(\\u1111)\",e[\"\\u320d\"]=\"(\\u1112)\",e[\"\\u320e\"]=\"(\\u1100\\u1161)\",e[\"\\u320f\"]=\"(\\u1102\\u1161)\",e[\"\\u3210\"]=\"(\\u1103\\u1161)\",e[\"\\u3211\"]=\"(\\u1105\\u1161)\",e[\"\\u3212\"]=\"(\\u1106\\u1161)\",e[\"\\u3213\"]=\"(\\u1107\\u1161)\",e[\"\\u3214\"]=\"(\\u1109\\u1161)\",e[\"\\u3215\"]=\"(\\u110b\\u1161)\",e[\"\\u3216\"]=\"(\\u110c\\u1161)\",e[\"\\u3217\"]=\"(\\u110e\\u1161)\",e[\"\\u3218\"]=\"(\\u110f\\u1161)\",e[\"\\u3219\"]=\"(\\u1110\\u1161)\",e[\"\\u321a\"]=\"(\\u1111\\u1161)\",e[\"\\u321b\"]=\"(\\u1112\\u1161)\",e[\"\\u321c\"]=\"(\\u110c\\u116e)\",e[\"\\u321d\"]=\"(\\u110b\\u1169\\u110c\\u1165\\u11ab)\",e[\"\\u321e\"]=\"(\\u110b\\u1169\\u1112\\u116e)\",e[\"\\u3220\"]=\"(\\u4e00)\",e[\"\\u3221\"]=\"(\\u4e8c)\",e[\"\\u3222\"]=\"(\\u4e09)\",e[\"\\u3223\"]=\"(\\u56db)\",e[\"\\u3224\"]=\"(\\u4e94)\",e[\"\\u3225\"]=\"(\\u516d)\",e[\"\\u3226\"]=\"(\\u4e03)\",e[\"\\u3227\"]=\"(\\u516b)\",e[\"\\u3228\"]=\"(\\u4e5d)\",e[\"\\u3229\"]=\"(\\u5341)\",e[\"\\u322a\"]=\"(\\u6708)\",e[\"\\u322b\"]=\"(\\u706b)\",e[\"\\u322c\"]=\"(\\u6c34)\",e[\"\\u322d\"]=\"(\\u6728)\",e[\"\\u322e\"]=\"(\\u91d1)\",e[\"\\u322f\"]=\"(\\u571f)\",e[\"\\u3230\"]=\"(\\u65e5)\",e[\"\\u3231\"]=\"(\\u682a)\",e[\"\\u3232\"]=\"(\\u6709)\",e[\"\\u3233\"]=\"(\\u793e)\",e[\"\\u3234\"]=\"(\\u540d)\",e[\"\\u3235\"]=\"(\\u7279)\",e[\"\\u3236\"]=\"(\\u8ca1)\",e[\"\\u3237\"]=\"(\\u795d)\",e[\"\\u3238\"]=\"(\\u52b4)\",e[\"\\u3239\"]=\"(\\u4ee3)\",e[\"\\u323a\"]=\"(\\u547c)\",e[\"\\u323b\"]=\"(\\u5b66)\",e[\"\\u323c\"]=\"(\\u76e3)\",e[\"\\u323d\"]=\"(\\u4f01)\",e[\"\\u323e\"]=\"(\\u8cc7)\",e[\"\\u323f\"]=\"(\\u5354)\",e[\"\\u3240\"]=\"(\\u796d)\",e[\"\\u3241\"]=\"(\\u4f11)\",e[\"\\u3242\"]=\"(\\u81ea)\",e[\"\\u3243\"]=\"(\\u81f3)\",e[\"\\u32c0\"]=\"1\\u6708\",e[\"\\u32c1\"]=\"2\\u6708\",e[\"\\u32c2\"]=\"3\\u6708\",e[\"\\u32c3\"]=\"4\\u6708\",e[\"\\u32c4\"]=\"5\\u6708\",e[\"\\u32c5\"]=\"6\\u6708\",e[\"\\u32c6\"]=\"7\\u6708\",e[\"\\u32c7\"]=\"8\\u6708\",e[\"\\u32c8\"]=\"9\\u6708\",e[\"\\u32c9\"]=\"10\\u6708\",e[\"\\u32ca\"]=\"11\\u6708\",e[\"\\u32cb\"]=\"12\\u6708\",e[\"\\u3358\"]=\"0\\u70b9\",e[\"\\u3359\"]=\"1\\u70b9\",e[\"\\u335a\"]=\"2\\u70b9\",e[\"\\u335b\"]=\"3\\u70b9\",e[\"\\u335c\"]=\"4\\u70b9\",e[\"\\u335d\"]=\"5\\u70b9\",e[\"\\u335e\"]=\"6\\u70b9\",e[\"\\u335f\"]=\"7\\u70b9\",e[\"\\u3360\"]=\"8\\u70b9\",e[\"\\u3361\"]=\"9\\u70b9\",e[\"\\u3362\"]=\"10\\u70b9\",e[\"\\u3363\"]=\"11\\u70b9\",e[\"\\u3364\"]=\"12\\u70b9\",e[\"\\u3365\"]=\"13\\u70b9\",e[\"\\u3366\"]=\"14\\u70b9\",e[\"\\u3367\"]=\"15\\u70b9\",e[\"\\u3368\"]=\"16\\u70b9\",e[\"\\u3369\"]=\"17\\u70b9\",e[\"\\u336a\"]=\"18\\u70b9\",e[\"\\u336b\"]=\"19\\u70b9\",e[\"\\u336c\"]=\"20\\u70b9\",e[\"\\u336d\"]=\"21\\u70b9\",e[\"\\u336e\"]=\"22\\u70b9\",e[\"\\u336f\"]=\"23\\u70b9\",e[\"\\u3370\"]=\"24\\u70b9\",e[\"\\u33e0\"]=\"1\\u65e5\",e[\"\\u33e1\"]=\"2\\u65e5\",e[\"\\u33e2\"]=\"3\\u65e5\",e[\"\\u33e3\"]=\"4\\u65e5\",e[\"\\u33e4\"]=\"5\\u65e5\",e[\"\\u33e5\"]=\"6\\u65e5\",e[\"\\u33e6\"]=\"7\\u65e5\",e[\"\\u33e7\"]=\"8\\u65e5\",e[\"\\u33e8\"]=\"9\\u65e5\",e[\"\\u33e9\"]=\"10\\u65e5\",e[\"\\u33ea\"]=\"11\\u65e5\",e[\"\\u33eb\"]=\"12\\u65e5\",e[\"\\u33ec\"]=\"13\\u65e5\",e[\"\\u33ed\"]=\"14\\u65e5\",e[\"\\u33ee\"]=\"15\\u65e5\",e[\"\\u33ef\"]=\"16\\u65e5\",e[\"\\u33f0\"]=\"17\\u65e5\",e[\"\\u33f1\"]=\"18\\u65e5\",e[\"\\u33f2\"]=\"19\\u65e5\",e[\"\\u33f3\"]=\"20\\u65e5\",e[\"\\u33f4\"]=\"21\\u65e5\",e[\"\\u33f5\"]=\"22\\u65e5\",e[\"\\u33f6\"]=\"23\\u65e5\",e[\"\\u33f7\"]=\"24\\u65e5\",e[\"\\u33f8\"]=\"25\\u65e5\",e[\"\\u33f9\"]=\"26\\u65e5\",e[\"\\u33fa\"]=\"27\\u65e5\",e[\"\\u33fb\"]=\"28\\u65e5\",e[\"\\u33fc\"]=\"29\\u65e5\",e[\"\\u33fd\"]=\"30\\u65e5\",e[\"\\u33fe\"]=\"31\\u65e5\",e[\"\\ufb00\"]=\"ff\",e[\"\\ufb01\"]=\"fi\",e[\"\\ufb02\"]=\"fl\",e[\"\\ufb03\"]=\"ffi\",e[\"\\ufb04\"]=\"ffl\",e[\"\\ufb05\"]=\"\\u017ft\",e[\"\\ufb06\"]=\"st\",e[\"\\ufb13\"]=\"\\u0574\\u0576\",e[\"\\ufb14\"]=\"\\u0574\\u0565\",e[\"\\ufb15\"]=\"\\u0574\\u056b\",e[\"\\ufb16\"]=\"\\u057e\\u0576\",e[\"\\ufb17\"]=\"\\u0574\\u056d\",e[\"\\ufb4f\"]=\"\\u05d0\\u05dc\",e[\"\\ufb50\"]=\"\\u0671\",e[\"\\ufb51\"]=\"\\u0671\",e[\"\\ufb52\"]=\"\\u067b\",e[\"\\ufb53\"]=\"\\u067b\",e[\"\\ufb54\"]=\"\\u067b\",e[\"\\ufb55\"]=\"\\u067b\",e[\"\\ufb56\"]=\"\\u067e\",e[\"\\ufb57\"]=\"\\u067e\",e[\"\\ufb58\"]=\"\\u067e\",e[\"\\ufb59\"]=\"\\u067e\",e[\"\\ufb5a\"]=\"\\u0680\",e[\"\\ufb5b\"]=\"\\u0680\",e[\"\\ufb5c\"]=\"\\u0680\",e[\"\\ufb5d\"]=\"\\u0680\",e[\"\\ufb5e\"]=\"\\u067a\",e[\"\\ufb5f\"]=\"\\u067a\",e[\"\\ufb60\"]=\"\\u067a\",e[\"\\ufb61\"]=\"\\u067a\",e[\"\\ufb62\"]=\"\\u067f\",e[\"\\ufb63\"]=\"\\u067f\",e[\"\\ufb64\"]=\"\\u067f\",e[\"\\ufb65\"]=\"\\u067f\",e[\"\\ufb66\"]=\"\\u0679\",e[\"\\ufb67\"]=\"\\u0679\",e[\"\\ufb68\"]=\"\\u0679\",e[\"\\ufb69\"]=\"\\u0679\",e[\"\\ufb6a\"]=\"\\u06a4\",e[\"\\ufb6b\"]=\"\\u06a4\",e[\"\\ufb6c\"]=\"\\u06a4\",e[\"\\ufb6d\"]=\"\\u06a4\",e[\"\\ufb6e\"]=\"\\u06a6\",e[\"\\ufb6f\"]=\"\\u06a6\",e[\"\\ufb70\"]=\"\\u06a6\",e[\"\\ufb71\"]=\"\\u06a6\",e[\"\\ufb72\"]=\"\\u0684\",e[\"\\ufb73\"]=\"\\u0684\",e[\"\\ufb74\"]=\"\\u0684\",e[\"\\ufb75\"]=\"\\u0684\",e[\"\\ufb76\"]=\"\\u0683\",e[\"\\ufb77\"]=\"\\u0683\",e[\"\\ufb78\"]=\"\\u0683\",e[\"\\ufb79\"]=\"\\u0683\",e[\"\\ufb7a\"]=\"\\u0686\",e[\"\\ufb7b\"]=\"\\u0686\",e[\"\\ufb7c\"]=\"\\u0686\",e[\"\\ufb7d\"]=\"\\u0686\",e[\"\\ufb7e\"]=\"\\u0687\",e[\"\\ufb7f\"]=\"\\u0687\",e[\"\\ufb80\"]=\"\\u0687\",e[\"\\ufb81\"]=\"\\u0687\",e[\"\\ufb82\"]=\"\\u068d\",e[\"\\ufb83\"]=\"\\u068d\",e[\"\\ufb84\"]=\"\\u068c\",e[\"\\ufb85\"]=\"\\u068c\",e[\"\\ufb86\"]=\"\\u068e\",e[\"\\ufb87\"]=\"\\u068e\",e[\"\\ufb88\"]=\"\\u0688\",e[\"\\ufb89\"]=\"\\u0688\",e[\"\\ufb8a\"]=\"\\u0698\",e[\"\\ufb8b\"]=\"\\u0698\",e[\"\\ufb8c\"]=\"\\u0691\",e[\"\\ufb8d\"]=\"\\u0691\",e[\"\\ufb8e\"]=\"\\u06a9\",e[\"\\ufb8f\"]=\"\\u06a9\",e[\"\\ufb90\"]=\"\\u06a9\",e[\"\\ufb91\"]=\"\\u06a9\",e[\"\\ufb92\"]=\"\\u06af\",e[\"\\ufb93\"]=\"\\u06af\",e[\"\\ufb94\"]=\"\\u06af\",e[\"\\ufb95\"]=\"\\u06af\",e[\"\\ufb96\"]=\"\\u06b3\",e[\"\\ufb97\"]=\"\\u06b3\",e[\"\\ufb98\"]=\"\\u06b3\",e[\"\\ufb99\"]=\"\\u06b3\",e[\"\\ufb9a\"]=\"\\u06b1\",e[\"\\ufb9b\"]=\"\\u06b1\",e[\"\\ufb9c\"]=\"\\u06b1\",e[\"\\ufb9d\"]=\"\\u06b1\",e[\"\\ufb9e\"]=\"\\u06ba\",e[\"\\ufb9f\"]=\"\\u06ba\",e[\"\\ufba0\"]=\"\\u06bb\",e[\"\\ufba1\"]=\"\\u06bb\",e[\"\\ufba2\"]=\"\\u06bb\",e[\"\\ufba3\"]=\"\\u06bb\",e[\"\\ufba4\"]=\"\\u06c0\",e[\"\\ufba5\"]=\"\\u06c0\",e[\"\\ufba6\"]=\"\\u06c1\",e[\"\\ufba7\"]=\"\\u06c1\",e[\"\\ufba8\"]=\"\\u06c1\",e[\"\\ufba9\"]=\"\\u06c1\",e[\"\\ufbaa\"]=\"\\u06be\",e[\"\\ufbab\"]=\"\\u06be\",e[\"\\ufbac\"]=\"\\u06be\",e[\"\\ufbad\"]=\"\\u06be\",e[\"\\ufbae\"]=\"\\u06d2\",e[\"\\ufbaf\"]=\"\\u06d2\",e[\"\\ufbb0\"]=\"\\u06d3\",e[\"\\ufbb1\"]=\"\\u06d3\",e[\"\\ufbd3\"]=\"\\u06ad\",e[\"\\ufbd4\"]=\"\\u06ad\",e[\"\\ufbd5\"]=\"\\u06ad\",e[\"\\ufbd6\"]=\"\\u06ad\",e[\"\\ufbd7\"]=\"\\u06c7\",e[\"\\ufbd8\"]=\"\\u06c7\",e[\"\\ufbd9\"]=\"\\u06c6\",e[\"\\ufbda\"]=\"\\u06c6\",e[\"\\ufbdb\"]=\"\\u06c8\",e[\"\\ufbdc\"]=\"\\u06c8\",e[\"\\ufbdd\"]=\"\\u0677\",e[\"\\ufbde\"]=\"\\u06cb\",e[\"\\ufbdf\"]=\"\\u06cb\",e[\"\\ufbe0\"]=\"\\u06c5\",e[\"\\ufbe1\"]=\"\\u06c5\",e[\"\\ufbe2\"]=\"\\u06c9\",e[\"\\ufbe3\"]=\"\\u06c9\",e[\"\\ufbe4\"]=\"\\u06d0\",e[\"\\ufbe5\"]=\"\\u06d0\",e[\"\\ufbe6\"]=\"\\u06d0\",e[\"\\ufbe7\"]=\"\\u06d0\",e[\"\\ufbe8\"]=\"\\u0649\",e[\"\\ufbe9\"]=\"\\u0649\",e[\"\\ufbea\"]=\"\\u0626\\u0627\",e[\"\\ufbeb\"]=\"\\u0626\\u0627\",e[\"\\ufbec\"]=\"\\u0626\\u06d5\",e[\"\\ufbed\"]=\"\\u0626\\u06d5\",e[\"\\ufbee\"]=\"\\u0626\\u0648\",e[\"\\ufbef\"]=\"\\u0626\\u0648\",e[\"\\ufbf0\"]=\"\\u0626\\u06c7\",e[\"\\ufbf1\"]=\"\\u0626\\u06c7\",e[\"\\ufbf2\"]=\"\\u0626\\u06c6\",e[\"\\ufbf3\"]=\"\\u0626\\u06c6\",e[\"\\ufbf4\"]=\"\\u0626\\u06c8\",e[\"\\ufbf5\"]=\"\\u0626\\u06c8\",e[\"\\ufbf6\"]=\"\\u0626\\u06d0\";e[\"\\ufbf7\"]=\"\\u0626\\u06d0\",e[\"\\ufbf8\"]=\"\\u0626\\u06d0\",e[\"\\ufbf9\"]=\"\\u0626\\u0649\",e[\"\\ufbfa\"]=\"\\u0626\\u0649\",e[\"\\ufbfb\"]=\"\\u0626\\u0649\",e[\"\\ufbfc\"]=\"\\u06cc\",e[\"\\ufbfd\"]=\"\\u06cc\",e[\"\\ufbfe\"]=\"\\u06cc\",e[\"\\ufbff\"]=\"\\u06cc\",e[\"\\ufc00\"]=\"\\u0626\\u062c\",e[\"\\ufc01\"]=\"\\u0626\\u062d\",e[\"\\ufc02\"]=\"\\u0626\\u0645\",e[\"\\ufc03\"]=\"\\u0626\\u0649\",e[\"\\ufc04\"]=\"\\u0626\\u064a\",e[\"\\ufc05\"]=\"\\u0628\\u062c\",e[\"\\ufc06\"]=\"\\u0628\\u062d\",e[\"\\ufc07\"]=\"\\u0628\\u062e\",e[\"\\ufc08\"]=\"\\u0628\\u0645\",e[\"\\ufc09\"]=\"\\u0628\\u0649\",e[\"\\ufc0a\"]=\"\\u0628\\u064a\",e[\"\\ufc0b\"]=\"\\u062a\\u062c\",e[\"\\ufc0c\"]=\"\\u062a\\u062d\",e[\"\\ufc0d\"]=\"\\u062a\\u062e\",e[\"\\ufc0e\"]=\"\\u062a\\u0645\",e[\"\\ufc0f\"]=\"\\u062a\\u0649\",e[\"\\ufc10\"]=\"\\u062a\\u064a\",e[\"\\ufc11\"]=\"\\u062b\\u062c\",e[\"\\ufc12\"]=\"\\u062b\\u0645\",e[\"\\ufc13\"]=\"\\u062b\\u0649\",e[\"\\ufc14\"]=\"\\u062b\\u064a\",e[\"\\ufc15\"]=\"\\u062c\\u062d\",e[\"\\ufc16\"]=\"\\u062c\\u0645\",e[\"\\ufc17\"]=\"\\u062d\\u062c\",e[\"\\ufc18\"]=\"\\u062d\\u0645\",e[\"\\ufc19\"]=\"\\u062e\\u062c\",e[\"\\ufc1a\"]=\"\\u062e\\u062d\",e[\"\\ufc1b\"]=\"\\u062e\\u0645\",e[\"\\ufc1c\"]=\"\\u0633\\u062c\",e[\"\\ufc1d\"]=\"\\u0633\\u062d\",e[\"\\ufc1e\"]=\"\\u0633\\u062e\",e[\"\\ufc1f\"]=\"\\u0633\\u0645\",e[\"\\ufc20\"]=\"\\u0635\\u062d\",e[\"\\ufc21\"]=\"\\u0635\\u0645\",e[\"\\ufc22\"]=\"\\u0636\\u062c\",e[\"\\ufc23\"]=\"\\u0636\\u062d\",e[\"\\ufc24\"]=\"\\u0636\\u062e\",e[\"\\ufc25\"]=\"\\u0636\\u0645\",e[\"\\ufc26\"]=\"\\u0637\\u062d\",e[\"\\ufc27\"]=\"\\u0637\\u0645\",e[\"\\ufc28\"]=\"\\u0638\\u0645\",e[\"\\ufc29\"]=\"\\u0639\\u062c\",e[\"\\ufc2a\"]=\"\\u0639\\u0645\",e[\"\\ufc2b\"]=\"\\u063a\\u062c\",e[\"\\ufc2c\"]=\"\\u063a\\u0645\",e[\"\\ufc2d\"]=\"\\u0641\\u062c\",e[\"\\ufc2e\"]=\"\\u0641\\u062d\",e[\"\\ufc2f\"]=\"\\u0641\\u062e\",e[\"\\ufc30\"]=\"\\u0641\\u0645\",e[\"\\ufc31\"]=\"\\u0641\\u0649\",e[\"\\ufc32\"]=\"\\u0641\\u064a\",e[\"\\ufc33\"]=\"\\u0642\\u062d\",e[\"\\ufc34\"]=\"\\u0642\\u0645\",e[\"\\ufc35\"]=\"\\u0642\\u0649\",e[\"\\ufc36\"]=\"\\u0642\\u064a\",e[\"\\ufc37\"]=\"\\u0643\\u0627\",e[\"\\ufc38\"]=\"\\u0643\\u062c\",e[\"\\ufc39\"]=\"\\u0643\\u062d\",e[\"\\ufc3a\"]=\"\\u0643\\u062e\",e[\"\\ufc3b\"]=\"\\u0643\\u0644\",e[\"\\ufc3c\"]=\"\\u0643\\u0645\",e[\"\\ufc3d\"]=\"\\u0643\\u0649\",e[\"\\ufc3e\"]=\"\\u0643\\u064a\",e[\"\\ufc3f\"]=\"\\u0644\\u062c\",e[\"\\ufc40\"]=\"\\u0644\\u062d\",e[\"\\ufc41\"]=\"\\u0644\\u062e\",e[\"\\ufc42\"]=\"\\u0644\\u0645\",e[\"\\ufc43\"]=\"\\u0644\\u0649\",e[\"\\ufc44\"]=\"\\u0644\\u064a\",e[\"\\ufc45\"]=\"\\u0645\\u062c\",e[\"\\ufc46\"]=\"\\u0645\\u062d\",e[\"\\ufc47\"]=\"\\u0645\\u062e\",e[\"\\ufc48\"]=\"\\u0645\\u0645\",e[\"\\ufc49\"]=\"\\u0645\\u0649\",e[\"\\ufc4a\"]=\"\\u0645\\u064a\",e[\"\\ufc4b\"]=\"\\u0646\\u062c\",e[\"\\ufc4c\"]=\"\\u0646\\u062d\",e[\"\\ufc4d\"]=\"\\u0646\\u062e\",e[\"\\ufc4e\"]=\"\\u0646\\u0645\",e[\"\\ufc4f\"]=\"\\u0646\\u0649\",e[\"\\ufc50\"]=\"\\u0646\\u064a\",e[\"\\ufc51\"]=\"\\u0647\\u062c\",e[\"\\ufc52\"]=\"\\u0647\\u0645\",e[\"\\ufc53\"]=\"\\u0647\\u0649\",e[\"\\ufc54\"]=\"\\u0647\\u064a\",e[\"\\ufc55\"]=\"\\u064a\\u062c\",e[\"\\ufc56\"]=\"\\u064a\\u062d\",e[\"\\ufc57\"]=\"\\u064a\\u062e\",e[\"\\ufc58\"]=\"\\u064a\\u0645\",e[\"\\ufc59\"]=\"\\u064a\\u0649\",e[\"\\ufc5a\"]=\"\\u064a\\u064a\",e[\"\\ufc5b\"]=\"\\u0630\\u0670\",e[\"\\ufc5c\"]=\"\\u0631\\u0670\",e[\"\\ufc5d\"]=\"\\u0649\\u0670\",e[\"\\ufc5e\"]=\" \\u064c\\u0651\",e[\"\\ufc5f\"]=\" \\u064d\\u0651\",e[\"\\ufc60\"]=\" \\u064e\\u0651\",e[\"\\ufc61\"]=\" \\u064f\\u0651\",e[\"\\ufc62\"]=\" \\u0650\\u0651\",e[\"\\ufc63\"]=\" \\u0651\\u0670\",e[\"\\ufc64\"]=\"\\u0626\\u0631\",e[\"\\ufc65\"]=\"\\u0626\\u0632\",e[\"\\ufc66\"]=\"\\u0626\\u0645\",e[\"\\ufc67\"]=\"\\u0626\\u0646\",e[\"\\ufc68\"]=\"\\u0626\\u0649\",e[\"\\ufc69\"]=\"\\u0626\\u064a\",e[\"\\ufc6a\"]=\"\\u0628\\u0631\",e[\"\\ufc6b\"]=\"\\u0628\\u0632\",e[\"\\ufc6c\"]=\"\\u0628\\u0645\",e[\"\\ufc6d\"]=\"\\u0628\\u0646\",e[\"\\ufc6e\"]=\"\\u0628\\u0649\",e[\"\\ufc6f\"]=\"\\u0628\\u064a\",e[\"\\ufc70\"]=\"\\u062a\\u0631\",e[\"\\ufc71\"]=\"\\u062a\\u0632\",e[\"\\ufc72\"]=\"\\u062a\\u0645\",e[\"\\ufc73\"]=\"\\u062a\\u0646\",e[\"\\ufc74\"]=\"\\u062a\\u0649\",e[\"\\ufc75\"]=\"\\u062a\\u064a\",e[\"\\ufc76\"]=\"\\u062b\\u0631\",e[\"\\ufc77\"]=\"\\u062b\\u0632\",e[\"\\ufc78\"]=\"\\u062b\\u0645\",e[\"\\ufc79\"]=\"\\u062b\\u0646\",e[\"\\ufc7a\"]=\"\\u062b\\u0649\",e[\"\\ufc7b\"]=\"\\u062b\\u064a\",e[\"\\ufc7c\"]=\"\\u0641\\u0649\",e[\"\\ufc7d\"]=\"\\u0641\\u064a\",e[\"\\ufc7e\"]=\"\\u0642\\u0649\",e[\"\\ufc7f\"]=\"\\u0642\\u064a\",e[\"\\ufc80\"]=\"\\u0643\\u0627\",e[\"\\ufc81\"]=\"\\u0643\\u0644\",e[\"\\ufc82\"]=\"\\u0643\\u0645\",e[\"\\ufc83\"]=\"\\u0643\\u0649\",e[\"\\ufc84\"]=\"\\u0643\\u064a\",e[\"\\ufc85\"]=\"\\u0644\\u0645\",e[\"\\ufc86\"]=\"\\u0644\\u0649\",e[\"\\ufc87\"]=\"\\u0644\\u064a\",e[\"\\ufc88\"]=\"\\u0645\\u0627\",e[\"\\ufc89\"]=\"\\u0645\\u0645\",e[\"\\ufc8a\"]=\"\\u0646\\u0631\",e[\"\\ufc8b\"]=\"\\u0646\\u0632\",e[\"\\ufc8c\"]=\"\\u0646\\u0645\",e[\"\\ufc8d\"]=\"\\u0646\\u0646\",e[\"\\ufc8e\"]=\"\\u0646\\u0649\",e[\"\\ufc8f\"]=\"\\u0646\\u064a\",e[\"\\ufc90\"]=\"\\u0649\\u0670\",e[\"\\ufc91\"]=\"\\u064a\\u0631\",e[\"\\ufc92\"]=\"\\u064a\\u0632\",e[\"\\ufc93\"]=\"\\u064a\\u0645\",e[\"\\ufc94\"]=\"\\u064a\\u0646\",e[\"\\ufc95\"]=\"\\u064a\\u0649\",e[\"\\ufc96\"]=\"\\u064a\\u064a\",e[\"\\ufc97\"]=\"\\u0626\\u062c\",e[\"\\ufc98\"]=\"\\u0626\\u062d\",e[\"\\ufc99\"]=\"\\u0626\\u062e\",e[\"\\ufc9a\"]=\"\\u0626\\u0645\",e[\"\\ufc9b\"]=\"\\u0626\\u0647\",e[\"\\ufc9c\"]=\"\\u0628\\u062c\",e[\"\\ufc9d\"]=\"\\u0628\\u062d\",e[\"\\ufc9e\"]=\"\\u0628\\u062e\",e[\"\\ufc9f\"]=\"\\u0628\\u0645\",e[\"\\ufca0\"]=\"\\u0628\\u0647\",e[\"\\ufca1\"]=\"\\u062a\\u062c\",e[\"\\ufca2\"]=\"\\u062a\\u062d\",e[\"\\ufca3\"]=\"\\u062a\\u062e\",e[\"\\ufca4\"]=\"\\u062a\\u0645\",e[\"\\ufca5\"]=\"\\u062a\\u0647\",e[\"\\ufca6\"]=\"\\u062b\\u0645\",e[\"\\ufca7\"]=\"\\u062c\\u062d\",e[\"\\ufca8\"]=\"\\u062c\\u0645\",e[\"\\ufca9\"]=\"\\u062d\\u062c\",e[\"\\ufcaa\"]=\"\\u062d\\u0645\",e[\"\\ufcab\"]=\"\\u062e\\u062c\",e[\"\\ufcac\"]=\"\\u062e\\u0645\",e[\"\\ufcad\"]=\"\\u0633\\u062c\",e[\"\\ufcae\"]=\"\\u0633\\u062d\",e[\"\\ufcaf\"]=\"\\u0633\\u062e\",e[\"\\ufcb0\"]=\"\\u0633\\u0645\",e[\"\\ufcb1\"]=\"\\u0635\\u062d\",e[\"\\ufcb2\"]=\"\\u0635\\u062e\",e[\"\\ufcb3\"]=\"\\u0635\\u0645\",e[\"\\ufcb4\"]=\"\\u0636\\u062c\",e[\"\\ufcb5\"]=\"\\u0636\\u062d\",e[\"\\ufcb6\"]=\"\\u0636\\u062e\",e[\"\\ufcb7\"]=\"\\u0636\\u0645\",e[\"\\ufcb8\"]=\"\\u0637\\u062d\",e[\"\\ufcb9\"]=\"\\u0638\\u0645\",e[\"\\ufcba\"]=\"\\u0639\\u062c\",e[\"\\ufcbb\"]=\"\\u0639\\u0645\",e[\"\\ufcbc\"]=\"\\u063a\\u062c\",e[\"\\ufcbd\"]=\"\\u063a\\u0645\",e[\"\\ufcbe\"]=\"\\u0641\\u062c\",e[\"\\ufcbf\"]=\"\\u0641\\u062d\",e[\"\\ufcc0\"]=\"\\u0641\\u062e\",e[\"\\ufcc1\"]=\"\\u0641\\u0645\",e[\"\\ufcc2\"]=\"\\u0642\\u062d\",e[\"\\ufcc3\"]=\"\\u0642\\u0645\",e[\"\\ufcc4\"]=\"\\u0643\\u062c\",e[\"\\ufcc5\"]=\"\\u0643\\u062d\",e[\"\\ufcc6\"]=\"\\u0643\\u062e\",e[\"\\ufcc7\"]=\"\\u0643\\u0644\",e[\"\\ufcc8\"]=\"\\u0643\\u0645\",e[\"\\ufcc9\"]=\"\\u0644\\u062c\",e[\"\\ufcca\"]=\"\\u0644\\u062d\",e[\"\\ufccb\"]=\"\\u0644\\u062e\",e[\"\\ufccc\"]=\"\\u0644\\u0645\",e[\"\\ufccd\"]=\"\\u0644\\u0647\",e[\"\\ufcce\"]=\"\\u0645\\u062c\",e[\"\\ufccf\"]=\"\\u0645\\u062d\",e[\"\\ufcd0\"]=\"\\u0645\\u062e\",e[\"\\ufcd1\"]=\"\\u0645\\u0645\",e[\"\\ufcd2\"]=\"\\u0646\\u062c\",e[\"\\ufcd3\"]=\"\\u0646\\u062d\",e[\"\\ufcd4\"]=\"\\u0646\\u062e\",e[\"\\ufcd5\"]=\"\\u0646\\u0645\",e[\"\\ufcd6\"]=\"\\u0646\\u0647\",e[\"\\ufcd7\"]=\"\\u0647\\u062c\",e[\"\\ufcd8\"]=\"\\u0647\\u0645\",e[\"\\ufcd9\"]=\"\\u0647\\u0670\",e[\"\\ufcda\"]=\"\\u064a\\u062c\",e[\"\\ufcdb\"]=\"\\u064a\\u062d\",e[\"\\ufcdc\"]=\"\\u064a\\u062e\",e[\"\\ufcdd\"]=\"\\u064a\\u0645\",e[\"\\ufcde\"]=\"\\u064a\\u0647\",e[\"\\ufcdf\"]=\"\\u0626\\u0645\",e[\"\\ufce0\"]=\"\\u0626\\u0647\",e[\"\\ufce1\"]=\"\\u0628\\u0645\",e[\"\\ufce2\"]=\"\\u0628\\u0647\",e[\"\\ufce3\"]=\"\\u062a\\u0645\",e[\"\\ufce4\"]=\"\\u062a\\u0647\",e[\"\\ufce5\"]=\"\\u062b\\u0645\",e[\"\\ufce6\"]=\"\\u062b\\u0647\",e[\"\\ufce7\"]=\"\\u0633\\u0645\",e[\"\\ufce8\"]=\"\\u0633\\u0647\",e[\"\\ufce9\"]=\"\\u0634\\u0645\",e[\"\\ufcea\"]=\"\\u0634\\u0647\",e[\"\\ufceb\"]=\"\\u0643\\u0644\",e[\"\\ufcec\"]=\"\\u0643\\u0645\",e[\"\\ufced\"]=\"\\u0644\\u0645\",e[\"\\ufcee\"]=\"\\u0646\\u0645\",e[\"\\ufcef\"]=\"\\u0646\\u0647\",e[\"\\ufcf0\"]=\"\\u064a\\u0645\",e[\"\\ufcf1\"]=\"\\u064a\\u0647\",e[\"\\ufcf2\"]=\"\\u0640\\u064e\\u0651\",e[\"\\ufcf3\"]=\"\\u0640\\u064f\\u0651\",e[\"\\ufcf4\"]=\"\\u0640\\u0650\\u0651\",e[\"\\ufcf5\"]=\"\\u0637\\u0649\",e[\"\\ufcf6\"]=\"\\u0637\\u064a\",e[\"\\ufcf7\"]=\"\\u0639\\u0649\",e[\"\\ufcf8\"]=\"\\u0639\\u064a\",e[\"\\ufcf9\"]=\"\\u063a\\u0649\",e[\"\\ufcfa\"]=\"\\u063a\\u064a\",e[\"\\ufcfb\"]=\"\\u0633\\u0649\",e[\"\\ufcfc\"]=\"\\u0633\\u064a\",e[\"\\ufcfd\"]=\"\\u0634\\u0649\",e[\"\\ufcfe\"]=\"\\u0634\\u064a\",e[\"\\ufcff\"]=\"\\u062d\\u0649\",e[\"\\ufd00\"]=\"\\u062d\\u064a\",e[\"\\ufd01\"]=\"\\u062c\\u0649\",e[\"\\ufd02\"]=\"\\u062c\\u064a\",e[\"\\ufd03\"]=\"\\u062e\\u0649\",e[\"\\ufd04\"]=\"\\u062e\\u064a\",e[\"\\ufd05\"]=\"\\u0635\\u0649\",e[\"\\ufd06\"]=\"\\u0635\\u064a\",e[\"\\ufd07\"]=\"\\u0636\\u0649\",e[\"\\ufd08\"]=\"\\u0636\\u064a\",e[\"\\ufd09\"]=\"\\u0634\\u062c\",e[\"\\ufd0a\"]=\"\\u0634\\u062d\",e[\"\\ufd0b\"]=\"\\u0634\\u062e\",e[\"\\ufd0c\"]=\"\\u0634\\u0645\",e[\"\\ufd0d\"]=\"\\u0634\\u0631\",e[\"\\ufd0e\"]=\"\\u0633\\u0631\",e[\"\\ufd0f\"]=\"\\u0635\\u0631\",e[\"\\ufd10\"]=\"\\u0636\\u0631\",e[\"\\ufd11\"]=\"\\u0637\\u0649\",e[\"\\ufd12\"]=\"\\u0637\\u064a\",e[\"\\ufd13\"]=\"\\u0639\\u0649\",e[\"\\ufd14\"]=\"\\u0639\\u064a\",e[\"\\ufd15\"]=\"\\u063a\\u0649\",e[\"\\ufd16\"]=\"\\u063a\\u064a\",e[\"\\ufd17\"]=\"\\u0633\\u0649\",e[\"\\ufd18\"]=\"\\u0633\\u064a\",e[\"\\ufd19\"]=\"\\u0634\\u0649\",e[\"\\ufd1a\"]=\"\\u0634\\u064a\",e[\"\\ufd1b\"]=\"\\u062d\\u0649\",e[\"\\ufd1c\"]=\"\\u062d\\u064a\",e[\"\\ufd1d\"]=\"\\u062c\\u0649\",e[\"\\ufd1e\"]=\"\\u062c\\u064a\",e[\"\\ufd1f\"]=\"\\u062e\\u0649\",e[\"\\ufd20\"]=\"\\u062e\\u064a\",e[\"\\ufd21\"]=\"\\u0635\\u0649\",e[\"\\ufd22\"]=\"\\u0635\\u064a\",e[\"\\ufd23\"]=\"\\u0636\\u0649\",e[\"\\ufd24\"]=\"\\u0636\\u064a\",e[\"\\ufd25\"]=\"\\u0634\\u062c\",e[\"\\ufd26\"]=\"\\u0634\\u062d\",e[\"\\ufd27\"]=\"\\u0634\\u062e\",e[\"\\ufd28\"]=\"\\u0634\\u0645\",e[\"\\ufd29\"]=\"\\u0634\\u0631\",e[\"\\ufd2a\"]=\"\\u0633\\u0631\",e[\"\\ufd2b\"]=\"\\u0635\\u0631\",e[\"\\ufd2c\"]=\"\\u0636\\u0631\",e[\"\\ufd2d\"]=\"\\u0634\\u062c\",e[\"\\ufd2e\"]=\"\\u0634\\u062d\",e[\"\\ufd2f\"]=\"\\u0634\\u062e\",e[\"\\ufd30\"]=\"\\u0634\\u0645\",e[\"\\ufd31\"]=\"\\u0633\\u0647\",e[\"\\ufd32\"]=\"\\u0634\\u0647\",e[\"\\ufd33\"]=\"\\u0637\\u0645\",e[\"\\ufd34\"]=\"\\u0633\\u062c\",e[\"\\ufd35\"]=\"\\u0633\\u062d\",e[\"\\ufd36\"]=\"\\u0633\\u062e\",e[\"\\ufd37\"]=\"\\u0634\\u062c\",e[\"\\ufd38\"]=\"\\u0634\\u062d\",e[\"\\ufd39\"]=\"\\u0634\\u062e\",e[\"\\ufd3a\"]=\"\\u0637\\u0645\",e[\"\\ufd3b\"]=\"\\u0638\\u0645\",e[\"\\ufd3c\"]=\"\\u0627\\u064b\",e[\"\\ufd3d\"]=\"\\u0627\\u064b\",e[\"\\ufd50\"]=\"\\u062a\\u062c\\u0645\",e[\"\\ufd51\"]=\"\\u062a\\u062d\\u062c\",e[\"\\ufd52\"]=\"\\u062a\\u062d\\u062c\",e[\"\\ufd53\"]=\"\\u062a\\u062d\\u0645\",e[\"\\ufd54\"]=\"\\u062a\\u062e\\u0645\",e[\"\\ufd55\"]=\"\\u062a\\u0645\\u062c\",e[\"\\ufd56\"]=\"\\u062a\\u0645\\u062d\",e[\"\\ufd57\"]=\"\\u062a\\u0645\\u062e\",e[\"\\ufd58\"]=\"\\u062c\\u0645\\u062d\",e[\"\\ufd59\"]=\"\\u062c\\u0645\\u062d\",e[\"\\ufd5a\"]=\"\\u062d\\u0645\\u064a\",e[\"\\ufd5b\"]=\"\\u062d\\u0645\\u0649\",e[\"\\ufd5c\"]=\"\\u0633\\u062d\\u062c\",e[\"\\ufd5d\"]=\"\\u0633\\u062c\\u062d\",e[\"\\ufd5e\"]=\"\\u0633\\u062c\\u0649\",e[\"\\ufd5f\"]=\"\\u0633\\u0645\\u062d\",e[\"\\ufd60\"]=\"\\u0633\\u0645\\u062d\",e[\"\\ufd61\"]=\"\\u0633\\u0645\\u062c\",e[\"\\ufd62\"]=\"\\u0633\\u0645\\u0645\",e[\"\\ufd63\"]=\"\\u0633\\u0645\\u0645\",e[\"\\ufd64\"]=\"\\u0635\\u062d\\u062d\",e[\"\\ufd65\"]=\"\\u0635\\u062d\\u062d\",e[\"\\ufd66\"]=\"\\u0635\\u0645\\u0645\",e[\"\\ufd67\"]=\"\\u0634\\u062d\\u0645\",e[\"\\ufd68\"]=\"\\u0634\\u062d\\u0645\",e[\"\\ufd69\"]=\"\\u0634\\u062c\\u064a\",e[\"\\ufd6a\"]=\"\\u0634\\u0645\\u062e\",e[\"\\ufd6b\"]=\"\\u0634\\u0645\\u062e\",e[\"\\ufd6c\"]=\"\\u0634\\u0645\\u0645\",e[\"\\ufd6d\"]=\"\\u0634\\u0645\\u0645\",e[\"\\ufd6e\"]=\"\\u0636\\u062d\\u0649\",e[\"\\ufd6f\"]=\"\\u0636\\u062e\\u0645\",e[\"\\ufd70\"]=\"\\u0636\\u062e\\u0645\",e[\"\\ufd71\"]=\"\\u0637\\u0645\\u062d\",e[\"\\ufd72\"]=\"\\u0637\\u0645\\u062d\",e[\"\\ufd73\"]=\"\\u0637\\u0645\\u0645\",e[\"\\ufd74\"]=\"\\u0637\\u0645\\u064a\",e[\"\\ufd75\"]=\"\\u0639\\u062c\\u0645\",e[\"\\ufd76\"]=\"\\u0639\\u0645\\u0645\",e[\"\\ufd77\"]=\"\\u0639\\u0645\\u0645\",e[\"\\ufd78\"]=\"\\u0639\\u0645\\u0649\",e[\"\\ufd79\"]=\"\\u063a\\u0645\\u0645\",e[\"\\ufd7a\"]=\"\\u063a\\u0645\\u064a\",e[\"\\ufd7b\"]=\"\\u063a\\u0645\\u0649\",e[\"\\ufd7c\"]=\"\\u0641\\u062e\\u0645\",e[\"\\ufd7d\"]=\"\\u0641\\u062e\\u0645\",e[\"\\ufd7e\"]=\"\\u0642\\u0645\\u062d\",e[\"\\ufd7f\"]=\"\\u0642\\u0645\\u0645\",e[\"\\ufd80\"]=\"\\u0644\\u062d\\u0645\",e[\"\\ufd81\"]=\"\\u0644\\u062d\\u064a\",e[\"\\ufd82\"]=\"\\u0644\\u062d\\u0649\",e[\"\\ufd83\"]=\"\\u0644\\u062c\\u062c\",e[\"\\ufd84\"]=\"\\u0644\\u062c\\u062c\",e[\"\\ufd85\"]=\"\\u0644\\u062e\\u0645\",e[\"\\ufd86\"]=\"\\u0644\\u062e\\u0645\",e[\"\\ufd87\"]=\"\\u0644\\u0645\\u062d\",e[\"\\ufd88\"]=\"\\u0644\\u0645\\u062d\",e[\"\\ufd89\"]=\"\\u0645\\u062d\\u062c\",e[\"\\ufd8a\"]=\"\\u0645\\u062d\\u0645\",e[\"\\ufd8b\"]=\"\\u0645\\u062d\\u064a\",e[\"\\ufd8c\"]=\"\\u0645\\u062c\\u062d\",e[\"\\ufd8d\"]=\"\\u0645\\u062c\\u0645\",e[\"\\ufd8e\"]=\"\\u0645\\u062e\\u062c\",e[\"\\ufd8f\"]=\"\\u0645\\u062e\\u0645\",e[\"\\ufd92\"]=\"\\u0645\\u062c\\u062e\",e[\"\\ufd93\"]=\"\\u0647\\u0645\\u062c\",e[\"\\ufd94\"]=\"\\u0647\\u0645\\u0645\",e[\"\\ufd95\"]=\"\\u0646\\u062d\\u0645\",e[\"\\ufd96\"]=\"\\u0646\\u062d\\u0649\",e[\"\\ufd97\"]=\"\\u0646\\u062c\\u0645\",e[\"\\ufd98\"]=\"\\u0646\\u062c\\u0645\",e[\"\\ufd99\"]=\"\\u0646\\u062c\\u0649\",e[\"\\ufd9a\"]=\"\\u0646\\u0645\\u064a\",e[\"\\ufd9b\"]=\"\\u0646\\u0645\\u0649\",e[\"\\ufd9c\"]=\"\\u064a\\u0645\\u0645\",e[\"\\ufd9d\"]=\"\\u064a\\u0645\\u0645\",e[\"\\ufd9e\"]=\"\\u0628\\u062e\\u064a\",e[\"\\ufd9f\"]=\"\\u062a\\u062c\\u064a\",e[\"\\ufda0\"]=\"\\u062a\\u062c\\u0649\",e[\"\\ufda1\"]=\"\\u062a\\u062e\\u064a\",e[\"\\ufda2\"]=\"\\u062a\\u062e\\u0649\",e[\"\\ufda3\"]=\"\\u062a\\u0645\\u064a\",e[\"\\ufda4\"]=\"\\u062a\\u0645\\u0649\",e[\"\\ufda5\"]=\"\\u062c\\u0645\\u064a\",e[\"\\ufda6\"]=\"\\u062c\\u062d\\u0649\",e[\"\\ufda7\"]=\"\\u062c\\u0645\\u0649\",e[\"\\ufda8\"]=\"\\u0633\\u062e\\u0649\",e[\"\\ufda9\"]=\"\\u0635\\u062d\\u064a\",e[\"\\ufdaa\"]=\"\\u0634\\u062d\\u064a\",e[\"\\ufdab\"]=\"\\u0636\\u062d\\u064a\",e[\"\\ufdac\"]=\"\\u0644\\u062c\\u064a\",e[\"\\ufdad\"]=\"\\u0644\\u0645\\u064a\",e[\"\\ufdae\"]=\"\\u064a\\u062d\\u064a\",e[\"\\ufdaf\"]=\"\\u064a\\u062c\\u064a\",e[\"\\ufdb0\"]=\"\\u064a\\u0645\\u064a\",e[\"\\ufdb1\"]=\"\\u0645\\u0645\\u064a\",e[\"\\ufdb2\"]=\"\\u0642\\u0645\\u064a\",e[\"\\ufdb3\"]=\"\\u0646\\u062d\\u064a\",e[\"\\ufdb4\"]=\"\\u0642\\u0645\\u062d\",e[\"\\ufdb5\"]=\"\\u0644\\u062d\\u0645\",e[\"\\ufdb6\"]=\"\\u0639\\u0645\\u064a\",e[\"\\ufdb7\"]=\"\\u0643\\u0645\\u064a\",e[\"\\ufdb8\"]=\"\\u0646\\u062c\\u062d\",e[\"\\ufdb9\"]=\"\\u0645\\u062e\\u064a\",e[\"\\ufdba\"]=\"\\u0644\\u062c\\u0645\",e[\"\\ufdbb\"]=\"\\u0643\\u0645\\u0645\",e[\"\\ufdbc\"]=\"\\u0644\\u062c\\u0645\",e[\"\\ufdbd\"]=\"\\u0646\\u062c\\u062d\",e[\"\\ufdbe\"]=\"\\u062c\\u062d\\u064a\",e[\"\\ufdbf\"]=\"\\u062d\\u062c\\u064a\",e[\"\\ufdc0\"]=\"\\u0645\\u062c\\u064a\",e[\"\\ufdc1\"]=\"\\u0641\\u0645\\u064a\",e[\"\\ufdc2\"]=\"\\u0628\\u062d\\u064a\",e[\"\\ufdc3\"]=\"\\u0643\\u0645\\u0645\",e[\"\\ufdc4\"]=\"\\u0639\\u062c\\u0645\",e[\"\\ufdc5\"]=\"\\u0635\\u0645\\u0645\",e[\"\\ufdc6\"]=\"\\u0633\\u062e\\u064a\",e[\"\\ufdc7\"]=\"\\u0646\\u062c\\u064a\",e[\"\\ufe49\"]=\"\\u203e\",e[\"\\ufe4a\"]=\"\\u203e\",e[\"\\ufe4b\"]=\"\\u203e\",e[\"\\ufe4c\"]=\"\\u203e\",e[\"\\ufe4d\"]=\"_\",e[\"\\ufe4e\"]=\"_\",e[\"\\ufe4f\"]=\"_\",e[\"\\ufe80\"]=\"\\u0621\",e[\"\\ufe81\"]=\"\\u0622\",e[\"\\ufe82\"]=\"\\u0622\",e[\"\\ufe83\"]=\"\\u0623\",e[\"\\ufe84\"]=\"\\u0623\",e[\"\\ufe85\"]=\"\\u0624\",e[\"\\ufe86\"]=\"\\u0624\",e[\"\\ufe87\"]=\"\\u0625\",e[\"\\ufe88\"]=\"\\u0625\",e[\"\\ufe89\"]=\"\\u0626\",e[\"\\ufe8a\"]=\"\\u0626\",e[\"\\ufe8b\"]=\"\\u0626\",e[\"\\ufe8c\"]=\"\\u0626\",e[\"\\ufe8d\"]=\"\\u0627\",e[\"\\ufe8e\"]=\"\\u0627\",e[\"\\ufe8f\"]=\"\\u0628\",e[\"\\ufe90\"]=\"\\u0628\",e[\"\\ufe91\"]=\"\\u0628\",e[\"\\ufe92\"]=\"\\u0628\",e[\"\\ufe93\"]=\"\\u0629\",e[\"\\ufe94\"]=\"\\u0629\",e[\"\\ufe95\"]=\"\\u062a\",e[\"\\ufe96\"]=\"\\u062a\",e[\"\\ufe97\"]=\"\\u062a\",e[\"\\ufe98\"]=\"\\u062a\",e[\"\\ufe99\"]=\"\\u062b\",e[\"\\ufe9a\"]=\"\\u062b\",e[\"\\ufe9b\"]=\"\\u062b\",e[\"\\ufe9c\"]=\"\\u062b\",e[\"\\ufe9d\"]=\"\\u062c\",e[\"\\ufe9e\"]=\"\\u062c\",e[\"\\ufe9f\"]=\"\\u062c\",e[\"\\ufea0\"]=\"\\u062c\",e[\"\\ufea1\"]=\"\\u062d\",e[\"\\ufea2\"]=\"\\u062d\",e[\"\\ufea3\"]=\"\\u062d\",e[\"\\ufea4\"]=\"\\u062d\",e[\"\\ufea5\"]=\"\\u062e\",e[\"\\ufea6\"]=\"\\u062e\",e[\"\\ufea7\"]=\"\\u062e\",e[\"\\ufea8\"]=\"\\u062e\",e[\"\\ufea9\"]=\"\\u062f\",e[\"\\ufeaa\"]=\"\\u062f\",e[\"\\ufeab\"]=\"\\u0630\",e[\"\\ufeac\"]=\"\\u0630\",e[\"\\ufead\"]=\"\\u0631\",e[\"\\ufeae\"]=\"\\u0631\",e[\"\\ufeaf\"]=\"\\u0632\",e[\"\\ufeb0\"]=\"\\u0632\",e[\"\\ufeb1\"]=\"\\u0633\",e[\"\\ufeb2\"]=\"\\u0633\",e[\"\\ufeb3\"]=\"\\u0633\",e[\"\\ufeb4\"]=\"\\u0633\",e[\"\\ufeb5\"]=\"\\u0634\",e[\"\\ufeb6\"]=\"\\u0634\",e[\"\\ufeb7\"]=\"\\u0634\",e[\"\\ufeb8\"]=\"\\u0634\",e[\"\\ufeb9\"]=\"\\u0635\",e[\"\\ufeba\"]=\"\\u0635\",e[\"\\ufebb\"]=\"\\u0635\",e[\"\\ufebc\"]=\"\\u0635\",e[\"\\ufebd\"]=\"\\u0636\",e[\"\\ufebe\"]=\"\\u0636\",e[\"\\ufebf\"]=\"\\u0636\",e[\"\\ufec0\"]=\"\\u0636\",e[\"\\ufec1\"]=\"\\u0637\",e[\"\\ufec2\"]=\"\\u0637\",e[\"\\ufec3\"]=\"\\u0637\",e[\"\\ufec4\"]=\"\\u0637\",e[\"\\ufec5\"]=\"\\u0638\",e[\"\\ufec6\"]=\"\\u0638\",e[\"\\ufec7\"]=\"\\u0638\",e[\"\\ufec8\"]=\"\\u0638\",e[\"\\ufec9\"]=\"\\u0639\",e[\"\\ufeca\"]=\"\\u0639\",e[\"\\ufecb\"]=\"\\u0639\",e[\"\\ufecc\"]=\"\\u0639\",e[\"\\ufecd\"]=\"\\u063a\",e[\"\\ufece\"]=\"\\u063a\",e[\"\\ufecf\"]=\"\\u063a\",e[\"\\ufed0\"]=\"\\u063a\",e[\"\\ufed1\"]=\"\\u0641\",e[\"\\ufed2\"]=\"\\u0641\",e[\"\\ufed3\"]=\"\\u0641\",e[\"\\ufed4\"]=\"\\u0641\",e[\"\\ufed5\"]=\"\\u0642\",e[\"\\ufed6\"]=\"\\u0642\",e[\"\\ufed7\"]=\"\\u0642\",e[\"\\ufed8\"]=\"\\u0642\",e[\"\\ufed9\"]=\"\\u0643\",e[\"\\ufeda\"]=\"\\u0643\",e[\"\\ufedb\"]=\"\\u0643\",e[\"\\ufedc\"]=\"\\u0643\",e[\"\\ufedd\"]=\"\\u0644\",e[\"\\ufede\"]=\"\\u0644\",e[\"\\ufedf\"]=\"\\u0644\",e[\"\\ufee0\"]=\"\\u0644\",e[\"\\ufee1\"]=\"\\u0645\",e[\"\\ufee2\"]=\"\\u0645\",e[\"\\ufee3\"]=\"\\u0645\",e[\"\\ufee4\"]=\"\\u0645\",e[\"\\ufee5\"]=\"\\u0646\",e[\"\\ufee6\"]=\"\\u0646\",e[\"\\ufee7\"]=\"\\u0646\",e[\"\\ufee8\"]=\"\\u0646\",e[\"\\ufee9\"]=\"\\u0647\",e[\"\\ufeea\"]=\"\\u0647\",e[\"\\ufeeb\"]=\"\\u0647\",e[\"\\ufeec\"]=\"\\u0647\",e[\"\\ufeed\"]=\"\\u0648\",e[\"\\ufeee\"]=\"\\u0648\",e[\"\\ufeef\"]=\"\\u0649\",e[\"\\ufef0\"]=\"\\u0649\",e[\"\\ufef1\"]=\"\\u064a\",e[\"\\ufef2\"]=\"\\u064a\",e[\"\\ufef3\"]=\"\\u064a\",e[\"\\ufef4\"]=\"\\u064a\",e[\"\\ufef5\"]=\"\\u0644\\u0622\",e[\"\\ufef6\"]=\"\\u0644\\u0622\",e[\"\\ufef7\"]=\"\\u0644\\u0623\",e[\"\\ufef8\"]=\"\\u0644\\u0623\",e[\"\\ufef9\"]=\"\\u0644\\u0625\",e[\"\\ufefa\"]=\"\\u0644\\u0625\",e[\"\\ufefb\"]=\"\\u0644\\u0627\",e[\"\\ufefc\"]=\"\\u0644\\u0627\"});t.mapSpecialUnicodeValues=function(e){return e>=65520&&e<=65535?0:e>=62976&&e<=63743?n()[e]||e:173===e?45:e},t.reverseIfRtl=function(e){var t=e.length;if(t<=1||!function(e){var t=i[13];return e>=t.begin&&e<t.end||e>=(t=i[11]).begin&&e<t.end}(e.charCodeAt(0)))return e;for(var r=\"\",a=t-1;a>=0;a--)r+=e[a];return r},t.getUnicodeRangeFor=function(e){for(var t=0,r=i.length;t<r;t++){var a=i[t];if(e>=a.begin&&e<a.end)return t}return-1},t.getNormalizedUnicodes=o,t.getUnicodeForGlyph=function(e,t){var r=t[e];if(void 0!==r)return r;if(!e)return-1;if(\"u\"===e[0]){var a,n=e.length;if(7===n&&\"n\"===e[1]&&\"i\"===e[2])a=e.substring(3);else{if(!(n>=5&&n<=7))return-1;a=e.substring(1)}if(a===a.toUpperCase()&&(r=parseInt(a,16))>=0)return r}return-1}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.FontRendererFactory=void 0;var a=r(6),n=r(174),i=r(177),o=r(176),s=r(157);function c(e){return(c=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function l(e,t){return!t||\"object\"!==c(t)&&\"function\"!==typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function g(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function p(e,t,r){return t&&g(e.prototype,t),r&&g(e,r),e}var m=function(){function e(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}function t(e,t){return e[t]<<8|e[t+1]}function r(r,n,i){var o,s,c,l=1===t(r,n+2)?e(r,n+8):e(r,n+16),u=t(r,n+l);if(4===u){t(r,n+l+2);var h=t(r,n+l+6)>>1;for(s=n+l+14,o=[],c=0;c<h;c++,s+=2)o[c]={end:t(r,s)};for(s+=2,c=0;c<h;c++,s+=2)o[c].start=t(r,s);for(c=0;c<h;c++,s+=2)o[c].idDelta=t(r,s);for(c=0;c<h;c++,s+=2){var f=t(r,s);if(0!==f){o[c].ids=[];for(var d=0,g=o[c].end-o[c].start+1;d<g;d++)o[c].ids[d]=t(r,s+f),f+=2}}return o}if(12===u){e(r,n+l+4);var p=e(r,n+l+12);for(s=n+l+16,o=[],c=0;c<p;c++)o.push({start:e(r,s),end:e(r,s+4),idDelta:e(r,s+8)-e(r,s)}),s+=12;return o}throw new a.FormatError(\"unsupported cmap: \".concat(u))}function c(e,t,r,a){var i=new n.CFFParser(new s.Stream(e,t,r-t),{},a).parse();return{glyphs:i.charStrings.objects,subrs:i.topDict.privateDict&&i.topDict.privateDict.subrsIndex&&i.topDict.privateDict.subrsIndex.objects,gsubrs:i.globalSubrIndex&&i.globalSubrIndex.objects,isCFFCIDFont:i.isCIDFont,fdSelect:i.fdSelect,fdArray:i.fdArray}}function f(e,t){for(var r=t.codePointAt(0),a=0,n=0,i=e.length-1;n<i;){var o=n+i+1>>1;r<e[o].start?i=o-1:n=o}return e[n].start<=r&&r<=e[n].end&&(a=e[n].idDelta+(e[n].ids?e[n].ids[r-e[n].start]:r)&65535),{charCode:r,glyphId:a}}var g=[],m=function(){function e(t){d(this,e),this.constructor===e&&(0,a.unreachable)(\"Cannot initialize CompiledFont.\"),this.fontMatrix=t,this.compiledGlyphs=Object.create(null),this.compiledCharCodeToGlyphId=Object.create(null)}return p(e,[{key:\"getPathJs\",value:function(e){var t=f(this.cmap,e),r=this.compiledGlyphs[t.glyphId];return r||(r=this.compileGlyph(this.glyphs[t.glyphId],t.glyphId),this.compiledGlyphs[t.glyphId]=r),void 0===this.compiledCharCodeToGlyphId[t.charCode]&&(this.compiledCharCodeToGlyphId[t.charCode]=t.glyphId),r}},{key:\"compileGlyph\",value:function(e,t){if(!e||0===e.length||14===e[0])return g;var r=this.fontMatrix;if(this.isCFFCIDFont){var n=this.fdSelect.getFDIndex(t);if(n>=0&&n<this.fdArray.length)r=this.fdArray[n].getByName(\"FontMatrix\")||a.FONT_IDENTITY_MATRIX;else(0,a.warn)(\"Invalid fd index for glyph index.\")}var i=[];return i.push({cmd:\"save\"}),i.push({cmd:\"transform\",args:r.slice()}),i.push({cmd:\"scale\",args:[\"size\",\"-size\"]}),this.compileGlyphImpl(e,i,t),i.push({cmd:\"restore\"}),i}},{key:\"compileGlyphImpl\",value:function(){(0,a.unreachable)(\"Children classes should implement this.\")}},{key:\"hasBuiltPath\",value:function(e){var t=f(this.cmap,e);return void 0!==this.compiledGlyphs[t.glyphId]&&void 0!==this.compiledCharCodeToGlyphId[t.charCode]}}]),e}(),v=function(e){function t(e,r,a){var n;return d(this,t),(n=l(this,u(t).call(this,a||[488e-6,0,0,488e-6,0,0]))).glyphs=e,n.cmap=r,n}return h(t,m),p(t,[{key:\"compileGlyphImpl\",value:function(e,t){!function e(t,r,a){function n(e,t){r.push({cmd:\"moveTo\",args:[e,t]})}function i(e,t){r.push({cmd:\"lineTo\",args:[e,t]})}function o(e,t,a,n){r.push({cmd:\"quadraticCurveTo\",args:[e,t,a,n]})}var s,c=0,l=(t[c]<<24|t[c+1]<<16)>>16,u=0,h=0;if(c+=10,l<0)do{s=t[c]<<8|t[c+1];var f,d,g=t[c+2]<<8|t[c+3];c+=4,1&s?(f=(t[c]<<24|t[c+1]<<16)>>16,d=(t[c+2]<<24|t[c+3]<<16)>>16,c+=4):(f=t[c++],d=t[c++]),2&s?(u=f,h=d):(u=0,h=0);var p=1,m=1,v=0,b=0;8&s?(p=m=(t[c]<<24|t[c+1]<<16)/1073741824,c+=2):64&s?(p=(t[c]<<24|t[c+1]<<16)/1073741824,m=(t[c+2]<<24|t[c+3]<<16)/1073741824,c+=4):128&s&&(p=(t[c]<<24|t[c+1]<<16)/1073741824,v=(t[c+2]<<24|t[c+3]<<16)/1073741824,b=(t[c+4]<<24|t[c+5]<<16)/1073741824,m=(t[c+6]<<24|t[c+7]<<16)/1073741824,c+=8);var y=a.glyphs[g];y&&(r.push({cmd:\"save\"}),r.push({cmd:\"transform\",args:[p,v,b,m,u,h]}),e(y,r,a),r.push({cmd:\"restore\"}))}while(32&s);else{var w,k,S=[];for(w=0;w<l;w++)S.push(t[c]<<8|t[c+1]),c+=2;c+=2+(t[c]<<8|t[c+1]);for(var C=S[S.length-1]+1,x=[];x.length<C;){var A=1;for(8&(s=t[c++])&&(A+=t[c++]);A-- >0;)x.push({flags:s})}for(w=0;w<C;w++){switch(18&x[w].flags){case 0:u+=(t[c]<<24|t[c+1]<<16)>>16,c+=2;break;case 2:u-=t[c++];break;case 18:u+=t[c++]}x[w].x=u}for(w=0;w<C;w++){switch(36&x[w].flags){case 0:h+=(t[c]<<24|t[c+1]<<16)>>16,c+=2;break;case 4:h-=t[c++];break;case 36:h+=t[c++]}x[w].y=h}var _=0;for(c=0;c<l;c++){var P=S[c],I=x.slice(_,P+1);if(1&I[0].flags)I.push(I[0]);else if(1&I[I.length-1].flags)I.unshift(I[I.length-1]);else{var E={flags:1,x:(I[0].x+I[I.length-1].x)/2,y:(I[0].y+I[I.length-1].y)/2};I.unshift(E),I.push(E)}for(n(I[0].x,I[0].y),w=1,k=I.length;w<k;w++)1&I[w].flags?i(I[w].x,I[w].y):1&I[w+1].flags?(o(I[w].x,I[w].y,I[w+1].x,I[w+1].y),w++):o(I[w].x,I[w].y,(I[w].x+I[w+1].x)/2,(I[w].y+I[w+1].y)/2);_=P+1}}}(e,t,this)}}]),t}(),b=function(e){function t(e,r,a,n){var o;return d(this,t),(o=l(this,u(t).call(this,a||[.001,0,0,.001,0,0]))).glyphs=e.glyphs,o.gsubrs=e.gsubrs||[],o.subrs=e.subrs||[],o.cmap=r,o.glyphNameMap=n||(0,i.getGlyphsUnicode)(),o.gsubrsBias=o.gsubrs.length<1240?107:o.gsubrs.length<33900?1131:32768,o.subrsBias=o.subrs.length<1240?107:o.subrs.length<33900?1131:32768,o.isCFFCIDFont=e.isCFFCIDFont,o.fdSelect=e.fdSelect,o.fdArray=e.fdArray,o}return h(t,m),p(t,[{key:\"compileGlyphImpl\",value:function(e,t,r){!function e(t,r,n,i){var s=[],c=0,l=0,u=0;function h(e,t){r.push({cmd:\"moveTo\",args:[e,t]})}function d(e,t){r.push({cmd:\"lineTo\",args:[e,t]})}function g(e,t,a,n,i,o){r.push({cmd:\"bezierCurveTo\",args:[e,t,a,n,i,o]})}!function t(p){for(var m=0;m<p.length;){var v,b,y,w,k,S,C,x,A=!1,_=p[m++];switch(_){case 1:case 3:u+=s.length>>1,A=!0;break;case 4:l+=s.pop(),h(c,l),A=!0;break;case 5:for(;s.length>0;)c+=s.shift(),l+=s.shift(),d(c,l);break;case 6:for(;s.length>0&&(d(c+=s.shift(),l),0!==s.length);)l+=s.shift(),d(c,l);break;case 7:for(;s.length>0&&(l+=s.shift(),d(c,l),0!==s.length);)d(c+=s.shift(),l);break;case 8:for(;s.length>0;)v=c+s.shift(),y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w+s.shift(),g(v,y,b,w,c,l);break;case 10:if(C=s.pop(),x=null,n.isCFFCIDFont){var P=n.fdSelect.getFDIndex(i);if(P>=0&&P<n.fdArray.length){var I=n.fdArray[P],E=void 0;if(I.privateDict&&I.privateDict.subrsIndex&&(E=I.privateDict.subrsIndex.objects),E){var T=E.length;x=E[C+=T<1240?107:T<33900?1131:32768]}}else(0,a.warn)(\"Invalid fd index for glyph index.\")}else x=n.subrs[C+n.subrsBias];x&&t(x);break;case 11:return;case 12:switch(_=p[m++]){case 34:b=(v=c+s.shift())+s.shift(),k=l+s.shift(),c=b+s.shift(),g(v,l,b,k,c,k),b=(v=c+s.shift())+s.shift(),c=b+s.shift(),g(v,k,b,l,c,l);break;case 35:v=c+s.shift(),y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w+s.shift(),g(v,y,b,w,c,l),v=c+s.shift(),y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w+s.shift(),g(v,y,b,w,c,l),s.pop();break;case 36:g(v=c+s.shift(),k=l+s.shift(),b=v+s.shift(),S=k+s.shift(),c=b+s.shift(),S),g(v=c+s.shift(),S,b=v+s.shift(),S+s.shift(),c=b+s.shift(),l);break;case 37:var O=c,F=l;v=c+s.shift(),y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w+s.shift(),g(v,y,b,w,c,l),v=c+s.shift(),y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b,l=w,Math.abs(c-O)>Math.abs(l-F)?c+=s.shift():l+=s.shift(),g(v,y,b,w,c,l);break;default:throw new a.FormatError(\"unknown operator: 12 \".concat(_))}break;case 14:if(s.length>=4){var R=s.pop(),B=s.pop();l=s.pop(),c=s.pop(),r.push({cmd:\"save\"}),r.push({cmd:\"translate\",args:[c,l]});var M=f(n.cmap,String.fromCharCode(n.glyphNameMap[o.StandardEncoding[R]]));e(n.glyphs[M.glyphId],r,n,M.glyphId),r.push({cmd:\"restore\"}),M=f(n.cmap,String.fromCharCode(n.glyphNameMap[o.StandardEncoding[B]])),e(n.glyphs[M.glyphId],r,n,M.glyphId)}return;case 18:u+=s.length>>1,A=!0;break;case 19:case 20:m+=(u+=s.length>>1)+7>>3,A=!0;break;case 21:l+=s.pop(),h(c+=s.pop(),l),A=!0;break;case 22:h(c+=s.pop(),l),A=!0;break;case 23:u+=s.length>>1,A=!0;break;case 24:for(;s.length>2;)v=c+s.shift(),y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w+s.shift(),g(v,y,b,w,c,l);c+=s.shift(),l+=s.shift(),d(c,l);break;case 25:for(;s.length>6;)c+=s.shift(),l+=s.shift(),d(c,l);v=c+s.shift(),y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w+s.shift(),g(v,y,b,w,c,l);break;case 26:for(s.length%2&&(c+=s.shift());s.length>0;)v=c,y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b,l=w+s.shift(),g(v,y,b,w,c,l);break;case 27:for(s.length%2&&(l+=s.shift());s.length>0;)g(v=c+s.shift(),y=l,b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w);break;case 28:s.push((p[m]<<24|p[m+1]<<16)>>16),m+=2;break;case 29:C=s.pop()+n.gsubrsBias,(x=n.gsubrs[C])&&t(x);break;case 30:for(;s.length>0&&(v=c,y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w+(1===s.length?s.shift():0),g(v,y,b,w,c,l),0!==s.length);)v=c+s.shift(),y=l,b=v+s.shift(),w=y+s.shift(),l=w+s.shift(),g(v,y,b,w,c=b+(1===s.length?s.shift():0),l);break;case 31:for(;s.length>0&&(v=c+s.shift(),y=l,b=v+s.shift(),w=y+s.shift(),l=w+s.shift(),g(v,y,b,w,c=b+(1===s.length?s.shift():0),l),0!==s.length);)v=c,y=l+s.shift(),b=v+s.shift(),w=y+s.shift(),c=b+s.shift(),l=w+(1===s.length?s.shift():0),g(v,y,b,w,c,l);break;default:if(_<32)throw new a.FormatError(\"unknown operator: \".concat(_));_<247?s.push(_-139):_<251?s.push(256*(_-247)+p[m++]+108):_<255?s.push(256*-(_-251)-p[m++]-108):(s.push((p[m]<<24|p[m+1]<<16|p[m+2]<<8|p[m+3])/65536),m+=4)}A&&(s.length=0)}}(t)}(e,t,this,r)}}]),t}();return{create:function(n,i){for(var o,s,l,u,h,f,d=new Uint8Array(n.data),g=t(d,4),p=0,m=12;p<g;p++,m+=16){var y=(0,a.bytesToString)(d.subarray(m,m+4)),w=e(d,m+8),k=e(d,m+12);switch(y){case\"cmap\":o=r(d,w);break;case\"glyf\":s=d.subarray(w,w+k);break;case\"loca\":l=d.subarray(w,w+k);break;case\"head\":f=t(d,w+18),h=t(d,w+50);break;case\"CFF \":u=c(d,w,w+k,i)}}if(s){var S=f?[1/f,0,0,1/f,0,0]:n.fontMatrix;return new v(function(e,t,r){var a,n;r?(a=4,n=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}):(a=2,n=function(e,t){return e[t]<<9|e[t+1]<<1});for(var i=[],o=n(t,0),s=a;s<t.length;s+=a){var c=n(t,s);i.push(e.subarray(o,c)),o=c}return i}(s,l,h),o,S)}return new b(u,o,n.fontMatrix,n.glyphNameMap)}}}();t.FontRendererFactory=m},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Type1Parser=void 0;var a=r(6),n=r(176),i=r(157),o=function(){var e=[4],t=[5],r=[6],n=[7],i=[8],o=[12,35],s=[14],c=[21],l=[22],u=[30],h=[31];function f(){this.width=0,this.lsb=0,this.flexing=!1,this.output=[],this.stack=[]}return f.prototype={convert:function(f,d,g){for(var p,m,v,b=f.length,y=!1,w=0;w<b;w++){var k=f[w];if(k<32){switch(12===k&&(k=(k<<8)+f[++w]),k){case 1:case 3:this.stack=[];break;case 4:if(this.flexing){if(this.stack.length<1){y=!0;break}var S=this.stack.pop();this.stack.push(0,S);break}y=this.executeCommand(1,e);break;case 5:y=this.executeCommand(2,t);break;case 6:y=this.executeCommand(1,r);break;case 7:y=this.executeCommand(1,n);break;case 8:y=this.executeCommand(6,i);break;case 9:this.stack=[];break;case 10:if(this.stack.length<1){y=!0;break}if(!d[v=this.stack.pop()]){y=!0;break}y=this.convert(d[v],d,g);break;case 11:return y;case 13:if(this.stack.length<2){y=!0;break}p=this.stack.pop(),m=this.stack.pop(),this.lsb=m,this.width=p,this.stack.push(p,m),y=this.executeCommand(2,l);break;case 14:this.output.push(s[0]);break;case 21:if(this.flexing)break;y=this.executeCommand(2,c);break;case 22:if(this.flexing){this.stack.push(0);break}y=this.executeCommand(1,l);break;case 30:y=this.executeCommand(4,u);break;case 31:y=this.executeCommand(4,h);break;case 3072:case 3073:case 3074:this.stack=[];break;case 3078:g?(this.seac=this.stack.splice(-4,4),y=this.executeCommand(0,s)):y=this.executeCommand(4,s);break;case 3079:if(this.stack.length<4){y=!0;break}this.stack.pop(),p=this.stack.pop();var C=this.stack.pop();m=this.stack.pop(),this.lsb=m,this.width=p,this.stack.push(p,m,C),y=this.executeCommand(3,c);break;case 3084:if(this.stack.length<2){y=!0;break}var x=this.stack.pop(),A=this.stack.pop();this.stack.push(A/x);break;case 3088:if(this.stack.length<2){y=!0;break}v=this.stack.pop();var _=this.stack.pop();if(0===v&&3===_){var P=this.stack.splice(this.stack.length-17,17);this.stack.push(P[2]+P[0],P[3]+P[1],P[4],P[5],P[6],P[7],P[8],P[9],P[10],P[11],P[12],P[13],P[14]),y=this.executeCommand(13,o,!0),this.flexing=!1,this.stack.push(P[15],P[16])}else 1===v&&0===_&&(this.flexing=!0);break;case 3089:break;case 3105:this.stack=[];break;default:(0,a.warn)('Unknown type 1 charstring command of \"'+k+'\"')}if(y)break}else k<=246?k-=139:k=k<=250?256*(k-247)+f[++w]+108:k<=254?-256*(k-251)-f[++w]-108:(255&f[++w])<<24|(255&f[++w])<<16|(255&f[++w])<<8|(255&f[++w])<<0,this.stack.push(k)}return y},executeCommand:function(e,t,r){var a=this.stack.length;if(e>a)return!0;for(var n=a-e,i=n;i<a;i++){var o=this.stack[i];Number.isInteger(o)?this.output.push(28,o>>8&255,255&o):(o=65536*o|0,this.output.push(255,o>>24&255,o>>16&255,o>>8&255,255&o))}return this.output.push.apply(this.output,t),r?this.stack.splice(n,e):this.stack.length=0,!1}},f}(),s=function(){var e=55665;function t(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function r(e,t,r){if(r>=e.length)return new Uint8Array(0);var a,n,i=0|t;for(a=0;a<r;a++)i=52845*(e[a]+i)+22719&65535;var o=e.length-r,s=new Uint8Array(o);for(a=r,n=0;n<o;a++,n++){var c=e[a];s[n]=c^i>>8,i=52845*(c+i)+22719&65535}return s}function s(e){return 47===e||91===e||93===e||123===e||125===e||40===e||41===e}function c(a,n,o){if(n){var s=a.getBytes(),c=!(t(s[0])&&t(s[1])&&t(s[2])&&t(s[3]));a=new i.Stream(c?r(s,e,4):function(e,r,a){var n,i,o=0|r,s=e.length,c=new Uint8Array(s>>>1);for(n=0,i=0;n<s;n++){var l=e[n];if(t(l)){var u;for(n++;n<s&&!t(u=e[n]);)n++;if(n<s){var h=parseInt(String.fromCharCode(l,u),16);c[i++]=h^o>>8,o=52845*(h+o)+22719&65535}}}return Array.prototype.slice.call(c,a,i)}(s,e,4))}this.seacAnalysisEnabled=!!o,this.stream=a,this.nextChar()}return c.prototype={readNumberArray:function(){this.getToken();for(var e=[];;){var t=this.getToken();if(null===t||\"]\"===t||\"}\"===t)break;e.push(parseFloat(t||0))}return e},readNumber:function(){var e=this.getToken();return parseFloat(e||0)},readInt:function(){var e=this.getToken();return 0|parseInt(e||0,10)},readBoolean:function(){return\"true\"===this.getToken()?1:0},nextChar:function(){return this.currentChar=this.stream.getByte()},getToken:function(){for(var e=!1,t=this.currentChar;;){if(-1===t)return null;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(!(0,a.isSpace)(t))break;t=this.nextChar()}if(s(t))return this.nextChar(),String.fromCharCode(t);var r=\"\";do{r+=String.fromCharCode(t),t=this.nextChar()}while(t>=0&&!(0,a.isSpace)(t)&&!s(t));return r},readCharStrings:function(e,t){return-1===t?e:r(e,4330,t)},extractFontProgram:function(){var e=this.stream,t=[],r=[],a=Object.create(null);a.lenIV=4;for(var n,i,s,c,l,u={subrs:[],charstrings:[],properties:{privateData:a}};null!==(n=this.getToken());)if(\"/\"===n)switch(n=this.getToken()){case\"CharStrings\":for(this.getToken(),this.getToken(),this.getToken(),this.getToken();null!==(n=this.getToken())&&\"end\"!==n;)if(\"/\"===n){var h=this.getToken();i=this.readInt(),this.getToken(),s=i>0?e.getBytes(i):new Uint8Array(0),c=u.properties.privateData.lenIV,l=this.readCharStrings(s,c),this.nextChar(),\"noaccess\"===(n=this.getToken())&&this.getToken(),r.push({glyph:h,encoded:l})}break;case\"Subrs\":for(this.readInt(),this.getToken();\"dup\"===this.getToken();){var f=this.readInt();i=this.readInt(),this.getToken(),s=i>0?e.getBytes(i):new Uint8Array(0),c=u.properties.privateData.lenIV,l=this.readCharStrings(s,c),this.nextChar(),\"noaccess\"===(n=this.getToken())&&this.getToken(),t[f]=l}break;case\"BlueValues\":case\"OtherBlues\":case\"FamilyBlues\":case\"FamilyOtherBlues\":var d=this.readNumberArray();d.length>0&&d.length,0;break;case\"StemSnapH\":case\"StemSnapV\":u.properties.privateData[n]=this.readNumberArray();break;case\"StdHW\":case\"StdVW\":u.properties.privateData[n]=this.readNumberArray()[0];break;case\"BlueShift\":case\"lenIV\":case\"BlueFuzz\":case\"BlueScale\":case\"LanguageGroup\":case\"ExpansionFactor\":u.properties.privateData[n]=this.readNumber();break;case\"ForceBold\":u.properties.privateData[n]=this.readBoolean()}for(var g=0;g<r.length;g++){h=r[g].glyph,l=r[g].encoded;var p=new o,m=p.convert(l,t,this.seacAnalysisEnabled),v=p.output;m&&(v=[14]),u.charstrings.push({glyphName:h,charstring:v,width:p.width,lsb:p.lsb,seac:p.seac})}return u},extractFontHeader:function(e){for(var t;null!==(t=this.getToken());)if(\"/\"===t)switch(t=this.getToken()){case\"FontMatrix\":var r=this.readNumberArray();e.fontMatrix=r;break;case\"Encoding\":var a,i=this.getToken();if(/^\\d+$/.test(i)){a=[];var o=0|parseInt(i,10);this.getToken();for(var s=0;s<o;s++){for(t=this.getToken();\"dup\"!==t&&\"def\"!==t;)if(null===(t=this.getToken()))return;if(\"def\"===t)break;var c=this.readInt();this.getToken();var l=this.getToken();a[c]=l,this.getToken()}}else a=(0,n.getEncoding)(i);e.builtInEncoding=a;break;case\"FontBBox\":var u=this.readNumberArray();e.ascent=Math.max(u[3],u[1]),e.descent=Math.min(u[1],u[3]),e.ascentScaled=!0}}},c}();t.Type1Parser=s},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getTilingPatternIR=function(e,t,r){var n=t.getArray(\"Matrix\"),i=a.Util.normalizeRect(t.getArray(\"BBox\")),o=t.get(\"XStep\"),s=t.get(\"YStep\"),c=t.get(\"PaintType\"),l=t.get(\"TilingType\");if(i[2]-i[0]===0||i[3]-i[1]===0)throw new a.FormatError(\"Invalid getTilingPatternIR /BBox array: [\".concat(i,\"].\"));return[\"TilingPattern\",r,e,n,i,o,s,c,l]},t.Pattern=void 0;var a=r(6),n=r(168),i=r(155),o={FUNCTION_BASED:1,AXIAL:2,RADIAL:3,FREE_FORM_MESH:4,LATTICE_FORM_MESH:5,COONS_PATCH_MESH:6,TENSOR_PATCH_MESH:7},s=function(){function e(){(0,a.unreachable)(\"should not call Pattern constructor\")}return e.prototype={getPattern:function(e){(0,a.unreachable)(\"Should not call Pattern.getStyle: \".concat(e))}},e.parseShading=function(e,t,r,n,s,l){var u=(0,i.isStream)(e)?e.dict:e,h=u.get(\"ShadingType\");try{switch(h){case o.AXIAL:case o.RADIAL:return new c.RadialAxial(u,t,r,n,l);case o.FREE_FORM_MESH:case o.LATTICE_FORM_MESH:case o.COONS_PATCH_MESH:case o.TENSOR_PATCH_MESH:return new c.Mesh(e,t,r,n,l);default:throw new a.FormatError(\"Unsupported ShadingType: \"+h)}}catch(f){if(f instanceof a.MissingDataException)throw f;return s.send(\"UnsupportedFeature\",{featureId:a.UNSUPPORTED_FEATURES.shadingPattern}),(0,a.warn)(f),new c.Dummy}},e}();t.Pattern=s;var c={};c.SMALL_NUMBER=1e-6,c.RadialAxial=function(){function e(e,t,r,i,s){this.matrix=t,this.coordsArr=e.getArray(\"Coords\"),this.shadingType=e.get(\"ShadingType\"),this.type=\"Pattern\";var l=e.get(\"ColorSpace\",\"CS\");l=n.ColorSpace.parse(l,r,i,s),this.cs=l;var u=0,h=1;if(e.has(\"Domain\")){var f=e.getArray(\"Domain\");u=f[0],h=f[1]}var d=!1,g=!1;if(e.has(\"Extend\")){var p=e.getArray(\"Extend\");d=p[0],g=p[1]}if(this.shadingType===o.RADIAL&&(!d||!g)){var m=this.coordsArr[0],v=this.coordsArr[1],b=this.coordsArr[2],y=this.coordsArr[3],w=this.coordsArr[4],k=this.coordsArr[5],S=Math.sqrt((m-y)*(m-y)+(v-w)*(v-w));b<=k+S&&k<=b+S&&(0,a.warn)(\"Unsupported radial gradient.\")}this.extendStart=d,this.extendEnd=g;var C=e.get(\"Function\"),x=s.createFromArray(C),A=h-u,_=A/10,P=this.colorStops=[];if(u>=h||_<=0)(0,a.info)(\"Bad shading domain.\");else{for(var I,E=new Float32Array(l.numComps),T=new Float32Array(1),O=u;O<=h;O+=_){T[0]=O,x(T,0,E,0),I=l.getRgb(E,0);var F=a.Util.makeCssRgb(I[0],I[1],I[2]);P.push([(O-u)/A,F])}var R=\"transparent\";e.has(\"Background\")&&(I=l.getRgb(e.get(\"Background\"),0),R=a.Util.makeCssRgb(I[0],I[1],I[2])),d||(P.unshift([0,R]),P[1][0]+=c.SMALL_NUMBER),g||(P[P.length-1][0]-=c.SMALL_NUMBER,P.push([1,R])),this.colorStops=P}}return e.prototype={getIR:function(){var e,t,r,n,i,s=this.coordsArr,c=this.shadingType;c===o.AXIAL?(t=[s[0],s[1]],r=[s[2],s[3]],n=null,i=null,e=\"axial\"):c===o.RADIAL?(t=[s[0],s[1]],r=[s[3],s[4]],n=s[2],i=s[5],e=\"radial\"):(0,a.unreachable)(\"getPattern type unknown: \".concat(c));var l=this.matrix;if(l&&(t=a.Util.applyTransform(t,l),r=a.Util.applyTransform(r,l),c===o.RADIAL)){var u=a.Util.singularValueDecompose2dScale(l);n*=u[0],i*=u[1]}return[\"RadialAxial\",e,this.colorStops,t,r,n,i]}},e}(),c.Mesh=function(){function e(e,t){this.stream=e,this.context=t,this.buffer=0,this.bufferLength=0;var r=t.numComps;this.tmpCompsBuf=new Float32Array(r);var a=t.colorSpace.numComps;this.tmpCsCompsBuf=t.colorFn?new Float32Array(a):this.tmpCompsBuf}e.prototype={get hasData(){if(this.stream.end)return this.stream.pos<this.stream.end;if(this.bufferLength>0)return!0;var e=this.stream.getByte();return!(e<0)&&(this.buffer=e,this.bufferLength=8,!0)},readBits:function(e){var t=this.buffer,r=this.bufferLength;if(32===e){if(0===r)return(this.stream.getByte()<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte())>>>0;t=t<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte();var a=this.stream.getByte();return this.buffer=a&(1<<r)-1,(t<<8-r|(255&a)>>r)>>>0}if(8===e&&0===r)return this.stream.getByte();for(;r<e;)t=t<<8|this.stream.getByte(),r+=8;return r-=e,this.bufferLength=r,this.buffer=t&(1<<r)-1,t>>r},align:function(){this.buffer=0,this.bufferLength=0},readFlag:function(){return this.readBits(this.context.bitsPerFlag)},readCoordinate:function(){var e=this.context.bitsPerCoordinate,t=this.readBits(e),r=this.readBits(e),a=this.context.decode,n=e<32?1/((1<<e)-1):2.3283064365386963e-10;return[t*n*(a[1]-a[0])+a[0],r*n*(a[3]-a[2])+a[2]]},readComponents:function(){for(var e=this.context.numComps,t=this.context.bitsPerComponent,r=t<32?1/((1<<t)-1):2.3283064365386963e-10,a=this.context.decode,n=this.tmpCompsBuf,i=0,o=4;i<e;i++,o+=2){var s=this.readBits(t);n[i]=s*r*(a[o+1]-a[o])+a[o]}var c=this.tmpCsCompsBuf;return this.context.colorFn&&this.context.colorFn(n,0,c,0),this.context.colorSpace.getRgb(c,0)}};var t=3,r=20,s=20,c=function(){var e=[];return function(t){return e[t]||(e[t]=function(e){for(var t=[],r=0;r<=e;r++){var a=r/e,n=1-a;t.push(new Float32Array([n*n*n,3*a*n*n,3*a*a*n,a*a*a]))}return t}(t)),e[t]}}();function l(e,n){var i=e.figures[n];(0,a.assert)(\"patch\"===i.type,\"Unexpected patch mesh figure\");var o=e.coords,l=e.colors,u=i.coords,h=i.colors,f=Math.min(o[u[0]][0],o[u[3]][0],o[u[12]][0],o[u[15]][0]),d=Math.min(o[u[0]][1],o[u[3]][1],o[u[12]][1],o[u[15]][1]),g=Math.max(o[u[0]][0],o[u[3]][0],o[u[12]][0],o[u[15]][0]),p=Math.max(o[u[0]][1],o[u[3]][1],o[u[12]][1],o[u[15]][1]),m=Math.ceil((g-f)*s/(e.bounds[2]-e.bounds[0]));m=Math.max(t,Math.min(r,m));var v=Math.ceil((p-d)*s/(e.bounds[3]-e.bounds[1]));v=Math.max(t,Math.min(r,v));for(var b=m+1,y=new Int32Array((v+1)*b),w=new Int32Array((v+1)*b),k=0,S=new Uint8Array(3),C=new Uint8Array(3),x=l[h[0]],A=l[h[1]],_=l[h[2]],P=l[h[3]],I=c(v),E=c(m),T=0;T<=v;T++){S[0]=(x[0]*(v-T)+_[0]*T)/v|0,S[1]=(x[1]*(v-T)+_[1]*T)/v|0,S[2]=(x[2]*(v-T)+_[2]*T)/v|0,C[0]=(A[0]*(v-T)+P[0]*T)/v|0,C[1]=(A[1]*(v-T)+P[1]*T)/v|0,C[2]=(A[2]*(v-T)+P[2]*T)/v|0;for(var O=0;O<=m;O++,k++)if(0!==T&&T!==v||0!==O&&O!==m){for(var F=0,R=0,B=0,M=0;M<=3;M++)for(var D=0;D<=3;D++,B++){var L=I[T][M]*E[O][D];F+=o[u[B]][0]*L,R+=o[u[B]][1]*L}y[k]=o.length,o.push([F,R]),w[k]=l.length;var N=new Uint8Array(3);N[0]=(S[0]*(m-O)+C[0]*O)/m|0,N[1]=(S[1]*(m-O)+C[1]*O)/m|0,N[2]=(S[2]*(m-O)+C[2]*O)/m|0,l.push(N)}}y[0]=u[0],w[0]=h[0],y[m]=u[3],w[m]=h[1],y[b*v]=u[12],w[b*v]=h[2],y[b*v+m]=u[15],w[b*v+m]=h[3],e.figures[n]={type:\"lattice\",coords:y,colors:w,verticesPerRow:b}}function u(e){for(var t=e.coords[0][0],r=e.coords[0][1],a=t,n=r,i=1,o=e.coords.length;i<o;i++){var s=e.coords[i][0],c=e.coords[i][1];t=t>s?s:t,r=r>c?c:r,a=a<s?s:a,n=n<c?c:n}e.bounds=[t,r,a,n]}function h(t,r,s,c,h){if(!(0,i.isStream)(t))throw new a.FormatError(\"Mesh data is not a stream\");var f=t.dict;this.matrix=r,this.shadingType=f.get(\"ShadingType\"),this.type=\"Pattern\",this.bbox=f.getArray(\"BBox\");var d=f.get(\"ColorSpace\",\"CS\");d=n.ColorSpace.parse(d,s,c,h),this.cs=d,this.background=f.has(\"Background\")?d.getRgb(f.get(\"Background\"),0):null;var g=f.get(\"Function\"),p=g?h.createFromArray(g):null;this.coords=[],this.colors=[],this.figures=[];var m=new e(t,{bitsPerCoordinate:f.get(\"BitsPerCoordinate\"),bitsPerComponent:f.get(\"BitsPerComponent\"),bitsPerFlag:f.get(\"BitsPerFlag\"),decode:f.getArray(\"Decode\"),colorFn:p,colorSpace:d,numComps:p?1:d.numComps}),v=!1;switch(this.shadingType){case o.FREE_FORM_MESH:!function(e,t){for(var r=e.coords,n=e.colors,i=[],o=[],s=0;t.hasData;){var c=t.readFlag(),l=t.readCoordinate(),u=t.readComponents();if(0===s){if(!(0<=c&&c<=2))throw new a.FormatError(\"Unknown type4 flag\");switch(c){case 0:s=3;break;case 1:o.push(o[o.length-2],o[o.length-1]),s=1;break;case 2:o.push(o[o.length-3],o[o.length-1]),s=1}i.push(c)}o.push(r.length),r.push(l),n.push(u),s--,t.align()}e.figures.push({type:\"triangles\",coords:new Int32Array(o),colors:new Int32Array(o)})}(this,m);break;case o.LATTICE_FORM_MESH:var b=0|f.get(\"VerticesPerRow\");if(b<2)throw new a.FormatError(\"Invalid VerticesPerRow\");!function(e,t,r){for(var a=e.coords,n=e.colors,i=[];t.hasData;){var o=t.readCoordinate(),s=t.readComponents();i.push(a.length),a.push(o),n.push(s)}e.figures.push({type:\"lattice\",coords:new Int32Array(i),colors:new Int32Array(i),verticesPerRow:r})}(this,m,b);break;case o.COONS_PATCH_MESH:!function(e,t){for(var r=e.coords,n=e.colors,i=new Int32Array(16),o=new Int32Array(4);t.hasData;){var s,c,l=t.readFlag();if(!(0<=l&&l<=3))throw new a.FormatError(\"Unknown type6 flag\");var u=r.length;for(s=0,c=0!==l?8:12;s<c;s++)r.push(t.readCoordinate());var h,f,d,g,p=n.length;for(s=0,c=0!==l?2:4;s<c;s++)n.push(t.readComponents());switch(l){case 0:i[12]=u+3,i[13]=u+4,i[14]=u+5,i[15]=u+6,i[8]=u+2,i[11]=u+7,i[4]=u+1,i[7]=u+8,i[0]=u,i[1]=u+11,i[2]=u+10,i[3]=u+9,o[2]=p+1,o[3]=p+2,o[0]=p,o[1]=p+3;break;case 1:h=i[12],f=i[13],d=i[14],g=i[15],i[12]=g,i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=d,i[11]=u+3,i[4]=f,i[7]=u+4,i[0]=h,i[1]=u+7,i[2]=u+6,i[3]=u+5,h=o[2],f=o[3],o[2]=f,o[3]=p,o[0]=h,o[1]=p+1;break;case 2:h=i[15],f=i[11],i[12]=i[3],i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=i[7],i[11]=u+3,i[4]=f,i[7]=u+4,i[0]=h,i[1]=u+7,i[2]=u+6,i[3]=u+5,h=o[3],o[2]=o[1],o[3]=p,o[0]=h,o[1]=p+1;break;case 3:i[12]=i[0],i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=i[1],i[11]=u+3,i[4]=i[2],i[7]=u+4,i[0]=i[3],i[1]=u+7,i[2]=u+6,i[3]=u+5,o[2]=o[0],o[3]=p,o[0]=o[1],o[1]=p+1}i[5]=r.length,r.push([(-4*r[i[0]][0]-r[i[15]][0]+6*(r[i[4]][0]+r[i[1]][0])-2*(r[i[12]][0]+r[i[3]][0])+3*(r[i[13]][0]+r[i[7]][0]))/9,(-4*r[i[0]][1]-r[i[15]][1]+6*(r[i[4]][1]+r[i[1]][1])-2*(r[i[12]][1]+r[i[3]][1])+3*(r[i[13]][1]+r[i[7]][1]))/9]),i[6]=r.length,r.push([(-4*r[i[3]][0]-r[i[12]][0]+6*(r[i[2]][0]+r[i[7]][0])-2*(r[i[0]][0]+r[i[15]][0])+3*(r[i[4]][0]+r[i[14]][0]))/9,(-4*r[i[3]][1]-r[i[12]][1]+6*(r[i[2]][1]+r[i[7]][1])-2*(r[i[0]][1]+r[i[15]][1])+3*(r[i[4]][1]+r[i[14]][1]))/9]),i[9]=r.length,r.push([(-4*r[i[12]][0]-r[i[3]][0]+6*(r[i[8]][0]+r[i[13]][0])-2*(r[i[0]][0]+r[i[15]][0])+3*(r[i[11]][0]+r[i[1]][0]))/9,(-4*r[i[12]][1]-r[i[3]][1]+6*(r[i[8]][1]+r[i[13]][1])-2*(r[i[0]][1]+r[i[15]][1])+3*(r[i[11]][1]+r[i[1]][1]))/9]),i[10]=r.length,r.push([(-4*r[i[15]][0]-r[i[0]][0]+6*(r[i[11]][0]+r[i[14]][0])-2*(r[i[12]][0]+r[i[3]][0])+3*(r[i[2]][0]+r[i[8]][0]))/9,(-4*r[i[15]][1]-r[i[0]][1]+6*(r[i[11]][1]+r[i[14]][1])-2*(r[i[12]][1]+r[i[3]][1])+3*(r[i[2]][1]+r[i[8]][1]))/9]),e.figures.push({type:\"patch\",coords:new Int32Array(i),colors:new Int32Array(o)})}}(this,m),v=!0;break;case o.TENSOR_PATCH_MESH:!function(e,t){for(var r=e.coords,n=e.colors,i=new Int32Array(16),o=new Int32Array(4);t.hasData;){var s,c,l=t.readFlag();if(!(0<=l&&l<=3))throw new a.FormatError(\"Unknown type7 flag\");var u=r.length;for(s=0,c=0!==l?12:16;s<c;s++)r.push(t.readCoordinate());var h,f,d,g,p=n.length;for(s=0,c=0!==l?2:4;s<c;s++)n.push(t.readComponents());switch(l){case 0:i[12]=u+3,i[13]=u+4,i[14]=u+5,i[15]=u+6,i[8]=u+2,i[9]=u+13,i[10]=u+14,i[11]=u+7,i[4]=u+1,i[5]=u+12,i[6]=u+15,i[7]=u+8,i[0]=u,i[1]=u+11,i[2]=u+10,i[3]=u+9,o[2]=p+1,o[3]=p+2,o[0]=p,o[1]=p+3;break;case 1:h=i[12],f=i[13],d=i[14],g=i[15],i[12]=g,i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=d,i[9]=u+9,i[10]=u+10,i[11]=u+3,i[4]=f,i[5]=u+8,i[6]=u+11,i[7]=u+4,i[0]=h,i[1]=u+7,i[2]=u+6,i[3]=u+5,h=o[2],f=o[3],o[2]=f,o[3]=p,o[0]=h,o[1]=p+1;break;case 2:h=i[15],f=i[11],i[12]=i[3],i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=i[7],i[9]=u+9,i[10]=u+10,i[11]=u+3,i[4]=f,i[5]=u+8,i[6]=u+11,i[7]=u+4,i[0]=h,i[1]=u+7,i[2]=u+6,i[3]=u+5,h=o[3],o[2]=o[1],o[3]=p,o[0]=h,o[1]=p+1;break;case 3:i[12]=i[0],i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=i[1],i[9]=u+9,i[10]=u+10,i[11]=u+3,i[4]=i[2],i[5]=u+8,i[6]=u+11,i[7]=u+4,i[0]=i[3],i[1]=u+7,i[2]=u+6,i[3]=u+5,o[2]=o[0],o[3]=p,o[0]=o[1],o[1]=p+1}e.figures.push({type:\"patch\",coords:new Int32Array(i),colors:new Int32Array(o)})}}(this,m),v=!0;break;default:(0,a.unreachable)(\"Unsupported mesh type.\")}if(v){u(this);for(var y=0,w=this.figures.length;y<w;y++)l(this,y)}u(this),function(e){var t,r,a,n,i=e.coords,o=new Float32Array(2*i.length);for(t=0,a=0,r=i.length;t<r;t++){var s=i[t];o[a++]=s[0],o[a++]=s[1]}e.coords=o;var c=e.colors,l=new Uint8Array(3*c.length);for(t=0,a=0,r=c.length;t<r;t++){var u=c[t];l[a++]=u[0],l[a++]=u[1],l[a++]=u[2]}e.colors=l;var h=e.figures;for(t=0,r=h.length;t<r;t++){var f=h[t],d=f.coords,g=f.colors;for(a=0,n=d.length;a<n;a++)d[a]*=2,g[a]*=3}}(this)}return h.prototype={getIR:function(){return[\"Mesh\",this.shadingType,this.coords,this.colors,this.figures,this.bounds,this.matrix,this.bbox,this.background]}},h}(),c.Dummy=function(){function e(){this.type=\"Pattern\"}return e.prototype={getIR:function(){return[\"Dummy\"]}},e}()},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.bidi=function(e,t,r){var g=!0,p=e.length;if(0===p||r)return h(e,g,r);f.length=p,d.length=p;var m,v,b=0;for(m=0;m<p;++m){f[m]=e.charAt(m);var y=e.charCodeAt(m),w=\"L\";y<=255?w=n[y]:1424<=y&&y<=1524?w=\"R\":1536<=y&&y<=1791?(w=i[255&y])||(0,a.warn)(\"Bidi: invalid Unicode character \"+y.toString(16)):1792<=y&&y<=2220&&(w=\"AL\"),\"R\"!==w&&\"AL\"!==w&&\"AN\"!==w||b++,d[m]=w}if(0===b)return h(e,g=!0);-1===t&&(b/p<.3?(g=!0,t=0):(g=!1,t=1));var k=[];for(m=0;m<p;++m)k[m]=t;var S,C=o(t)?\"R\":\"L\",x=C,A=x,_=x;for(m=0;m<p;++m)\"NSM\"===d[m]?d[m]=_:_=d[m];for(_=x,m=0;m<p;++m)\"EN\"===(S=d[m])?d[m]=\"AL\"===_?\"AN\":\"EN\":\"R\"!==S&&\"L\"!==S&&\"AL\"!==S||(_=S);for(m=0;m<p;++m)\"AL\"===(S=d[m])&&(d[m]=\"R\");for(m=1;m<p-1;++m)\"ES\"===d[m]&&\"EN\"===d[m-1]&&\"EN\"===d[m+1]&&(d[m]=\"EN\"),\"CS\"!==d[m]||\"EN\"!==d[m-1]&&\"AN\"!==d[m-1]||d[m+1]!==d[m-1]||(d[m]=d[m-1]);for(m=0;m<p;++m)if(\"EN\"===d[m]){var P;for(P=m-1;P>=0&&\"ET\"===d[P];--P)d[P]=\"EN\";for(P=m+1;P<p&&\"ET\"===d[P];++P)d[P]=\"EN\"}for(m=0;m<p;++m)\"WS\"!==(S=d[m])&&\"ES\"!==S&&\"ET\"!==S&&\"CS\"!==S||(d[m]=\"ON\");for(_=x,m=0;m<p;++m)\"EN\"===(S=d[m])?d[m]=\"L\"===_?\"L\":\"EN\":\"R\"!==S&&\"L\"!==S||(_=S);for(m=0;m<p;++m)if(\"ON\"===d[m]){var I=c(d,m+1,\"ON\"),E=x;m>0&&(E=d[m-1]);var T=A;I+1<p&&(T=d[I+1]),\"L\"!==E&&(E=\"R\"),\"L\"!==T&&(T=\"R\"),E===T&&l(d,m,I,E),m=I-1}for(m=0;m<p;++m)\"ON\"===d[m]&&(d[m]=C);for(m=0;m<p;++m)S=d[m],s(k[m])?\"R\"===S?k[m]+=1:\"AN\"!==S&&\"EN\"!==S||(k[m]+=2):\"L\"!==S&&\"AN\"!==S&&\"EN\"!==S||(k[m]+=1);var O,F=-1,R=99;for(m=0,v=k.length;m<v;++m)O=k[m],F<O&&(F=O),R>O&&o(O)&&(R=O);for(O=F;O>=R;--O){var B=-1;for(m=0,v=k.length;m<v;++m)k[m]<O?B>=0&&(u(f,B,m),B=-1):B<0&&(B=m);B>=0&&u(f,B,k.length)}for(m=0,v=f.length;m<v;++m){var M=f[m];\"<\"!==M&&\">\"!==M||(f[m]=\"\")}return h(f.join(\"\"),g)};var a=r(6),ni=[\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ON\",\"ON\",\"AL\",\"ET\",\"ET\",\"AL\",\"CS\",\"AL\",\"ON\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ET\",\"AN\",\"AN\",\"AL\",\"AL\",\"AL\",\"NSM\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\"];function o(e){return 0!==(1&e)}function s(e){return 0===(1&e)}function c(e,t,r){for(var a=t,n=e.length;a<n;++a)if(e[a]!==r)return a;return a}function l(e,t,r,a){for(var n=t;n<r;++n)e[n]=a}function u(e,t,r){for(var a=t,n=r-1;a<n;++a,--n){var i=e[a];e[a]=e[n],e[n]=i}}function h(e,t,r){return{str:e,dir:r?\"ttb\":t?\"ltr\":\"rtl\"}}var f=[],d=[]},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getMetrics=void 0;var a=r(6),n=(0,a.getLookupTableFactory)(function(e){e.Courier=600,e[\"Courier-Bold\"]=600,e[\"Courier-BoldOblique\"]=600,e[\"Courier-Oblique\"]=600,e.Helvetica=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=278,e.quotedbl=355,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=667,e.quoteright=222,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=278,e.semicolon=278,e.less=584,e.equal=584,e.greater=584,e.question=556,e.at=1015,e.A=667,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=500,e.K=667,e.L=556,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=278,e.backslash=278,e.bracketright=278,e.asciicircum=469,e.underscore=556,e.quoteleft=222,e.a=556,e.b=556,e.c=500,e.d=556,e.e=556,e.f=278,e.g=556,e.h=556,e.i=222,e.j=222,e.k=500,e.l=222,e.m=833,e.n=556,e.o=556,e.p=556,e.q=556,e.r=333,e.s=500,e.t=278,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=500,e.braceleft=334,e.bar=260,e.braceright=334,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=191,e.quotedblleft=333,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=537,e.bullet=350,e.quotesinglbase=222,e.quotedblbase=333,e.quotedblright=333,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=556,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=222,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=556,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=667,e.aacute=556,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=500,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=500,e.aring=556,e.Ncommaaccent=722,e.lacute=222,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=500,e.scedilla=500,e.iacute=278,e.lozenge=471,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=556,e.Amacron=667,e.rcaron=333,e.ccedilla=500,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=643,e.Umacron=722,e.uring=556,e.threesuperior=333,e.Ograve=778,e.Agrave=667,e.Abreve=667,e.multiply=584,e.uacute=556,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=500,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=260,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=333,e.omacron=556,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=222,e.tcaron=317,e.eogonek=556,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=556,e.zacute=500,e.iogonek=222,e.Oacute=778,e.oacute=556,e.amacron=556,e.sacute=500,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=333,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=556,e.Eogonek=667,e.dcroat=556,e.threequarters=834,e.Scedilla=667,e.lcaron=299,e.Kcommaaccent=667,e.Lacute=556,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=556,e.onehalf=834,e.lessequal=549,e.ocircumflex=556,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=556,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=556,e.Ccaron=722,e.ugrave=556,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=556,e.Rcommaaccent=722,e.Lcommaaccent=556,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=500,e.minus=584,e.Icircumflex=278,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=584,e.odieresis=556,e.udieresis=556,e.notequal=549,e.gcommaaccent=556,e.eth=556,e.zcaron=500,e.ncommaaccent=556,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-Bold\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=333,e.quotedbl=474,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=722,e.quoteright=278,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=333,e.semicolon=333,e.less=584,e.equal=584,e.greater=584,e.question=611,e.at=975,e.A=722,e.B=722,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=556,e.K=722,e.L=611,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=584,e.underscore=556,e.quoteleft=278,e.a=556,e.b=611,e.c=556,e.d=611,e.e=556,e.f=333,e.g=611,e.h=611,e.i=278,e.j=278,e.k=556,e.l=278,e.m=889,e.n=611,e.o=611,e.p=611,e.q=611,e.r=389,e.s=556,e.t=333,e.u=611,e.v=556,e.w=778,e.x=556,e.y=556,e.z=500,e.braceleft=389,e.bar=280,e.braceright=389,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=238,e.quotedblleft=500,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=611,e.fl=611,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=556,e.bullet=350,e.quotesinglbase=278,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=611,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=278,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=611,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=722,e.aacute=556,e.Ucircumflex=722,e.yacute=556,e.scommaaccent=556,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=611,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=556,e.aring=556,e.Ncommaaccent=722,e.lacute=278,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=556,e.scedilla=556,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=611,e.acircumflex=556,e.Amacron=722,e.rcaron=389,e.ccedilla=556,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=743,e.Umacron=722,e.uring=611,e.threesuperior=333,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=584,e.uacute=611,e.Tcaron=611,e.partialdiff=494,e.ydieresis=556,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=556,e.nacute=611,e.umacron=611,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=280,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=611,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=389,e.eogonek=556,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=556,e.zacute=500,e.iogonek=278,e.Oacute=778,e.oacute=611,e.amacron=556,e.sacute=556,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=611,e.twosuperior=333,e.Odieresis=778,e.mu=611,e.igrave=278,e.ohungarumlaut=611,e.Eogonek=667,e.dcroat=611,e.threequarters=834,e.Scedilla=667,e.lcaron=400,e.Kcommaaccent=722,e.Lacute=611,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=611,e.onehalf=834,e.lessequal=549,e.ocircumflex=611,e.ntilde=611,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=611,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=611,e.Ccaron=722,e.ugrave=611,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=611,e.Rcommaaccent=722,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=556,e.minus=584,e.Icircumflex=278,e.ncaron=611,e.tcommaaccent=333,e.logicalnot=584,e.odieresis=611,e.udieresis=611,e.notequal=549,e.gcommaaccent=611,e.eth=611,e.zcaron=500,e.ncommaaccent=611,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-BoldOblique\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=333,e.quotedbl=474,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=722,e.quoteright=278,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=333,e.semicolon=333,e.less=584,e.equal=584,e.greater=584,e.question=611,e.at=975,e.A=722,e.B=722,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=556,e.K=722,e.L=611,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=584,e.underscore=556,e.quoteleft=278,e.a=556,e.b=611,e.c=556,e.d=611,e.e=556,e.f=333,e.g=611,e.h=611,e.i=278,e.j=278,e.k=556,e.l=278,e.m=889,e.n=611,e.o=611,e.p=611,e.q=611,e.r=389,e.s=556,e.t=333,e.u=611,e.v=556,e.w=778,e.x=556,e.y=556,e.z=500,e.braceleft=389,e.bar=280,e.braceright=389,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=238,e.quotedblleft=500,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=611,e.fl=611,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=556,e.bullet=350,e.quotesinglbase=278,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=611,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=278,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=611,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=722,e.aacute=556,e.Ucircumflex=722,e.yacute=556,e.scommaaccent=556,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=611,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=556,e.aring=556,e.Ncommaaccent=722,e.lacute=278,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=556,e.scedilla=556,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=611,e.acircumflex=556,e.Amacron=722,e.rcaron=389,e.ccedilla=556,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=743,e.Umacron=722,e.uring=611,e.threesuperior=333,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=584,e.uacute=611,e.Tcaron=611,e.partialdiff=494,e.ydieresis=556,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=556,e.nacute=611,e.umacron=611,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=280,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=611,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=389,e.eogonek=556,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=556,e.zacute=500,e.iogonek=278,e.Oacute=778,e.oacute=611,e.amacron=556,e.sacute=556,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=611,e.twosuperior=333,e.Odieresis=778,e.mu=611,e.igrave=278,e.ohungarumlaut=611,e.Eogonek=667,e.dcroat=611,e.threequarters=834,e.Scedilla=667,e.lcaron=400,e.Kcommaaccent=722,e.Lacute=611,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=611,e.onehalf=834,e.lessequal=549,e.ocircumflex=611,e.ntilde=611,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=611,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=611,e.Ccaron=722,e.ugrave=611,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=611,e.Rcommaaccent=722,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=556,e.minus=584,e.Icircumflex=278,e.ncaron=611,e.tcommaaccent=333,e.logicalnot=584,e.odieresis=611,e.udieresis=611,e.notequal=549,e.gcommaaccent=611,e.eth=611,e.zcaron=500,e.ncommaaccent=611,e.onesuperior=333,e.imacron=278,e.Euro=556}),e[\"Helvetica-Oblique\"]=(0,a.getLookupTableFactory)(function(e){e.space=278,e.exclam=278,e.quotedbl=355,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=667,e.quoteright=222,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=278,e.semicolon=278,e.less=584,e.equal=584,e.greater=584,e.question=556,e.at=1015,e.A=667,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=500,e.K=667,e.L=556,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=278,e.backslash=278,e.bracketright=278,e.asciicircum=469,e.underscore=556,e.quoteleft=222,e.a=556,e.b=556,e.c=500,e.d=556,e.e=556,e.f=278,e.g=556,e.h=556,e.i=222,e.j=222,e.k=500,e.l=222,e.m=833,e.n=556,e.o=556,e.p=556,e.q=556,e.r=333,e.s=500,e.t=278,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=500,e.braceleft=334,e.bar=260,e.braceright=334,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=191,e.quotedblleft=333,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=537,e.bullet=350,e.quotesinglbase=222,e.quotedblbase=333,e.quotedblright=333,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=556,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=222,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=556,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=667,e.aacute=556,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=500,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=500,e.aring=556,e.Ncommaaccent=722,e.lacute=222,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=500,e.scedilla=500,e.iacute=278,e.lozenge=471,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=556,e.Amacron=667,e.rcaron=333,e.ccedilla=500,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=643,e.Umacron=722,e.uring=556,e.threesuperior=333,e.Ograve=778,e.Agrave=667,e.Abreve=667,e.multiply=584,e.uacute=556,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=500,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=260,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=333,e.omacron=556,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=222,e.tcaron=317,e.eogonek=556,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=556,e.zacute=500,e.iogonek=222,e.Oacute=778,e.oacute=556,e.amacron=556,e.sacute=500,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=333,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=556,e.Eogonek=667,e.dcroat=556,e.threequarters=834,e.Scedilla=667,e.lcaron=299,e.Kcommaaccent=667,e.Lacute=556,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=556,e.onehalf=834,e.lessequal=549,e.ocircumflex=556,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=556,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=556,e.Ccaron=722,e.ugrave=556,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=556,e.Rcommaaccent=722,e.Lcommaaccent=556,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=500,e.minus=584,e.Icircumflex=278,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=584,e.odieresis=556,e.udieresis=556,e.notequal=549,e.gcommaaccent=556,e.eth=556,e.zcaron=500,e.ncommaaccent=556,e.onesuperior=333,e.imacron=278,e.Euro=556}),e.Symbol=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.universal=713,e.numbersign=500,e.existential=549,e.percent=833,e.ampersand=778,e.suchthat=439,e.parenleft=333,e.parenright=333,e.asteriskmath=500,e.plus=549,e.comma=250,e.minus=549,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=278,e.semicolon=278,e.less=549,e.equal=549,e.greater=549,e.question=444,e.congruent=549,e.Alpha=722,e.Beta=667,e.Chi=722,e.Delta=612,e.Epsilon=611,e.Phi=763,e.Gamma=603,e.Eta=722,e.Iota=333,e.theta1=631,e.Kappa=722,e.Lambda=686,e.Mu=889,e.Nu=722,e.Omicron=722,e.Pi=768,e.Theta=741,e.Rho=556,e.Sigma=592,e.Tau=611,e.Upsilon=690,e.sigma1=439,e.Omega=768,e.Xi=645,e.Psi=795,e.Zeta=611,e.bracketleft=333,e.therefore=863,e.bracketright=333,e.perpendicular=658,e.underscore=500,e.radicalex=500,e.alpha=631,e.beta=549,e.chi=549,e.delta=494,e.epsilon=439,e.phi=521,e.gamma=411,e.eta=603,e.iota=329,e.phi1=603,e.kappa=549,e.lambda=549,e.mu=576,e.nu=521,e.omicron=549,e.pi=549,e.theta=521,e.rho=549,e.sigma=603,e.tau=439,e.upsilon=576,e.omega1=713,e.omega=686,e.xi=493,e.psi=686,e.zeta=494,e.braceleft=480,e.bar=200,e.braceright=480,e.similar=549,e.Euro=750,e.Upsilon1=620,e.minute=247,e.lessequal=549,e.fraction=167,e.infinity=713,e.florin=500,e.club=753,e.diamond=753,e.heart=753,e.spade=753,e.arrowboth=1042,e.arrowleft=987,e.arrowup=603,e.arrowright=987,e.arrowdown=603,e.degree=400,e.plusminus=549,e.second=411,e.greaterequal=549,e.multiply=549,e.proportional=713,e.partialdiff=494,e.bullet=460,e.divide=549,e.notequal=549,e.equivalence=549,e.approxequal=549,e.ellipsis=1e3,e.arrowvertex=603,e.arrowhorizex=1e3,e.carriagereturn=658,e.aleph=823,e.Ifraktur=686,e.Rfraktur=795,e.weierstrass=987,e.circlemultiply=768,e.circleplus=768,e.emptyset=823,e.intersection=768,e.union=768,e.propersuperset=713,e.reflexsuperset=713,e.notsubset=713,e.propersubset=713,e.reflexsubset=713,e.element=713,e.notelement=713,e.angle=768,e.gradient=713,e.registerserif=790,e.copyrightserif=790,e.trademarkserif=890,e.product=823,e.radical=549,e.dotmath=250,e.logicalnot=713,e.logicaland=603,e.logicalor=603,e.arrowdblboth=1042,e.arrowdblleft=987,e.arrowdblup=603,e.arrowdblright=987,e.arrowdbldown=603,e.lozenge=494,e.angleleft=329,e.registersans=790,e.copyrightsans=790,e.trademarksans=786,e.summation=713,e.parenlefttp=384,e.parenleftex=384,e.parenleftbt=384,e.bracketlefttp=384,e.bracketleftex=384,e.bracketleftbt=384,e.bracelefttp=494,e.braceleftmid=494,e.braceleftbt=494,e.braceex=494,e.angleright=329,e.integral=274,e.integraltp=686,e.integralex=686,e.integralbt=686,e.parenrighttp=384,e.parenrightex=384,e.parenrightbt=384,e.bracketrighttp=384,e.bracketrightex=384,e.bracketrightbt=384,e.bracerighttp=494,e.bracerightmid=494,e.bracerightbt=494,e.apple=790}),e[\"Times-Roman\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=408,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=564,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=278,e.semicolon=278,e.less=564,e.equal=564,e.greater=564,e.question=444,e.at=921,e.A=722,e.B=667,e.C=667,e.D=722,e.E=611,e.F=556,e.G=722,e.H=722,e.I=333,e.J=389,e.K=722,e.L=611,e.M=889,e.N=722,e.O=722,e.P=556,e.Q=722,e.R=667,e.S=556,e.T=611,e.U=722,e.V=722,e.W=944,e.X=722,e.Y=722,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=469,e.underscore=500,e.quoteleft=333,e.a=444,e.b=500,e.c=444,e.d=500,e.e=444,e.f=333,e.g=500,e.h=500,e.i=278,e.j=278,e.k=500,e.l=278,e.m=778,e.n=500,e.o=500,e.p=500,e.q=500,e.r=333,e.s=389,e.t=278,e.u=500,e.v=500,e.w=722,e.x=500,e.y=500,e.z=444,e.braceleft=480,e.bar=200,e.braceright=480,e.asciitilde=541,e.exclamdown=333,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=180,e.quotedblleft=444,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=453,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=444,e.quotedblright=444,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=444,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=889,e.ordfeminine=276,e.Lslash=611,e.Oslash=722,e.OE=889,e.ordmasculine=310,e.ae=667,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=500,e.Idieresis=333,e.eacute=444,e.abreve=444,e.uhungarumlaut=500,e.ecaron=444,e.Ydieresis=722,e.divide=564,e.Yacute=722,e.Acircumflex=722,e.aacute=444,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=444,e.Uacute=722,e.uogonek=500,e.Edieresis=611,e.Dcroat=722,e.commaaccent=250,e.copyright=760,e.Emacron=611,e.ccaron=444,e.aring=444,e.Ncommaaccent=722,e.lacute=278,e.agrave=444,e.Tcommaaccent=611,e.Cacute=667,e.atilde=444,e.Edotaccent=611,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=471,e.Rcaron=667,e.Gcommaaccent=722,e.ucircumflex=500,e.acircumflex=444,e.Amacron=722,e.rcaron=333,e.ccedilla=444,e.Zdotaccent=611,e.Thorn=556,e.Omacron=722,e.Racute=667,e.Sacute=556,e.dcaron=588,e.Umacron=722,e.uring=500,e.threesuperior=300,e.Ograve=722,e.Agrave=722,e.Abreve=722,e.multiply=564,e.uacute=500,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=611,e.adieresis=444,e.edieresis=444,e.cacute=444,e.nacute=500,e.umacron=500,e.Ncaron=722,e.Iacute=333,e.plusminus=564,e.brokenbar=200,e.registered=760,e.Gbreve=722,e.Idotaccent=333,e.summation=600,e.Egrave=611,e.racute=333,e.omacron=500,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=326,e.eogonek=444,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=444,e.zacute=444,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=444,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=500,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=611,e.dcroat=500,e.threequarters=750,e.Scedilla=556,e.lcaron=344,e.Kcommaaccent=722,e.Lacute=611,e.trademark=980,e.edotaccent=444,e.Igrave=333,e.Imacron=333,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=500,e.Uhungarumlaut=722,e.Eacute=611,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=500,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=667,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=722,e.zdotaccent=444,e.Ecaron=611,e.Iogonek=333,e.kcommaaccent=500,e.minus=564,e.Icircumflex=333,e.ncaron=500,e.tcommaaccent=278,e.logicalnot=564,e.odieresis=500,e.udieresis=500,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=444,e.ncommaaccent=500,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-Bold\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=555,e.numbersign=500,e.dollar=500,e.percent=1e3,e.ampersand=833,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=570,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=570,e.equal=570,e.greater=570,e.question=500,e.at=930,e.A=722,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=778,e.I=389,e.J=500,e.K=778,e.L=667,e.M=944,e.N=722,e.O=778,e.P=611,e.Q=778,e.R=722,e.S=556,e.T=667,e.U=722,e.V=722,e.W=1e3,e.X=722,e.Y=722,e.Z=667,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=581,e.underscore=500,e.quoteleft=333,e.a=500,e.b=556,e.c=444,e.d=556,e.e=444,e.f=333,e.g=500,e.h=556,e.i=278,e.j=333,e.k=556,e.l=278,e.m=833,e.n=556,e.o=500,e.p=556,e.q=556,e.r=444,e.s=389,e.t=333,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=444,e.braceleft=394,e.bar=220,e.braceright=394,e.asciitilde=520,e.exclamdown=333,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=278,e.quotedblleft=500,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=540,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=300,e.Lslash=667,e.Oslash=778,e.OE=1e3,e.ordmasculine=330,e.ae=722,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=556,e.Idieresis=389,e.eacute=444,e.abreve=500,e.uhungarumlaut=556,e.ecaron=444,e.Ydieresis=722,e.divide=570,e.Yacute=722,e.Acircumflex=722,e.aacute=500,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=747,e.Emacron=667,e.ccaron=444,e.aring=500,e.Ncommaaccent=722,e.lacute=278,e.agrave=500,e.Tcommaaccent=667,e.Cacute=722,e.atilde=500,e.Edotaccent=667,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=500,e.Amacron=722,e.rcaron=444,e.ccedilla=444,e.Zdotaccent=667,e.Thorn=611,e.Omacron=778,e.Racute=722,e.Sacute=556,e.dcaron=672,e.Umacron=722,e.uring=556,e.threesuperior=300,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=570,e.uacute=556,e.Tcaron=667,e.partialdiff=494,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=389,e.plusminus=570,e.brokenbar=220,e.registered=747,e.Gbreve=778,e.Idotaccent=389,e.summation=600,e.Egrave=667,e.racute=444,e.omacron=500,e.Zacute=667,e.Zcaron=667,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=416,e.eogonek=444,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=444,e.zacute=444,e.iogonek=278,e.Oacute=778,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=300,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=667,e.dcroat=556,e.threequarters=750,e.Scedilla=556,e.lcaron=394,e.Kcommaaccent=778,e.Lacute=667,e.trademark=1e3,e.edotaccent=444,e.Igrave=389,e.Imacron=389,e.Lcaron=667,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=778,e.degree=400,e.ograve=500,e.Ccaron=722,e.ugrave=556,e.radical=549,e.Dcaron=722,e.rcommaaccent=444,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=722,e.Lcommaaccent=667,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=444,e.Ecaron=667,e.Iogonek=389,e.kcommaaccent=556,e.minus=570,e.Icircumflex=389,e.ncaron=556,e.tcommaaccent=333,e.logicalnot=570,e.odieresis=500,e.udieresis=556,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=444,e.ncommaaccent=556,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-BoldItalic\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=389,e.quotedbl=555,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=570,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=570,e.equal=570,e.greater=570,e.question=500,e.at=832,e.A=667,e.B=667,e.C=667,e.D=722,e.E=667,e.F=667,e.G=722,e.H=778,e.I=389,e.J=500,e.K=667,e.L=611,e.M=889,e.N=722,e.O=722,e.P=611,e.Q=722,e.R=667,e.S=556,e.T=611,e.U=722,e.V=667,e.W=889,e.X=667,e.Y=611,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=570,e.underscore=500,e.quoteleft=333,e.a=500,e.b=500,e.c=444,e.d=500,e.e=444,e.f=333,e.g=500,e.h=556,e.i=278,e.j=278,e.k=500,e.l=278,e.m=778,e.n=556,e.o=500,e.p=500,e.q=500,e.r=389,e.s=389,e.t=278,e.u=556,e.v=444,e.w=667,e.x=500,e.y=444,e.z=389,e.braceleft=348,e.bar=220,e.braceright=348,e.asciitilde=570,e.exclamdown=389,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=278,e.quotedblleft=500,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=500,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=944,e.ordfeminine=266,e.Lslash=611,e.Oslash=722,e.OE=944,e.ordmasculine=300,e.ae=722,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=500,e.Idieresis=389,e.eacute=444,e.abreve=500,e.uhungarumlaut=556,e.ecaron=444,e.Ydieresis=611,e.divide=570,e.Yacute=611,e.Acircumflex=667,e.aacute=500,e.Ucircumflex=722,e.yacute=444,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=747,e.Emacron=667,e.ccaron=444,e.aring=500,e.Ncommaaccent=722,e.lacute=278,e.agrave=500,e.Tcommaaccent=611,e.Cacute=667,e.atilde=500,e.Edotaccent=667,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=494,e.Rcaron=667,e.Gcommaaccent=722,e.ucircumflex=556,e.acircumflex=500,e.Amacron=667,e.rcaron=389,e.ccedilla=444,e.Zdotaccent=611,e.Thorn=611,e.Omacron=722,e.Racute=667,e.Sacute=556,e.dcaron=608,e.Umacron=722,e.uring=556,e.threesuperior=300,e.Ograve=722,e.Agrave=667,e.Abreve=667,e.multiply=570,e.uacute=556,e.Tcaron=611,e.partialdiff=494,e.ydieresis=444,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=389,e.plusminus=570,e.brokenbar=220,e.registered=747,e.Gbreve=722,e.Idotaccent=389,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=500,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=366,e.eogonek=444,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=444,e.zacute=389,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=576,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=667,e.dcroat=500,e.threequarters=750,e.Scedilla=556,e.lcaron=382,e.Kcommaaccent=667,e.Lacute=611,e.trademark=1e3,e.edotaccent=444,e.Igrave=389,e.Imacron=389,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=556,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=667,e.Lcommaaccent=611,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=722,e.zdotaccent=389,e.Ecaron=667,e.Iogonek=389,e.kcommaaccent=500,e.minus=606,e.Icircumflex=389,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=606,e.odieresis=500,e.udieresis=556,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=389,e.ncommaaccent=556,e.onesuperior=300,e.imacron=278,e.Euro=500}),e[\"Times-Italic\"]=(0,a.getLookupTableFactory)(function(e){e.space=250,e.exclam=333,e.quotedbl=420,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=675,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=675,e.equal=675,e.greater=675,e.question=500,e.at=920,e.A=611,e.B=611,e.C=667,e.D=722,e.E=611,e.F=611,e.G=722,e.H=722,e.I=333,e.J=444,e.K=667,e.L=556,e.M=833,e.N=667,e.O=722,e.P=611,e.Q=722,e.R=611,e.S=500,e.T=556,e.U=722,e.V=611,e.W=833,e.X=611,e.Y=556,e.Z=556,e.bracketleft=389,e.backslash=278,e.bracketright=389,e.asciicircum=422,e.underscore=500,e.quoteleft=333,e.a=500,e.b=500,e.c=444,e.d=500,e.e=444,e.f=278,e.g=500,e.h=500,e.i=278,e.j=278,e.k=444,e.l=278,e.m=722,e.n=500,e.o=500,e.p=500,e.q=500,e.r=389,e.s=389,e.t=278,e.u=500,e.v=444,e.w=667,e.x=444,e.y=444,e.z=389,e.braceleft=400,e.bar=275,e.braceright=400,e.asciitilde=541,e.exclamdown=389,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=214,e.quotedblleft=556,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=523,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=556,e.quotedblright=556,e.guillemotright=500,e.ellipsis=889,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=889,e.AE=889,e.ordfeminine=276,e.Lslash=556,e.Oslash=722,e.OE=944,e.ordmasculine=310,e.ae=667,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=667,e.germandbls=500,e.Idieresis=333,e.eacute=444,e.abreve=500,e.uhungarumlaut=500,e.ecaron=444,e.Ydieresis=556,e.divide=675,e.Yacute=556,e.Acircumflex=611,e.aacute=500,e.Ucircumflex=722,e.yacute=444,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=500,e.Edieresis=611,e.Dcroat=722,e.commaaccent=250,e.copyright=760,e.Emacron=611,e.ccaron=444,e.aring=500,e.Ncommaaccent=667,e.lacute=278,e.agrave=500,e.Tcommaaccent=556,e.Cacute=667,e.atilde=500,e.Edotaccent=611,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=471,e.Rcaron=611,e.Gcommaaccent=722,e.ucircumflex=500,e.acircumflex=500,e.Amacron=611,e.rcaron=389,e.ccedilla=444,e.Zdotaccent=556,e.Thorn=611,e.Omacron=722,e.Racute=611,e.Sacute=500,e.dcaron=544,e.Umacron=722,e.uring=500,e.threesuperior=300,e.Ograve=722,e.Agrave=611,e.Abreve=611,e.multiply=675,e.uacute=500,e.Tcaron=556,e.partialdiff=476,e.ydieresis=444,e.Nacute=667,e.icircumflex=278,e.Ecircumflex=611,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=500,e.umacron=500,e.Ncaron=667,e.Iacute=333,e.plusminus=675,e.brokenbar=275,e.registered=760,e.Gbreve=722,e.Idotaccent=333,e.summation=600,e.Egrave=611,e.racute=389,e.omacron=500,e.Zacute=556,e.Zcaron=556,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=300,e.eogonek=444,e.Uogonek=722,e.Aacute=611,e.Adieresis=611,e.egrave=444,e.zacute=389,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=500,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=611,e.dcroat=500,e.threequarters=750,e.Scedilla=500,e.lcaron=300,e.Kcommaaccent=667,e.Lacute=556,e.trademark=980,e.edotaccent=444,e.Igrave=333,e.Imacron=333,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=500,e.Uhungarumlaut=722,e.Eacute=611,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=500,e.Scommaaccent=500,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=500,e.radical=453,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=667,e.otilde=500,e.Rcommaaccent=611,e.Lcommaaccent=556,e.Atilde=611,e.Aogonek=611,e.Aring=611,e.Otilde=722,e.zdotaccent=389,e.Ecaron=611,e.Iogonek=333,e.kcommaaccent=444,e.minus=675,e.Icircumflex=333,e.ncaron=500,e.tcommaaccent=278,e.logicalnot=675,e.odieresis=500,e.udieresis=500,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=389,e.ncommaaccent=500,e.onesuperior=300,e.imacron=278,e.Euro=500}),e.ZapfDingbats=(0,a.getLookupTableFactory)(function(e){e.space=278,e.a1=974,e.a2=961,e.a202=974,e.a3=980,e.a4=719,e.a5=789,e.a119=790,e.a118=791,e.a117=690,e.a11=960,e.a12=939,e.a13=549,e.a14=855,e.a15=911,e.a16=933,e.a105=911,e.a17=945,e.a18=974,e.a19=755,e.a20=846,e.a21=762,e.a22=761,e.a23=571,e.a24=677,e.a25=763,e.a26=760,e.a27=759,e.a28=754,e.a6=494,e.a7=552,e.a8=537,e.a9=577,e.a10=692,e.a29=786,e.a30=788,e.a31=788,e.a32=790,e.a33=793,e.a34=794,e.a35=816,e.a36=823,e.a37=789,e.a38=841,e.a39=823,e.a40=833,e.a41=816,e.a42=831,e.a43=923,e.a44=744,e.a45=723,e.a46=749,e.a47=790,e.a48=792,e.a49=695,e.a50=776,e.a51=768,e.a52=792,e.a53=759,e.a54=707,e.a55=708,e.a56=682,e.a57=701,e.a58=826,e.a59=815,e.a60=789,e.a61=789,e.a62=707,e.a63=687,e.a64=696,e.a65=689,e.a66=786,e.a67=787,e.a68=713,e.a69=791,e.a70=785,e.a71=791,e.a72=873,e.a73=761,e.a74=762,e.a203=762,e.a75=759,e.a204=759,e.a76=892,e.a77=892,e.a78=788,e.a79=784,e.a81=438,e.a82=138,e.a83=277,e.a84=415,e.a97=392,e.a98=392,e.a99=668,e.a100=668,e.a89=390,e.a90=390,e.a93=317,e.a94=317,e.a91=276,e.a92=276,e.a205=509,e.a85=509,e.a206=410,e.a86=410,e.a87=234,e.a88=234,e.a95=334,e.a96=334,e.a101=732,e.a102=544,e.a103=544,e.a104=910,e.a106=667,e.a107=760,e.a108=760,e.a112=776,e.a111=595,e.a110=694,e.a109=626,e.a120=788,e.a121=788,e.a122=788,e.a123=788,e.a124=788,e.a125=788,e.a126=788,e.a127=788,e.a128=788,e.a129=788,e.a130=788,e.a131=788,e.a132=788,e.a133=788,e.a134=788,e.a135=788,e.a136=788,e.a137=788,e.a138=788,e.a139=788,e.a140=788,e.a141=788,e.a142=788,e.a143=788,e.a144=788,e.a145=788,e.a146=788,e.a147=788,e.a148=788,e.a149=788,e.a150=788,e.a151=788,e.a152=788,e.a153=788,e.a154=788,e.a155=788,e.a156=788,e.a157=788,e.a158=788,e.a159=788,e.a160=894,e.a161=838,e.a163=1016,e.a164=458,e.a196=748,e.a165=924,e.a192=748,e.a166=918,e.a167=927,e.a168=928,e.a169=928,e.a170=834,e.a171=873,e.a172=828,e.a173=924,e.a162=924,e.a174=917,e.a175=930,e.a176=931,e.a177=463,e.a178=883,e.a179=836,e.a193=836,e.a180=867,e.a199=867,e.a181=696,e.a200=696,e.a182=874,e.a201=874,e.a183=760,e.a184=946,e.a197=771,e.a185=865,e.a194=771,e.a198=888,e.a186=967,e.a195=888,e.a187=831,e.a188=873,e.a189=927,e.a190=970,e.a191=918})});t.getMetrics=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.isPDFFunction=function(e){var t;if(\"object\"!==o(e))return!1;if((0,n.isDict)(e))t=e;else{if(!(0,n.isStream)(e))return!1;t=e.dict}return t.has(\"FunctionType\")},t.PostScriptCompiler=t.PostScriptEvaluator=t.PDFFunctionFactory=void 0;var a=r(6),n=r(155),i=r(186);function o(e){return(o=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var c={get value(){return(0,a.shadow)(this,\"value\",(0,a.isEvalSupported)())}},l=function(){function e(t){var r=t.xref,a=t.isEvalSupported,n=void 0===a||a;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.xref=r,this.isEvalSupported=!1!==n}var t,r,a;return t=e,(r=[{key:\"create\",value:function(e){return h.parse({xref:this.xref,isEvalSupported:this.isEvalSupported,fn:e})}},{key:\"createFromArray\",value:function(e){return h.parseArray({xref:this.xref,isEvalSupported:this.isEvalSupported,fnObj:e})}}])&&s(t.prototype,r),a&&s(t,a),e}();function u(e){if(!Array.isArray(e))return null;for(var t=e.length,r=0;r<t;r++)if(\"number\"!==typeof e[r]){for(var a=new Array(t),n=0;n<t;n++)a[n]=+e[n];return a}return e}t.PDFFunctionFactory=l;var h={getSampleArray:function(e,t,r,a){var n,i,o=1;for(n=0,i=e.length;n<i;n++)o*=e[n];o*=t;var s=new Array(o),c=0,l=0,u=1/(Math.pow(2,r)-1),h=a.getBytes((o*r+7)/8),f=0;for(n=0;n<o;n++){for(;c<r;)l<<=8,l|=h[f++],c+=8;c-=r,s[n]=(l>>c)*u,l&=(1<<c)-1}return s},getIR:function(e){var t=e.xref,r=e.isEvalSupported,n=e.fn,i=n.dict;i||(i=n);var o=[this.constructSampled,null,this.constructInterpolated,this.constructStiched,this.constructPostScript][i.get(\"FunctionType\")];if(!o)throw new a.FormatError(\"Unknown type of function\");return o.call(this,{xref:t,isEvalSupported:r,fn:n,dict:i})},fromIR:function(e){var t=e.xref,r=e.isEvalSupported,a=e.IR;switch(a[0]){case 0:return this.constructSampledFromIR({xref:t,isEvalSupported:r,IR:a});case 2:return this.constructInterpolatedFromIR({xref:t,isEvalSupported:r,IR:a});case 3:return this.constructStichedFromIR({xref:t,isEvalSupported:r,IR:a});default:return this.constructPostScriptFromIR({xref:t,isEvalSupported:r,IR:a})}},parse:function(e){var t=e.xref,r=e.isEvalSupported,a=e.fn,n=this.getIR({xref:t,isEvalSupported:r,fn:a});return this.fromIR({xref:t,isEvalSupported:r,IR:n})},parseArray:function(e){var t=e.xref,r=e.isEvalSupported,a=e.fnObj;if(!Array.isArray(a))return this.parse({xref:t,isEvalSupported:r,fn:a});for(var n=[],i=0,o=a.length;i<o;i++)n.push(this.parse({xref:t,isEvalSupported:r,fn:t.fetchIfRef(a[i])}));return function(e,t,r,a){for(var i=0,o=n.length;i<o;i++)n[i](e,t,r,a+i)}},constructSampled:function(e){e.xref,e.isEvalSupported;var t=e.fn,r=e.dict;function n(e){for(var t=e.length,r=[],a=0,n=0;n<t;n+=2)r[a]=[e[n],e[n+1]],++a;return r}var i=u(r.getArray(\"Domain\")),o=u(r.getArray(\"Range\"));if(!i||!o)throw new a.FormatError(\"No domain or range\");var s=i.length/2,c=o.length/2;i=n(i),o=n(o);var l=u(r.getArray(\"Size\")),h=r.get(\"BitsPerSample\"),f=r.get(\"Order\")||1;1!==f&&(0,a.info)(\"No support for cubic spline interpolation: \"+f);var d=u(r.getArray(\"Encode\"));if(d)d=n(d);else{d=[];for(var g=0;g<s;++g)d.push([0,l[g]-1])}var p=u(r.getArray(\"Decode\"));return[0,s,i,d,p=p?n(p):o,this.getSampleArray(l,c,h,t),l,c,Math.pow(2,h)-1,o]},constructSampledFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR;function r(e,t,r,a,n){return a+(n-a)/(r-t)*(e-t)}return function(e,a,n,i){var o,s,c=t[1],l=t[2],u=t[3],h=t[4],f=t[5],d=t[6],g=t[7],p=t[9],m=1<<c,v=new Float64Array(m),b=new Uint32Array(m);for(s=0;s<m;s++)v[s]=1;var y=g,w=1;for(o=0;o<c;++o){var k=l[o][0],S=l[o][1],C=r(Math.min(Math.max(e[a+o],k),S),k,S,u[o][0],u[o][1]),x=d[o],A=(C=Math.min(Math.max(C,0),x-1))<x-1?Math.floor(C):C-1,_=A+1-C,P=C-A,I=A*y,E=I+y;for(s=0;s<m;s++)s&w?(v[s]*=P,b[s]+=E):(v[s]*=_,b[s]+=I);y*=x,w<<=1}for(s=0;s<g;++s){var T=0;for(o=0;o<m;o++)T+=f[b[o]+s]*v[o];T=r(T,0,1,h[s][0],h[s][1]),n[i+s]=Math.min(Math.max(T,p[s][0]),p[s][1])}}},constructInterpolated:function(e){e.xref,e.isEvalSupported,e.fn;for(var t=e.dict,r=u(t.getArray(\"C0\"))||[0],a=u(t.getArray(\"C1\"))||[1],n=t.get(\"N\"),i=r.length,o=[],s=0;s<i;++s)o.push(a[s]-r[s]);return[2,r,o,n]},constructInterpolatedFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR,r=t[1],a=t[2],n=t[3],i=a.length;return function(e,t,o,s){for(var c=1===n?e[t]:Math.pow(e[t],n),l=0;l<i;++l)o[s+l]=r[l]+c*a[l]}},constructStiched:function(e){var t=e.xref,r=e.isEvalSupported,n=(e.fn,e.dict),i=u(n.getArray(\"Domain\"));if(!i)throw new a.FormatError(\"No domain\");if(1!==i.length/2)throw new a.FormatError(\"Bad domain for stiched function\");for(var o=n.get(\"Functions\"),s=[],c=0,l=o.length;c<l;++c)s.push(this.parse({xref:t,isEvalSupported:r,fn:t.fetchIfRef(o[c])}));return[3,i,u(n.getArray(\"Bounds\")),u(n.getArray(\"Encode\")),s]},constructStichedFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR,r=t[1],a=t[2],n=t[3],i=t[4],o=new Float32Array(1);return function(e,t,s,c){for(var l=function(e,t,r){return e>r?e=r:e<t&&(e=t),e}(e[t],r[0],r[1]),u=0,h=a.length;u<h&&!(l<a[u]);++u);var f=r[0];u>0&&(f=a[u-1]);var d=r[1];u<a.length&&(d=a[u]);var g=n[2*u],p=n[2*u+1];o[0]=f===d?g:g+(l-f)*(p-g)/(d-f),i[u](o,0,s,c)}},constructPostScript:function(e){e.xref,e.isEvalSupported;var t=e.fn,r=e.dict,n=u(r.getArray(\"Domain\")),o=u(r.getArray(\"Range\"));if(!n)throw new a.FormatError(\"No domain.\");if(!o)throw new a.FormatError(\"No range.\");var s=new i.PostScriptLexer(t);return[4,n,o,new i.PostScriptParser(s).parse()]},constructPostScriptFromIR:function(e){e.xref;var t=e.isEvalSupported,r=e.IR,n=r[1],i=r[2],o=r[3];if(t&&c.value){var s=(new g).compile(o,n,i);if(s)return new Function(\"src\",\"srcOffset\",\"dest\",\"destOffset\",s)}(0,a.info)(\"Unable to compile PS function\");var l=i.length>>1,u=n.length>>1,h=new d(o),f=Object.create(null),p=8192,m=new Float32Array(u);return function(e,t,r,a){var n,o,s=\"\",c=m;for(n=0;n<u;n++)o=e[t+n],c[n]=o,s+=o+\"_\";var d=f[s];if(void 0===d){var g=new Float32Array(l),v=h.execute(c),b=v.length-l;for(n=0;n<l;n++){o=v[b+n];var y=i[2*n];o<y?o=y:o>(y=i[2*n+1])&&(o=y),g[n]=o}p>0&&(p--,f[s]=g),r.set(g,a)}else r.set(d,a)}}};var f=function(){function e(e){this.stack=e?Array.prototype.slice.call(e,0):[]}return e.prototype={push:function(e){if(this.stack.length>=100)throw new Error(\"PostScript function stack overflow.\");this.stack.push(e)},pop:function(){if(this.stack.length<=0)throw new Error(\"PostScript function stack underflow.\");return this.stack.pop()},copy:function(e){if(this.stack.length+e>=100)throw new Error(\"PostScript function stack overflow.\");for(var t=this.stack,r=t.length-e,a=e-1;a>=0;a--,r++)t.push(t[r])},index:function(e){this.push(this.stack[this.stack.length-e-1])},roll:function(e,t){var r,a,n,i=this.stack,o=i.length-e,s=i.length-1,c=o+(t-Math.floor(t/e)*e);for(r=o,a=s;r<a;r++,a--)n=i[r],i[r]=i[a],i[a]=n;for(r=o,a=c-1;r<a;r++,a--)n=i[r],i[r]=i[a],i[a]=n;for(r=c,a=s;r<a;r++,a--)n=i[r],i[r]=i[a],i[a]=n}},e}(),d=function(){function e(e){this.operators=e}return e.prototype={execute:function(e){for(var t,r,n,i=new f(e),o=0,s=this.operators,c=s.length;o<c;)if(\"number\"!==typeof(t=s[o++]))switch(t){case\"jz\":n=i.pop(),(r=i.pop())||(o=n);break;case\"j\":o=r=i.pop();break;case\"abs\":r=i.pop(),i.push(Math.abs(r));break;case\"add\":n=i.pop(),r=i.pop(),i.push(r+n);break;case\"and\":n=i.pop(),r=i.pop(),(0,a.isBool)(r)&&(0,a.isBool)(n)?i.push(r&&n):i.push(r&n);break;case\"atan\":r=i.pop(),i.push(Math.atan(r));break;case\"bitshift\":n=i.pop(),(r=i.pop())>0?i.push(r<<n):i.push(r>>n);break;case\"ceiling\":r=i.pop(),i.push(Math.ceil(r));break;case\"copy\":r=i.pop(),i.copy(r);break;case\"cos\":r=i.pop(),i.push(Math.cos(r));break;case\"cvi\":r=0|i.pop(),i.push(r);break;case\"cvr\":break;case\"div\":n=i.pop(),r=i.pop(),i.push(r/n);break;case\"dup\":i.copy(1);break;case\"eq\":n=i.pop(),r=i.pop(),i.push(r===n);break;case\"exch\":i.roll(2,1);break;case\"exp\":n=i.pop(),r=i.pop(),i.push(Math.pow(r,n));break;case\"false\":i.push(!1);break;case\"floor\":r=i.pop(),i.push(Math.floor(r));break;case\"ge\":n=i.pop(),r=i.pop(),i.push(r>=n);break;case\"gt\":n=i.pop(),r=i.pop(),i.push(r>n);break;case\"idiv\":n=i.pop(),r=i.pop(),i.push(r/n|0);break;case\"index\":r=i.pop(),i.index(r);break;case\"le\":n=i.pop(),r=i.pop(),i.push(r<=n);break;case\"ln\":r=i.pop(),i.push(Math.log(r));break;case\"log\":r=i.pop(),i.push(Math.log(r)/Math.LN10);break;case\"lt\":n=i.pop(),r=i.pop(),i.push(r<n);break;case\"mod\":n=i.pop(),r=i.pop(),i.push(r%n);break;case\"mul\":n=i.pop(),r=i.pop(),i.push(r*n);break;case\"ne\":n=i.pop(),r=i.pop(),i.push(r!==n);break;case\"neg\":r=i.pop(),i.push(-r);break;case\"not\":r=i.pop(),(0,a.isBool)(r)?i.push(!r):i.push(~r);break;case\"or\":n=i.pop(),r=i.pop(),(0,a.isBool)(r)&&(0,a.isBool)(n)?i.push(r||n):i.push(r|n);break;case\"pop\":i.pop();break;case\"roll\":n=i.pop(),r=i.pop(),i.roll(r,n);break;case\"round\":r=i.pop(),i.push(Math.round(r));break;case\"sin\":r=i.pop(),i.push(Math.sin(r));break;case\"sqrt\":r=i.pop(),i.push(Math.sqrt(r));break;case\"sub\":n=i.pop(),r=i.pop(),i.push(r-n);break;case\"true\":i.push(!0);break;case\"truncate\":r=(r=i.pop())<0?Math.ceil(r):Math.floor(r),i.push(r);break;case\"xor\":n=i.pop(),r=i.pop(),(0,a.isBool)(r)&&(0,a.isBool)(n)?i.push(r!==n):i.push(r^n);break;default:throw new a.FormatError(\"Unknown operator \".concat(t))}else i.push(t);return i.stack}},e}();t.PostScriptEvaluator=d;var g=function(){function e(e){this.type=e}function t(t,r,a){e.call(this,\"args\"),this.index=t,this.min=r,this.max=a}function r(t){e.call(this,\"literal\"),this.number=t,this.min=t,this.max=t}function n(t,r,a,n,i){e.call(this,\"binary\"),this.op=t,this.arg1=r,this.arg2=a,this.min=n,this.max=i}function i(t,r){e.call(this,\"max\"),this.arg=t,this.min=t.min,this.max=r}function o(t,r,a){e.call(this,\"var\"),this.index=t,this.min=r,this.max=a}function s(t,r){e.call(this,\"definition\"),this.variable=t,this.arg=r}function c(){this.parts=[]}function l(e,t){return\"literal\"===t.type&&0===t.number?e:\"literal\"===e.type&&0===e.number?t:\"literal\"===t.type&&\"literal\"===e.type?new r(e.number+t.number):new n(\"+\",e,t,e.min+t.min,e.max+t.max)}function u(e,t){if(\"literal\"===t.type){if(0===t.number)return new r(0);if(1===t.number)return e;if(\"literal\"===e.type)return new r(e.number*t.number)}if(\"literal\"===e.type){if(0===e.number)return new r(0);if(1===e.number)return t}return new n(\"*\",e,t,Math.min(e.min*t.min,e.min*t.max,e.max*t.min,e.max*t.max),Math.max(e.min*t.min,e.min*t.max,e.max*t.min,e.max*t.max))}function h(e,t){if(\"literal\"===t.type){if(0===t.number)return e;if(\"literal\"===e.type)return new r(e.number-t.number)}return\"binary\"===t.type&&\"-\"===t.op&&\"literal\"===e.type&&1===e.number&&\"literal\"===t.arg1.type&&1===t.arg1.number?t.arg2:new n(\"-\",e,t,e.min-t.max,e.max-t.min)}function f(e,t){return e.min>=t?new r(t):e.max<=t?e:new i(e,t)}function d(){}return e.prototype.visit=function(e){(0,a.unreachable)(\"abstract method\")},t.prototype=Object.create(e.prototype),t.prototype.visit=function(e){e.visitArgument(this)},r.prototype=Object.create(e.prototype),r.prototype.visit=function(e){e.visitLiteral(this)},n.prototype=Object.create(e.prototype),n.prototype.visit=function(e){e.visitBinaryOperation(this)},i.prototype=Object.create(e.prototype),i.prototype.visit=function(e){e.visitMin(this)},o.prototype=Object.create(e.prototype),o.prototype.visit=function(e){e.visitVariable(this)},s.prototype=Object.create(e.prototype),s.prototype.visit=function(e){e.visitVariableDefinition(this)},c.prototype={visitArgument:function(e){this.parts.push(\"Math.max(\",e.min,\", Math.min(\",e.max,\", src[srcOffset + \",e.index,\"]))\")},visitVariable:function(e){this.parts.push(\"v\",e.index)},visitLiteral:function(e){this.parts.push(e.number)},visitBinaryOperation:function(e){this.parts.push(\"(\"),e.arg1.visit(this),this.parts.push(\" \",e.op,\" \"),e.arg2.visit(this),this.parts.push(\")\")},visitVariableDefinition:function(e){this.parts.push(\"var \"),e.variable.visit(this),this.parts.push(\" = \"),e.arg.visit(this),this.parts.push(\";\")},visitMin:function(e){this.parts.push(\"Math.min(\"),e.arg.visit(this),this.parts.push(\", \",e.max,\")\")},toString:function(){return this.parts.join(\"\")}},d.prototype={compile:function(e,a,n){var i,d,g,p,m,v,b,y,w,k,S=[],C=[],x=a.length>>1,A=n.length>>1,_=0;for(i=0;i<x;i++)S.push(new t(i,a[2*i],a[2*i+1]));for(i=0,d=e.length;i<d;i++)if(\"number\"!==typeof(k=e[i]))switch(k){case\"add\":if(S.length<2)return null;v=S.pop(),m=S.pop(),S.push(l(m,v));break;case\"cvr\":if(S.length<1)return null;break;case\"mul\":if(S.length<2)return null;v=S.pop(),m=S.pop(),S.push(u(m,v));break;case\"sub\":if(S.length<2)return null;v=S.pop(),m=S.pop(),S.push(h(m,v));break;case\"exch\":if(S.length<2)return null;b=S.pop(),y=S.pop(),S.push(b,y);break;case\"pop\":if(S.length<1)return null;S.pop();break;case\"index\":if(S.length<1)return null;if(\"literal\"!==(m=S.pop()).type)return null;if((g=m.number)<0||!Number.isInteger(g)||S.length<g)return null;if(\"literal\"===(b=S[S.length-g-1]).type||\"var\"===b.type){S.push(b);break}w=new o(_++,b.min,b.max),S[S.length-g-1]=w,S.push(w),C.push(new s(w,b));break;case\"dup\":if(S.length<1)return null;if(\"number\"===typeof e[i+1]&&\"gt\"===e[i+2]&&e[i+3]===i+7&&\"jz\"===e[i+4]&&\"pop\"===e[i+5]&&e[i+6]===e[i+1]){m=S.pop(),S.push(f(m,e[i+1])),i+=6;break}if(\"literal\"===(b=S[S.length-1]).type||\"var\"===b.type){S.push(b);break}w=new o(_++,b.min,b.max),S[S.length-1]=w,S.push(w),C.push(new s(w,b));break;case\"roll\":if(S.length<2)return null;if(v=S.pop(),m=S.pop(),\"literal\"!==v.type||\"literal\"!==m.type)return null;if(p=v.number,(g=m.number)<=0||!Number.isInteger(g)||!Number.isInteger(p)||S.length<g)return null;if(0===(p=(p%g+g)%g))break;Array.prototype.push.apply(S,S.splice(S.length-g,g-p));break;default:return null}else S.push(new r(k));if(S.length!==A)return null;var P=[];return C.forEach(function(e){var t=new c;e.visit(t),P.push(t.toString())}),S.forEach(function(e,t){var r=new c;e.visit(r);var a=n[2*t],i=n[2*t+1],o=[r.toString()];a>e.min&&(o.unshift(\"Math.max(\",a,\", \"),o.push(\")\")),i<e.max&&(o.unshift(\"Math.min(\",i,\", \"),o.push(\")\")),o.unshift(\"dest[destOffset + \",t,\"] = \"),o.push(\";\"),P.push(o.join(\"\"))}),P.join(\"\\n\")}},d}();t.PostScriptCompiler=g},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PostScriptParser=t.PostScriptLexer=void 0;var a=r(6),n=r(155);function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e,t,r){return t&&o(e.prototype,t),r&&o(e,r),e}var c=function(){function e(t){i(this,e),this.lexer=t,this.operators=[],this.token=null,this.prev=null}return s(e,[{key:\"nextToken\",value:function(){this.prev=this.token,this.token=this.lexer.getToken()}},{key:\"accept\",value:function(e){return this.token.type===e&&(this.nextToken(),!0)}},{key:\"expect\",value:function(e){if(this.accept(e))return!0;throw new a.FormatError(\"Unexpected symbol: found \".concat(this.token.type,\" expected \").concat(e,\".\"))}},{key:\"parse\",value:function(){return this.nextToken(),this.expect(l.LBRACE),this.parseBlock(),this.expect(l.RBRACE),this.operators}},{key:\"parseBlock\",value:function(){for(;;)if(this.accept(l.NUMBER))this.operators.push(this.prev.value);else if(this.accept(l.OPERATOR))this.operators.push(this.prev.value);else{if(!this.accept(l.LBRACE))return;this.parseCondition()}}},{key:\"parseCondition\",value:function(){var e=this.operators.length;if(this.operators.push(null,null),this.parseBlock(),this.expect(l.RBRACE),this.accept(l.IF))this.operators[e]=this.operators.length,this.operators[e+1]=\"jz\";else{if(!this.accept(l.LBRACE))throw new a.FormatError(\"PS Function: error parsing conditional.\");var t=this.operators.length;this.operators.push(null,null);var r=this.operators.length;this.parseBlock(),this.expect(l.RBRACE),this.expect(l.IFELSE),this.operators[t]=this.operators.length,this.operators[t+1]=\"j\",this.operators[e]=r,this.operators[e+1]=\"jz\"}}}]),e}();t.PostScriptParser=c;var l={LBRACE:0,RBRACE:1,NUMBER:2,OPERATOR:3,IF:4,IFELSE:5},u=function(){var e=Object.create(null);return function(){function t(e,r){i(this,t),this.type=e,this.value=r}return s(t,null,[{key:\"getOperator\",value:function(r){var a=e[r];return a||(e[r]=new t(l.OPERATOR,r))}},{key:\"LBRACE\",get:function(){return(0,a.shadow)(this,\"LBRACE\",new t(l.LBRACE,\"{\"))}},{key:\"RBRACE\",get:function(){return(0,a.shadow)(this,\"RBRACE\",new t(l.RBRACE,\"}\"))}},{key:\"IF\",get:function(){return(0,a.shadow)(this,\"IF\",new t(l.IF,\"IF\"))}},{key:\"IFELSE\",get:function(){return(0,a.shadow)(this,\"IFELSE\",new t(l.IFELSE,\"IFELSE\"))}}]),t}()}(),h=function(){function e(t){i(this,e),this.stream=t,this.nextChar(),this.strBuf=[]}return s(e,[{key:\"nextChar\",value:function(){return this.currentChar=this.stream.getByte()}},{key:\"getToken\",value:function(){for(var e=!1,t=this.currentChar;;){if(t<0)return n.EOF;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(!(0,a.isSpace)(t))break;t=this.nextChar()}switch(0|t){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return new u(l.NUMBER,this.getNumber());case 123:return this.nextChar(),u.LBRACE;case 125:return this.nextChar(),u.RBRACE}var r=this.strBuf;for(r.length=0,r[0]=String.fromCharCode(t);(t=this.nextChar())>=0&&(t>=65&&t<=90||t>=97&&t<=122);)r.push(String.fromCharCode(t));var i=r.join(\"\");switch(i.toLowerCase()){case\"if\":return u.IF;case\"ifelse\":return u.IFELSE;default:return u.getOperator(i)}}},{key:\"getNumber\",value:function(){var e=this.currentChar,t=this.strBuf;for(t.length=0,t[0]=String.fromCharCode(e);(e=this.nextChar())>=0&&(e>=48&&e<=57||45===e||46===e);)t.push(String.fromCharCode(e));var r=parseFloat(t.join(\"\"));if(isNaN(r))throw new a.FormatError(\"Invalid floating point number: \".concat(r));return r}}]),e}();t.PostScriptLexer=h},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MurmurHash3_64=void 0;var a=r(6),n=function(e){function t(e){this.h1=e?4294967295&e:3285377520,this.h2=e?4294967295&e:3285377520}return t.prototype={update:function(e){var t,r;if((0,a.isString)(e)){t=new Uint8Array(2*e.length),r=0;for(var n=0,i=e.length;n<i;n++){var o=e.charCodeAt(n);o<=255?t[r++]=o:(t[r++]=o>>>8,t[r++]=255&o)}}else{if(!(0,a.isArrayBuffer)(e))throw new Error(\"Wrong data format in MurmurHash3_64_update. Input must be a string or array.\");r=(t=e).byteLength}for(var s=r>>2,c=r-4*s,l=new Uint32Array(t.buffer,0,s),u=0,h=0,f=this.h1,d=this.h2,g=3432918353,p=461845907,m=0;m<s;m++)1&m?f=5*(f=(f^=u=(u=(u=(u=l[m])*g&4294901760|11601*u&65535)<<15|u>>>17)*p&4294901760|13715*u&65535)<<13|f>>>19)+3864292196:d=5*(d=(d^=h=(h=(h=(h=l[m])*g&4294901760|11601*h&65535)<<15|h>>>17)*p&4294901760|13715*h&65535)<<13|d>>>19)+3864292196;switch(u=0,c){case 3:u^=t[4*s+2]<<16;case 2:u^=t[4*s+1]<<8;case 1:u=(u=(u=(u^=t[4*s])*g&4294901760|11601*u&65535)<<15|u>>>17)*p&4294901760|13715*u&65535,1&s?f^=u:d^=u}return this.h1=f,this.h2=d,this},hexdigest:function(){var e=this.h1,t=this.h2;e=3981806797*(e^=t>>>1)&4294901760|36045*e&65535,e=444984403*(e^=(t=4283543511*t&4294901760|(2950163797*(t<<16|e>>>16)&4294901760)>>>16)>>>1)&4294901760|60499*e&65535;for(var r=0,a=[e^=(t=3301882366*t&4294901760|(3120437893*(t<<16|e>>>16)&4294901760)>>>16)>>>1,t],n=\"\";r<a.length;r++){for(var i=(a[r]>>>0).toString(16);i.length<8;)i=\"0\"+i;n+=i}return n}},t}();t.MurmurHash3_64=n},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFImage=void 0;var a=r(6),n=r(155),i=r(168),o=r(157),s=r(163),c=r(166);function l(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(c){n=!0,i=c}finally{try{a||null==s.return||s.return()}finally{if(n)throw i}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}var u=function(){function e(e,t){return t&&t.canDecode(e)?t.decode(e).catch(function(t){return(0,a.warn)(\"Native image decoding failed -- trying to recover: \"+(t&&t.message)),e}):Promise.resolve(e)}function t(e,t,r,a){return(e=t+e*r)<0?0:e>a?a:e}function r(e,t,r,a,n,i){var o,s,c,l,u=n*i,h=t<=8?new Uint8Array(u):t<=16?new Uint16Array(u):new Uint32Array(u),f=r/n,d=a/i,g=0,p=new Uint16Array(n),m=r;for(o=0;o<n;o++)p[o]=Math.floor(o*f);for(o=0;o<i;o++)for(c=Math.floor(o*d)*m,s=0;s<n;s++)l=c+p[s],h[g++]=e[l];return h}function u(e){var t=e.xref,r=e.res,o=e.image,s=e.isInline,l=void 0!==s&&s,h=e.smask,f=void 0===h?null:h,d=e.mask,g=void 0===d?null:d,p=e.isMask,m=void 0!==p&&p,v=e.pdfFunctionFactory;this.image=o;var b=o.dict,y=b.get(\"Filter\");if((0,n.isName)(y))switch(y.name){case\"JPXDecode\":var w=new c.JpxImage;w.parseImageProperties(o.stream),o.stream.reset(),o.width=w.width,o.height=w.height,o.bitsPerComponent=w.bitsPerComponent,o.numComps=w.componentsCount;break;case\"JBIG2Decode\":o.bitsPerComponent=1,o.numComps=1}var k=b.get(\"Width\",\"W\"),S=b.get(\"Height\",\"H\");if(Number.isInteger(o.width)&&o.width>0&&Number.isInteger(o.height)&&o.height>0&&(o.width!==k||o.height!==S)&&((0,a.warn)(\"PDFImage - using the Width/Height of the image data, rather than the image dictionary.\"),k=o.width,S=o.height),k<1||S<1)throw new a.FormatError(\"Invalid image width: \".concat(k,\" or \")+\"height: \".concat(S));this.width=k,this.height=S,this.interpolate=b.get(\"Interpolate\",\"I\")||!1,this.imageMask=b.get(\"ImageMask\",\"IM\")||!1,this.matte=b.get(\"Matte\")||!1;var C=o.bitsPerComponent;if(!C&&!(C=b.get(\"BitsPerComponent\",\"BPC\"))){if(!this.imageMask)throw new a.FormatError(\"Bits per component missing in image: \".concat(this.imageMask));C=1}if(this.bpc=C,!this.imageMask){var x=b.get(\"ColorSpace\",\"CS\");if(!x)switch((0,a.info)(\"JPX images (which do not require color spaces)\"),o.numComps){case 1:x=n.Name.get(\"DeviceGray\");break;case 3:x=n.Name.get(\"DeviceRGB\");break;case 4:x=n.Name.get(\"DeviceCMYK\");break;default:throw new Error(\"JPX images with \".concat(o.numComps,\" \")+\"color components not supported.\")}var A=l?r:null;this.colorSpace=i.ColorSpace.parse(x,t,A,v),this.numComps=this.colorSpace.numComps}if(this.decode=b.getArray(\"Decode\",\"D\"),this.needsDecode=!1,this.decode&&(this.colorSpace&&!this.colorSpace.isDefaultDecode(this.decode,C)||m&&!i.ColorSpace.isDefaultDecode(this.decode,1))){this.needsDecode=!0;var _=(1<<C)-1;this.decodeCoefficients=[],this.decodeAddends=[];for(var P=this.colorSpace&&\"Indexed\"===this.colorSpace.name,I=0,E=0;I<this.decode.length;I+=2,++E){var T=this.decode[I],O=this.decode[I+1];this.decodeCoefficients[E]=P?(O-T)/_:O-T,this.decodeAddends[E]=P?T:_*T}}if(f)this.smask=new u({xref:t,res:r,image:f,isInline:l,pdfFunctionFactory:v});else if(g){if((0,n.isStream)(g))g.dict.get(\"ImageMask\",\"IM\")?this.mask=new u({xref:t,res:r,image:g,isInline:l,isMask:!0,pdfFunctionFactory:v}):(0,a.warn)(\"Ignoring /Mask in image without /ImageMask.\");else this.mask=g}}return u.buildImage=function(t){t.handler;var r,i,o=t.xref,s=t.res,c=t.image,h=t.isInline,f=void 0!==h&&h,d=t.nativeDecoder,g=void 0===d?null:d,p=t.pdfFunctionFactory,m=e(c,g),v=c.dict.get(\"SMask\"),b=c.dict.get(\"Mask\");return v?(r=e(v,g),i=Promise.resolve(null)):(r=Promise.resolve(null),b?(0,n.isStream)(b)?i=e(b,g):Array.isArray(b)?i=Promise.resolve(b):((0,a.warn)(\"Unsupported mask format.\"),i=Promise.resolve(null)):i=Promise.resolve(null)),Promise.all([m,r,i]).then(function(e){var t=l(e,3),r=t[0],a=t[1],n=t[2];return new u({xref:o,res:s,image:r,isInline:f,smask:a,mask:n,pdfFunctionFactory:p})})},u.createMask=function(e){var t,r,a=e.imgArray,n=e.width,i=e.height,o=e.imageIsFromDecodeStream,s=e.inverseDecode,c=(n+7>>3)*i,l=a.byteLength;if(!o||s&&!(c===l))if(s)for((t=new Uint8ClampedArray(c)).set(a),r=l;r<c;r++)t[r]=255;else(t=new Uint8ClampedArray(l)).set(a);else t=a;if(s)for(r=0;r<l;r++)t[r]^=255;return{data:t,width:n,height:i}},u.prototype={get drawWidth(){return Math.max(this.width,this.smask&&this.smask.width||0,this.mask&&this.mask.width||0)},get drawHeight(){return Math.max(this.height,this.smask&&this.smask.height||0,this.mask&&this.mask.height||0)},decodeBuffer:function(e){var r,a,n=this.bpc,i=this.numComps,o=this.decodeAddends,s=this.decodeCoefficients,c=(1<<n)-1;if(1!==n){var l=0;for(r=0,a=this.width*this.height;r<a;r++)for(var u=0;u<i;u++)e[l]=t(e[l],o[u],s[u],c),l++}else for(r=0,a=e.length;r<a;r++)e[r]=+!e[r]},getComponents:function(e){var t=this.bpc;if(8===t)return e;var r,a,n=this.width,i=this.height,o=this.numComps,s=n*i*o,c=0,l=t<=8?new Uint8Array(s):t<=16?new Uint16Array(s):new Uint32Array(s),u=n*o,h=(1<<t)-1,f=0;if(1===t)for(var d,g,p,m=0;m<i;m++){for(g=f+(-8&u),p=f+u;f<g;)a=e[c++],l[f]=a>>7&1,l[f+1]=a>>6&1,l[f+2]=a>>5&1,l[f+3]=a>>4&1,l[f+4]=a>>3&1,l[f+5]=a>>2&1,l[f+6]=a>>1&1,l[f+7]=1&a,f+=8;if(f<p)for(a=e[c++],d=128;f<p;)l[f++]=+!!(a&d),d>>=1}else{var v=0;for(a=0,f=0,r=s;f<r;++f){for(f%u===0&&(a=0,v=0);v<t;)a=a<<8|e[c++],v+=8;var b=v-t,y=a>>b;l[f]=y<0?0:y>h?h:y,a&=(1<<b)-1,v=b}}return l},fillOpacity:function(e,t,n,i,o){var s,c,l,h,f,d,g=this.smask,p=this.mask;if(g)c=g.width,l=g.height,s=new Uint8ClampedArray(c*l),g.fillGrayBuffer(s),c===t&&l===n||(s=r(s,g.bpc,c,l,t,n));else if(p)if(p instanceof u){for(c=p.width,l=p.height,s=new Uint8ClampedArray(c*l),p.numComps=1,p.fillGrayBuffer(s),h=0,f=c*l;h<f;++h)s[h]=255-s[h];c===t&&l===n||(s=r(s,p.bpc,c,l,t,n))}else{if(!Array.isArray(p))throw new a.FormatError(\"Unknown mask format.\");s=new Uint8ClampedArray(t*n);var m=this.numComps;for(h=0,f=t*n;h<f;++h){var v=0,b=h*m;for(d=0;d<m;++d){var y=o[b+d],w=2*d;if(y<p[w]||y>p[w+1]){v=255;break}}s[h]=v}}if(s)for(h=0,d=3,f=t*i;h<f;++h,d+=4)e[d]=s[h];else for(h=0,d=3,f=t*i;h<f;++h,d+=4)e[d]=255},undoPreblend:function(e,t,r){var a=this.smask&&this.smask.matte;if(a)for(var n=this.colorSpace.getRgb(a,0),i=n[0],o=n[1],s=n[2],c=t*r*4,l=0;l<c;l+=4){var u=e[l+3];if(0!==u){var h=255/u;e[l]=(e[l]-i)*h+i,e[l+1]=(e[l+1]-o)*h+o,e[l+2]=(e[l+2]-s)*h+s}else e[l]=255,e[l+1]=255,e[l+2]=255}},createImageData:function(){var e,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],r=this.drawWidth,n=this.drawHeight,i={width:r,height:n,kind:0,data:null},c=this.numComps,l=this.width,u=this.height,h=this.bpc,f=l*c*h+7>>3;if(!t){var d;if(\"DeviceGray\"===this.colorSpace.name&&1===h?d=a.ImageKind.GRAYSCALE_1BPP:\"DeviceRGB\"!==this.colorSpace.name||8!==h||this.needsDecode||(d=a.ImageKind.RGB_24BPP),d&&!this.smask&&!this.mask&&r===l&&n===u){if(i.kind=d,e=this.getImageBytes(u*f),this.image instanceof o.DecodeStream)i.data=e;else{var g=new Uint8ClampedArray(e.length);g.set(e),i.data=g}if(this.needsDecode){(0,a.assert)(d===a.ImageKind.GRAYSCALE_1BPP,\"PDFImage.createImageData: The image must be grayscale.\");for(var p=i.data,m=0,v=p.length;m<v;m++)p[m]^=255}return i}if(this.image instanceof s.JpegStream&&!this.smask&&!this.mask){var b=u*f;switch(this.colorSpace.name){case\"DeviceGray\":b*=3;case\"DeviceRGB\":case\"DeviceCMYK\":return i.kind=a.ImageKind.RGB_24BPP,i.data=this.getImageBytes(b,r,n,!0),i}}}var y,w,k=0|(e=this.getImageBytes(u*f)).length/f*n/u,S=this.getComponents(e);return t||this.smask||this.mask?(i.kind=a.ImageKind.RGBA_32BPP,i.data=new Uint8ClampedArray(r*n*4),y=1,w=!0,this.fillOpacity(i.data,r,n,k,S)):(i.kind=a.ImageKind.RGB_24BPP,i.data=new Uint8ClampedArray(r*n*3),y=0,w=!1),this.needsDecode&&this.decodeBuffer(S),this.colorSpace.fillRgb(i.data,l,u,r,n,k,h,S,y),w&&this.undoPreblend(i.data,r,k),i},fillGrayBuffer:function(e){var t=this.numComps;if(1!==t)throw new a.FormatError(\"Reading gray scale from a color image: \".concat(t));var r,n,i=this.width,o=this.height,s=this.bpc,c=i*t*s+7>>3,l=this.getImageBytes(o*c),u=this.getComponents(l);if(1!==s){this.needsDecode&&this.decodeBuffer(u),n=i*o;var h=255/((1<<s)-1);for(r=0;r<n;++r)e[r]=h*u[r]}else if(n=i*o,this.needsDecode)for(r=0;r<n;++r)e[r]=u[r]-1&255;else for(r=0;r<n;++r)e[r]=255&-u[r]},getImageBytes:function(e,t,r){var a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return this.image.reset(),this.image.drawWidth=t||this.width,this.image.drawHeight=r||this.height,this.image.forceRGB=!!a,this.image.getBytes(e,!0)}},u}();t.PDFImage=u},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MessageHandler=d;var a,n=(a=r(2))&&a.__esModule?a:{default:a},i=r(6);function o(e){return(o=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t,r,a,n,i,o){try{var s=e[i](o),c=s.value}catch(l){return void r(l)}s.done?t(c):Promise.resolve(c).then(a,n)}function c(e,t){return l.apply(this,arguments)}function l(){var e;return e=n.default.mark(function e(t,r){var a,i=arguments;return n.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(a=i.length>2&&void 0!==i[2]?i[2]:null,t){e.next=3;break}return e.abrupt(\"return\");case 3:return e.abrupt(\"return\",t.apply(a,r));case 4:case\"end\":return e.stop()}},e,this)}),(l=function(){var t=this,r=arguments;return new Promise(function(a,n){var i=e.apply(t,r);function o(e){s(i,a,n,o,c,\"next\",e)}function c(e){s(i,a,n,o,c,\"throw\",e)}o(void 0)})}).apply(this,arguments)}function u(e){if(\"object\"!==o(e))return e;switch(e.name){case\"AbortException\":return new i.AbortException(e.message);case\"MissingPDFException\":return new i.MissingPDFException(e.message);case\"UnexpectedResponseException\":return new i.UnexpectedResponseException(e.message,e.status);default:return new i.UnknownErrorException(e.message,e.details)}}function h(e){return!(e instanceof Error)||e instanceof i.AbortException||e instanceof i.MissingPDFException||e instanceof i.UnexpectedResponseException||e instanceof i.UnknownErrorException?e:new i.UnknownErrorException(e.message,e.toString())}function f(e,t,r){t?e.resolve():e.reject(r)}function d(e,t,r){var a=this;this.sourceName=e,this.targetName=t,this.comObj=r,this.callbackId=1,this.streamId=1,this.postMessageTransfers=!0,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null);var n=this.callbacksCapabilities=Object.create(null),i=this.actionHandler=Object.create(null);this._onComObjOnMessage=function(e){var t=e.data;if(t.targetName===a.sourceName)if(t.stream)a._processStreamMessage(t);else if(t.isReply){var o=t.callbackId;if(!(t.callbackId in n))throw new Error(\"Cannot resolve callback \".concat(o));var s=n[o];delete n[o],\"error\"in t?s.reject(u(t.error)):s.resolve(t.data)}else{if(!(t.action in i))throw new Error(\"Unknown action from worker: \".concat(t.action));var c=i[t.action];if(t.callbackId){var l=a.sourceName,f=t.sourceName;Promise.resolve().then(function(){return c[0].call(c[1],t.data)}).then(function(e){r.postMessage({sourceName:l,targetName:f,isReply:!0,callbackId:t.callbackId,data:e})},function(e){r.postMessage({sourceName:l,targetName:f,isReply:!0,callbackId:t.callbackId,error:h(e)})})}else t.streamId?a._createStreamSink(t):c[0].call(c[1],t.data)}},r.addEventListener(\"message\",this._onComObjOnMessage)}d.prototype={on:function(e,t,r){var a=this.actionHandler;if(a[e])throw new Error('There is already an actionName called \"'.concat(e,'\"'));a[e]=[t,r]},send:function(e,t,r){var a={sourceName:this.sourceName,targetName:this.targetName,action:e,data:t};this.postMessage(a,r)},sendWithPromise:function(e,t,r){var a=this.callbackId++,n={sourceName:this.sourceName,targetName:this.targetName,action:e,data:t,callbackId:a},o=(0,i.createPromiseCapability)();this.callbacksCapabilities[a]=o;try{this.postMessage(n,r)}catch(s){o.reject(s)}return o.promise},sendWithStream:function(e,t,r,a){var n=this,o=this.streamId++,s=this.sourceName,c=this.targetName;return new i.ReadableStream({start:function(r){var a=(0,i.createPromiseCapability)();return n.streamControllers[o]={controller:r,startCall:a,isClosed:!1},n.postMessage({sourceName:s,targetName:c,action:e,streamId:o,data:t,desiredSize:r.desiredSize}),a.promise},pull:function(e){var t=(0,i.createPromiseCapability)();return n.streamControllers[o].pullCall=t,n.postMessage({sourceName:s,targetName:c,stream:\"pull\",streamId:o,desiredSize:e.desiredSize}),t.promise},cancel:function(e){var t=(0,i.createPromiseCapability)();return n.streamControllers[o].cancelCall=t,n.streamControllers[o].isClosed=!0,n.postMessage({sourceName:s,targetName:c,stream:\"cancel\",reason:e,streamId:o}),t.promise}},r)},_createStreamSink:function(e){var t=this,r=this,a=this.actionHandler[e.action],n=e.streamId,o=e.desiredSize,s=this.sourceName,l=e.sourceName,u=(0,i.createPromiseCapability)(),h=function(e){var r=e.stream,a=e.chunk,i=e.transfers,o=e.success,c=e.reason;t.postMessage({sourceName:s,targetName:l,stream:r,streamId:n,chunk:a,success:o,reason:c},i)},f={enqueue:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2?arguments[2]:void 0;if(!this.isCancelled){var a=this.desiredSize;this.desiredSize-=t,a>0&&this.desiredSize<=0&&(this.sinkCapability=(0,i.createPromiseCapability)(),this.ready=this.sinkCapability.promise),h({stream:\"enqueue\",chunk:e,transfers:r})}},close:function(){this.isCancelled||(this.isCancelled=!0,h({stream:\"close\"}),delete r.streamSinks[n])},error:function(e){this.isCancelled||(this.isCancelled=!0,h({stream:\"error\",reason:e}))},sinkCapability:u,onPull:null,onCancel:null,isCancelled:!1,desiredSize:o,ready:null};f.sinkCapability.resolve(),f.ready=f.sinkCapability.promise,this.streamSinks[n]=f,c(a[0],[e.data,f],a[1]).then(function(){h({stream:\"start_complete\",success:!0})},function(e){h({stream:\"start_complete\",success:!1,reason:e})})},_processStreamMessage:function(e){var t=this,r=this.sourceName,a=e.sourceName,n=e.streamId,o=function(e){var i=e.stream,o=e.success,s=e.reason;t.comObj.postMessage({sourceName:r,targetName:a,stream:i,success:o,streamId:n,reason:s})},s=function(){Promise.all([t.streamControllers[e.streamId].startCall,t.streamControllers[e.streamId].pullCall,t.streamControllers[e.streamId].cancelCall].map(function(e){return e&&(t=e.promise,Promise.resolve(t).catch(function(){}));var t})).then(function(){delete t.streamControllers[e.streamId]})};switch(e.stream){case\"start_complete\":f(this.streamControllers[e.streamId].startCall,e.success,u(e.reason));break;case\"pull_complete\":f(this.streamControllers[e.streamId].pullCall,e.success,u(e.reason));break;case\"pull\":if(!this.streamSinks[e.streamId]){o({stream:\"pull_complete\",success:!0});break}this.streamSinks[e.streamId].desiredSize<=0&&e.desiredSize>0&&this.streamSinks[e.streamId].sinkCapability.resolve(),this.streamSinks[e.streamId].desiredSize=e.desiredSize,c(this.streamSinks[e.streamId].onPull).then(function(){o({stream:\"pull_complete\",success:!0})},function(e){o({stream:\"pull_complete\",success:!1,reason:e})});break;case\"enqueue\":(0,i.assert)(this.streamControllers[e.streamId],\"enqueue should have stream controller\"),this.streamControllers[e.streamId].isClosed||this.streamControllers[e.streamId].controller.enqueue(e.chunk);break;case\"close\":if((0,i.assert)(this.streamControllers[e.streamId],\"close should have stream controller\"),this.streamControllers[e.streamId].isClosed)break;this.streamControllers[e.streamId].isClosed=!0,this.streamControllers[e.streamId].controller.close(),s();break;case\"error\":(0,i.assert)(this.streamControllers[e.streamId],\"error should have stream controller\"),this.streamControllers[e.streamId].controller.error(u(e.reason)),s();break;case\"cancel_complete\":f(this.streamControllers[e.streamId].cancelCall,e.success,u(e.reason)),s();break;case\"cancel\":if(!this.streamSinks[e.streamId])break;c(this.streamSinks[e.streamId].onCancel,[u(e.reason)]).then(function(){o({stream:\"cancel_complete\",success:!0})},function(e){o({stream:\"cancel_complete\",success:!1,reason:e})}),this.streamSinks[e.streamId].sinkCapability.reject(u(e.reason)),this.streamSinks[e.streamId].isCancelled=!0,delete this.streamSinks[e.streamId];break;default:throw new Error(\"Unexpected stream case\")}},postMessage:function(e,t){t&&this.postMessageTransfers?this.comObj.postMessage(e,t):this.comObj.postMessage(e)},destroy:function(){this.comObj.removeEventListener(\"message\",this._onComObjOnMessage)}}}])},e.exports=n()}).call(this,r(3).Buffer,r(0),r(7))},function(e,t,r){\"use strict\";(function(e){var a=r(4),n=r(5),i=r(6);function o(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(o()<t)throw new RangeError(\"Invalid typed array length\");return c.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=c.prototype:(null===e&&(e=new c(t)),e.length=t),e}function c(e,t,r){if(!c.TYPED_ARRAY_SUPPORT&&!(this instanceof c))return new c(e,t,r);if(\"number\"===typeof e){if(\"string\"===typeof t)throw new Error(\"If encoding is specified then the first argument must be a string\");return h(this,e)}return l(this,e,t,r)}function l(e,t,r,a){if(\"number\"===typeof t)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!==typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,r,a){if(t.byteLength,r<0||t.byteLength<r)throw new RangeError(\"'offset' is out of bounds\");if(t.byteLength<r+(a||0))throw new RangeError(\"'length' is out of bounds\");t=void 0===r&&void 0===a?new Uint8Array(t):void 0===a?new Uint8Array(t,r):new Uint8Array(t,r,a);c.TYPED_ARRAY_SUPPORT?(e=t).__proto__=c.prototype:e=f(e,t);return e}(e,t,r,a):\"string\"===typeof t?function(e,t,r){\"string\"===typeof r&&\"\"!==r||(r=\"utf8\");if(!c.isEncoding(r))throw new TypeError('\"encoding\" must be a valid string encoding');var a=0|g(t,r),n=(e=s(e,a)).write(t,r);n!==a&&(e=e.slice(0,n));return e}(e,t,r):function(e,t){if(c.isBuffer(t)){var r=0|d(t.length);return 0===(e=s(e,r)).length?e:(t.copy(e,0,0,r),e)}if(t){if(\"undefined\"!==typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||\"length\"in t)return\"number\"!==typeof t.length||(a=t.length)!==a?s(e,0):f(e,t);if(\"Buffer\"===t.type&&i(t.data))return f(e,t.data)}var a;throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}(e,t)}function u(e){if(\"number\"!==typeof e)throw new TypeError('\"size\" argument must be a number');if(e<0)throw new RangeError('\"size\" argument must not be negative')}function h(e,t){if(u(t),e=s(e,t<0?0:0|d(t)),!c.TYPED_ARRAY_SUPPORT)for(var r=0;r<t;++r)e[r]=0;return e}function f(e,t){var r=t.length<0?0:0|d(t.length);e=s(e,r);for(var a=0;a<r;a+=1)e[a]=255&t[a];return e}function d(e){if(e>=o())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+o().toString(16)+\" bytes\");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(\"undefined\"!==typeof ArrayBuffer&&\"function\"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;\"string\"!==typeof e&&(e=\"\"+e);var r=e.length;if(0===r)return 0;for(var a=!1;;)switch(t){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":case void 0:return q(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return j(e).length;default:if(a)return q(e).length;t=(\"\"+t).toLowerCase(),a=!0}}function p(e,t,r){var a=e[t];e[t]=e[r],e[r]=a}function m(e,t,r,a,n){if(0===e.length)return-1;if(\"string\"===typeof r?(a=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=n?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(n)return-1;r=e.length-1}else if(r<0){if(!n)return-1;r=0}if(\"string\"===typeof t&&(t=c.from(t,a)),c.isBuffer(t))return 0===t.length?-1:v(e,t,r,a,n);if(\"number\"===typeof t)return t&=255,c.TYPED_ARRAY_SUPPORT&&\"function\"===typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):v(e,[t],r,a,n);throw new TypeError(\"val must be string, number or Buffer\")}function v(e,t,r,a,n){var i,o=1,s=e.length,c=t.length;if(void 0!==a&&(\"ucs2\"===(a=String(a).toLowerCase())||\"ucs-2\"===a||\"utf16le\"===a||\"utf-16le\"===a)){if(e.length<2||t.length<2)return-1;o=2,s/=2,c/=2,r/=2}function l(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(n){var u=-1;for(i=r;i<s;i++)if(l(e,i)===l(t,-1===u?0:i-u)){if(-1===u&&(u=i),i-u+1===c)return u*o}else-1!==u&&(i-=i-u),u=-1}else for(r+c>s&&(r=s-c),i=r;i>=0;i--){for(var h=!0,f=0;f<c;f++)if(l(e,i+f)!==l(t,f)){h=!1;break}if(h)return i}return-1}function b(e,t,r,a){r=Number(r)||0;var n=e.length-r;a?(a=Number(a))>n&&(a=n):a=n;var i=t.length;if(i%2!==0)throw new TypeError(\"Invalid hex string\");a>i/2&&(a=i/2);for(var o=0;o<a;++o){var s=parseInt(t.substr(2*o,2),16);if(isNaN(s))return o;e[r+o]=s}return o}function y(e,t,r,a){return z(q(t,e.length-r),e,r,a)}function w(e,t,r,a){return z(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,a)}function k(e,t,r,a){return w(e,t,r,a)}function S(e,t,r,a){return z(j(t),e,r,a)}function C(e,t,r,a){return z(function(e,t){for(var r,a,n,i=[],o=0;o<e.length&&!((t-=2)<0);++o)r=e.charCodeAt(o),a=r>>8,n=r%256,i.push(n),i.push(a);return i}(t,e.length-r),e,r,a)}function x(e,t,r){return 0===t&&r===e.length?a.fromByteArray(e):a.fromByteArray(e.slice(t,r))}function A(e,t,r){r=Math.min(e.length,r);for(var a=[],n=t;n<r;){var i,o,s,c,l=e[n],u=null,h=l>239?4:l>223?3:l>191?2:1;if(n+h<=r)switch(h){case 1:l<128&&(u=l);break;case 2:128===(192&(i=e[n+1]))&&(c=(31&l)<<6|63&i)>127&&(u=c);break;case 3:i=e[n+1],o=e[n+2],128===(192&i)&&128===(192&o)&&(c=(15&l)<<12|(63&i)<<6|63&o)>2047&&(c<55296||c>57343)&&(u=c);break;case 4:i=e[n+1],o=e[n+2],s=e[n+3],128===(192&i)&&128===(192&o)&&128===(192&s)&&(c=(15&l)<<18|(63&i)<<12|(63&o)<<6|63&s)>65535&&c<1114112&&(u=c)}null===u?(u=65533,h=1):u>65535&&(u-=65536,a.push(u>>>10&1023|55296),u=56320|1023&u),a.push(u),n+=h}return function(e){var t=e.length;if(t<=_)return String.fromCharCode.apply(String,e);var r=\"\",a=0;for(;a<t;)r+=String.fromCharCode.apply(String,e.slice(a,a+=_));return r}(a)}t.Buffer=c,t.SlowBuffer=function(e){+e!=e&&(e=0);return c.alloc(+e)},t.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&\"function\"===typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(t){return!1}}(),t.kMaxLength=o(),c.poolSize=8192,c._augment=function(e){return e.__proto__=c.prototype,e},c.from=function(e,t,r){return l(null,e,t,r)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,\"undefined\"!==typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(e,t,r){return function(e,t,r,a){return u(t),t<=0?s(e,t):void 0!==r?\"string\"===typeof a?s(e,t).fill(r,a):s(e,t).fill(r):s(e,t)}(null,e,t,r)},c.allocUnsafe=function(e){return h(null,e)},c.allocUnsafeSlow=function(e){return h(null,e)},c.isBuffer=function(e){return!(null==e||!e._isBuffer)},c.compare=function(e,t){if(!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError(\"Arguments must be Buffers\");if(e===t)return 0;for(var r=e.length,a=t.length,n=0,i=Math.min(r,a);n<i;++n)if(e[n]!==t[n]){r=e[n],a=t[n];break}return r<a?-1:a<r?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},c.concat=function(e,t){if(!i(e))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var a=c.allocUnsafe(t),n=0;for(r=0;r<e.length;++r){var o=e[r];if(!c.isBuffer(o))throw new TypeError('\"list\" argument must be an Array of Buffers');o.copy(a,n),n+=o.length}return a},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var t=0;t<e;t+=2)p(this,t,t+1);return this},c.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var t=0;t<e;t+=4)p(this,t,t+3),p(this,t+1,t+2);return this},c.prototype.swap64=function(){var e=this.length;if(e%8!==0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var t=0;t<e;t+=8)p(this,t,t+7),p(this,t+1,t+6),p(this,t+2,t+5),p(this,t+3,t+4);return this},c.prototype.toString=function(){var e=0|this.length;return 0===e?\"\":0===arguments.length?A(this,0,e):function(e,t,r){var a=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(t>>>=0))return\"\";for(e||(e=\"utf8\");;)switch(e){case\"hex\":return E(this,t,r);case\"utf8\":case\"utf-8\":return A(this,t,r);case\"ascii\":return P(this,t,r);case\"latin1\":case\"binary\":return I(this,t,r);case\"base64\":return x(this,t,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return T(this,t,r);default:if(a)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase(),a=!0}}.apply(this,arguments)},c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){var e=\"\",r=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString(\"hex\",0,r).match(/.{2}/g).join(\" \"),this.length>r&&(e+=\" ... \")),\"<Buffer \"+e+\">\"},c.prototype.compare=function(e,t,r,a,n){if(!c.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===a&&(a=0),void 0===n&&(n=this.length),t<0||r>e.length||a<0||n>this.length)throw new RangeError(\"out of range index\");if(a>=n&&t>=r)return 0;if(a>=n)return-1;if(t>=r)return 1;if(this===e)return 0;for(var i=(n>>>=0)-(a>>>=0),o=(r>>>=0)-(t>>>=0),s=Math.min(i,o),l=this.slice(a,n),u=e.slice(t,r),h=0;h<s;++h)if(l[h]!==u[h]){i=l[h],o=u[h];break}return i<o?-1:o<i?1:0},c.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},c.prototype.indexOf=function(e,t,r){return m(this,e,t,r,!0)},c.prototype.lastIndexOf=function(e,t,r){return m(this,e,t,r,!1)},c.prototype.write=function(e,t,r,a){if(void 0===t)a=\"utf8\",r=this.length,t=0;else if(void 0===r&&\"string\"===typeof t)a=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");t|=0,isFinite(r)?(r|=0,void 0===a&&(a=\"utf8\")):(a=r,r=void 0)}var n=this.length-t;if((void 0===r||r>n)&&(r=n),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");a||(a=\"utf8\");for(var i=!1;;)switch(a){case\"hex\":return b(this,e,t,r);case\"utf8\":case\"utf-8\":return y(this,e,t,r);case\"ascii\":return w(this,e,t,r);case\"latin1\":case\"binary\":return k(this,e,t,r);case\"base64\":return S(this,e,t,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return C(this,e,t,r);default:if(i)throw new TypeError(\"Unknown encoding: \"+a);a=(\"\"+a).toLowerCase(),i=!0}},c.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var _=4096;function P(e,t,r){var a=\"\";r=Math.min(e.length,r);for(var n=t;n<r;++n)a+=String.fromCharCode(127&e[n]);return a}function I(e,t,r){var a=\"\";r=Math.min(e.length,r);for(var n=t;n<r;++n)a+=String.fromCharCode(e[n]);return a}function E(e,t,r){var a=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>a)&&(r=a);for(var n=\"\",i=t;i<r;++i)n+=U(e[i]);return n}function T(e,t,r){for(var a=e.slice(t,r),n=\"\",i=0;i<a.length;i+=2)n+=String.fromCharCode(a[i]+256*a[i+1]);return n}function O(e,t,r){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+t>r)throw new RangeError(\"Trying to access beyond buffer length\")}function F(e,t,r,a,n,i){if(!c.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(t>n||t<i)throw new RangeError('\"value\" argument is out of bounds');if(r+a>e.length)throw new RangeError(\"Index out of range\")}function R(e,t,r,a){t<0&&(t=65535+t+1);for(var n=0,i=Math.min(e.length-r,2);n<i;++n)e[r+n]=(t&255<<8*(a?n:1-n))>>>8*(a?n:1-n)}function B(e,t,r,a){t<0&&(t=4294967295+t+1);for(var n=0,i=Math.min(e.length-r,4);n<i;++n)e[r+n]=t>>>8*(a?n:3-n)&255}function M(e,t,r,a,n,i){if(r+a>e.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function D(e,t,r,a,i){return i||M(e,0,r,4),n.write(e,t,r,a,23,4),r+4}function L(e,t,r,a,i){return i||M(e,0,r,8),n.write(e,t,r,a,52,8),r+8}c.prototype.slice=function(e,t){var r,a=this.length;if((e=~~e)<0?(e+=a)<0&&(e=0):e>a&&(e=a),(t=void 0===t?a:~~t)<0?(t+=a)<0&&(t=0):t>a&&(t=a),t<e&&(t=e),c.TYPED_ARRAY_SUPPORT)(r=this.subarray(e,t)).__proto__=c.prototype;else{var n=t-e;r=new c(n,void 0);for(var i=0;i<n;++i)r[i]=this[i+e]}return r},c.prototype.readUIntLE=function(e,t,r){e|=0,t|=0,r||O(e,t,this.length);for(var a=this[e],n=1,i=0;++i<t&&(n*=256);)a+=this[e+i]*n;return a},c.prototype.readUIntBE=function(e,t,r){e|=0,t|=0,r||O(e,t,this.length);for(var a=this[e+--t],n=1;t>0&&(n*=256);)a+=this[e+--t]*n;return a},c.prototype.readUInt8=function(e,t){return t||O(e,1,this.length),this[e]},c.prototype.readUInt16LE=function(e,t){return t||O(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUInt16BE=function(e,t){return t||O(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUInt32LE=function(e,t){return t||O(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUInt32BE=function(e,t){return t||O(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readIntLE=function(e,t,r){e|=0,t|=0,r||O(e,t,this.length);for(var a=this[e],n=1,i=0;++i<t&&(n*=256);)a+=this[e+i]*n;return a>=(n*=128)&&(a-=Math.pow(2,8*t)),a},c.prototype.readIntBE=function(e,t,r){e|=0,t|=0,r||O(e,t,this.length);for(var a=t,n=1,i=this[e+--a];a>0&&(n*=256);)i+=this[e+--a]*n;return i>=(n*=128)&&(i-=Math.pow(2,8*t)),i},c.prototype.readInt8=function(e,t){return t||O(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){t||O(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt16BE=function(e,t){t||O(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},c.prototype.readInt32LE=function(e,t){return t||O(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return t||O(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readFloatLE=function(e,t){return t||O(e,4,this.length),n.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return t||O(e,4,this.length),n.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return t||O(e,8,this.length),n.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return t||O(e,8,this.length),n.read(this,e,!1,52,8)},c.prototype.writeUIntLE=function(e,t,r,a){(e=+e,t|=0,r|=0,a)||F(this,e,t,r,Math.pow(2,8*r)-1,0);var n=1,i=0;for(this[t]=255&e;++i<r&&(n*=256);)this[t+i]=e/n&255;return t+r},c.prototype.writeUIntBE=function(e,t,r,a){(e=+e,t|=0,r|=0,a)||F(this,e,t,r,Math.pow(2,8*r)-1,0);var n=r-1,i=1;for(this[t+n]=255&e;--n>=0&&(i*=256);)this[t+n]=e/i&255;return t+r},c.prototype.writeUInt8=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,1,255,0),c.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},c.prototype.writeUInt16LE=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):R(this,e,t,!0),t+2},c.prototype.writeUInt16BE=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):R(this,e,t,!1),t+2},c.prototype.writeUInt32LE=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):B(this,e,t,!0),t+4},c.prototype.writeUInt32BE=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):B(this,e,t,!1),t+4},c.prototype.writeIntLE=function(e,t,r,a){if(e=+e,t|=0,!a){var n=Math.pow(2,8*r-1);F(this,e,t,r,n-1,-n)}var i=0,o=1,s=0;for(this[t]=255&e;++i<r&&(o*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},c.prototype.writeIntBE=function(e,t,r,a){if(e=+e,t|=0,!a){var n=Math.pow(2,8*r-1);F(this,e,t,r,n-1,-n)}var i=r-1,o=1,s=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/o>>0)-s&255;return t+r},c.prototype.writeInt8=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,1,127,-128),c.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):R(this,e,t,!0),t+2},c.prototype.writeInt16BE=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):R(this,e,t,!1),t+2},c.prototype.writeInt32LE=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):B(this,e,t,!0),t+4},c.prototype.writeInt32BE=function(e,t,r){return e=+e,t|=0,r||F(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),c.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):B(this,e,t,!1),t+4},c.prototype.writeFloatLE=function(e,t,r){return D(this,e,t,!0,r)},c.prototype.writeFloatBE=function(e,t,r){return D(this,e,t,!1,r)},c.prototype.writeDoubleLE=function(e,t,r){return L(this,e,t,!0,r)},c.prototype.writeDoubleBE=function(e,t,r){return L(this,e,t,!1,r)},c.prototype.copy=function(e,t,r,a){if(r||(r=0),a||0===a||(a=this.length),t>=e.length&&(t=e.length),t||(t=0),a>0&&a<r&&(a=r),a===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(a<0)throw new RangeError(\"sourceEnd out of bounds\");a>this.length&&(a=this.length),e.length-t<a-r&&(a=e.length-t+r);var n,i=a-r;if(this===e&&r<t&&t<a)for(n=i-1;n>=0;--n)e[n+t]=this[n+r];else if(i<1e3||!c.TYPED_ARRAY_SUPPORT)for(n=0;n<i;++n)e[n+t]=this[n+r];else Uint8Array.prototype.set.call(e,this.subarray(r,r+i),t);return i},c.prototype.fill=function(e,t,r,a){if(\"string\"===typeof e){if(\"string\"===typeof t?(a=t,t=0,r=this.length):\"string\"===typeof r&&(a=r,r=this.length),1===e.length){var n=e.charCodeAt(0);n<256&&(e=n)}if(void 0!==a&&\"string\"!==typeof a)throw new TypeError(\"encoding must be a string\");if(\"string\"===typeof a&&!c.isEncoding(a))throw new TypeError(\"Unknown encoding: \"+a)}else\"number\"===typeof e&&(e&=255);if(t<0||this.length<t||this.length<r)throw new RangeError(\"Out of range index\");if(r<=t)return this;var i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),\"number\"===typeof e)for(i=t;i<r;++i)this[i]=e;else{var o=c.isBuffer(e)?e:q(new c(e,a).toString()),s=o.length;for(i=0;i<r-t;++i)this[i+t]=o[i%s]}return this};var N=/[^+\\/0-9A-Za-z-_]/g;function U(e){return e<16?\"0\"+e.toString(16):e.toString(16)}function q(e,t){var r;t=t||1/0;for(var a=e.length,n=null,i=[],o=0;o<a;++o){if((r=e.charCodeAt(o))>55295&&r<57344){if(!n){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(o+1===a){(t-=3)>-1&&i.push(239,191,189);continue}n=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),n=r;continue}r=65536+(n-55296<<10|r-56320)}else n&&(t-=3)>-1&&i.push(239,191,189);if(n=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function j(e){return a.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\\s+|\\s+$/g,\"\")}(e).replace(N,\"\")).length<2)return\"\";for(;e.length%4!==0;)e+=\"=\";return e}(e))}function z(e,t,r,a){for(var n=0;n<a&&!(n+r>=t.length||n>=e.length);++n)t[n+r]=e[n];return n}}).call(this,r(0))},function(e,t,r){\"use strict\";t.byteLength=function(e){var t=l(e),r=t[0],a=t[1];return 3*(r+a)/4-a},t.toByteArray=function(e){for(var t,r=l(e),a=r[0],o=r[1],s=new i(function(e,t,r){return 3*(t+r)/4-r}(0,a,o)),c=0,u=o>0?a-4:a,h=0;h<u;h+=4)t=n[e.charCodeAt(h)]<<18|n[e.charCodeAt(h+1)]<<12|n[e.charCodeAt(h+2)]<<6|n[e.charCodeAt(h+3)],s[c++]=t>>16&255,s[c++]=t>>8&255,s[c++]=255&t;2===o&&(t=n[e.charCodeAt(h)]<<2|n[e.charCodeAt(h+1)]>>4,s[c++]=255&t);1===o&&(t=n[e.charCodeAt(h)]<<10|n[e.charCodeAt(h+1)]<<4|n[e.charCodeAt(h+2)]>>2,s[c++]=t>>8&255,s[c++]=255&t);return s},t.fromByteArray=function(e){for(var t,r=e.length,n=r%3,i=[],o=0,s=r-n;o<s;o+=16383)i.push(u(e,o,o+16383>s?s:o+16383));1===n?(t=e[r-1],i.push(a[t>>2]+a[t<<4&63]+\"==\")):2===n&&(t=(e[r-2]<<8)+e[r-1],i.push(a[t>>10]+a[t>>4&63]+a[t<<2&63]+\"=\"));return i.join(\"\")};for(var a=[],n=[],i=\"undefined\"!==typeof Uint8Array?Uint8Array:Array,o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0,c=o.length;s<c;++s)a[s]=o[s],n[o.charCodeAt(s)]=s;function l(e){var t=e.length;if(t%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=e.indexOf(\"=\");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function u(e,t,r){for(var n,i,o=[],s=t;s<r;s+=3)n=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),o.push(a[(i=n)>>18&63]+a[i>>12&63]+a[i>>6&63]+a[63&i]);return o.join(\"\")}n[\"-\".charCodeAt(0)]=62,n[\"_\".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,r,a,n){var i,o,s=8*n-a-1,c=(1<<s)-1,l=c>>1,u=-7,h=r?n-1:0,f=r?-1:1,d=e[t+h];for(h+=f,i=d&(1<<-u)-1,d>>=-u,u+=s;u>0;i=256*i+e[t+h],h+=f,u-=8);for(o=i&(1<<-u)-1,i>>=-u,u+=a;u>0;o=256*o+e[t+h],h+=f,u-=8);if(0===i)i=1-l;else{if(i===c)return o?NaN:1/0*(d?-1:1);o+=Math.pow(2,a),i-=l}return(d?-1:1)*o*Math.pow(2,i-a)},t.write=function(e,t,r,a,n,i){var o,s,c,l=8*i-n-1,u=(1<<l)-1,h=u>>1,f=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,d=a?0:i-1,g=a?1:-1,p=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,o=u):(o=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-o))<1&&(o--,c*=2),(t+=o+h>=1?f/c:f*Math.pow(2,1-h))*c>=2&&(o++,c/=2),o+h>=u?(s=0,o=u):o+h>=1?(s=(t*c-1)*Math.pow(2,n),o+=h):(s=t*Math.pow(2,h-1)*Math.pow(2,n),o=0));n>=8;e[r+d]=255&s,d+=g,s/=256,n-=8);for(o=o<<n|s,l+=n;l>0;e[r+d]=255&o,d+=g,o/=256,l-=8);e[r+d-g]|=128*p}},function(e,t){var r={}.toString;e.exports=Array.isArray||function(e){return\"[object Array]\"==r.call(e)}},function(e,t){var r,a,n=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function o(){throw new Error(\"clearTimeout has not been defined\")}function s(e){if(r===setTimeout)return setTimeout(e,0);if((r===i||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r=\"function\"===typeof setTimeout?setTimeout:i}catch(e){r=i}try{a=\"function\"===typeof clearTimeout?clearTimeout:o}catch(e){a=o}}();var c,l=[],u=!1,h=-1;function f(){u&&c&&(u=!1,c.length?l=c.concat(l):h=-1,l.length&&d())}function d(){if(!u){var e=s(f);u=!0;for(var t=l.length;t;){for(c=l,l=[];++h<t;)c&&c[h].run();h=-1,t=l.length}c=null,u=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===o||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function g(e,t){this.fun=e,this.array=t}function p(){}n.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];l.push(new g(e,t)),1!==l.length||u||s(d)},g.prototype.run=function(){this.fun.apply(null,this.array)},n.title=\"browser\",n.browser=!0,n.env={},n.argv=[],n.version=\"\",n.versions={},n.on=p,n.addListener=p,n.once=p,n.off=p,n.removeListener=p,n.removeAllListeners=p,n.emit=p,n.prependListener=p,n.prependOnceListener=p,n.listeners=function(e){return[]},n.binding=function(e){throw new Error(\"process.binding is not supported\")},n.cwd=function(){return\"/\"},n.chdir=function(e){throw new Error(\"process.chdir is not supported\")},n.umask=function(){return 0}}]);","extractedComments":[]}